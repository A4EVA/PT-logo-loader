initSidebarItems({"macro":[["egcircle","Create a `Circle` with optional styling using a convenient macro."],["egline","Create a `Line` with optional styling using a convenient macro."],["egrectangle","Create a `Rectangle` with optional styling using a convenient macro."],["egtriangle","Create a `Triangle` with optional styling using a convenient macro."],["icoord","Create a `Coord` from a pair of integer values"],["text_12x16","Render text using the `Font12x16` font"],["text_6x12","Render text using the `Font6x12` font"],["text_6x8","Render text using the `Font6x8` font"],["text_8x16","Render text using the `Font8x16` font"],["ucoord","Create an `UnsignedCoord` from a pair of integer values"]],"mod":[["coord","2D signed coordinate in screen space"],["drawable","`Drawable` trait and helpers"],["fonts","Pixel based fonts"],["image","Image object"],["pixelcolor","Pixel color"],["prelude","Prelude"],["primitives","Graphics primitives"],["style","Styling struct to customise the look of objects."],["transform","Transformations for graphics objects"],["unsignedcoord","2D unsigned coordinate"]],"trait":[["Drawing","To use this crate in a driver, `Drawing` must be implemented. This allows display drivers to support all embedded_graphics objects through the `draw()` method."],["SizedDrawing","Very similar to the [`Drawing`] trait, but accepts drawable objects which have a known size"]]});