var searchIndex={};
searchIndex["aligned"] = {"doc":"A newtype with alignment of at least `A` bytes","i":[[3,"A2","aligned","2-byte alignment",null,null],[3,"A4","","4-byte alignment",null,null],[3,"A8","","8-byte alignment",null,null],[3,"A16","","16-byte alignment",null,null],[3,"Aligned","","A newtype with alignment of at least `A` bytes",null,null],[5,"Aligned","","Changes the alignment of `value` to be at least `A` bytes",null,[[["t"]],["aligned"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"deref","","",4,[[["self"]],["t"]]],[11,"deref_mut","","",4,[[["self"]],["t"]]],[11,"index","","",4,[[["usize"],["self"],["rangeto",["usize"]]],["aligned"]]],[11,"as_slice","","",4,[[["self"]]]],[11,"as_mut_slice","","",4,[[["self"]]]]],"p":[[3,"A2"],[3,"A4"],[3,"A8"],[3,"A16"],[3,"Aligned"]]};
searchIndex["app"] = {"doc":"Main Rust Application for PineTime with Apache Mynewt OS","i":[[5,"handle_touch","app","",null,[[["u16"]]]],[5,"main","","Main program that initialises the sensor, network driver…",null,[[]]],[5,"panic","","This function is called on panic, like an assertion…",null,[[["panicinfo"]]]],[0,"app_network","","Transmit sensor data to a CoAP server like thethings.io.…",null,null],[5,"aggregate_sensor_data","app::app_network","",null,[[["sensorvalue"]],["mynewtresult"]]],[5,"send_sensor_data","","Compose a CoAP JSON message with the Sensor Key (field…",null,[[["sensorvalue"]],["mynewtresult"]]],[0,"app_sensor","app","Poll the temperature sensor every 10 seconds. Transmit the…",null,null],[5,"start_sensor_listener","app::app_sensor","Ask Mynewt to poll or read the temperature sensor and call…",null,[[],["mynewtresult"]]],[7,"SENSOR_DEVICE","","Sensor to be polled: `temp_stub_0` is the stub temperature…",null,null],[17,"SENSOR_POLL_TIME","","Poll sensor every 30,000 milliseconds (30 seconds)  ",null,null],[17,"TEMP_SENSOR_KEY","","Use key (field name) `t` to transmit raw temperature to…",null,null],[17,"TEMP_SENSOR_TYPE","","Type of sensor: Raw temperature sensor (integer sensor…",null,null],[0,"touch_sensor","app","",null,null],[3,"TouchEventInfo","app::touch_sensor","Touch Event Info for multiple touches. Based on…",null,null],[12,"touches","","Array of touch points",0,null],[12,"count","","How many touch points",0,null],[12,"point_num","","",0,null],[3,"TouchInfo","","Touch Info for a single touch. Based on…",null,null],[12,"x","","X coordinate",1,null],[12,"y","","Y coordinate",1,null],[12,"action","","Action: 0 = down, 1 = up, 2 = contact",1,null],[12,"finger","","Which finger touched",1,null],[12,"pressure","","Pressure of touch",1,null],[12,"area","","Area touched",1,null],[5,"start_touch_sensor","","Initialise the touch controller. NFC antenna pins must…",null,[[],["mynewtresult"]]],[5,"touch_interrupt_handler","","Interrupt handler for the touch controller, triggered when…",null,[[]]],[5,"touch_event_callback","","Callback for the touch event that is triggered when a…",null,[[]]],[5,"read_touchdata","","Read touch controller data. This only works when the…",null,[[["toucheventinfo"]],["mynewtresult"]]],[5,"read_register_range","","Read a range of I2C registers from the I2C address `addr`…",null,[[["u8"]],["mynewtresult"]]],[5,"read_register","","Read the I2C register for the specified I2C address (7-bit…",null,[[["u8"]],["mynewtresult"]]],[5,"probe","","Probe the I2C bus to discover I2C devices",null,[[],["mynewtresult"]]],[5,"test","","Test reading some registers for I2C devices",null,[[],["mynewtresult"]]],[6,"MynewtGPIO","","",null,null],[6,"MynewtDelay","","",null,null],[7,"TOUCH_RESET","","Reset GPIO Pin",null,null],[7,"TOUCH_DELAY","","",null,null],[7,"TOUCH_DATA","","Touch data will be populated here",null,null],[7,"BUF","","Buffer for raw touch data",null,null],[7,"TOUCH_EVENT","","Event that will be forwarded to the Event Queue when a…",null,null],[7,"I2C_DATA","","I2C packet to be sent",null,null],[7,"I2C_BUFFER","","Buffer containing I2C read/write data",null,null],[17,"TOUCH_RESET_PIN","","Reset Pin for touch controller. Note: NFC antenna pins…",null,null],[17,"TOUCH_INTERRUPT_PIN","","Interrupt Pin for touch controller. We listen for the…",null,null],[17,"TOUCH_CONTROLLER_ADDRESS","","Touch Controller I2C Address:…",null,null],[17,"CFG_MAX_TOUCH_POINTS","","Max touch points for the touch controller",null,null],[17,"HYN_MAX_POINTS","","Max touch channels for the touch controller",null,null],[17,"HYN_MAX_ID","","",null,null],[17,"HYN_TOUCH_STEP","","",null,null],[17,"HYN_TOUCH_X_H_POS","","",null,null],[17,"HYN_TOUCH_X_L_POS","","",null,null],[17,"HYN_TOUCH_Y_H_POS","","",null,null],[17,"HYN_TOUCH_Y_L_POS","","",null,null],[17,"HYN_TOUCH_EVENT_POS","","",null,null],[17,"HYN_TOUCH_ID_POS","","",null,null],[17,"FT_TOUCH_POINT_NUM","","",null,null],[17,"HYN_TOUCH_XY_POS","","",null,null],[17,"HYN_TOUCH_MISC","","",null,null],[17,"POINT_READ_BUF","","",null,null],[0,"display","app","",null,null],[5,"test_display","app::display","Render some graphics and text to the PineTime display.…",null,[[],["mynewtresult"]]],[11,"from","app::touch_sensor","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"round_from","","",0,[[["t"]],["t"]]],[11,"round_into","","",0,[[],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"round_from","","",1,[[["t"]],["t"]]],[11,"round_into","","",1,[[],["u"]]]],"p":[[3,"TouchEventInfo"],[3,"TouchInfo"]]};
searchIndex["arrayvec"] = {"doc":"arrayvec provides the types `ArrayVec` and `ArrayString`:…","i":[[3,"ArrayString","arrayvec","A string with a fixed capacity.",null,null],[3,"CapacityError","","Error value indicating insufficient capacity",null,null],[3,"ArrayVec","","A vector with a fixed capacity.",null,null],[3,"IntoIter","","By-value iterator for `ArrayVec`.",null,null],[3,"Drain","","A draining iterator for `ArrayVec`.",null,null],[11,"new","","Create a new empty `ArrayString`.",0,[[],["arraystring"]]],[11,"len","","Return the length of the string.",0,[[["self"]],["usize"]]],[11,"from","","Create a new `ArrayString` from a `str`.",0,[[["str"]],[["capacityerror",["str"]],["result",["capacityerror"]]]]],[11,"from_byte_string","","Create a new `ArrayString` from a byte string literal.",0,[[["a"]],[["result",["utf8error"]],["utf8error"]]]],[11,"capacity","","Return the capacity of the `ArrayString`.",0,[[["self"]],["usize"]]],[11,"is_full","","Return if the `ArrayString` is completely filled.",0,[[["self"]],["bool"]]],[11,"push","","Adds the given char to the end of the string.",0,[[["self"],["char"]]]],[11,"try_push","","Adds the given char to the end of the string.",0,[[["self"],["char"]],[["result",["capacityerror"]],["capacityerror",["char"]]]]],[11,"push_str","","Adds the given string slice to the end of the string.",0,[[["str"],["self"]]]],[11,"try_push_str","","Adds the given string slice to the end of the string.",0,[[["self"],["str"]],[["result",["capacityerror"]],["capacityerror",["str"]]]]],[11,"pop","","Removes the last character from the string and returns it.",0,[[["self"]],[["char"],["option",["char"]]]]],[11,"truncate","","Shortens this `ArrayString` to the specified length.",0,[[["self"],["usize"]]]],[11,"remove","","Removes a `char` from this `ArrayString` at a byte…",0,[[["self"],["usize"]],["char"]]],[11,"clear","","Make the string empty.",0,[[["self"]]]],[11,"set_len","","Set the strings’s length.",0,[[["self"],["usize"]]]],[11,"as_str","","Return a string slice of the whole `ArrayString`.",0,[[["self"]],["str"]]],[11,"new","","Create a new `CapacityError` from `element`.",1,[[["t"]],["capacityerror"]]],[11,"element","","Extract the overflowing element",1,[[],["t"]]],[11,"simplify","","Convert into a `CapacityError` that does not carry an…",1,[[],["capacityerror"]]],[8,"Array","","Trait for fixed size arrays.",null,null],[16,"Item","","The array’s element type",2,null],[18,"CAPACITY","","The array's element capacity",2,null],[10,"as_slice","","",2,[[["self"]]]],[10,"as_mut_slice","","",2,[[["self"]]]],[11,"new","","Create a new empty `ArrayVec`.",3,[[],["arrayvec"]]],[11,"len","","Return the number of elements in the `ArrayVec`.",3,[[["self"]],["usize"]]],[11,"capacity","","Return the capacity of the `ArrayVec`.",3,[[["self"]],["usize"]]],[11,"is_full","","Return if the `ArrayVec` is completely filled.",3,[[["self"]],["bool"]]],[11,"remaining_capacity","","Returns the capacity left in the `ArrayVec`.",3,[[["self"]],["usize"]]],[11,"push","","Push `element` to the end of the vector.",3,[[["self"]]]],[11,"try_push","","Push `element` to the end of the vector.",3,[[["self"]],[["result",["capacityerror"]],["capacityerror"]]]],[11,"push_unchecked","","Push `element` to the end of the vector without checking…",3,[[["self"]]]],[11,"insert","","Insert `element` at position `index`.",3,[[["self"],["usize"]]]],[11,"try_insert","","Insert `element` at position `index`.",3,[[["self"],["usize"]],[["result",["capacityerror"]],["capacityerror"]]]],[11,"pop","","Remove the last element in the vector and return it.",3,[[["self"]],["option"]]],[11,"swap_remove","","Remove the element at `index` and swap the last element…",3,[[["self"],["usize"]]]],[11,"swap_pop","","Remove the element at `index` and swap the last element…",3,[[["self"],["usize"]],["option"]]],[11,"remove","","Remove the element at `index` and shift down the following…",3,[[["self"],["usize"]]]],[11,"pop_at","","Remove the element at `index` and shift down the following…",3,[[["self"],["usize"]],["option"]]],[11,"truncate","","Shortens the vector, keeping the first `len` elements and…",3,[[["self"],["usize"]]]],[11,"clear","","Remove all elements in the vector.",3,[[["self"]]]],[11,"retain","","Retains only the elements specified by the predicate.",3,[[["self"],["f"]]]],[11,"set_len","","Set the vector’s length without dropping or moving out…",3,[[["self"],["usize"]]]],[11,"try_extend_from_slice","","Copy and appends all elements in a slice to the `ArrayVec`.",3,[[["self"]],[["result",["capacityerror"]],["capacityerror"]]]],[11,"drain","","Create a draining iterator that removes the specified…",3,[[["self"],["r"]],["drain"]]],[11,"into_inner","","Return the inner fixed size array, if it is full to its…",3,[[],["result"]]],[11,"dispose","","Dispose of `self` (same as drop)",3,[[]]],[11,"as_slice","","Return a slice containing all elements of the vector.",3,[[["self"]]]],[11,"as_mut_slice","","Return a mutable slice containing all elements of the…",3,[[["self"]]]],[11,"as_ptr","","Return a raw pointer to the vector's buffer.",3,[[["self"]]]],[11,"as_mut_ptr","","Return a raw mutable pointer to the vector's buffer.",3,[[["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"from","","",3,[[],["t"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"deref","","",0,[[["self"]],["str"]]],[11,"deref","","",3,[[["self"]]]],[11,"deref_mut","","",0,[[["self"]],["str"]]],[11,"deref_mut","","",3,[[["self"]]]],[11,"from","","",3,[[["a"]],["self"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"eq","","",0,[[["self"]],["bool"]]],[11,"eq","","",0,[[["str"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"ne","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"eq","","",3,[[["self"]],["bool"]]],[11,"eq","","",3,[[["self"]],["bool"]]],[11,"cmp","","",0,[[["self"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["capacityerror"]],["ordering"]]],[11,"cmp","","",3,[[["arrayvec"],["self"]],["ordering"]]],[11,"partial_cmp","","",0,[[["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["self"]],["bool"]]],[11,"le","","",0,[[["self"]],["bool"]]],[11,"gt","","",0,[[["self"]],["bool"]]],[11,"ge","","",0,[[["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["str"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["str"],["self"]],["bool"]]],[11,"le","","",0,[[["str"],["self"]],["bool"]]],[11,"gt","","",0,[[["str"],["self"]],["bool"]]],[11,"ge","","",0,[[["str"],["self"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["capacityerror"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"le","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"gt","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"ge","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"partial_cmp","","",3,[[["arrayvec"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",3,[[["self"]],["bool"]]],[11,"le","","",3,[[["self"]],["bool"]]],[11,"ge","","",3,[[["self"]],["bool"]]],[11,"gt","","",3,[[["self"]],["bool"]]],[11,"drop","","",3,[[["self"]]]],[11,"drop","","",4,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"hash","","",3,[[["self"],["h"]]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,[[["self"]]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,[[["self"]]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"extend","","",3,[[["self"],["intoiterator"]]]],[11,"from_iter","","",3,[[["intoiterator"]],["self"]]],[11,"into_iter","","",3,[[],["intoiter"]]],[11,"from_str","","",0,[[["str"]],["result"]]],[11,"write_char","","",0,[[["self"],["char"]],["result"]]],[11,"write_str","","",0,[[["str"],["self"]],["result"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",3,[[["self"]]]],[11,"as_mut","","",3,[[["self"]]]],[11,"clone","","",0,[[["self"]],["arraystring"]]],[11,"clone_from","","",0,[[["self"],["self"]]]],[11,"clone","","",1,[[["self"]],["capacityerror"]]],[11,"clone","","",4,[[["self"]],["intoiter"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"clone_from","","",3,[[["self"],["self"]]]],[11,"default","","Return an empty `ArrayString`",0,[[],["arraystring"]]],[11,"default","","Return an empty array",3,[[],["arrayvec"]]],[11,"borrow","","",0,[[["self"]],["str"]]],[11,"borrow","","",3,[[["self"]]]],[11,"borrow_mut","","",3,[[["self"]]]],[18,"CAPACITY","","The array's element capacity",2,null]],"p":[[3,"ArrayString"],[3,"CapacityError"],[8,"Array"],[3,"ArrayVec"],[3,"IntoIter"],[3,"Drain"]]};
searchIndex["as_slice"] = {"doc":"`AsSlice` and `AsMutSlice` traits","i":[[8,"AsSlice","as_slice","Something that can be seen as an immutable slice",null,null],[16,"Element","","The element type of the slice view",0,null],[10,"as_slice","","Returns the immutable slice view of `Self`",0,[[["self"]]]],[8,"AsMutSlice","","Something that can be seen as an mutable slice",null,null],[10,"as_mut_slice","","Returns the mutable slice view of `Self`",1,[[["self"]]]]],"p":[[8,"AsSlice"],[8,"AsMutSlice"]]};
searchIndex["bare_metal"] = {"doc":"Abstractions common to bare metal systems","i":[[3,"Peripheral","bare_metal","A peripheral",null,null],[3,"CriticalSection","","Critical section token",null,null],[3,"Mutex","","A \"mutex\" based on critical sections",null,null],[8,"Nr","","Interrupt number",null,null],[10,"nr","","Returns the number associated with an interrupt",0,[[["self"]],["u8"]]],[11,"new","","Creates a new peripheral",1,[[["usize"]],["self"]]],[11,"borrow","","Borrows the peripheral for the duration of a critical…",1,[[["criticalsection"],["self"]],["t"]]],[11,"get","","Returns a pointer to the register block",1,[[["self"]]]],[11,"new","","Creates a critical section token",2,[[],["self"]]],[11,"new","","Creates a new mutex",3,[[["t"]],["self"]]],[11,"borrow","","Borrows the data for the duration of the critical section",3,[[["criticalsection"],["self"]],["t"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]]],"p":[[8,"Nr"],[3,"Peripheral"],[3,"CriticalSection"],[3,"Mutex"]]};
searchIndex["byteorder"] = {"doc":"This crate provides convenience methods for encoding and…","i":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"BE","","A type alias for [`BigEndian`].",null,null],[6,"LE","","A type alias for [`LittleEndian`].",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ByteOrder","","`ByteOrder` describes types that can serialize integers as…",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",0,[[],["u16"]]],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",0,[[],["u32"]]],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",0,[[],["u32"]]],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",0,[[],["u64"]]],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",0,[[],["u64"]]],[10,"read_u128","","Reads an unsigned 128 bit integer from `buf`.",0,[[],["u128"]]],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",0,[[["usize"]],["u64"]]],[10,"read_uint128","","Reads an unsigned n-bytes integer from `buf`.",0,[[["usize"]],["u128"]]],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",0,[[["u16"]]]],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in…",0,[[["u32"]]]],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",0,[[["u32"]]]],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in…",0,[[["u64"]]]],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",0,[[["u64"]]]],[10,"write_u128","","Writes an unsigned 128 bit integer `n` to `buf`.",0,[[["u128"]]]],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",0,[[["usize"],["u64"]]]],[10,"write_uint128","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",0,[[["usize"],["u128"]]]],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",0,[[],["i16"]]],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",0,[[],["i32"]]],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",0,[[],["i32"]]],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",0,[[],["i64"]]],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",0,[[],["i64"]]],[11,"read_i128","","Reads a signed 128 bit integer from `buf`.",0,[[],["i128"]]],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",0,[[["usize"]],["i64"]]],[11,"read_int128","","Reads a signed n-bytes integer from `buf`.",0,[[["usize"]],["i128"]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[],["f32"]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[],["f64"]]],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",0,[[["i16"]]]],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",0,[[["i32"]]]],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",0,[[["i32"]]]],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",0,[[["i64"]]]],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",0,[[["i64"]]]],[11,"write_i128","","Writes a signed 128 bit integer `n` to `buf`.",0,[[["i128"]]]],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",0,[[["i64"],["usize"]]]],[11,"write_int128","","Writes a signed integer `n` to `buf` using only `nbytes`.",0,[[["i128"],["usize"]]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",0,[[["f32"]]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",0,[[["f64"]]]],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",0,[[]]],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",0,[[]]],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",0,[[]]],[10,"read_u128_into","","Reads unsigned 128 bit integers from `src` into `dst`.",0,[[]]],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",0,[[]]],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",0,[[]]],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",0,[[]]],[11,"read_i128_into","","Reads signed 128 bit integers from `src` into `dst`.",0,[[]]],[11,"read_f32_into","","Reads IEEE754 single-precision (4 bytes) floating point…",0,[[]]],[11,"read_f32_into_unchecked","","DEPRECATED.",0,[[]]],[11,"read_f64_into","","Reads IEEE754 single-precision (4 bytes) floating point…",0,[[]]],[11,"read_f64_into_unchecked","","DEPRECATED.",0,[[]]],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",0,[[]]],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",0,[[]]],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",0,[[]]],[10,"write_u128_into","","Writes unsigned 128 bit integers from `src` into `dst`.",0,[[]]],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",0,[[]]],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",0,[[]]],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",0,[[]]],[11,"write_i128_into","","Writes signed 128 bit integers from `src` into `dst`.",0,[[]]],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point…",0,[[]]],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point…",0,[[]]],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a…",0,[[]]],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a…",0,[[]]],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a…",0,[[]]],[10,"from_slice_u128","","Converts the given slice of unsigned 128 bit integers to a…",0,[[]]],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a…",0,[[]]],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a…",0,[[]]],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a…",0,[[]]],[11,"from_slice_i128","","Converts the given slice of signed 128 bit integers to a…",0,[[]]],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4…",0,[[]]],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8…",0,[[]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"read_u16","","",1,[[],["u16"]]],[11,"read_u32","","",1,[[],["u32"]]],[11,"read_u64","","",1,[[],["u64"]]],[11,"read_u128","","",1,[[],["u128"]]],[11,"read_uint","","",1,[[["usize"]],["u64"]]],[11,"read_uint128","","",1,[[["usize"]],["u128"]]],[11,"write_u16","","",1,[[["u16"]]]],[11,"write_u32","","",1,[[["u32"]]]],[11,"write_u64","","",1,[[["u64"]]]],[11,"write_u128","","",1,[[["u128"]]]],[11,"write_uint","","",1,[[["usize"],["u64"]]]],[11,"write_uint128","","",1,[[["usize"],["u128"]]]],[11,"read_u16_into","","",1,[[]]],[11,"read_u32_into","","",1,[[]]],[11,"read_u64_into","","",1,[[]]],[11,"read_u128_into","","",1,[[]]],[11,"write_u16_into","","",1,[[]]],[11,"write_u32_into","","",1,[[]]],[11,"write_u64_into","","",1,[[]]],[11,"write_u128_into","","",1,[[]]],[11,"from_slice_u16","","",1,[[]]],[11,"from_slice_u32","","",1,[[]]],[11,"from_slice_u64","","",1,[[]]],[11,"from_slice_u128","","",1,[[]]],[11,"from_slice_f32","","",1,[[]]],[11,"from_slice_f64","","",1,[[]]],[11,"read_u16","","",2,[[],["u16"]]],[11,"read_u32","","",2,[[],["u32"]]],[11,"read_u64","","",2,[[],["u64"]]],[11,"read_u128","","",2,[[],["u128"]]],[11,"read_uint","","",2,[[["usize"]],["u64"]]],[11,"read_uint128","","",2,[[["usize"]],["u128"]]],[11,"write_u16","","",2,[[["u16"]]]],[11,"write_u32","","",2,[[["u32"]]]],[11,"write_u64","","",2,[[["u64"]]]],[11,"write_u128","","",2,[[["u128"]]]],[11,"write_uint","","",2,[[["usize"],["u64"]]]],[11,"write_uint128","","",2,[[["usize"],["u128"]]]],[11,"read_u16_into","","",2,[[]]],[11,"read_u32_into","","",2,[[]]],[11,"read_u64_into","","",2,[[]]],[11,"read_u128_into","","",2,[[]]],[11,"write_u16_into","","",2,[[]]],[11,"write_u32_into","","",2,[[]]],[11,"write_u64_into","","",2,[[]]],[11,"write_u128_into","","",2,[[]]],[11,"from_slice_u16","","",2,[[]]],[11,"from_slice_u32","","",2,[[]]],[11,"from_slice_u64","","",2,[[]]],[11,"from_slice_u128","","",2,[[]]],[11,"from_slice_f32","","",2,[[]]],[11,"from_slice_f64","","",2,[[]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"eq","","",1,[[["self"],["bigendian"]],["bool"]]],[11,"eq","","",2,[[["littleendian"],["self"]],["bool"]]],[11,"cmp","","",1,[[["self"],["bigendian"]],["ordering"]]],[11,"cmp","","",2,[[["littleendian"],["self"]],["ordering"]]],[11,"partial_cmp","","",1,[[["self"],["bigendian"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",2,[[["littleendian"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"clone","","",1,[[["self"]],["bigendian"]]],[11,"clone","","",2,[[["self"]],["littleendian"]]],[11,"default","","",1,[[],["bigendian"]]],[11,"default","","",2,[[],["littleendian"]]]],"p":[[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["cfg_if"] = {"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate…",null,null]],"p":[]};
searchIndex["cortex_m"] = {"doc":"Low level access to Cortex-M processors","i":[[0,"asm","cortex_m","Miscellaneous assembly instructions",null,null],[5,"bkpt","cortex_m::asm","Puts the processor in Debug state. Debuggers can pick this…",null,[[]]],[5,"delay","","Blocks the program for at least `n` instruction cycles",null,[[["u32"]]]],[5,"nop","","A no-operation. Useful to prevent delay loops from being…",null,[[]]],[5,"wfe","","Wait For Event",null,[[]]],[5,"wfi","","Wait For Interrupt",null,[[]]],[5,"sev","","Send Event",null,[[]]],[5,"isb","","Instruction Synchronization Barrier",null,[[]]],[5,"dsb","","Data Synchronization Barrier",null,[[]]],[5,"dmb","","Data Memory Barrier",null,[[]]],[0,"interrupt","cortex_m","Interrupts",null,null],[3,"CriticalSection","cortex_m::interrupt","Critical section token",null,null],[3,"Mutex","","A \"mutex\" based on critical sections",null,null],[8,"Nr","","Interrupt number",null,null],[10,"nr","","Returns the number associated with an interrupt",0,[[["self"]],["u8"]]],[5,"disable","","Disables all interrupts",null,[[]]],[5,"enable","","Enables all the interrupts",null,[[]]],[5,"free","","Execute closure `f` in an interrupt-free context.",null,[[["f"]],["r"]]],[0,"itm","cortex_m","Instrumentation Trace Macrocell",null,null],[5,"write_all","cortex_m::itm","Writes a `buffer` to the ITM `port`",null,[[["stim"]]]],[5,"write_aligned","","Writes a 4-byte aligned `buffer` to the ITM `port`",null,[[["aligned"],["stim"]]]],[5,"write_fmt","","Writes `fmt::Arguments` to the ITM `port`",null,[[["arguments"],["stim"]]]],[5,"write_str","","Writes a string to the ITM `port`",null,[[["str"],["stim"]]]],[0,"peripheral","cortex_m","Core peripherals",null,null],[3,"Peripherals","cortex_m::peripheral","Core peripherals",null,null],[12,"CBP","","Cache and branch predictor maintenance operations (not…",1,null],[12,"CPUID","","CPUID",1,null],[12,"DCB","","Debug Control Block",1,null],[12,"DWT","","Data Watchpoint and Trace unit",1,null],[12,"FPB","","Flash Patch and Breakpoint unit (not present on Cortex-M0…",1,null],[12,"FPU","","Floating Point Unit (only present on…",1,null],[12,"ITM","","Instrumentation Trace Macrocell (not present on Cortex-M0…",1,null],[12,"MPU","","Memory Protection Unit",1,null],[12,"NVIC","","Nested Vector Interrupt Controller",1,null],[12,"SCB","","System Control Block",1,null],[12,"SYST","","SysTick: System Timer",1,null],[12,"TPIU","","Trace Port Interface Unit (not present on Cortex-M0…",1,null],[3,"CBP","","Cache and branch predictor maintenance operations",null,null],[3,"CPUID","","CPUID",null,null],[3,"DCB","","Debug Control Block",null,null],[3,"DWT","","Data Watchpoint and Trace unit",null,null],[3,"FPB","","Flash Patch and Breakpoint unit",null,null],[3,"FPU","","Floating Point Unit",null,null],[3,"ITM","","Instrumentation Trace Macrocell",null,null],[3,"MPU","","Memory Protection Unit",null,null],[3,"NVIC","","Nested Vector Interrupt Controller",null,null],[3,"SCB","","System Control Block",null,null],[3,"SYST","","SysTick: System Timer",null,null],[3,"TPIU","","Trace Port Interface Unit",null,null],[0,"cbp","","Cache and branch predictor maintenance operations",null,null],[3,"RegisterBlock","cortex_m::peripheral::cbp","Register block",null,null],[12,"iciallu","","I-cache invalidate all to PoU",2,null],[12,"icimvau","","I-cache invalidate by MVA to PoU",2,null],[12,"dcimvac","","D-cache invalidate by MVA to PoC",2,null],[12,"dcisw","","D-cache invalidate by set-way",2,null],[12,"dccmvau","","D-cache clean by MVA to PoU",2,null],[12,"dccmvac","","D-cache clean by MVA to PoC",2,null],[12,"dccsw","","D-cache clean by set-way",2,null],[12,"dccimvac","","D-cache clean and invalidate by MVA to PoC",2,null],[12,"dccisw","","D-cache clean and invalidate by set-way",2,null],[12,"bpiall","","Branch predictor invalidate all",2,null],[11,"iciallu","cortex_m::peripheral","I-cache invalidate all to PoU",3,[[["self"]]]],[11,"icimvau","","I-cache invalidate by MVA to PoU",3,[[["self"],["u32"]]]],[11,"dcimvac","","D-cache invalidate by MVA to PoC",3,[[["self"],["u32"]]]],[11,"dcisw","","D-cache invalidate by set-way",3,[[["u16"],["self"]]]],[11,"dccmvau","","D-cache clean by MVA to PoU",3,[[["self"],["u32"]]]],[11,"dccmvac","","D-cache clean by MVA to PoC",3,[[["self"],["u32"]]]],[11,"dccsw","","D-cache clean by set-way",3,[[["u16"],["self"]]]],[11,"dccimvac","","D-cache clean and invalidate by MVA to PoC",3,[[["self"],["u32"]]]],[11,"dccisw","","D-cache clean and invalidate by set-way",3,[[["u16"],["self"]]]],[11,"bpiall","","Branch predictor invalidate all",3,[[["self"]]]],[0,"cpuid","","CPUID",null,null],[3,"RegisterBlock","cortex_m::peripheral::cpuid","Register block",null,null],[12,"base","","CPUID base",4,null],[12,"pfr","","Processor Feature (not present on Cortex-M0 variants)",4,null],[12,"dfr","","Debug Feature (not present on Cortex-M0 variants)",4,null],[12,"afr","","Auxiliary Feature (not present on Cortex-M0 variants)",4,null],[12,"mmfr","","Memory Model Feature (not present on Cortex-M0 variants)",4,null],[12,"isar","","Instruction Set Attribute (not present on Cortex-M0…",4,null],[12,"clidr","","Cache Level ID (only present on Cortex-M7)",4,null],[12,"ctr","","Cache Type (only present on Cortex-M7)",4,null],[12,"ccsidr","","Cache Size ID (only present on Cortex-M7)",4,null],[12,"csselr","","Cache Size Selection (only present on Cortex-M7)",4,null],[4,"CsselrCacheType","","Type of cache to select on CSSELR writes.",null,null],[13,"DataOrUnified","","Select DCache or unified cache",5,null],[13,"Instruction","","Select ICache",5,null],[11,"select_cache","cortex_m::peripheral","Selects the current CCSIDR",6,[[["csselrcachetype"],["self"],["u8"]]]],[11,"cache_num_sets_ways","","Returns the number of sets and ways in the selected cache",6,[[["csselrcachetype"],["self"],["u8"]]]],[0,"dcb","","Debug Control Block",null,null],[3,"RegisterBlock","cortex_m::peripheral::dcb","Register block",null,null],[12,"dhcsr","","Debug Halting Control and Status",7,null],[12,"dcrsr","","Debug Core Register Selector",7,null],[12,"dcrdr","","Debug Core Register Data",7,null],[12,"demcr","","Debug Exception and Monitor Control",7,null],[11,"enable_trace","cortex_m::peripheral","Enables TRACE. This is for example required by the…",8,[[["self"]]]],[11,"disable_trace","","Disables TRACE. See `DCB::enable_trace()` for more details",8,[[["self"]]]],[11,"is_debugger_attached","","Is there a debugger attached? (see note)",8,[[],["bool"]]],[0,"dwt","","Data Watchpoint and Trace unit",null,null],[3,"RegisterBlock","cortex_m::peripheral::dwt","Register block",null,null],[12,"ctrl","","Control",9,null],[12,"cyccnt","","Cycle Count",9,null],[12,"cpicnt","","CPI Count",9,null],[12,"exccnt","","Exception Overhead Count",9,null],[12,"sleepcnt","","Sleep Count",9,null],[12,"lsucnt","","LSU Count",9,null],[12,"foldcnt","","Folded-instruction Count",9,null],[12,"pcsr","","Program Counter Sample",9,null],[12,"c","","Comparators",9,null],[12,"lar","","Lock Access",9,null],[12,"lsr","","Lock Status",9,null],[3,"Comparator","","Comparator",null,null],[12,"comp","","Comparator",10,null],[12,"mask","","Comparator Mask",10,null],[12,"function","","Comparator Function",10,null],[11,"enable_cycle_counter","cortex_m::peripheral","Enables the cycle counter",11,[[["self"]]]],[11,"get_cycle_count","","Returns the current clock cycle count",11,[[],["u32"]]],[0,"fpb","","Flash Patch and Breakpoint unit",null,null],[3,"RegisterBlock","cortex_m::peripheral::fpb","Register block",null,null],[12,"ctrl","","Control",12,null],[12,"remap","","Remap",12,null],[12,"comp","","Comparator",12,null],[12,"lar","","Lock Access",12,null],[12,"lsr","","Lock Status",12,null],[0,"itm","cortex_m::peripheral","Instrumentation Trace Macrocell",null,null],[3,"RegisterBlock","cortex_m::peripheral::itm","Register block",null,null],[12,"stim","","Stimulus Port",13,null],[12,"ter","","Trace Enable",13,null],[12,"tpr","","Trace Privilege",13,null],[12,"tcr","","Trace Control",13,null],[12,"lar","","Lock Access",13,null],[12,"lsr","","Lock Status",13,null],[3,"Stim","","Stimulus Port",null,null],[11,"write_u8","","Writes an `u8` payload into the stimulus port",14,[[["self"],["u8"]]]],[11,"write_u16","","Writes an `u16` payload into the stimulus port",14,[[["u16"],["self"]]]],[11,"write_u32","","Writes an `u32` payload into the stimulus port",14,[[["self"],["u32"]]]],[11,"is_fifo_ready","","Returns `true` if the stimulus port is ready to accept…",14,[[["self"]],["bool"]]],[0,"mpu","cortex_m::peripheral","Memory Protection Unit",null,null],[3,"RegisterBlock","cortex_m::peripheral::mpu","Register block",null,null],[12,"_type","","Type",15,null],[12,"ctrl","","Control",15,null],[12,"rnr","","Region Number",15,null],[12,"rbar","","Region Base Address",15,null],[12,"rasr","","Region Attribute and Size",15,null],[12,"rbar_a1","","Alias 1 of RBAR",15,null],[12,"rsar_a1","","Alias 1 of RSAR",15,null],[12,"rbar_a2","","Alias 2 of RBAR",15,null],[12,"rsar_a2","","Alias 2 of RSAR",15,null],[12,"rbar_a3","","Alias 3 of RBAR",15,null],[12,"rsar_a3","","Alias 3 of RSAR",15,null],[0,"nvic","cortex_m::peripheral","Nested Vector Interrupt Controller",null,null],[3,"RegisterBlock","cortex_m::peripheral::nvic","Register block",null,null],[12,"iser","","Interrupt Set-Enable",16,null],[12,"icer","","Interrupt Clear-Enable",16,null],[12,"ispr","","Interrupt Set-Pending",16,null],[12,"icpr","","Interrupt Clear-Pending",16,null],[12,"iabr","","Interrupt Active Bit (not present on Cortex-M0 variants)",16,null],[12,"ipr","","Interrupt Priority",16,null],[12,"stir","","Software Trigger Interrupt",16,null],[11,"request","cortex_m::peripheral","Request an IRQ in software",17,[[["self"],["i"]]]],[11,"clear_pending","","Clears `interrupt`'s pending state",17,[[["self"],["i"]]]],[11,"mask","","Disables `interrupt`",17,[[["i"]]]],[11,"unmask","","Enables `interrupt`",17,[[["i"]]]],[11,"disable","","Disables `interrupt`",17,[[["self"],["i"]]]],[11,"enable","","WARNING This method is a soundness hole in the API; it…",17,[[["self"],["i"]]]],[11,"get_priority","","Returns the NVIC priority of `interrupt`",17,[[["i"]],["u8"]]],[11,"is_active","","Is `interrupt` active or pre-empted and stacked",17,[[["i"]],["bool"]]],[11,"is_enabled","","Checks if `interrupt` is enabled",17,[[["i"]],["bool"]]],[11,"is_pending","","Checks if `interrupt` is pending",17,[[["i"]],["bool"]]],[11,"pend","","Forces `interrupt` into pending state",17,[[["i"]]]],[11,"set_pending","","Forces `interrupt` into pending state",17,[[["self"],["i"]]]],[11,"set_priority","","Sets the \"priority\" of `interrupt` to `prio`",17,[[["self"],["i"],["u8"]]]],[11,"unpend","","Clears `interrupt`'s pending state",17,[[["i"]]]],[0,"scb","","System Control Block",null,null],[3,"RegisterBlock","cortex_m::peripheral::scb","Register block",null,null],[12,"icsr","","Interrupt Control and State",18,null],[12,"vtor","","Vector Table Offset (not present on Cortex-M0 variants)",18,null],[12,"aircr","","Application Interrupt and Reset Control",18,null],[12,"scr","","System Control",18,null],[12,"ccr","","Configuration and Control",18,null],[12,"shpr","","System Handler Priority (word accessible only on Cortex-M0…",18,null],[12,"shcsr","","System Handler Control and State",18,null],[12,"cfsr","","Configurable Fault Status (not present on Cortex-M0…",18,null],[12,"hfsr","","HardFault Status (not present on Cortex-M0 variants)",18,null],[12,"dfsr","","Debug Fault Status (not present on Cortex-M0 variants)",18,null],[12,"mmfar","","MemManage Fault Address (not present on Cortex-M0 variants)",18,null],[12,"bfar","","BusFault Address (not present on Cortex-M0 variants)",18,null],[12,"afsr","","Auxiliary Fault Status (not present on Cortex-M0 variants)",18,null],[12,"cpacr","","Coprocessor Access Control (not present on Cortex-M0…",18,null],[4,"Exception","","Processor core exceptions (internal interrupts)",null,null],[13,"NonMaskableInt","","Non maskable interrupt",19,null],[13,"HardFault","","Hard fault interrupt",19,null],[13,"MemoryManagement","","Memory management interrupt (not present on Cortex-M0…",19,null],[13,"BusFault","","Bus fault interrupt (not present on Cortex-M0 variants)",19,null],[13,"UsageFault","","Usage fault interrupt (not present on Cortex-M0 variants)",19,null],[13,"SVCall","","SV call interrupt",19,null],[13,"DebugMonitor","","Debug monitor interrupt (not present on Cortex-M0 variants)",19,null],[13,"PendSV","","Pend SV interrupt",19,null],[13,"SysTick","","System Tick interrupt",19,null],[4,"VectActive","","Active exception number",null,null],[13,"ThreadMode","","Thread mode",20,null],[13,"Exception","","Processor core exception (internal interrupts)",20,null],[13,"Interrupt","","Device specific exception (external interrupts)",20,null],[12,"irqn","cortex_m::peripheral::scb::VectActive","Interrupt number. This number is always within half open…",21,null],[4,"SystemHandler","cortex_m::peripheral::scb","System handlers, exceptions with configurable priority",null,null],[13,"MemoryManagement","","Memory management interrupt (not present on Cortex-M0…",22,null],[13,"BusFault","","Bus fault interrupt (not present on Cortex-M0 variants)",22,null],[13,"UsageFault","","Usage fault interrupt (not present on Cortex-M0 variants)",22,null],[13,"SVCall","","SV call interrupt",22,null],[13,"DebugMonitor","","Debug monitor interrupt (not present on Cortex-M0 variants)",22,null],[13,"PendSV","","Pend SV interrupt",22,null],[13,"SysTick","","System Tick interrupt",22,null],[11,"vect_active","cortex_m::peripheral","Returns the active exception number",23,[[],["vectactive"]]],[11,"irqn","cortex_m::peripheral::scb","Returns the IRQ number of this `Exception`",19,[[["self"]],["i8"]]],[11,"from","","Converts a `byte` into `VectActive`",20,[[["u8"]],["option"]]],[11,"enable_icache","cortex_m::peripheral","Enables I-Cache if currently disabled",23,[[["self"]]]],[11,"disable_icache","","Disables I-Cache if currently enabled",23,[[["self"]]]],[11,"icache_enabled","","Returns whether the I-Cache is currently enabled",23,[[],["bool"]]],[11,"invalidate_icache","","Invalidates I-Cache",23,[[["self"]]]],[11,"enable_dcache","","Enables D-cache if currently disabled",23,[[["cpuid"],["self"]]]],[11,"disable_dcache","","Disables D-cache if currently enabled",23,[[["cpuid"],["self"]]]],[11,"dcache_enabled","","Returns whether the D-Cache is currently enabled",23,[[],["bool"]]],[11,"clean_dcache","","Cleans D-cache",23,[[["cpuid"],["self"]]]],[11,"clean_invalidate_dcache","","Cleans and invalidates D-cache",23,[[["cpuid"],["self"]]]],[11,"invalidate_dcache_by_address","","Invalidates D-cache by address",23,[[["self"],["usize"]]]],[11,"clean_dcache_by_address","","Cleans D-cache by address",23,[[["self"],["usize"]]]],[11,"clean_invalidate_dcache_by_address","","Cleans and invalidates D-cache by address",23,[[["self"],["usize"]]]],[11,"set_sleepdeep","","Set the SLEEPDEEP bit in the SCR register",23,[[["self"]]]],[11,"clear_sleepdeep","","Clear the SLEEPDEEP bit in the SCR register",23,[[["self"]]]],[11,"set_sleeponexit","","Set the SLEEPONEXIT bit in the SCR register",23,[[["self"]]]],[11,"clear_sleeponexit","","Clear the SLEEPONEXIT bit in the SCR register",23,[[["self"]]]],[11,"system_reset","","Initiate a system reset request to reset the MCU",23,[[["self"]]]],[11,"sys_reset","","Initiate a system reset request to reset the MCU",23,[[]]],[11,"set_pendsv","","Set the PENDSVSET bit in the ICSR register which will pend…",23,[[]]],[11,"is_pendsv_pending","","Check if PENDSVSET bit in the ICSR register is set meaning…",23,[[],["bool"]]],[11,"clear_pendsv","","Set the PENDSVCLR bit in the ICSR register which will…",23,[[]]],[11,"set_pendst","","Set the PENDSTCLR bit in the ICSR register which will…",23,[[]]],[11,"is_pendst_pending","","Check if PENDSTSET bit in the ICSR register is set meaning…",23,[[],["bool"]]],[11,"clear_pendst","","Set the PENDSTCLR bit in the ICSR register which will…",23,[[]]],[11,"get_priority","","Returns the hardware priority of `system_handler`",23,[[["systemhandler"]],["u8"]]],[11,"set_priority","","Sets the hardware priority of `system_handler` to `prio`",23,[[["self"],["systemhandler"],["u8"]]]],[0,"syst","","SysTick: System Timer",null,null],[3,"RegisterBlock","cortex_m::peripheral::syst","Register block",null,null],[12,"csr","","Control and Status",24,null],[12,"rvr","","Reload Value",24,null],[12,"cvr","","Current Value",24,null],[12,"calib","","Calibration Value",24,null],[4,"SystClkSource","","SysTick clock source",null,null],[13,"Core","","Core-provided clock",25,null],[13,"External","","External reference clock",25,null],[11,"clear_current","cortex_m::peripheral","Clears current value to 0",26,[[["self"]]]],[11,"disable_counter","","Disables counter",26,[[["self"]]]],[11,"disable_interrupt","","Disables SysTick interrupt",26,[[["self"]]]],[11,"enable_counter","","Enables counter",26,[[["self"]]]],[11,"enable_interrupt","","Enables SysTick interrupt",26,[[["self"]]]],[11,"get_clock_source","","Gets clock source",26,[[["self"]],["systclksource"]]],[11,"get_current","","Gets current value",26,[[],["u32"]]],[11,"get_reload","","Gets reload value",26,[[],["u32"]]],[11,"get_ticks_per_10ms","","Returns the reload value with which the counter would wrap…",26,[[],["u32"]]],[11,"has_reference_clock","","Checks if an external reference clock is available",26,[[],["bool"]]],[11,"has_wrapped","","Checks if the counter wrapped (underflowed) since the last…",26,[[["self"]],["bool"]]],[11,"is_counter_enabled","","Checks if counter is enabled",26,[[["self"]],["bool"]]],[11,"is_interrupt_enabled","","Checks if SysTick interrupt is enabled",26,[[["self"]],["bool"]]],[11,"is_precise","","Checks if the calibration value is precise",26,[[],["bool"]]],[11,"set_clock_source","","Sets clock source",26,[[["self"],["systclksource"]]]],[11,"set_reload","","Sets reload value",26,[[["self"],["u32"]]]],[0,"tpiu","","Trace Port Interface Unit;",null,null],[3,"RegisterBlock","cortex_m::peripheral::tpiu","Register block",null,null],[12,"sspsr","","Supported Parallel Port Sizes",27,null],[12,"cspsr","","Current Parallel Port Size",27,null],[12,"acpr","","Asynchronous Clock Prescaler",27,null],[12,"sppr","","Selected Pin Control",27,null],[12,"ffcr","","Formatter and Flush Control",27,null],[12,"lar","","Lock Access",27,null],[12,"lsr","","Lock Status",27,null],[12,"_type","","TPIU Type",27,null],[11,"take","cortex_m::peripheral","Returns all the core peripherals once",1,[[],["option"]]],[11,"steal","","Unchecked version of `Peripherals::take`",1,[[],["self"]]],[11,"ptr","","Returns a pointer to the register block",3,[[]]],[11,"ptr","","Returns a pointer to the register block",6,[[]]],[11,"ptr","","Returns a pointer to the register block",8,[[]]],[11,"ptr","","Returns a pointer to the register block",11,[[]]],[11,"ptr","","Returns a pointer to the register block",28,[[]]],[11,"ptr","","Returns a pointer to the register block",29,[[]]],[11,"ptr","","Returns a pointer to the register block",30,[[]]],[11,"ptr","","Returns a pointer to the register block",17,[[]]],[11,"ptr","","Returns a pointer to the register block",23,[[]]],[11,"ptr","","Returns a pointer to the register block",26,[[]]],[11,"ptr","","Returns a pointer to the register block",31,[[]]],[0,"register","cortex_m","Processor core registers",null,null],[0,"basepri","cortex_m::register","Base Priority Mask Register",null,null],[5,"read","cortex_m::register::basepri","Reads the CPU register",null,[[],["u8"]]],[5,"write","","Writes to the CPU register",null,[[["u8"]]]],[0,"basepri_max","cortex_m::register","Base Priority Mask Register (conditional write)",null,null],[5,"write","cortex_m::register::basepri_max","Writes to BASEPRI if",null,[[["u8"]]]],[0,"control","cortex_m::register","Control register",null,null],[3,"Control","cortex_m::register::control","Control register",null,null],[4,"Npriv","","Thread mode privilege level",null,null],[13,"Privileged","","Privileged",32,null],[13,"Unprivileged","","Unprivileged",32,null],[4,"Spsel","","Currently active stack pointer",null,null],[13,"Msp","","MSP is the current stack pointer",33,null],[13,"Psp","","PSP is the current stack pointer",33,null],[4,"Fpca","","Whether context floating-point is currently active",null,null],[13,"Active","","Floating-point context active.",34,null],[13,"NotActive","","No floating-point context active",34,null],[5,"read","","Reads the CPU register",null,[[],["control"]]],[11,"bits","","Returns the contents of the register as raw bits",35,[[["self"]],["u32"]]],[11,"npriv","","Thread mode privilege level",35,[[["self"]],["npriv"]]],[11,"spsel","","Currently active stack pointer",35,[[["self"]],["spsel"]]],[11,"fpca","","Whether context floating-point is currently active",35,[[["self"]],["fpca"]]],[11,"is_privileged","","Is in privileged thread mode?",32,[[["self"]],["bool"]]],[11,"is_unprivileged","","Is in unprivileged thread mode?",32,[[["self"]],["bool"]]],[11,"is_msp","","Is MSP the current stack pointer?",33,[[["self"]],["bool"]]],[11,"is_psp","","Is PSP the current stack pointer?",33,[[["self"]],["bool"]]],[11,"is_active","","Is a floating-point context active?",34,[[["self"]],["bool"]]],[11,"is_not_active","","Is a floating-point context not active?",34,[[["self"]],["bool"]]],[0,"faultmask","cortex_m::register","Fault Mask Register",null,null],[4,"Faultmask","cortex_m::register::faultmask","All exceptions are ...",null,null],[13,"Active","","Active",36,null],[13,"Inactive","","Inactive, expect for NMI",36,null],[5,"read","","Reads the CPU register",null,[[],["faultmask"]]],[11,"is_active","","All exceptions are active",36,[[["self"]],["bool"]]],[11,"is_inactive","","All exceptions, except for NMI, are inactive",36,[[["self"]],["bool"]]],[0,"msp","cortex_m::register","Main Stack Pointer",null,null],[5,"read","cortex_m::register::msp","Reads the CPU register",null,[[],["u32"]]],[5,"write","","Writes `bits` to the CPU register",null,[[["u32"]]]],[0,"primask","cortex_m::register","Priority mask register",null,null],[4,"Primask","cortex_m::register::primask","All exceptions with configurable priority are ...",null,null],[13,"Active","","Active",37,null],[13,"Inactive","","Inactive",37,null],[5,"read","","Reads the CPU register",null,[[],["primask"]]],[11,"is_active","","All exceptions with configurable priority are active",37,[[["self"]],["bool"]]],[11,"is_inactive","","All exceptions with configurable priority are inactive",37,[[["self"]],["bool"]]],[0,"psp","cortex_m::register","Process Stack Pointer",null,null],[5,"read","cortex_m::register::psp","Reads the CPU register",null,[[],["u32"]]],[5,"write","","Writes `bits` to the CPU register",null,[[["u32"]]]],[0,"apsr","cortex_m::register","Application Program Status Register",null,null],[3,"Apsr","cortex_m::register::apsr","Application Program Status Register",null,null],[5,"read","","Reads the CPU register",null,[[],["apsr"]]],[11,"bits","","Returns the contents of the register as raw bits",38,[[["self"]],["u32"]]],[11,"q","","DSP overflow and saturation flag",38,[[["self"]],["bool"]]],[11,"v","","Overflow flag",38,[[["self"]],["bool"]]],[11,"c","","Carry or borrow flag",38,[[["self"]],["bool"]]],[11,"z","","Zero flag",38,[[["self"]],["bool"]]],[11,"n","","Negative flag",38,[[["self"]],["bool"]]],[0,"lr","cortex_m::register","Link register",null,null],[5,"read","cortex_m::register::lr","Reads the CPU register",null,[[],["u32"]]],[5,"write","","Writes `bits` to the CPU register",null,[[["u32"]]]],[0,"pc","cortex_m::register","Program counter",null,null],[5,"read","cortex_m::register::pc","Reads the CPU register",null,[[],["u32"]]],[5,"write","","Writes `bits` to the CPU register",null,[[["u32"]]]],[14,"iprint","cortex_m","Macro for sending a formatted string through an ITM channel",null,null],[14,"iprintln","","Macro for sending a formatted string through an ITM…",null,null],[14,"singleton","","Macro to create a mutable reference to a statically…",null,null],[11,"from","cortex_m::interrupt","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","cortex_m::peripheral","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","cortex_m::peripheral::cbp","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","cortex_m::peripheral::cpuid","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","cortex_m::peripheral::dcb","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","cortex_m::peripheral::dwt","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","cortex_m::peripheral::fpb","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","cortex_m::peripheral::itm","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","cortex_m::peripheral::mpu","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","cortex_m::peripheral::nvic","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","cortex_m::peripheral::scb","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","cortex_m::peripheral::syst","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","cortex_m::peripheral::tpiu","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","cortex_m::register::control","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"into","","",35,[[],["u"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","cortex_m::register::faultmask","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"into","","",36,[[],["u"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","cortex_m::register::primask","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","cortex_m::register::apsr","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"deref","cortex_m::peripheral","",3,[[["self"]]]],[11,"deref","","",6,[[["self"]]]],[11,"deref","","",8,[[["self"]]]],[11,"deref","","",11,[[["self"]]]],[11,"deref","","",28,[[["self"]]]],[11,"deref","","",29,[[["self"]]]],[11,"deref","","",30,[[["self"]]]],[11,"deref","","",17,[[["self"]]]],[11,"deref","","",23,[[["self"]]]],[11,"deref","","",26,[[["self"]]]],[11,"deref","","",31,[[["self"]]]],[11,"deref_mut","","",29,[[["self"]]]],[11,"fmt","cortex_m::peripheral::cpuid","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","cortex_m::peripheral::scb","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","cortex_m::peripheral::syst","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","cortex_m::register::control","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","cortex_m::register::faultmask","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","cortex_m::register::primask","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","cortex_m::register::apsr","",38,[[["formatter"],["self"]],["result"]]],[11,"eq","cortex_m::peripheral::cpuid","",5,[[["csselrcachetype"],["self"]],["bool"]]],[11,"eq","cortex_m::peripheral::scb","",19,[[["exception"],["self"]],["bool"]]],[11,"eq","","",20,[[["vectactive"],["self"]],["bool"]]],[11,"ne","","",20,[[["vectactive"],["self"]],["bool"]]],[11,"eq","","",22,[[["systemhandler"],["self"]],["bool"]]],[11,"eq","cortex_m::peripheral::syst","",25,[[["self"],["systclksource"]],["bool"]]],[11,"eq","cortex_m::register::control","",32,[[["npriv"],["self"]],["bool"]]],[11,"eq","","",33,[[["self"],["spsel"]],["bool"]]],[11,"eq","","",34,[[["fpca"],["self"]],["bool"]]],[11,"eq","cortex_m::register::faultmask","",36,[[["self"],["faultmask"]],["bool"]]],[11,"eq","cortex_m::register::primask","",37,[[["primask"],["self"]],["bool"]]],[11,"clone","cortex_m::peripheral::cpuid","",5,[[["self"]],["csselrcachetype"]]],[11,"clone","cortex_m::peripheral::scb","",19,[[["self"]],["exception"]]],[11,"clone","","",20,[[["self"]],["vectactive"]]],[11,"clone","","",22,[[["self"]],["systemhandler"]]],[11,"clone","cortex_m::peripheral::syst","",25,[[["self"]],["systclksource"]]],[11,"clone","cortex_m::register::control","",35,[[["self"]],["control"]]],[11,"clone","","",32,[[["self"]],["npriv"]]],[11,"clone","","",33,[[["self"]],["spsel"]]],[11,"clone","","",34,[[["self"]],["fpca"]]],[11,"clone","cortex_m::register::faultmask","",36,[[["self"]],["faultmask"]]],[11,"clone","cortex_m::register::primask","",37,[[["self"]],["primask"]]],[11,"clone","cortex_m::register::apsr","",38,[[["self"]],["apsr"]]],[11,"new","cortex_m::interrupt","Creates a critical section token",39,[[],["criticalsection"]]],[11,"new","","Creates a new mutex",40,[[["t"]],["mutex"]]],[11,"borrow","","Borrows the data for the duration of the critical section",40,[[["criticalsection"],["self"]],["t"]]]],"p":[[8,"Nr"],[3,"Peripherals"],[3,"RegisterBlock"],[3,"CBP"],[3,"RegisterBlock"],[4,"CsselrCacheType"],[3,"CPUID"],[3,"RegisterBlock"],[3,"DCB"],[3,"RegisterBlock"],[3,"Comparator"],[3,"DWT"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"Stim"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"NVIC"],[3,"RegisterBlock"],[4,"Exception"],[4,"VectActive"],[13,"Interrupt"],[4,"SystemHandler"],[3,"SCB"],[3,"RegisterBlock"],[4,"SystClkSource"],[3,"SYST"],[3,"RegisterBlock"],[3,"FPB"],[3,"ITM"],[3,"MPU"],[3,"TPIU"],[4,"Npriv"],[4,"Spsel"],[4,"Fpca"],[3,"Control"],[4,"Faultmask"],[4,"Primask"],[3,"Apsr"],[3,"CriticalSection"],[3,"Mutex"],[3,"FPU"]]};
searchIndex["cortex_m_rt"] = {"doc":"Startup code and minimal runtime for Cortex-M…","i":[[23,"interrupt","cortex_m_rt","Attribute to declare an interrupt (AKA device-specific…",null,null],[23,"entry","","Attribute to declare the entry point of the program",null,null],[23,"exception","","Attribute to declare an exception handler",null,null],[23,"pre_init","","Attribute to mark which function will be called at the…",null,null],[3,"ExceptionFrame","","Registers stacked (pushed into the stack) during an…",null,null],[12,"r0","","(General purpose) Register 0",0,null],[12,"r1","","(General purpose) Register 1",0,null],[12,"r2","","(General purpose) Register 2",0,null],[12,"r3","","(General purpose) Register 3",0,null],[12,"r12","","(General purpose) Register 12",0,null],[12,"lr","","Linker Register",0,null],[12,"pc","","Program Counter",0,null],[12,"xpsr","","Program Status Register",0,null],[5,"heap_start","","Returns a pointer to the start of the heap",null,[[]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"clone","","",0,[[["self"]],["exceptionframe"]]]],"p":[[3,"ExceptionFrame"]]};
searchIndex["cstr_core"] = {"doc":"","i":[[6,"c_char","cstr_core","Re-export c_char",null,null],[3,"CStr","","Representation of a borrowed C string.",null,null],[3,"FromBytesWithNulError","","An error returned from [`CStr::from_bytes_with_nul`] to…",null,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",0,[[],["cstr"]]],[11,"from_bytes_with_nul","","Creates a C string wrapper from a byte slice.",0,[[],[["result",["cstr","frombyteswithnulerror"]],["frombyteswithnulerror"],["cstr"]]]],[11,"from_bytes_with_nul_unchecked","","Unsafely creates a C string wrapper from a byte slice.",0,[[],["cstr"]]],[11,"as_ptr","","Returns the inner pointer to this C string.",0,[[["self"]]]],[11,"to_bytes","","Converts this C string to a byte slice.",0,[[["self"]]]],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the…",0,[[["self"]]]],[11,"to_str","","Yields a [`&str`] slice if the `CStr` contains valid UTF-8.",0,[[["self"]],[["str"],["utf8error"],["result",["str","utf8error"]]]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"eq","","",1,[[["frombyteswithnulerror"],["self"]],["bool"]]],[11,"ne","","",1,[[["frombyteswithnulerror"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["cstr"]],["bool"]]],[11,"cmp","","",0,[[["self"],["cstr"]],["ordering"]]],[11,"partial_cmp","","",0,[[["self"],["cstr"]],[["option",["ordering"]],["ordering"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"as_ref","","",0,[[["self"]],["cstr"]]],[11,"clone","","",1,[[["self"]],["frombyteswithnulerror"]]]],"p":[[3,"CStr"],[3,"FromBytesWithNulError"]]};
searchIndex["cty"] = {"doc":"Type aliases to C types like c_int for use with bindgen","i":[[6,"c_char","cty","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_short","","",null,null],[6,"c_longlong","","",null,null],[6,"c_uchar","","",null,null],[6,"c_ushort","","",null,null],[6,"c_ulonglong","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"c_void","","",null,null]],"p":[]};
searchIndex["druid"] = {"doc":"Simple data-oriented GUI.","i":[[3,"Affine","druid","A 2D affine transform.",null,null],[12,"0","","",0,null],[3,"Point","","A 2d point.",null,null],[12,"x","","The x coordinate.",1,null],[12,"y","","The y coordinate.",1,null],[3,"Rect","","A rectangle.",null,null],[12,"x0","","The minimum x coordinate (left edge).",2,null],[12,"y0","","The minimum y coordinate (top edge in y-down spaces).",2,null],[12,"x1","","The maximum x coordinate (right edge).",2,null],[12,"y1","","The maximum y coordinate (bottom edge in y-down spaces).",2,null],[8,"Shape","","A generic trait for open and closed shapes.",null,null],[16,"BezPathIter","","The iterator resulting from `to_bez_path`.",3,null],[10,"to_bez_path","","Convert to a Bézier path, as an iterator over path elements.",3,[[["f64"],["self"]]]],[11,"into_bez_path","","Convert into a Bézier path.",3,[[["f64"]],["bezpath"]]],[10,"area","","Signed area.",3,[[["self"]],["f64"]]],[10,"perimeter","","Total length of perimeter.",3,[[["f64"],["self"]],["f64"]]],[10,"winding","","Winding number of point.",3,[[["point"],["self"]],["i32"]]],[10,"bounding_box","","The smallest rectangle that encloses the shape.",3,[[["self"]],["rect"]]],[11,"as_line","","If the shape is a line, make it available.",3,[[["self"]],[["option",["line"]],["line"]]]],[11,"as_rect","","If the shape is a rectangle, make it available.",3,[[["self"]],[["rect"],["option",["rect"]]]]],[11,"as_rounded_rect","","If the shape is a rounded rectangle, make it available.",3,[[["self"]],[["option",["roundedrect"]],["roundedrect"]]]],[11,"as_circle","","If the shape is a circle, make it available.",3,[[["self"]],[["circle"],["option",["circle"]]]]],[11,"as_path_slice","","If the shape is stored as a slice of path elements, make…",3,[[["self"]],["option"]]],[3,"Size","","A 2d size.",null,null],[12,"width","","The width.",4,null],[12,"height","","The height.",4,null],[3,"DruidContext","","",null,null],[4,"MouseButton","","An indicator of which mouse button was pressed.",null,null],[13,"Left","","Left mouse button.",5,null],[13,"Middle","","Middle mouse button.",5,null],[13,"Right","","Right mouse button.",5,null],[13,"X1","","First X button.",5,null],[13,"X2","","Second X button.",5,null],[6,"Text","","The platform text factory, reexported from piet.",null,null],[8,"WinCtx","","A context supplied to most `WinHandler` methods.",null,null],[10,"invalidate","","Invalidate the entire window.",6,[[["self"]]]],[10,"text_factory","","Get a reference to an object that can do text layout.",6,[[["self"]]]],[10,"set_cursor","","Set the cursor icon.",6,[[["self"],["cursor"]]]],[3,"WindowHandle","","A handle to a platform window object.",null,null],[12,"0","","",7,null],[24,"Data","","",null,null],[6,"WindowIdType","","Windows are identified by an 8-bit ID",null,null],[5,"start_display","","Initialise the display controller",null,[[],[["mynewterror"],["result",["mynewterror"]]]]],[5,"draw_to_display","","Draw the item to the display",null,[[["t"]]]],[5,"set_display_pixels","","Draw the pixel colours to the display at the window from…",null,[[["u16"],["p"]],["result"]]],[5,"show_touch","","Display the touched (X, Y) coordinates",null,[[["u16"]],[["mynewterror"],["result",["mynewterror"]]]]],[3,"PlatformWindowHandle","","",null,null],[12,"window_id","","",8,null],[12,"state","","",8,null],[3,"PlatformWindowState","","",null,null],[12,"window_id","","",9,null],[12,"handler","","",9,null],[3,"AppLauncher","","Handles initial setup of an application, and starts the…",null,null],[12,"windows","","",10,null],[12,"phantom_data","","",10,null],[3,"WindowDesc","","A function that can create a widget. A description of a…",null,null],[12,"root_builder","","",11,null],[12,"size","","",11,null],[12,"id","","The `WindowId` that will be assigned to this window.",11,null],[12,"phantom_data","","",11,null],[3,"LocalizedString","","A string that can be localized based on the current locale.",null,null],[12,"key","","",12,null],[12,"placeholder","","",12,null],[12,"args","","",12,null],[12,"resolved","","",12,null],[3,"MouseEvent","","The state of the mouse for a click, mouse-up, or move event.",null,null],[12,"pos","","The position of the mouse in the coordinate space of the…",13,null],[12,"window_pos","","The position of the mouse in the coordinate space of the…",13,null],[12,"count","","The number of mouse clicks associated with this event.…",13,null],[3,"AppState","","State shared by all windows in the UI.",null,null],[12,"phantom","","",14,null],[3,"DruidHandler","","The struct implements the druid-shell `WinHandler` trait.",null,null],[12,"window_id","","The shared app state. The id for the current window.",15,null],[12,"phantom","","",15,null],[3,"Window","","Per-window state not owned by user code.",null,null],[12,"root","","",16,null],[12,"size","","",16,null],[12,"phantom_data","","",16,null],[3,"WindowId","","A unique identifier for a window.",null,null],[12,"0","","",17,null],[3,"WindowBox","","Boxed version of a `Window`",null,null],[12,"0","","",18,null],[3,"WidgetBox","","Boxed version of a `Widget`",null,null],[12,"0","","",19,null],[12,"1","","",19,null],[3,"WidgetPod","","A container for one widget in the hierarchy.",null,null],[12,"state","","",20,null],[12,"old_data","","",20,null],[12,"env","","",20,null],[12,"inner","","",20,null],[3,"BaseState","","Generic state for all widgets in the hierarchy.",null,null],[12,"layout_rect","","",21,null],[12,"needs_inval","","",21,null],[12,"is_hot","","",21,null],[12,"is_active","","",21,null],[12,"has_active","","Any descendant is active.",21,null],[12,"request_anim","","Any descendant has requested an animation frame.",21,null],[12,"request_timer","","Any descendant has requested a timer.",21,null],[12,"has_focus","","This widget or a descendant has focus.",21,null],[12,"request_focus","","This widget or a descendant has requested focus.",21,null],[3,"PaintCtx","","A context passed to paint methods of widgets.",null,null],[12,"render_ctx","","The render context for actually painting.",22,null],[12,"window_id","","",22,null],[12,"region","","The currently visible region.",22,null],[3,"Region","","A region of a widget, generally used to describe what…",null,null],[12,"0","","",23,null],[3,"LayoutCtx","","A context provided to layout handling methods of widgets.",null,null],[12,"text_factory","","",24,null],[12,"window_id","","",24,null],[3,"EventCtx","","A mutable context provided to event handling methods of…",null,null],[12,"win_ctx","","",25,null],[12,"window_id","","Commands submitted to be run after this event.",25,null],[12,"window","","",25,null],[12,"base_state","","",25,null],[12,"had_active","","",25,null],[12,"is_handled","","",25,null],[12,"is_root","","",25,null],[3,"UpdateCtx","","A mutable context provided to data update methods of…",null,null],[12,"text_factory","","",26,null],[12,"window","","",26,null],[12,"needs_inval","","",26,null],[12,"window_id","","",26,null],[3,"BoxConstraints","","Constraints for layout.",null,null],[12,"min","","",27,null],[12,"max","","",27,null],[4,"Event","","An event, propagated downwards during event flow.",null,null],[13,"Size","","Called when the system has a file the application should…",28,null],[13,"MouseDown","","Called when a mouse button is pressed.",28,null],[13,"MouseUp","","Called when a mouse button is released.",28,null],[13,"MouseMoved","","Called when the mouse is moved.",28,null],[13,"HotChanged","","Called when a key is pressed.",28,null],[13,"FocusChanged","","Called when the focus status changes.",28,null],[4,"WindowType","","Enum to store each `Window`",null,null],[13,"None","","",29,null],[13,"Align","","",29,null],[13,"Flex","","",29,null],[13,"Padding","","",29,null],[4,"WidgetType","","Enum to store each `Widget`",null,null],[13,"None","","",30,null],[13,"Align","","",30,null],[13,"Button","","",30,null],[13,"Flex","","",30,null],[13,"Label","","",30,null],[13,"Padding","","",30,null],[0,"app","","Window building and app lifecycle.",null,null],[3,"AppLauncher","druid::app","Handles initial setup of an application, and starts the…",null,null],[12,"windows","","",10,null],[12,"phantom_data","","",10,null],[3,"WindowDesc","","A function that can create a widget. A description of a…",null,null],[12,"root_builder","","",11,null],[12,"size","","",11,null],[12,"id","","The `WindowId` that will be assigned to this window.",11,null],[12,"phantom_data","","",11,null],[6,"MaxWindows","","",null,null],[6,"Vec","","",null,null],[11,"with_window","druid","Create a new `AppLauncher` with the provided window.",10,[[["windowdesc"]],["self"]]],[11,"use_simple_logger","","Initialize a minimal logger for printing logs out to stderr.",10,[[],["self"]]],[11,"launch","","Build the windows and start the runloop.",10,[[["t"]],[["platformerror"],["result",["platformerror"]]]]],[11,"new","","Create a new `WindowDesc`, taking a funciton that will…",11,[[],["windowdesc"]]],[11,"window_size","","Set the window size at creation",11,[[],["self"]]],[11,"build_native","","Attempt to create a platform window from this `WindowDesc`.",11,[[["self"],["appstate"]],[["result",["windowhandle","platformerror"]],["windowhandle",["druidhandler"]],["platformerror"]]]],[0,"argvalue","","",null,null],[4,"ArgValue","druid::argvalue","",null,null],[13,"String","","",31,null],[13,"U32","","",31,null],[13,"I32","","",31,null],[13,"Error","","",31,null],[13,"None","","",31,null],[6,"MaxArgValues","","Max number of arg values",null,null],[6,"ArgValues","","Hash map of arg names to arg values",null,null],[6,"MaxLocalizedString","","",null,null],[6,"String","","",null,null],[11,"to_string","","",31,[[["self"]],[["u20"],["string",["u20"]]]]],[0,"data","druid","Traits for handling value types.",null,null],[24,"Data","druid::data","",null,null],[8,"Data","","A trait used to represent value types.",null,null],[10,"same","","Determine whether two values are the same.",32,[[["self"]],["bool"]]],[0,"env","druid","An environment which is passed downward into the widget…",null,null],[3,"Env","druid::env","An environment passed down through all widget traversals.",null,null],[3,"Key","","A typed key.",null,null],[12,"key","","",33,null],[12,"value_type","","",33,null],[4,"Value","","A dynamic type representing all values that can be stored…",null,null],[13,"Point","","",34,null],[13,"Size","","",34,null],[13,"Rect","","",34,null],[13,"Color","","",34,null],[13,"Float","","",34,null],[13,"UnsignedInt","","",34,null],[13,"String","","",34,null],[6,"MaxStringValue","","",null,null],[6,"String","","",null,null],[6,"EnvError","","The error type for environment access.",null,null],[17,"FONT_HEIGHT","","",null,null],[17,"FONT_NAME","","",null,null],[17,"TEXT_SIZE_NORMAL","","",null,null],[17,"WINDOW_WIDTH","","",null,null],[17,"WINDOW_HEIGHT","","",null,null],[17,"WINDOW_BACKGROUND_COLOR","","",null,null],[17,"LABEL_COLOR","","",null,null],[17,"BORDER","","",null,null],[8,"ValueType","","Values which can be stored in an environment.",null,null],[16,"Owned","","The corresponding owned type.",35,null],[10,"try_from_value","","Attempt to convert the generic `Value` into this type.",35,[[["value"]],[["result",["enverror"]],["enverror"]]]],[11,"get","","Gets a value from the environment, expecting it to be…",36,[[["key"],["self"],["valuetype"]],["valuetype"]]],[11,"try_get","","Gets a value from the environment.",36,[[["key"],["self"],["valuetype"]],[["option"],["valuetype"]]]],[11,"adding","","Adds a key/value, acting like a builder.",36,[[["key"],["valuetype"]],["env"]]],[11,"set","","Sets a value in an environment.",36,[[["key"],["valuetype"],["self"]]]],[11,"new","","Create a new strongly typed `Key` with the given string…",33,[[["str"]],["self"]]],[11,"to_inner_unchecked","","Get a reference to the inner object.",34,[[["self"]],["valuetype"]]],[11,"is_same_type","","",34,[[["self"],["value"]],["bool"]]],[0,"event","druid","Events.",null,null],[4,"Event","druid::event","An event, propagated downwards during event flow.",null,null],[13,"Size","","Called when the system has a file the application should…",28,null],[13,"MouseDown","","Called when a mouse button is pressed.",28,null],[13,"MouseUp","","Called when a mouse button is released.",28,null],[13,"MouseMoved","","Called when the mouse is moved.",28,null],[13,"HotChanged","","Called when a key is pressed.",28,null],[13,"FocusChanged","","Called when the focus status changes.",28,null],[11,"transform_scroll","druid","Transform the event for the contents of a scrolling…",28,[[["rect"],["self"],["vec2"]],[["event"],["option",["event"]]]]],[11,"recurse","","Whether the event should be propagated from parent to…",28,[[["self"]],["bool"]]],[0,"localization","","Localization handling.",null,null],[3,"ArgSource","druid::localization","Wraps a closure that generates an argument for localization.",null,null],[12,"0","","",37,null],[3,"LocalizedString","","A string that can be localized based on the current locale.",null,null],[12,"key","","",12,null],[12,"placeholder","","",12,null],[12,"args","","",12,null],[12,"resolved","","",12,null],[6,"MaxLocalizedString","","",null,null],[6,"String","","",null,null],[6,"MaxLocalizedArg","","",null,null],[6,"Vec","","",null,null],[6,"ArgClosure","","",null,null],[11,"new","druid","Create a new `LocalizedString` with the given key.",12,[[["str"]],["self"]]],[11,"localized_str","","Return the localized value for this string, or the…",12,[[["self"]],["str"]]],[11,"with_arg","","Add a named argument and a corresponding [`ArgClosure`].…",12,[[["str"]],["self"]]],[11,"resolve","","Lazily compute the localized value for this string based…",12,[[["self"],["t"],["env"]],["bool"]]],[0,"mouse","","The mousey bits",null,null],[3,"MouseEvent","druid::mouse","The state of the mouse for a click, mouse-up, or move event.",null,null],[12,"pos","","The position of the mouse in the coordinate space of the…",13,null],[12,"window_pos","","The position of the mouse in the coordinate space of the…",13,null],[12,"count","","The number of mouse clicks associated with this event.…",13,null],[0,"widget","druid","Common widgets.",null,null],[3,"WidgetBox","druid::widget","Boxed version of a `Widget`",null,null],[12,"0","","",19,null],[12,"1","","",19,null],[3,"Align","","A widget that aligns its child.",null,null],[12,"id","","",38,null],[12,"align","","",38,null],[12,"child","","",38,null],[12,"width_factor","","",38,null],[12,"height_factor","","",38,null],[3,"Button","","A button with a text label.",null,null],[12,"id","","",39,null],[12,"label","","",39,null],[12,"action","","",39,null],[3,"Label","","A label that displays some text.",null,null],[12,"id","","",40,null],[12,"text","","",40,null],[12,"align","","",40,null],[3,"Column","","A builder for a column widget that can contain flex…",null,null],[3,"Flex","","A container with either horizontal or vertical layout.",null,null],[12,"id","","",41,null],[12,"direction","","",41,null],[12,"children","","",41,null],[3,"Row","","A builder for a row widget that can contain flex children.",null,null],[3,"Padding","","A widget that just adds padding around its child.",null,null],[12,"id","","",42,null],[12,"left","","",42,null],[12,"right","","",42,null],[12,"top","","",42,null],[12,"bottom","","",42,null],[12,"child","","",42,null],[4,"WidgetType","","Enum to store each `Widget`",null,null],[13,"None","","",30,null],[13,"Align","","",30,null],[13,"Button","","",30,null],[13,"Flex","","",30,null],[13,"Label","","",30,null],[13,"Padding","","",30,null],[4,"LabelText","","The text for the label; either a localized or a specific…",null,null],[13,"Localized","","",43,null],[13,"Specific","","",43,null],[5,"get_widget_id","","Assign a unique Widget ID",null,[[],["widgetid"]]],[0,"widgetbox","","`WidgetBox` contains a `Widget`. Allows for dynamic…",null,null],[3,"WidgetBox","druid::widget::widgetbox","Boxed version of a `Widget`",null,null],[12,"0","","",19,null],[12,"1","","",19,null],[4,"WidgetType","","Enum to store each `Widget`",null,null],[13,"None","","",30,null],[13,"Align","","",30,null],[13,"Button","","",30,null],[13,"Flex","","",30,null],[13,"Label","","",30,null],[13,"Padding","","",30,null],[5,"get_widget_id","","Assign a unique Widget ID",null,[[],["widgetid"]]],[6,"WidgetId","","Widgets are identified by an 8-bit ID",null,null],[7,"WIDGET_ID","","Unique Widget ID",null,null],[17,"MAX_WIDGETS","","Max number of `Widgets` on embedded platforms",null,null],[8,"GlobalWidgets","","Specialised Trait for handling static `Widgets` on…",null,null],[10,"get_widgets","","Fetch the static `Widgets` for the Data type",44,[[["self"]]]],[10,"add_widget","","Add a `Widget` for the Data type",44,[[["self"],["widgettype"]]]],[11,"new","druid","Create a new box for the `Widget`",19,[[["widget"],["clone"]],["self"]]],[0,"align","druid::widget","A widget that aligns its child (for example, centering it).",null,null],[3,"Align","druid::widget::align","A widget that aligns its child.",null,null],[12,"id","","",38,null],[12,"align","","",38,null],[12,"child","","",38,null],[12,"width_factor","","",38,null],[12,"height_factor","","",38,null],[11,"new","druid::widget","Create widget with alignment.",38,[[["widget"],["clone"],["unitpoint"]],["align"]]],[11,"centered","","Create centered widget.",38,[[["clone"],["widget"]],["align"]]],[11,"right","","Create right-aligned widget.",38,[[["clone"],["widget"]],["align"]]],[11,"left","","Create left-aligned widget.",38,[[["clone"],["widget"]],["align"]]],[11,"horizontal","","Align only in the horizontal axis, keeping the child's…",38,[[["widget"],["clone"],["unitpoint"]],["align"]]],[11,"vertical","","Align only in the vertical axis, keeping the child's size…",38,[[["widget"],["clone"],["unitpoint"]],["align"]]],[0,"button","","A button widget.",null,null],[3,"Button","druid::widget::button","A button with a text label.",null,null],[12,"id","","",39,null],[12,"label","","",39,null],[12,"action","","",39,null],[11,"new","druid::widget","Create a new button. The closure provided will be called…",39,[[],["button"]]],[0,"label","","A label widget.",null,null],[3,"Label","druid::widget::label","A label that displays some text.",null,null],[12,"id","","",40,null],[12,"text","","",40,null],[12,"align","","",40,null],[4,"LabelText","","The text for the label; either a localized or a specific…",null,null],[13,"Localized","","",43,null],[13,"Specific","","",43,null],[6,"MaxLabel","","",null,null],[6,"String","","",null,null],[11,"new","druid::widget","Discussion question: should this return Label or a wrapped…",40,[[],["self"]]],[11,"aligned","","",40,[[["unitpoint"]],["self"]]],[11,"get_layout","","",40,[[["piettext"],["self"],["env"]],["piettextlayout"]]],[11,"display_text","","The text that should be displayed. This ensures that…",43,[[["self"]],["str"]]],[11,"resolve","","Update the localization, if necessary.",43,[[["self"],["t"],["env"]],["bool"]]],[0,"flex","","A widget that arranges its children in a one-dimensional…",null,null],[3,"Row","druid::widget::flex","A builder for a row widget that can contain flex children.",null,null],[3,"Column","","A builder for a column widget that can contain flex…",null,null],[3,"Flex","","A container with either horizontal or vertical layout.",null,null],[12,"id","","",41,null],[12,"direction","","",41,null],[12,"children","","",41,null],[3,"ChildWidget","","",null,null],[12,"widget","","",45,null],[12,"params","","",45,null],[3,"Params","","",null,null],[12,"flex","","",46,null],[4,"Axis","","",null,null],[13,"Horizontal","","",47,null],[13,"Vertical","","",47,null],[6,"MaxWidgets","","",null,null],[6,"Vec","","",null,null],[11,"major","","",47,[[["size"],["self"]],["f64"]]],[11,"minor","","",47,[[["size"],["self"]],["f64"]]],[11,"pack","","",47,[[["f64"],["self"]]]],[11,"new","druid::widget","Create a new row widget.",48,[[],[["flex"],["data"],["default"]]]],[11,"new","","Create a new row widget.",49,[[],[["flex"],["data"],["default"]]]],[11,"add_child","","Add a child widget.",41,[[["f64"],["self"],["clone"],["widget"]]]],[0,"padding","","A widget that just adds padding during layout.",null,null],[3,"Padding","druid::widget::padding","A widget that just adds padding around its child.",null,null],[12,"id","","",42,null],[12,"left","","",42,null],[12,"right","","",42,null],[12,"top","","",42,null],[12,"bottom","","",42,null],[12,"child","","",42,null],[11,"new","druid::widget","Create a new widget with the specified padding. This can…",42,[[["clone"],["widget"]],["padding"]]],[6,"WidgetId","","Widgets are identified by an 8-bit ID",null,null],[17,"MAX_WIDGETS","","Max number of `Widgets` on embedded platforms",null,null],[8,"GlobalWidgets","","Specialised Trait for handling static `Widgets` on…",null,null],[10,"get_widgets","","Fetch the static `Widgets` for the Data type",44,[[["self"]]]],[10,"add_widget","","Add a `Widget` for the Data type",44,[[["self"],["widgettype"]]]],[0,"win_handler","druid","The implementation of the WinHandler trait (druid-shell…",null,null],[3,"DruidHandler","druid::win_handler","The struct implements the druid-shell `WinHandler` trait.",null,null],[12,"window_id","","The shared app state. The id for the current window.",15,null],[12,"phantom","","",15,null],[3,"AppState","","State shared by all windows in the UI.",null,null],[12,"phantom","","",14,null],[3,"Windows","","All active windows.",null,null],[12,"phantom","","",50,null],[3,"WindowState","","Per-window state not owned by user code.",null,null],[12,"window_id","","",51,null],[12,"phantom","","",51,null],[12,"handle","","",51,null],[3,"SingleWindowState","","Everything required for a window to handle an event.",null,null],[12,"window_id","","",52,null],[12,"phantom","","",52,null],[17,"MAX_WINDOWS","","Max number of Windows supported. i=0 is not used, so…",null,null],[8,"GlobalWindows","","Specialised Trait for handling static Windows, Window…",null,null],[10,"add_window","","Add a WindowBox for the Data type",53,[[["windowbox"],["self"],["windowid"]]]],[10,"add_handler","","Add a Window Handler for the Data type",53,[[["druidhandler"],["self"],["windowid"]]]],[10,"get_handle","","Return a Window Handle that wraps the Window Handler for…",53,[[["self"],["windowid"]],[["druidhandler"],["windowhandle",["druidhandler"]]]]],[10,"set_data","","Set the application data",53,[[["d"],["self"]]]],[10,"window_event","","Handle the Window event",53,[[["eventctx"],["self"],["event"],["windowid"]]]],[10,"window_update","","Handle the Window update",53,[[["self"],["updatectx"],["windowid"]]]],[10,"window_layout","","Handle the Window layout",53,[[["self"],["layoutctx"],["windowid"]]]],[10,"window_paint","","Handle the Window painting",53,[[["self"],["paintctx"],["windowid"]]]],[10,"window_has_active","","Return true if Window is active",53,[[["self"],["windowid"]],["bool"]]],[11,"connect","","",50,[[["druidhandler"],["windowhandle",["druidhandler"]],["self"],["windowid"]]]],[11,"add","","",50,[[["windowbox"],["self"],["windowid"]]]],[11,"remove","","",50,[[["self"],["windowid"]],[["option",["windowhandle"]],["windowhandle",["druidhandler"]]]]],[11,"get","","",50,[[["t"],["env"],["self"],["windowid"]],[["singlewindowstate"],["option",["singlewindowstate"]]]]],[11,"paint","","",52,[[["self"],["piet"],["winctx"]],["bool"]]],[11,"do_layout","","",52,[[["self"],["piet"]]]],[11,"do_paint","","",52,[[["self"],["piet"]]]],[11,"do_event_inner","","Send an event to the widget hierarchy.",52,[[["event"],["self"],["winctx"]]]],[11,"window_got_focus","","",52,[[["self"]]]],[11,"new","druid","",14,[[],["self"]]],[11,"remove_window","","",14,[[["self"],["windowid"]],[["option",["windowhandle"]],["windowhandle",["druidhandler"]]]]],[11,"show_window","","",14,[[["self"],["windowid"]]]],[11,"assemble_window_state","","",14,[[["self"],["windowid"]],[["singlewindowstate"],["option",["singlewindowstate"]]]]],[11,"paint","","",14,[[["piet"],["winctx"],["self"],["windowid"]],["bool"]]],[11,"do_event","","",14,[[["winctx"],["event"],["self"],["windowid"]],["bool"]]],[11,"window_got_focus","","",14,[[["winctx"],["self"],["windowid"]]]],[11,"new_shared","","Note: the root widget doesn't go in here, because it gets…",15,[[["windowid"]],["druidhandler"]]],[11,"do_event","","Send an event to the widget hierarchy.",15,[[["event"],["self"],["winctx"]],["bool"]]],[0,"window","","Management of multiple windows.",null,null],[3,"WindowId","druid::window","A unique identifier for a window.",null,null],[12,"0","","",17,null],[3,"Window","","Per-window state not owned by user code.",null,null],[12,"root","","",16,null],[12,"size","","",16,null],[12,"phantom_data","","",16,null],[7,"WINDOW_ID_COUNTER","","",null,null],[11,"new","druid","",16,[[["w"]],["self"]]],[11,"event","","",16,[[["eventctx"],["t"],["env"],["self"],["event"]]]],[11,"update","","",16,[[["t"],["env"],["self"],["updatectx"]]]],[11,"layout","","",16,[[["layoutctx"],["t"],["env"],["self"]]]],[11,"paint","","",16,[[["t"],["paintctx"],["env"],["self"]]]],[11,"next","","Allocate a new, unique window id.",17,[[],["windowid"]]],[0,"windowbox","","`WindowBox` contains a `Window`. Allows for dynamic…",null,null],[3,"WindowBox","druid::windowbox","Boxed version of a `Window`",null,null],[12,"0","","",18,null],[4,"WindowType","","Enum to store each `Window`",null,null],[13,"None","","",29,null],[13,"Align","","",29,null],[13,"Flex","","",29,null],[13,"Padding","","",29,null],[11,"new","druid","Create a new empty box without a `Window`",18,[[],["self"]]],[11,"event","","",18,[[["eventctx"],["d"],["env"],["self"],["event"]]]],[11,"update","","",18,[[["d"],["env"],["self"],["updatectx"]]]],[11,"layout","","",18,[[["d"],["layoutctx"],["env"],["self"]]]],[11,"paint","","",18,[[["d"],["paintctx"],["env"],["self"]]]],[11,"has_active","","",18,[[["self"]],["bool"]]],[6,"WidgetId","","Widgets are identified by an 8-bit ID",null,null],[17,"MAX_WINDOWS","","Max number of Windows supported. i=0 is not used, so…",null,null],[17,"MAX_WIDGETS","","Max number of `Widgets` on embedded platforms",null,null],[8,"Data","","A trait used to represent value types.",null,null],[10,"same","","Determine whether two values are the same.",32,[[["self"]],["bool"]]],[8,"GlobalWindows","","Specialised Trait for handling static Windows, Window…",null,null],[10,"add_window","","Add a WindowBox for the Data type",53,[[["windowbox"],["self"],["windowid"]]]],[10,"add_handler","","Add a Window Handler for the Data type",53,[[["druidhandler"],["self"],["windowid"]]]],[10,"get_handle","","Return a Window Handle that wraps the Window Handler for…",53,[[["self"],["windowid"]],[["druidhandler"],["windowhandle",["druidhandler"]]]]],[10,"set_data","","Set the application data",53,[[["d"],["self"]]]],[10,"window_event","","Handle the Window event",53,[[["eventctx"],["self"],["event"],["windowid"]]]],[10,"window_update","","Handle the Window update",53,[[["self"],["updatectx"],["windowid"]]]],[10,"window_layout","","Handle the Window layout",53,[[["self"],["layoutctx"],["windowid"]]]],[10,"window_paint","","Handle the Window painting",53,[[["self"],["paintctx"],["windowid"]]]],[10,"window_has_active","","Return true if Window is active",53,[[["self"],["windowid"]],["bool"]]],[8,"GlobalWidgets","","Specialised Trait for handling static `Widgets` on…",null,null],[10,"get_widgets","","Fetch the static `Widgets` for the Data type",44,[[["self"]]]],[10,"add_widget","","Add a `Widget` for the Data type",44,[[["self"],["widgettype"]]]],[8,"Widget","","The trait implemented by all widgets.",null,null],[10,"paint","","Paint the widget appearance.",54,[[["t"],["paintctx"],["env"],["self"],["basestate"]]]],[10,"layout","","Compute layout.",54,[[["layoutctx"],["t"],["env"],["self"],["boxconstraints"]],["size"]]],[10,"event","","Handle an event.",54,[[["eventctx"],["t"],["env"],["self"],["event"]]]],[10,"update","","Handle a change of data.",54,[[["option"],["t"],["env"],["self"],["updatectx"]]]],[10,"to_type","","Wrap this `Widget` in a `WidgetType` enum for boxing by…",54,[[],["widgettype"]]],[10,"new_window","","Wrap this `Widget` in a `WindowBox` as the root of the…",54,[[],["windowbox"]]],[10,"get_id","","Return the unique ID for this `Widget`",54,[[],["widgetid"]]],[11,"to_rect","","Returns the smallest `Rect` that encloses the entire region.",23,[[["self"]],["rect"]]],[11,"intersects","","Returns `true` if `self` intersects with `other`.",23,[[["self"],["rect"]],["bool"]]],[11,"region","","Returns the currently visible [`Region`].",22,[[["self"]],["region"]]],[11,"with_child_ctx","","Creates a temporary `PaintCtx` with a new visible region,…",22,[[["self"]]]],[11,"new","","Create a new widget pod.",20,[[["w"]],["widgetpod"]]],[11,"widget","","Return a reference to the inner widget.",20,[[["self"]],["w"]]],[11,"widget_mut","","Return a mutable reference to the inner widget.",20,[[["self"]],["w"]]],[11,"set_layout_rect","","Set layout rectangle.",20,[[["self"],["rect"]]]],[11,"get_layout_rect","","Get the layout rectangle.",20,[[["self"]],["rect"]]],[11,"paint","","Paint a child widget.",20,[[["t"],["paintctx"],["env"],["self"]]]],[11,"paint_with_offset","","Paint the widget, translating it by the origin of its…",20,[[["t"],["paintctx"],["env"],["self"]]]],[11,"paint_with_offset_always","","Paint the widget, even if its layout rect is outside of…",20,[[["t"],["paintctx"],["env"],["self"]]]],[11,"paint_with_offset_impl","","Shared implementation that can skip drawing non-visible…",20,[[["t"],["paintctx"],["env"],["self"],["bool"]]]],[11,"layout","","Compute layout of a widget.",20,[[["layoutctx"],["t"],["env"],["self"],["boxconstraints"]],["size"]]],[11,"event","","Propagate an event.",20,[[["eventctx"],["t"],["env"],["self"],["event"]]]],[11,"update","","Propagate a data update.",20,[[["t"],["env"],["self"],["updatectx"]]]],[11,"is_hot","","The \"hot\" (aka hover) status of a widget.",21,[[["self"]],["bool"]]],[11,"is_active","","The active status of a widget.",21,[[["self"]],["bool"]]],[11,"has_focus","","The focus status of a widget.",21,[[["self"]],["bool"]]],[11,"size","","The layout size.",21,[[["self"]],["size"]]],[11,"new","","Create a new box constraints object.",27,[[["size"]],["boxconstraints"]]],[11,"tight","","Create a \"tight\" box constraints object.",27,[[["size"]],["boxconstraints"]]],[11,"loosen","","Create a \"loose\" version of the constraints.",27,[[["self"]],["boxconstraints"]]],[11,"constrain","","Clamp a given size so that fits within the constraints.",27,[[["self"]],["size"]]],[11,"max","","Returns the max size of these constraints.",27,[[["self"]],["size"]]],[11,"min","","Returns the min size of these constraints.",27,[[["self"]],["size"]]],[11,"is_width_bounded","","Whether there is an upper bound on the width.",27,[[["self"]],["bool"]]],[11,"is_height_bounded","","Whether there is an upper bound on the height.",27,[[["self"]],["bool"]]],[11,"debug_check","","Check to see if these constraints are legit.",27,[[["str"],["self"]]]],[11,"shrink","","Shrink min and max constraints by size",27,[[["self"]],["boxconstraints"]]],[11,"invalidate","","Invalidate.",25,[[["self"]]]],[11,"text","","Get an object which can create text layouts.",25,[[["self"]],["text"]]],[11,"set_active","","Set the \"active\" state of the widget.",25,[[["self"],["bool"]]]],[11,"is_hot","","Query the \"hot\" state of the widget.",25,[[["self"]],["bool"]]],[11,"is_active","","Query the \"active\" state of the widget.",25,[[["self"]],["bool"]]],[11,"window","","Returns a reference to the current `WindowHandle`.",25,[[["self"]],["windowhandle"]]],[11,"set_handled","","Set the event as \"handled\", which stops its propagation to…",25,[[["self"]]]],[11,"is_handled","","Determine whether the event has been handled by some other…",25,[[["self"]],["bool"]]],[11,"has_focus","","Query the focus state of the widget.",25,[[["self"]],["bool"]]],[11,"request_focus","","Request keyboard focus.",25,[[["self"]]]],[11,"size","","Returns the layout size of the current widget.",25,[[["self"]],["size"]]],[11,"window_id","","Get the window id.",25,[[["self"]],["windowid"]]],[11,"text","","Get an object which can create text layouts.",24,[[["self"]],["text"]]],[11,"window_id","","Get the window id.",24,[[["self"]],["windowid"]]],[11,"invalidate","","Invalidate.",26,[[["self"]]]],[11,"text","","Get an object which can create text layouts.",26,[[["self"]],["text"]]],[11,"window","","Returns a reference to the current `WindowHandle`.",26,[[["self"]],["windowhandle"]]],[11,"window_id","","Get the window id.",26,[[["self"]],["windowid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"round_from","","",0,[[["t"]],["t"]]],[11,"round_into","","",0,[[],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"round_from","","",1,[[["t"]],["t"]]],[11,"round_into","","",1,[[],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"round_from","","",2,[[["t"]],["t"]]],[11,"round_into","","",2,[[],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"round_from","","",4,[[["t"]],["t"]]],[11,"round_into","","",4,[[],["u"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"into","","",55,[[],["u"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"round_from","","",55,[[["t"]],["t"]]],[11,"round_into","","",55,[[],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"round_from","","",5,[[["t"]],["t"]]],[11,"round_into","","",5,[[],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"round_from","","",7,[[["t"]],["t"]]],[11,"round_into","","",7,[[],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"round_from","","",8,[[["t"]],["t"]]],[11,"round_into","","",8,[[],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"round_from","","",9,[[["t"]],["t"]]],[11,"round_into","","",9,[[],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"round_from","","",10,[[["t"]],["t"]]],[11,"round_into","","",10,[[],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"round_from","","",11,[[["t"]],["t"]]],[11,"round_into","","",11,[[],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"round_from","","",12,[[["t"]],["t"]]],[11,"round_into","","",12,[[],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"round_from","","",13,[[["t"]],["t"]]],[11,"round_into","","",13,[[],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"round_from","","",14,[[["t"]],["t"]]],[11,"round_into","","",14,[[],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"round_from","","",15,[[["t"]],["t"]]],[11,"round_into","","",15,[[],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"round_from","","",16,[[["t"]],["t"]]],[11,"round_into","","",16,[[],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"round_from","","",17,[[["t"]],["t"]]],[11,"round_into","","",17,[[],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"round_from","","",18,[[["t"]],["t"]]],[11,"round_into","","",18,[[],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"round_from","","",19,[[["t"]],["t"]]],[11,"round_into","","",19,[[],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"round_from","","",20,[[["t"]],["t"]]],[11,"round_into","","",20,[[],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"round_from","","",21,[[["t"]],["t"]]],[11,"round_into","","",21,[[],["u"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"round_from","","",22,[[["t"]],["t"]]],[11,"round_into","","",22,[[],["u"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"round_from","","",23,[[["t"]],["t"]]],[11,"round_into","","",23,[[],["u"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"round_from","","",24,[[["t"]],["t"]]],[11,"round_into","","",24,[[],["u"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"round_from","","",25,[[["t"]],["t"]]],[11,"round_into","","",25,[[],["u"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"round_from","","",26,[[["t"]],["t"]]],[11,"round_into","","",26,[[],["u"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"round_from","","",27,[[["t"]],["t"]]],[11,"round_into","","",27,[[],["u"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"round_from","","",28,[[["t"]],["t"]]],[11,"round_into","","",28,[[],["u"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"round_from","","",29,[[["t"]],["t"]]],[11,"round_into","","",29,[[],["u"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"round_from","","",30,[[["t"]],["t"]]],[11,"round_into","","",30,[[],["u"]]],[11,"from","druid::argvalue","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"round_from","","",31,[[["t"]],["t"]]],[11,"round_into","","",31,[[],["u"]]],[11,"from","druid::env","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"into","","",36,[[],["u"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"round_from","","",36,[[["t"]],["t"]]],[11,"round_into","","",36,[[],["u"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"round_from","","",33,[[["t"]],["t"]]],[11,"round_into","","",33,[[],["u"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"round_from","","",34,[[["t"]],["t"]]],[11,"round_into","","",34,[[],["u"]]],[11,"from","druid::localization","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"round_from","","",37,[[["t"]],["t"]]],[11,"round_into","","",37,[[],["u"]]],[11,"from","druid::widget","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"round_from","","",38,[[["t"]],["t"]]],[11,"round_into","","",38,[[],["u"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"round_from","","",39,[[["t"]],["t"]]],[11,"round_into","","",39,[[],["u"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"round_from","","",40,[[["t"]],["t"]]],[11,"round_into","","",40,[[],["u"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"into","","",49,[[],["u"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"round_from","","",49,[[["t"]],["t"]]],[11,"round_into","","",49,[[],["u"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"round_from","","",41,[[["t"]],["t"]]],[11,"round_into","","",41,[[],["u"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"into","","",48,[[],["u"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"round_from","","",48,[[["t"]],["t"]]],[11,"round_into","","",48,[[],["u"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"round_from","","",42,[[["t"]],["t"]]],[11,"round_into","","",42,[[],["u"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"round_from","","",43,[[["t"]],["t"]]],[11,"round_into","","",43,[[],["u"]]],[11,"from","druid::widget::flex","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into","","",45,[[],["u"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"round_from","","",45,[[["t"]],["t"]]],[11,"round_into","","",45,[[],["u"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"into","","",46,[[],["u"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"round_from","","",46,[[["t"]],["t"]]],[11,"round_into","","",46,[[],["u"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"into","","",47,[[],["u"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"round_from","","",47,[[["t"]],["t"]]],[11,"round_into","","",47,[[],["u"]]],[11,"from","druid::win_handler","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"into","","",50,[[],["u"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"round_from","","",50,[[["t"]],["t"]]],[11,"round_into","","",50,[[],["u"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"into","","",51,[[],["u"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"round_from","","",51,[[["t"]],["t"]]],[11,"round_into","","",51,[[],["u"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"into","","",52,[[],["u"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"round_from","","",52,[[["t"]],["t"]]],[11,"round_into","","",52,[[],["u"]]],[11,"invalidate","druid","",55,[[["self"]]]],[11,"text_factory","","",55,[[["self"]]]],[11,"set_cursor","","",55,[[["self"],["cursor"]]]],[11,"eq","","",5,[[["mousebutton"],["self"]],["bool"]]],[11,"default","","",7,[[],["windowhandle"]]],[11,"default","","",9,[[],["windowstate"]]],[11,"default","","",8,[[],["windowhandle"]]],[11,"clone","","",7,[[["self"]],["windowhandle"]]],[11,"clone","","",5,[[["self"]],["mousebutton"]]],[11,"clone","","",9,[[["self"]],["windowstate"]]],[11,"clone","","",8,[[["self"]],["windowhandle"]]],[11,"from","","",7,[[["windowhandle"]],["windowhandle"]]],[11,"fmt","","",5,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"add","","",1,[[["vec2"]],["point"]]],[11,"add","","",2,[[["insets"]],["rect"]]],[11,"add","","",2,[[["vec2"]],["rect"]]],[11,"eq","","",4,[[["self"],["size"]],["bool"]]],[11,"ne","","",4,[[["self"],["size"]],["bool"]]],[11,"eq","","",1,[[["self"],["point"]],["bool"]]],[11,"ne","","",1,[[["self"],["point"]],["bool"]]],[11,"mul","","",4,[[["f64"]],["size"]]],[11,"mul","","",0,[[["line"]],["line"]]],[11,"mul","","",0,[[["bezpath"]],["bezpath"]]],[11,"mul","","",0,[[["cubicbez"]],["cubicbez"]]],[11,"mul","","",0,[[["bezpath"]],["bezpath"]]],[11,"mul","","",0,[[["affine"]],["affine"]]],[11,"mul","","",0,[[["point"]],["point"]]],[11,"mul","","",0,[[["pathel"]],["pathel"]]],[11,"mul","","",0,[[["quadbez"]],["quadbez"]]],[11,"to_bez_path","","",2,[[["f64"],["self"]],["rectpathiter"]]],[11,"area","","",2,[[["self"]],["f64"]]],[11,"perimeter","","",2,[[["f64"],["self"]],["f64"]]],[11,"winding","","Note: this function is carefully designed so that if the…",2,[[["point"],["self"]],["i32"]]],[11,"bounding_box","","",2,[[["self"]],["rect"]]],[11,"as_rect","","",2,[[["self"]],[["rect"],["option",["rect"]]]]],[11,"default","","",0,[[],["affine"]]],[11,"default","","",2,[[],["rect"]]],[11,"default","","",1,[[],["point"]]],[11,"default","","",4,[[],["size"]]],[11,"clone","","",1,[[["self"]],["point"]]],[11,"clone","","",2,[[["self"]],["rect"]]],[11,"clone","","",4,[[["self"]],["size"]]],[11,"clone","","",0,[[["self"]],["affine"]]],[11,"fmt","","",4,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"sub_assign","","",1,[[["vec2"],["self"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"mul_assign","","",0,[[["self"],["affine"]]]],[11,"mul_assign","","",4,[[["self"],["f64"]]]],[11,"sub","","",2,[[["rect"]],["insets"]]],[11,"sub","","",2,[[["vec2"]],["rect"]]],[11,"sub","","",1,[[["point"]],["vec2"]]],[11,"sub","","",1,[[["vec2"]],["point"]]],[11,"sub","","",2,[[["insets"]],["rect"]]],[11,"add_assign","","",1,[[["vec2"],["self"]]]],[11,"from","","",2,[[],["rect"]]],[11,"from","","",4,[[],["size"]]],[11,"from","","",2,[[],["rect"]]],[11,"from","","",1,[[],["point"]]],[11,"from","","",0,[[["translatescale"]],["affine"]]],[11,"same","druid::env","",34,[[["self"],["value"]],["bool"]]],[11,"same","","",36,[[["self"],["env"]],["bool"]]],[11,"get_widgets","druid","",19,[[["self"]]]],[11,"add_widget","","",19,[[["self"],["widgettype"]]]],[11,"add_window","","",14,[[["windowbox"],["self"],["windowid"]]]],[11,"add_handler","","",14,[[["druidhandler"],["self"],["windowid"]]]],[11,"get_handle","","",14,[[["self"],["windowid"]],[["druidhandler"],["windowhandle",["druidhandler"]]]]],[11,"set_data","","",14,[[["d"],["self"]]]],[11,"window_event","","",14,[[["eventctx"],["self"],["event"],["windowid"]]]],[11,"window_update","","",14,[[["self"],["updatectx"],["windowid"]]]],[11,"window_layout","","",14,[[["self"],["layoutctx"],["windowid"]]]],[11,"window_paint","","",14,[[["self"],["paintctx"],["windowid"]]]],[11,"window_has_active","","",14,[[["self"],["windowid"]],["bool"]]],[11,"paint","","",19,[[["d"],["paintctx"],["env"],["self"],["basestate"]]]],[11,"layout","","",19,[[["d"],["layoutctx"],["env"],["self"],["boxconstraints"]],["size"]]],[11,"event","","",19,[[["eventctx"],["d"],["env"],["self"],["event"]]]],[11,"update","","",19,[[["d"],["option"],["env"],["self"],["updatectx"]]]],[11,"to_type","","",19,[[],["widgettype"]]],[11,"new_window","","",19,[[],["windowbox"]]],[11,"get_id","","",19,[[],["widgetid"]]],[11,"paint","druid::widget","",38,[[["t"],["paintctx"],["env"],["self"],["basestate"]]]],[11,"layout","","",38,[[["layoutctx"],["t"],["env"],["self"],["boxconstraints"]],["size"]]],[11,"event","","",38,[[["eventctx"],["t"],["env"],["self"],["event"]]]],[11,"update","","",38,[[["option"],["t"],["env"],["self"],["updatectx"]]]],[11,"to_type","","",38,[[],["widgettype"]]],[11,"new_window","","",38,[[],["windowbox"]]],[11,"get_id","","",38,[[],["widgetid"]]],[11,"paint","","",39,[[["t"],["paintctx"],["env"],["self"],["basestate"]]]],[11,"layout","","",39,[[["layoutctx"],["t"],["env"],["self"],["boxconstraints"]],["size"]]],[11,"event","","",39,[[["eventctx"],["t"],["env"],["self"],["event"]]]],[11,"update","","",39,[[["option"],["t"],["env"],["self"],["updatectx"]]]],[11,"to_type","","",39,[[],["widgettype"]]],[11,"new_window","","",39,[[],["windowbox"]]],[11,"get_id","","",39,[[],["widgetid"]]],[11,"paint","","",40,[[["t"],["paintctx"],["env"],["self"],["basestate"]]]],[11,"layout","","",40,[[["layoutctx"],["t"],["env"],["self"],["boxconstraints"]],["size"]]],[11,"event","","",40,[[["eventctx"],["t"],["env"],["self"],["event"]]]],[11,"update","","",40,[[["option"],["t"],["env"],["self"],["updatectx"]]]],[11,"to_type","","",40,[[],["widgettype"]]],[11,"new_window","","",40,[[],["windowbox"]]],[11,"get_id","","",40,[[],["widgetid"]]],[11,"paint","","",41,[[["t"],["paintctx"],["env"],["self"],["basestate"]]]],[11,"layout","","",41,[[["layoutctx"],["t"],["env"],["self"],["boxconstraints"]],["size"]]],[11,"event","","",41,[[["eventctx"],["t"],["env"],["self"],["event"]]]],[11,"update","","",41,[[["option"],["t"],["env"],["self"],["updatectx"]]]],[11,"to_type","","",41,[[],["widgettype"]]],[11,"new_window","","",41,[[],["windowbox"]]],[11,"get_id","","",41,[[],["widgetid"]]],[11,"paint","","",42,[[["t"],["paintctx"],["env"],["self"],["basestate"]]]],[11,"layout","","",42,[[["layoutctx"],["t"],["env"],["self"],["boxconstraints"]],["size"]]],[11,"event","","",42,[[["eventctx"],["t"],["env"],["self"],["event"]]]],[11,"update","","",42,[[["option"],["t"],["env"],["self"],["updatectx"]]]],[11,"to_type","","",42,[[],["widgettype"]]],[11,"new_window","","",42,[[],["windowbox"]]],[11,"get_id","","",42,[[],["widgetid"]]],[11,"from","druid::argvalue","",31,[[["u20"],["string",["u20"]]],["self"]]],[11,"from","","",31,[[["str"]],["self"]]],[11,"from","","",31,[[["u32"]],["self"]]],[11,"from","","",31,[[["i32"]],["self"]]],[11,"from","druid","",13,[[["mouseevent"]],["mouseevent"]]],[11,"from","druid::widget","",43,[[["u20"],["string",["u20"]]],["labeltext"]]],[11,"from","","",43,[[["str"]],["labeltext"]]],[11,"from","","",43,[[["localizedstring"]],["labeltext"]]],[11,"from","druid","",23,[[["rect"]],["region"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","druid::argvalue","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","druid","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","druid::localization","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","druid","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","druid::widget::flex","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","druid","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"eq","druid::argvalue","",31,[[["self"],["argvalue"]],["bool"]]],[11,"ne","","",31,[[["self"],["argvalue"]],["bool"]]],[11,"eq","druid","",17,[[["windowid"],["self"]],["bool"]]],[11,"ne","","",17,[[["windowid"],["self"]],["bool"]]],[11,"cmp","","",17,[[["windowid"],["self"]],["ordering"]]],[11,"partial_cmp","","",17,[[["windowid"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",17,[[["windowid"],["self"]],["bool"]]],[11,"le","","",17,[[["windowid"],["self"]],["bool"]]],[11,"gt","","",17,[[["windowid"],["self"]],["bool"]]],[11,"ge","","",17,[[["windowid"],["self"]],["bool"]]],[11,"hash","","",17,[[["self"],["__h"]]]],[11,"clone","druid::argvalue","",31,[[["self"]],["argvalue"]]],[11,"clone","druid::env","",36,[[["self"]],["env"]]],[11,"clone","","",34,[[["self"]],["value"]]],[11,"clone","druid","",28,[[["self"]],["event"]]],[11,"clone","druid::localization","",37,[[["self"]],["argsource"]]],[11,"clone","druid","",12,[[["self"]],["localizedstring"]]],[11,"clone","","",13,[[["self"]],["mouseevent"]]],[11,"clone","","",19,[[["self"]],["widgetbox"]]],[11,"clone","","",30,[[["self"]],["widgettype"]]],[11,"clone","druid::widget","",38,[[["self"]],["align"]]],[11,"clone","","",39,[[["self"]],["button"]]],[11,"clone","","",43,[[["self"]],["labeltext"]]],[11,"clone","","",40,[[["self"]],["label"]]],[11,"clone","","",41,[[["self"]],["flex"]]],[11,"clone","druid::widget::flex","",45,[[["self"]],["childwidget"]]],[11,"clone","","",47,[[["self"]],["axis"]]],[11,"clone","","",46,[[["self"]],["params"]]],[11,"clone","druid::widget","",42,[[["self"]],["padding"]]],[11,"clone","druid","",15,[[["self"]],["druidhandler"]]],[11,"clone","","",14,[[["self"]],["appstate"]]],[11,"clone","druid::win_handler","",50,[[["self"]],["windows"]]],[11,"clone","","",51,[[["self"]],["windowstate"]]],[11,"clone","druid","",17,[[["self"]],["windowid"]]],[11,"clone","","",16,[[["self"]],["window"]]],[11,"clone","","",18,[[["self"]],["windowbox"]]],[11,"clone","","",29,[[["self"]],["windowtype"]]],[11,"clone","","",20,[[["self"]],["widgetpod"]]],[11,"clone","","",21,[[["self"]],["basestate"]]],[11,"clone","","",23,[[["self"]],["region"]]],[11,"clone","","",27,[[["self"]],["boxconstraints"]]],[11,"default","","",19,[[],["widgetbox"]]],[11,"default","","",30,[[],["self"]]],[11,"default","druid::widget::flex","",46,[[],["params"]]],[11,"default","druid","",15,[[],["druidhandler"]]],[11,"default","druid::win_handler","",51,[[],["windowstate"]]],[11,"default","","",50,[[],["self"]]],[11,"default","druid","",17,[[],["windowid"]]],[11,"default","","",18,[[],["windowbox"]]],[11,"default","","",29,[[],["self"]]],[11,"default","","",20,[[],["widgetpod"]]],[11,"default","","",21,[[],["basestate"]]],[11,"paint","","",15,[[["self"],["piet"],["winctx"]],["bool"]]],[11,"size","","",15,[[["self"],["u32"],["winctx"]]]],[11,"mouse_down","","",15,[[["winctx"],["self"],["mouseevent"]]]],[11,"mouse_up","","",15,[[["winctx"],["self"],["mouseevent"]]]],[11,"mouse_move","","",15,[[["winctx"],["self"],["mouseevent"]]]],[11,"got_focus","","",15,[[["self"],["winctx"]]]],[11,"get_window_id","","",15,[[["self"]],["windowidtype"]]],[11,"add_handler","","",15,[[["druidhandler"],["self"],["windowidtype"]]]],[18,"FLIP_Y","","A transform that is flipped on the y-axis. Useful for…",0,null],[18,"FLIP_X","","A transform that is flipped on the x-axis.",0,null],[11,"new","","Construct an affine transform from coefficients.",0,[[],["affine"]]],[11,"scale","","An affine transform representing uniform scaling.",0,[[["f64"]],["affine"]]],[11,"rotate","","An affine transform representing rotation.",0,[[["f64"]],["affine"]]],[11,"translate","","An affine transform representing translation.",0,[[["v"]],["affine"]]],[11,"as_coeffs","","Get the coefficients of the transform.",0,[[]]],[11,"determinant","","Compute the determinant of this transform.",0,[[],["f64"]]],[11,"inverse","","Compute the inverse transform.",0,[[],["affine"]]],[11,"transform_rect_bbox","","Compute the bounding box of a transformed rectangle.",0,[[["rect"]],["rect"]]],[18,"ZERO","","The point (0, 0).",1,null],[18,"ORIGIN","","The point at the origin; (0, 0).",1,null],[11,"new","","Create a new `Point` with the provided `x` and `y`…",1,[[["f64"]],["point"]]],[11,"to_vec2","","Convert this point into a `Vec2`.",1,[[],["vec2"]]],[11,"lerp","","Linearly interpolate between two points.",1,[[["point"],["f64"]],["point"]]],[11,"midpoint","","Determine the midpoint of two points.",1,[[["point"]],["point"]]],[11,"distance","","Euclidean distance.",1,[[["point"]],["f64"]]],[11,"round","","A new `Point`, with each of x and y rounded to the nearest…",1,[[],["point"]]],[18,"ZERO","","The empty rectangle at the origin.",2,null],[11,"new","","A new rectangle from minimum and maximum coordinates.",2,[[["f64"]],["rect"]]],[11,"from_points","","A new rectangle from two points.",2,[[],["rect"]]],[11,"from_origin_size","","A new rectangle from origin and size.",2,[[],["rect"]]],[11,"with_origin","","Create a new `Rect` with the same size as `self` and a new…",2,[[],["rect"]]],[11,"with_size","","Create a new `Rect` with the same origin as `self` and a…",2,[[],["rect"]]],[11,"inset","","Create a new `Rect` by applying the [`Insets`].",2,[[],["rect"]]],[11,"width","","The width of the rectangle.",2,[[["self"]],["f64"]]],[11,"height","","The height of the rectangle.",2,[[["self"]],["f64"]]],[11,"min_x","","Returns the minimum value for the x-coordinate of the…",2,[[["self"]],["f64"]]],[11,"max_x","","Returns the maximum value for the x-coordinate of the…",2,[[["self"]],["f64"]]],[11,"min_y","","Returns the minimum value for the y-coordinate of the…",2,[[["self"]],["f64"]]],[11,"max_y","","Returns the maximum value for the y-coordinate of the…",2,[[["self"]],["f64"]]],[11,"origin","","The origin of the rectangle.",2,[[["self"]],["point"]]],[11,"size","","The size of the rectangle.",2,[[["self"]],["size"]]],[11,"area","","The area of the rectangle.",2,[[["self"]],["f64"]]],[11,"center","","The center point of the rectangle.",2,[[["self"]],["point"]]],[11,"contains","","Returns `true` if `point` lies within `self`.",2,[[["point"],["self"]],["bool"]]],[11,"abs","","Take absolute value of width and height.",2,[[["self"]],["rect"]]],[11,"union","","The smallest rectangle enclosing two rectangles.",2,[[["self"],["rect"]],["rect"]]],[11,"union_pt","","Compute the union with one point.",2,[[["point"],["self"]],["rect"]]],[11,"intersect","","The intersection of two rectangles.",2,[[["self"],["rect"]],["rect"]]],[11,"inflate","","Expand a rectangle by a constant amount in both directions.",2,[[["f64"],["self"]],["rect"]]],[11,"round","","A new `Rect`, with each coordinate value rounded to the…",2,[[],["rect"]]],[11,"to_rounded_rect","","Creates a new [`RoundedRect`] from this `Rect` and the…",2,[[["f64"]],["roundedrect"]]],[18,"ZERO","","A size with zero width or height.",4,null],[11,"new","","Create a new `Size` with the provided `width` and `height`.",4,[[["f64"]],["size"]]],[11,"clamp","","Returns a new size bounded by `min` and `max.`",4,[[["size"]],["size"]]],[11,"to_vec2","","Convert this size into a `Vec2`, with `width` mapped to…",4,[[],["vec2"]]],[11,"round","","A new `Size`, with each of width and height rounded to the…",4,[[],["size"]]],[11,"new","","",55,[[],["druidcontext"]]],[11,"is_left","","Returns `true` if this is the left mouse button.",5,[[],["bool"]]],[11,"is_right","","Returns `true` if this is the right mouse button.",5,[[],["bool"]]],[11,"show","","Make this window visible.",7,[[["self"]]]],[11,"close","","Close the window.",7,[[["self"]]]],[11,"bring_to_front_and_focus","","Bring this window to the front of the window stack and…",7,[[["self"]]]],[11,"invalidate","","Request invalidation of the entire window contents.",7,[[["self"]]]],[11,"show","","",8,[[["self"]]]],[11,"close","","Close the window.",8,[[["self"]]]],[11,"bring_to_front_and_focus","","Bring this window to the front of the window stack and…",8,[[["self"]]]],[11,"invalidate","","",8,[[["self"]]]]],"p":[[3,"Affine"],[3,"Point"],[3,"Rect"],[8,"Shape"],[3,"Size"],[4,"MouseButton"],[8,"WinCtx"],[3,"WindowHandle"],[3,"PlatformWindowHandle"],[3,"PlatformWindowState"],[3,"AppLauncher"],[3,"WindowDesc"],[3,"LocalizedString"],[3,"MouseEvent"],[3,"AppState"],[3,"DruidHandler"],[3,"Window"],[3,"WindowId"],[3,"WindowBox"],[3,"WidgetBox"],[3,"WidgetPod"],[3,"BaseState"],[3,"PaintCtx"],[3,"Region"],[3,"LayoutCtx"],[3,"EventCtx"],[3,"UpdateCtx"],[3,"BoxConstraints"],[4,"Event"],[4,"WindowType"],[4,"WidgetType"],[4,"ArgValue"],[8,"Data"],[3,"Key"],[4,"Value"],[8,"ValueType"],[3,"Env"],[3,"ArgSource"],[3,"Align"],[3,"Button"],[3,"Label"],[3,"Flex"],[3,"Padding"],[4,"LabelText"],[8,"GlobalWidgets"],[3,"ChildWidget"],[3,"Params"],[4,"Axis"],[3,"Row"],[3,"Column"],[3,"Windows"],[3,"WindowState"],[3,"SingleWindowState"],[8,"GlobalWindows"],[8,"Widget"],[3,"DruidContext"]]};
searchIndex["druid_shell"] = {"doc":"Platform abstraction for druid toolkit.","i":[[5,"start_display","druid_shell","Initialise the display controller",null,[[],[["mynewterror"],["result",["mynewterror"]]]]],[5,"draw_to_display","","Draw the item to the display",null,[[["t"]]]],[5,"set_display_pixels","","Draw the pixel colours to the display at the window from…",null,[[["u16"],["p"]],["result"]]],[5,"show_touch","","Display the touched (X, Y) coordinates",null,[[["u16"]],[["mynewterror"],["result",["mynewterror"]]]]],[3,"Application","","The top level application object.",null,null],[3,"MouseEvent","","The state of the mouse for a click, mouse-up, or move event.",null,null],[12,"pos","","The location of the mouse in the current window.",0,null],[12,"count","","The number of mouse clicks associated with this event.…",0,null],[12,"button","","The currently pressed button in the case of a move or…",0,null],[3,"TimerToken","","A token that uniquely identifies a running timer.",null,null],[12,"0","","",1,null],[3,"WindowBuilder","","A builder type for creating new windows.",null,null],[12,"0","","",2,null],[12,"1","","",2,null],[3,"WindowHandle","","A handle to a platform window object.",null,null],[12,"0","","",3,null],[3,"DruidContext","","",null,null],[4,"Error","","Error codes. At the moment, this is little more than…",null,null],[13,"Other","","",4,null],[13,"Platform","","",4,null],[4,"Cursor","","Mouse cursors.",null,null],[13,"Arrow","","The default arrow cursor.",5,null],[13,"IBeam","","A vertical I-beam, for indicating insertion points in text.",5,null],[13,"Crosshair","","",5,null],[13,"OpenHand","","",5,null],[13,"NotAllowed","","",5,null],[13,"ResizeLeftRight","","",5,null],[13,"ResizeUpDown","","",5,null],[4,"MouseButton","","An indicator of which mouse button was pressed.",null,null],[13,"Left","","Left mouse button.",6,null],[13,"Middle","","Middle mouse button.",6,null],[13,"Right","","Right mouse button.",6,null],[13,"X1","","First X button.",6,null],[13,"X2","","Second X button.",6,null],[0,"application","","The top-level application type.",null,null],[3,"Application","druid_shell::application","The top level application object.",null,null],[11,"init","druid_shell","Initialize the app. At the moment, this is mostly needed…",7,[[]]],[11,"quit","","Terminate the application.",7,[[]]],[11,"hide","","Hide the application this window belongs to. (cmd+H)",7,[[]]],[11,"hide_others","","Hide all other applications. (cmd+opt+H)",7,[[]]],[0,"common_util","","Common functions used by the backends",null,null],[0,"error","","Errors at the application shell level.",null,null],[4,"Error","druid_shell::error","Error codes. At the moment, this is little more than…",null,null],[13,"Other","","",4,null],[13,"Platform","","",4,null],[0,"mouse","druid_shell","Common types for representing mouse events and state",null,null],[3,"MouseEvent","druid_shell::mouse","The state of the mouse for a click, mouse-up, or move event.",null,null],[12,"pos","","The location of the mouse in the current window.",0,null],[12,"count","","The number of mouse clicks associated with this event.…",0,null],[12,"button","","The currently pressed button in the case of a move or…",0,null],[4,"MouseButton","","An indicator of which mouse button was pressed.",null,null],[13,"Left","","Left mouse button.",6,null],[13,"Middle","","Middle mouse button.",6,null],[13,"Right","","Right mouse button.",6,null],[13,"X1","","First X button.",6,null],[13,"X2","","Second X button.",6,null],[4,"Cursor","","Mouse cursors.",null,null],[13,"Arrow","","The default arrow cursor.",5,null],[13,"IBeam","","A vertical I-beam, for indicating insertion points in text.",5,null],[13,"Crosshair","","",5,null],[13,"OpenHand","","",5,null],[13,"NotAllowed","","",5,null],[13,"ResizeLeftRight","","",5,null],[13,"ResizeUpDown","","",5,null],[11,"is_left","druid_shell","Returns `true` if this is the left mouse button.",6,[[],["bool"]]],[11,"is_right","","Returns `true` if this is the right mouse button.",6,[[],["bool"]]],[0,"platform","","Platform specific implementations.",null,null],[5,"start_display","druid_shell::platform","Initialise the display controller",null,[[],[["mynewterror"],["result",["mynewterror"]]]]],[5,"draw_to_display","","Draw the item to the display",null,[[["t"]]]],[5,"set_display_pixels","","Draw the pixel colours to the display at the window from…",null,[[["u16"],["p"]],["result"]]],[5,"show_touch","","Display the touched (X, Y) coordinates",null,[[["u16"]],[["mynewterror"],["result",["mynewterror"]]]]],[3,"DruidContext","","",null,null],[0,"embedded","","embedded-graphics-based platform support",null,null],[5,"start_display","druid_shell::platform::embedded","Initialise the display controller",null,[[],[["mynewterror"],["result",["mynewterror"]]]]],[5,"draw_to_display","","Draw the item to the display",null,[[["t"]]]],[5,"set_display_pixels","","Draw the pixel colours to the display at the window from…",null,[[["u16"],["p"]],["result"]]],[5,"show_touch","","Display the touched (X, Y) coordinates",null,[[["u16"]],[["mynewterror"],["result",["mynewterror"]]]]],[0,"application","","embedded-graphics implementation of features at the…",null,null],[3,"Application","druid_shell::platform::embedded::application","",null,null],[11,"init","","",8,[[]]],[11,"quit","","",8,[[]]],[0,"error","druid_shell::platform::embedded","embedded-graphics platform errors.",null,null],[3,"Error","druid_shell::platform::embedded::error","",null,null],[0,"runloop","druid_shell::platform::embedded","embedded-graphics implementation of runloop.",null,null],[0,"util","","Utilities, embedded-graphics specific.",null,null],[0,"window","","embedded-graphics window creation and management.",null,null],[3,"DruidContext","druid_shell::platform::embedded::window","",null,null],[3,"WindowHandle","","",null,null],[12,"window_id","","",9,null],[12,"state","","",9,null],[3,"WindowBuilder","","Builder abstraction for creating new windows",null,null],[12,"window_id","","",10,null],[12,"handler","","",10,null],[12,"size","","",10,null],[12,"phantom","","",10,null],[3,"WindowState","","",null,null],[12,"window_id","","",11,null],[12,"handler","","",11,null],[7,"TEXT","","",null,null],[7,"DRUID_CONTEXT","","",null,null],[7,"PIET_CONTEXT","","",null,null],[11,"new","druid_shell","",12,[[],["self"]]],[11,"new","druid_shell::platform::embedded::window","",10,[[],["self"]]],[11,"set_handler","","",10,[[["self"],["thandler"]]]],[11,"set_size","","",10,[[["self"],["size"]]]],[11,"build","","",10,[[],[["windowhandle"],["error"],["result",["windowhandle","error"]]]]],[11,"show","","",9,[[["self"]]]],[11,"close","","Close the window.",9,[[["self"]]]],[11,"bring_to_front_and_focus","","Bring this window to the front of the window stack and…",9,[[["self"]]]],[11,"invalidate","","",9,[[["self"]]]],[0,"application","druid_shell::platform","embedded-graphics implementation of features at the…",null,null],[3,"Application","druid_shell::platform::application","",null,null],[0,"error","druid_shell::platform","embedded-graphics platform errors.",null,null],[3,"Error","druid_shell::platform::error","",null,null],[0,"runloop","druid_shell::platform","embedded-graphics implementation of runloop.",null,null],[0,"util","","Utilities, embedded-graphics specific.",null,null],[0,"window","","embedded-graphics window creation and management.",null,null],[3,"DruidContext","druid_shell::platform::window","",null,null],[3,"WindowHandle","","",null,null],[12,"window_id","","",9,null],[12,"state","","",9,null],[3,"WindowBuilder","","Builder abstraction for creating new windows",null,null],[12,"window_id","","",10,null],[12,"handler","","",10,null],[12,"size","","",10,null],[12,"phantom","","",10,null],[3,"WindowState","","",null,null],[12,"window_id","","",11,null],[12,"handler","","",11,null],[0,"runloop","druid_shell","The main application loop.",null,null],[0,"window","","Platform independent window types.",null,null],[3,"TimerToken","druid_shell::window","A token that uniquely identifies a running timer.",null,null],[12,"0","","",1,null],[3,"WindowHandle","","A handle to a platform window object.",null,null],[12,"0","","",3,null],[3,"WindowBuilder","","A builder type for creating new windows.",null,null],[12,"0","","",2,null],[12,"1","","",2,null],[6,"WindowIdType","","Windows are identified by an 8-bit ID",null,null],[6,"Text","","The platform text factory, reexported from piet.",null,null],[8,"WinCtx","","A context supplied to most `WinHandler` methods.",null,null],[10,"invalidate","","Invalidate the entire window.",13,[[["self"]]]],[10,"text_factory","","Get a reference to an object that can do text layout.",13,[[["self"]],["text"]]],[10,"set_cursor","","Set the cursor icon.",13,[[["self"],["cursor"]]]],[8,"WinHandler","","App behavior, supplied by the app.",null,null],[11,"size","","Provide the handler with a handle to the window so that it…",14,[[["self"],["u32"],["winctx"]]]],[10,"paint","","Request the handler to paint the window contents. Return…",14,[[["self"],["piet"],["winctx"]],["bool"]]],[11,"mouse_move","","Called when the mouse moves.",14,[[["self"],["winctx"],["mouseevent"]]]],[11,"mouse_down","","Called on mouse button down.",14,[[["self"],["winctx"],["mouseevent"]]]],[11,"mouse_up","","Called on mouse button up.",14,[[["self"],["winctx"],["mouseevent"]]]],[11,"timer","","Called on timer event.",14,[[["self"],["timertoken"],["winctx"]]]],[11,"got_focus","","Called when this window becomes the focused window.",14,[[["self"],["winctx"]]]],[11,"destroy","","Called when the window is being destroyed. Note that this…",14,[[["self"],["winctx"]]]],[10,"get_window_id","","Return the Window ID for this WinHandler",14,[[["self"]],["windowidtype"]]],[10,"add_handler","","Add a Window Handler for the Data type",14,[[["windowidtype"],["self"],["thandler"]]]],[18,"INVALID","druid_shell","A token that does not correspond to any timer.",1,null],[11,"new","","",1,[[["usize"]],["timertoken"]]],[11,"show","","Make this window visible.",3,[[["self"]]]],[11,"close","","Close the window.",3,[[["self"]]]],[11,"bring_to_front_and_focus","","Bring this window to the front of the window stack and…",3,[[["self"]]]],[11,"invalidate","","Request invalidation of the entire window contents.",3,[[["self"]]]],[11,"new","","Create a new `WindowBuilder`",2,[[],["self"]]],[11,"set_handler","","Set the [`WinHandler`]. This is the object that will…",2,[[["self"],["thandler"]]]],[11,"set_size","","Set the window's initial size.",2,[[["self"],["size"]]]],[11,"build","","Attempt to construct the platform window.",2,[[],[["error"],["result",["windowhandle","error"]],["windowhandle"]]]],[6,"Text","","The platform text factory, reexported from piet.",null,null],[6,"WindowIdType","","Windows are identified by an 8-bit ID",null,null],[8,"WinCtx","","A context supplied to most `WinHandler` methods.",null,null],[10,"invalidate","","Invalidate the entire window.",13,[[["self"]]]],[10,"text_factory","","Get a reference to an object that can do text layout.",13,[[["self"]],["text"]]],[10,"set_cursor","","Set the cursor icon.",13,[[["self"],["cursor"]]]],[8,"WinHandler","","App behavior, supplied by the app.",null,null],[11,"size","druid_shell::window","Provide the handler with a handle to the window so that it…",14,[[["self"],["u32"],["winctx"]]]],[10,"paint","druid_shell","Request the handler to paint the window contents. Return…",14,[[["self"],["piet"],["winctx"]],["bool"]]],[11,"mouse_move","druid_shell::window","Called when the mouse moves.",14,[[["self"],["winctx"],["mouseevent"]]]],[11,"mouse_down","","Called on mouse button down.",14,[[["self"],["winctx"],["mouseevent"]]]],[11,"mouse_up","","Called on mouse button up.",14,[[["self"],["winctx"],["mouseevent"]]]],[11,"timer","","Called on timer event.",14,[[["self"],["timertoken"],["winctx"]]]],[11,"got_focus","","Called when this window becomes the focused window.",14,[[["self"],["winctx"]]]],[11,"destroy","","Called when the window is being destroyed. Note that this…",14,[[["self"],["winctx"]]]],[10,"get_window_id","druid_shell","Return the Window ID for this WinHandler",14,[[["self"]],["windowidtype"]]],[10,"add_handler","","Add a Window Handler for the Data type",14,[[["windowidtype"],["self"],["thandler"]]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"round_from","","",7,[[["t"]],["t"]]],[11,"round_into","","",7,[[],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"round_from","","",0,[[["t"]],["t"]]],[11,"round_into","","",0,[[],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"round_from","","",1,[[["t"]],["t"]]],[11,"round_into","","",1,[[],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"round_from","","",2,[[["t"]],["t"]]],[11,"round_into","","",2,[[],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"round_from","","",3,[[["t"]],["t"]]],[11,"round_into","","",3,[[],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"round_from","","",12,[[["t"]],["t"]]],[11,"round_into","","",12,[[],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"round_from","","",4,[[["t"]],["t"]]],[11,"round_into","","",4,[[],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"round_from","","",5,[[["t"]],["t"]]],[11,"round_into","","",5,[[],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"round_from","","",6,[[["t"]],["t"]]],[11,"round_into","","",6,[[],["u"]]],[11,"from","druid_shell::platform::embedded::application","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"round_from","","",8,[[["t"]],["t"]]],[11,"round_into","","",8,[[],["u"]]],[11,"from","druid_shell::platform::embedded::error","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"round_from","","",15,[[["t"]],["t"]]],[11,"round_into","","",15,[[],["u"]]],[11,"from","druid_shell::platform::embedded::window","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"round_from","","",9,[[["t"]],["t"]]],[11,"round_into","","",9,[[],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"round_from","","",10,[[["t"]],["t"]]],[11,"round_into","","",10,[[],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"round_from","","",11,[[["t"]],["t"]]],[11,"round_into","","",11,[[],["u"]]],[11,"invalidate","druid_shell","",12,[[["self"]]]],[11,"text_factory","","",12,[[["self"]],["text"]]],[11,"set_cursor","","",12,[[["self"],["cursor"]]]],[11,"from","","",4,[[["error"]],["error"]]],[11,"from","","",3,[[["windowhandle"]],["windowhandle"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","druid_shell::platform::embedded::error","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","druid_shell","",1,[[["formatter"],["self"]],["result"]]],[11,"eq","","",0,[[["self"],["mouseevent"]],["bool"]]],[11,"ne","","",0,[[["self"],["mouseevent"]],["bool"]]],[11,"eq","","",6,[[["mousebutton"],["self"]],["bool"]]],[11,"eq","","",1,[[["timertoken"],["self"]],["bool"]]],[11,"ne","","",1,[[["timertoken"],["self"]],["bool"]]],[11,"partial_cmp","","",1,[[["timertoken"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",1,[[["timertoken"],["self"]],["bool"]]],[11,"le","","",1,[[["timertoken"],["self"]],["bool"]]],[11,"gt","","",1,[[["timertoken"],["self"]],["bool"]]],[11,"ge","","",1,[[["timertoken"],["self"]],["bool"]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"clone","","",0,[[["self"]],["mouseevent"]]],[11,"clone","","",6,[[["self"]],["mousebutton"]]],[11,"clone","","",5,[[["self"]],["cursor"]]],[11,"clone","druid_shell::platform::embedded::error","",15,[[["self"]],["error"]]],[11,"clone","druid_shell::platform::embedded::window","",9,[[["self"]],["windowhandle"]]],[11,"clone","","",11,[[["self"]],["windowstate"]]],[11,"clone","druid_shell","",1,[[["self"]],["timertoken"]]],[11,"clone","","",3,[[["self"]],["windowhandle"]]],[11,"default","druid_shell::platform::embedded::window","",9,[[],["windowhandle"]]],[11,"default","","",11,[[],["windowstate"]]],[11,"default","druid_shell","",3,[[],["windowhandle"]]]],"p":[[3,"MouseEvent"],[3,"TimerToken"],[3,"WindowBuilder"],[3,"WindowHandle"],[4,"Error"],[4,"Cursor"],[4,"MouseButton"],[3,"Application"],[3,"Application"],[3,"WindowHandle"],[3,"WindowBuilder"],[3,"WindowState"],[3,"DruidContext"],[8,"WinCtx"],[8,"WinHandler"],[3,"Error"]]};
searchIndex["embedded_graphics"] = {"doc":"Embedded graphics","i":[[0,"coord","embedded_graphics","2D signed coordinate in screen space",null,null],[3,"Coord","embedded_graphics::coord","2D signed integer coordinate type",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[11,"new","","Create a new coordinate with X and Y values",0,[[["i32"]],["self"]]],[11,"clamp_positive","","Clamp coordinate components to positive integer range",0,[[["self"]],["self"]]],[11,"abs","","Remove the sign from a coordinate",0,[[["self"]],["self"]]],[8,"ToUnsigned","","Convert a value to an unsigned coordinate",null,null],[10,"to_unsigned","","Convert the signed coordinate to an unsigned coordinate",1,[[],["unsignedcoord"]]],[0,"drawable","embedded_graphics","`Drawable` trait and helpers",null,null],[3,"Pixel","embedded_graphics::drawable","A single pixel",null,null],[12,"0","","",2,null],[12,"1","","",2,null],[8,"Drawable","","Marks an object as \"drawable\". Must be implemented for all…",null,null],[8,"Dimensions","","Adds the ability to get the dimensions/position of a…",null,null],[10,"top_left","","Get the top left corner of the bounding box for an object",3,[[["self"]],["coord"]]],[10,"bottom_right","","Get the bottom right corner of the bounding box for an…",3,[[["self"]],["coord"]]],[10,"size","","Get the width and height for an object",3,[[["self"]],["unsignedcoord"]]],[0,"fonts","embedded_graphics","Pixel based fonts",null,null],[0,"font_builder","embedded_graphics::fonts","Common code used to define available monospace pixel fonts.",null,null],[3,"FontBuilder","embedded_graphics::fonts::font_builder","The font builder",null,null],[12,"pos","","Top left corner of the text",4,null],[3,"FontBuilderIterator","","Pixel iterator for the `FontBuilder` object",null,null],[8,"FontBuilderConf","","The configuration of the font",null,null],[18,"FONT_IMAGE","","Raw image containing the font",5,null],[18,"CHAR_HEIGHT","","`char` height of the font",5,null],[18,"CHAR_WIDTH","","`char` width of the font",5,null],[18,"FONT_IMAGE_WIDTH","","Font image width, must be divisible by `8` and `CHAR_WIDTH`.",5,null],[10,"char_offset","","Returns the index in the font of the correponding `char`",5,[[["char"]],["u32"]]],[6,"Font12x16","embedded_graphics::fonts","12x16 pixel monospace font",null,null],[6,"Font6x12","","6x12 pixel monospace font",null,null],[6,"Font6x8","","6x8 pixel monospace font",null,null],[6,"Font8x16","","8x16 pixel monospace font",null,null],[8,"Font","","Common methods for all fonts",null,null],[10,"render_str","","Render a string in the implementing font's typeface.",6,[[["str"]],["self"]]],[0,"image","embedded_graphics","Image object",null,null],[3,"Image","embedded_graphics::image","An image constructed from a slice",null,null],[12,"offset","","Image offset in pixels from screen origin (0,0)",7,null],[11,"new","","Create a new image with given pixel data, width and height",7,[[["u32"]],["self"]]],[6,"Image16BPP","","16 bits per pixel image",null,null],[6,"Image1BPP","","1 bit per pixel image",null,null],[6,"Image8BPP","","8 bits per pixel image",null,null],[8,"ImageFile","","Image trait",null,null],[10,"new","","Create a new image with given input file",8,[[],["result"]]],[10,"width","","Get the width in pixels of an image",8,[[["self"]],["u32"]]],[10,"height","","Get the height in pixels of an image",8,[[["self"]],["u32"]]],[0,"pixelcolor","embedded_graphics","Pixel color",null,null],[3,"Rgb565","embedded_graphics::pixelcolor","A pixel type defining the commonly used RGB565 format",null,null],[12,"0","","",9,null],[11,"r","","Get the red component as a `u8`",9,[[["self"]],["u8"]]],[11,"g","","Get the green component as a `u8`",9,[[["self"]],["u8"]]],[11,"b","","Get the blue component as a `u8`",9,[[["self"]],["u8"]]],[8,"PixelColor","","Pixel color trait",null,null],[0,"prelude","embedded_graphics","Prelude",null,null],[3,"Coord","embedded_graphics::prelude","2D signed integer coordinate type",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[3,"Image","","An image constructed from a slice",null,null],[12,"offset","","Image offset in pixels from screen origin (0,0)",7,null],[3,"UnsignedCoord","","2D unsigned coordinate in screen space",null,null],[12,"0","","",10,null],[12,"1","","",10,null],[8,"ImageFile","","Image trait",null,null],[10,"new","","Create a new image with given input file",8,[[],["result"]]],[10,"width","","Get the width in pixels of an image",8,[[["self"]],["u32"]]],[10,"height","","Get the height in pixels of an image",8,[[["self"]],["u32"]]],[0,"primitives","embedded_graphics","Graphics primitives",null,null],[0,"circle","embedded_graphics::primitives","The circle primitive",null,null],[3,"Circle","embedded_graphics::primitives::circle","Circle primitive",null,null],[12,"center","","Center point of circle",11,null],[12,"radius","","Radius of the circle",11,null],[12,"style","","Style of the circle",11,null],[3,"CircleIterator","","Pixel iterator for each pixel in the circle border",null,null],[11,"new","","Create a new circle centered around a given point with a…",11,[[["u32"],["coord"]],["self"]]],[0,"line","embedded_graphics::primitives","The line primitive",null,null],[3,"Line","embedded_graphics::primitives::line","Line primitive",null,null],[12,"start","","Start point",12,null],[12,"end","","End point",12,null],[12,"style","","Line style",12,null],[3,"LineIterator","","Pixel iterator for each pixel in the line",null,null],[11,"new","","Create a new line",12,[[["coord"]],["self"]]],[0,"rectangle","embedded_graphics::primitives","The rectangle primitive. Also good for drawing squares.",null,null],[3,"Rectangle","embedded_graphics::primitives::rectangle","Rectangle primitive",null,null],[12,"top_left","","Top left point of the rect",13,null],[12,"bottom_right","","Bottom right point of the rect",13,null],[12,"style","","Object style",13,null],[3,"RectangleIterator","","Pixel iterator for each pixel in the rect border",null,null],[11,"new","","Create a new rectangle from the top left point to the…",13,[[["coord"]],["self"]]],[0,"triangle","embedded_graphics::primitives","The triangle primitive.",null,null],[3,"Triangle","embedded_graphics::primitives::triangle","Triangle primitive",null,null],[12,"p1","","First point of the triangle",14,null],[12,"p2","","Second point of the triangle",14,null],[12,"p3","","Third point of the triangle",14,null],[12,"style","","Object style",14,null],[3,"TriangleIterator","","Pixel iterator for each pixel in the triangle border",null,null],[11,"new","","Create a new triangle with a given style",14,[[["coord"]],["self"]]],[8,"Primitive","embedded_graphics::primitives","Primitive trait",null,null],[0,"style","embedded_graphics","Styling struct to customise the look of objects.",null,null],[3,"Style","embedded_graphics::style","Style properties for an object",null,null],[12,"fill_color","","Fill colour of the object",15,null],[12,"stroke_color","","Stroke (border/line) color of the object",15,null],[12,"stroke_width","","Stroke width",15,null],[8,"WithStyle","","Add a style to an object",null,null],[10,"style","","Add a complete style to the object",16,[[["style"]],["self"]]],[10,"stroke","","Set the stroke colour for the object",16,[[["option"]],["self"]]],[10,"stroke_width","","Set the stroke width for the object",16,[[["u8"]],["self"]]],[10,"fill","","Set the fill property of the object's style",16,[[["option"]],["self"]]],[11,"stroke","","Create a new style with a given stroke value and defaults…",15,[[["p"]],["self"]]],[0,"transform","embedded_graphics","Transformations for graphics objects",null,null],[8,"Transform","embedded_graphics::transform","Transform operations",null,null],[10,"translate","","Move the origin of an object by a given number of (x, y)…",17,[[["self"],["coord"]],["self"]]],[10,"translate_mut","","Move the origin of an object by a given number of (x, y)…",17,[[["self"],["coord"]],["self"]]],[0,"unsignedcoord","embedded_graphics","2D unsigned coordinate",null,null],[3,"UnsignedCoord","embedded_graphics::unsignedcoord","2D unsigned coordinate in screen space",null,null],[12,"0","","",10,null],[12,"1","","",10,null],[11,"new","embedded_graphics::prelude","Create a new coordinate with X and Y values",10,[[["u32"]],["self"]]],[8,"ToSigned","embedded_graphics::unsignedcoord","Convert an unsigned coordinate to a signed representation",null,null],[10,"to_signed","","Convert self into a signed `Coord`",18,[[],["coord"]]],[8,"Drawing","embedded_graphics","To use this crate in a driver, `Drawing` must be…",null,null],[10,"draw","","Draw an object from an iterator over its pixels",19,[[["self"],["t"]]]],[8,"SizedDrawing","","Very similar to the [`Drawing`] trait, but accepts…",null,null],[10,"draw_sized","","Draw an object from an iterator over its pixels",20,[[["self"],["t"]]]],[14,"icoord","","Create a `Coord` from a pair of integer values",null,null],[14,"text_6x8","","Render text using the `Font6x8` font",null,null],[14,"text_6x12","","Render text using the `Font6x12` font",null,null],[14,"text_8x16","","Render text using the `Font8x16` font",null,null],[14,"text_12x16","","Render text using the `Font12x16` font",null,null],[14,"egcircle","","Create a `Circle` with optional styling using a convenient…",null,null],[14,"egline","","Create a `Line` with optional styling using a convenient…",null,null],[14,"egrectangle","","Create a `Rectangle` with optional styling using a…",null,null],[14,"egtriangle","","Create a `Triangle` with optional styling using a…",null,null],[14,"ucoord","","Create an `UnsignedCoord` from a pair of integer values",null,null],[11,"from","embedded_graphics::coord","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","embedded_graphics::drawable","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","embedded_graphics::fonts::font_builder","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into_iter","","",21,[[],["i"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","embedded_graphics::image","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","embedded_graphics::pixelcolor","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","embedded_graphics::prelude","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","embedded_graphics::primitives::circle","",11,[[["t"]],["t"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into_iter","","",22,[[],["i"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","embedded_graphics::primitives::line","",12,[[["t"]],["t"]]],[11,"into_iter","","",12,[[],["i"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into_iter","","",23,[[],["i"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","embedded_graphics::primitives::rectangle","",13,[[["t"]],["t"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into_iter","","",24,[[],["i"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","embedded_graphics::primitives::triangle","",14,[[["t"]],["t"]]],[11,"into_iter","","",14,[[],["i"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into_iter","","",25,[[],["i"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","embedded_graphics::style","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"to_unsigned","embedded_graphics::coord","Convert to a positive-only coordinate, clamping negative…",0,[[],["unsignedcoord"]]],[11,"top_left","embedded_graphics::fonts::font_builder","",4,[[["self"]],["coord"]]],[11,"bottom_right","","",4,[[["self"]],["coord"]]],[11,"size","","Get the bounding box of a piece of text",4,[[["self"]],["unsignedcoord"]]],[11,"top_left","embedded_graphics::image","",7,[[["self"]],["coord"]]],[11,"bottom_right","","",7,[[["self"]],["coord"]]],[11,"size","","",7,[[["self"]],["unsignedcoord"]]],[11,"top_left","embedded_graphics::primitives::circle","",11,[[["self"]],["coord"]]],[11,"bottom_right","","",11,[[["self"]],["coord"]]],[11,"size","","",11,[[["self"]],["unsignedcoord"]]],[11,"top_left","embedded_graphics::primitives::line","",12,[[["self"]],["coord"]]],[11,"bottom_right","","",12,[[["self"]],["coord"]]],[11,"size","","",12,[[["self"]],["unsignedcoord"]]],[11,"top_left","embedded_graphics::primitives::rectangle","",13,[[["self"]],["coord"]]],[11,"bottom_right","","",13,[[["self"]],["coord"]]],[11,"size","","",13,[[["self"]],["unsignedcoord"]]],[11,"top_left","embedded_graphics::primitives::triangle","",14,[[["self"]],["coord"]]],[11,"bottom_right","","",14,[[["self"]],["coord"]]],[11,"size","","",14,[[["self"]],["unsignedcoord"]]],[11,"render_str","embedded_graphics::fonts::font_builder","",4,[[["str"]],["self"]]],[11,"style","","",4,[[["style"]],["self"]]],[11,"stroke","","",4,[[["option"]],["self"]]],[11,"stroke_width","","",4,[[["u8"]],["self"]]],[11,"fill","","",4,[[["option"]],["self"]]],[11,"style","embedded_graphics::primitives::circle","",11,[[["style"]],["self"]]],[11,"stroke","","",11,[[["option"]],["self"]]],[11,"stroke_width","","",11,[[["u8"]],["self"]]],[11,"fill","","",11,[[["option"]],["self"]]],[11,"style","embedded_graphics::primitives::line","",12,[[["style"]],["self"]]],[11,"stroke","","",12,[[["option"]],["self"]]],[11,"stroke_width","","",12,[[["u8"]],["self"]]],[11,"fill","","",12,[[["option"]],["self"]]],[11,"style","embedded_graphics::primitives::rectangle","",13,[[["style"]],["self"]]],[11,"stroke","","",13,[[["option"]],["self"]]],[11,"stroke_width","","",13,[[["u8"]],["self"]]],[11,"fill","","",13,[[["option"]],["self"]]],[11,"style","embedded_graphics::primitives::triangle","",14,[[["style"]],["self"]]],[11,"stroke","","",14,[[["option"]],["self"]]],[11,"stroke_width","","",14,[[["u8"]],["self"]]],[11,"fill","","",14,[[["option"]],["self"]]],[11,"translate","embedded_graphics::fonts::font_builder","Translate the image from its current position to a new…",4,[[["self"],["coord"]],["self"]]],[11,"translate_mut","","Translate the font origin from its current position to a…",4,[[["self"],["coord"]],["self"]]],[11,"translate","embedded_graphics::image","Translate the image from its current position to a new…",7,[[["self"],["coord"]],["self"]]],[11,"translate_mut","","Translate the image from its current position to a new…",7,[[["self"],["coord"]],["self"]]],[11,"translate","embedded_graphics::primitives::circle","Translate the circle center from its current position to a…",11,[[["self"],["coord"]],["self"]]],[11,"translate_mut","","Translate the circle center from its current position to a…",11,[[["self"],["coord"]],["self"]]],[11,"translate","embedded_graphics::primitives::line","Translate the line from its current position to a new…",12,[[["self"],["coord"]],["self"]]],[11,"translate_mut","","Translate the line from its current position to a new…",12,[[["self"],["coord"]],["self"]]],[11,"translate","embedded_graphics::primitives::rectangle","Translate the rect from its current position to a new…",13,[[["self"],["coord"]],["self"]]],[11,"translate_mut","","Translate the rect from its current position to a new…",13,[[["self"],["coord"]],["self"]]],[11,"translate","embedded_graphics::primitives::triangle","Translate the triangle from its current position to a new…",14,[[["self"],["coord"]],["self"]]],[11,"translate_mut","","Translate the triangle from its current position to a new…",14,[[["self"],["coord"]],["self"]]],[11,"to_signed","embedded_graphics::prelude","",10,[[],["coord"]]],[11,"from","embedded_graphics::coord","",0,[[],["self"]]],[11,"from","","",0,[[],["self"]]],[11,"from","","",0,[[],["self"]]],[11,"from","","",0,[[],["self"]]],[11,"from","","",0,[[],["self"]]],[11,"from","","",0,[[],["self"]]],[11,"from","embedded_graphics::pixelcolor","",9,[[["u8"]],["self"]]],[11,"from","","",9,[[["u16"]],["self"]]],[11,"from","","",9,[[],["self"]]],[11,"from","","",9,[[],["self"]]],[11,"from","embedded_graphics::prelude","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"fmt","embedded_graphics::coord","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","embedded_graphics::drawable","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","embedded_graphics::fonts::font_builder","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","embedded_graphics::image","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","embedded_graphics::pixelcolor","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","embedded_graphics::primitives::circle","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","embedded_graphics::primitives::line","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","embedded_graphics::primitives::rectangle","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","embedded_graphics::primitives::triangle","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","embedded_graphics::style","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","embedded_graphics::prelude","",10,[[["formatter"],["self"]],["result"]]],[11,"sub","embedded_graphics::coord","",0,[[["coord"]],["coord"]]],[11,"sub","embedded_graphics::prelude","",10,[[["unsignedcoord"]],["unsignedcoord"]]],[11,"eq","embedded_graphics::coord","",0,[[["self"],["coord"]],["bool"]]],[11,"ne","","",0,[[["self"],["coord"]],["bool"]]],[11,"eq","embedded_graphics::drawable","",2,[[["self"],["pixel"]],["bool"]]],[11,"ne","","",2,[[["self"],["pixel"]],["bool"]]],[11,"eq","embedded_graphics::pixelcolor","",9,[[["rgb565"],["self"]],["bool"]]],[11,"ne","","",9,[[["rgb565"],["self"]],["bool"]]],[11,"eq","embedded_graphics::prelude","",10,[[["unsignedcoord"],["self"]],["bool"]]],[11,"ne","","",10,[[["unsignedcoord"],["self"]],["bool"]]],[11,"add","embedded_graphics::coord","",0,[[["coord"]],["coord"]]],[11,"add","embedded_graphics::prelude","",10,[[["unsignedcoord"]],["unsignedcoord"]]],[11,"neg","embedded_graphics::coord","",0,[[]]],[11,"neg","embedded_graphics::prelude","",10,[[]]],[11,"add_assign","embedded_graphics::coord","",0,[[["self"],["coord"]]]],[11,"add_assign","embedded_graphics::prelude","",10,[[["self"],["unsignedcoord"]]]],[11,"sub_assign","embedded_graphics::coord","",0,[[["self"],["coord"]]]],[11,"sub_assign","embedded_graphics::prelude","",10,[[["self"],["unsignedcoord"]]]],[11,"index","embedded_graphics::coord","",0,[[["self"],["usize"]],["i32"]]],[11,"index","embedded_graphics::prelude","",10,[[["self"],["usize"]],["u32"]]],[11,"next","embedded_graphics::fonts::font_builder","",21,[[["self"]],["option"]]],[11,"next","embedded_graphics::primitives::circle","",22,[[["self"]],["option"]]],[11,"next","embedded_graphics::primitives::line","",23,[[["self"]],["option"]]],[11,"next","embedded_graphics::primitives::rectangle","",24,[[["self"]],["option"]]],[11,"next","embedded_graphics::primitives::triangle","",25,[[["self"]],["option"]]],[11,"into_iter","embedded_graphics::fonts::font_builder","",4,[[]]],[11,"into_iter","embedded_graphics::primitives::circle","",11,[[]]],[11,"into_iter","embedded_graphics::primitives::line","",12,[[]]],[11,"into_iter","embedded_graphics::primitives::rectangle","",13,[[]]],[11,"into_iter","embedded_graphics::primitives::triangle","",14,[[]]],[11,"clone","embedded_graphics::coord","",0,[[["self"]],["coord"]]],[11,"clone","embedded_graphics::drawable","",2,[[["self"]],["pixel"]]],[11,"clone","embedded_graphics::fonts::font_builder","",4,[[["self"]],["self"]]],[11,"clone","","",21,[[["self"]],["fontbuilderiterator"]]],[11,"clone","embedded_graphics::pixelcolor","",9,[[["self"]],["rgb565"]]],[11,"clone","embedded_graphics::primitives::circle","",11,[[["self"]],["circle"]]],[11,"clone","","",22,[[["self"]],["circleiterator"]]],[11,"clone","embedded_graphics::primitives::line","",12,[[["self"]],["line"]]],[11,"clone","","",23,[[["self"]],["lineiterator"]]],[11,"clone","embedded_graphics::primitives::rectangle","",13,[[["self"]],["rectangle"]]],[11,"clone","","",24,[[["self"]],["rectangleiterator"]]],[11,"clone","embedded_graphics::primitives::triangle","",14,[[["self"]],["triangle"]]],[11,"clone","","",25,[[["self"]],["triangleiterator"]]],[11,"clone","embedded_graphics::style","",15,[[["self"]],["style"]]],[11,"clone","embedded_graphics::prelude","",10,[[["self"]],["unsignedcoord"]]],[11,"default","embedded_graphics::style","",15,[[],["self"]]]],"p":[[3,"Coord"],[8,"ToUnsigned"],[3,"Pixel"],[8,"Dimensions"],[3,"FontBuilder"],[8,"FontBuilderConf"],[8,"Font"],[3,"Image"],[8,"ImageFile"],[3,"Rgb565"],[3,"UnsignedCoord"],[3,"Circle"],[3,"Line"],[3,"Rectangle"],[3,"Triangle"],[3,"Style"],[8,"WithStyle"],[8,"Transform"],[8,"ToSigned"],[8,"Drawing"],[8,"SizedDrawing"],[3,"FontBuilderIterator"],[3,"CircleIterator"],[3,"LineIterator"],[3,"RectangleIterator"],[3,"TriangleIterator"]]};
searchIndex["embedded_hal"] = {"doc":"A Hardware Abstraction Layer (HAL) for embedded systems","i":[[0,"adc","embedded_hal","Analog-digital conversion traits",null,null],[0,"blocking","","Blocking API",null,null],[0,"delay","embedded_hal::blocking","Delays",null,null],[8,"DelayMs","embedded_hal::blocking::delay","Millisecond delay",null,null],[10,"delay_ms","","Pauses execution for `ms` milliseconds",0,[[["uxx"],["self"]]]],[8,"DelayUs","","Microsecond delay",null,null],[10,"delay_us","","Pauses execution for `us` microseconds",1,[[["uxx"],["self"]]]],[0,"i2c","embedded_hal::blocking","Blocking I2C API",null,null],[8,"Read","embedded_hal::blocking::i2c","Blocking read",null,null],[16,"Error","","Error type",2,null],[10,"read","","Reads enough bytes from slave with `address` to fill…",2,[[["self"],["u8"]],["result"]]],[8,"Write","","Blocking write",null,null],[16,"Error","","Error type",3,null],[10,"write","","Sends bytes to slave with address `addr`",3,[[["self"],["u8"]],["result"]]],[8,"WriteRead","","Blocking write + read",null,null],[16,"Error","","Error type",4,null],[10,"write_read","","Sends bytes to slave with address `addr` and then reads…",4,[[["self"],["u8"]],["result"]]],[0,"rng","embedded_hal::blocking","Blocking hardware random number generator",null,null],[0,"serial","","Blocking serial API",null,null],[0,"write","embedded_hal::blocking::serial","Blocking serial write",null,null],[8,"Default","embedded_hal::blocking::serial::write","Marker trait to opt into default blocking write…",null,null],[8,"Write","embedded_hal::blocking::serial","Write half of a serial interface (blocking variant)",null,null],[16,"Error","","The type of error that can occur when writing",5,null],[10,"bwrite_all","","Writes a slice, blocking until everything has been written",5,[[["self"]],["result"]]],[10,"bflush","","Block until the serial interface has sent all buffered words",5,[[["self"]],["result"]]],[0,"spi","embedded_hal::blocking","Blocking SPI API",null,null],[0,"transfer","embedded_hal::blocking::spi","Blocking transfer",null,null],[8,"Default","embedded_hal::blocking::spi::transfer","Default implementation of `blocking::spi::Transfer<W>` for…",null,null],[0,"write","embedded_hal::blocking::spi","Blocking write",null,null],[8,"Default","embedded_hal::blocking::spi::write","Default implementation of `blocking::spi::Write<W>` for…",null,null],[8,"Transfer","embedded_hal::blocking::spi","Blocking transfer",null,null],[16,"Error","","Error type",6,null],[10,"transfer","","Sends `words` to the slave. Returns the `words` received…",6,[[["self"]],["result"]]],[8,"Write","","Blocking write",null,null],[16,"Error","","Error type",7,null],[10,"write","","Sends `words` to the slave, ignoring all the incoming words",7,[[["self"]],["result"]]],[0,"digital","embedded_hal","Digital I/O",null,null],[0,"v1","embedded_hal::digital","Digital I/O",null,null],[8,"OutputPin","embedded_hal::digital::v1","Single digital push-pull output pin",null,null],[10,"set_low","","Drives the pin low",8,[[["self"]]]],[10,"set_high","","Drives the pin high",8,[[["self"]]]],[0,"v2","embedded_hal::digital","Digital I/O",null,null],[8,"OutputPin","embedded_hal::digital::v2","Single digital push-pull output pin",null,null],[16,"Error","","Error type",9,null],[10,"set_low","","Drives the pin low",9,[[["self"]],["result"]]],[10,"set_high","","Drives the pin high",9,[[["self"]],["result"]]],[0,"v1_compat","embedded_hal::digital","v1 compatibility wrapper this module adds reverse support…",null,null],[3,"OldOutputPin","embedded_hal::digital::v1_compat","Wrapper to allow fallible `v2::OutputPin` traits to be…",null,null],[11,"new","","Create a new OldOutputPin wrapper around a `v2::OutputPin`",10,[[["t"]],["self"]]],[0,"v2_compat","embedded_hal::digital","v2 compatibility shims this module adds implicit forward…",null,null],[0,"fmt","embedded_hal","Implementation of `core::fmt::Write` for the HAL's…",null,null],[0,"prelude","","The prelude is a collection of all the traits in this crate",null,null],[0,"serial","","Serial interface",null,null],[8,"Read","embedded_hal::serial","Read half of a serial interface",null,null],[16,"Error","","Read error",11,null],[10,"read","","Reads a single word from the serial interface",11,[[["self"]],["result"]]],[8,"Write","","Write half of a serial interface",null,null],[16,"Error","","Write error",12,null],[10,"write","","Writes a single word to the serial interface",12,[[["word"],["self"]],["result"]]],[10,"flush","","Ensures that none of the previously written words are…",12,[[["self"]],["result"]]],[0,"spi","embedded_hal","Serial Peripheral Interface",null,null],[3,"Mode","embedded_hal::spi","SPI mode",null,null],[12,"polarity","","Clock polarity",13,null],[12,"phase","","Clock phase",13,null],[4,"Polarity","","Clock polarity",null,null],[13,"IdleLow","","Clock signal low when idle",14,null],[13,"IdleHigh","","Clock signal high when idle",14,null],[4,"Phase","","Clock phase",null,null],[13,"CaptureOnFirstTransition","","Data in \"captured\" on the first clock transition",15,null],[13,"CaptureOnSecondTransition","","Data in \"captured\" on the second clock transition",15,null],[17,"MODE_0","","Helper for CPOL = 0, CPHA = 0",null,null],[17,"MODE_1","","Helper for CPOL = 0, CPHA = 1",null,null],[17,"MODE_2","","Helper for CPOL = 1, CPHA = 0",null,null],[17,"MODE_3","","Helper for CPOL = 1, CPHA = 1",null,null],[8,"FullDuplex","","Full duplex (master mode)",null,null],[16,"Error","","An enumeration of SPI errors",16,null],[10,"read","","Reads the word stored in the shift register",16,[[["self"]],["result"]]],[10,"send","","Sends a word to the slave",16,[[["word"],["self"]],["result"]]],[0,"timer","embedded_hal","Timers",null,null],[8,"CountDown","embedded_hal::timer","A count down timer",null,null],[16,"Time","","The unit of time used by this timer",17,null],[10,"start","","Starts a new count down",17,[[["self"],["t"]]]],[10,"wait","","Non-blockingly \"waits\" until the count down finishes",17,[[["self"]],[["result",["void"]],["void"]]]],[8,"Periodic","","Marker trait that indicates that a timer is periodic",null,null],[8,"Cancel","","Trait for cancelable countdowns.",null,null],[16,"Error","","Error returned when a countdown can't be canceled.",18,null],[10,"cancel","","Tries to cancel this countdown.",18,[[["self"]],["result"]]],[0,"watchdog","embedded_hal","Traits for interactions with a processors watchdog timer.",null,null],[8,"PwmPin","","A single PWM channel / pin",null,null],[16,"Duty","","Type for the `duty` methods",19,null],[10,"disable","","Disables a PWM `channel`",19,[[["self"]]]],[10,"enable","","Enables a PWM `channel`",19,[[["self"]]]],[10,"get_duty","","Returns the current duty cycle",19,[[["self"]]]],[10,"get_max_duty","","Returns the maximum duty cycle value",19,[[["self"]]]],[10,"set_duty","","Sets a new duty cycle",19,[[["self"]]]],[11,"set_low","embedded_hal::digital::v1_compat","",10,[[["self"]],["result"]]],[11,"set_high","","",10,[[["self"]],["result"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","embedded_hal::spi","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"set_low","embedded_hal::digital::v1_compat","",10,[[["self"]]]],[11,"set_high","","",10,[[["self"]]]],[11,"from","","",10,[[["t"]],["self"]]],[11,"eq","embedded_hal::spi","",14,[[["self"],["polarity"]],["bool"]]],[11,"eq","","",15,[[["self"],["phase"]],["bool"]]],[11,"eq","","",13,[[["self"],["mode"]],["bool"]]],[11,"ne","","",13,[[["self"],["mode"]],["bool"]]],[11,"write_str","embedded_hal::serial","",12,[[["str"],["self"]],["result"]]],[11,"clone","embedded_hal::spi","",14,[[["self"]],["polarity"]]],[11,"clone","","",15,[[["self"]],["phase"]]],[11,"clone","","",13,[[["self"]],["mode"]]]],"p":[[8,"DelayMs"],[8,"DelayUs"],[8,"Read"],[8,"Write"],[8,"WriteRead"],[8,"Write"],[8,"Transfer"],[8,"Write"],[8,"OutputPin"],[8,"OutputPin"],[3,"OldOutputPin"],[8,"Read"],[8,"Write"],[3,"Mode"],[4,"Polarity"],[4,"Phase"],[8,"FullDuplex"],[8,"CountDown"],[8,"Cancel"],[8,"PwmPin"]]};
searchIndex["generic_array"] = {"doc":"This crate implements a structure that can be used as a…","i":[[3,"GenericArray","generic_array","Struct representing a generic array - `GenericArray<T, N>`…",null,null],[0,"arr","","Implementation for `arr!` macro.",null,null],[6,"Inc","generic_array::arr","Helper type for `arr!` macro",null,null],[8,"AddLength","","Helper trait for `arr!` macro",null,null],[16,"Output","","Resulting length",0,null],[0,"functional","generic_array","Functional programming with generic sequences",null,null],[6,"MappedSequence","generic_array::functional","Accessor type for a mapped generic sequence",null,null],[8,"MappedGenericSequence","","Defines the relationship between one generic sequence and…",null,null],[16,"Mapped","","Mapped sequence type",1,null],[8,"FunctionalSequence","","Defines functional programming methods for generic sequences",null,null],[11,"map","","Maps a `GenericSequence` to another `GenericSequence`.",2,[[["f"]],["mappedsequence"]]],[11,"zip","","Combines two `GenericSequence` instances and iterates…",2,[[["rhs"],["f"]],["mappedsequence"]]],[11,"fold","","Folds (or reduces) a sequence of data into a single value.",2,[[["u"],["f"]],["u"]]],[0,"iter","generic_array","`GenericArray` iterator implementation.",null,null],[3,"GenericArrayIter","generic_array::iter","An iterator that moves out of a `GenericArray`",null,null],[11,"as_slice","","Returns the remaining items of this iterator as a slice",3,[[["self"]]]],[11,"as_mut_slice","","Returns the remaining items of this iterator as a mutable…",3,[[["self"]]]],[0,"sequence","generic_array","Useful traits for manipulating sequences of data stored in…",null,null],[6,"SequenceItem","generic_array::sequence","Accessor for `GenericSequence` item type, which is really…",null,null],[8,"GenericSequence","","Defines some sequence with an associated length and…",null,null],[16,"Length","","`GenericArray` associated length",4,null],[16,"Sequence","","Concrete sequence type used in conjuction with reference…",4,null],[10,"generate","","Initializes a new sequence instance using the given…",4,[[["f"]]]],[8,"Lengthen","","Defines any `GenericSequence` which can be lengthened or…",null,null],[16,"Longer","","`GenericSequence` that has one more element than `Self`",5,null],[10,"append","","Returns a new array with the given element appended to the…",5,[[["t"]]]],[10,"prepend","","Returns a new array with the given element prepended to…",5,[[["t"]]]],[8,"Shorten","","Defines a `GenericSequence` which can be shortened by…",null,null],[16,"Shorter","","`GenericSequence` that has one less element than `Self`",6,null],[10,"pop_back","","Returns a new array without the last element, and the last…",6,[[]]],[10,"pop_front","","Returns a new array without the first element, and the…",6,[[]]],[8,"Split","","Defines a `GenericSequence` that can be split into two…",null,null],[16,"First","","First part of the resulting split array",7,null],[16,"Second","","Second part of the resulting split array",7,null],[10,"split","","Splits an array at the given index, returning the separate…",7,[[]]],[8,"Concat","","Defines `GenericSequence`s which can be joined together,…",null,null],[16,"Rest","","Sequence to be concatenated with `self`",8,null],[16,"Output","","Resulting sequence formed by the concatenation.",8,null],[10,"concat","","Concatenate, or join, two sequences.",8,[[]]],[8,"ArrayLength","generic_array","Trait making `GenericArray` work, marking types to be used…",null,null],[16,"ArrayType","","Associated type representing the array type for the number",9,null],[11,"as_slice","","Extracts a slice containing the entire array.",10,[[["self"]]]],[11,"as_mut_slice","","Extracts a mutable slice containing the entire array.",10,[[["self"]]]],[11,"from_slice","","Converts slice to a generic array reference with inferred…",10,[[],["genericarray"]]],[11,"from_mut_slice","","Converts mutable slice to a mutable generic array reference",10,[[],["genericarray"]]],[11,"clone_from_slice","","Construct a `GenericArray` from a slice by cloning its…",10,[[],["genericarray"]]],[11,"from_exact_iter","","Creates a new `GenericArray` instance from an iterator…",10,[[["i"]],["option"]]],[14,"arr","","Macro allowing for easy generation of Generic Arrays.…",null,null],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","generic_array::iter","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"map","generic_array","",10,[[["f"]],["mappedsequence"]]],[11,"zip","","",10,[[["rhs"],["f"]],["mappedsequence"]]],[11,"fold","","",10,[[["u"],["f"]],["u"]]],[11,"generate","","",10,[[["f"]],["genericarray"]]],[11,"append","","",10,[[["t"]]]],[11,"prepend","","",10,[[["t"]]]],[11,"pop_back","","",10,[[]]],[11,"pop_front","","",10,[[]]],[11,"split","","",10,[[]]],[11,"concat","","",10,[[]]],[11,"deref","","",10,[[["self"]]]],[11,"deref_mut","","",10,[[["self"]]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","generic_array::iter","",3,[[["formatter"],["self"]],["result"]]],[11,"eq","generic_array","",10,[[["self"]],["bool"]]],[11,"cmp","","",10,[[["genericarray"],["self"]],["ordering"]]],[11,"partial_cmp","","",10,[[["genericarray"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"drop","generic_array::iter","",3,[[["self"]]]],[11,"hash","generic_array","",10,[[["self"],["h"]]]],[11,"next","generic_array::iter","",3,[[["self"]],["option"]]],[11,"fold","","",3,[[["b"],["f"]],["b"]]],[11,"size_hint","","",3,[[["self"]]]],[11,"count","","",3,[[],["usize"]]],[11,"nth","","",3,[[["self"],["usize"]],["option"]]],[11,"last","","",3,[[],["option"]]],[11,"next_back","","",3,[[["self"]],["option"]]],[11,"rfold","","",3,[[["b"],["f"]],["b"]]],[11,"from_iter","generic_array","",10,[[["i"]],["genericarray"]]],[11,"into_iter","","",10,[[]]],[11,"len","generic_array::iter","",3,[[["self"]],["usize"]]],[11,"as_ref","generic_array","",10,[[["self"]]]],[11,"as_mut","","",10,[[["self"]]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"clone","","",10,[[["self"]],["genericarray"]]],[11,"clone","generic_array::iter","",3,[[["self"]],["self"]]],[11,"default","generic_array","",10,[[],["self"]]],[11,"borrow","","",10,[[["self"]]]],[11,"borrow_mut","","",10,[[["self"]]]]],"p":[[8,"AddLength"],[8,"MappedGenericSequence"],[8,"FunctionalSequence"],[3,"GenericArrayIter"],[8,"GenericSequence"],[8,"Lengthen"],[8,"Shorten"],[8,"Split"],[8,"Concat"],[8,"ArrayLength"],[3,"GenericArray"]]};
searchIndex["hash32"] = {"doc":"32-bit hashing machinery","i":[[3,"FnvHasher","hash32","32-bit Fowler-Noll-Vo hasher",null,null],[3,"Murmur3Hasher","","32-bit MurmurHash3 hasher",null,null],[3,"BuildHasherDefault","","See [`core::hash::BuildHasherDefault`][0] for details",null,null],[8,"BuildHasher","","See [`core::hash::BuildHasher`][0] for details",null,null],[16,"Hasher","","See [`core::hash::BuildHasher::Hasher`][0]",0,null],[10,"build_hasher","","See [`core::hash::BuildHasher.build_hasher`][0]",0,[[["self"]]]],[8,"Hasher","","See [`core::hash::Hasher`][0] for details",null,null],[10,"finish","","See [`core::hash::Hasher.finish`][0]",1,[[["self"]],["u32"]]],[10,"write","","See [`core::hash::Hasher.write`][0]",1,[[["self"]]]],[8,"Hash","","See [`core::hash::Hash`][0] for details",null,null],[10,"hash","","Feeds this value into the given `Hasher`.",2,[[["self"],["h"]]]],[11,"hash_slice","","Feeds a slice of this type into the given `Hasher`.",2,[[["h"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"build_hasher","","",5,[[["self"]]]],[11,"finish","","",3,[[["self"]],["u32"]]],[11,"write","","",3,[[["self"]]]],[11,"finish","","",4,[[["self"]],["u32"]]],[11,"write","","",4,[[["self"]]]],[11,"default","","",3,[[],["self"]]],[11,"default","","",4,[[],["self"]]],[11,"default","","",5,[[],["self"]]]],"p":[[8,"BuildHasher"],[8,"Hasher"],[8,"Hash"],[3,"FnvHasher"],[3,"Murmur3Hasher"],[3,"BuildHasherDefault"]]};
searchIndex["heapless"] = {"doc":"`static` friendly data structures that don't require…","i":[[0,"consts","heapless","Type aliases for many constants.",null,null],[6,"True","heapless::consts","",null,null],[6,"False","","",null,null],[6,"U0","","",null,null],[6,"U1","","",null,null],[6,"P1","","",null,null],[6,"N1","","",null,null],[6,"U2","","",null,null],[6,"P2","","",null,null],[6,"N2","","",null,null],[6,"U3","","",null,null],[6,"P3","","",null,null],[6,"N3","","",null,null],[6,"U4","","",null,null],[6,"P4","","",null,null],[6,"N4","","",null,null],[6,"U5","","",null,null],[6,"P5","","",null,null],[6,"N5","","",null,null],[6,"U6","","",null,null],[6,"P6","","",null,null],[6,"N6","","",null,null],[6,"U7","","",null,null],[6,"P7","","",null,null],[6,"N7","","",null,null],[6,"U8","","",null,null],[6,"P8","","",null,null],[6,"N8","","",null,null],[6,"U9","","",null,null],[6,"P9","","",null,null],[6,"N9","","",null,null],[6,"U10","","",null,null],[6,"P10","","",null,null],[6,"N10","","",null,null],[6,"U11","","",null,null],[6,"P11","","",null,null],[6,"N11","","",null,null],[6,"U12","","",null,null],[6,"P12","","",null,null],[6,"N12","","",null,null],[6,"U13","","",null,null],[6,"P13","","",null,null],[6,"N13","","",null,null],[6,"U14","","",null,null],[6,"P14","","",null,null],[6,"N14","","",null,null],[6,"U15","","",null,null],[6,"P15","","",null,null],[6,"N15","","",null,null],[6,"U16","","",null,null],[6,"P16","","",null,null],[6,"N16","","",null,null],[6,"U17","","",null,null],[6,"P17","","",null,null],[6,"N17","","",null,null],[6,"U18","","",null,null],[6,"P18","","",null,null],[6,"N18","","",null,null],[6,"U19","","",null,null],[6,"P19","","",null,null],[6,"N19","","",null,null],[6,"U20","","",null,null],[6,"P20","","",null,null],[6,"N20","","",null,null],[6,"U21","","",null,null],[6,"P21","","",null,null],[6,"N21","","",null,null],[6,"U22","","",null,null],[6,"P22","","",null,null],[6,"N22","","",null,null],[6,"U23","","",null,null],[6,"P23","","",null,null],[6,"N23","","",null,null],[6,"U24","","",null,null],[6,"P24","","",null,null],[6,"N24","","",null,null],[6,"U25","","",null,null],[6,"P25","","",null,null],[6,"N25","","",null,null],[6,"U26","","",null,null],[6,"P26","","",null,null],[6,"N26","","",null,null],[6,"U27","","",null,null],[6,"P27","","",null,null],[6,"N27","","",null,null],[6,"U28","","",null,null],[6,"P28","","",null,null],[6,"N28","","",null,null],[6,"U29","","",null,null],[6,"P29","","",null,null],[6,"N29","","",null,null],[6,"U30","","",null,null],[6,"P30","","",null,null],[6,"N30","","",null,null],[6,"U31","","",null,null],[6,"P31","","",null,null],[6,"N31","","",null,null],[6,"U32","","",null,null],[6,"P32","","",null,null],[6,"N32","","",null,null],[6,"U33","","",null,null],[6,"P33","","",null,null],[6,"N33","","",null,null],[6,"U34","","",null,null],[6,"P34","","",null,null],[6,"N34","","",null,null],[6,"U35","","",null,null],[6,"P35","","",null,null],[6,"N35","","",null,null],[6,"U36","","",null,null],[6,"P36","","",null,null],[6,"N36","","",null,null],[6,"U37","","",null,null],[6,"P37","","",null,null],[6,"N37","","",null,null],[6,"U38","","",null,null],[6,"P38","","",null,null],[6,"N38","","",null,null],[6,"U39","","",null,null],[6,"P39","","",null,null],[6,"N39","","",null,null],[6,"U40","","",null,null],[6,"P40","","",null,null],[6,"N40","","",null,null],[6,"U41","","",null,null],[6,"P41","","",null,null],[6,"N41","","",null,null],[6,"U42","","",null,null],[6,"P42","","",null,null],[6,"N42","","",null,null],[6,"U43","","",null,null],[6,"P43","","",null,null],[6,"N43","","",null,null],[6,"U44","","",null,null],[6,"P44","","",null,null],[6,"N44","","",null,null],[6,"U45","","",null,null],[6,"P45","","",null,null],[6,"N45","","",null,null],[6,"U46","","",null,null],[6,"P46","","",null,null],[6,"N46","","",null,null],[6,"U47","","",null,null],[6,"P47","","",null,null],[6,"N47","","",null,null],[6,"U48","","",null,null],[6,"P48","","",null,null],[6,"N48","","",null,null],[6,"U49","","",null,null],[6,"P49","","",null,null],[6,"N49","","",null,null],[6,"U50","","",null,null],[6,"P50","","",null,null],[6,"N50","","",null,null],[6,"U51","","",null,null],[6,"P51","","",null,null],[6,"N51","","",null,null],[6,"U52","","",null,null],[6,"P52","","",null,null],[6,"N52","","",null,null],[6,"U53","","",null,null],[6,"P53","","",null,null],[6,"N53","","",null,null],[6,"U54","","",null,null],[6,"P54","","",null,null],[6,"N54","","",null,null],[6,"U55","","",null,null],[6,"P55","","",null,null],[6,"N55","","",null,null],[6,"U56","","",null,null],[6,"P56","","",null,null],[6,"N56","","",null,null],[6,"U57","","",null,null],[6,"P57","","",null,null],[6,"N57","","",null,null],[6,"U58","","",null,null],[6,"P58","","",null,null],[6,"N58","","",null,null],[6,"U59","","",null,null],[6,"P59","","",null,null],[6,"N59","","",null,null],[6,"U60","","",null,null],[6,"P60","","",null,null],[6,"N60","","",null,null],[6,"U61","","",null,null],[6,"P61","","",null,null],[6,"N61","","",null,null],[6,"U62","","",null,null],[6,"P62","","",null,null],[6,"N62","","",null,null],[6,"U63","","",null,null],[6,"P63","","",null,null],[6,"N63","","",null,null],[6,"U64","","",null,null],[6,"P64","","",null,null],[6,"N64","","",null,null],[6,"U65","","",null,null],[6,"P65","","",null,null],[6,"N65","","",null,null],[6,"U66","","",null,null],[6,"P66","","",null,null],[6,"N66","","",null,null],[6,"U67","","",null,null],[6,"P67","","",null,null],[6,"N67","","",null,null],[6,"U68","","",null,null],[6,"P68","","",null,null],[6,"N68","","",null,null],[6,"U69","","",null,null],[6,"P69","","",null,null],[6,"N69","","",null,null],[6,"U70","","",null,null],[6,"P70","","",null,null],[6,"N70","","",null,null],[6,"U71","","",null,null],[6,"P71","","",null,null],[6,"N71","","",null,null],[6,"U72","","",null,null],[6,"P72","","",null,null],[6,"N72","","",null,null],[6,"U73","","",null,null],[6,"P73","","",null,null],[6,"N73","","",null,null],[6,"U74","","",null,null],[6,"P74","","",null,null],[6,"N74","","",null,null],[6,"U75","","",null,null],[6,"P75","","",null,null],[6,"N75","","",null,null],[6,"U76","","",null,null],[6,"P76","","",null,null],[6,"N76","","",null,null],[6,"U77","","",null,null],[6,"P77","","",null,null],[6,"N77","","",null,null],[6,"U78","","",null,null],[6,"P78","","",null,null],[6,"N78","","",null,null],[6,"U79","","",null,null],[6,"P79","","",null,null],[6,"N79","","",null,null],[6,"U80","","",null,null],[6,"P80","","",null,null],[6,"N80","","",null,null],[6,"U81","","",null,null],[6,"P81","","",null,null],[6,"N81","","",null,null],[6,"U82","","",null,null],[6,"P82","","",null,null],[6,"N82","","",null,null],[6,"U83","","",null,null],[6,"P83","","",null,null],[6,"N83","","",null,null],[6,"U84","","",null,null],[6,"P84","","",null,null],[6,"N84","","",null,null],[6,"U85","","",null,null],[6,"P85","","",null,null],[6,"N85","","",null,null],[6,"U86","","",null,null],[6,"P86","","",null,null],[6,"N86","","",null,null],[6,"U87","","",null,null],[6,"P87","","",null,null],[6,"N87","","",null,null],[6,"U88","","",null,null],[6,"P88","","",null,null],[6,"N88","","",null,null],[6,"U89","","",null,null],[6,"P89","","",null,null],[6,"N89","","",null,null],[6,"U90","","",null,null],[6,"P90","","",null,null],[6,"N90","","",null,null],[6,"U91","","",null,null],[6,"P91","","",null,null],[6,"N91","","",null,null],[6,"U92","","",null,null],[6,"P92","","",null,null],[6,"N92","","",null,null],[6,"U93","","",null,null],[6,"P93","","",null,null],[6,"N93","","",null,null],[6,"U94","","",null,null],[6,"P94","","",null,null],[6,"N94","","",null,null],[6,"U95","","",null,null],[6,"P95","","",null,null],[6,"N95","","",null,null],[6,"U96","","",null,null],[6,"P96","","",null,null],[6,"N96","","",null,null],[6,"U97","","",null,null],[6,"P97","","",null,null],[6,"N97","","",null,null],[6,"U98","","",null,null],[6,"P98","","",null,null],[6,"N98","","",null,null],[6,"U99","","",null,null],[6,"P99","","",null,null],[6,"N99","","",null,null],[6,"U100","","",null,null],[6,"P100","","",null,null],[6,"N100","","",null,null],[6,"U101","","",null,null],[6,"P101","","",null,null],[6,"N101","","",null,null],[6,"U102","","",null,null],[6,"P102","","",null,null],[6,"N102","","",null,null],[6,"U103","","",null,null],[6,"P103","","",null,null],[6,"N103","","",null,null],[6,"U104","","",null,null],[6,"P104","","",null,null],[6,"N104","","",null,null],[6,"U105","","",null,null],[6,"P105","","",null,null],[6,"N105","","",null,null],[6,"U106","","",null,null],[6,"P106","","",null,null],[6,"N106","","",null,null],[6,"U107","","",null,null],[6,"P107","","",null,null],[6,"N107","","",null,null],[6,"U108","","",null,null],[6,"P108","","",null,null],[6,"N108","","",null,null],[6,"U109","","",null,null],[6,"P109","","",null,null],[6,"N109","","",null,null],[6,"U110","","",null,null],[6,"P110","","",null,null],[6,"N110","","",null,null],[6,"U111","","",null,null],[6,"P111","","",null,null],[6,"N111","","",null,null],[6,"U112","","",null,null],[6,"P112","","",null,null],[6,"N112","","",null,null],[6,"U113","","",null,null],[6,"P113","","",null,null],[6,"N113","","",null,null],[6,"U114","","",null,null],[6,"P114","","",null,null],[6,"N114","","",null,null],[6,"U115","","",null,null],[6,"P115","","",null,null],[6,"N115","","",null,null],[6,"U116","","",null,null],[6,"P116","","",null,null],[6,"N116","","",null,null],[6,"U117","","",null,null],[6,"P117","","",null,null],[6,"N117","","",null,null],[6,"U118","","",null,null],[6,"P118","","",null,null],[6,"N118","","",null,null],[6,"U119","","",null,null],[6,"P119","","",null,null],[6,"N119","","",null,null],[6,"U120","","",null,null],[6,"P120","","",null,null],[6,"N120","","",null,null],[6,"U121","","",null,null],[6,"P121","","",null,null],[6,"N121","","",null,null],[6,"U122","","",null,null],[6,"P122","","",null,null],[6,"N122","","",null,null],[6,"U123","","",null,null],[6,"P123","","",null,null],[6,"N123","","",null,null],[6,"U124","","",null,null],[6,"P124","","",null,null],[6,"N124","","",null,null],[6,"U125","","",null,null],[6,"P125","","",null,null],[6,"N125","","",null,null],[6,"U126","","",null,null],[6,"P126","","",null,null],[6,"N126","","",null,null],[6,"U127","","",null,null],[6,"P127","","",null,null],[6,"N127","","",null,null],[6,"U128","","",null,null],[6,"P128","","",null,null],[6,"N128","","",null,null],[6,"U129","","",null,null],[6,"P129","","",null,null],[6,"N129","","",null,null],[6,"U130","","",null,null],[6,"P130","","",null,null],[6,"N130","","",null,null],[6,"U131","","",null,null],[6,"P131","","",null,null],[6,"N131","","",null,null],[6,"U132","","",null,null],[6,"P132","","",null,null],[6,"N132","","",null,null],[6,"U133","","",null,null],[6,"P133","","",null,null],[6,"N133","","",null,null],[6,"U134","","",null,null],[6,"P134","","",null,null],[6,"N134","","",null,null],[6,"U135","","",null,null],[6,"P135","","",null,null],[6,"N135","","",null,null],[6,"U136","","",null,null],[6,"P136","","",null,null],[6,"N136","","",null,null],[6,"U137","","",null,null],[6,"P137","","",null,null],[6,"N137","","",null,null],[6,"U138","","",null,null],[6,"P138","","",null,null],[6,"N138","","",null,null],[6,"U139","","",null,null],[6,"P139","","",null,null],[6,"N139","","",null,null],[6,"U140","","",null,null],[6,"P140","","",null,null],[6,"N140","","",null,null],[6,"U141","","",null,null],[6,"P141","","",null,null],[6,"N141","","",null,null],[6,"U142","","",null,null],[6,"P142","","",null,null],[6,"N142","","",null,null],[6,"U143","","",null,null],[6,"P143","","",null,null],[6,"N143","","",null,null],[6,"U144","","",null,null],[6,"P144","","",null,null],[6,"N144","","",null,null],[6,"U145","","",null,null],[6,"P145","","",null,null],[6,"N145","","",null,null],[6,"U146","","",null,null],[6,"P146","","",null,null],[6,"N146","","",null,null],[6,"U147","","",null,null],[6,"P147","","",null,null],[6,"N147","","",null,null],[6,"U148","","",null,null],[6,"P148","","",null,null],[6,"N148","","",null,null],[6,"U149","","",null,null],[6,"P149","","",null,null],[6,"N149","","",null,null],[6,"U150","","",null,null],[6,"P150","","",null,null],[6,"N150","","",null,null],[6,"U151","","",null,null],[6,"P151","","",null,null],[6,"N151","","",null,null],[6,"U152","","",null,null],[6,"P152","","",null,null],[6,"N152","","",null,null],[6,"U153","","",null,null],[6,"P153","","",null,null],[6,"N153","","",null,null],[6,"U154","","",null,null],[6,"P154","","",null,null],[6,"N154","","",null,null],[6,"U155","","",null,null],[6,"P155","","",null,null],[6,"N155","","",null,null],[6,"U156","","",null,null],[6,"P156","","",null,null],[6,"N156","","",null,null],[6,"U157","","",null,null],[6,"P157","","",null,null],[6,"N157","","",null,null],[6,"U158","","",null,null],[6,"P158","","",null,null],[6,"N158","","",null,null],[6,"U159","","",null,null],[6,"P159","","",null,null],[6,"N159","","",null,null],[6,"U160","","",null,null],[6,"P160","","",null,null],[6,"N160","","",null,null],[6,"U161","","",null,null],[6,"P161","","",null,null],[6,"N161","","",null,null],[6,"U162","","",null,null],[6,"P162","","",null,null],[6,"N162","","",null,null],[6,"U163","","",null,null],[6,"P163","","",null,null],[6,"N163","","",null,null],[6,"U164","","",null,null],[6,"P164","","",null,null],[6,"N164","","",null,null],[6,"U165","","",null,null],[6,"P165","","",null,null],[6,"N165","","",null,null],[6,"U166","","",null,null],[6,"P166","","",null,null],[6,"N166","","",null,null],[6,"U167","","",null,null],[6,"P167","","",null,null],[6,"N167","","",null,null],[6,"U168","","",null,null],[6,"P168","","",null,null],[6,"N168","","",null,null],[6,"U169","","",null,null],[6,"P169","","",null,null],[6,"N169","","",null,null],[6,"U170","","",null,null],[6,"P170","","",null,null],[6,"N170","","",null,null],[6,"U171","","",null,null],[6,"P171","","",null,null],[6,"N171","","",null,null],[6,"U172","","",null,null],[6,"P172","","",null,null],[6,"N172","","",null,null],[6,"U173","","",null,null],[6,"P173","","",null,null],[6,"N173","","",null,null],[6,"U174","","",null,null],[6,"P174","","",null,null],[6,"N174","","",null,null],[6,"U175","","",null,null],[6,"P175","","",null,null],[6,"N175","","",null,null],[6,"U176","","",null,null],[6,"P176","","",null,null],[6,"N176","","",null,null],[6,"U177","","",null,null],[6,"P177","","",null,null],[6,"N177","","",null,null],[6,"U178","","",null,null],[6,"P178","","",null,null],[6,"N178","","",null,null],[6,"U179","","",null,null],[6,"P179","","",null,null],[6,"N179","","",null,null],[6,"U180","","",null,null],[6,"P180","","",null,null],[6,"N180","","",null,null],[6,"U181","","",null,null],[6,"P181","","",null,null],[6,"N181","","",null,null],[6,"U182","","",null,null],[6,"P182","","",null,null],[6,"N182","","",null,null],[6,"U183","","",null,null],[6,"P183","","",null,null],[6,"N183","","",null,null],[6,"U184","","",null,null],[6,"P184","","",null,null],[6,"N184","","",null,null],[6,"U185","","",null,null],[6,"P185","","",null,null],[6,"N185","","",null,null],[6,"U186","","",null,null],[6,"P186","","",null,null],[6,"N186","","",null,null],[6,"U187","","",null,null],[6,"P187","","",null,null],[6,"N187","","",null,null],[6,"U188","","",null,null],[6,"P188","","",null,null],[6,"N188","","",null,null],[6,"U189","","",null,null],[6,"P189","","",null,null],[6,"N189","","",null,null],[6,"U190","","",null,null],[6,"P190","","",null,null],[6,"N190","","",null,null],[6,"U191","","",null,null],[6,"P191","","",null,null],[6,"N191","","",null,null],[6,"U192","","",null,null],[6,"P192","","",null,null],[6,"N192","","",null,null],[6,"U193","","",null,null],[6,"P193","","",null,null],[6,"N193","","",null,null],[6,"U194","","",null,null],[6,"P194","","",null,null],[6,"N194","","",null,null],[6,"U195","","",null,null],[6,"P195","","",null,null],[6,"N195","","",null,null],[6,"U196","","",null,null],[6,"P196","","",null,null],[6,"N196","","",null,null],[6,"U197","","",null,null],[6,"P197","","",null,null],[6,"N197","","",null,null],[6,"U198","","",null,null],[6,"P198","","",null,null],[6,"N198","","",null,null],[6,"U199","","",null,null],[6,"P199","","",null,null],[6,"N199","","",null,null],[6,"U200","","",null,null],[6,"P200","","",null,null],[6,"N200","","",null,null],[6,"U201","","",null,null],[6,"P201","","",null,null],[6,"N201","","",null,null],[6,"U202","","",null,null],[6,"P202","","",null,null],[6,"N202","","",null,null],[6,"U203","","",null,null],[6,"P203","","",null,null],[6,"N203","","",null,null],[6,"U204","","",null,null],[6,"P204","","",null,null],[6,"N204","","",null,null],[6,"U205","","",null,null],[6,"P205","","",null,null],[6,"N205","","",null,null],[6,"U206","","",null,null],[6,"P206","","",null,null],[6,"N206","","",null,null],[6,"U207","","",null,null],[6,"P207","","",null,null],[6,"N207","","",null,null],[6,"U208","","",null,null],[6,"P208","","",null,null],[6,"N208","","",null,null],[6,"U209","","",null,null],[6,"P209","","",null,null],[6,"N209","","",null,null],[6,"U210","","",null,null],[6,"P210","","",null,null],[6,"N210","","",null,null],[6,"U211","","",null,null],[6,"P211","","",null,null],[6,"N211","","",null,null],[6,"U212","","",null,null],[6,"P212","","",null,null],[6,"N212","","",null,null],[6,"U213","","",null,null],[6,"P213","","",null,null],[6,"N213","","",null,null],[6,"U214","","",null,null],[6,"P214","","",null,null],[6,"N214","","",null,null],[6,"U215","","",null,null],[6,"P215","","",null,null],[6,"N215","","",null,null],[6,"U216","","",null,null],[6,"P216","","",null,null],[6,"N216","","",null,null],[6,"U217","","",null,null],[6,"P217","","",null,null],[6,"N217","","",null,null],[6,"U218","","",null,null],[6,"P218","","",null,null],[6,"N218","","",null,null],[6,"U219","","",null,null],[6,"P219","","",null,null],[6,"N219","","",null,null],[6,"U220","","",null,null],[6,"P220","","",null,null],[6,"N220","","",null,null],[6,"U221","","",null,null],[6,"P221","","",null,null],[6,"N221","","",null,null],[6,"U222","","",null,null],[6,"P222","","",null,null],[6,"N222","","",null,null],[6,"U223","","",null,null],[6,"P223","","",null,null],[6,"N223","","",null,null],[6,"U224","","",null,null],[6,"P224","","",null,null],[6,"N224","","",null,null],[6,"U225","","",null,null],[6,"P225","","",null,null],[6,"N225","","",null,null],[6,"U226","","",null,null],[6,"P226","","",null,null],[6,"N226","","",null,null],[6,"U227","","",null,null],[6,"P227","","",null,null],[6,"N227","","",null,null],[6,"U228","","",null,null],[6,"P228","","",null,null],[6,"N228","","",null,null],[6,"U229","","",null,null],[6,"P229","","",null,null],[6,"N229","","",null,null],[6,"U230","","",null,null],[6,"P230","","",null,null],[6,"N230","","",null,null],[6,"U231","","",null,null],[6,"P231","","",null,null],[6,"N231","","",null,null],[6,"U232","","",null,null],[6,"P232","","",null,null],[6,"N232","","",null,null],[6,"U233","","",null,null],[6,"P233","","",null,null],[6,"N233","","",null,null],[6,"U234","","",null,null],[6,"P234","","",null,null],[6,"N234","","",null,null],[6,"U235","","",null,null],[6,"P235","","",null,null],[6,"N235","","",null,null],[6,"U236","","",null,null],[6,"P236","","",null,null],[6,"N236","","",null,null],[6,"U237","","",null,null],[6,"P237","","",null,null],[6,"N237","","",null,null],[6,"U238","","",null,null],[6,"P238","","",null,null],[6,"N238","","",null,null],[6,"U239","","",null,null],[6,"P239","","",null,null],[6,"N239","","",null,null],[6,"U240","","",null,null],[6,"P240","","",null,null],[6,"N240","","",null,null],[6,"U241","","",null,null],[6,"P241","","",null,null],[6,"N241","","",null,null],[6,"U242","","",null,null],[6,"P242","","",null,null],[6,"N242","","",null,null],[6,"U243","","",null,null],[6,"P243","","",null,null],[6,"N243","","",null,null],[6,"U244","","",null,null],[6,"P244","","",null,null],[6,"N244","","",null,null],[6,"U245","","",null,null],[6,"P245","","",null,null],[6,"N245","","",null,null],[6,"U246","","",null,null],[6,"P246","","",null,null],[6,"N246","","",null,null],[6,"U247","","",null,null],[6,"P247","","",null,null],[6,"N247","","",null,null],[6,"U248","","",null,null],[6,"P248","","",null,null],[6,"N248","","",null,null],[6,"U249","","",null,null],[6,"P249","","",null,null],[6,"N249","","",null,null],[6,"U250","","",null,null],[6,"P250","","",null,null],[6,"N250","","",null,null],[6,"U251","","",null,null],[6,"P251","","",null,null],[6,"N251","","",null,null],[6,"U252","","",null,null],[6,"P252","","",null,null],[6,"N252","","",null,null],[6,"U253","","",null,null],[6,"P253","","",null,null],[6,"N253","","",null,null],[6,"U254","","",null,null],[6,"P254","","",null,null],[6,"N254","","",null,null],[6,"U255","","",null,null],[6,"P255","","",null,null],[6,"N255","","",null,null],[6,"U256","","",null,null],[6,"P256","","",null,null],[6,"N256","","",null,null],[6,"U257","","",null,null],[6,"P257","","",null,null],[6,"N257","","",null,null],[6,"U258","","",null,null],[6,"P258","","",null,null],[6,"N258","","",null,null],[6,"U259","","",null,null],[6,"P259","","",null,null],[6,"N259","","",null,null],[6,"U260","","",null,null],[6,"P260","","",null,null],[6,"N260","","",null,null],[6,"U261","","",null,null],[6,"P261","","",null,null],[6,"N261","","",null,null],[6,"U262","","",null,null],[6,"P262","","",null,null],[6,"N262","","",null,null],[6,"U263","","",null,null],[6,"P263","","",null,null],[6,"N263","","",null,null],[6,"U264","","",null,null],[6,"P264","","",null,null],[6,"N264","","",null,null],[6,"U265","","",null,null],[6,"P265","","",null,null],[6,"N265","","",null,null],[6,"U266","","",null,null],[6,"P266","","",null,null],[6,"N266","","",null,null],[6,"U267","","",null,null],[6,"P267","","",null,null],[6,"N267","","",null,null],[6,"U268","","",null,null],[6,"P268","","",null,null],[6,"N268","","",null,null],[6,"U269","","",null,null],[6,"P269","","",null,null],[6,"N269","","",null,null],[6,"U270","","",null,null],[6,"P270","","",null,null],[6,"N270","","",null,null],[6,"U271","","",null,null],[6,"P271","","",null,null],[6,"N271","","",null,null],[6,"U272","","",null,null],[6,"P272","","",null,null],[6,"N272","","",null,null],[6,"U273","","",null,null],[6,"P273","","",null,null],[6,"N273","","",null,null],[6,"U274","","",null,null],[6,"P274","","",null,null],[6,"N274","","",null,null],[6,"U275","","",null,null],[6,"P275","","",null,null],[6,"N275","","",null,null],[6,"U276","","",null,null],[6,"P276","","",null,null],[6,"N276","","",null,null],[6,"U277","","",null,null],[6,"P277","","",null,null],[6,"N277","","",null,null],[6,"U278","","",null,null],[6,"P278","","",null,null],[6,"N278","","",null,null],[6,"U279","","",null,null],[6,"P279","","",null,null],[6,"N279","","",null,null],[6,"U280","","",null,null],[6,"P280","","",null,null],[6,"N280","","",null,null],[6,"U281","","",null,null],[6,"P281","","",null,null],[6,"N281","","",null,null],[6,"U282","","",null,null],[6,"P282","","",null,null],[6,"N282","","",null,null],[6,"U283","","",null,null],[6,"P283","","",null,null],[6,"N283","","",null,null],[6,"U284","","",null,null],[6,"P284","","",null,null],[6,"N284","","",null,null],[6,"U285","","",null,null],[6,"P285","","",null,null],[6,"N285","","",null,null],[6,"U286","","",null,null],[6,"P286","","",null,null],[6,"N286","","",null,null],[6,"U287","","",null,null],[6,"P287","","",null,null],[6,"N287","","",null,null],[6,"U288","","",null,null],[6,"P288","","",null,null],[6,"N288","","",null,null],[6,"U289","","",null,null],[6,"P289","","",null,null],[6,"N289","","",null,null],[6,"U290","","",null,null],[6,"P290","","",null,null],[6,"N290","","",null,null],[6,"U291","","",null,null],[6,"P291","","",null,null],[6,"N291","","",null,null],[6,"U292","","",null,null],[6,"P292","","",null,null],[6,"N292","","",null,null],[6,"U293","","",null,null],[6,"P293","","",null,null],[6,"N293","","",null,null],[6,"U294","","",null,null],[6,"P294","","",null,null],[6,"N294","","",null,null],[6,"U295","","",null,null],[6,"P295","","",null,null],[6,"N295","","",null,null],[6,"U296","","",null,null],[6,"P296","","",null,null],[6,"N296","","",null,null],[6,"U297","","",null,null],[6,"P297","","",null,null],[6,"N297","","",null,null],[6,"U298","","",null,null],[6,"P298","","",null,null],[6,"N298","","",null,null],[6,"U299","","",null,null],[6,"P299","","",null,null],[6,"N299","","",null,null],[6,"U300","","",null,null],[6,"P300","","",null,null],[6,"N300","","",null,null],[6,"U301","","",null,null],[6,"P301","","",null,null],[6,"N301","","",null,null],[6,"U302","","",null,null],[6,"P302","","",null,null],[6,"N302","","",null,null],[6,"U303","","",null,null],[6,"P303","","",null,null],[6,"N303","","",null,null],[6,"U304","","",null,null],[6,"P304","","",null,null],[6,"N304","","",null,null],[6,"U305","","",null,null],[6,"P305","","",null,null],[6,"N305","","",null,null],[6,"U306","","",null,null],[6,"P306","","",null,null],[6,"N306","","",null,null],[6,"U307","","",null,null],[6,"P307","","",null,null],[6,"N307","","",null,null],[6,"U308","","",null,null],[6,"P308","","",null,null],[6,"N308","","",null,null],[6,"U309","","",null,null],[6,"P309","","",null,null],[6,"N309","","",null,null],[6,"U310","","",null,null],[6,"P310","","",null,null],[6,"N310","","",null,null],[6,"U311","","",null,null],[6,"P311","","",null,null],[6,"N311","","",null,null],[6,"U312","","",null,null],[6,"P312","","",null,null],[6,"N312","","",null,null],[6,"U313","","",null,null],[6,"P313","","",null,null],[6,"N313","","",null,null],[6,"U314","","",null,null],[6,"P314","","",null,null],[6,"N314","","",null,null],[6,"U315","","",null,null],[6,"P315","","",null,null],[6,"N315","","",null,null],[6,"U316","","",null,null],[6,"P316","","",null,null],[6,"N316","","",null,null],[6,"U317","","",null,null],[6,"P317","","",null,null],[6,"N317","","",null,null],[6,"U318","","",null,null],[6,"P318","","",null,null],[6,"N318","","",null,null],[6,"U319","","",null,null],[6,"P319","","",null,null],[6,"N319","","",null,null],[6,"U320","","",null,null],[6,"P320","","",null,null],[6,"N320","","",null,null],[6,"U321","","",null,null],[6,"P321","","",null,null],[6,"N321","","",null,null],[6,"U322","","",null,null],[6,"P322","","",null,null],[6,"N322","","",null,null],[6,"U323","","",null,null],[6,"P323","","",null,null],[6,"N323","","",null,null],[6,"U324","","",null,null],[6,"P324","","",null,null],[6,"N324","","",null,null],[6,"U325","","",null,null],[6,"P325","","",null,null],[6,"N325","","",null,null],[6,"U326","","",null,null],[6,"P326","","",null,null],[6,"N326","","",null,null],[6,"U327","","",null,null],[6,"P327","","",null,null],[6,"N327","","",null,null],[6,"U328","","",null,null],[6,"P328","","",null,null],[6,"N328","","",null,null],[6,"U329","","",null,null],[6,"P329","","",null,null],[6,"N329","","",null,null],[6,"U330","","",null,null],[6,"P330","","",null,null],[6,"N330","","",null,null],[6,"U331","","",null,null],[6,"P331","","",null,null],[6,"N331","","",null,null],[6,"U332","","",null,null],[6,"P332","","",null,null],[6,"N332","","",null,null],[6,"U333","","",null,null],[6,"P333","","",null,null],[6,"N333","","",null,null],[6,"U334","","",null,null],[6,"P334","","",null,null],[6,"N334","","",null,null],[6,"U335","","",null,null],[6,"P335","","",null,null],[6,"N335","","",null,null],[6,"U336","","",null,null],[6,"P336","","",null,null],[6,"N336","","",null,null],[6,"U337","","",null,null],[6,"P337","","",null,null],[6,"N337","","",null,null],[6,"U338","","",null,null],[6,"P338","","",null,null],[6,"N338","","",null,null],[6,"U339","","",null,null],[6,"P339","","",null,null],[6,"N339","","",null,null],[6,"U340","","",null,null],[6,"P340","","",null,null],[6,"N340","","",null,null],[6,"U341","","",null,null],[6,"P341","","",null,null],[6,"N341","","",null,null],[6,"U342","","",null,null],[6,"P342","","",null,null],[6,"N342","","",null,null],[6,"U343","","",null,null],[6,"P343","","",null,null],[6,"N343","","",null,null],[6,"U344","","",null,null],[6,"P344","","",null,null],[6,"N344","","",null,null],[6,"U345","","",null,null],[6,"P345","","",null,null],[6,"N345","","",null,null],[6,"U346","","",null,null],[6,"P346","","",null,null],[6,"N346","","",null,null],[6,"U347","","",null,null],[6,"P347","","",null,null],[6,"N347","","",null,null],[6,"U348","","",null,null],[6,"P348","","",null,null],[6,"N348","","",null,null],[6,"U349","","",null,null],[6,"P349","","",null,null],[6,"N349","","",null,null],[6,"U350","","",null,null],[6,"P350","","",null,null],[6,"N350","","",null,null],[6,"U351","","",null,null],[6,"P351","","",null,null],[6,"N351","","",null,null],[6,"U352","","",null,null],[6,"P352","","",null,null],[6,"N352","","",null,null],[6,"U353","","",null,null],[6,"P353","","",null,null],[6,"N353","","",null,null],[6,"U354","","",null,null],[6,"P354","","",null,null],[6,"N354","","",null,null],[6,"U355","","",null,null],[6,"P355","","",null,null],[6,"N355","","",null,null],[6,"U356","","",null,null],[6,"P356","","",null,null],[6,"N356","","",null,null],[6,"U357","","",null,null],[6,"P357","","",null,null],[6,"N357","","",null,null],[6,"U358","","",null,null],[6,"P358","","",null,null],[6,"N358","","",null,null],[6,"U359","","",null,null],[6,"P359","","",null,null],[6,"N359","","",null,null],[6,"U360","","",null,null],[6,"P360","","",null,null],[6,"N360","","",null,null],[6,"U361","","",null,null],[6,"P361","","",null,null],[6,"N361","","",null,null],[6,"U362","","",null,null],[6,"P362","","",null,null],[6,"N362","","",null,null],[6,"U363","","",null,null],[6,"P363","","",null,null],[6,"N363","","",null,null],[6,"U364","","",null,null],[6,"P364","","",null,null],[6,"N364","","",null,null],[6,"U365","","",null,null],[6,"P365","","",null,null],[6,"N365","","",null,null],[6,"U366","","",null,null],[6,"P366","","",null,null],[6,"N366","","",null,null],[6,"U367","","",null,null],[6,"P367","","",null,null],[6,"N367","","",null,null],[6,"U368","","",null,null],[6,"P368","","",null,null],[6,"N368","","",null,null],[6,"U369","","",null,null],[6,"P369","","",null,null],[6,"N369","","",null,null],[6,"U370","","",null,null],[6,"P370","","",null,null],[6,"N370","","",null,null],[6,"U371","","",null,null],[6,"P371","","",null,null],[6,"N371","","",null,null],[6,"U372","","",null,null],[6,"P372","","",null,null],[6,"N372","","",null,null],[6,"U373","","",null,null],[6,"P373","","",null,null],[6,"N373","","",null,null],[6,"U374","","",null,null],[6,"P374","","",null,null],[6,"N374","","",null,null],[6,"U375","","",null,null],[6,"P375","","",null,null],[6,"N375","","",null,null],[6,"U376","","",null,null],[6,"P376","","",null,null],[6,"N376","","",null,null],[6,"U377","","",null,null],[6,"P377","","",null,null],[6,"N377","","",null,null],[6,"U378","","",null,null],[6,"P378","","",null,null],[6,"N378","","",null,null],[6,"U379","","",null,null],[6,"P379","","",null,null],[6,"N379","","",null,null],[6,"U380","","",null,null],[6,"P380","","",null,null],[6,"N380","","",null,null],[6,"U381","","",null,null],[6,"P381","","",null,null],[6,"N381","","",null,null],[6,"U382","","",null,null],[6,"P382","","",null,null],[6,"N382","","",null,null],[6,"U383","","",null,null],[6,"P383","","",null,null],[6,"N383","","",null,null],[6,"U384","","",null,null],[6,"P384","","",null,null],[6,"N384","","",null,null],[6,"U385","","",null,null],[6,"P385","","",null,null],[6,"N385","","",null,null],[6,"U386","","",null,null],[6,"P386","","",null,null],[6,"N386","","",null,null],[6,"U387","","",null,null],[6,"P387","","",null,null],[6,"N387","","",null,null],[6,"U388","","",null,null],[6,"P388","","",null,null],[6,"N388","","",null,null],[6,"U389","","",null,null],[6,"P389","","",null,null],[6,"N389","","",null,null],[6,"U390","","",null,null],[6,"P390","","",null,null],[6,"N390","","",null,null],[6,"U391","","",null,null],[6,"P391","","",null,null],[6,"N391","","",null,null],[6,"U392","","",null,null],[6,"P392","","",null,null],[6,"N392","","",null,null],[6,"U393","","",null,null],[6,"P393","","",null,null],[6,"N393","","",null,null],[6,"U394","","",null,null],[6,"P394","","",null,null],[6,"N394","","",null,null],[6,"U395","","",null,null],[6,"P395","","",null,null],[6,"N395","","",null,null],[6,"U396","","",null,null],[6,"P396","","",null,null],[6,"N396","","",null,null],[6,"U397","","",null,null],[6,"P397","","",null,null],[6,"N397","","",null,null],[6,"U398","","",null,null],[6,"P398","","",null,null],[6,"N398","","",null,null],[6,"U399","","",null,null],[6,"P399","","",null,null],[6,"N399","","",null,null],[6,"U400","","",null,null],[6,"P400","","",null,null],[6,"N400","","",null,null],[6,"U401","","",null,null],[6,"P401","","",null,null],[6,"N401","","",null,null],[6,"U402","","",null,null],[6,"P402","","",null,null],[6,"N402","","",null,null],[6,"U403","","",null,null],[6,"P403","","",null,null],[6,"N403","","",null,null],[6,"U404","","",null,null],[6,"P404","","",null,null],[6,"N404","","",null,null],[6,"U405","","",null,null],[6,"P405","","",null,null],[6,"N405","","",null,null],[6,"U406","","",null,null],[6,"P406","","",null,null],[6,"N406","","",null,null],[6,"U407","","",null,null],[6,"P407","","",null,null],[6,"N407","","",null,null],[6,"U408","","",null,null],[6,"P408","","",null,null],[6,"N408","","",null,null],[6,"U409","","",null,null],[6,"P409","","",null,null],[6,"N409","","",null,null],[6,"U410","","",null,null],[6,"P410","","",null,null],[6,"N410","","",null,null],[6,"U411","","",null,null],[6,"P411","","",null,null],[6,"N411","","",null,null],[6,"U412","","",null,null],[6,"P412","","",null,null],[6,"N412","","",null,null],[6,"U413","","",null,null],[6,"P413","","",null,null],[6,"N413","","",null,null],[6,"U414","","",null,null],[6,"P414","","",null,null],[6,"N414","","",null,null],[6,"U415","","",null,null],[6,"P415","","",null,null],[6,"N415","","",null,null],[6,"U416","","",null,null],[6,"P416","","",null,null],[6,"N416","","",null,null],[6,"U417","","",null,null],[6,"P417","","",null,null],[6,"N417","","",null,null],[6,"U418","","",null,null],[6,"P418","","",null,null],[6,"N418","","",null,null],[6,"U419","","",null,null],[6,"P419","","",null,null],[6,"N419","","",null,null],[6,"U420","","",null,null],[6,"P420","","",null,null],[6,"N420","","",null,null],[6,"U421","","",null,null],[6,"P421","","",null,null],[6,"N421","","",null,null],[6,"U422","","",null,null],[6,"P422","","",null,null],[6,"N422","","",null,null],[6,"U423","","",null,null],[6,"P423","","",null,null],[6,"N423","","",null,null],[6,"U424","","",null,null],[6,"P424","","",null,null],[6,"N424","","",null,null],[6,"U425","","",null,null],[6,"P425","","",null,null],[6,"N425","","",null,null],[6,"U426","","",null,null],[6,"P426","","",null,null],[6,"N426","","",null,null],[6,"U427","","",null,null],[6,"P427","","",null,null],[6,"N427","","",null,null],[6,"U428","","",null,null],[6,"P428","","",null,null],[6,"N428","","",null,null],[6,"U429","","",null,null],[6,"P429","","",null,null],[6,"N429","","",null,null],[6,"U430","","",null,null],[6,"P430","","",null,null],[6,"N430","","",null,null],[6,"U431","","",null,null],[6,"P431","","",null,null],[6,"N431","","",null,null],[6,"U432","","",null,null],[6,"P432","","",null,null],[6,"N432","","",null,null],[6,"U433","","",null,null],[6,"P433","","",null,null],[6,"N433","","",null,null],[6,"U434","","",null,null],[6,"P434","","",null,null],[6,"N434","","",null,null],[6,"U435","","",null,null],[6,"P435","","",null,null],[6,"N435","","",null,null],[6,"U436","","",null,null],[6,"P436","","",null,null],[6,"N436","","",null,null],[6,"U437","","",null,null],[6,"P437","","",null,null],[6,"N437","","",null,null],[6,"U438","","",null,null],[6,"P438","","",null,null],[6,"N438","","",null,null],[6,"U439","","",null,null],[6,"P439","","",null,null],[6,"N439","","",null,null],[6,"U440","","",null,null],[6,"P440","","",null,null],[6,"N440","","",null,null],[6,"U441","","",null,null],[6,"P441","","",null,null],[6,"N441","","",null,null],[6,"U442","","",null,null],[6,"P442","","",null,null],[6,"N442","","",null,null],[6,"U443","","",null,null],[6,"P443","","",null,null],[6,"N443","","",null,null],[6,"U444","","",null,null],[6,"P444","","",null,null],[6,"N444","","",null,null],[6,"U445","","",null,null],[6,"P445","","",null,null],[6,"N445","","",null,null],[6,"U446","","",null,null],[6,"P446","","",null,null],[6,"N446","","",null,null],[6,"U447","","",null,null],[6,"P447","","",null,null],[6,"N447","","",null,null],[6,"U448","","",null,null],[6,"P448","","",null,null],[6,"N448","","",null,null],[6,"U449","","",null,null],[6,"P449","","",null,null],[6,"N449","","",null,null],[6,"U450","","",null,null],[6,"P450","","",null,null],[6,"N450","","",null,null],[6,"U451","","",null,null],[6,"P451","","",null,null],[6,"N451","","",null,null],[6,"U452","","",null,null],[6,"P452","","",null,null],[6,"N452","","",null,null],[6,"U453","","",null,null],[6,"P453","","",null,null],[6,"N453","","",null,null],[6,"U454","","",null,null],[6,"P454","","",null,null],[6,"N454","","",null,null],[6,"U455","","",null,null],[6,"P455","","",null,null],[6,"N455","","",null,null],[6,"U456","","",null,null],[6,"P456","","",null,null],[6,"N456","","",null,null],[6,"U457","","",null,null],[6,"P457","","",null,null],[6,"N457","","",null,null],[6,"U458","","",null,null],[6,"P458","","",null,null],[6,"N458","","",null,null],[6,"U459","","",null,null],[6,"P459","","",null,null],[6,"N459","","",null,null],[6,"U460","","",null,null],[6,"P460","","",null,null],[6,"N460","","",null,null],[6,"U461","","",null,null],[6,"P461","","",null,null],[6,"N461","","",null,null],[6,"U462","","",null,null],[6,"P462","","",null,null],[6,"N462","","",null,null],[6,"U463","","",null,null],[6,"P463","","",null,null],[6,"N463","","",null,null],[6,"U464","","",null,null],[6,"P464","","",null,null],[6,"N464","","",null,null],[6,"U465","","",null,null],[6,"P465","","",null,null],[6,"N465","","",null,null],[6,"U466","","",null,null],[6,"P466","","",null,null],[6,"N466","","",null,null],[6,"U467","","",null,null],[6,"P467","","",null,null],[6,"N467","","",null,null],[6,"U468","","",null,null],[6,"P468","","",null,null],[6,"N468","","",null,null],[6,"U469","","",null,null],[6,"P469","","",null,null],[6,"N469","","",null,null],[6,"U470","","",null,null],[6,"P470","","",null,null],[6,"N470","","",null,null],[6,"U471","","",null,null],[6,"P471","","",null,null],[6,"N471","","",null,null],[6,"U472","","",null,null],[6,"P472","","",null,null],[6,"N472","","",null,null],[6,"U473","","",null,null],[6,"P473","","",null,null],[6,"N473","","",null,null],[6,"U474","","",null,null],[6,"P474","","",null,null],[6,"N474","","",null,null],[6,"U475","","",null,null],[6,"P475","","",null,null],[6,"N475","","",null,null],[6,"U476","","",null,null],[6,"P476","","",null,null],[6,"N476","","",null,null],[6,"U477","","",null,null],[6,"P477","","",null,null],[6,"N477","","",null,null],[6,"U478","","",null,null],[6,"P478","","",null,null],[6,"N478","","",null,null],[6,"U479","","",null,null],[6,"P479","","",null,null],[6,"N479","","",null,null],[6,"U480","","",null,null],[6,"P480","","",null,null],[6,"N480","","",null,null],[6,"U481","","",null,null],[6,"P481","","",null,null],[6,"N481","","",null,null],[6,"U482","","",null,null],[6,"P482","","",null,null],[6,"N482","","",null,null],[6,"U483","","",null,null],[6,"P483","","",null,null],[6,"N483","","",null,null],[6,"U484","","",null,null],[6,"P484","","",null,null],[6,"N484","","",null,null],[6,"U485","","",null,null],[6,"P485","","",null,null],[6,"N485","","",null,null],[6,"U486","","",null,null],[6,"P486","","",null,null],[6,"N486","","",null,null],[6,"U487","","",null,null],[6,"P487","","",null,null],[6,"N487","","",null,null],[6,"U488","","",null,null],[6,"P488","","",null,null],[6,"N488","","",null,null],[6,"U489","","",null,null],[6,"P489","","",null,null],[6,"N489","","",null,null],[6,"U490","","",null,null],[6,"P490","","",null,null],[6,"N490","","",null,null],[6,"U491","","",null,null],[6,"P491","","",null,null],[6,"N491","","",null,null],[6,"U492","","",null,null],[6,"P492","","",null,null],[6,"N492","","",null,null],[6,"U493","","",null,null],[6,"P493","","",null,null],[6,"N493","","",null,null],[6,"U494","","",null,null],[6,"P494","","",null,null],[6,"N494","","",null,null],[6,"U495","","",null,null],[6,"P495","","",null,null],[6,"N495","","",null,null],[6,"U496","","",null,null],[6,"P496","","",null,null],[6,"N496","","",null,null],[6,"U497","","",null,null],[6,"P497","","",null,null],[6,"N497","","",null,null],[6,"U498","","",null,null],[6,"P498","","",null,null],[6,"N498","","",null,null],[6,"U499","","",null,null],[6,"P499","","",null,null],[6,"N499","","",null,null],[6,"U500","","",null,null],[6,"P500","","",null,null],[6,"N500","","",null,null],[6,"U501","","",null,null],[6,"P501","","",null,null],[6,"N501","","",null,null],[6,"U502","","",null,null],[6,"P502","","",null,null],[6,"N502","","",null,null],[6,"U503","","",null,null],[6,"P503","","",null,null],[6,"N503","","",null,null],[6,"U504","","",null,null],[6,"P504","","",null,null],[6,"N504","","",null,null],[6,"U505","","",null,null],[6,"P505","","",null,null],[6,"N505","","",null,null],[6,"U506","","",null,null],[6,"P506","","",null,null],[6,"N506","","",null,null],[6,"U507","","",null,null],[6,"P507","","",null,null],[6,"N507","","",null,null],[6,"U508","","",null,null],[6,"P508","","",null,null],[6,"N508","","",null,null],[6,"U509","","",null,null],[6,"P509","","",null,null],[6,"N509","","",null,null],[6,"U510","","",null,null],[6,"P510","","",null,null],[6,"N510","","",null,null],[6,"U511","","",null,null],[6,"P511","","",null,null],[6,"N511","","",null,null],[6,"U512","","",null,null],[6,"P512","","",null,null],[6,"N512","","",null,null],[6,"U513","","",null,null],[6,"P513","","",null,null],[6,"N513","","",null,null],[6,"U514","","",null,null],[6,"P514","","",null,null],[6,"N514","","",null,null],[6,"U515","","",null,null],[6,"P515","","",null,null],[6,"N515","","",null,null],[6,"U516","","",null,null],[6,"P516","","",null,null],[6,"N516","","",null,null],[6,"U517","","",null,null],[6,"P517","","",null,null],[6,"N517","","",null,null],[6,"U518","","",null,null],[6,"P518","","",null,null],[6,"N518","","",null,null],[6,"U519","","",null,null],[6,"P519","","",null,null],[6,"N519","","",null,null],[6,"U520","","",null,null],[6,"P520","","",null,null],[6,"N520","","",null,null],[6,"U521","","",null,null],[6,"P521","","",null,null],[6,"N521","","",null,null],[6,"U522","","",null,null],[6,"P522","","",null,null],[6,"N522","","",null,null],[6,"U523","","",null,null],[6,"P523","","",null,null],[6,"N523","","",null,null],[6,"U524","","",null,null],[6,"P524","","",null,null],[6,"N524","","",null,null],[6,"U525","","",null,null],[6,"P525","","",null,null],[6,"N525","","",null,null],[6,"U526","","",null,null],[6,"P526","","",null,null],[6,"N526","","",null,null],[6,"U527","","",null,null],[6,"P527","","",null,null],[6,"N527","","",null,null],[6,"U528","","",null,null],[6,"P528","","",null,null],[6,"N528","","",null,null],[6,"U529","","",null,null],[6,"P529","","",null,null],[6,"N529","","",null,null],[6,"U530","","",null,null],[6,"P530","","",null,null],[6,"N530","","",null,null],[6,"U531","","",null,null],[6,"P531","","",null,null],[6,"N531","","",null,null],[6,"U532","","",null,null],[6,"P532","","",null,null],[6,"N532","","",null,null],[6,"U533","","",null,null],[6,"P533","","",null,null],[6,"N533","","",null,null],[6,"U534","","",null,null],[6,"P534","","",null,null],[6,"N534","","",null,null],[6,"U535","","",null,null],[6,"P535","","",null,null],[6,"N535","","",null,null],[6,"U536","","",null,null],[6,"P536","","",null,null],[6,"N536","","",null,null],[6,"U537","","",null,null],[6,"P537","","",null,null],[6,"N537","","",null,null],[6,"U538","","",null,null],[6,"P538","","",null,null],[6,"N538","","",null,null],[6,"U539","","",null,null],[6,"P539","","",null,null],[6,"N539","","",null,null],[6,"U540","","",null,null],[6,"P540","","",null,null],[6,"N540","","",null,null],[6,"U541","","",null,null],[6,"P541","","",null,null],[6,"N541","","",null,null],[6,"U542","","",null,null],[6,"P542","","",null,null],[6,"N542","","",null,null],[6,"U543","","",null,null],[6,"P543","","",null,null],[6,"N543","","",null,null],[6,"U544","","",null,null],[6,"P544","","",null,null],[6,"N544","","",null,null],[6,"U545","","",null,null],[6,"P545","","",null,null],[6,"N545","","",null,null],[6,"U546","","",null,null],[6,"P546","","",null,null],[6,"N546","","",null,null],[6,"U547","","",null,null],[6,"P547","","",null,null],[6,"N547","","",null,null],[6,"U548","","",null,null],[6,"P548","","",null,null],[6,"N548","","",null,null],[6,"U549","","",null,null],[6,"P549","","",null,null],[6,"N549","","",null,null],[6,"U550","","",null,null],[6,"P550","","",null,null],[6,"N550","","",null,null],[6,"U551","","",null,null],[6,"P551","","",null,null],[6,"N551","","",null,null],[6,"U552","","",null,null],[6,"P552","","",null,null],[6,"N552","","",null,null],[6,"U553","","",null,null],[6,"P553","","",null,null],[6,"N553","","",null,null],[6,"U554","","",null,null],[6,"P554","","",null,null],[6,"N554","","",null,null],[6,"U555","","",null,null],[6,"P555","","",null,null],[6,"N555","","",null,null],[6,"U556","","",null,null],[6,"P556","","",null,null],[6,"N556","","",null,null],[6,"U557","","",null,null],[6,"P557","","",null,null],[6,"N557","","",null,null],[6,"U558","","",null,null],[6,"P558","","",null,null],[6,"N558","","",null,null],[6,"U559","","",null,null],[6,"P559","","",null,null],[6,"N559","","",null,null],[6,"U560","","",null,null],[6,"P560","","",null,null],[6,"N560","","",null,null],[6,"U561","","",null,null],[6,"P561","","",null,null],[6,"N561","","",null,null],[6,"U562","","",null,null],[6,"P562","","",null,null],[6,"N562","","",null,null],[6,"U563","","",null,null],[6,"P563","","",null,null],[6,"N563","","",null,null],[6,"U564","","",null,null],[6,"P564","","",null,null],[6,"N564","","",null,null],[6,"U565","","",null,null],[6,"P565","","",null,null],[6,"N565","","",null,null],[6,"U566","","",null,null],[6,"P566","","",null,null],[6,"N566","","",null,null],[6,"U567","","",null,null],[6,"P567","","",null,null],[6,"N567","","",null,null],[6,"U568","","",null,null],[6,"P568","","",null,null],[6,"N568","","",null,null],[6,"U569","","",null,null],[6,"P569","","",null,null],[6,"N569","","",null,null],[6,"U570","","",null,null],[6,"P570","","",null,null],[6,"N570","","",null,null],[6,"U571","","",null,null],[6,"P571","","",null,null],[6,"N571","","",null,null],[6,"U572","","",null,null],[6,"P572","","",null,null],[6,"N572","","",null,null],[6,"U573","","",null,null],[6,"P573","","",null,null],[6,"N573","","",null,null],[6,"U574","","",null,null],[6,"P574","","",null,null],[6,"N574","","",null,null],[6,"U575","","",null,null],[6,"P575","","",null,null],[6,"N575","","",null,null],[6,"U576","","",null,null],[6,"P576","","",null,null],[6,"N576","","",null,null],[6,"U577","","",null,null],[6,"P577","","",null,null],[6,"N577","","",null,null],[6,"U578","","",null,null],[6,"P578","","",null,null],[6,"N578","","",null,null],[6,"U579","","",null,null],[6,"P579","","",null,null],[6,"N579","","",null,null],[6,"U580","","",null,null],[6,"P580","","",null,null],[6,"N580","","",null,null],[6,"U581","","",null,null],[6,"P581","","",null,null],[6,"N581","","",null,null],[6,"U582","","",null,null],[6,"P582","","",null,null],[6,"N582","","",null,null],[6,"U583","","",null,null],[6,"P583","","",null,null],[6,"N583","","",null,null],[6,"U584","","",null,null],[6,"P584","","",null,null],[6,"N584","","",null,null],[6,"U585","","",null,null],[6,"P585","","",null,null],[6,"N585","","",null,null],[6,"U586","","",null,null],[6,"P586","","",null,null],[6,"N586","","",null,null],[6,"U587","","",null,null],[6,"P587","","",null,null],[6,"N587","","",null,null],[6,"U588","","",null,null],[6,"P588","","",null,null],[6,"N588","","",null,null],[6,"U589","","",null,null],[6,"P589","","",null,null],[6,"N589","","",null,null],[6,"U590","","",null,null],[6,"P590","","",null,null],[6,"N590","","",null,null],[6,"U591","","",null,null],[6,"P591","","",null,null],[6,"N591","","",null,null],[6,"U592","","",null,null],[6,"P592","","",null,null],[6,"N592","","",null,null],[6,"U593","","",null,null],[6,"P593","","",null,null],[6,"N593","","",null,null],[6,"U594","","",null,null],[6,"P594","","",null,null],[6,"N594","","",null,null],[6,"U595","","",null,null],[6,"P595","","",null,null],[6,"N595","","",null,null],[6,"U596","","",null,null],[6,"P596","","",null,null],[6,"N596","","",null,null],[6,"U597","","",null,null],[6,"P597","","",null,null],[6,"N597","","",null,null],[6,"U598","","",null,null],[6,"P598","","",null,null],[6,"N598","","",null,null],[6,"U599","","",null,null],[6,"P599","","",null,null],[6,"N599","","",null,null],[6,"U600","","",null,null],[6,"P600","","",null,null],[6,"N600","","",null,null],[6,"U601","","",null,null],[6,"P601","","",null,null],[6,"N601","","",null,null],[6,"U602","","",null,null],[6,"P602","","",null,null],[6,"N602","","",null,null],[6,"U603","","",null,null],[6,"P603","","",null,null],[6,"N603","","",null,null],[6,"U604","","",null,null],[6,"P604","","",null,null],[6,"N604","","",null,null],[6,"U605","","",null,null],[6,"P605","","",null,null],[6,"N605","","",null,null],[6,"U606","","",null,null],[6,"P606","","",null,null],[6,"N606","","",null,null],[6,"U607","","",null,null],[6,"P607","","",null,null],[6,"N607","","",null,null],[6,"U608","","",null,null],[6,"P608","","",null,null],[6,"N608","","",null,null],[6,"U609","","",null,null],[6,"P609","","",null,null],[6,"N609","","",null,null],[6,"U610","","",null,null],[6,"P610","","",null,null],[6,"N610","","",null,null],[6,"U611","","",null,null],[6,"P611","","",null,null],[6,"N611","","",null,null],[6,"U612","","",null,null],[6,"P612","","",null,null],[6,"N612","","",null,null],[6,"U613","","",null,null],[6,"P613","","",null,null],[6,"N613","","",null,null],[6,"U614","","",null,null],[6,"P614","","",null,null],[6,"N614","","",null,null],[6,"U615","","",null,null],[6,"P615","","",null,null],[6,"N615","","",null,null],[6,"U616","","",null,null],[6,"P616","","",null,null],[6,"N616","","",null,null],[6,"U617","","",null,null],[6,"P617","","",null,null],[6,"N617","","",null,null],[6,"U618","","",null,null],[6,"P618","","",null,null],[6,"N618","","",null,null],[6,"U619","","",null,null],[6,"P619","","",null,null],[6,"N619","","",null,null],[6,"U620","","",null,null],[6,"P620","","",null,null],[6,"N620","","",null,null],[6,"U621","","",null,null],[6,"P621","","",null,null],[6,"N621","","",null,null],[6,"U622","","",null,null],[6,"P622","","",null,null],[6,"N622","","",null,null],[6,"U623","","",null,null],[6,"P623","","",null,null],[6,"N623","","",null,null],[6,"U624","","",null,null],[6,"P624","","",null,null],[6,"N624","","",null,null],[6,"U625","","",null,null],[6,"P625","","",null,null],[6,"N625","","",null,null],[6,"U626","","",null,null],[6,"P626","","",null,null],[6,"N626","","",null,null],[6,"U627","","",null,null],[6,"P627","","",null,null],[6,"N627","","",null,null],[6,"U628","","",null,null],[6,"P628","","",null,null],[6,"N628","","",null,null],[6,"U629","","",null,null],[6,"P629","","",null,null],[6,"N629","","",null,null],[6,"U630","","",null,null],[6,"P630","","",null,null],[6,"N630","","",null,null],[6,"U631","","",null,null],[6,"P631","","",null,null],[6,"N631","","",null,null],[6,"U632","","",null,null],[6,"P632","","",null,null],[6,"N632","","",null,null],[6,"U633","","",null,null],[6,"P633","","",null,null],[6,"N633","","",null,null],[6,"U634","","",null,null],[6,"P634","","",null,null],[6,"N634","","",null,null],[6,"U635","","",null,null],[6,"P635","","",null,null],[6,"N635","","",null,null],[6,"U636","","",null,null],[6,"P636","","",null,null],[6,"N636","","",null,null],[6,"U637","","",null,null],[6,"P637","","",null,null],[6,"N637","","",null,null],[6,"U638","","",null,null],[6,"P638","","",null,null],[6,"N638","","",null,null],[6,"U639","","",null,null],[6,"P639","","",null,null],[6,"N639","","",null,null],[6,"U640","","",null,null],[6,"P640","","",null,null],[6,"N640","","",null,null],[6,"U641","","",null,null],[6,"P641","","",null,null],[6,"N641","","",null,null],[6,"U642","","",null,null],[6,"P642","","",null,null],[6,"N642","","",null,null],[6,"U643","","",null,null],[6,"P643","","",null,null],[6,"N643","","",null,null],[6,"U644","","",null,null],[6,"P644","","",null,null],[6,"N644","","",null,null],[6,"U645","","",null,null],[6,"P645","","",null,null],[6,"N645","","",null,null],[6,"U646","","",null,null],[6,"P646","","",null,null],[6,"N646","","",null,null],[6,"U647","","",null,null],[6,"P647","","",null,null],[6,"N647","","",null,null],[6,"U648","","",null,null],[6,"P648","","",null,null],[6,"N648","","",null,null],[6,"U649","","",null,null],[6,"P649","","",null,null],[6,"N649","","",null,null],[6,"U650","","",null,null],[6,"P650","","",null,null],[6,"N650","","",null,null],[6,"U651","","",null,null],[6,"P651","","",null,null],[6,"N651","","",null,null],[6,"U652","","",null,null],[6,"P652","","",null,null],[6,"N652","","",null,null],[6,"U653","","",null,null],[6,"P653","","",null,null],[6,"N653","","",null,null],[6,"U654","","",null,null],[6,"P654","","",null,null],[6,"N654","","",null,null],[6,"U655","","",null,null],[6,"P655","","",null,null],[6,"N655","","",null,null],[6,"U656","","",null,null],[6,"P656","","",null,null],[6,"N656","","",null,null],[6,"U657","","",null,null],[6,"P657","","",null,null],[6,"N657","","",null,null],[6,"U658","","",null,null],[6,"P658","","",null,null],[6,"N658","","",null,null],[6,"U659","","",null,null],[6,"P659","","",null,null],[6,"N659","","",null,null],[6,"U660","","",null,null],[6,"P660","","",null,null],[6,"N660","","",null,null],[6,"U661","","",null,null],[6,"P661","","",null,null],[6,"N661","","",null,null],[6,"U662","","",null,null],[6,"P662","","",null,null],[6,"N662","","",null,null],[6,"U663","","",null,null],[6,"P663","","",null,null],[6,"N663","","",null,null],[6,"U664","","",null,null],[6,"P664","","",null,null],[6,"N664","","",null,null],[6,"U665","","",null,null],[6,"P665","","",null,null],[6,"N665","","",null,null],[6,"U666","","",null,null],[6,"P666","","",null,null],[6,"N666","","",null,null],[6,"U667","","",null,null],[6,"P667","","",null,null],[6,"N667","","",null,null],[6,"U668","","",null,null],[6,"P668","","",null,null],[6,"N668","","",null,null],[6,"U669","","",null,null],[6,"P669","","",null,null],[6,"N669","","",null,null],[6,"U670","","",null,null],[6,"P670","","",null,null],[6,"N670","","",null,null],[6,"U671","","",null,null],[6,"P671","","",null,null],[6,"N671","","",null,null],[6,"U672","","",null,null],[6,"P672","","",null,null],[6,"N672","","",null,null],[6,"U673","","",null,null],[6,"P673","","",null,null],[6,"N673","","",null,null],[6,"U674","","",null,null],[6,"P674","","",null,null],[6,"N674","","",null,null],[6,"U675","","",null,null],[6,"P675","","",null,null],[6,"N675","","",null,null],[6,"U676","","",null,null],[6,"P676","","",null,null],[6,"N676","","",null,null],[6,"U677","","",null,null],[6,"P677","","",null,null],[6,"N677","","",null,null],[6,"U678","","",null,null],[6,"P678","","",null,null],[6,"N678","","",null,null],[6,"U679","","",null,null],[6,"P679","","",null,null],[6,"N679","","",null,null],[6,"U680","","",null,null],[6,"P680","","",null,null],[6,"N680","","",null,null],[6,"U681","","",null,null],[6,"P681","","",null,null],[6,"N681","","",null,null],[6,"U682","","",null,null],[6,"P682","","",null,null],[6,"N682","","",null,null],[6,"U683","","",null,null],[6,"P683","","",null,null],[6,"N683","","",null,null],[6,"U684","","",null,null],[6,"P684","","",null,null],[6,"N684","","",null,null],[6,"U685","","",null,null],[6,"P685","","",null,null],[6,"N685","","",null,null],[6,"U686","","",null,null],[6,"P686","","",null,null],[6,"N686","","",null,null],[6,"U687","","",null,null],[6,"P687","","",null,null],[6,"N687","","",null,null],[6,"U688","","",null,null],[6,"P688","","",null,null],[6,"N688","","",null,null],[6,"U689","","",null,null],[6,"P689","","",null,null],[6,"N689","","",null,null],[6,"U690","","",null,null],[6,"P690","","",null,null],[6,"N690","","",null,null],[6,"U691","","",null,null],[6,"P691","","",null,null],[6,"N691","","",null,null],[6,"U692","","",null,null],[6,"P692","","",null,null],[6,"N692","","",null,null],[6,"U693","","",null,null],[6,"P693","","",null,null],[6,"N693","","",null,null],[6,"U694","","",null,null],[6,"P694","","",null,null],[6,"N694","","",null,null],[6,"U695","","",null,null],[6,"P695","","",null,null],[6,"N695","","",null,null],[6,"U696","","",null,null],[6,"P696","","",null,null],[6,"N696","","",null,null],[6,"U697","","",null,null],[6,"P697","","",null,null],[6,"N697","","",null,null],[6,"U698","","",null,null],[6,"P698","","",null,null],[6,"N698","","",null,null],[6,"U699","","",null,null],[6,"P699","","",null,null],[6,"N699","","",null,null],[6,"U700","","",null,null],[6,"P700","","",null,null],[6,"N700","","",null,null],[6,"U701","","",null,null],[6,"P701","","",null,null],[6,"N701","","",null,null],[6,"U702","","",null,null],[6,"P702","","",null,null],[6,"N702","","",null,null],[6,"U703","","",null,null],[6,"P703","","",null,null],[6,"N703","","",null,null],[6,"U704","","",null,null],[6,"P704","","",null,null],[6,"N704","","",null,null],[6,"U705","","",null,null],[6,"P705","","",null,null],[6,"N705","","",null,null],[6,"U706","","",null,null],[6,"P706","","",null,null],[6,"N706","","",null,null],[6,"U707","","",null,null],[6,"P707","","",null,null],[6,"N707","","",null,null],[6,"U708","","",null,null],[6,"P708","","",null,null],[6,"N708","","",null,null],[6,"U709","","",null,null],[6,"P709","","",null,null],[6,"N709","","",null,null],[6,"U710","","",null,null],[6,"P710","","",null,null],[6,"N710","","",null,null],[6,"U711","","",null,null],[6,"P711","","",null,null],[6,"N711","","",null,null],[6,"U712","","",null,null],[6,"P712","","",null,null],[6,"N712","","",null,null],[6,"U713","","",null,null],[6,"P713","","",null,null],[6,"N713","","",null,null],[6,"U714","","",null,null],[6,"P714","","",null,null],[6,"N714","","",null,null],[6,"U715","","",null,null],[6,"P715","","",null,null],[6,"N715","","",null,null],[6,"U716","","",null,null],[6,"P716","","",null,null],[6,"N716","","",null,null],[6,"U717","","",null,null],[6,"P717","","",null,null],[6,"N717","","",null,null],[6,"U718","","",null,null],[6,"P718","","",null,null],[6,"N718","","",null,null],[6,"U719","","",null,null],[6,"P719","","",null,null],[6,"N719","","",null,null],[6,"U720","","",null,null],[6,"P720","","",null,null],[6,"N720","","",null,null],[6,"U721","","",null,null],[6,"P721","","",null,null],[6,"N721","","",null,null],[6,"U722","","",null,null],[6,"P722","","",null,null],[6,"N722","","",null,null],[6,"U723","","",null,null],[6,"P723","","",null,null],[6,"N723","","",null,null],[6,"U724","","",null,null],[6,"P724","","",null,null],[6,"N724","","",null,null],[6,"U725","","",null,null],[6,"P725","","",null,null],[6,"N725","","",null,null],[6,"U726","","",null,null],[6,"P726","","",null,null],[6,"N726","","",null,null],[6,"U727","","",null,null],[6,"P727","","",null,null],[6,"N727","","",null,null],[6,"U728","","",null,null],[6,"P728","","",null,null],[6,"N728","","",null,null],[6,"U729","","",null,null],[6,"P729","","",null,null],[6,"N729","","",null,null],[6,"U730","","",null,null],[6,"P730","","",null,null],[6,"N730","","",null,null],[6,"U731","","",null,null],[6,"P731","","",null,null],[6,"N731","","",null,null],[6,"U732","","",null,null],[6,"P732","","",null,null],[6,"N732","","",null,null],[6,"U733","","",null,null],[6,"P733","","",null,null],[6,"N733","","",null,null],[6,"U734","","",null,null],[6,"P734","","",null,null],[6,"N734","","",null,null],[6,"U735","","",null,null],[6,"P735","","",null,null],[6,"N735","","",null,null],[6,"U736","","",null,null],[6,"P736","","",null,null],[6,"N736","","",null,null],[6,"U737","","",null,null],[6,"P737","","",null,null],[6,"N737","","",null,null],[6,"U738","","",null,null],[6,"P738","","",null,null],[6,"N738","","",null,null],[6,"U739","","",null,null],[6,"P739","","",null,null],[6,"N739","","",null,null],[6,"U740","","",null,null],[6,"P740","","",null,null],[6,"N740","","",null,null],[6,"U741","","",null,null],[6,"P741","","",null,null],[6,"N741","","",null,null],[6,"U742","","",null,null],[6,"P742","","",null,null],[6,"N742","","",null,null],[6,"U743","","",null,null],[6,"P743","","",null,null],[6,"N743","","",null,null],[6,"U744","","",null,null],[6,"P744","","",null,null],[6,"N744","","",null,null],[6,"U745","","",null,null],[6,"P745","","",null,null],[6,"N745","","",null,null],[6,"U746","","",null,null],[6,"P746","","",null,null],[6,"N746","","",null,null],[6,"U747","","",null,null],[6,"P747","","",null,null],[6,"N747","","",null,null],[6,"U748","","",null,null],[6,"P748","","",null,null],[6,"N748","","",null,null],[6,"U749","","",null,null],[6,"P749","","",null,null],[6,"N749","","",null,null],[6,"U750","","",null,null],[6,"P750","","",null,null],[6,"N750","","",null,null],[6,"U751","","",null,null],[6,"P751","","",null,null],[6,"N751","","",null,null],[6,"U752","","",null,null],[6,"P752","","",null,null],[6,"N752","","",null,null],[6,"U753","","",null,null],[6,"P753","","",null,null],[6,"N753","","",null,null],[6,"U754","","",null,null],[6,"P754","","",null,null],[6,"N754","","",null,null],[6,"U755","","",null,null],[6,"P755","","",null,null],[6,"N755","","",null,null],[6,"U756","","",null,null],[6,"P756","","",null,null],[6,"N756","","",null,null],[6,"U757","","",null,null],[6,"P757","","",null,null],[6,"N757","","",null,null],[6,"U758","","",null,null],[6,"P758","","",null,null],[6,"N758","","",null,null],[6,"U759","","",null,null],[6,"P759","","",null,null],[6,"N759","","",null,null],[6,"U760","","",null,null],[6,"P760","","",null,null],[6,"N760","","",null,null],[6,"U761","","",null,null],[6,"P761","","",null,null],[6,"N761","","",null,null],[6,"U762","","",null,null],[6,"P762","","",null,null],[6,"N762","","",null,null],[6,"U763","","",null,null],[6,"P763","","",null,null],[6,"N763","","",null,null],[6,"U764","","",null,null],[6,"P764","","",null,null],[6,"N764","","",null,null],[6,"U765","","",null,null],[6,"P765","","",null,null],[6,"N765","","",null,null],[6,"U766","","",null,null],[6,"P766","","",null,null],[6,"N766","","",null,null],[6,"U767","","",null,null],[6,"P767","","",null,null],[6,"N767","","",null,null],[6,"U768","","",null,null],[6,"P768","","",null,null],[6,"N768","","",null,null],[6,"U769","","",null,null],[6,"P769","","",null,null],[6,"N769","","",null,null],[6,"U770","","",null,null],[6,"P770","","",null,null],[6,"N770","","",null,null],[6,"U771","","",null,null],[6,"P771","","",null,null],[6,"N771","","",null,null],[6,"U772","","",null,null],[6,"P772","","",null,null],[6,"N772","","",null,null],[6,"U773","","",null,null],[6,"P773","","",null,null],[6,"N773","","",null,null],[6,"U774","","",null,null],[6,"P774","","",null,null],[6,"N774","","",null,null],[6,"U775","","",null,null],[6,"P775","","",null,null],[6,"N775","","",null,null],[6,"U776","","",null,null],[6,"P776","","",null,null],[6,"N776","","",null,null],[6,"U777","","",null,null],[6,"P777","","",null,null],[6,"N777","","",null,null],[6,"U778","","",null,null],[6,"P778","","",null,null],[6,"N778","","",null,null],[6,"U779","","",null,null],[6,"P779","","",null,null],[6,"N779","","",null,null],[6,"U780","","",null,null],[6,"P780","","",null,null],[6,"N780","","",null,null],[6,"U781","","",null,null],[6,"P781","","",null,null],[6,"N781","","",null,null],[6,"U782","","",null,null],[6,"P782","","",null,null],[6,"N782","","",null,null],[6,"U783","","",null,null],[6,"P783","","",null,null],[6,"N783","","",null,null],[6,"U784","","",null,null],[6,"P784","","",null,null],[6,"N784","","",null,null],[6,"U785","","",null,null],[6,"P785","","",null,null],[6,"N785","","",null,null],[6,"U786","","",null,null],[6,"P786","","",null,null],[6,"N786","","",null,null],[6,"U787","","",null,null],[6,"P787","","",null,null],[6,"N787","","",null,null],[6,"U788","","",null,null],[6,"P788","","",null,null],[6,"N788","","",null,null],[6,"U789","","",null,null],[6,"P789","","",null,null],[6,"N789","","",null,null],[6,"U790","","",null,null],[6,"P790","","",null,null],[6,"N790","","",null,null],[6,"U791","","",null,null],[6,"P791","","",null,null],[6,"N791","","",null,null],[6,"U792","","",null,null],[6,"P792","","",null,null],[6,"N792","","",null,null],[6,"U793","","",null,null],[6,"P793","","",null,null],[6,"N793","","",null,null],[6,"U794","","",null,null],[6,"P794","","",null,null],[6,"N794","","",null,null],[6,"U795","","",null,null],[6,"P795","","",null,null],[6,"N795","","",null,null],[6,"U796","","",null,null],[6,"P796","","",null,null],[6,"N796","","",null,null],[6,"U797","","",null,null],[6,"P797","","",null,null],[6,"N797","","",null,null],[6,"U798","","",null,null],[6,"P798","","",null,null],[6,"N798","","",null,null],[6,"U799","","",null,null],[6,"P799","","",null,null],[6,"N799","","",null,null],[6,"U800","","",null,null],[6,"P800","","",null,null],[6,"N800","","",null,null],[6,"U801","","",null,null],[6,"P801","","",null,null],[6,"N801","","",null,null],[6,"U802","","",null,null],[6,"P802","","",null,null],[6,"N802","","",null,null],[6,"U803","","",null,null],[6,"P803","","",null,null],[6,"N803","","",null,null],[6,"U804","","",null,null],[6,"P804","","",null,null],[6,"N804","","",null,null],[6,"U805","","",null,null],[6,"P805","","",null,null],[6,"N805","","",null,null],[6,"U806","","",null,null],[6,"P806","","",null,null],[6,"N806","","",null,null],[6,"U807","","",null,null],[6,"P807","","",null,null],[6,"N807","","",null,null],[6,"U808","","",null,null],[6,"P808","","",null,null],[6,"N808","","",null,null],[6,"U809","","",null,null],[6,"P809","","",null,null],[6,"N809","","",null,null],[6,"U810","","",null,null],[6,"P810","","",null,null],[6,"N810","","",null,null],[6,"U811","","",null,null],[6,"P811","","",null,null],[6,"N811","","",null,null],[6,"U812","","",null,null],[6,"P812","","",null,null],[6,"N812","","",null,null],[6,"U813","","",null,null],[6,"P813","","",null,null],[6,"N813","","",null,null],[6,"U814","","",null,null],[6,"P814","","",null,null],[6,"N814","","",null,null],[6,"U815","","",null,null],[6,"P815","","",null,null],[6,"N815","","",null,null],[6,"U816","","",null,null],[6,"P816","","",null,null],[6,"N816","","",null,null],[6,"U817","","",null,null],[6,"P817","","",null,null],[6,"N817","","",null,null],[6,"U818","","",null,null],[6,"P818","","",null,null],[6,"N818","","",null,null],[6,"U819","","",null,null],[6,"P819","","",null,null],[6,"N819","","",null,null],[6,"U820","","",null,null],[6,"P820","","",null,null],[6,"N820","","",null,null],[6,"U821","","",null,null],[6,"P821","","",null,null],[6,"N821","","",null,null],[6,"U822","","",null,null],[6,"P822","","",null,null],[6,"N822","","",null,null],[6,"U823","","",null,null],[6,"P823","","",null,null],[6,"N823","","",null,null],[6,"U824","","",null,null],[6,"P824","","",null,null],[6,"N824","","",null,null],[6,"U825","","",null,null],[6,"P825","","",null,null],[6,"N825","","",null,null],[6,"U826","","",null,null],[6,"P826","","",null,null],[6,"N826","","",null,null],[6,"U827","","",null,null],[6,"P827","","",null,null],[6,"N827","","",null,null],[6,"U828","","",null,null],[6,"P828","","",null,null],[6,"N828","","",null,null],[6,"U829","","",null,null],[6,"P829","","",null,null],[6,"N829","","",null,null],[6,"U830","","",null,null],[6,"P830","","",null,null],[6,"N830","","",null,null],[6,"U831","","",null,null],[6,"P831","","",null,null],[6,"N831","","",null,null],[6,"U832","","",null,null],[6,"P832","","",null,null],[6,"N832","","",null,null],[6,"U833","","",null,null],[6,"P833","","",null,null],[6,"N833","","",null,null],[6,"U834","","",null,null],[6,"P834","","",null,null],[6,"N834","","",null,null],[6,"U835","","",null,null],[6,"P835","","",null,null],[6,"N835","","",null,null],[6,"U836","","",null,null],[6,"P836","","",null,null],[6,"N836","","",null,null],[6,"U837","","",null,null],[6,"P837","","",null,null],[6,"N837","","",null,null],[6,"U838","","",null,null],[6,"P838","","",null,null],[6,"N838","","",null,null],[6,"U839","","",null,null],[6,"P839","","",null,null],[6,"N839","","",null,null],[6,"U840","","",null,null],[6,"P840","","",null,null],[6,"N840","","",null,null],[6,"U841","","",null,null],[6,"P841","","",null,null],[6,"N841","","",null,null],[6,"U842","","",null,null],[6,"P842","","",null,null],[6,"N842","","",null,null],[6,"U843","","",null,null],[6,"P843","","",null,null],[6,"N843","","",null,null],[6,"U844","","",null,null],[6,"P844","","",null,null],[6,"N844","","",null,null],[6,"U845","","",null,null],[6,"P845","","",null,null],[6,"N845","","",null,null],[6,"U846","","",null,null],[6,"P846","","",null,null],[6,"N846","","",null,null],[6,"U847","","",null,null],[6,"P847","","",null,null],[6,"N847","","",null,null],[6,"U848","","",null,null],[6,"P848","","",null,null],[6,"N848","","",null,null],[6,"U849","","",null,null],[6,"P849","","",null,null],[6,"N849","","",null,null],[6,"U850","","",null,null],[6,"P850","","",null,null],[6,"N850","","",null,null],[6,"U851","","",null,null],[6,"P851","","",null,null],[6,"N851","","",null,null],[6,"U852","","",null,null],[6,"P852","","",null,null],[6,"N852","","",null,null],[6,"U853","","",null,null],[6,"P853","","",null,null],[6,"N853","","",null,null],[6,"U854","","",null,null],[6,"P854","","",null,null],[6,"N854","","",null,null],[6,"U855","","",null,null],[6,"P855","","",null,null],[6,"N855","","",null,null],[6,"U856","","",null,null],[6,"P856","","",null,null],[6,"N856","","",null,null],[6,"U857","","",null,null],[6,"P857","","",null,null],[6,"N857","","",null,null],[6,"U858","","",null,null],[6,"P858","","",null,null],[6,"N858","","",null,null],[6,"U859","","",null,null],[6,"P859","","",null,null],[6,"N859","","",null,null],[6,"U860","","",null,null],[6,"P860","","",null,null],[6,"N860","","",null,null],[6,"U861","","",null,null],[6,"P861","","",null,null],[6,"N861","","",null,null],[6,"U862","","",null,null],[6,"P862","","",null,null],[6,"N862","","",null,null],[6,"U863","","",null,null],[6,"P863","","",null,null],[6,"N863","","",null,null],[6,"U864","","",null,null],[6,"P864","","",null,null],[6,"N864","","",null,null],[6,"U865","","",null,null],[6,"P865","","",null,null],[6,"N865","","",null,null],[6,"U866","","",null,null],[6,"P866","","",null,null],[6,"N866","","",null,null],[6,"U867","","",null,null],[6,"P867","","",null,null],[6,"N867","","",null,null],[6,"U868","","",null,null],[6,"P868","","",null,null],[6,"N868","","",null,null],[6,"U869","","",null,null],[6,"P869","","",null,null],[6,"N869","","",null,null],[6,"U870","","",null,null],[6,"P870","","",null,null],[6,"N870","","",null,null],[6,"U871","","",null,null],[6,"P871","","",null,null],[6,"N871","","",null,null],[6,"U872","","",null,null],[6,"P872","","",null,null],[6,"N872","","",null,null],[6,"U873","","",null,null],[6,"P873","","",null,null],[6,"N873","","",null,null],[6,"U874","","",null,null],[6,"P874","","",null,null],[6,"N874","","",null,null],[6,"U875","","",null,null],[6,"P875","","",null,null],[6,"N875","","",null,null],[6,"U876","","",null,null],[6,"P876","","",null,null],[6,"N876","","",null,null],[6,"U877","","",null,null],[6,"P877","","",null,null],[6,"N877","","",null,null],[6,"U878","","",null,null],[6,"P878","","",null,null],[6,"N878","","",null,null],[6,"U879","","",null,null],[6,"P879","","",null,null],[6,"N879","","",null,null],[6,"U880","","",null,null],[6,"P880","","",null,null],[6,"N880","","",null,null],[6,"U881","","",null,null],[6,"P881","","",null,null],[6,"N881","","",null,null],[6,"U882","","",null,null],[6,"P882","","",null,null],[6,"N882","","",null,null],[6,"U883","","",null,null],[6,"P883","","",null,null],[6,"N883","","",null,null],[6,"U884","","",null,null],[6,"P884","","",null,null],[6,"N884","","",null,null],[6,"U885","","",null,null],[6,"P885","","",null,null],[6,"N885","","",null,null],[6,"U886","","",null,null],[6,"P886","","",null,null],[6,"N886","","",null,null],[6,"U887","","",null,null],[6,"P887","","",null,null],[6,"N887","","",null,null],[6,"U888","","",null,null],[6,"P888","","",null,null],[6,"N888","","",null,null],[6,"U889","","",null,null],[6,"P889","","",null,null],[6,"N889","","",null,null],[6,"U890","","",null,null],[6,"P890","","",null,null],[6,"N890","","",null,null],[6,"U891","","",null,null],[6,"P891","","",null,null],[6,"N891","","",null,null],[6,"U892","","",null,null],[6,"P892","","",null,null],[6,"N892","","",null,null],[6,"U893","","",null,null],[6,"P893","","",null,null],[6,"N893","","",null,null],[6,"U894","","",null,null],[6,"P894","","",null,null],[6,"N894","","",null,null],[6,"U895","","",null,null],[6,"P895","","",null,null],[6,"N895","","",null,null],[6,"U896","","",null,null],[6,"P896","","",null,null],[6,"N896","","",null,null],[6,"U897","","",null,null],[6,"P897","","",null,null],[6,"N897","","",null,null],[6,"U898","","",null,null],[6,"P898","","",null,null],[6,"N898","","",null,null],[6,"U899","","",null,null],[6,"P899","","",null,null],[6,"N899","","",null,null],[6,"U900","","",null,null],[6,"P900","","",null,null],[6,"N900","","",null,null],[6,"U901","","",null,null],[6,"P901","","",null,null],[6,"N901","","",null,null],[6,"U902","","",null,null],[6,"P902","","",null,null],[6,"N902","","",null,null],[6,"U903","","",null,null],[6,"P903","","",null,null],[6,"N903","","",null,null],[6,"U904","","",null,null],[6,"P904","","",null,null],[6,"N904","","",null,null],[6,"U905","","",null,null],[6,"P905","","",null,null],[6,"N905","","",null,null],[6,"U906","","",null,null],[6,"P906","","",null,null],[6,"N906","","",null,null],[6,"U907","","",null,null],[6,"P907","","",null,null],[6,"N907","","",null,null],[6,"U908","","",null,null],[6,"P908","","",null,null],[6,"N908","","",null,null],[6,"U909","","",null,null],[6,"P909","","",null,null],[6,"N909","","",null,null],[6,"U910","","",null,null],[6,"P910","","",null,null],[6,"N910","","",null,null],[6,"U911","","",null,null],[6,"P911","","",null,null],[6,"N911","","",null,null],[6,"U912","","",null,null],[6,"P912","","",null,null],[6,"N912","","",null,null],[6,"U913","","",null,null],[6,"P913","","",null,null],[6,"N913","","",null,null],[6,"U914","","",null,null],[6,"P914","","",null,null],[6,"N914","","",null,null],[6,"U915","","",null,null],[6,"P915","","",null,null],[6,"N915","","",null,null],[6,"U916","","",null,null],[6,"P916","","",null,null],[6,"N916","","",null,null],[6,"U917","","",null,null],[6,"P917","","",null,null],[6,"N917","","",null,null],[6,"U918","","",null,null],[6,"P918","","",null,null],[6,"N918","","",null,null],[6,"U919","","",null,null],[6,"P919","","",null,null],[6,"N919","","",null,null],[6,"U920","","",null,null],[6,"P920","","",null,null],[6,"N920","","",null,null],[6,"U921","","",null,null],[6,"P921","","",null,null],[6,"N921","","",null,null],[6,"U922","","",null,null],[6,"P922","","",null,null],[6,"N922","","",null,null],[6,"U923","","",null,null],[6,"P923","","",null,null],[6,"N923","","",null,null],[6,"U924","","",null,null],[6,"P924","","",null,null],[6,"N924","","",null,null],[6,"U925","","",null,null],[6,"P925","","",null,null],[6,"N925","","",null,null],[6,"U926","","",null,null],[6,"P926","","",null,null],[6,"N926","","",null,null],[6,"U927","","",null,null],[6,"P927","","",null,null],[6,"N927","","",null,null],[6,"U928","","",null,null],[6,"P928","","",null,null],[6,"N928","","",null,null],[6,"U929","","",null,null],[6,"P929","","",null,null],[6,"N929","","",null,null],[6,"U930","","",null,null],[6,"P930","","",null,null],[6,"N930","","",null,null],[6,"U931","","",null,null],[6,"P931","","",null,null],[6,"N931","","",null,null],[6,"U932","","",null,null],[6,"P932","","",null,null],[6,"N932","","",null,null],[6,"U933","","",null,null],[6,"P933","","",null,null],[6,"N933","","",null,null],[6,"U934","","",null,null],[6,"P934","","",null,null],[6,"N934","","",null,null],[6,"U935","","",null,null],[6,"P935","","",null,null],[6,"N935","","",null,null],[6,"U936","","",null,null],[6,"P936","","",null,null],[6,"N936","","",null,null],[6,"U937","","",null,null],[6,"P937","","",null,null],[6,"N937","","",null,null],[6,"U938","","",null,null],[6,"P938","","",null,null],[6,"N938","","",null,null],[6,"U939","","",null,null],[6,"P939","","",null,null],[6,"N939","","",null,null],[6,"U940","","",null,null],[6,"P940","","",null,null],[6,"N940","","",null,null],[6,"U941","","",null,null],[6,"P941","","",null,null],[6,"N941","","",null,null],[6,"U942","","",null,null],[6,"P942","","",null,null],[6,"N942","","",null,null],[6,"U943","","",null,null],[6,"P943","","",null,null],[6,"N943","","",null,null],[6,"U944","","",null,null],[6,"P944","","",null,null],[6,"N944","","",null,null],[6,"U945","","",null,null],[6,"P945","","",null,null],[6,"N945","","",null,null],[6,"U946","","",null,null],[6,"P946","","",null,null],[6,"N946","","",null,null],[6,"U947","","",null,null],[6,"P947","","",null,null],[6,"N947","","",null,null],[6,"U948","","",null,null],[6,"P948","","",null,null],[6,"N948","","",null,null],[6,"U949","","",null,null],[6,"P949","","",null,null],[6,"N949","","",null,null],[6,"U950","","",null,null],[6,"P950","","",null,null],[6,"N950","","",null,null],[6,"U951","","",null,null],[6,"P951","","",null,null],[6,"N951","","",null,null],[6,"U952","","",null,null],[6,"P952","","",null,null],[6,"N952","","",null,null],[6,"U953","","",null,null],[6,"P953","","",null,null],[6,"N953","","",null,null],[6,"U954","","",null,null],[6,"P954","","",null,null],[6,"N954","","",null,null],[6,"U955","","",null,null],[6,"P955","","",null,null],[6,"N955","","",null,null],[6,"U956","","",null,null],[6,"P956","","",null,null],[6,"N956","","",null,null],[6,"U957","","",null,null],[6,"P957","","",null,null],[6,"N957","","",null,null],[6,"U958","","",null,null],[6,"P958","","",null,null],[6,"N958","","",null,null],[6,"U959","","",null,null],[6,"P959","","",null,null],[6,"N959","","",null,null],[6,"U960","","",null,null],[6,"P960","","",null,null],[6,"N960","","",null,null],[6,"U961","","",null,null],[6,"P961","","",null,null],[6,"N961","","",null,null],[6,"U962","","",null,null],[6,"P962","","",null,null],[6,"N962","","",null,null],[6,"U963","","",null,null],[6,"P963","","",null,null],[6,"N963","","",null,null],[6,"U964","","",null,null],[6,"P964","","",null,null],[6,"N964","","",null,null],[6,"U965","","",null,null],[6,"P965","","",null,null],[6,"N965","","",null,null],[6,"U966","","",null,null],[6,"P966","","",null,null],[6,"N966","","",null,null],[6,"U967","","",null,null],[6,"P967","","",null,null],[6,"N967","","",null,null],[6,"U968","","",null,null],[6,"P968","","",null,null],[6,"N968","","",null,null],[6,"U969","","",null,null],[6,"P969","","",null,null],[6,"N969","","",null,null],[6,"U970","","",null,null],[6,"P970","","",null,null],[6,"N970","","",null,null],[6,"U971","","",null,null],[6,"P971","","",null,null],[6,"N971","","",null,null],[6,"U972","","",null,null],[6,"P972","","",null,null],[6,"N972","","",null,null],[6,"U973","","",null,null],[6,"P973","","",null,null],[6,"N973","","",null,null],[6,"U974","","",null,null],[6,"P974","","",null,null],[6,"N974","","",null,null],[6,"U975","","",null,null],[6,"P975","","",null,null],[6,"N975","","",null,null],[6,"U976","","",null,null],[6,"P976","","",null,null],[6,"N976","","",null,null],[6,"U977","","",null,null],[6,"P977","","",null,null],[6,"N977","","",null,null],[6,"U978","","",null,null],[6,"P978","","",null,null],[6,"N978","","",null,null],[6,"U979","","",null,null],[6,"P979","","",null,null],[6,"N979","","",null,null],[6,"U980","","",null,null],[6,"P980","","",null,null],[6,"N980","","",null,null],[6,"U981","","",null,null],[6,"P981","","",null,null],[6,"N981","","",null,null],[6,"U982","","",null,null],[6,"P982","","",null,null],[6,"N982","","",null,null],[6,"U983","","",null,null],[6,"P983","","",null,null],[6,"N983","","",null,null],[6,"U984","","",null,null],[6,"P984","","",null,null],[6,"N984","","",null,null],[6,"U985","","",null,null],[6,"P985","","",null,null],[6,"N985","","",null,null],[6,"U986","","",null,null],[6,"P986","","",null,null],[6,"N986","","",null,null],[6,"U987","","",null,null],[6,"P987","","",null,null],[6,"N987","","",null,null],[6,"U988","","",null,null],[6,"P988","","",null,null],[6,"N988","","",null,null],[6,"U989","","",null,null],[6,"P989","","",null,null],[6,"N989","","",null,null],[6,"U990","","",null,null],[6,"P990","","",null,null],[6,"N990","","",null,null],[6,"U991","","",null,null],[6,"P991","","",null,null],[6,"N991","","",null,null],[6,"U992","","",null,null],[6,"P992","","",null,null],[6,"N992","","",null,null],[6,"U993","","",null,null],[6,"P993","","",null,null],[6,"N993","","",null,null],[6,"U994","","",null,null],[6,"P994","","",null,null],[6,"N994","","",null,null],[6,"U995","","",null,null],[6,"P995","","",null,null],[6,"N995","","",null,null],[6,"U996","","",null,null],[6,"P996","","",null,null],[6,"N996","","",null,null],[6,"U997","","",null,null],[6,"P997","","",null,null],[6,"N997","","",null,null],[6,"U998","","",null,null],[6,"P998","","",null,null],[6,"N998","","",null,null],[6,"U999","","",null,null],[6,"P999","","",null,null],[6,"N999","","",null,null],[6,"U1000","","",null,null],[6,"P1000","","",null,null],[6,"N1000","","",null,null],[6,"U1001","","",null,null],[6,"P1001","","",null,null],[6,"N1001","","",null,null],[6,"U1002","","",null,null],[6,"P1002","","",null,null],[6,"N1002","","",null,null],[6,"U1003","","",null,null],[6,"P1003","","",null,null],[6,"N1003","","",null,null],[6,"U1004","","",null,null],[6,"P1004","","",null,null],[6,"N1004","","",null,null],[6,"U1005","","",null,null],[6,"P1005","","",null,null],[6,"N1005","","",null,null],[6,"U1006","","",null,null],[6,"P1006","","",null,null],[6,"N1006","","",null,null],[6,"U1007","","",null,null],[6,"P1007","","",null,null],[6,"N1007","","",null,null],[6,"U1008","","",null,null],[6,"P1008","","",null,null],[6,"N1008","","",null,null],[6,"U1009","","",null,null],[6,"P1009","","",null,null],[6,"N1009","","",null,null],[6,"U1010","","",null,null],[6,"P1010","","",null,null],[6,"N1010","","",null,null],[6,"U1011","","",null,null],[6,"P1011","","",null,null],[6,"N1011","","",null,null],[6,"U1012","","",null,null],[6,"P1012","","",null,null],[6,"N1012","","",null,null],[6,"U1013","","",null,null],[6,"P1013","","",null,null],[6,"N1013","","",null,null],[6,"U1014","","",null,null],[6,"P1014","","",null,null],[6,"N1014","","",null,null],[6,"U1015","","",null,null],[6,"P1015","","",null,null],[6,"N1015","","",null,null],[6,"U1016","","",null,null],[6,"P1016","","",null,null],[6,"N1016","","",null,null],[6,"U1017","","",null,null],[6,"P1017","","",null,null],[6,"N1017","","",null,null],[6,"U1018","","",null,null],[6,"P1018","","",null,null],[6,"N1018","","",null,null],[6,"U1019","","",null,null],[6,"P1019","","",null,null],[6,"N1019","","",null,null],[6,"U1020","","",null,null],[6,"P1020","","",null,null],[6,"N1020","","",null,null],[6,"U1021","","",null,null],[6,"P1021","","",null,null],[6,"N1021","","",null,null],[6,"U1022","","",null,null],[6,"P1022","","",null,null],[6,"N1022","","",null,null],[6,"U1023","","",null,null],[6,"P1023","","",null,null],[6,"N1023","","",null,null],[6,"U1024","","",null,null],[6,"P1024","","",null,null],[6,"N1024","","",null,null],[6,"U2048","","",null,null],[6,"P2048","","",null,null],[6,"N2048","","",null,null],[6,"U4096","","",null,null],[6,"P4096","","",null,null],[6,"N4096","","",null,null],[6,"U8192","","",null,null],[6,"P8192","","",null,null],[6,"N8192","","",null,null],[6,"U16384","","",null,null],[6,"P16384","","",null,null],[6,"N16384","","",null,null],[6,"U32768","","",null,null],[6,"P32768","","",null,null],[6,"N32768","","",null,null],[6,"U65536","","",null,null],[6,"P65536","","",null,null],[6,"N65536","","",null,null],[6,"U131072","","",null,null],[6,"P131072","","",null,null],[6,"N131072","","",null,null],[6,"U262144","","",null,null],[6,"P262144","","",null,null],[6,"N262144","","",null,null],[6,"U524288","","",null,null],[6,"P524288","","",null,null],[6,"N524288","","",null,null],[6,"U1048576","","",null,null],[6,"P1048576","","",null,null],[6,"N1048576","","",null,null],[6,"U2097152","","",null,null],[6,"P2097152","","",null,null],[6,"N2097152","","",null,null],[6,"U4194304","","",null,null],[6,"P4194304","","",null,null],[6,"N4194304","","",null,null],[6,"U8388608","","",null,null],[6,"P8388608","","",null,null],[6,"N8388608","","",null,null],[6,"U16777216","","",null,null],[6,"P16777216","","",null,null],[6,"N16777216","","",null,null],[6,"U33554432","","",null,null],[6,"P33554432","","",null,null],[6,"N33554432","","",null,null],[6,"U67108864","","",null,null],[6,"P67108864","","",null,null],[6,"N67108864","","",null,null],[6,"U134217728","","",null,null],[6,"P134217728","","",null,null],[6,"N134217728","","",null,null],[6,"U268435456","","",null,null],[6,"P268435456","","",null,null],[6,"N268435456","","",null,null],[6,"U536870912","","",null,null],[6,"P536870912","","",null,null],[6,"N536870912","","",null,null],[6,"U1073741824","","",null,null],[6,"P1073741824","","",null,null],[6,"N1073741824","","",null,null],[6,"U2147483648","","",null,null],[6,"P2147483648","","",null,null],[6,"N2147483648","","",null,null],[6,"U4294967296","","",null,null],[6,"P4294967296","","",null,null],[6,"N4294967296","","",null,null],[6,"U8589934592","","",null,null],[6,"P8589934592","","",null,null],[6,"N8589934592","","",null,null],[6,"U17179869184","","",null,null],[6,"P17179869184","","",null,null],[6,"N17179869184","","",null,null],[6,"U34359738368","","",null,null],[6,"P34359738368","","",null,null],[6,"N34359738368","","",null,null],[6,"U68719476736","","",null,null],[6,"P68719476736","","",null,null],[6,"N68719476736","","",null,null],[6,"U137438953472","","",null,null],[6,"P137438953472","","",null,null],[6,"N137438953472","","",null,null],[6,"U274877906944","","",null,null],[6,"P274877906944","","",null,null],[6,"N274877906944","","",null,null],[6,"U549755813888","","",null,null],[6,"P549755813888","","",null,null],[6,"N549755813888","","",null,null],[6,"U1099511627776","","",null,null],[6,"P1099511627776","","",null,null],[6,"N1099511627776","","",null,null],[6,"U2199023255552","","",null,null],[6,"P2199023255552","","",null,null],[6,"N2199023255552","","",null,null],[6,"U4398046511104","","",null,null],[6,"P4398046511104","","",null,null],[6,"N4398046511104","","",null,null],[6,"U8796093022208","","",null,null],[6,"P8796093022208","","",null,null],[6,"N8796093022208","","",null,null],[6,"U17592186044416","","",null,null],[6,"P17592186044416","","",null,null],[6,"N17592186044416","","",null,null],[6,"U35184372088832","","",null,null],[6,"P35184372088832","","",null,null],[6,"N35184372088832","","",null,null],[6,"U70368744177664","","",null,null],[6,"P70368744177664","","",null,null],[6,"N70368744177664","","",null,null],[6,"U140737488355328","","",null,null],[6,"P140737488355328","","",null,null],[6,"N140737488355328","","",null,null],[6,"U281474976710656","","",null,null],[6,"P281474976710656","","",null,null],[6,"N281474976710656","","",null,null],[6,"U562949953421312","","",null,null],[6,"P562949953421312","","",null,null],[6,"N562949953421312","","",null,null],[6,"U1125899906842624","","",null,null],[6,"P1125899906842624","","",null,null],[6,"N1125899906842624","","",null,null],[6,"U2251799813685248","","",null,null],[6,"P2251799813685248","","",null,null],[6,"N2251799813685248","","",null,null],[6,"U4503599627370496","","",null,null],[6,"P4503599627370496","","",null,null],[6,"N4503599627370496","","",null,null],[6,"U9007199254740992","","",null,null],[6,"P9007199254740992","","",null,null],[6,"N9007199254740992","","",null,null],[6,"U18014398509481984","","",null,null],[6,"P18014398509481984","","",null,null],[6,"N18014398509481984","","",null,null],[6,"U36028797018963968","","",null,null],[6,"P36028797018963968","","",null,null],[6,"N36028797018963968","","",null,null],[6,"U72057594037927936","","",null,null],[6,"P72057594037927936","","",null,null],[6,"N72057594037927936","","",null,null],[6,"U144115188075855872","","",null,null],[6,"P144115188075855872","","",null,null],[6,"N144115188075855872","","",null,null],[6,"U288230376151711744","","",null,null],[6,"P288230376151711744","","",null,null],[6,"N288230376151711744","","",null,null],[6,"U576460752303423488","","",null,null],[6,"P576460752303423488","","",null,null],[6,"N576460752303423488","","",null,null],[6,"U1152921504606846976","","",null,null],[6,"P1152921504606846976","","",null,null],[6,"N1152921504606846976","","",null,null],[6,"U2305843009213693952","","",null,null],[6,"P2305843009213693952","","",null,null],[6,"N2305843009213693952","","",null,null],[6,"U4611686018427387904","","",null,null],[6,"P4611686018427387904","","",null,null],[6,"N4611686018427387904","","",null,null],[6,"U9223372036854775808","","",null,null],[6,"U10000","","",null,null],[6,"P10000","","",null,null],[6,"N10000","","",null,null],[6,"U100000","","",null,null],[6,"P100000","","",null,null],[6,"N100000","","",null,null],[6,"U1000000","","",null,null],[6,"P1000000","","",null,null],[6,"N1000000","","",null,null],[6,"U10000000","","",null,null],[6,"P10000000","","",null,null],[6,"N10000000","","",null,null],[6,"U100000000","","",null,null],[6,"P100000000","","",null,null],[6,"N100000000","","",null,null],[6,"U1000000000","","",null,null],[6,"P1000000000","","",null,null],[6,"N1000000000","","",null,null],[6,"U10000000000","","",null,null],[6,"P10000000000","","",null,null],[6,"N10000000000","","",null,null],[6,"U100000000000","","",null,null],[6,"P100000000000","","",null,null],[6,"N100000000000","","",null,null],[6,"U1000000000000","","",null,null],[6,"P1000000000000","","",null,null],[6,"N1000000000000","","",null,null],[6,"U10000000000000","","",null,null],[6,"P10000000000000","","",null,null],[6,"N10000000000000","","",null,null],[6,"U100000000000000","","",null,null],[6,"P100000000000000","","",null,null],[6,"N100000000000000","","",null,null],[6,"U1000000000000000","","",null,null],[6,"P1000000000000000","","",null,null],[6,"N1000000000000000","","",null,null],[6,"U10000000000000000","","",null,null],[6,"P10000000000000000","","",null,null],[6,"N10000000000000000","","",null,null],[6,"U100000000000000000","","",null,null],[6,"P100000000000000000","","",null,null],[6,"N100000000000000000","","",null,null],[6,"U1000000000000000000","","",null,null],[6,"P1000000000000000000","","",null,null],[6,"N1000000000000000000","","",null,null],[6,"U10000000000000000000","","",null,null],[3,"B0","","The type-level bit 0.",null,null],[3,"B1","","The type-level bit 1.",null,null],[3,"Z0","","The type-level signed integer 0.",null,null],[8,"ArrayLength","heapless","Trait making `GenericArray` work, marking types to be used…",null,null],[16,"ArrayType","","Associated type representing the array type for the number",0,null],[3,"IndexMap","","Fixed capacity `IndexMap`",null,null],[3,"IndexSet","","Fixed capacity `IndexSet`",null,null],[3,"LinearMap","","A fixed capacity map / dictionary that performs lookups…",null,null],[3,"String","","A fixed capacity `String`",null,null],[3,"Vec","","A fixed capacity `Vec`",null,null],[11,"new","","Creates an empty `IndexMap`.",1,[[],["self"]]],[11,"capacity","","Returns the number of elements the map can hold",1,[[["self"]],["usize"]]],[11,"keys","","Return an iterator over the keys of the map, in their order",1,[[["self"]]]],[11,"values","","Return an iterator over the values of the map, in their…",1,[[["self"]]]],[11,"values_mut","","Return an iterator over mutable references to the the…",1,[[["self"]]]],[11,"iter","","Return an iterator over the key-value pairs of the map, in…",1,[[["self"]],["iter"]]],[11,"iter_mut","","Return an iterator over the key-value pairs of the map, in…",1,[[["self"]],["itermut"]]],[11,"len","","Return the number of key-value pairs in the map.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",1,[[["self"]],["bool"]]],[11,"clear","","Remove all key-value pairs in the map, while preserving…",1,[[["self"]]]],[11,"get","","Returns a reference to the value corresponding to the key.",1,[[["self"],["q"]],[["v"],["option"]]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",1,[[["self"],["q"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",1,[[["self"],["q"]],[["v"],["option"]]]],[11,"insert","","Inserts a key-value pair into the map.",1,[[["self"],["k"],["v"]],[["result",["option"]],["option"]]]],[11,"remove","","Same as `swap_remove`",1,[[["self"],["q"]],["option"]]],[11,"swap_remove","","Remove the key-value pair equivalent to `key` and return…",1,[[["self"],["q"]],["option"]]],[11,"new","","Creates an empty `IndexSet`",2,[[],["self"]]],[11,"capacity","","Returns the number of elements the set can hold",2,[[["self"]],["usize"]]],[11,"iter","","Return an iterator over the values of the set, in their…",2,[[["self"]],["iter"]]],[11,"difference","","Visits the values representing the difference, i.e. the…",2,[[["self"],["indexset"]],["difference"]]],[11,"symmetric_difference","","Visits the values representing the symmetric difference,…",2,[[["self"],["indexset"]]]],[11,"intersection","","Visits the values representing the intersection, i.e. the…",2,[[["self"],["indexset"]],["intersection"]]],[11,"union","","Visits the values representing the union, i.e. all the…",2,[[["self"],["indexset"]]]],[11,"len","","Returns the number of elements in the set.",2,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the set contains no elements.",2,[[["self"]],["bool"]]],[11,"clear","","Clears the set, removing all values.",2,[[["self"]]]],[11,"contains","","Returns `true` if the set contains a value.",2,[[["self"],["q"]],["bool"]]],[11,"is_disjoint","","Returns `true` if `self` has no elements in common with…",2,[[["indexset"],["self"]],["bool"]]],[11,"is_subset","","Returns `true` if the set is a subset of another, i.e.…",2,[[["indexset"],["self"]],["bool"]]],[11,"is_superset","","Examples",2,[[["indexset"],["self"]],["bool"]]],[11,"insert","","Adds a value to the set.",2,[[["self"],["t"]],[["result",["bool"]],["bool"]]]],[11,"remove","","Removes a value from the set. Returns `true` if the value…",2,[[["self"],["q"]],["bool"]]],[11,"new","","Creates an empty `LinearMap`",3,[[],["self"]]],[11,"capacity","","Returns the number of elements that the map can hold",3,[[["self"]],["usize"]]],[11,"clear","","Clears the map, removing all key-value pairs",3,[[["self"]]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",3,[[["k"],["self"]],["bool"]]],[11,"get","","Returns a reference to the value corresponding to the key",3,[[["self"],["q"]],[["v"],["option"]]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",3,[[["self"],["q"]],[["v"],["option"]]]],[11,"len","","Returns the number of elements in this map",3,[[["self"]],["usize"]]],[11,"insert","","Inserts a key-value pair into the map.",3,[[["self"],["k"],["v"]],[["result",["option"]],["option"]]]],[11,"is_empty","","Returns true if the map contains no elements",3,[[["self"]],["bool"]]],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.",3,[[["self"]],["iter"]]],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary…",3,[[["self"]],["itermut"]]],[11,"keys","","An iterator visiting all keys in arbitrary order",3,[[["self"]]]],[11,"remove","","Removes a key from the map, returning the value at the key…",3,[[["self"],["q"]],["option"]]],[11,"values","","An iterator visiting all values in arbitrary order",3,[[["self"]]]],[11,"values_mut","","An iterator visiting all values mutably in arbitrary order",3,[[["self"]]]],[11,"new","","Constructs a new, empty `String` with a fixed capacity of…",4,[[],["self"]]],[11,"from_utf8","","Converts a vector of bytes into a `String`.",4,[[["vec",["u8"]],["u8"]],[["string"],["result",["string","utf8error"]],["utf8error"]]]],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking…",4,[[["vec",["u8"]],["u8"]],["string"]]],[11,"into_bytes","","Converts a `String` into a byte vector.",4,[[],[["vec",["u8"]],["u8"]]]],[11,"as_str","","Extracts a string slice containing the entire string.",4,[[["self"]],["str"]]],[11,"as_mut_str","","Converts a `String` into a mutable string slice.",4,[[["self"]],["str"]]],[11,"push_str","","Appends a given string slice onto the end of this `String`.",4,[[["str"],["self"]],["result"]]],[11,"capacity","","Returns the maximum number of elements the String can hold",4,[[["self"]],["usize"]]],[11,"push","","Appends the given [`char`] to the end of this `String`.",4,[[["self"],["char"]],["result"]]],[11,"truncate","","Shortens this `String` to the specified length.",4,[[["self"],["usize"]]]],[11,"pop","","Removes the last character from the string buffer and…",4,[[["self"]],[["char"],["option",["char"]]]]],[11,"clear","","Truncates this `String`, removing all contents.",4,[[["self"]]]],[11,"new","","Constructs a new, empty vector with a fixed capacity of `N`",5,[[],["self"]]],[11,"capacity","","Returns the maximum number of elements the vector can hold",5,[[["self"]],["usize"]]],[11,"clear","","Clears the vector, removing all values.",5,[[["self"]]]],[11,"extend_from_slice","","Clones and appends all elements in a slice to the `Vec`.",5,[[["self"]],["result"]]],[11,"pop","","Removes the last element from a vector and return it, or…",5,[[["self"]],["option"]]],[11,"push","","Appends an `item` to the back of the collection",5,[[["self"],["t"]],["result"]]],[11,"truncate","","Shortens the vector, keeping the first `len` elements and…",5,[[["self"],["usize"]]]],[11,"resize","","Resizes the Vec in-place so that len is equal to new_len.",5,[[["self"],["usize"],["t"]],["result"]]],[11,"resize_default","","Resizes the `Vec` in-place so that `len` is equal to…",5,[[["self"],["usize"]],["result"]]],[11,"swap_remove","","Removes an element from the vector and returns it.",5,[[["self"],["usize"]],["t"]]],[0,"binary_heap","","A priority queue implemented with a binary heap.",null,null],[3,"BinaryHeap","heapless::binary_heap","A priority queue implemented with a binary heap.",null,null],[3,"PeekMut","","Structure wrapping a mutable reference to the greatest…",null,null],[4,"Min","","Min-heap",null,null],[4,"Max","","Max-heap",null,null],[11,"new","","Creates an empty BinaryHeap as a $K-heap.",6,[[],["self"]]],[11,"capacity","","Returns the capacity of the binary heap.",6,[[["self"]],["usize"]]],[11,"clear","","Drops all items from the binary heap.",6,[[["self"]]]],[11,"len","","Returns the length of the binary heap.",6,[[["self"]],["usize"]]],[11,"is_empty","","Checks if the binary heap is empty.",6,[[["self"]],["bool"]]],[11,"iter","","Returns an iterator visiting all values in the underlying…",6,[[["self"]],["iter"]]],[11,"iter_mut","","Returns a mutable iterator visiting all values in the…",6,[[["self"]],["itermut"]]],[11,"peek","","Returns the top (greatest if max-heap, smallest if…",6,[[["self"]],[["option"],["t"]]]],[11,"peek_mut","","Returns a mutable reference to the greatest item in the…",6,[[["self"]],[["peekmut"],["option",["peekmut"]]]]],[11,"pop","","Removes the top (greatest if max-heap, smallest if…",6,[[["self"]],["option"]]],[11,"pop_unchecked","","Removes the top (greatest if max-heap, smallest if…",6,[[["self"]],["t"]]],[11,"push","","Pushes an item onto the binary heap.",6,[[["self"],["t"]],["result"]]],[11,"push_unchecked","","Pushes an item onto the binary heap without first checking…",6,[[["self"],["t"]]]],[11,"pop","","Removes the peeked value from the heap and returns it.",7,[[["peekmut"]],["t"]]],[0,"i","heapless","Unfortunate implementation detail required to construct…",null,null],[3,"BinaryHeap","heapless::i","`const-fn` version of `BinaryHeap`",null,null],[3,"LinearMap","","`const-fn` version of `LinearMap`",null,null],[3,"Queue","","`const-fn` version of `spsc::Queue`",null,null],[3,"String","","`const-fn` version of `String`",null,null],[3,"Vec","","`const-fn` version of `Vec`",null,null],[0,"mpmc","heapless","A fixed capacity Multiple-Producer Multiple-Consumer…",null,null],[3,"Q2","heapless::mpmc","MPMC queue with a capacity for 2 elements",null,null],[3,"Q4","","MPMC queue with a capacity for 4 elements",null,null],[3,"Q8","","MPMC queue with a capacity for 8 elements",null,null],[3,"Q16","","MPMC queue with a capacity for 16 elements",null,null],[3,"Q32","","MPMC queue with a capacity for 32 elements",null,null],[3,"Q64","","MPMC queue with a capacity for 64 elements",null,null],[11,"new","","Creates an empty queue",8,[[],["self"]]],[11,"dequeue","","Returns the item in the front of the queue, or `None` if…",8,[[["self"]],["option"]]],[11,"enqueue","","Adds an `item` to the end of the queue",8,[[["self"],["t"]],["result"]]],[11,"new","","Creates an empty queue",9,[[],["self"]]],[11,"dequeue","","Returns the item in the front of the queue, or `None` if…",9,[[["self"]],["option"]]],[11,"enqueue","","Adds an `item` to the end of the queue",9,[[["self"],["t"]],["result"]]],[11,"new","","Creates an empty queue",10,[[],["self"]]],[11,"dequeue","","Returns the item in the front of the queue, or `None` if…",10,[[["self"]],["option"]]],[11,"enqueue","","Adds an `item` to the end of the queue",10,[[["self"],["t"]],["result"]]],[11,"new","","Creates an empty queue",11,[[],["self"]]],[11,"dequeue","","Returns the item in the front of the queue, or `None` if…",11,[[["self"]],["option"]]],[11,"enqueue","","Adds an `item` to the end of the queue",11,[[["self"],["t"]],["result"]]],[11,"new","","Creates an empty queue",12,[[],["self"]]],[11,"dequeue","","Returns the item in the front of the queue, or `None` if…",12,[[["self"]],["option"]]],[11,"enqueue","","Adds an `item` to the end of the queue",12,[[["self"],["t"]],["result"]]],[11,"new","","Creates an empty queue",13,[[],["self"]]],[11,"dequeue","","Returns the item in the front of the queue, or `None` if…",13,[[["self"]],["option"]]],[11,"enqueue","","Adds an `item` to the end of the queue",13,[[["self"],["t"]],["result"]]],[0,"pool","heapless","A heap-less, interrupt-safe, lock-free memory pool (*)",null,null],[3,"Pool","heapless::pool","A lock-free memory pool",null,null],[3,"Node","","Unfortunate implementation detail required to use the…",null,null],[3,"Box","","A memory block",null,null],[4,"Uninit","","Uninitialized type state",null,null],[4,"Init","","Initialized type state",null,null],[0,"singleton","","`Pool` as a global singleton",null,null],[3,"Box","heapless::pool::singleton","A memory block that belongs to the global memory pool,…",null,null],[8,"Pool","","A global singleton memory pool",null,null],[16,"Data","","The type of data that can be allocated on this pool",14,null],[11,"alloc","","Claims a memory block from the pool",14,[[],[["box",["uninit"]],["option",["box"]]]]],[11,"grow","","Increases the capacity of the pool",14,[[],["usize"]]],[11,"grow_exact","","Increases the capacity of the pool",14,[[["maybeuninit"]],["usize"]]],[11,"init","","Initializes this memory block",15,[[],[["box",["init"]],["init"]]]],[11,"freeze","","Freezes the contents of this memory block",15,[[],[["box",["init"]],["init"]]]],[11,"new","heapless::pool","Creates a new empty pool",16,[[],["self"]]],[11,"alloc","","Claims a memory block from the pool",16,[[["self"]],[["box",["uninit"]],["option",["box"]]]]],[11,"free","","Returns a memory block to the pool",16,[[["self"],["box"]]]],[11,"grow","","Increases the capacity of the pool",16,[[["self"]],["usize"]]],[11,"grow_exact","","Increases the capacity of the pool",16,[[["self"],["maybeuninit"]],["usize"]]],[11,"init","","Initializes this memory block",17,[[["t"]],[["box",["init"]],["init"]]]],[0,"spsc","heapless","Fixed capacity Single Producer Single Consumer (SPSC) queue",null,null],[3,"Consumer","heapless::spsc","A queue \"consumer\"; it can dequeue items from the queue",null,null],[3,"Producer","","A queue \"producer\"; it can enqueue items into the queue",null,null],[3,"MultiCore","","Multi core synchronization - a memory barrier is used for…",null,null],[3,"SingleCore","","Single core synchronization - no memory barrier…",null,null],[3,"Queue","","A statically allocated single producer single consumer…",null,null],[3,"Iter","","An iterator over the items of a queue",null,null],[3,"IterMut","","A mutable iterator over the items of a queue",null,null],[11,"split","","Splits a statically allocated queue into producer and…",18,[[["self"]]]],[11,"ready","","Returns if there are any items to dequeue. When this…",19,[[["self"]],["bool"]]],[11,"peek","","Returns the item in the front of the queue without…",19,[[["self"]],[["option"],["t"]]]],[11,"dequeue","","Returns the item in the front of the queue, or `None` if…",19,[[["self"]],["option"]]],[11,"dequeue_unchecked","","Returns the item in the front of the queue, without…",19,[[["self"]],["t"]]],[11,"ready","","Returns if there is any space to enqueue a new item. When…",20,[[["self"]],["bool"]]],[11,"enqueue","","Adds an `item` to the end of the queue",20,[[["self"],["t"]],["result"]]],[11,"enqueue_unchecked","","Adds an `item` to the end of the queue without checking if…",20,[[["self"],["t"]]]],[11,"ready","","Returns if there are any items to dequeue. When this…",19,[[["self"]],["bool"]]],[11,"peek","","Returns the item in the front of the queue without…",19,[[["self"]],[["option"],["t"]]]],[11,"dequeue","","Returns the item in the front of the queue, or `None` if…",19,[[["self"]],["option"]]],[11,"dequeue_unchecked","","Returns the item in the front of the queue, without…",19,[[["self"]],["t"]]],[11,"ready","","Returns if there is any space to enqueue a new item. When…",20,[[["self"]],["bool"]]],[11,"enqueue","","Adds an `item` to the end of the queue",20,[[["self"],["t"]],["result"]]],[11,"enqueue_unchecked","","Adds an `item` to the end of the queue without checking if…",20,[[["self"],["t"]]]],[11,"ready","","Returns if there are any items to dequeue. When this…",19,[[["self"]],["bool"]]],[11,"peek","","Returns the item in the front of the queue without…",19,[[["self"]],[["option"],["t"]]]],[11,"dequeue","","Returns the item in the front of the queue, or `None` if…",19,[[["self"]],["option"]]],[11,"dequeue_unchecked","","Returns the item in the front of the queue, without…",19,[[["self"]],["t"]]],[11,"ready","","Returns if there is any space to enqueue a new item. When…",20,[[["self"]],["bool"]]],[11,"enqueue","","Adds an `item` to the end of the queue",20,[[["self"],["t"]],["result"]]],[11,"enqueue_unchecked","","Adds an `item` to the end of the queue without checking if…",20,[[["self"],["t"]]]],[11,"capacity","","Returns the maximum number of elements the queue can hold",18,[[["self"]],["u"]]],[11,"is_empty","","Returns `true` if the queue has a length of 0",18,[[["self"]],["bool"]]],[11,"iter","","Iterates from the front of the queue to the back",18,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator that allows modifying each value.",18,[[["self"]],["itermut"]]],[11,"new","heapless::i","`spsc::Queue` `const` constructor; wrap the returned value…",21,[[],["self"]]],[11,"new","heapless::spsc","Alias for `spsc::Queue::usize`",18,[[],["self"]]],[11,"new_sc","heapless::i","`spsc::Queue` `const` constructor; wrap the returned value…",21,[[],["self"]]],[11,"new_sc","heapless::spsc","Alias for `spsc::Queue::usize_sc`",18,[[],["self"]]],[11,"u8","","Creates an empty queue with a fixed capacity of `N`",18,[[],["self"]]],[11,"u8","heapless::i","`spsc::Queue` `const` constructor; wrap the returned value…",21,[[],["self"]]],[11,"u8_sc","heapless::spsc","Creates an empty queue with a fixed capacity of `N`…",18,[[],["self"]]],[11,"u8_sc","heapless::i","`spsc::Queue` `const` constructor; wrap the returned value…",21,[[],["self"]]],[11,"peek","heapless::spsc","Returns a reference to the item in the front of the queue…",18,[[["self"]],[["option"],["t"]]]],[11,"dequeue","","Returns the item in the front of the queue, or `None` if…",18,[[["self"]],["option"]]],[11,"enqueue","","Adds an `item` to the end of the queue",18,[[["self"],["t"]],["result"]]],[11,"enqueue_unchecked","","Adds an `item` to the end of the queue, without checking…",18,[[["self"],["t"]]]],[11,"len","","Returns the number of elements in the queue",18,[[["self"]],["u8"]]],[11,"u16","","Creates an empty queue with a fixed capacity of `N`",18,[[],["self"]]],[11,"u16","heapless::i","`spsc::Queue` `const` constructor; wrap the returned value…",21,[[],["self"]]],[11,"u16_sc","heapless::spsc","Creates an empty queue with a fixed capacity of `N`…",18,[[],["self"]]],[11,"u16_sc","heapless::i","`spsc::Queue` `const` constructor; wrap the returned value…",21,[[],["self"]]],[11,"peek","heapless::spsc","Returns a reference to the item in the front of the queue…",18,[[["self"]],[["option"],["t"]]]],[11,"dequeue","","Returns the item in the front of the queue, or `None` if…",18,[[["self"]],["option"]]],[11,"enqueue","","Adds an `item` to the end of the queue",18,[[["self"],["t"]],["result"]]],[11,"enqueue_unchecked","","Adds an `item` to the end of the queue, without checking…",18,[[["self"],["t"]]]],[11,"len","","Returns the number of elements in the queue",18,[[["self"]],["u16"]]],[11,"usize","","Creates an empty queue with a fixed capacity of `N`",18,[[],["self"]]],[11,"usize","heapless::i","`spsc::Queue` `const` constructor; wrap the returned value…",21,[[],["self"]]],[11,"usize_sc","heapless::spsc","Creates an empty queue with a fixed capacity of `N`…",18,[[],["self"]]],[11,"usize_sc","heapless::i","`spsc::Queue` `const` constructor; wrap the returned value…",21,[[],["self"]]],[11,"peek","heapless::spsc","Returns a reference to the item in the front of the queue…",18,[[["self"]],[["option"],["t"]]]],[11,"dequeue","","Returns the item in the front of the queue, or `None` if…",18,[[["self"]],["option"]]],[11,"enqueue","","Adds an `item` to the end of the queue",18,[[["self"],["t"]],["result"]]],[11,"enqueue_unchecked","","Adds an `item` to the end of the queue, without checking…",18,[[["self"],["t"]]]],[11,"len","","Returns the number of elements in the queue",18,[[["self"]],["usize"]]],[6,"FnvIndexMap","heapless","An `IndexMap` using the default FNV hasher",null,null],[6,"FnvIndexSet","","An `IndexSet` using the default FNV hasher",null,null],[14,"pool","","Instantiates a pool as a global singleton",null,null],[11,"from","heapless::consts","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"is_equal","","",22,[[["b"]]]],[11,"is_greater","","",22,[[["b"]]]],[11,"is_greater_or_equal","","",22,[[["b"]]]],[11,"is_less","","",22,[[["b"]]]],[11,"is_less_or_equal","","",22,[[["b"]]]],[11,"is_not_equal","","",22,[[["b"]]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"is_equal","","",23,[[["b"]]]],[11,"is_greater","","",23,[[["b"]]]],[11,"is_greater_or_equal","","",23,[[["b"]]]],[11,"is_less","","",23,[[["b"]]]],[11,"is_less_or_equal","","",23,[[["b"]]]],[11,"is_not_equal","","",23,[[["b"]]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"powi","","",24,[[["n"]]]],[11,"partial_div","","",24,[[["n"]]]],[11,"is_equal","","",24,[[["b"]]]],[11,"is_greater","","",24,[[["b"]]]],[11,"is_greater_or_equal","","",24,[[["b"]]]],[11,"is_less","","",24,[[["b"]]]],[11,"is_less_or_equal","","",24,[[["b"]]]],[11,"is_not_equal","","",24,[[["b"]]]],[11,"from","heapless","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","heapless::binary_heap","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","heapless::i","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","heapless::mpmc","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","heapless::pool","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","heapless::pool::singleton","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","heapless::spsc","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"into","","",35,[[],["u"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into_iter","","",36,[[],["i"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"into","","",36,[[],["u"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into_iter","","",37,[[],["i"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"rem","heapless::consts","",24,[[["i"]]]],[11,"add","","",24,[[["i"]]]],[11,"hash","","",23,[[["self"],["__h"]]]],[11,"hash","","",24,[[["self"],["__h"]]]],[11,"hash","","",22,[[["self"],["__h"]]]],[11,"eq","","",23,[[["self"],["b1"]],["bool"]]],[11,"eq","","",22,[[["b0"],["self"]],["bool"]]],[11,"eq","","",24,[[["self"],["z0"]],["bool"]]],[11,"max","","",24,[[["z0"]]]],[11,"max","","",22,[[["b1"]],["b1"]]],[11,"max","","",22,[[["b0"]],["b0"]]],[11,"max","","",23,[[["b0"]],["b1"]]],[11,"max","","",23,[[["b1"]],["b1"]]],[11,"max","","",24,[[["pint"]]]],[11,"max","","",24,[[["nint"]]]],[11,"bitand","","",23,[[["b0"]]]],[11,"bitand","","",23,[[["b1"]]]],[11,"bitand","","",22,[[["rhs"]]]],[11,"fmt","","",22,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",24,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",23,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"bitor","","",23,[[["rhs"]]]],[11,"bitor","","",22,[[["b0"]]]],[11,"bitor","","",22,[[["b1"]]]],[11,"cmp","","",24,[[["self"],["z0"]],["ordering"]]],[11,"cmp","","",23,[[["self"],["b1"]],["ordering"]]],[11,"cmp","","",22,[[["b0"],["self"]],["ordering"]]],[11,"min","","",22,[[["b0"]],["b0"]]],[11,"min","","",22,[[["b1"]],["b0"]]],[11,"min","","",24,[[["pint"]]]],[11,"min","","",24,[[["z0"]]]],[11,"min","","",23,[[["b0"]],["b0"]]],[11,"min","","",24,[[["nint"]]]],[11,"min","","",23,[[["b1"]],["b1"]]],[11,"to_u8","","",23,[[],["u8"]]],[11,"to_bool","","",23,[[],["bool"]]],[11,"to_u8","","",22,[[],["u8"]]],[11,"to_bool","","",22,[[],["bool"]]],[11,"bitxor","","",23,[[["b0"]]]],[11,"bitxor","","",23,[[["b1"]]]],[11,"bitxor","","",22,[[["b0"]]]],[11,"bitxor","","",22,[[["b1"]]]],[11,"default","","",24,[[],["z0"]]],[11,"default","","",23,[[],["b1"]]],[11,"default","","",22,[[],["b0"]]],[11,"partial_cmp","","",24,[[["self"],["z0"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",22,[[["b0"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",23,[[["self"],["b1"]],[["ordering"],["option",["ordering"]]]]],[11,"clone","","",24,[[["self"]],["z0"]]],[11,"clone","","",23,[[["self"]],["b1"]]],[11,"clone","","",22,[[["self"]],["b0"]]],[11,"to_i8","","",24,[[],["i8"]]],[11,"to_i16","","",24,[[],["i16"]]],[11,"to_i32","","",24,[[],["i32"]]],[11,"to_i64","","",24,[[],["i64"]]],[11,"to_isize","","",24,[[],["isize"]]],[11,"mul","","",24,[[["tarr"]]]],[11,"mul","","",24,[[["aterm"]]]],[11,"mul","","",24,[[["i"]]]],[11,"sub","","",24,[[["nint"]]]],[11,"sub","","",24,[[["pint"]]]],[11,"sub","","",24,[[["z0"]]]],[11,"powi","","",24,[[["pint"]]]],[11,"powi","","",24,[[["z0"]]]],[11,"powi","","",24,[[["nint"]]]],[11,"not","","",22,[[]]],[11,"not","","",23,[[]]],[11,"neg","","",24,[[]]],[11,"div","","",24,[[["i"]]]],[11,"deref","heapless","",4,[[["self"]],["str"]]],[11,"deref","","",5,[[["self"]]]],[11,"deref","heapless::binary_heap","",7,[[["self"]],["t"]]],[11,"deref","heapless::pool::singleton","",15,[[["self"]]]],[11,"deref","heapless::pool","",17,[[["self"]],["t"]]],[11,"deref_mut","heapless","",4,[[["self"]],["str"]]],[11,"deref_mut","","",5,[[["self"]]]],[11,"deref_mut","heapless::binary_heap","",7,[[["self"]],["t"]]],[11,"deref_mut","heapless::pool::singleton","",15,[[["self"]]]],[11,"deref_mut","heapless::pool","",17,[[["self"]],["t"]]],[11,"from","heapless","",4,[[["str"]],["self"]]],[11,"from","","",4,[[["i8"]],["self"]]],[11,"from","","",4,[[["i16"]],["self"]]],[11,"from","","",4,[[["i32"]],["self"]]],[11,"from","","",4,[[["i64"]],["self"]]],[11,"from","","",4,[[["u8"]],["self"]]],[11,"from","","",4,[[["u16"]],["self"]]],[11,"from","","",4,[[["u32"]],["self"]]],[11,"from","","",4,[[["u64"]],["self"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","heapless::binary_heap","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","heapless::pool::singleton","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","heapless::pool","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","heapless::spsc","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","heapless","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","heapless::pool::singleton","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","heapless::pool","",17,[[["formatter"],["self"]],["result"]]],[11,"eq","heapless","",1,[[["self"],["indexmap"]],["bool"]]],[11,"eq","","",2,[[["indexset"],["self"]],["bool"]]],[11,"eq","","",3,[[["self"],["linearmap"]],["bool"]]],[11,"eq","","",4,[[["string"],["self"]],["bool"]]],[11,"ne","","",4,[[["string"],["self"]],["bool"]]],[11,"eq","","",4,[[["str"],["self"]],["bool"]]],[11,"ne","","",4,[[["str"],["self"]],["bool"]]],[11,"eq","","",4,[[["str"],["self"]],["bool"]]],[11,"ne","","",4,[[["str"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["vec"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","heapless::pool::singleton","",15,[[["box"],["self"]],["bool"]]],[11,"eq","heapless::pool","",17,[[["box"],["self"]],["bool"]]],[11,"eq","heapless::spsc","",18,[[["queue"],["self"]],["bool"]]],[11,"cmp","heapless::pool::singleton","",15,[[["box"],["self"]],["ordering"]]],[11,"cmp","heapless::pool","",17,[[["box"],["self"]],["ordering"]]],[11,"partial_cmp","heapless::pool::singleton","",15,[[["box"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","heapless::pool","",17,[[["box"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"drop","heapless","",3,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","heapless::binary_heap","",7,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"drop","heapless::pool::singleton","",15,[[["self"]]]],[11,"drop","heapless::spsc","",18,[[["self"]]]],[11,"index","heapless","",1,[[["self"],["q"]],["v"]]],[11,"index","","",3,[[["self"],["q"]],["v"]]],[11,"index_mut","","",1,[[["self"],["q"]],["v"]]],[11,"index_mut","","",3,[[["self"],["q"]],["v"]]],[11,"hash","","",4,[[["self"],["h"]]]],[11,"hash","","",5,[[["self"],["h"]]]],[11,"hash","heapless::pool::singleton","",15,[[["self"],["h"]]]],[11,"hash","heapless::pool","",17,[[["self"],["h"]]]],[11,"hash","heapless::spsc","",18,[[["self"],["h"]]]],[11,"next","","",36,[[["self"]],[["t"],["option"]]]],[11,"next","","",37,[[["self"]],[["option"],["t"]]]],[11,"extend","heapless","",1,[[["self"],["i"]]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"extend","","",2,[[["self"],["i"]]]],[11,"extend","","",2,[[["self"],["i"]]]],[11,"extend","","",5,[[["self"],["i"]]]],[11,"extend","","",5,[[["self"],["i"]]]],[11,"from_iter","","",1,[[["i"]],["self"]]],[11,"from_iter","","",2,[[["i"]],["self"]]],[11,"from_iter","","",3,[[["i"]],["self"]]],[11,"from_iter","","",5,[[["i"]],["self"]]],[11,"into_iter","","",3,[[]]],[11,"into_iter","","",5,[[]]],[11,"from_str","","",4,[[["str"]],["result"]]],[11,"write_str","","",4,[[["str"],["self"]],[["error"],["result",["error"]]]]],[11,"write_char","","",4,[[["self"],["char"]],[["error"],["result",["error"]]]]],[11,"as_ref","","",4,[[["self"]],["str"]]],[11,"as_ref","","",4,[[["self"]]]],[11,"as_ref","","",5,[[["self"]],["self"]]],[11,"as_ref","","",5,[[["self"]]]],[11,"as_mut","","",5,[[["self"]],["self"]]],[11,"as_mut","","",5,[[["self"]]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"clone","","",4,[[["self"]],["self"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","heapless::binary_heap","",6,[[["self"]],["self"]]],[11,"clone","heapless::spsc","",18,[[["self"]],["self"]]],[11,"clone","","",18,[[["self"]],["self"]]],[11,"clone","","",18,[[["self"]],["self"]]],[11,"clone","","",36,[[["self"]],["self"]]],[11,"default","heapless","",1,[[],["self"]]],[11,"default","","",2,[[],["self"]]],[11,"default","","",3,[[],["self"]]],[11,"default","","",4,[[],["self"]]],[11,"default","","",5,[[],["self"]]],[11,"default","heapless::binary_heap","",6,[[],["self"]]],[11,"hash","heapless","",4,[[["self"],["h"]]]],[11,"hash","","",5,[[["self"],["h"]]]],[11,"hash","heapless::spsc","",18,[[["self"],["h"]]]],[11,"as_slice","heapless::pool::singleton","",15,[[["self"]]]],[11,"as_slice","heapless::pool","",17,[[["self"]]]],[11,"as_mut_slice","heapless::pool::singleton","",15,[[["self"]]]],[11,"as_mut_slice","heapless::pool","",17,[[["self"]]]],[11,"new","heapless::consts","Instantiates a singleton representing this bit.",22,[[],["b0"]]],[11,"new","","Instantiates a singleton representing this bit.",23,[[],["b1"]]],[11,"new","","Instantiates a singleton representing the integer 0.",24,[[],["z0"]]],[11,"new","heapless::i","`LinearMap` `const` constructor; wrap the returned value…",28,[[],["self"]]],[11,"new","","`String` `const` constructor; wrap the returned value in…",29,[[],["self"]]],[11,"new","","`Vec` `const` constructor; wrap the returned value in `Vec`",30,[[],["self"]]],[11,"new","","`BinaryHeap` `const` constructor; wrap the returned value…",27,[[],["self"]]]],"p":[[8,"ArrayLength"],[3,"IndexMap"],[3,"IndexSet"],[3,"LinearMap"],[3,"String"],[3,"Vec"],[3,"BinaryHeap"],[3,"PeekMut"],[3,"Q2"],[3,"Q4"],[3,"Q8"],[3,"Q16"],[3,"Q32"],[3,"Q64"],[8,"Pool"],[3,"Box"],[3,"Pool"],[3,"Box"],[3,"Queue"],[3,"Consumer"],[3,"Producer"],[3,"Queue"],[3,"B0"],[3,"B1"],[3,"Z0"],[4,"Min"],[4,"Max"],[3,"BinaryHeap"],[3,"LinearMap"],[3,"String"],[3,"Vec"],[3,"Node"],[4,"Uninit"],[4,"Init"],[3,"MultiCore"],[3,"SingleCore"],[3,"Iter"],[3,"IterMut"]]};
searchIndex["introsort"] = {"doc":"","i":[[5,"sort","introsort","",null,[[]]],[5,"sort_by","","",null,[[["c"]]]],[5,"insertion_sort","","",null,[[["c"]]]],[5,"heapsort","","",null,[[["c"]]]]],"p":[]};
searchIndex["kurbo"] = {"doc":"A garden of data structures for manipulating 2D shapes and…","i":[[3,"Affine","kurbo","A 2D affine transform.",null,null],[12,"0","","",0,null],[3,"Arc","","A single arc segment.",null,null],[12,"center","","",1,null],[12,"radii","","",1,null],[12,"start_angle","","",1,null],[12,"sweep_angle","","",1,null],[12,"x_rotation","","",1,null],[3,"BezPath","","A path that can Bézier segments up to cubic, possibly with…",null,null],[12,"0","","",2,null],[3,"Circle","","A circle.",null,null],[12,"center","","The center.",3,null],[12,"radius","","The radius.",3,null],[3,"CubicBez","","A single cubic Bézier segment.",null,null],[12,"p0","","",4,null],[12,"p1","","",4,null],[12,"p2","","",4,null],[12,"p3","","",4,null],[3,"Insets","","Insets from the edges of a rectangle.",null,null],[12,"x0","","The minimum x coordinate (left edge).",5,null],[12,"y0","","The minimum y coordinate (top edge in y-down spaces).",5,null],[12,"x1","","The maximum x coordinate (right edge).",5,null],[12,"y1","","The maximum y coordinate (bottom edge in y-down spaces).",5,null],[3,"Line","","A single line.",null,null],[12,"p0","","",6,null],[12,"p1","","",6,null],[3,"ConstPoint","","A trivial \"curve\" that is just a constant.",null,null],[12,"0","","",7,null],[3,"Point","","A 2d point.",null,null],[12,"x","","The x coordinate.",8,null],[12,"y","","The y coordinate.",8,null],[3,"QuadBez","","A single quadratic Bézier segment.",null,null],[12,"p0","","",9,null],[12,"p1","","",9,null],[12,"p2","","",9,null],[3,"Rect","","A rectangle.",null,null],[12,"x0","","The minimum x coordinate (left edge).",10,null],[12,"y0","","The minimum y coordinate (top edge in y-down spaces).",10,null],[12,"x1","","The maximum x coordinate (right edge).",10,null],[12,"y1","","The maximum y coordinate (bottom edge in y-down spaces).",10,null],[3,"RoundedRect","","A rectangle with equally rounded corners.",null,null],[12,"rect","","Coordinates of the rectangle.",11,null],[12,"radius","","Radius of all four corners.",11,null],[3,"Size","","A 2d size.",null,null],[12,"width","","The width.",12,null],[12,"height","","The height.",12,null],[3,"TranslateScale","","A transformation including scaling and translation.",null,null],[12,"translation","","",13,null],[12,"scale","","",13,null],[3,"Vec2","","A 2D vector.",null,null],[12,"x","","",14,null],[12,"y","","",14,null],[4,"PathEl","","The element of a Bézier path.",null,null],[13,"MoveTo","","",15,null],[13,"LineTo","","",15,null],[13,"QuadTo","","",15,null],[13,"CurveTo","","",15,null],[13,"ClosePath","","",15,null],[4,"PathSeg","","A segment of a Bézier path.",null,null],[13,"Line","","",16,null],[13,"Quad","","",16,null],[13,"Cubic","","",16,null],[0,"affine","","Affine transforms.",null,null],[3,"Affine","kurbo::affine","A 2D affine transform.",null,null],[12,"0","","",0,null],[18,"FLIP_Y","kurbo","A transform that is flipped on the y-axis. Useful for…",0,null],[18,"FLIP_X","","A transform that is flipped on the x-axis.",0,null],[11,"new","","Construct an affine transform from coefficients.",0,[[],["affine"]]],[11,"scale","","An affine transform representing uniform scaling.",0,[[["f64"]],["affine"]]],[11,"rotate","","An affine transform representing rotation.",0,[[["f64"]],["affine"]]],[11,"translate","","An affine transform representing translation.",0,[[["into",["vec2"]],["vec2"]],["affine"]]],[11,"as_coeffs","","Get the coefficients of the transform.",0,[[]]],[11,"determinant","","Compute the determinant of this transform.",0,[[],["f64"]]],[11,"inverse","","Compute the inverse transform.",0,[[],["affine"]]],[11,"transform_rect_bbox","","Compute the bounding box of a transformed rectangle.",0,[[["rect"]],["rect"]]],[0,"arc","","A circle arc.",null,null],[3,"Arc","kurbo::arc","A single arc segment.",null,null],[12,"center","","",1,null],[12,"radii","","",1,null],[12,"start_angle","","",1,null],[12,"sweep_angle","","",1,null],[12,"x_rotation","","",1,null],[5,"signum","","",null,[[["f64"]],["f64"]]],[5,"sample_ellipse","","",null,[[["vec2"],["f64"]],["vec2"]]],[5,"rotate_pt","","",null,[[["vec2"],["f64"]],["vec2"]]],[11,"append_iter","kurbo","Create an iterator generating Bezier path elements.",1,[[["f64"],["self"]],["arcappenditer"]]],[11,"to_cubic_beziers","","Converts an Arc into a series of cubic bezier segments.",1,[[["f64"],["p"]]]],[0,"bezpath","","Bézier paths (up to cubic).",null,null],[3,"BezPath","kurbo::bezpath","A path that can Bézier segments up to cubic, possibly with…",null,null],[12,"0","","",2,null],[3,"BezPathSegs","","",null,null],[12,"c","","",17,null],[12,"start","","",17,null],[12,"last","","",17,null],[4,"PathEl","","The element of a Bézier path.",null,null],[13,"MoveTo","","",15,null],[13,"LineTo","","",15,null],[13,"QuadTo","","",15,null],[13,"CurveTo","","",15,null],[13,"ClosePath","","",15,null],[4,"PathSeg","","A segment of a Bézier path.",null,null],[13,"Line","","",16,null],[13,"Quad","","",16,null],[13,"Cubic","","",16,null],[6,"PathElArray","","",null,null],[17,"MAX_BEZ_PATH","","",null,null],[11,"new","kurbo","Create a new path.",2,[[],["bezpath"]]],[11,"from_vec","","Create a path from a vector of path elements.",2,[[["arrayvec",["pathelarray"]],["pathelarray"]],["bezpath"]]],[11,"push","","Push a generic path element onto the path.",2,[[["self"],["pathel"]]]],[11,"move_to","","Push a \"move to\" element onto the path.",2,[[["into",["point"]],["self"],["point"]]]],[11,"line_to","","Push a \"line to\" element onto the path.",2,[[["into",["point"]],["self"],["point"]]]],[11,"quad_to","","Push a \"quad to\" element onto the path.",2,[[["into",["point"]],["point"],["self"]]]],[11,"curve_to","","Push a \"curve to\" element onto the path.",2,[[["into",["point"]],["point"],["self"]]]],[11,"close_path","","Push a \"close path\" element onto the path.",2,[[["self"]]]],[11,"elements","","Get the path elements.",2,[[["self"]]]],[11,"segments","","Iterate over the path segments.",2,[[["self"]]]],[11,"segments_of_slice","","",2,[[],["bezpathsegs"]]],[11,"get_seg","","Get the segment at the given element index.",2,[[["self"],["usize"]],[["pathseg"],["option",["pathseg"]]]]],[11,"is_empty","","Returns `true` if the path contains no segments.",2,[[["self"]],["bool"]]],[11,"apply_affine","","Apply an affine transform to the path.",2,[[["affine"],["self"]]]],[11,"nearest","","Find the nearest point.",2,[[["f64"],["self"],["point"]]]],[11,"arclen","kurbo::bezpath","Here, `accuracy` specifies the accuracy for each Bézier…",17,[[["f64"]],["f64"]]],[11,"area","","",17,[[],["f64"]]],[11,"winding","","",17,[[["point"]],["i32"]]],[11,"bounding_box","","",17,[[],["rect"]]],[11,"reverse","kurbo","Returns a new `PathSeg` describing the same path as…",16,[[["self"]],["pathseg"]]],[11,"to_cubic","","Convert this segment to a cubic bezier.",16,[[["self"]],["cubicbez"]]],[11,"winding_inner","","",16,[[["self"],["point"]],["i32"]]],[11,"winding","","Compute the winding number contribution of a single segment.",16,[[["self"],["point"]],["i32"]]],[0,"circle","","Implementation of circle shape.",null,null],[3,"Circle","kurbo::circle","A circle.",null,null],[12,"center","","The center.",3,null],[12,"radius","","The radius.",3,null],[11,"new","kurbo","A new circle from center and radius.",3,[[["f64"]],["circle"]]],[0,"common","","Common mathematical operations",null,null],[5,"solve_cubic","kurbo::common","Find real roots of cubic equation.",null,[[["f64"]],["arrayvec"]]],[5,"solve_quadratic","","Find real roots of quadratic equation.",null,[[["f64"]],["arrayvec"]]],[17,"GAUSS_LEGENDRE_COEFFS_3","","Tables of Legendre-Gauss quadrature coefficients, adapted…",null,null],[17,"GAUSS_LEGENDRE_COEFFS_5","","",null,null],[17,"GAUSS_LEGENDRE_COEFFS_7","","",null,null],[17,"GAUSS_LEGENDRE_COEFFS_9","","",null,null],[17,"GAUSS_LEGENDRE_COEFFS_11","","",null,null],[17,"GAUSS_LEGENDRE_COEFFS_24","","",null,null],[0,"cubicbez","kurbo","Cubic Bézier segments.",null,null],[3,"CubicBez","kurbo::cubicbez","A single cubic Bézier segment.",null,null],[12,"p0","","",4,null],[12,"p1","","",4,null],[12,"p2","","",4,null],[12,"p3","","",4,null],[3,"ToQuads","","An iterator which produces quadratic Bézier segments.",null,null],[12,"c","","",18,null],[12,"max_hypot2","","",18,null],[12,"t","","",18,null],[11,"new","kurbo","Create a new cubic Bézier segment.",4,[[["into",["point"]],["point"]],["cubicbez"]]],[11,"to_quads","","Convert to quadratic Béziers.",4,[[["f64"],["self"]]]],[0,"insets","","A description of the distances between the edges of two…",null,null],[3,"Insets","kurbo::insets","Insets from the edges of a rectangle.",null,null],[12,"x0","","The minimum x coordinate (left edge).",5,null],[12,"y0","","The minimum y coordinate (top edge in y-down spaces).",5,null],[12,"x1","","The maximum x coordinate (right edge).",5,null],[12,"y1","","The maximum y coordinate (bottom edge in y-down spaces).",5,null],[18,"ZERO","kurbo","Zero'd insets.",5,null],[11,"uniform","","New uniform insets.",5,[[["f64"]],["insets"]]],[11,"uniform_xy","","New insets with uniform values along each axis.",5,[[["f64"]],["insets"]]],[11,"new","","New insets. The ordering of the arguments is \"left, top,…",5,[[["f64"]],["insets"]]],[11,"x_value","","The total delta on the x-axis represented by these insets.",5,[[],["f64"]]],[11,"y_value","","The total delta on the y-axis represented by these insets.",5,[[],["f64"]]],[0,"line","","Lines.",null,null],[3,"Line","kurbo::line","A single line.",null,null],[12,"p0","","",6,null],[12,"p1","","",6,null],[3,"ConstPoint","","A trivial \"curve\" that is just a constant.",null,null],[12,"0","","",7,null],[11,"new","kurbo","",6,[[["into",["point"]],["point"]],["line"]]],[0,"param_curve","","A trait for curves parametrized by a scalar.",null,null],[17,"MAX_EXTREMA","kurbo::param_curve","The maximum number of extrema that can be reported in the…",null,null],[8,"ParamCurve","","A curve parametrized by a scalar.",null,null],[10,"eval","","Evaluate the curve at parameter `t`.",19,[[["f64"],["self"]],["point"]]],[10,"subsegment","","Get a subsegment of the curve for the given parameter range.",19,[[["range",["f64"]],["f64"],["self"]],["self"]]],[11,"subdivide","","Subdivide into (roughly) halves.",19,[[["self"]]]],[11,"start","","The start point.",19,[[["self"]],["point"]]],[11,"end","","The end point.",19,[[["self"]],["point"]]],[8,"ParamCurveDeriv","","A differentiable parametrized curve.",null,null],[16,"DerivResult","","",20,null],[10,"deriv","","The derivative of the curve.",20,[[["self"]]]],[11,"gauss_arclen","","Estimate arclength using Gaussian quadrature.",20,[[["self"]],["f64"]]],[8,"ParamCurveArclen","","A parametrized curve that can have its arc length measured.",null,null],[10,"arclen","","The arc length of the curve.",21,[[["f64"],["self"]],["f64"]]],[11,"inv_arclen","","Solve for the parameter that has the given arclength from…",21,[[["f64"],["self"]],["f64"]]],[8,"ParamCurveArea","","A parametrized curve that can have its signed area measured.",null,null],[10,"signed_area","","Compute the signed area under the curve.",22,[[["self"]],["f64"]]],[8,"ParamCurveNearest","","A parametrized curve that reports the nearest point.",null,null],[10,"nearest","","Find the point on the curve nearest the given point.",23,[[["f64"],["self"],["point"]]]],[8,"ParamCurveCurvature","","A parametrized curve that reports its curvature.",null,null],[11,"curvature","","Compute the signed curvature at parameter `t`.",24,[[["f64"],["self"]],["f64"]]],[8,"ParamCurveExtrema","","A parametrized curve that reports its extrema.",null,null],[10,"extrema","","Compute the extrema of the curve.",25,[[["self"]],["arrayvec"]]],[11,"extrema_ranges","","Return parameter ranges, each of which is monotonic within…",25,[[["self"]],["arrayvec"]]],[11,"bounding_box","","The smallest rectangle that encloses the curve in the…",25,[[["self"]],["rect"]]],[0,"point","kurbo","A 2d point.",null,null],[3,"Point","kurbo::point","A 2d point.",null,null],[12,"x","","The x coordinate.",8,null],[12,"y","","The y coordinate.",8,null],[18,"ZERO","kurbo","The point (0, 0).",8,null],[18,"ORIGIN","","The point at the origin; (0, 0).",8,null],[11,"new","","Create a new `Point` with the provided `x` and `y`…",8,[[["f64"]],["self"]]],[11,"to_vec2","","Convert this point into a `Vec2`.",8,[[],["vec2"]]],[11,"lerp","","Linearly interpolate between two points.",8,[[["f64"],["point"]],["point"]]],[11,"midpoint","","Determine the midpoint of two points.",8,[[["point"]],["point"]]],[11,"distance","","Euclidean distance.",8,[[["point"]],["f64"]]],[11,"round","","A new `Point`, with each of x and y rounded to the nearest…",8,[[],["point"]]],[0,"quadbez","","Quadratic Bézier segments.",null,null],[3,"QuadBez","kurbo::quadbez","A single quadratic Bézier segment.",null,null],[12,"p0","","",9,null],[12,"p1","","",9,null],[12,"p2","","",9,null],[11,"new","kurbo","Create a new quadratic Bézier segment.",9,[[["into",["point"]],["point"]],["quadbez"]]],[11,"raise","","Raise the order by 1.",9,[[["self"]],["cubicbez"]]],[0,"rect","","A rectangle.",null,null],[3,"Rect","kurbo::rect","A rectangle.",null,null],[12,"x0","","The minimum x coordinate (left edge).",10,null],[12,"y0","","The minimum y coordinate (top edge in y-down spaces).",10,null],[12,"x1","","The maximum x coordinate (right edge).",10,null],[12,"y1","","The maximum y coordinate (bottom edge in y-down spaces).",10,null],[18,"ZERO","kurbo","The empty rectangle at the origin.",10,null],[11,"new","","A new rectangle from minimum and maximum coordinates.",10,[[["f64"]],["rect"]]],[11,"from_points","","A new rectangle from two points.",10,[[],["rect"]]],[11,"from_origin_size","","A new rectangle from origin and size.",10,[[],["rect"]]],[11,"with_origin","","Create a new `Rect` with the same size as `self` and a new…",10,[[],["rect"]]],[11,"with_size","","Create a new `Rect` with the same origin as `self` and a…",10,[[],["rect"]]],[11,"inset","","Create a new `Rect` by applying the [`Insets`].",10,[[],["rect"]]],[11,"width","","The width of the rectangle.",10,[[["self"]],["f64"]]],[11,"height","","The height of the rectangle.",10,[[["self"]],["f64"]]],[11,"min_x","","Returns the minimum value for the x-coordinate of the…",10,[[["self"]],["f64"]]],[11,"max_x","","Returns the maximum value for the x-coordinate of the…",10,[[["self"]],["f64"]]],[11,"min_y","","Returns the minimum value for the y-coordinate of the…",10,[[["self"]],["f64"]]],[11,"max_y","","Returns the maximum value for the y-coordinate of the…",10,[[["self"]],["f64"]]],[11,"origin","","The origin of the rectangle.",10,[[["self"]],["point"]]],[11,"size","","The size of the rectangle.",10,[[["self"]],["size"]]],[11,"area","","The area of the rectangle.",10,[[["self"]],["f64"]]],[11,"center","","The center point of the rectangle.",10,[[["self"]],["point"]]],[11,"contains","","Returns `true` if `point` lies within `self`.",10,[[["self"],["point"]],["bool"]]],[11,"abs","","Take absolute value of width and height.",10,[[["self"]],["rect"]]],[11,"union","","The smallest rectangle enclosing two rectangles.",10,[[["rect"],["self"]],["rect"]]],[11,"union_pt","","Compute the union with one point.",10,[[["self"],["point"]],["rect"]]],[11,"intersect","","The intersection of two rectangles.",10,[[["rect"],["self"]],["rect"]]],[11,"inflate","","Expand a rectangle by a constant amount in both directions.",10,[[["f64"],["self"]],["rect"]]],[11,"round","","A new `Rect`, with each coordinate value rounded to the…",10,[[],["rect"]]],[11,"to_rounded_rect","","Creates a new [`RoundedRect`] from this `Rect` and the…",10,[[["f64"]],["roundedrect"]]],[0,"rounded_rect","","A rectangle with rounded corners.",null,null],[3,"RoundedRect","kurbo::rounded_rect","A rectangle with equally rounded corners.",null,null],[12,"rect","","Coordinates of the rectangle.",11,null],[12,"radius","","Radius of all four corners.",11,null],[3,"RectPathIter","","",null,null],[12,"rect","","",26,null],[12,"radius","","",26,null],[12,"ix","","",26,null],[11,"new","kurbo","A new rectangle from minimum and maximum coordinates.",11,[[["f64"]],["roundedrect"]]],[11,"from_rect","","A new rounded rectangle from a rectangle and corner radius.",11,[[["rect"],["f64"]],["roundedrect"]]],[11,"from_points","","A new rectangle from two points.",11,[[["f64"],["point"]],["roundedrect"]]],[11,"from_origin_size","","A new rectangle from origin and size.",11,[[["vec2"],["f64"],["point"]],["roundedrect"]]],[11,"width","","The width of the rectangle.",11,[[["self"]],["f64"]]],[11,"height","","The height of the rectangle.",11,[[["self"]],["f64"]]],[11,"radius","","Radius of the rounded corners. #[inline]",11,[[["self"]],["f64"]]],[11,"rect","","The (non-rounded) rectangle.",11,[[["self"]],["rect"]]],[11,"origin","","The origin of the rectangle.",11,[[["self"]],["point"]]],[11,"center","","The center point of the rectangle.",11,[[["self"]],["point"]]],[0,"shape","","A generic trait for shapes.",null,null],[8,"Shape","kurbo::shape","A generic trait for open and closed shapes.",null,null],[16,"BezPathIter","","The iterator resulting from `to_bez_path`.",27,null],[10,"to_bez_path","","Convert to a Bézier path, as an iterator over path elements.",27,[[["f64"],["self"]]]],[11,"into_bez_path","","Convert into a Bézier path.",27,[[["f64"]],["bezpath"]]],[10,"area","","Signed area.",27,[[["self"]],["f64"]]],[10,"perimeter","","Total length of perimeter.",27,[[["f64"],["self"]],["f64"]]],[10,"winding","","Winding number of point.",27,[[["self"],["point"]],["i32"]]],[10,"bounding_box","","The smallest rectangle that encloses the shape.",27,[[["self"]],["rect"]]],[11,"as_line","","If the shape is a line, make it available.",27,[[["self"]],[["option",["line"]],["line"]]]],[11,"as_rect","","If the shape is a rectangle, make it available.",27,[[["self"]],[["rect"],["option",["rect"]]]]],[11,"as_rounded_rect","","If the shape is a rounded rectangle, make it available.",27,[[["self"]],[["option",["roundedrect"]],["roundedrect"]]]],[11,"as_circle","","If the shape is a circle, make it available.",27,[[["self"]],[["circle"],["option",["circle"]]]]],[11,"as_path_slice","","If the shape is stored as a slice of path elements, make…",27,[[["self"]],["option"]]],[0,"size","kurbo","A 2d size.",null,null],[3,"Size","kurbo::size","A 2d size.",null,null],[12,"width","","The width.",12,null],[12,"height","","The height.",12,null],[18,"ZERO","kurbo","A size with zero width or height.",12,null],[11,"new","","Create a new `Size` with the provided `width` and `height`.",12,[[["f64"]],["self"]]],[11,"clamp","","Returns a new size bounded by `min` and `max.`",12,[[["size"]],["self"]]],[11,"to_vec2","","Convert this size into a `Vec2`, with `width` mapped to…",12,[[],["vec2"]]],[11,"round","","A new `Size`, with each of width and height rounded to the…",12,[[],["size"]]],[0,"translate_scale","","A transformation that includes both scale and translation.",null,null],[3,"TranslateScale","kurbo::translate_scale","A transformation including scaling and translation.",null,null],[12,"translation","","",13,null],[12,"scale","","",13,null],[11,"new","kurbo","Create a new transformation from translation and scale.",13,[[["vec2"],["f64"]],["translatescale"]]],[11,"scale","","Create a new transformation with scale only.",13,[[["f64"]],["translatescale"]]],[11,"translate","","Create a new transformation with translation only.",13,[[["vec2"]],["translatescale"]]],[11,"as_tuple","","Decompose transformation into translation and scale.",13,[[]]],[11,"inverse","","Compute the inverse transform.",13,[[],["translatescale"]]],[0,"vec2","","A simple 2D vector.",null,null],[3,"Vec2","kurbo::vec2","A 2D vector.",null,null],[12,"x","","",14,null],[12,"y","","",14,null],[18,"ZERO","kurbo","The vector (0, 0).",14,null],[11,"new","","Create a new vector.",14,[[["f64"]],["vec2"]]],[11,"to_point","","Convert this vector into a `Point`.",14,[[],["point"]]],[11,"to_size","","Convert this vector into a `Size`.",14,[[],["size"]]],[11,"dot","","Dot product of two vectors.",14,[[["vec2"],["self"]],["f64"]]],[11,"cross","","Cross product of two vectors.",14,[[["vec2"],["self"]],["f64"]]],[11,"hypot","","Magnitude of vector.",14,[[["self"]],["f64"]]],[11,"hypot2","","Magnitude squared of vector.",14,[[["self"]],["f64"]]],[11,"atan2","","Angle of vector.",14,[[["self"]],["f64"]]],[11,"from_angle","","A unit vector of the given angle.",14,[[["f64"]],["vec2"]]],[11,"lerp","","Linearly interpolate between two vectors.",14,[[["vec2"],["f64"],["self"]],["vec2"]]],[11,"normalize","","Returns a vector of magnitude 1.0 with the same angle as…",14,[[],["vec2"]]],[11,"round","","Returns a new `Vec2` with each of `x` and `y` rounded to…",14,[[],["vec2"]]],[11,"ceil","","Returns a new `Vec2` where each of `x` and `y`, with a…",14,[[],["vec2"]]],[11,"floor","","Returns a new `Vec2` where each of `x` and `y`, with a…",14,[[],["vec2"]]],[6,"PathElArray","","",null,null],[17,"MAX_BEZ_PATH","","",null,null],[17,"MAX_EXTREMA","","The maximum number of extrema that can be reported in the…",null,null],[8,"ParamCurve","","A curve parametrized by a scalar.",null,null],[10,"eval","","Evaluate the curve at parameter `t`.",19,[[["f64"],["self"]],["point"]]],[10,"subsegment","","Get a subsegment of the curve for the given parameter range.",19,[[["range",["f64"]],["f64"],["self"]],["self"]]],[11,"subdivide","kurbo::param_curve","Subdivide into (roughly) halves.",19,[[["self"]]]],[11,"start","","The start point.",19,[[["self"]],["point"]]],[11,"end","","The end point.",19,[[["self"]],["point"]]],[8,"ParamCurveDeriv","kurbo","A differentiable parametrized curve.",null,null],[16,"DerivResult","","",20,null],[10,"deriv","","The derivative of the curve.",20,[[["self"]]]],[11,"gauss_arclen","kurbo::param_curve","Estimate arclength using Gaussian quadrature.",20,[[["self"]],["f64"]]],[8,"ParamCurveArclen","kurbo","A parametrized curve that can have its arc length measured.",null,null],[10,"arclen","","The arc length of the curve.",21,[[["f64"],["self"]],["f64"]]],[11,"inv_arclen","kurbo::param_curve","Solve for the parameter that has the given arclength from…",21,[[["f64"],["self"]],["f64"]]],[8,"ParamCurveArea","kurbo","A parametrized curve that can have its signed area measured.",null,null],[10,"signed_area","","Compute the signed area under the curve.",22,[[["self"]],["f64"]]],[8,"ParamCurveNearest","","A parametrized curve that reports the nearest point.",null,null],[10,"nearest","","Find the point on the curve nearest the given point.",23,[[["f64"],["self"],["point"]]]],[8,"ParamCurveCurvature","","A parametrized curve that reports its curvature.",null,null],[11,"curvature","kurbo::param_curve","Compute the signed curvature at parameter `t`.",24,[[["f64"],["self"]],["f64"]]],[8,"ParamCurveExtrema","kurbo","A parametrized curve that reports its extrema.",null,null],[10,"extrema","","Compute the extrema of the curve.",25,[[["self"]],["arrayvec"]]],[11,"extrema_ranges","kurbo::param_curve","Return parameter ranges, each of which is monotonic within…",25,[[["self"]],["arrayvec"]]],[11,"bounding_box","","The smallest rectangle that encloses the curve in the…",25,[[["self"]],["rect"]]],[8,"Shape","kurbo","A generic trait for open and closed shapes.",null,null],[16,"BezPathIter","","The iterator resulting from `to_bez_path`.",27,null],[10,"to_bez_path","","Convert to a Bézier path, as an iterator over path elements.",27,[[["f64"],["self"]]]],[11,"into_bez_path","kurbo::shape","Convert into a Bézier path.",27,[[["f64"]],["bezpath"]]],[10,"area","kurbo","Signed area.",27,[[["self"]],["f64"]]],[10,"perimeter","","Total length of perimeter.",27,[[["f64"],["self"]],["f64"]]],[10,"winding","","Winding number of point.",27,[[["self"],["point"]],["i32"]]],[10,"bounding_box","","The smallest rectangle that encloses the shape.",27,[[["self"]],["rect"]]],[11,"as_line","kurbo::shape","If the shape is a line, make it available.",27,[[["self"]],[["option",["line"]],["line"]]]],[11,"as_rect","","If the shape is a rectangle, make it available.",27,[[["self"]],[["rect"],["option",["rect"]]]]],[11,"as_rounded_rect","","If the shape is a rounded rectangle, make it available.",27,[[["self"]],[["option",["roundedrect"]],["roundedrect"]]]],[11,"as_circle","","If the shape is a circle, make it available.",27,[[["self"]],[["circle"],["option",["circle"]]]]],[11,"as_path_slice","","If the shape is stored as a slice of path elements, make…",27,[[["self"]],["option"]]],[11,"from","kurbo","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","kurbo::bezpath","",17,[[["t"]],["t"]]],[11,"into_iter","","",17,[[],["i"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","kurbo::cubicbez","",18,[[["t"]],["t"]]],[11,"into_iter","","",18,[[],["i"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","kurbo::rounded_rect","",26,[[["t"]],["t"]]],[11,"into_iter","","",26,[[],["i"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"eval","kurbo","",16,[[["f64"],["self"]],["point"]]],[11,"subsegment","","",16,[[["range",["f64"]],["f64"],["self"]],["pathseg"]]],[11,"eval","","",4,[[["f64"],["self"]],["point"]]],[11,"start","","",4,[[["self"]],["point"]]],[11,"end","","",4,[[["self"]],["point"]]],[11,"subsegment","","",4,[[["range",["f64"]],["f64"],["self"]],["cubicbez"]]],[11,"subdivide","","Subdivide into halves, using de Casteljau.",4,[[["self"]]]],[11,"eval","","",6,[[["f64"],["self"]],["point"]]],[11,"start","","",6,[[["self"]],["point"]]],[11,"end","","",6,[[["self"]],["point"]]],[11,"subsegment","","",6,[[["range",["f64"]],["f64"],["self"]],["line"]]],[11,"eval","","",7,[[["f64"],["self"]],["point"]]],[11,"subsegment","","",7,[[["range",["f64"]],["f64"],["self"]],["constpoint"]]],[11,"eval","","",9,[[["f64"],["self"]],["point"]]],[11,"start","","",9,[[["self"]],["point"]]],[11,"end","","",9,[[["self"]],["point"]]],[11,"subdivide","","Subdivide into halves, using de Casteljau.",9,[[["self"]]]],[11,"subsegment","","",9,[[["range",["f64"]],["f64"],["self"]],["quadbez"]]],[11,"deriv","","",4,[[["self"]],["quadbez"]]],[11,"deriv","","",6,[[["self"]],["constpoint"]]],[11,"deriv","","",7,[[["self"]],["constpoint"]]],[11,"deriv","","",9,[[["self"]],["line"]]],[11,"arclen","","",16,[[["f64"],["self"]],["f64"]]],[11,"arclen","","Arclength of a cubic Bézier segment.",4,[[["f64"],["self"]],["f64"]]],[11,"arclen","","",6,[[["f64"],["self"]],["f64"]]],[11,"arclen","","",7,[[["f64"],["self"]],["f64"]]],[11,"arclen","","Arclength of a quadratic Bézier segment.",9,[[["f64"],["self"]],["f64"]]],[11,"signed_area","","",16,[[["self"]],["f64"]]],[11,"signed_area","","",4,[[["self"]],["f64"]]],[11,"signed_area","","",6,[[["self"]],["f64"]]],[11,"signed_area","","",9,[[["self"]],["f64"]]],[11,"nearest","","",16,[[["f64"],["self"],["point"]]]],[11,"nearest","","Find nearest point, using subdivision.",4,[[["f64"],["self"],["point"]]]],[11,"nearest","","",6,[[["f64"],["self"],["point"]]]],[11,"nearest","","Find nearest point, using analytical algorithm based on…",9,[[["f64"],["self"],["point"]]]],[11,"curvature","","",6,[[["f64"],["self"]],["f64"]]],[11,"extrema","","",16,[[["self"]],["arrayvec"]]],[11,"extrema","","",4,[[["self"]],["arrayvec"]]],[11,"extrema","","",6,[[["self"]],["arrayvec"]]],[11,"extrema","","",9,[[["self"]],["arrayvec"]]],[11,"to_bez_path","","",2,[[["f64"],["self"]]]],[11,"area","","Signed area.",2,[[["self"]],["f64"]]],[11,"perimeter","","",2,[[["f64"],["self"]],["f64"]]],[11,"winding","","Winding number of point.",2,[[["self"],["point"]],["i32"]]],[11,"bounding_box","","",2,[[["self"]],["rect"]]],[11,"as_path_slice","","",2,[[["self"]],["option"]]],[11,"to_bez_path","","",3,[[["f64"],["self"]],["circlepathiter"]]],[11,"area","","",3,[[["self"]],["f64"]]],[11,"perimeter","","",3,[[["f64"],["self"]],["f64"]]],[11,"winding","","",3,[[["self"],["point"]],["i32"]]],[11,"bounding_box","","",3,[[["self"]],["rect"]]],[11,"as_circle","","",3,[[["self"]],[["circle"],["option",["circle"]]]]],[11,"to_bez_path","","",6,[[["f64"],["self"]],["linepathiter"]]],[11,"area","","Returning zero here is consistent with the contract (area…",6,[[["self"]],["f64"]]],[11,"perimeter","","",6,[[["f64"],["self"]],["f64"]]],[11,"winding","","Same consideration as `area`.",6,[[["self"],["point"]],["i32"]]],[11,"bounding_box","","",6,[[["self"]],["rect"]]],[11,"as_line","","",6,[[["self"]],[["option",["line"]],["line"]]]],[11,"to_bez_path","","",10,[[["f64"],["self"]],["rectpathiter"]]],[11,"area","","",10,[[["self"]],["f64"]]],[11,"perimeter","","",10,[[["f64"],["self"]],["f64"]]],[11,"winding","","Note: this function is carefully designed so that if the…",10,[[["self"],["point"]],["i32"]]],[11,"bounding_box","","",10,[[["self"]],["rect"]]],[11,"as_rect","","",10,[[["self"]],[["rect"],["option",["rect"]]]]],[11,"to_bez_path","","",11,[[["f64"],["self"]],["roundedrectpathiter"]]],[11,"area","","",11,[[["self"]],["f64"]]],[11,"perimeter","","",11,[[["f64"],["self"]],["f64"]]],[11,"winding","","",11,[[["self"],["point"]],["i32"]]],[11,"bounding_box","","",11,[[["self"]],["rect"]]],[11,"as_rounded_rect","","",11,[[["self"]],[["option",["roundedrect"]],["roundedrect"]]]],[11,"from","","",16,[[["cubicbez"]],["pathseg"]]],[11,"from","","",16,[[["line"]],["pathseg"]]],[11,"from","","",16,[[["quadbez"]],["pathseg"]]],[11,"from","","",5,[[["f64"]],["insets"]]],[11,"from","","",5,[[],["insets"]]],[11,"from","","",5,[[],["insets"]]],[11,"from","","",8,[[],["point"]]],[11,"from","","",10,[[],["rect"]]],[11,"from","","",10,[[],["rect"]]],[11,"from","","",12,[[],["size"]]],[11,"from","","",0,[[["translatescale"]],["affine"]]],[11,"from","","",14,[[],["vec2"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"div","","Note: division by a scalar is implemented by multiplying…",14,[[["f64"]],["vec2"]]],[11,"sub","","",3,[[["vec2"]],["circle"]]],[11,"sub","","",5,[[["rect"]],["rect"]]],[11,"sub","","",10,[[["insets"]],["rect"]]],[11,"sub","","",8,[[["vec2"]],["self"]]],[11,"sub","","",8,[[["point"]],["vec2"]]],[11,"sub","","",10,[[["vec2"]],["rect"]]],[11,"sub","","",10,[[["rect"]],["insets"]]],[11,"sub","","",13,[[["vec2"]],["translatescale"]]],[11,"sub","","",14,[[["vec2"]],["vec2"]]],[11,"eq","","",16,[[["pathseg"],["self"]],["bool"]]],[11,"ne","","",16,[[["pathseg"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["cubicbez"]],["bool"]]],[11,"ne","","",4,[[["self"],["cubicbez"]],["bool"]]],[11,"eq","","",6,[[["self"],["line"]],["bool"]]],[11,"ne","","",6,[[["self"],["line"]],["bool"]]],[11,"eq","","",8,[[["self"],["point"]],["bool"]]],[11,"ne","","",8,[[["self"],["point"]],["bool"]]],[11,"eq","","",9,[[["quadbez"],["self"]],["bool"]]],[11,"ne","","",9,[[["quadbez"],["self"]],["bool"]]],[11,"eq","","",12,[[["size"],["self"]],["bool"]]],[11,"ne","","",12,[[["size"],["self"]],["bool"]]],[11,"eq","","",14,[[["vec2"],["self"]],["bool"]]],[11,"ne","","",14,[[["vec2"],["self"]],["bool"]]],[11,"add","","",3,[[["vec2"]],["circle"]]],[11,"add","","",5,[[["rect"]],["rect"]]],[11,"add","","",10,[[["insets"]],["rect"]]],[11,"add","","",8,[[["vec2"]],["self"]]],[11,"add","","",10,[[["vec2"]],["rect"]]],[11,"add","","",13,[[["vec2"]],["translatescale"]]],[11,"add","","",14,[[["translatescale"]],["translatescale"]]],[11,"add","","",14,[[["vec2"]],["vec2"]]],[11,"mul","","",0,[[["point"]],["point"]]],[11,"mul","","",0,[[["affine"]],["affine"]]],[11,"mul","","",0,[[["pathel"]],["pathel"]]],[11,"mul","","",0,[[["bezpath"]],["bezpath"]]],[11,"mul","","",0,[[["bezpath"]],["bezpath"]]],[11,"mul","","",13,[[["pathel"]],["pathel"]]],[11,"mul","","",13,[[["bezpath"]],["bezpath"]]],[11,"mul","","",13,[[["bezpath"]],["bezpath"]]],[11,"mul","","",0,[[["cubicbez"]],["cubicbez"]]],[11,"mul","","",0,[[["line"]],["line"]]],[11,"mul","","",0,[[["quadbez"]],["quadbez"]]],[11,"mul","","",12,[[["f64"]],["size"]]],[11,"mul","","",13,[[["point"]],["point"]]],[11,"mul","","",13,[[["translatescale"]],["translatescale"]]],[11,"mul","","",13,[[["circle"]],["circle"]]],[11,"mul","","",13,[[["line"]],["line"]]],[11,"mul","","",13,[[["rect"]],["rect"]]],[11,"mul","","",13,[[["roundedrect"]],["roundedrect"]]],[11,"mul","","",13,[[["quadbez"]],["quadbez"]]],[11,"mul","","",13,[[["cubicbez"]],["cubicbez"]]],[11,"mul","","",14,[[["f64"]],["vec2"]]],[11,"neg","","",5,[[],["insets"]]],[11,"neg","","",14,[[],["vec2"]]],[11,"add_assign","","",8,[[["vec2"],["self"]]]],[11,"add_assign","","",13,[[["vec2"],["self"]]]],[11,"add_assign","","",14,[[["vec2"],["self"]]]],[11,"sub_assign","","",8,[[["vec2"],["self"]]]],[11,"sub_assign","","",13,[[["vec2"],["self"]]]],[11,"sub_assign","","",14,[[["vec2"],["self"]]]],[11,"mul_assign","","",0,[[["affine"],["self"]]]],[11,"mul_assign","","",12,[[["self"],["f64"]]]],[11,"mul_assign","","",13,[[["self"],["translatescale"]]]],[11,"mul_assign","","",14,[[["self"],["f64"]]]],[11,"div_assign","","",14,[[["self"],["f64"]]]],[11,"next","kurbo::bezpath","",17,[[["self"]],[["pathseg"],["option",["pathseg"]]]]],[11,"next","kurbo::cubicbez","",18,[[["self"]],["option"]]],[11,"next","kurbo::rounded_rect","",26,[[["self"]],[["option",["pathel"]],["pathel"]]]],[11,"clone","kurbo","",0,[[["self"]],["affine"]]],[11,"clone","","",1,[[["self"]],["arc"]]],[11,"clone","","",2,[[["self"]],["bezpath"]]],[11,"clone","","",15,[[["self"]],["pathel"]]],[11,"clone","","",16,[[["self"]],["pathseg"]]],[11,"clone","","",3,[[["self"]],["circle"]]],[11,"clone","","",4,[[["self"]],["cubicbez"]]],[11,"clone","","",5,[[["self"]],["insets"]]],[11,"clone","","",6,[[["self"]],["line"]]],[11,"clone","","",7,[[["self"]],["constpoint"]]],[11,"clone","","",8,[[["self"]],["point"]]],[11,"clone","","",9,[[["self"]],["quadbez"]]],[11,"clone","","",10,[[["self"]],["rect"]]],[11,"clone","","",11,[[["self"]],["roundedrect"]]],[11,"clone","","",12,[[["self"]],["size"]]],[11,"clone","","",13,[[["self"]],["translatescale"]]],[11,"clone","","",14,[[["self"]],["vec2"]]],[11,"default","","",0,[[],["affine"]]],[11,"default","","",2,[[],["bezpath"]]],[11,"default","","",3,[[],["circle"]]],[11,"default","","",5,[[],["insets"]]],[11,"default","","",8,[[],["point"]]],[11,"default","","",10,[[],["rect"]]],[11,"default","","",11,[[],["roundedrect"]]],[11,"default","","",12,[[],["size"]]],[11,"default","","",13,[[],["translatescale"]]],[11,"default","","",14,[[],["vec2"]]]],"p":[[3,"Affine"],[3,"Arc"],[3,"BezPath"],[3,"Circle"],[3,"CubicBez"],[3,"Insets"],[3,"Line"],[3,"ConstPoint"],[3,"Point"],[3,"QuadBez"],[3,"Rect"],[3,"RoundedRect"],[3,"Size"],[3,"TranslateScale"],[3,"Vec2"],[4,"PathEl"],[4,"PathSeg"],[3,"BezPathSegs"],[3,"ToQuads"],[8,"ParamCurve"],[8,"ParamCurveDeriv"],[8,"ParamCurveArclen"],[8,"ParamCurveArea"],[8,"ParamCurveNearest"],[8,"ParamCurveCurvature"],[8,"ParamCurveExtrema"],[3,"RectPathIter"],[8,"Shape"]]};
searchIndex["libchip8"] = {"doc":"libchip8","i":[[3,"Chip8","libchip8","Interpreter instance",null,null],[8,"Hardware","","Represents environment-specific logic.",null,null],[10,"rand","","Return a random value.",0,[[["self"]],["u8"]]],[10,"key","","Check if the key is pressed.",0,[[["self"],["u8"]],["bool"]]],[10,"vram_set","","Set the state of a pixel in the screen.",0,[[["self"],["usize"],["bool"]]]],[10,"vram_get","","Get the current state of a pixel in the screen.",0,[[["self"],["usize"]],["bool"]]],[10,"vram_setsize","","Set the size of the screen.",0,[[["self"]]]],[10,"vram_size","","Get the size of the screen.",0,[[["self"]]]],[10,"clock","","Return the current clock value in nanoseconds.",0,[[["self"]],["u64"]]],[10,"beep","","Play beep sound.",0,[[["self"]]]],[11,"sched","","Called in every step; return `true` for shutdown.",0,[[["self"]],["bool"]]],[11,"new","","Create an interpreter instance.",1,[[["t"]],["self"]]],[11,"run","","Run the interpreter.",1,[[]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]]],"p":[[8,"Hardware"],[3,"Chip8"]]};
searchIndex["libm"] = {"doc":"libm in pure Rust","i":[[5,"acos","libm","Arccosine (f64)",null,[[["f64"]],["f64"]]],[5,"acosf","","Arccosine (f32)",null,[[["f32"]],["f32"]]],[5,"acosh","","Inverse hyperbolic cosine (f64)",null,[[["f64"]],["f64"]]],[5,"acoshf","","Inverse hyperbolic cosine (f32)",null,[[["f32"]],["f32"]]],[5,"asin","","Arcsine (f64)",null,[[["f64"]],["f64"]]],[5,"asinf","","Arcsine (f32)",null,[[["f32"]],["f32"]]],[5,"asinh","","Inverse hyperbolic sine (f64)",null,[[["f64"]],["f64"]]],[5,"asinhf","","Inverse hyperbolic sine (f32)",null,[[["f32"]],["f32"]]],[5,"atan","","Arctangent (f64)",null,[[["f64"]],["f64"]]],[5,"atan2","","Arctangent of y/x (f64)",null,[[["f64"]],["f64"]]],[5,"atan2f","","Arctangent of y/x (f32)",null,[[["f32"]],["f32"]]],[5,"atanf","","Arctangent (f32)",null,[[["f32"]],["f32"]]],[5,"atanh","","Inverse hyperbolic tangent (f64)",null,[[["f64"]],["f64"]]],[5,"atanhf","","Inverse hyperbolic tangent (f32)",null,[[["f32"]],["f32"]]],[5,"cbrt","","Computes the cube root of the argument.",null,[[["f64"]],["f64"]]],[5,"cbrtf","","Cube root (f32)",null,[[["f32"]],["f32"]]],[5,"ceil","","Ceil (f64)",null,[[["f64"]],["f64"]]],[5,"ceilf","","Ceil (f32)",null,[[["f32"]],["f32"]]],[5,"copysign","","Sign of Y, magnitude of X (f64)",null,[[["f64"]],["f64"]]],[5,"copysignf","","Sign of Y, magnitude of X (f32)",null,[[["f32"]],["f32"]]],[5,"cos","","",null,[[["f64"]],["f64"]]],[5,"cosf","","",null,[[["f32"]],["f32"]]],[5,"cosh","","Hyperbolic cosine (f64)",null,[[["f64"]],["f64"]]],[5,"coshf","","Hyperbolic cosine (f64)",null,[[["f32"]],["f32"]]],[5,"erf","","Error function (f64)",null,[[["f64"]],["f64"]]],[5,"erfc","","Error function (f64)",null,[[["f64"]],["f64"]]],[5,"erfcf","","Error function (f32)",null,[[["f32"]],["f32"]]],[5,"erff","","Error function (f32)",null,[[["f32"]],["f32"]]],[5,"exp","","Exponential, base e (f64)",null,[[["f64"]],["f64"]]],[5,"exp10","","",null,[[["f64"]],["f64"]]],[5,"exp10f","","",null,[[["f32"]],["f32"]]],[5,"exp2","","Exponential, base 2 (f64)",null,[[["f64"]],["f64"]]],[5,"exp2f","","Exponential, base 2 (f32)",null,[[["f32"]],["f32"]]],[5,"expf","","Exponential, base e (f32)",null,[[["f32"]],["f32"]]],[5,"expm1","","Exponential, base e, of x-1 (f64)",null,[[["f64"]],["f64"]]],[5,"expm1f","","Exponential, base e, of x-1 (f32)",null,[[["f32"]],["f32"]]],[5,"fabs","","Absolute value (magnitude) (f64) Calculates the absolute…",null,[[["f64"]],["f64"]]],[5,"fabsf","","Absolute value (magnitude) (f32) Calculates the absolute…",null,[[["f32"]],["f32"]]],[5,"fdim","","Positive difference (f64)",null,[[["f64"]],["f64"]]],[5,"fdimf","","Positive difference (f32)",null,[[["f32"]],["f32"]]],[5,"floor","","Floor (f64)",null,[[["f64"]],["f64"]]],[5,"floorf","","Floor (f32)",null,[[["f32"]],["f32"]]],[5,"fma","","Floating multiply add (f64)",null,[[["f64"]],["f64"]]],[5,"fmaf","","Floating multiply add (f32)",null,[[["f32"]],["f32"]]],[5,"fmax","","",null,[[["f64"]],["f64"]]],[5,"fmaxf","","",null,[[["f32"]],["f32"]]],[5,"fmin","","",null,[[["f64"]],["f64"]]],[5,"fminf","","",null,[[["f32"]],["f32"]]],[5,"fmod","","",null,[[["f64"]],["f64"]]],[5,"fmodf","","",null,[[["f32"]],["f32"]]],[5,"frexp","","",null,[[["f64"]]]],[5,"frexpf","","",null,[[["f32"]]]],[5,"hypot","","",null,[[["f64"]],["f64"]]],[5,"hypotf","","",null,[[["f32"]],["f32"]]],[5,"ilogb","","",null,[[["f64"]],["i32"]]],[5,"ilogbf","","",null,[[["f32"]],["i32"]]],[5,"j0","","",null,[[["f64"]],["f64"]]],[5,"y0","","",null,[[["f64"]],["f64"]]],[5,"j0f","","",null,[[["f32"]],["f32"]]],[5,"y0f","","",null,[[["f32"]],["f32"]]],[5,"j1","","",null,[[["f64"]],["f64"]]],[5,"y1","","",null,[[["f64"]],["f64"]]],[5,"j1f","","",null,[[["f32"]],["f32"]]],[5,"y1f","","",null,[[["f32"]],["f32"]]],[5,"jn","","",null,[[["f64"],["i32"]],["f64"]]],[5,"yn","","",null,[[["f64"],["i32"]],["f64"]]],[5,"jnf","","",null,[[["f32"],["i32"]],["f32"]]],[5,"ynf","","",null,[[["f32"],["i32"]],["f32"]]],[5,"ldexp","","",null,[[["f64"],["i32"]],["f64"]]],[5,"ldexpf","","",null,[[["f32"],["i32"]],["f32"]]],[5,"lgamma","","",null,[[["f64"]],["f64"]]],[5,"lgamma_r","","",null,[[["f64"]]]],[5,"lgammaf","","",null,[[["f32"]],["f32"]]],[5,"lgammaf_r","","",null,[[["f32"]]]],[5,"log","","",null,[[["f64"]],["f64"]]],[5,"log10","","",null,[[["f64"]],["f64"]]],[5,"log10f","","",null,[[["f32"]],["f32"]]],[5,"log1p","","",null,[[["f64"]],["f64"]]],[5,"log1pf","","",null,[[["f32"]],["f32"]]],[5,"log2","","",null,[[["f64"]],["f64"]]],[5,"log2f","","",null,[[["f32"]],["f32"]]],[5,"logf","","",null,[[["f32"]],["f32"]]],[5,"modf","","",null,[[["f64"]]]],[5,"modff","","",null,[[["f32"]]]],[5,"nextafter","","",null,[[["f64"]],["f64"]]],[5,"nextafterf","","",null,[[["f32"]],["f32"]]],[5,"pow","","",null,[[["f64"]],["f64"]]],[5,"powf","","",null,[[["f32"]],["f32"]]],[5,"remainder","","",null,[[["f64"]],["f64"]]],[5,"remainderf","","",null,[[["f32"]],["f32"]]],[5,"remquo","","",null,[[["f64"]]]],[5,"remquof","","",null,[[["f32"]]]],[5,"round","","",null,[[["f64"]],["f64"]]],[5,"roundf","","",null,[[["f32"]],["f32"]]],[5,"scalbn","","",null,[[["f64"],["i32"]],["f64"]]],[5,"scalbnf","","",null,[[["f32"],["i32"]],["f32"]]],[5,"sin","","",null,[[["f64"]],["f64"]]],[5,"sincos","","",null,[[["f64"]]]],[5,"sincosf","","",null,[[["f32"]]]],[5,"sinf","","",null,[[["f32"]],["f32"]]],[5,"sinh","","",null,[[["f64"]],["f64"]]],[5,"sinhf","","",null,[[["f32"]],["f32"]]],[5,"sqrt","","",null,[[["f64"]],["f64"]]],[5,"sqrtf","","",null,[[["f32"]],["f32"]]],[5,"tan","","",null,[[["f64"]],["f64"]]],[5,"tanf","","",null,[[["f32"]],["f32"]]],[5,"tanh","","",null,[[["f64"]],["f64"]]],[5,"tanhf","","",null,[[["f32"]],["f32"]]],[5,"tgamma","","",null,[[["f64"]],["f64"]]],[5,"tgammaf","","",null,[[["f32"]],["f32"]]],[5,"trunc","","",null,[[["f64"]],["f64"]]],[5,"truncf","","",null,[[["f32"]],["f32"]]]],"p":[]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","i":[[3,"Record","log","The \"payload\" of a log message.",null,null],[3,"RecordBuilder","","Builder for `Record`.",null,null],[3,"Metadata","","Metadata about a log message.",null,null],[3,"MetadataBuilder","","Builder for `Metadata`.",null,null],[3,"SetLoggerError","","The type returned by [`set_logger`] if [`set_logger`] has…",null,null],[3,"ParseLevelError","","The type returned by [`from_str`] when the string doesn't…",null,null],[4,"Level","","An enum representing the available verbosity levels of the…",null,null],[13,"Error","","The \"error\" level.",0,null],[13,"Warn","","The \"warn\" level.",0,null],[13,"Info","","The \"info\" level.",0,null],[13,"Debug","","The \"debug\" level.",0,null],[13,"Trace","","The \"trace\" level.",0,null],[4,"LevelFilter","","An enum representing the available verbosity level filters…",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"set_max_level","","Sets the global maximum log level.",null,[[["levelfilter"]]]],[5,"max_level","","Returns the current maximum log level.",null,[[],["levelfilter"]]],[5,"set_logger","","Sets the global logger to a `&'static Log`.",null,[[["log"]],[["result",["setloggererror"]],["setloggererror"]]]],[5,"set_logger_racy","","A thread-unsafe version of [`set_logger`].",null,[[["log"]],[["result",["setloggererror"]],["setloggererror"]]]],[5,"logger","","Returns a reference to the logger.",null,[[],["log"]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",null,null],[8,"Log","","A trait encapsulating the operations required of a logger.",null,null],[10,"enabled","","Determines if a log message with the specified metadata…",2,[[["self"],["metadata"]],["bool"]]],[10,"log","","Logs the `Record`.",2,[[["record"],["self"]]]],[10,"flush","","Flushes any buffered records.",2,[[["self"]]]],[11,"max","","Returns the most verbose logging level.",0,[[],["level"]]],[11,"to_level_filter","","Converts the `Level` to the equivalent `LevelFilter`.",0,[[["self"]],["levelfilter"]]],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter"]]],[11,"to_level","","Converts `self` to the equivalent `Level`.",1,[[["self"]],[["level"],["option",["level"]]]]],[11,"builder","","Returns a new builder.",3,[[],["recordbuilder"]]],[11,"args","","The message body.",3,[[["self"]],["arguments"]]],[11,"metadata","","Metadata about the log directive.",3,[[["self"]],["metadata"]]],[11,"level","","The verbosity level of the message.",3,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",3,[[["self"]],["str"]]],[11,"module_path","","The module path of the message.",3,[[["self"]],[["option",["str"]],["str"]]]],[11,"module_path_static","","The module path of the message, if it is a `'static` string.",3,[[["self"]],[["option",["str"]],["str"]]]],[11,"file","","The source file containing the message.",3,[[["self"]],[["option",["str"]],["str"]]]],[11,"file_static","","The module path of the message, if it is a `'static` string.",3,[[["self"]],[["option",["str"]],["str"]]]],[11,"line","","The line containing the message.",3,[[["self"]],[["option",["u32"]],["u32"]]]],[11,"new","","Construct new `RecordBuilder`.",4,[[],["recordbuilder"]]],[11,"args","","Set `args`.",4,[[["arguments"],["self"]],["recordbuilder"]]],[11,"metadata","","Set `metadata`. Construct a `Metadata` object with…",4,[[["self"],["metadata"]],["recordbuilder"]]],[11,"level","","Set `Metadata::level`.",4,[[["self"],["level"]],["recordbuilder"]]],[11,"target","","Set `Metadata::target`",4,[[["self"],["str"]],["recordbuilder"]]],[11,"module_path","","Set `module_path`",4,[[["self"],["option",["str"]],["str"]],["recordbuilder"]]],[11,"module_path_static","","Set `module_path` to a `'static` string",4,[[["self"],["option",["str"]],["str"]],["recordbuilder"]]],[11,"file","","Set `file`",4,[[["self"],["option",["str"]],["str"]],["recordbuilder"]]],[11,"file_static","","Set `file` to a `'static` string.",4,[[["self"],["option",["str"]],["str"]],["recordbuilder"]]],[11,"line","","Set `line`",4,[[["option",["u32"]],["self"],["u32"]],["recordbuilder"]]],[11,"build","","Invoke the builder and return a `Record`",4,[[["self"]],["record"]]],[11,"builder","","Returns a new builder.",5,[[],["metadatabuilder"]]],[11,"level","","The verbosity level of the message.",5,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",5,[[["self"]],["str"]]],[11,"new","","Construct a new `MetadataBuilder`.",6,[[],["metadatabuilder"]]],[11,"level","","Setter for `level`.",6,[[["self"],["level"]],["metadatabuilder"]]],[11,"target","","Setter for `target`.",6,[[["self"],["str"]],["metadatabuilder"]]],[11,"build","","Returns a `Metadata` object.",6,[[["self"]],["metadata"]]],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in…",null,null],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"eq","","",0,[[["level"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"eq","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"eq","","",1,[[["level"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["metadata"]],["bool"]]],[11,"ne","","",5,[[["self"],["metadata"]],["bool"]]],[11,"eq","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"ne","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"eq","","",8,[[["parselevelerror"],["self"]],["bool"]]],[11,"ne","","",8,[[["parselevelerror"],["self"]],["bool"]]],[11,"cmp","","",0,[[["level"],["self"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["levelfilter"]],["ordering"]]],[11,"cmp","","",5,[[["self"],["metadata"]],["ordering"]]],[11,"cmp","","",6,[[["self"],["metadatabuilder"]],["ordering"]]],[11,"partial_cmp","","",0,[[["level"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["level"],["self"]],["bool"]]],[11,"le","","",0,[[["level"],["self"]],["bool"]]],[11,"gt","","",0,[[["level"],["self"]],["bool"]]],[11,"ge","","",0,[[["level"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["levelfilter"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"le","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"gt","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"ge","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["levelfilter"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"le","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"gt","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"ge","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"partial_cmp","","",1,[[["level"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["level"],["self"]],["bool"]]],[11,"le","","",1,[[["level"],["self"]],["bool"]]],[11,"gt","","",1,[[["level"],["self"]],["bool"]]],[11,"ge","","",1,[[["level"],["self"]],["bool"]]],[11,"partial_cmp","","",5,[[["self"],["metadata"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",5,[[["self"],["metadata"]],["bool"]]],[11,"le","","",5,[[["self"],["metadata"]],["bool"]]],[11,"gt","","",5,[[["self"],["metadata"]],["bool"]]],[11,"ge","","",5,[[["self"],["metadata"]],["bool"]]],[11,"partial_cmp","","",6,[[["self"],["metadatabuilder"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"le","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"gt","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"ge","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"from_str","","",0,[[["str"]],[["result",["level"]],["level"]]]],[11,"from_str","","",1,[[["str"]],[["result",["levelfilter"]],["levelfilter"]]]],[11,"clone","","",0,[[["self"]],["level"]]],[11,"clone","","",1,[[["self"]],["levelfilter"]]],[11,"clone","","",3,[[["self"]],["record"]]],[11,"clone","","",5,[[["self"]],["metadata"]]]],"p":[[4,"Level"],[4,"LevelFilter"],[8,"Log"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"]]};
searchIndex["memchr"] = {"doc":"The `memchr` crate provides heavily optimized routines for…","i":[[3,"Memchr","memchr","An iterator for `memchr`.",null,null],[3,"Memchr2","","An iterator for `memchr2`.",null,null],[3,"Memchr3","","An iterator for `memchr3`.",null,null],[5,"memchr_iter","","An iterator over all occurrences of the needle in a…",null,[[["u8"]],["memchr"]]],[5,"memchr2_iter","","An iterator over all occurrences of the needles in a…",null,[[["u8"]],["memchr2"]]],[5,"memchr3_iter","","An iterator over all occurrences of the needles in a…",null,[[["u8"]],["memchr3"]]],[5,"memrchr_iter","","An iterator over all occurrences of the needle in a…",null,[[["u8"]],[["rev",["memchr"]],["memchr"]]]],[5,"memrchr2_iter","","An iterator over all occurrences of the needles in a…",null,[[["u8"]],[["rev",["memchr2"]],["memchr2"]]]],[5,"memrchr3_iter","","An iterator over all occurrences of the needles in a…",null,[[["u8"]],[["rev",["memchr3"]],["memchr3"]]]],[5,"memchr","","Search for the first occurrence of a byte in a slice.",null,[[["u8"]],[["usize"],["option",["usize"]]]]],[5,"memchr2","","Like `memchr`, but searches for two bytes instead of one.",null,[[["u8"]],[["usize"],["option",["usize"]]]]],[5,"memchr3","","Like `memchr`, but searches for three bytes instead of one.",null,[[["u8"]],[["usize"],["option",["usize"]]]]],[5,"memrchr","","Search for the last occurrence of a byte in a slice.",null,[[["u8"]],[["usize"],["option",["usize"]]]]],[5,"memrchr2","","Like `memrchr`, but searches for two bytes instead of one.",null,[[["u8"]],[["usize"],["option",["usize"]]]]],[5,"memrchr3","","Like `memrchr`, but searches for three bytes instead of one.",null,[[["u8"]],[["usize"],["option",["usize"]]]]],[11,"new","","Creates a new iterator that yields all positions of needle…",0,[[["u8"]],["memchr"]]],[11,"new","","Creates a new iterator that yields all positions of needle…",1,[[["u8"]],["memchr2"]]],[11,"new","","Create a new `Memchr3` that's initialized to zero with a…",2,[[["u8"]],["memchr3"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"next","","",0,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"size_hint","","",0,[[["self"]]]],[11,"next","","",1,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"size_hint","","",1,[[["self"]]]],[11,"next","","",2,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"size_hint","","",2,[[["self"]]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"next_back","","",1,[[["self"]],["option"]]],[11,"next_back","","",2,[[["self"]],["option"]]]],"p":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]};
searchIndex["mynewt"] = {"doc":"Mynewt API for Rust. Contains Rust bindings for Mynewt API…","i":[[3,"Delay","mynewt","Rust Embedded HAL interface for Mynewt Delay",null,null],[3,"GPIO","","Rust Embedded HAL interface for Mynewt GPIO",null,null],[12,"pin","","Mynewt GPIO pin number",0,null],[3,"SPI","","Rust Embedded HAL interface for Mynewt SPI",null,null],[12,"spi_num","","Mynewt SPI port number",1,null],[12,"cs_pin","","Mynewt GPIO pin number for Chip Select",1,null],[3,"Strn","","Represents a null-terminated string, suitable for passing…",null,null],[12,"rep","","Either a byte string terminated with null, or a pointer to…",2,null],[4,"StrnRep","","Either a byte string or a string pointer",null,null],[13,"ByteStr","","Byte string terminated with null",3,null],[13,"CStr","","Pointer to a null-terminated string",3,null],[5,"sysinit","","Initialise the Mynewt system. Start the Mynewt drivers and…",null,[[]]],[5,"rust_sysinit","","Initialise the Mynewt system. Start the Mynewt drivers and…",null,null],[0,"kernel","","Mynewt Kernel API for Rust",null,null],[0,"os","mynewt::kernel","Contains Rust bindings for Mynewt OS API `kernel/os`",null,null],[3,"__IncompleteArrayField","mynewt::kernel::os","",null,null],[12,"0","","",4,null],[12,"1","","",4,null],[3,"os_stack","","",null,null],[12,"_unused","","",5,null],[3,"os_timeval","","Structure representing time since Jan 1 1970 with…",null,null],[12,"tv_sec","","",6,null],[12,"tv_usec","","",6,null],[3,"os_timezone","","Structure representing a timezone offset",null,null],[12,"tz_minuteswest","","Minutes west of GMT",7,null],[12,"tz_dsttime","","Daylight savings time correction (if any)",7,null],[3,"os_time_change_info","","Represents a time change. Passed to time change listeners…",null,null],[12,"tci_prev_tv","","UTC time prior to change.",8,null],[12,"tci_prev_tz","","Time zone prior to change.",8,null],[12,"tci_cur_tv","","UTC time after change.",8,null],[12,"tci_cur_tz","","Time zone after change.",8,null],[12,"tci_newly_synced","","",8,null],[3,"os_time_change_listener","","Time change listener.  Notified when the time-of-day is set.",null,null],[12,"tcl_fn","","Public.",9,null],[12,"tcl_arg","","",9,null],[12,"tcl_next","","",9,null],[3,"os_time_change_listener__bindgen_ty_1","","Internal.",null,null],[12,"stqe_next","","",10,null],[3,"os_event","","Structure representing an OS event. OS events get placed…",null,null],[12,"ev_queued","","Whether this OS event is queued on an event queue.",11,null],[12,"ev_cb","","Callback to call when the event is taken off of an event…",11,null],[12,"ev_arg","","Argument to pass to the event queue callback.",11,null],[12,"ev_next","","",11,null],[3,"os_event__bindgen_ty_1","","",null,null],[12,"stqe_next","","",12,null],[3,"os_eventq","","",null,null],[12,"evq_owner","","Pointer to task that \"owns\" this event queue.",13,null],[12,"evq_task","","Pointer to the task that is sleeping on this event queue,…",13,null],[12,"evq_list","","",13,null],[3,"os_eventq__bindgen_ty_1","","",null,null],[12,"stqh_first","","",14,null],[12,"stqh_last","","",14,null],[3,"os_callout","","Structure containing the definition of a callout,…",null,null],[12,"c_ev","","Event to post when the callout expires.",15,null],[12,"c_evq","","Pointer to the event queue to post the event to",15,null],[12,"c_ticks","","Number of ticks in the future to expire the callout",15,null],[12,"c_next","","",15,null],[3,"os_callout__bindgen_ty_1","","",null,null],[12,"tqe_next","","",16,null],[12,"tqe_prev","","",16,null],[3,"os_callout_list","","@cond INTERNAL_HIDDEN",null,null],[12,"tqh_first","","",17,null],[12,"tqh_last","","",17,null],[3,"hal_timer","","The HAL timer structure. The user can declare as many of…",null,null],[12,"bsp_timer","","Internal platform specific pointer",18,null],[12,"cb_func","","Callback function",18,null],[12,"cb_arg","","Callback argument",18,null],[12,"expiry","","Tick at which timer should expire",18,null],[12,"link","","",18,null],[3,"hal_timer__bindgen_ty_1","","",null,null],[12,"tqe_next","","",19,null],[12,"tqe_prev","","",19,null],[3,"os_dev_handlers","","Device handlers, implementers of device drivers should…",null,null],[12,"od_open","","Device open handler, called when the user opens the…",20,null],[12,"od_suspend","","Suspend handler, called when the device is being…",20,null],[12,"od_resume","","Resume handler, restores device state after a suspend…",20,null],[12,"od_close","","Close handler, releases the device, including any locks…",20,null],[3,"os_dev","","",null,null],[12,"od_handlers","","Device handlers.  Implementation of base device functions.",21,null],[12,"od_init","","Device initialization function.",21,null],[12,"od_init_arg","","Argument to pass to device initialization function.",21,null],[12,"od_stage","","Stage during which to initialize this device.",21,null],[12,"od_priority","","Priority within a given stage to initialize a device.",21,null],[12,"od_open_ref","","Number of references to a device being open before marking…",21,null],[12,"od_flags","","Device flags.",21,null],[12,"od_name","","Device name",21,null],[12,"od_next","","",21,null],[3,"os_dev__bindgen_ty_1","","",null,null],[12,"stqe_next","","",22,null],[3,"os_mbuf_pool","","A mbuf pool from which to allocate mbufs. This contains a…",null,null],[12,"omp_databuf_len","","Total length of the databuf in each mbuf. This is the size…",23,null],[12,"omp_pool","","The memory pool which to allocate mbufs out of",23,null],[12,"omp_next","","",23,null],[3,"os_mbuf_pool__bindgen_ty_1","","",null,null],[12,"stqe_next","","",24,null],[3,"os_mbuf_pkthdr","","A packet header structure that preceeds the mbuf packet…",null,null],[12,"omp_len","","Overall length of the packet.",25,null],[12,"omp_flags","","Flags",25,null],[12,"omp_next","","",25,null],[3,"os_mbuf_pkthdr__bindgen_ty_1","","",null,null],[12,"stqe_next","","",26,null],[3,"os_mbuf","","Chained memory buffer.",null,null],[12,"om_data","","Current pointer to data in the structure",27,null],[12,"om_flags","","Flags associated with this buffer, see OS_MBUF_F_*…",27,null],[12,"om_pkthdr_len","","Length of packet header",27,null],[12,"om_len","","Length of data in this buffer",27,null],[12,"om_omp","","The mbuf pool this mbuf was allocated out of",27,null],[12,"om_next","","",27,null],[12,"om_databuf","","Pointer to the beginning of the data, after this buffer",27,null],[3,"os_mbuf__bindgen_ty_1","","",null,null],[12,"sle_next","","",28,null],[3,"os_mqueue","","Structure representing a queue of mbufs.",null,null],[12,"mq_head","","",29,null],[12,"mq_ev","","Event to post when new buffers are available on the queue.",29,null],[3,"os_mqueue__bindgen_ty_1","","",null,null],[12,"stqh_first","","",30,null],[12,"stqh_last","","",30,null],[3,"os_memblock","","A memory block structure. This simply contains a pointer…",null,null],[12,"mb_next","","",31,null],[3,"os_memblock__bindgen_ty_1","","",null,null],[12,"sle_next","","",32,null],[3,"os_mempool","","Memory pool",null,null],[12,"mp_block_size","","Size of the memory blocks, in bytes.",33,null],[12,"mp_num_blocks","","The number of memory blocks.",33,null],[12,"mp_num_free","","The number of free blocks left",33,null],[12,"mp_min_free","","The lowest number of free blocks seen",33,null],[12,"mp_flags","","Bitmap of OS_MEMPOOL_F_[...] values.",33,null],[12,"mp_membuf_addr","","Address of memory buffer used by pool",33,null],[12,"mp_list","","",33,null],[12,"__bindgen_anon_1","","",33,null],[12,"name","","Name for memory block",33,null],[3,"os_mempool__bindgen_ty_1","","",null,null],[12,"stqe_next","","",34,null],[3,"os_mempool__bindgen_ty_2","","",null,null],[12,"slh_first","","",35,null],[3,"os_mempool_ext","","",null,null],[12,"mpe_mp","","",36,null],[12,"mpe_put_cb","","",36,null],[12,"mpe_put_arg","","",36,null],[3,"os_mempool_info","","Information describing a memory pool, used to return OS…",null,null],[12,"omi_block_size","","Size of the memory blocks in the pool",37,null],[12,"omi_num_blocks","","Number of memory blocks in the pool",37,null],[12,"omi_num_free","","Number of free memory blocks",37,null],[12,"omi_min_free","","Minimum number of free memory blocks ever",37,null],[12,"omi_name","","Name of the memory pool",37,null],[3,"os_mutex","","OS mutex structure",null,null],[12,"mu_head","","",38,null],[12,"_pad","","",38,null],[12,"mu_prio","","Mutex owner's default priority",38,null],[12,"mu_level","","Mutex call nesting level",38,null],[12,"mu_owner","","Task that owns the mutex",38,null],[3,"os_mutex__bindgen_ty_1","","",null,null],[12,"slh_first","","",39,null],[3,"os_sanity_check","","",null,null],[12,"sc_checkin_last","","Time this check last ran successfully.",40,null],[12,"sc_checkin_itvl","","Interval this task should check in at",40,null],[12,"sc_func","","Sanity check to run",40,null],[12,"sc_arg","","Argument to pass to sanity check",40,null],[12,"sc_next","","",40,null],[3,"os_sanity_check__bindgen_ty_1","","",null,null],[12,"sle_next","","",41,null],[3,"os_task_obj","","",null,null],[12,"obj_head","","",42,null],[3,"os_task_obj__bindgen_ty_1","","",null,null],[12,"slh_first","","",43,null],[3,"os_task","","@cond INTERNAL_HIDDEN",null,null],[12,"t_stackptr","","Current stack pointer for this task",44,null],[12,"t_stacktop","","Pointer to top of this task's stack",44,null],[12,"t_stacksize","","Size of this task's stack",44,null],[12,"t_taskid","","Task ID",44,null],[12,"t_prio","","Task Priority",44,null],[12,"t_state","","",44,null],[12,"t_flags","","Task flags, bitmask",44,null],[12,"t_lockcnt","","",44,null],[12,"t_pad","","",44,null],[12,"t_name","","Task name",44,null],[12,"t_func","","Task function that executes",44,null],[12,"t_arg","","Argument to pass to task function when called",44,null],[12,"t_obj","","Current object task is waiting on, either a semaphore or…",44,null],[12,"t_sanity_check","","Default sanity check for this task",44,null],[12,"t_next_wakeup","","Next scheduled wakeup if this task is sleeping",44,null],[12,"t_run_time","","Total task run time",44,null],[12,"t_ctx_sw_cnt","","Total number of times this task has been context switched…",44,null],[12,"t_os_task_list","","",44,null],[12,"t_os_list","","",44,null],[12,"t_obj_list","","",44,null],[3,"os_task__bindgen_ty_1","","",null,null],[12,"stqe_next","","",45,null],[3,"os_task__bindgen_ty_2","","",null,null],[12,"tqe_next","","",46,null],[12,"tqe_prev","","",46,null],[3,"os_task__bindgen_ty_3","","",null,null],[12,"sle_next","","",47,null],[3,"os_task_stailq","","@cond INTERNAL_HIDDEN",null,null],[12,"stqh_first","","",48,null],[12,"stqh_last","","",48,null],[3,"os_task_info","","Information about an individual task, returned for…",null,null],[12,"oti_prio","","Task priority",49,null],[12,"oti_taskid","","Task identifier",49,null],[12,"oti_state","","Task state, either READY or SLEEP",49,null],[12,"oti_stkusage","","Task stack usage",49,null],[12,"oti_stksize","","Task stack size",49,null],[12,"oti_cswcnt","","Task context switch count",49,null],[12,"oti_runtime","","Task runtime",49,null],[12,"oti_last_checkin","","Last time this task checked in with sanity",49,null],[12,"oti_next_checkin","","Next time this task is scheduled to check-in with sanity",49,null],[12,"oti_name","","Name of this task",49,null],[3,"os_task_list","","",null,null],[12,"tqh_first","","",50,null],[12,"tqh_last","","",50,null],[3,"os_sem","","Structure representing an OS semaphore.",null,null],[12,"sem_head","","",51,null],[12,"_pad","","",51,null],[12,"sem_tokens","","Number of tokens",51,null],[3,"os_sem__bindgen_ty_1","","",null,null],[12,"slh_first","","",52,null],[5,"eventq_run","","Pull a single item off the event queue and call it's event…",null,[[],["mynewtresult"]]],[5,"eventq_dflt_get","","Retrieves the default event queue processed by OS main task.",null,[[],["mynewtresult"]]],[5,"task_init","","Initialize a task.",null,[[["os_time_t"],["strn"],["out"],["os_task"],["ptr"],["os_task_func_t"],["u16"],["out",["os_task"]],["u8"]],["mynewtresult"]]],[5,"os_info_init","","",null,null],[5,"os_init_idle_task","","",null,null],[5,"os_started","","Check whether or not the OS has been started.",null,null],[5,"os_init","","Initialize the OS, including memory areas and housekeeping…",null,null],[5,"os_start","","Start the OS and begin processing.",null,null],[5,"os_reboot","","Reboots the system.",null,null],[5,"os_system_reset","","Performs a system reset. This is typically done at the end…",null,null],[5,"os_arch_task_stack_init","","",null,null],[5,"os_arch_ctx_sw","","",null,null],[5,"os_arch_save_sr","","",null,null],[5,"os_arch_restore_sr","","",null,null],[5,"os_arch_in_critical","","",null,null],[5,"os_arch_init","","",null,null],[5,"os_arch_start","","",null,null],[5,"os_arch_os_init","","",null,null],[5,"os_arch_os_start","","",null,null],[5,"os_set_env","","",null,null],[5,"os_arch_init_task_stack","","",null,null],[5,"os_default_irq_asm","","",null,null],[5,"os_time_get","","Get the current OS time in ticks",null,null],[5,"os_time_advance","","Move OS time forward ticks.",null,null],[5,"os_time_delay","","Puts the current task to sleep for the specified number of…",null,null],[5,"os_settimeofday","","Set the time of day. This does not modify os time, but…",null,null],[5,"os_gettimeofday","","Get the current time of day. Returns the time of day in…",null,null],[5,"os_time_is_set","","",null,null],[5,"os_get_uptime_usec","","Get time since boot in microseconds.",null,null],[5,"os_get_uptime","","Get time since boot as os_timeval.",null,null],[5,"os_time_ms_to_ticks","","Converts milliseconds to OS ticks.",null,null],[5,"os_time_ticks_to_ms","","Converts OS ticks to milliseconds.",null,null],[5,"os_time_change_listen","","Registers a time change listener. Whenever the time is…",null,null],[5,"os_time_change_remove","","Unregisters a time change listener.",null,null],[5,"os_eventq_init","","Initialize the event queue",null,null],[5,"os_eventq_inited","","Check whether the event queue is initialized.",null,null],[5,"os_eventq_put","","Put an event on the event queue.",null,null],[5,"os_eventq_get_no_wait","","Poll an event from the event queue and return it…",null,null],[5,"os_eventq_get","","Pull a single item from an event queue. This function…",null,null],[5,"os_eventq_poll","","Poll the list of event queues specified by the evq…",null,null],[5,"os_eventq_remove","","Remove an event from the queue.",null,null],[5,"os_eventq_designate","","@cond INTERNAL_HIDDEN [DEPRECATED]",null,null],[5,"os_callout_init","","Initialize a callout.",null,null],[5,"os_callout_stop","","Stop the callout from firing off, any pending events will…",null,null],[5,"os_callout_reset","","Reset the callout to fire off in 'ticks' ticks.",null,null],[5,"os_callout_remaining_ticks","","Returns the number of ticks which remains to callout.",null,null],[5,"os_callout_tick","","@cond INTERNAL_HIDDEN",null,null],[5,"os_callout_wakeup_ticks","","",null,null],[5,"os_cputime_init","","Initialize the cputime module. This must be called after…",null,null],[5,"os_cputime_get32","","Returns the low 32 bits of cputime.",null,null],[5,"os_cputime_nsecs_to_ticks","","Converts the given number of nanoseconds into cputime…",null,null],[5,"os_cputime_ticks_to_nsecs","","Convert the given number of ticks into nanoseconds. Not…",null,null],[5,"os_cputime_delay_nsecs","","Wait until 'nsecs' nanoseconds has elapsed. This is a…",null,null],[5,"os_cputime_delay_ticks","","Wait until the number of ticks has elapsed. This is a…",null,null],[5,"os_cputime_delay_usecs","","Wait until 'usecs' microseconds has elapsed. This is a…",null,null],[5,"os_cputime_timer_init","","Initialize a CPU timer, using the given HAL timer.",null,null],[5,"os_cputime_timer_start","","Start a cputimer that will expire at 'cputime'. If cputime…",null,null],[5,"os_cputime_timer_relative","","Sets a cpu timer that will expire 'usecs' microseconds…",null,null],[5,"os_cputime_timer_stop","","Stops a cputimer from running. The timer is removed from…",null,null],[5,"os_dev_suspend","","Suspend the operation of the device.",null,null],[5,"os_dev_resume","","Resume the device operation.",null,null],[5,"os_dev_create","","Create a new device in the kernel.",null,null],[5,"os_dev_lookup","","Lookup a device by name.",null,null],[5,"os_dev_initialize_all","","Initialize all devices for a given state.",null,null],[5,"os_dev_suspend_all","","Suspend all devices.",null,null],[5,"os_dev_resume_all","","Resume all the devices that were suspended.",null,null],[5,"os_dev_open","","Open a device.",null,null],[5,"os_dev_close","","Close a device.",null,null],[5,"os_dev_reset","","Clears the device list. This function does not close any…",null,null],[5,"os_dev_walk","","Walk through all devices, calling callback for every device.",null,null],[5,"os_malloc","","Operating system level malloc(). This ensures that a safe…",null,null],[5,"os_free","","Operating system level free(). See description of…",null,null],[5,"os_realloc","","Operating system level realloc(). See description of…",null,null],[5,"os_mqueue_init","","Initializes an mqueue. An mqueue is a queue of mbufs that…",null,null],[5,"os_mqueue_get","","Remove and return a single mbuf from the mbuf queue. Does…",null,null],[5,"os_mqueue_put","","Adds a packet (i.e. packet header mbuf) to an mqueue. The…",null,null],[5,"os_msys_register","","MSYS is a system level mbuf registry. Allows the system to…",null,null],[5,"os_msys_get","","Allocate a mbuf from msys. Based upon the data size…",null,null],[5,"os_msys_reset","","De-registers all mbuf pools from msys.",null,null],[5,"os_msys_get_pkthdr","","Allocate a packet header structure from the MSYS pool. See…",null,null],[5,"os_msys_count","","Count the number of blocks in all the mbuf pools that are…",null,null],[5,"os_msys_num_free","","Return the number of free blocks in Msys",null,null],[5,"os_mbuf_pool_init","","Initialize a pool of mbufs.",null,null],[5,"os_mbuf_get","","Get an mbuf from the mbuf pool. The mbuf is allocated, and…",null,null],[5,"os_mbuf_get_pkthdr","","Allocate a new packet header mbuf out of the os_mbuf_pool.",null,null],[5,"os_mbuf_dup","","Duplicate a chain of mbufs. Return the start of the…",null,null],[5,"os_mbuf_off","","Locates the specified absolute offset within an mbuf…",null,null],[5,"os_mbuf_copydata","","",null,null],[5,"os_mbuf_len","","@brief Calculates the length of an mbuf chain.",null,null],[5,"os_mbuf_append","","Append data onto a mbuf",null,null],[5,"os_mbuf_appendfrom","","Reads data from one mbuf and appends it to another. On…",null,null],[5,"os_mbuf_free","","Release a mbuf back to the pool",null,null],[5,"os_mbuf_free_chain","","Free a chain of mbufs",null,null],[5,"os_mbuf_adj","","Adjust the length of a mbuf, trimming either from the head…",null,null],[5,"os_mbuf_cmpf","","Performs a memory compare of the specified region of an…",null,null],[5,"os_mbuf_cmpm","","Compares the contents of two mbuf chains. The ranges of…",null,null],[5,"os_mbuf_prepend","","Increases the length of an mbuf chain by adding data to…",null,null],[5,"os_mbuf_prepend_pullup","","Prepends a chunk of empty data to the specified mbuf chain…",null,null],[5,"os_mbuf_copyinto","","Copies the contents of a flat buffer into an mbuf chain,…",null,null],[5,"os_mbuf_concat","","Attaches a second mbuf chain onto the end of the first. If…",null,null],[5,"os_mbuf_extend","","Increases the length of an mbuf chain by the specified…",null,null],[5,"os_mbuf_pullup","","Rearrange a mbuf chain so that len bytes are contiguous,…",null,null],[5,"os_mbuf_trim_front","","Removes and frees empty mbufs from the front of a chain.…",null,null],[5,"os_mbuf_widen","","Increases the length of an mbuf chain by inserting a gap…",null,null],[5,"os_mempool_info_get_next","","Get information about the next system memory pool.",null,null],[5,"os_mempool_init","","Initialize a memory pool.",null,null],[5,"os_mempool_ext_init","","Initializes an extended memory pool. Extended attributes…",null,null],[5,"os_mempool_unregister","","Removes the specified mempool from the list of initialized…",null,null],[5,"os_mempool_clear","","Clears a memory pool.",null,null],[5,"os_mempool_is_sane","","",null,null],[5,"os_memblock_from","","Checks if a memory block was allocated from the specified…",null,null],[5,"os_memblock_get","","Get a memory block from a memory pool",null,null],[5,"os_memblock_put_from_cb","","Puts the memory block back into the pool, ignoring the put…",null,null],[5,"os_memblock_put","","Puts the memory block back into the pool",null,null],[5,"os_mutex_init","","Create a mutex and initialize it.",null,null],[5,"os_mutex_release","","Release a mutex.",null,null],[5,"os_mutex_pend","","Pend (wait) for a mutex.",null,null],[5,"os_sanity_init","","@cond INTERNAL_HIDDEN",null,null],[5,"os_sanity_run","","",null,null],[5,"os_sanity_task_checkin","","Provide a \"task checkin\" for the sanity task.",null,null],[5,"os_sanity_check_init","","Initialize a sanity check",null,null],[5,"os_sanity_check_register","","Register a sanity check",null,null],[5,"os_sanity_check_reset","","Reset the os sanity check, so that it doesn't trip up the…",null,null],[5,"os_task_remove","","Removes specified task XXX NOTE: This interface is…",null,null],[5,"os_task_count","","Return the number of tasks initialized.",null,null],[5,"os_task_info_get_next","","Iterate through tasks, and return the following…",null,null],[5,"os_sched_ctx_sw_hook","","",null,null],[5,"os_sched_get_current_task","","Returns the currently running task. Note that this task…",null,null],[5,"os_sched_set_current_task","","",null,null],[5,"os_sched_next_task","","",null,null],[5,"os_sched","","Performs context switch if needed. If next_t is set, that…",null,null],[5,"os_sched_os_timer_exp","","@cond INTERNAL_HIDDEN",null,null],[5,"os_sched_insert","","",null,null],[5,"os_sched_sleep","","",null,null],[5,"os_sched_wakeup","","",null,null],[5,"os_sched_remove","","",null,null],[5,"os_sched_resort","","",null,null],[5,"os_sched_wakeup_ticks","","",null,null],[5,"os_sem_init","","Initialize a semaphore",null,null],[5,"os_sem_release","","Release a semaphore.",null,null],[5,"os_sem_pend","","os sem pend",null,null],[5,"os_mempool_module_init","","",null,null],[5,"os_msys_init","","",null,null],[5,"os_tick_init","","Set up the periodic timer to interrupt at a frequency of…",null,null],[5,"os_tick_idle","","Halt CPU for up to 'n' ticks.",null,null],[7,"os_main_task","","",null,null],[7,"os_main_stack","","",null,null],[5,"os_idle_task","","Idle operating system task, runs when no other tasks are…",null,null],[5,"os_pkg_init","","",null,null],[6,"__uint8_t","","",null,null],[6,"__int16_t","","",null,null],[6,"__uint16_t","","",null,null],[6,"__int32_t","","",null,null],[6,"__uint32_t","","",null,null],[6,"__int64_t","","",null,null],[6,"os_sr_t","","",null,null],[6,"os_stack_t","","",null,null],[6,"os_error","","",null,null],[6,"os_time_t","","",null,null],[6,"os_stime_t","","",null,null],[6,"os_time_change_fn","","Callback that is executed when the time-of-day is set.",null,null],[6,"os_event_fn","","",null,null],[6,"hal_timer_cb","","",null,null],[6,"os_dev_init_func_t","","Initialize a device.",null,null],[6,"os_dev_open_func_t","","",null,null],[6,"os_dev_suspend_func_t","","",null,null],[6,"os_dev_resume_func_t","","",null,null],[6,"os_dev_close_func_t","","",null,null],[6,"os_mempool_put_fn","","Block put callback function. If configured, this callback…",null,null],[6,"os_membuf_t","","",null,null],[6,"os_sanity_check_func_t","","",null,null],[6,"os_task_state","","Task states",null,null],[6,"os_task_func_t","","",null,null],[17,"OS_WAIT_FOREVER","","",null,null],[17,"OS_IDLE_PRIO","","",null,null],[17,"OS_TICKS_PER_SEC","","",null,null],[17,"OS_SANITY_STACK_SIZE","","",null,null],[17,"OS_IDLE_STACK_SIZE","","",null,null],[17,"OS_STACK_PATTERN","","",null,null],[17,"OS_ALIGNMENT","","",null,null],[17,"OS_STACK_ALIGNMENT","","",null,null],[17,"OS_TIME_MAX","","",null,null],[17,"OS_STIME_MAX","","",null,null],[17,"OS_TIMEOUT_NEVER","","",null,null],[17,"OS_DEV_INIT_PRIMARY","","",null,null],[17,"OS_DEV_INIT_SECONDARY","","",null,null],[17,"OS_DEV_INIT_KERNEL","","",null,null],[17,"OS_DEV_INIT_F_CRITICAL","","",null,null],[17,"OS_DEV_INIT_PRIO_DEFAULT","","",null,null],[17,"OS_DEV_F_STATUS_READY","","",null,null],[17,"OS_DEV_F_STATUS_OPEN","","",null,null],[17,"OS_DEV_F_STATUS_SUSPENDED","","",null,null],[17,"OS_DEV_F_INIT_CRITICAL","","",null,null],[17,"OS_MEMPOOL_F_EXT","","",null,null],[17,"OS_MEMPOOL_INFO_NAME_LEN","","",null,null],[17,"OS_TASK_PRI_HIGHEST","","",null,null],[17,"OS_TASK_PRI_LOWEST","","",null,null],[17,"OS_TASK_FLAG_NO_TIMEOUT","","",null,null],[17,"OS_TASK_FLAG_SEM_WAIT","","",null,null],[17,"OS_TASK_FLAG_MUTEX_WAIT","","",null,null],[17,"OS_TASK_FLAG_EVQ_WAIT","","",null,null],[17,"OS_TASK_MAX_NAME_LEN","","",null,null],[17,"OS_TRACE_ID_EVENTQ_PUT","","",null,null],[17,"OS_TRACE_ID_EVENTQ_GET_NO_WAIT","","",null,null],[17,"OS_TRACE_ID_EVENTQ_GET","","",null,null],[17,"OS_TRACE_ID_EVENTQ_REMOVE","","",null,null],[17,"OS_TRACE_ID_EVENTQ_POLL_0TIMO","","",null,null],[17,"OS_TRACE_ID_EVENTQ_POLL","","",null,null],[17,"OS_TRACE_ID_MUTEX_INIT","","",null,null],[17,"OS_TRACE_ID_MUTEX_RELEASE","","",null,null],[17,"OS_TRACE_ID_MUTEX_PEND","","",null,null],[17,"OS_TRACE_ID_SEM_INIT","","",null,null],[17,"OS_TRACE_ID_SEM_RELEASE","","",null,null],[17,"OS_TRACE_ID_SEM_PEND","","",null,null],[17,"OS_TRACE_ID_CALLOUT_INIT","","",null,null],[17,"OS_TRACE_ID_CALLOUT_STOP","","",null,null],[17,"OS_TRACE_ID_CALLOUT_RESET","","",null,null],[17,"OS_TRACE_ID_CALLOUT_TICK","","",null,null],[17,"OS_TRACE_ID_MEMBLOCK_GET","","",null,null],[17,"OS_TRACE_ID_MEMBLOCK_PUT_FROM_CB","","",null,null],[17,"OS_TRACE_ID_MEMBLOCK_PUT","","",null,null],[17,"OS_TRACE_ID_MBUF_GET","","",null,null],[17,"OS_TRACE_ID_MBUF_GET_PKTHDR","","",null,null],[17,"OS_TRACE_ID_MBUF_FREE","","",null,null],[17,"OS_TRACE_ID_MBUF_FREE_CHAIN","","",null,null],[17,"SYS_EOK","","",null,null],[17,"SYS_ENOMEM","","",null,null],[17,"SYS_EINVAL","","",null,null],[17,"SYS_ETIMEOUT","","",null,null],[17,"SYS_ENOENT","","",null,null],[17,"SYS_EIO","","",null,null],[17,"SYS_EAGAIN","","",null,null],[17,"SYS_EACCES","","",null,null],[17,"SYS_EBUSY","","",null,null],[17,"SYS_ENODEV","","",null,null],[17,"SYS_ERANGE","","",null,null],[17,"SYS_EALREADY","","",null,null],[17,"SYS_ENOTSUP","","",null,null],[17,"SYS_EUNKNOWN","","",null,null],[17,"SYS_EREMOTEIO","","",null,null],[17,"SYS_EDONE","","",null,null],[17,"SYS_EPERUSER","","",null,null],[17,"OS_RUN_PRIV","","",null,null],[17,"OS_RUN_UNPRIV","","",null,null],[17,"os_error_OS_OK","","",null,null],[17,"os_error_OS_ENOMEM","","",null,null],[17,"os_error_OS_EINVAL","","",null,null],[17,"os_error_OS_INVALID_PARM","","",null,null],[17,"os_error_OS_MEM_NOT_ALIGNED","","",null,null],[17,"os_error_OS_BAD_MUTEX","","",null,null],[17,"os_error_OS_TIMEOUT","","",null,null],[17,"os_error_OS_ERR_IN_ISR","","",null,null],[17,"os_error_OS_ERR_PRIV","","",null,null],[17,"os_error_OS_NOT_STARTED","","",null,null],[17,"os_error_OS_ENOENT","","",null,null],[17,"os_error_OS_EBUSY","","",null,null],[17,"os_error_OS_ERROR","","",null,null],[17,"os_task_state_OS_TASK_READY","","Task is ready to run",null,null],[17,"os_task_state_OS_TASK_SLEEP","","Task is sleeping",null,null],[11,"new","","",4,[[],["self"]]],[11,"as_ptr","","",4,[[["self"]]]],[11,"as_mut_ptr","","",4,[[["self"]]]],[11,"as_slice","","",4,[[["self"],["usize"]]]],[11,"as_mut_slice","","",4,[[["self"],["usize"]]]],[0,"hw","mynewt","Mynewt Hardware API for Rust",null,null],[0,"hal","mynewt::hw","",null,null],[3,"hal_i2c_hw_settings","mynewt::hw::hal","I2C controller hardware settings",null,null],[12,"pin_scl","","",53,null],[12,"pin_sda","","",53,null],[3,"hal_i2c_settings","","I2C configuration",null,null],[12,"frequency","","Frequency in kHz",54,null],[3,"hal_i2c_master_data","","When sending a packet, use this structure to pass the…",null,null],[12,"address","","Destination address An I2C address has 7 bits. In the…",55,null],[12,"len","","Number of buffer bytes to transmit or receive",55,null],[12,"buffer","","Buffer space to hold the transmit or receive",55,null],[3,"hal_spi_hw_settings","","SPI controller hardware settings",null,null],[12,"pin_sck","","",56,null],[12,"pin_mosi","","",56,null],[12,"pin_miso","","",56,null],[12,"pin_ss","","",56,null],[3,"hal_spi_settings","","since one spi device can control multiple devices, some…",null,null],[12,"data_mode","","Data mode of SPI driver, defined by HAL_SPI_MODEn",57,null],[12,"data_order","","Data order, either HAL_SPI_MSB_FIRST or HAL_SPI_LSB_FIRST",57,null],[12,"word_size","","The word size of the SPI transaction, either 8-bit or 9-bit",57,null],[12,"baudrate","","Baudrate in kHz",57,null],[5,"hal_gpio_init_in","","Initializes the specified pin as an input",null,null],[5,"hal_gpio_init_out","","Initialize the specified pin as an output, setting the pin…",null,null],[5,"hal_gpio_deinit","","Deinitialize the specified pin to revert the previous…",null,null],[5,"hal_gpio_write","","Write a value (either high or low) to the specified pin.",null,null],[5,"hal_gpio_read","","Reads the specified pin.",null,null],[5,"hal_gpio_toggle","","Toggles the specified pin",null,null],[5,"hal_gpio_irq_init","","Initialize a given pin to trigger a GPIO IRQ callback.",null,null],[5,"hal_gpio_irq_release","","Release a pin from being configured to trigger IRQ on…",null,null],[5,"hal_gpio_irq_enable","","Enable IRQs on the passed pin",null,null],[5,"hal_gpio_irq_disable","","Disable IRQs on the passed pin",null,null],[5,"hal_i2c_init","","Initialize a new i2c device with the I2C number.",null,null],[5,"hal_i2c_init_hw","","Initialize I2C controller",null,null],[5,"hal_i2c_enable","","Enable I2C controller",null,null],[5,"hal_i2c_disable","","Disable I2C controller",null,null],[5,"hal_i2c_config","","Configure I2C controller",null,null],[5,"hal_i2c_master_write","","Sends a start condition and writes bytes of data on the…",null,null],[5,"hal_i2c_master_read","","Sends a start condition and reads bytes of data on the i2c…",null,null],[5,"hal_i2c_master_probe","","Probes the i2c bus for a device with this address. THIS…",null,null],[5,"hal_spi_init","","Initialize the SPI, given by spi_num.",null,null],[5,"hal_spi_init_hw","","Initialize SPI controller",null,null],[5,"hal_spi_config","","Configure the spi. Must be called after the spi is…",null,null],[5,"hal_spi_set_txrx_cb","","Sets the txrx callback (executed at interrupt context)…",null,null],[5,"hal_spi_enable","","Enables the SPI. This does not start a transmit or receive…",null,null],[5,"hal_spi_disable","","Disables the SPI. Used for power mgmt. It will halt any…",null,null],[5,"hal_spi_tx_val","","Blocking call to send a value on the SPI. Returns the…",null,null],[5,"hal_spi_txrx","","Blocking interface to send a buffer and store the received…",null,null],[5,"hal_spi_txrx_noblock","","Non-blocking interface to send a buffer and store received…",null,null],[5,"hal_spi_slave_set_def_tx_val","","Sets the default value transferred by the slave. Not valid…",null,null],[5,"hal_spi_abort","","This aborts the current transfer but keeps the spi enabled.",null,null],[5,"hal_spi_data_mode_breakout","","Extracts CPOL and CPHA values from a data-mode constant.…",null,null],[6,"hal_gpio_mode_e","","The \"mode\" of the gpio. The gpio is either an input,…",null,null],[6,"hal_gpio_pull","","",null,null],[6,"hal_gpio_irq_trigger","","",null,null],[6,"hal_gpio_irq_handler_t","","",null,null],[6,"__uint8_t","","",null,null],[6,"__uint16_t","","",null,null],[6,"__uint32_t","","",null,null],[6,"hal_spi_txrx_cb","","",null,null],[17,"HAL_ADC_MODULE_ENABLED","","",null,null],[17,"HAL_I2C_ERR_UNKNOWN","","",null,null],[17,"HAL_I2C_ERR_INVAL","","",null,null],[17,"HAL_I2C_ERR_TIMEOUT","","",null,null],[17,"HAL_I2C_ERR_ADDR_NACK","","",null,null],[17,"HAL_I2C_ERR_DATA_NACK","","",null,null],[17,"HAL_SPI_TYPE_MASTER","","",null,null],[17,"HAL_SPI_TYPE_SLAVE","","",null,null],[17,"HAL_SPI_MODE0","","",null,null],[17,"HAL_SPI_MODE1","","",null,null],[17,"HAL_SPI_MODE2","","",null,null],[17,"HAL_SPI_MODE3","","",null,null],[17,"HAL_SPI_MSB_FIRST","","",null,null],[17,"HAL_SPI_LSB_FIRST","","",null,null],[17,"HAL_SPI_WORD_SIZE_8BIT","","",null,null],[17,"HAL_SPI_WORD_SIZE_9BIT","","",null,null],[17,"hal_gpio_mode_e_HAL_GPIO_MODE_NC","","Not connected",null,null],[17,"hal_gpio_mode_e_HAL_GPIO_MODE_IN","","Input",null,null],[17,"hal_gpio_mode_e_HAL_GPIO_MODE_OUT","","Output",null,null],[17,"hal_gpio_pull_HAL_GPIO_PULL_NONE","","Pull-up/down not enabled",null,null],[17,"hal_gpio_pull_HAL_GPIO_PULL_UP","","Pull-up enabled",null,null],[17,"hal_gpio_pull_HAL_GPIO_PULL_DOWN","","Pull-down enabled",null,null],[17,"hal_gpio_irq_trigger_HAL_GPIO_TRIG_NONE","","",null,null],[17,"hal_gpio_irq_trigger_HAL_GPIO_TRIG_RISING","","IRQ occurs on rising edge",null,null],[17,"hal_gpio_irq_trigger_HAL_GPIO_TRIG_FALLING","","IRQ occurs on falling edge",null,null],[17,"hal_gpio_irq_trigger_HAL_GPIO_TRIG_BOTH","","IRQ occurs on either edge",null,null],[17,"hal_gpio_irq_trigger_HAL_GPIO_TRIG_LOW","","IRQ occurs when line is low",null,null],[17,"hal_gpio_irq_trigger_HAL_GPIO_TRIG_HIGH","","IRQ occurs when line is high",null,null],[0,"sensor","mynewt::hw","Contains the Mynewt Sensor API for Rust, including the…",null,null],[3,"__BindgenBitfieldUnit","mynewt::hw::sensor","",null,null],[12,"storage","","",58,null],[12,"align","","",58,null],[3,"__BindgenUnionField","","",null,null],[12,"0","","",59,null],[3,"os_event__bindgen_ty_1","","",null,null],[12,"stqe_next","","",60,null],[3,"os_eventq__bindgen_ty_1","","",null,null],[12,"stqh_first","","",61,null],[12,"stqh_last","","",61,null],[3,"os_callout__bindgen_ty_1","","",null,null],[12,"tqe_next","","",62,null],[12,"tqe_prev","","",62,null],[3,"os_dev__bindgen_ty_1","","",null,null],[12,"stqe_next","","",63,null],[3,"os_memblock__bindgen_ty_1","","",null,null],[12,"sle_next","","",64,null],[3,"os_mempool__bindgen_ty_1","","",null,null],[12,"stqe_next","","",65,null],[3,"os_mempool__bindgen_ty_2","","",null,null],[12,"slh_first","","",66,null],[3,"os_mutex__bindgen_ty_1","","",null,null],[12,"slh_first","","",67,null],[3,"os_sanity_check__bindgen_ty_1","","",null,null],[12,"sle_next","","",68,null],[3,"os_task__bindgen_ty_1","","",null,null],[12,"stqe_next","","",69,null],[3,"os_task__bindgen_ty_2","","",null,null],[12,"tqe_next","","",70,null],[12,"tqe_prev","","",70,null],[3,"os_task__bindgen_ty_3","","",null,null],[12,"sle_next","","",71,null],[3,"sensor_cfg","","Configuration structure, describing a specific sensor type…",null,null],[12,"sc_valtype","","",72,null],[12,"_reserved","","",72,null],[3,"sensor_data_t","","",null,null],[12,"smd","","",73,null],[12,"sad","","",73,null],[12,"sed","","",73,null],[12,"sqd","","",73,null],[12,"slad","","",73,null],[12,"sgrd","","",73,null],[12,"sgd","","",73,null],[12,"std","","",73,null],[12,"satd","","",73,null],[12,"sld","","",73,null],[12,"scd","","",73,null],[12,"spd","","",73,null],[12,"srhd","","",73,null],[12,"bindgen_union_field","","",73,null],[3,"sensor_listener","","",null,null],[12,"sl_sensor_type","","",74,null],[12,"sl_func","","",74,null],[12,"sl_arg","","",74,null],[12,"sl_next","","",74,null],[3,"sensor_listener__bindgen_ty_1","","",null,null],[12,"sle_next","","",75,null],[3,"sensor_notifier","","Registration for sensor event notifications",null,null],[12,"sn_sensor_event_type","","",76,null],[12,"sn_func","","",76,null],[12,"sn_arg","","",76,null],[12,"sn_next","","",76,null],[3,"sensor_notifier__bindgen_ty_1","","",null,null],[12,"sle_next","","",77,null],[3,"sensor_read_ev_ctx","","Context for sensor read events",null,null],[12,"srec_sensor","","",78,null],[12,"srec_type","","",78,null],[3,"sensor_type_traits","","Sensor type traits list",null,null],[12,"stt_sensor_type","","",79,null],[12,"stt_low_thresh","","",79,null],[12,"stt_high_thresh","","",79,null],[12,"stt_algo","","",79,null],[12,"stt_poll_n","","",79,null],[12,"stt_polls_left","","",79,null],[12,"stt_trigger_cmp_algo","","",79,null],[12,"stt_sensor","","",79,null],[12,"stt_next","","",79,null],[3,"sensor_type_traits__bindgen_ty_1","","",null,null],[12,"sle_next","","",80,null],[3,"sensor_notify_ev_ctx","","",null,null],[12,"snec_sensor","","",81,null],[12,"snec_evtype","","",81,null],[3,"sensor_notify_os_ev","","",null,null],[12,"snoe_evt","","",82,null],[12,"snoe_evtype","","",82,null],[12,"snoe_sensor","","",82,null],[3,"sensor_driver","","",null,null],[12,"sd_read","","",83,null],[12,"sd_get_config","","",83,null],[12,"sd_set_config","","",83,null],[12,"sd_set_trigger_thresh","","",83,null],[12,"sd_clear_low_trigger_thresh","","",83,null],[12,"sd_clear_high_trigger_thresh","","",83,null],[12,"sd_set_notification","","",83,null],[12,"sd_unset_notification","","",83,null],[12,"sd_handle_interrupt","","",83,null],[12,"sd_reset","","",83,null],[3,"sensor_timestamp","","",null,null],[12,"st_ostv","","",84,null],[12,"st_ostz","","",84,null],[12,"st_cputime","","",84,null],[3,"sensor_int","","",null,null],[12,"host_pin","","",85,null],[12,"device_pin","","",85,null],[12,"active","","",85,null],[3,"sensor_itf","","",null,null],[12,"si_type","","",86,null],[12,"si_num","","",86,null],[12,"si_cs_pin","","",86,null],[12,"si_addr","","",86,null],[12,"si_lock","","",86,null],[12,"si_low_pin","","",86,null],[12,"si_high_pin","","",86,null],[12,"si_ints","","",86,null],[3,"sensor","","",null,null],[12,"s_dev","","",87,null],[12,"s_lock","","",87,null],[12,"s_types","","",87,null],[12,"s_mask","","",87,null],[12,"s_poll_rate","","Poll rate in MS for this sensor.",87,null],[12,"s_next_run","","",87,null],[12,"s_funcs","","",87,null],[12,"s_sts","","",87,null],[12,"s_itf","","",87,null],[12,"s_interrupt_evt","","",87,null],[12,"s_listener_list","","",87,null],[12,"s_err_fn","","",87,null],[12,"s_err_arg","","",87,null],[12,"s_notifier_list","","",87,null],[12,"s_type_traits_list","","",87,null],[12,"s_next","","",87,null],[3,"sensor__bindgen_ty_1","","",null,null],[12,"slh_first","","",88,null],[3,"sensor__bindgen_ty_2","","",null,null],[12,"slh_first","","",89,null],[3,"sensor__bindgen_ty_3","","",null,null],[12,"slh_first","","",90,null],[3,"sensor__bindgen_ty_4","","",null,null],[12,"sle_next","","",91,null],[3,"sensor_read_ctx","","Read context for calling user function with argument",null,null],[12,"user_func","","",92,null],[12,"user_arg","","",92,null],[3,"sensor_accel_data","","",null,null],[12,"sad_x","","",93,null],[12,"sad_y","","",93,null],[12,"sad_z","","",93,null],[12,"_bitfield_1","","",93,null],[3,"sensor_mag_data","","",null,null],[12,"smd_x","","",94,null],[12,"smd_y","","",94,null],[12,"smd_z","","",94,null],[12,"_bitfield_1","","",94,null],[3,"sensor_light_data","","",null,null],[12,"sld_full","","",95,null],[12,"sld_ir","","",95,null],[12,"sld_lux","","",95,null],[12,"_bitfield_1","","",95,null],[3,"sensor_quat_data","","",null,null],[12,"sqd_x","","",96,null],[12,"sqd_y","","",96,null],[12,"sqd_z","","",96,null],[12,"sqd_w","","",96,null],[12,"_bitfield_1","","",96,null],[3,"sensor_euler_data","","",null,null],[12,"sed_h","","",97,null],[12,"sed_r","","",97,null],[12,"sed_p","","",97,null],[12,"_bitfield_1","","",97,null],[3,"sensor_color_data","","",null,null],[12,"scd_r","","",98,null],[12,"scd_g","","",98,null],[12,"scd_b","","",98,null],[12,"scd_c","","",98,null],[12,"scd_lux","","",98,null],[12,"scd_colortemp","","",98,null],[12,"scd_saturation","","",98,null],[12,"scd_saturation75","","",98,null],[12,"scd_is_sat","","",98,null],[12,"scd_cratio","","",98,null],[12,"scd_maxlux","","",98,null],[12,"scd_ir","","",98,null],[12,"_bitfield_1","","",98,null],[3,"sensor_temp_data","","",null,null],[12,"std_temp","","",99,null],[12,"_bitfield_1","","",99,null],[3,"sensor_press_data","","",null,null],[12,"spd_press","","",100,null],[12,"_bitfield_1","","",100,null],[3,"sensor_humid_data","","",null,null],[12,"shd_humid","","",101,null],[12,"_bitfield_1","","",101,null],[3,"sensor_gyro_data","","",null,null],[12,"sgd_x","","",102,null],[12,"sgd_y","","",102,null],[12,"sgd_z","","",102,null],[12,"_bitfield_1","","",102,null],[3,"_bindgen_ty_1","","",null,null],[12,"mgr_lock","","",103,null],[12,"mgr_wakeup_callout","","",103,null],[12,"mgr_eventq","","",103,null],[12,"mgr_sensor_list","","",103,null],[3,"_bindgen_ty_1__bindgen_ty_1","","",null,null],[12,"slh_first","","",104,null],[3,"sensor_listener_info","","Define the info needed for converting sensor data into…",null,null],[12,"sensor_key","","",105,null],[12,"sensor_type","","",105,null],[12,"listener_func","","",105,null],[12,"listener","","",105,null],[3,"SensorValue","","Represents a decoded sensor data value. Since temperature…",null,null],[12,"key","","Null-terminated string for the key. `t` for raw temp,…",106,null],[12,"value","","The type of the sensor value and the value.",106,null],[12,"geo","","Geolocation associated with the sensor value.",106,null],[3,"sensor_temp_raw_data","","Represents a single temperature sensor raw value. TODO:…",null,null],[12,"strd_temp_raw","","Raw temp from STM32 Internal Temp Sensor is 0 to 4095.",107,null],[12,"strd_temp_raw_is_valid","","1 if data is valid",107,null],[3,"sensor_geolocation_data","","Represents a GPS Geolocation. TODO: Must sync with…",null,null],[12,"sgd_latitude","","Latitude (degrees)",108,null],[12,"sgd_longitude","","Longitude (degrees)",108,null],[12,"sgd_altitude","","Altitude (metres)",108,null],[12,"sgd_latitude_is_valid","","1 if latitude is valid",108,null],[12,"sgd_longitude_is_valid","","1 if longitude is valid",108,null],[12,"sgd_altitude_is_valid","","1 if altitude is valid",108,null],[4,"SensorValueType","","Represents the type and value of a sensor data value.",null,null],[13,"None","","No value.",109,null],[13,"Uint","","32-bit unsigned integer. For raw temp, contains the raw…",109,null],[5,"read","","Read the data for sensor type \"type,\" from the given…",null,[[["u32"],["sensor_type_t"],["sensor_data_func_t"],["ptr"]],["mynewtresult"]]],[5,"mgr_find_next_bydevname","","Search the sensor list and find the next sensor that…",null,[[["strn"]],["mynewtresult"]]],[5,"set_poll_rate_ms","","Set the sensor poll rate",null,[[["u32"],["strn"]],["mynewtresult"]]],[5,"convert_sensor_data","","Convert the sensor data received from Mynewt into a…",null,[[["sensor_data_ptr"],["strn"],["sensor_type_t"]],["sensorvalue"]]],[5,"register_listener","","Register a sensor listener. This allows a calling…",null,[[["sensor_listener"]],["mynewtresult"]]],[5,"new_sensor_listener","","Return a new `sensor_listener` with the sensor type and…",null,[[["strn"],["sensor_type_t"],["sensorvaluefunc"]],[["sensor_listener"],["mynewtresult",["sensor_listener"]]]]],[5,"wrap_sensor_listener","","Wrapped Sensor Listener that converts Mynewt `sensor_data`…",null,[[["sensor_type_t"],["sensor_ptr"],["sensor_arg"],["sensor_data_ptr"]],["i32"]]],[5,"null_sensor_data_func","","Define a default sensor data function in case there is none.",null,[[["sensor_type_t"],["sensor_ptr"],["sensor_arg"],["sensor_data_ptr"]],["i32"]]],[5,"null_sensor_value_func","","Define a default sensor value function in case there is…",null,[[["sensorvalue"]],["mynewtresult"]]],[5,"as_untyped","","Cast sensor data function from typed to untyped",null,[[["sensor_data_func"]],[["option",["sensor_data_func_untyped"]],["sensor_data_func_untyped"]]]],[5,"sensor_pkg_init","","Package init function. Remove when we have post-kernel…",null,null],[5,"sensor_itf_lock","","Lock access to the sensor_itf specified by si. Blocks…",null,null],[5,"sensor_itf_unlock","","Unlock access to the sensor_itf specified by si.",null,null],[5,"sensor_init","","Initialize a sensor",null,null],[5,"sensor_lock","","Lock access to the sensor specified by sensor. Blocks…",null,null],[5,"sensor_unlock","","Unlock access to the sensor specified by sensor.",null,null],[5,"sensor_register_listener","","Register a sensor listener. This allows a calling…",null,null],[5,"sensor_unregister_listener","","Un-register a sensor listener. This allows a calling…",null,null],[5,"sensor_register_err_func","","Register a sensor error callback. The callback is executed…",null,null],[5,"sensor_register_notifier","","Register a sensor notifier. This allows a calling…",null,null],[5,"sensor_unregister_notifier","","Un-register a sensor notifier. This allows a calling…",null,null],[5,"sensor_mgr_lock","","Lock sensor manager to access the list of sensors",null,null],[5,"sensor_mgr_unlock","","Unlock sensor manager once the list of sensors has been…",null,null],[5,"sensor_mgr_register","","Register the sensor with the global sensor list. This…",null,null],[5,"sensor_mgr_evq_get","","Get the current eventq, the system is misconfigured if…",null,null],[5,"sensor_mgr_find_next","","The sensor manager contains a list of sensors, this…",null,null],[5,"sensor_mgr_find_next_bytype","","Find the \"next\" sensor available for a given sensor type.",null,null],[5,"sensor_mgr_match_bytype","","Check if sensor type matches",null,null],[5,"sensor_set_n_poll_rate","","Set the sensor poll rate multiple based on the device…",null,null],[5,"sensor_oic_tx_trigger","","Transmit OIC trigger",null,null],[5,"sensor_trigger_init","","Sensor trigger initialization",null,null],[5,"sensor_get_type_traits_bytype","","Search the sensor type traits list for specific type of…",null,null],[5,"sensor_get_type_traits_byname","","Get the type traits for a sensor",null,null],[5,"sensor_set_thresh","","Set the thresholds along with the comparison algo for a…",null,null],[5,"sensor_clear_low_thresh","","Clears the low threshold for a sensor",null,null],[5,"sensor_clear_high_thresh","","Clears the high threshold for a sensor",null,null],[5,"sensor_mgr_put_notify_evt","","Puts a notification event on the sensor manager evq",null,null],[5,"sensor_mgr_put_interrupt_evt","","Puts a interrupt event on the sensor manager evq",null,null],[5,"sensor_mgr_put_read_evt","","Puts read event on the sensor manager evq",null,null],[5,"sensor_reset","","Resets the sensor",null,null],[7,"sensor_mgr","","",null,null],[7,"sensor_base_ts","","",null,null],[7,"sensor_read_event","","",null,null],[7,"sensor_notify_evt_pool","","",null,null],[7,"sensor_notify_evt_area","","",null,null],[5,"get_temp_raw_data","","Interpret `sensor_data` as a `sensor_temp_raw_data` struct…",null,null],[5,"get_temp_data","","Interpret `sensor_data` as a `sensor_temp_data` struct…",null,null],[5,"get_geolocation_data","","Interpret `sensor_data` as a `sensor_geolocation_data`…",null,null],[5,"sensor_get_device","","Return the Mynewt device for the Mynewt sensor. C API:…",null,null],[5,"null_sensor","","Return the NULL sensor. C API: `struct sensor…",null,null],[5,"is_null_sensor","","Return non-zero if sensor is NULL. C API: `int…",null,null],[5,"is_null_sensor_data","","Return non-zero if sensor data is NULL. C API: `int…",null,null],[0,"bindings","","Contains the auto-generated Rust bindings for the Mynewt…",null,null],[3,"__BindgenBitfieldUnit","mynewt::hw::sensor::bindings","",null,null],[12,"storage","","",58,null],[12,"align","","",58,null],[3,"__BindgenUnionField","","",null,null],[12,"0","","",59,null],[3,"os_event__bindgen_ty_1","","",null,null],[12,"stqe_next","","",60,null],[3,"os_eventq__bindgen_ty_1","","",null,null],[12,"stqh_first","","",61,null],[12,"stqh_last","","",61,null],[3,"os_callout__bindgen_ty_1","","",null,null],[12,"tqe_next","","",62,null],[12,"tqe_prev","","",62,null],[3,"os_dev__bindgen_ty_1","","",null,null],[12,"stqe_next","","",63,null],[3,"os_memblock__bindgen_ty_1","","",null,null],[12,"sle_next","","",64,null],[3,"os_mempool__bindgen_ty_1","","",null,null],[12,"stqe_next","","",65,null],[3,"os_mempool__bindgen_ty_2","","",null,null],[12,"slh_first","","",66,null],[3,"os_mutex__bindgen_ty_1","","",null,null],[12,"slh_first","","",67,null],[3,"os_sanity_check__bindgen_ty_1","","",null,null],[12,"sle_next","","",68,null],[3,"os_task__bindgen_ty_1","","",null,null],[12,"stqe_next","","",69,null],[3,"os_task__bindgen_ty_2","","",null,null],[12,"tqe_next","","",70,null],[12,"tqe_prev","","",70,null],[3,"os_task__bindgen_ty_3","","",null,null],[12,"sle_next","","",71,null],[3,"sensor_cfg","","Configuration structure, describing a specific sensor type…",null,null],[12,"sc_valtype","","",72,null],[12,"_reserved","","",72,null],[3,"sensor_data_t","","",null,null],[12,"smd","","",73,null],[12,"sad","","",73,null],[12,"sed","","",73,null],[12,"sqd","","",73,null],[12,"slad","","",73,null],[12,"sgrd","","",73,null],[12,"sgd","","",73,null],[12,"std","","",73,null],[12,"satd","","",73,null],[12,"sld","","",73,null],[12,"scd","","",73,null],[12,"spd","","",73,null],[12,"srhd","","",73,null],[12,"bindgen_union_field","","",73,null],[3,"sensor_listener","","",null,null],[12,"sl_sensor_type","","",74,null],[12,"sl_func","","",74,null],[12,"sl_arg","","",74,null],[12,"sl_next","","",74,null],[3,"sensor_listener__bindgen_ty_1","","",null,null],[12,"sle_next","","",75,null],[3,"sensor_notifier","","Registration for sensor event notifications",null,null],[12,"sn_sensor_event_type","","",76,null],[12,"sn_func","","",76,null],[12,"sn_arg","","",76,null],[12,"sn_next","","",76,null],[3,"sensor_notifier__bindgen_ty_1","","",null,null],[12,"sle_next","","",77,null],[3,"sensor_read_ev_ctx","","Context for sensor read events",null,null],[12,"srec_sensor","","",78,null],[12,"srec_type","","",78,null],[3,"sensor_type_traits","","Sensor type traits list",null,null],[12,"stt_sensor_type","","",79,null],[12,"stt_low_thresh","","",79,null],[12,"stt_high_thresh","","",79,null],[12,"stt_algo","","",79,null],[12,"stt_poll_n","","",79,null],[12,"stt_polls_left","","",79,null],[12,"stt_trigger_cmp_algo","","",79,null],[12,"stt_sensor","","",79,null],[12,"stt_next","","",79,null],[3,"sensor_type_traits__bindgen_ty_1","","",null,null],[12,"sle_next","","",80,null],[3,"sensor_notify_ev_ctx","","",null,null],[12,"snec_sensor","","",81,null],[12,"snec_evtype","","",81,null],[3,"sensor_notify_os_ev","","",null,null],[12,"snoe_evt","","",82,null],[12,"snoe_evtype","","",82,null],[12,"snoe_sensor","","",82,null],[3,"sensor_driver","","",null,null],[12,"sd_read","","",83,null],[12,"sd_get_config","","",83,null],[12,"sd_set_config","","",83,null],[12,"sd_set_trigger_thresh","","",83,null],[12,"sd_clear_low_trigger_thresh","","",83,null],[12,"sd_clear_high_trigger_thresh","","",83,null],[12,"sd_set_notification","","",83,null],[12,"sd_unset_notification","","",83,null],[12,"sd_handle_interrupt","","",83,null],[12,"sd_reset","","",83,null],[3,"sensor_timestamp","","",null,null],[12,"st_ostv","","",84,null],[12,"st_ostz","","",84,null],[12,"st_cputime","","",84,null],[3,"sensor_int","","",null,null],[12,"host_pin","","",85,null],[12,"device_pin","","",85,null],[12,"active","","",85,null],[3,"sensor_itf","","",null,null],[12,"si_type","","",86,null],[12,"si_num","","",86,null],[12,"si_cs_pin","","",86,null],[12,"si_addr","","",86,null],[12,"si_lock","","",86,null],[12,"si_low_pin","","",86,null],[12,"si_high_pin","","",86,null],[12,"si_ints","","",86,null],[3,"sensor","","",null,null],[12,"s_dev","","",87,null],[12,"s_lock","","",87,null],[12,"s_types","","",87,null],[12,"s_mask","","",87,null],[12,"s_poll_rate","","Poll rate in MS for this sensor.",87,null],[12,"s_next_run","","",87,null],[12,"s_funcs","","",87,null],[12,"s_sts","","",87,null],[12,"s_itf","","",87,null],[12,"s_interrupt_evt","","",87,null],[12,"s_listener_list","","",87,null],[12,"s_err_fn","","",87,null],[12,"s_err_arg","","",87,null],[12,"s_notifier_list","","",87,null],[12,"s_type_traits_list","","",87,null],[12,"s_next","","",87,null],[3,"sensor__bindgen_ty_1","","",null,null],[12,"slh_first","","",88,null],[3,"sensor__bindgen_ty_2","","",null,null],[12,"slh_first","","",89,null],[3,"sensor__bindgen_ty_3","","",null,null],[12,"slh_first","","",90,null],[3,"sensor__bindgen_ty_4","","",null,null],[12,"sle_next","","",91,null],[3,"sensor_read_ctx","","Read context for calling user function with argument",null,null],[12,"user_func","","",92,null],[12,"user_arg","","",92,null],[3,"sensor_accel_data","","",null,null],[12,"sad_x","","",93,null],[12,"sad_y","","",93,null],[12,"sad_z","","",93,null],[12,"_bitfield_1","","",93,null],[3,"sensor_mag_data","","",null,null],[12,"smd_x","","",94,null],[12,"smd_y","","",94,null],[12,"smd_z","","",94,null],[12,"_bitfield_1","","",94,null],[3,"sensor_light_data","","",null,null],[12,"sld_full","","",95,null],[12,"sld_ir","","",95,null],[12,"sld_lux","","",95,null],[12,"_bitfield_1","","",95,null],[3,"sensor_quat_data","","",null,null],[12,"sqd_x","","",96,null],[12,"sqd_y","","",96,null],[12,"sqd_z","","",96,null],[12,"sqd_w","","",96,null],[12,"_bitfield_1","","",96,null],[3,"sensor_euler_data","","",null,null],[12,"sed_h","","",97,null],[12,"sed_r","","",97,null],[12,"sed_p","","",97,null],[12,"_bitfield_1","","",97,null],[3,"sensor_color_data","","",null,null],[12,"scd_r","","",98,null],[12,"scd_g","","",98,null],[12,"scd_b","","",98,null],[12,"scd_c","","",98,null],[12,"scd_lux","","",98,null],[12,"scd_colortemp","","",98,null],[12,"scd_saturation","","",98,null],[12,"scd_saturation75","","",98,null],[12,"scd_is_sat","","",98,null],[12,"scd_cratio","","",98,null],[12,"scd_maxlux","","",98,null],[12,"scd_ir","","",98,null],[12,"_bitfield_1","","",98,null],[3,"sensor_temp_data","","",null,null],[12,"std_temp","","",99,null],[12,"_bitfield_1","","",99,null],[3,"sensor_press_data","","",null,null],[12,"spd_press","","",100,null],[12,"_bitfield_1","","",100,null],[3,"sensor_humid_data","","",null,null],[12,"shd_humid","","",101,null],[12,"_bitfield_1","","",101,null],[3,"sensor_gyro_data","","",null,null],[12,"sgd_x","","",102,null],[12,"sgd_y","","",102,null],[12,"sgd_z","","",102,null],[12,"_bitfield_1","","",102,null],[3,"_bindgen_ty_1","","",null,null],[12,"mgr_lock","","",103,null],[12,"mgr_wakeup_callout","","",103,null],[12,"mgr_eventq","","",103,null],[12,"mgr_sensor_list","","",103,null],[3,"_bindgen_ty_1__bindgen_ty_1","","",null,null],[12,"slh_first","","",104,null],[5,"read","","Read the data for sensor type \"type,\" from the given…",null,[[["u32"],["sensor_type_t"],["sensor_data_func_t"],["ptr"]],["mynewtresult"]]],[5,"mgr_find_next_bydevname","","Search the sensor list and find the next sensor that…",null,[[["strn"]],["mynewtresult"]]],[5,"set_poll_rate_ms","","Set the sensor poll rate",null,[[["u32"],["strn"]],["mynewtresult"]]],[5,"sensor_pkg_init","","Package init function. Remove when we have post-kernel…",null,null],[5,"sensor_itf_lock","","Lock access to the sensor_itf specified by si. Blocks…",null,null],[5,"sensor_itf_unlock","","Unlock access to the sensor_itf specified by si.",null,null],[5,"sensor_init","","Initialize a sensor",null,null],[5,"sensor_lock","","Lock access to the sensor specified by sensor. Blocks…",null,null],[5,"sensor_unlock","","Unlock access to the sensor specified by sensor.",null,null],[5,"sensor_register_listener","","Register a sensor listener. This allows a calling…",null,null],[5,"sensor_unregister_listener","","Un-register a sensor listener. This allows a calling…",null,null],[5,"sensor_register_err_func","","Register a sensor error callback. The callback is executed…",null,null],[5,"sensor_register_notifier","","Register a sensor notifier. This allows a calling…",null,null],[5,"sensor_unregister_notifier","","Un-register a sensor notifier. This allows a calling…",null,null],[5,"sensor_mgr_lock","","Lock sensor manager to access the list of sensors",null,null],[5,"sensor_mgr_unlock","","Unlock sensor manager once the list of sensors has been…",null,null],[5,"sensor_mgr_register","","Register the sensor with the global sensor list. This…",null,null],[5,"sensor_mgr_evq_get","","Get the current eventq, the system is misconfigured if…",null,null],[5,"sensor_mgr_find_next","","The sensor manager contains a list of sensors, this…",null,null],[5,"sensor_mgr_find_next_bytype","","Find the \"next\" sensor available for a given sensor type.",null,null],[5,"sensor_mgr_match_bytype","","Check if sensor type matches",null,null],[5,"sensor_set_n_poll_rate","","Set the sensor poll rate multiple based on the device…",null,null],[5,"sensor_oic_tx_trigger","","Transmit OIC trigger",null,null],[5,"sensor_trigger_init","","Sensor trigger initialization",null,null],[5,"sensor_get_type_traits_bytype","","Search the sensor type traits list for specific type of…",null,null],[5,"sensor_get_type_traits_byname","","Get the type traits for a sensor",null,null],[5,"sensor_set_thresh","","Set the thresholds along with the comparison algo for a…",null,null],[5,"sensor_clear_low_thresh","","Clears the low threshold for a sensor",null,null],[5,"sensor_clear_high_thresh","","Clears the high threshold for a sensor",null,null],[5,"sensor_mgr_put_notify_evt","","Puts a notification event on the sensor manager evq",null,null],[5,"sensor_mgr_put_interrupt_evt","","Puts a interrupt event on the sensor manager evq",null,null],[5,"sensor_mgr_put_read_evt","","Puts read event on the sensor manager evq",null,null],[5,"sensor_reset","","Resets the sensor",null,null],[7,"sensor_mgr","","",null,null],[7,"sensor_base_ts","","",null,null],[7,"sensor_read_event","","",null,null],[7,"sensor_notify_evt_pool","","",null,null],[7,"sensor_notify_evt_area","","",null,null],[6,"__uint8_t","","",null,null],[6,"__int16_t","","",null,null],[6,"__uint16_t","","",null,null],[6,"__int32_t","","",null,null],[6,"__uint32_t","","",null,null],[6,"__int64_t","","",null,null],[6,"os_stack_t","","",null,null],[6,"os_time_t","","",null,null],[6,"os_event_fn","","",null,null],[6,"os_dev_init_func_t","","Initialize a device.",null,null],[6,"os_dev_open_func_t","","",null,null],[6,"os_dev_suspend_func_t","","",null,null],[6,"os_dev_resume_func_t","","",null,null],[6,"os_dev_close_func_t","","",null,null],[6,"os_membuf_t","","",null,null],[6,"os_sanity_check_func_t","","",null,null],[6,"os_task_func_t","","",null,null],[6,"sensor_type_t","","",null,null],[6,"sensor_event_type_t","","",null,null],[6,"sensor_data_func_t","","Callback for handling sensor data, specified in a sensor…",null,null],[6,"sensor_trigger_notify_func_t","","Callback for sending trigger notification.",null,null],[6,"sensor_trigger_cmp_func_t","","Callback for trigger compare functions.",null,null],[6,"sensor_notifier_func_t","","Callback for event notifications.",null,null],[6,"sensor_error_func_t","","Callback for reporting a sensor read error.",null,null],[6,"sensor_read_func_t","","Read a single value from a sensor, given a specific sensor…",null,null],[6,"sensor_get_config_func_t","","Get the configuration of the sensor for the sensor type.…",null,null],[6,"sensor_set_config_func_t","","Send a new configuration register set to the sensor.",null,null],[6,"sensor_set_trigger_thresh_t","","Set the trigger and threshold values for a specific sensor…",null,null],[6,"sensor_clear_trigger_thresh_t","","Clear the high/low threshold values for a specific sensor…",null,null],[6,"sensor_set_notification_t","","Set the notification expectation for a targeted set of…",null,null],[6,"sensor_unset_notification_t","","Unset the notification expectation for a targeted set of…",null,null],[6,"sensor_handle_interrupt_t","","Let driver handle interrupt in the sensor context",null,null],[6,"sensor_reset_t","","Reset Sensor function Ptr",null,null],[6,"sensor_mgr_compare_func_t","","",null,null],[17,"SENSOR_VALUE_TYPE_OPAQUE","","",null,null],[17,"SENSOR_VALUE_TYPE_INT32","","",null,null],[17,"SENSOR_VALUE_TYPE_FLOAT","","",null,null],[17,"SENSOR_VALUE_TYPE_INT32_TRIPLET","","",null,null],[17,"SENSOR_VALUE_TYPE_FLOAT_TRIPLET","","",null,null],[17,"SENSOR_ITF_SPI","","",null,null],[17,"SENSOR_ITF_I2C","","",null,null],[17,"SENSOR_ITF_UART","","",null,null],[17,"SENSOR_THRESH_ALGO_WINDOW","","",null,null],[17,"SENSOR_THRESH_ALGO_WATERMARK","","",null,null],[17,"SENSOR_THRESH_ALGO_USERDEF","","",null,null],[17,"SENSOR_IGN_LISTENER","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_NONE","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_ACCELEROMETER","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_MAGNETIC_FIELD","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_GYROSCOPE","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_LIGHT","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_TEMPERATURE","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_AMBIENT_TEMPERATURE","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_PRESSURE","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_PROXIMITY","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_RELATIVE_HUMIDITY","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_ROTATION_VECTOR","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_ALTITUDE","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_WEIGHT","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_LINEAR_ACCEL","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_GRAVITY","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_EULER","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_COLOR","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_USER_DEFINED_1","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_USER_DEFINED_2","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_USER_DEFINED_3","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_USER_DEFINED_4","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_USER_DEFINED_5","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_USER_DEFINED_6","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_ALL","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_DOUBLE_TAP","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_SINGLE_TAP","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_FREE_FALL","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_SLEEP_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_WAKEUP","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_SLEEP","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_X_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_Y_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_Z_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_X_L_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_Y_L_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_Z_L_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_X_H_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_Y_H_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_Z_H_CHANGE","","",null,null],[11,"new","mynewt::hw::sensor","",58,[[["storage"]],["self"]]],[11,"get_bit","","",58,[[["self"],["usize"]],["bool"]]],[11,"set_bit","","",58,[[["self"],["usize"],["bool"]]]],[11,"get","","",58,[[["u8"],["self"],["usize"]],["u64"]]],[11,"set","","",58,[[["usize"],["self"],["u64"],["u8"]]]],[11,"new","","",59,[[],["self"]]],[11,"as_ref","","",59,[[["self"]],["t"]]],[11,"as_mut","","",59,[[["self"]],["t"]]],[11,"sad_x_is_valid","","",93,[[["self"]],["u8"]]],[11,"set_sad_x_is_valid","","",93,[[["self"],["u8"]]]],[11,"sad_y_is_valid","","",93,[[["self"]],["u8"]]],[11,"set_sad_y_is_valid","","",93,[[["self"],["u8"]]]],[11,"sad_z_is_valid","","",93,[[["self"]],["u8"]]],[11,"set_sad_z_is_valid","","",93,[[["self"],["u8"]]]],[11,"new_bitfield_1","","",93,[[["u8"]],[["u8"],["__bindgenbitfieldunit",["u8"]]]]],[11,"smd_x_is_valid","","",94,[[["self"]],["u8"]]],[11,"set_smd_x_is_valid","","",94,[[["self"],["u8"]]]],[11,"smd_y_is_valid","","",94,[[["self"]],["u8"]]],[11,"set_smd_y_is_valid","","",94,[[["self"],["u8"]]]],[11,"smd_z_is_valid","","",94,[[["self"]],["u8"]]],[11,"set_smd_z_is_valid","","",94,[[["self"],["u8"]]]],[11,"new_bitfield_1","","",94,[[["u8"]],[["u8"],["__bindgenbitfieldunit",["u8"]]]]],[11,"sld_full_is_valid","","",95,[[["self"]],["u8"]]],[11,"set_sld_full_is_valid","","",95,[[["self"],["u8"]]]],[11,"sld_ir_is_valid","","",95,[[["self"]],["u8"]]],[11,"set_sld_ir_is_valid","","",95,[[["self"],["u8"]]]],[11,"sld_lux_is_valid","","",95,[[["self"]],["u8"]]],[11,"set_sld_lux_is_valid","","",95,[[["self"],["u8"]]]],[11,"new_bitfield_1","","",95,[[["u8"]],[["u8"],["__bindgenbitfieldunit",["u8"]]]]],[11,"sqd_x_is_valid","","",96,[[["self"]],["u8"]]],[11,"set_sqd_x_is_valid","","",96,[[["self"],["u8"]]]],[11,"sqd_y_is_valid","","",96,[[["self"]],["u8"]]],[11,"set_sqd_y_is_valid","","",96,[[["self"],["u8"]]]],[11,"sqd_z_is_valid","","",96,[[["self"]],["u8"]]],[11,"set_sqd_z_is_valid","","",96,[[["self"],["u8"]]]],[11,"sqd_w_is_valid","","",96,[[["self"]],["u8"]]],[11,"set_sqd_w_is_valid","","",96,[[["self"],["u8"]]]],[11,"new_bitfield_1","","",96,[[["u8"]],[["u8"],["__bindgenbitfieldunit",["u8"]]]]],[11,"sed_h_is_valid","","",97,[[["self"]],["u8"]]],[11,"set_sed_h_is_valid","","",97,[[["self"],["u8"]]]],[11,"sed_r_is_valid","","",97,[[["self"]],["u8"]]],[11,"set_sed_r_is_valid","","",97,[[["self"],["u8"]]]],[11,"sed_p_is_valid","","",97,[[["self"]],["u8"]]],[11,"set_sed_p_is_valid","","",97,[[["self"],["u8"]]]],[11,"new_bitfield_1","","",97,[[["u8"]],[["u8"],["__bindgenbitfieldunit",["u8"]]]]],[11,"scd_r_is_valid","","",98,[[["self"]],["u16"]]],[11,"set_scd_r_is_valid","","",98,[[["u16"],["self"]]]],[11,"scd_g_is_valid","","",98,[[["self"]],["u16"]]],[11,"set_scd_g_is_valid","","",98,[[["u16"],["self"]]]],[11,"scd_b_is_valid","","",98,[[["self"]],["u16"]]],[11,"set_scd_b_is_valid","","",98,[[["u16"],["self"]]]],[11,"scd_c_is_valid","","",98,[[["self"]],["u16"]]],[11,"set_scd_c_is_valid","","",98,[[["u16"],["self"]]]],[11,"scd_lux_is_valid","","",98,[[["self"]],["u16"]]],[11,"set_scd_lux_is_valid","","",98,[[["u16"],["self"]]]],[11,"scd_colortemp_is_valid","","",98,[[["self"]],["u16"]]],[11,"set_scd_colortemp_is_valid","","",98,[[["u16"],["self"]]]],[11,"scd_saturation_is_valid","","",98,[[["self"]],["u16"]]],[11,"set_scd_saturation_is_valid","","",98,[[["u16"],["self"]]]],[11,"scd_saturation75_is_valid","","",98,[[["self"]],["u16"]]],[11,"set_scd_saturation75_is_valid","","",98,[[["u16"],["self"]]]],[11,"scd_is_sat_is_valid","","",98,[[["self"]],["u16"]]],[11,"set_scd_is_sat_is_valid","","",98,[[["u16"],["self"]]]],[11,"scd_cratio_is_valid","","",98,[[["self"]],["u16"]]],[11,"set_scd_cratio_is_valid","","",98,[[["u16"],["self"]]]],[11,"scd_maxlux_is_valid","","",98,[[["self"]],["u16"]]],[11,"set_scd_maxlux_is_valid","","",98,[[["u16"],["self"]]]],[11,"scd_ir_is_valid","","",98,[[["self"]],["u16"]]],[11,"set_scd_ir_is_valid","","",98,[[["u16"],["self"]]]],[11,"new_bitfield_1","","",98,[[["u16"]],[["__bindgenbitfieldunit",["u8"]],["u8"]]]],[11,"std_temp_is_valid","","",99,[[["self"]],["u8"]]],[11,"set_std_temp_is_valid","","",99,[[["self"],["u8"]]]],[11,"new_bitfield_1","","",99,[[["u8"]],[["u8"],["__bindgenbitfieldunit",["u8"]]]]],[11,"spd_press_is_valid","","",100,[[["self"]],["u8"]]],[11,"set_spd_press_is_valid","","",100,[[["self"],["u8"]]]],[11,"new_bitfield_1","","",100,[[["u8"]],[["u8"],["__bindgenbitfieldunit",["u8"]]]]],[11,"shd_humid_is_valid","","",101,[[["self"]],["u8"]]],[11,"set_shd_humid_is_valid","","",101,[[["self"],["u8"]]]],[11,"new_bitfield_1","","",101,[[["u8"]],[["u8"],["__bindgenbitfieldunit",["u8"]]]]],[11,"sgd_x_is_valid","","",102,[[["self"]],["u8"]]],[11,"set_sgd_x_is_valid","","",102,[[["self"],["u8"]]]],[11,"sgd_y_is_valid","","",102,[[["self"]],["u8"]]],[11,"set_sgd_y_is_valid","","",102,[[["self"],["u8"]]]],[11,"sgd_z_is_valid","","",102,[[["self"]],["u8"]]],[11,"set_sgd_z_is_valid","","",102,[[["self"],["u8"]]]],[11,"new_bitfield_1","","",102,[[["u8"]],[["u8"],["__bindgenbitfieldunit",["u8"]]]]],[6,"__uint8_t","","",null,null],[6,"__int16_t","","",null,null],[6,"__uint16_t","","",null,null],[6,"__int32_t","","",null,null],[6,"__uint32_t","","",null,null],[6,"__int64_t","","",null,null],[6,"os_stack_t","","",null,null],[6,"os_time_t","","",null,null],[6,"os_event_fn","","",null,null],[6,"os_dev_init_func_t","","Initialize a device.",null,null],[6,"os_dev_open_func_t","","",null,null],[6,"os_dev_suspend_func_t","","",null,null],[6,"os_dev_resume_func_t","","",null,null],[6,"os_dev_close_func_t","","",null,null],[6,"os_membuf_t","","",null,null],[6,"os_sanity_check_func_t","","",null,null],[6,"os_task_func_t","","",null,null],[6,"sensor_type_t","","",null,null],[6,"sensor_event_type_t","","",null,null],[6,"sensor_data_func_t","","Callback for handling sensor data, specified in a sensor…",null,null],[6,"sensor_trigger_notify_func_t","","Callback for sending trigger notification.",null,null],[6,"sensor_trigger_cmp_func_t","","Callback for trigger compare functions.",null,null],[6,"sensor_notifier_func_t","","Callback for event notifications.",null,null],[6,"sensor_error_func_t","","Callback for reporting a sensor read error.",null,null],[6,"sensor_read_func_t","","Read a single value from a sensor, given a specific sensor…",null,null],[6,"sensor_get_config_func_t","","Get the configuration of the sensor for the sensor type.…",null,null],[6,"sensor_set_config_func_t","","Send a new configuration register set to the sensor.",null,null],[6,"sensor_set_trigger_thresh_t","","Set the trigger and threshold values for a specific sensor…",null,null],[6,"sensor_clear_trigger_thresh_t","","Clear the high/low threshold values for a specific sensor…",null,null],[6,"sensor_set_notification_t","","Set the notification expectation for a targeted set of…",null,null],[6,"sensor_unset_notification_t","","Unset the notification expectation for a targeted set of…",null,null],[6,"sensor_handle_interrupt_t","","Let driver handle interrupt in the sensor context",null,null],[6,"sensor_reset_t","","Reset Sensor function Ptr",null,null],[6,"sensor_mgr_compare_func_t","","",null,null],[6,"SensorValueFunc","","Wrapped version of `sensor_data_func` used by Visual…",null,null],[6,"sensor_ptr","","Points to a `sensor`. Needed because `sensor` also refers…",null,null],[6,"sensor_arg","","Points to sensor arg passed by Mynewt to sensor listener",null,null],[6,"sensor_data_ptr","","Points to sensor data passed by Mynewt to sensor listener",null,null],[6,"sensor_data_func","","Sensor data function that returns `MynewtError` instead of…",null,null],[6,"sensor_data_func_untyped","","Sensor data function that returns `i32` instead of…",null,null],[7,"SENSOR_LISTENERS","","",null,null],[7,"LISTENER_INTERNAL","","Define the listener function to be called after polling…",null,null],[17,"SENSOR_VALUE_TYPE_OPAQUE","","",null,null],[17,"SENSOR_VALUE_TYPE_INT32","","",null,null],[17,"SENSOR_VALUE_TYPE_FLOAT","","",null,null],[17,"SENSOR_VALUE_TYPE_INT32_TRIPLET","","",null,null],[17,"SENSOR_VALUE_TYPE_FLOAT_TRIPLET","","",null,null],[17,"SENSOR_ITF_SPI","","",null,null],[17,"SENSOR_ITF_I2C","","",null,null],[17,"SENSOR_ITF_UART","","",null,null],[17,"SENSOR_THRESH_ALGO_WINDOW","","",null,null],[17,"SENSOR_THRESH_ALGO_WATERMARK","","",null,null],[17,"SENSOR_THRESH_ALGO_USERDEF","","",null,null],[17,"SENSOR_IGN_LISTENER","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_NONE","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_ACCELEROMETER","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_MAGNETIC_FIELD","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_GYROSCOPE","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_LIGHT","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_TEMPERATURE","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_AMBIENT_TEMPERATURE","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_PRESSURE","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_PROXIMITY","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_RELATIVE_HUMIDITY","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_ROTATION_VECTOR","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_ALTITUDE","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_WEIGHT","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_LINEAR_ACCEL","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_GRAVITY","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_EULER","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_COLOR","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_USER_DEFINED_1","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_USER_DEFINED_2","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_USER_DEFINED_3","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_USER_DEFINED_4","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_USER_DEFINED_5","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_USER_DEFINED_6","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_ALL","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_DOUBLE_TAP","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_SINGLE_TAP","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_FREE_FALL","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_SLEEP_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_WAKEUP","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_SLEEP","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_X_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_Y_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_Z_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_X_L_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_Y_L_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_Z_L_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_X_H_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_Y_H_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_Z_H_CHANGE","","",null,null],[17,"MAX_SENSOR_LISTENERS","","List of wrapped sensor listeners",null,null],[17,"SENSOR_TYPE_AMBIENT_TEMPERATURE_RAW","","Sensor type for raw temperature sensor and geolocation.…",null,null],[17,"SENSOR_TYPE_GEOLOCATION","","",null,null],[0,"sensor_mgr","mynewt::hw","Contains the Mynewt Sensor Manager API for Rust, including…",null,null],[3,"SensorsByDevname","mynewt::hw::sensor_mgr","State for iterating sensors by device name",null,null],[12,"devname","","Device name of the sensor",110,null],[12,"previous","","Last sensor that was returned",110,null],[5,"find_bydevname","","Returns an iterator of sensors that match the device name…",null,[[["strn"]],["sensorsbydevname"]]],[0,"sys","mynewt","Mynewt System API for Rust",null,null],[0,"console","mynewt::sys","Display messages on Arm Semihosting Console (via OpenOCD)",null,null],[5,"print","mynewt::sys::console","Display message `msg` on the Arm Semihosting console (via…",null,[[["str"]]]],[5,"get_dispatch_address","","Return the Dispatch Address for the OS function whose…",null,[[["u32"]],["u32"]]],[5,"print_strn","","Display message `msg` on the Arm Semihosting console (via…",null,[[["strn"]]]],[5,"buffer","","Add the string to the output buffer.",null,[[["str"]]]],[5,"printhex","","Write a byte in hexadecimal to the output buffer. C API:…",null,[[["u8"]]]],[5,"printint","","Write an int to the output buffer. C API: `void…",null,[[["i32"]]]],[5,"printfloat","","Write a float to the output buffer, with 2 decimal places.",null,[[["f32"]]]],[5,"printdouble","","Write a double to the output buffer, with 6 decimal places.",null,[[["f64"]]]],[5,"dump","","Write \"length\" number of bytes from \"buffer\" to the output…",null,[[["u32"]]]],[5,"flush","","Flush the output buffer to the console.",null,[[]]],[5,"console_buffer","","Add the string to the output buffer. C API: `void…",null,null],[5,"console_printhex","","Write a byte in hexadecimal to the output buffer. C API:…",null,null],[5,"console_printint","","Write an int i to the output buffer. C API: `void…",null,null],[5,"console_printfloat","","Write a float to the output buffer, with 2 decimal places.…",null,null],[5,"console_printdouble","","Write a double to the output buffer, with 6 decimal…",null,null],[5,"console_dump","","Write \"length\" number of bytes from \"buffer\" to the output…",null,null],[5,"console_flush","","Flush the output buffer to the console. C API: `void…",null,null],[0,"encoding","mynewt","Mynewt Encoding API for Rust",null,null],[7,"g_encoder","mynewt::encoding","Global CBOR encoder",null,null],[7,"root_map","","Global CBOR root map",null,null],[0,"macros","","Mynewt Macros for Rust. Note that macros defined locally…",null,null],[0,"json","","Contains Rust bindings for Mynewt JSON Encoding API…",null,null],[3,"__BindgenBitfieldUnit","mynewt::encoding::json","",null,null],[12,"storage","","",111,null],[12,"align","","",111,null],[3,"__BindgenUnionField","","",null,null],[12,"0","","",112,null],[3,"json_value","","",null,null],[12,"jv_pad1","","",113,null],[12,"jv_type","","",113,null],[12,"jv_len","","",113,null],[12,"jv_val","","",113,null],[3,"json_value__bindgen_ty_1","","",null,null],[12,"u","","",114,null],[12,"fl","","",114,null],[12,"str","","",114,null],[12,"composite","","",114,null],[12,"bindgen_union_field","","",114,null],[3,"json_value__bindgen_ty_1__bindgen_ty_1","","",null,null],[12,"keys","","",115,null],[12,"values","","",115,null],[3,"json_encoder","","",null,null],[12,"je_write","","",116,null],[12,"je_arg","","",116,null],[12,"_bitfield_1","","",116,null],[12,"je_encode_buf","","",116,null],[3,"json_enum_t","","",null,null],[12,"name","","",117,null],[12,"value","","",117,null],[3,"json_array_t","","",null,null],[12,"element_type","","",118,null],[12,"arr","","",118,null],[12,"count","","",118,null],[12,"maxlen","","",118,null],[3,"json_array_t__bindgen_ty_1","","",null,null],[12,"objects","","",119,null],[12,"strings","","",119,null],[12,"integers","","",119,null],[12,"uintegers","","",119,null],[12,"reals","","",119,null],[12,"booleans","","",119,null],[12,"bindgen_union_field","","",119,null],[3,"json_array_t__bindgen_ty_1__bindgen_ty_1","","",null,null],[12,"subtype","","",120,null],[12,"base","","",120,null],[12,"stride","","",120,null],[3,"json_array_t__bindgen_ty_1__bindgen_ty_2","","",null,null],[12,"ptrs","","",121,null],[12,"store","","",121,null],[12,"storelen","","",121,null],[3,"json_array_t__bindgen_ty_1__bindgen_ty_3","","",null,null],[12,"store","","",122,null],[3,"json_array_t__bindgen_ty_1__bindgen_ty_4","","",null,null],[12,"store","","",123,null],[3,"json_array_t__bindgen_ty_1__bindgen_ty_5","","",null,null],[12,"store","","",124,null],[3,"json_array_t__bindgen_ty_1__bindgen_ty_6","","",null,null],[12,"store","","",125,null],[3,"json_attr_t","","",null,null],[12,"attribute","","",126,null],[12,"type_","","",126,null],[12,"addr","","",126,null],[12,"dflt","","",126,null],[12,"len","","",126,null],[12,"map","","",126,null],[12,"nodefault","","",126,null],[3,"json_attr_t__bindgen_ty_1","","",null,null],[12,"integer","","",127,null],[12,"uinteger","","",127,null],[12,"real","","",127,null],[12,"string","","",127,null],[12,"boolean","","",127,null],[12,"character","","",127,null],[12,"array","","",127,null],[12,"offset","","",127,null],[12,"bindgen_union_field","","",127,null],[3,"json_attr_t__bindgen_ty_2","","",null,null],[12,"integer","","",128,null],[12,"uinteger","","",128,null],[12,"real","","",128,null],[12,"boolean","","",128,null],[12,"character","","",128,null],[12,"check","","",128,null],[12,"bindgen_union_field","","",128,null],[3,"json_buffer","","",null,null],[12,"jb_readn","","",129,null],[12,"jb_read_next","","",129,null],[12,"jb_read_prev","","",129,null],[5,"json_encode_object_start","","",null,null],[5,"json_encode_object_key","","",null,null],[5,"json_encode_object_entry","","",null,null],[5,"json_encode_object_finish","","",null,null],[5,"json_encode_array_name","","",null,null],[5,"json_encode_array_start","","",null,null],[5,"json_encode_array_value","","",null,null],[5,"json_encode_array_finish","","",null,null],[5,"json_read_object","","",null,null],[5,"json_read_array","","",null,null],[6,"__uint8_t","","",null,null],[6,"__uint16_t","","",null,null],[6,"__uint64_t","","",null,null],[6,"json_write_func_t","","",null,null],[6,"json_type","","",null,null],[6,"json_buffer_read_next_byte_t","","",null,null],[6,"json_buffer_read_prev_byte_t","","",null,null],[6,"json_buffer_readn_t","","",null,null],[17,"JSON_VALUE_TYPE_BOOL","","",null,null],[17,"JSON_VALUE_TYPE_UINT64","","",null,null],[17,"JSON_VALUE_TYPE_INT64","","",null,null],[17,"JSON_VALUE_TYPE_STRING","","",null,null],[17,"JSON_VALUE_TYPE_ARRAY","","",null,null],[17,"JSON_VALUE_TYPE_OBJECT","","",null,null],[17,"JSON_ATTR_MAX","","",null,null],[17,"JSON_VAL_MAX","","",null,null],[17,"JSON_ERR_OBSTART","","",null,null],[17,"JSON_ERR_ATTRSTART","","",null,null],[17,"JSON_ERR_BADATTR","","",null,null],[17,"JSON_ERR_ATTRLEN","","",null,null],[17,"JSON_ERR_NOARRAY","","",null,null],[17,"JSON_ERR_NOBRAK","","",null,null],[17,"JSON_ERR_STRLONG","","",null,null],[17,"JSON_ERR_TOKLONG","","",null,null],[17,"JSON_ERR_BADTRAIL","","",null,null],[17,"JSON_ERR_ARRAYSTART","","",null,null],[17,"JSON_ERR_OBJARR","","",null,null],[17,"JSON_ERR_SUBTOOLONG","","",null,null],[17,"JSON_ERR_BADSUBTRAIL","","",null,null],[17,"JSON_ERR_SUBTYPE","","",null,null],[17,"JSON_ERR_BADSTRING","","",null,null],[17,"JSON_ERR_CHECKFAIL","","",null,null],[17,"JSON_ERR_NOPARSTR","","",null,null],[17,"JSON_ERR_BADENUM","","",null,null],[17,"JSON_ERR_QNONSTRING","","",null,null],[17,"JSON_ERR_NONQSTRING","","",null,null],[17,"JSON_ERR_MISC","","",null,null],[17,"JSON_ERR_BADNUM","","",null,null],[17,"JSON_ERR_NULLPTR","","",null,null],[17,"json_type_t_integer","","",null,null],[17,"json_type_t_uinteger","","",null,null],[17,"json_type_t_real","","",null,null],[17,"json_type_t_string","","",null,null],[17,"json_type_t_boolean","","",null,null],[17,"json_type_t_character","","",null,null],[17,"json_type_t_object","","",null,null],[17,"json_type_t_structobject","","",null,null],[17,"json_type_t_array","","",null,null],[17,"json_type_t_check","","",null,null],[17,"json_type_t_ignore","","",null,null],[11,"new","","",111,[[["storage"]],["self"]]],[11,"get_bit","","",111,[[["self"],["usize"]],["bool"]]],[11,"set_bit","","",111,[[["self"],["usize"],["bool"]]]],[11,"get","","",111,[[["u8"],["self"],["usize"]],["u64"]]],[11,"set","","",111,[[["usize"],["self"],["u64"],["u8"]]]],[11,"new","","",112,[[],["self"]]],[11,"as_ref","","",112,[[["self"]],["t"]]],[11,"as_mut","","",112,[[["self"]],["t"]]],[11,"je_wr_commas","","",116,[[["self"]],["c_int"]]],[11,"set_je_wr_commas","","",116,[[["self"],["c_int"]]]],[11,"new_bitfield_1","","",116,[[["c_int"]],[["u8"],["__bindgenbitfieldunit",["u8"]]]]],[0,"tinycbor","mynewt::encoding","Contains Rust bindings for Mynewt TinyCBOR Encoding API…",null,null],[3,"File_methods","mynewt::encoding::tinycbor","",null,null],[12,"write","","",130,null],[12,"read","","",130,null],[3,"File","","",null,null],[12,"vmt","","",131,null],[3,"cbor_encoder_writer","","",null,null],[12,"write","","",132,null],[12,"bytes_written","","",132,null],[3,"cbor_iovec","","",null,null],[12,"iov_base","","",133,null],[12,"iov_len","","",133,null],[3,"CborEncoder","","",null,null],[12,"writer","","",134,null],[12,"writer_arg","","",134,null],[12,"added","","",134,null],[12,"flags","","",134,null],[3,"cbor_decoder_reader","","",null,null],[12,"get8","","",135,null],[12,"get16","","",135,null],[12,"get32","","",135,null],[12,"get64","","",135,null],[12,"cmp","","",135,null],[12,"cpy","","",135,null],[12,"message_size","","",135,null],[3,"CborParser","","",null,null],[12,"d","","",136,null],[12,"end","","",136,null],[12,"flags","","",136,null],[3,"CborValue","","",null,null],[12,"parser","","",137,null],[12,"offset","","",137,null],[12,"remaining","","",137,null],[12,"extra","","",137,null],[12,"type_","","",137,null],[12,"flags","","",137,null],[5,"cbor_error_string","","",null,null],[5,"cbor_encoder_init","","Initializes a CborEncoder structure \\a encoder by pointing…",null,null],[5,"cbor_encode_uint","","Appends the unsigned 64-bit integer \\a value to the CBOR…",null,null],[5,"cbor_encode_int","","Appends the signed 64-bit integer \\a value to the CBOR…",null,null],[5,"cbor_encode_negative_int","","Appends the negative 64-bit integer whose absolute value…",null,null],[5,"cbor_encode_simple_value","","Appends the CBOR Simple Type of value \\a value to the CBOR…",null,null],[5,"cbor_encode_tag","","Appends the CBOR tag \\a tag to the CBOR stream provided by…",null,null],[5,"cbor_encode_text_string","","Appends the byte string \\a string of length \\a length to…",null,null],[5,"cbor_encode_byte_string","","Appends the text string \\a string of length \\a length to…",null,null],[5,"cbor_encode_byte_iovec","","Appends the byte string passed as \\a iov and \\a iov_len to…",null,null],[5,"cbor_encode_floating_point","","Appends the floating-point value of type \\a fpType and…",null,null],[5,"cbor_encoder_create_array","","Creates a CBOR array in the CBOR stream provided by \\a…",null,null],[5,"cbor_encoder_create_map","","Creates a CBOR map in the CBOR stream provided by \\a…",null,null],[5,"cbor_encoder_create_indef_text_string","","Creates a indefinite-length text string in the CBOR stream…",null,null],[5,"cbor_encoder_create_indef_byte_string","","Creates a indefinite-length byte string in the CBOR stream…",null,null],[5,"cbor_encoder_close_container","","Closes the CBOR container (array, map or indefinite-length…",null,null],[5,"cbor_encoder_close_container_checked","","",null,null],[5,"cbor_parser_init","","",null,null],[5,"cbor_value_advance_fixed","","",null,null],[5,"cbor_value_advance","","",null,null],[5,"cbor_value_enter_container","","",null,null],[5,"cbor_value_leave_container","","",null,null],[5,"cbor_value_get_int64_checked","","",null,null],[5,"cbor_value_get_int_checked","","",null,null],[5,"cbor_value_skip_tag","","",null,null],[5,"cbor_value_calculate_string_length","","",null,null],[5,"cbor_value_text_string_equals","","",null,null],[5,"cbor_value_map_find_value","","",null,null],[5,"cbor_value_get_half_float","","",null,null],[5,"cbor_value_to_pretty_advance","","",null,null],[6,"__uint8_t","","",null,null],[6,"__uint16_t","","",null,null],[6,"__uint32_t","","",null,null],[6,"__int64_t","","",null,null],[6,"__uint64_t","","",null,null],[6,"__uintptr_t","","",null,null],[6,"FILE","","",null,null],[6,"CborType","","",null,null],[6,"CborTag","","",null,null],[6,"CborKnownTags","","",null,null],[6,"CborError","","",null,null],[6,"cbor_encoder_write","","",null,null],[6,"CborParserIteratorFlags","","",null,null],[6,"cbor_reader_get8","","",null,null],[6,"cbor_reader_get16","","",null,null],[6,"cbor_reader_get32","","",null,null],[6,"cbor_reader_get64","","",null,null],[6,"cbor_memcmp","","",null,null],[6,"cbor_memcpy","","",null,null],[6,"CborMajorTypes","","",null,null],[6,"CborSimpleTypes","","",null,null],[17,"CborIndefiniteLength","","",null,null],[17,"CborType_CborIntegerType","","",null,null],[17,"CborType_CborByteStringType","","",null,null],[17,"CborType_CborTextStringType","","",null,null],[17,"CborType_CborArrayType","","",null,null],[17,"CborType_CborMapType","","",null,null],[17,"CborType_CborTagType","","",null,null],[17,"CborType_CborSimpleType","","",null,null],[17,"CborType_CborBooleanType","","",null,null],[17,"CborType_CborNullType","","",null,null],[17,"CborType_CborUndefinedType","","",null,null],[17,"CborType_CborHalfFloatType","","",null,null],[17,"CborType_CborFloatType","","",null,null],[17,"CborType_CborDoubleType","","",null,null],[17,"CborType_CborInvalidType","","",null,null],[17,"CborKnownTags_CborDateTimeStringTag","","",null,null],[17,"CborKnownTags_CborUnixTime_tTag","","",null,null],[17,"CborKnownTags_CborPositiveBignumTag","","",null,null],[17,"CborKnownTags_CborNegativeBignumTag","","",null,null],[17,"CborKnownTags_CborDecimalTag","","",null,null],[17,"CborKnownTags_CborBigfloatTag","","",null,null],[17,"CborKnownTags_CborExpectedBase64urlTag","","",null,null],[17,"CborKnownTags_CborExpectedBase64Tag","","",null,null],[17,"CborKnownTags_CborExpectedBase16Tag","","",null,null],[17,"CborKnownTags_CborUriTag","","",null,null],[17,"CborKnownTags_CborBase64urlTag","","",null,null],[17,"CborKnownTags_CborBase64Tag","","",null,null],[17,"CborKnownTags_CborRegularExpressionTag","","",null,null],[17,"CborKnownTags_CborMimeMessageTag","","",null,null],[17,"CborKnownTags_CborSignatureTag","","",null,null],[17,"CborError_CborNoError","","",null,null],[17,"CborError_CborUnknownError","","",null,null],[17,"CborError_CborErrorUnknownLength","","",null,null],[17,"CborError_CborErrorAdvancePastEOF","","",null,null],[17,"CborError_CborErrorIO","","",null,null],[17,"CborError_CborErrorGarbageAtEnd","","",null,null],[17,"CborError_CborErrorUnexpectedEOF","","",null,null],[17,"CborError_CborErrorUnexpectedBreak","","",null,null],[17,"CborError_CborErrorUnknownType","","",null,null],[17,"CborError_CborErrorIllegalType","","",null,null],[17,"CborError_CborErrorIllegalNumber","","",null,null],[17,"CborError_CborErrorIllegalSimpleType","","",null,null],[17,"CborError_CborErrorUnknownSimpleType","","",null,null],[17,"CborError_CborErrorUnknownTag","","",null,null],[17,"CborError_CborErrorInappropriateTagForType","","",null,null],[17,"CborError_CborErrorDuplicateObjectKeys","","",null,null],[17,"CborError_CborErrorInvalidUtf8TextString","","",null,null],[17,"CborError_CborErrorTooManyItems","","",null,null],[17,"CborError_CborErrorTooFewItems","","",null,null],[17,"CborError_CborErrorDataTooLarge","","",null,null],[17,"CborError_CborErrorNestingTooDeep","","",null,null],[17,"CborError_CborErrorUnsupportedType","","",null,null],[17,"CborError_CborErrorJsonObjectKeyIsAggregate","","",null,null],[17,"CborError_CborErrorJsonObjectKeyNotString","","",null,null],[17,"CborError_CborErrorJsonNotImplemented","","",null,null],[17,"CborError_CborErrorOutOfMemory","","",null,null],[17,"CborError_CborErrorInternalError","","",null,null],[17,"CborParserIteratorFlags_CborIteratorFlag_IntegerValueTooLarge","","",null,null],[17,"CborParserIteratorFlags_CborIteratorFlag_NegativeInteger","","",null,null],[17,"CborParserIteratorFlags_CborIteratorFlag_UnknownLength","","",null,null],[17,"CborParserIteratorFlags_CborIteratorFlag_ContainerIsMap","","",null,null],[17,"CborMajorTypes_UnsignedIntegerType","","",null,null],[17,"CborMajorTypes_NegativeIntegerType","","",null,null],[17,"CborMajorTypes_ByteStringType","","",null,null],[17,"CborMajorTypes_TextStringType","","",null,null],[17,"CborMajorTypes_ArrayType","","",null,null],[17,"CborMajorTypes_MapType","","",null,null],[17,"CborMajorTypes_TagType","","",null,null],[17,"CborMajorTypes_SimpleTypesType","","",null,null],[17,"CborSimpleTypes_FalseValue","","",null,null],[17,"CborSimpleTypes_TrueValue","","",null,null],[17,"CborSimpleTypes_NullValue","","",null,null],[17,"CborSimpleTypes_UndefinedValue","","",null,null],[17,"CborSimpleTypes_SimpleTypeInNextByte","","",null,null],[17,"CborSimpleTypes_HalfPrecisionFloat","","",null,null],[17,"CborSimpleTypes_SinglePrecisionFloat","","",null,null],[17,"CborSimpleTypes_DoublePrecisionFloat","","",null,null],[17,"CborSimpleTypes_Break","","",null,null],[0,"coap_context","mynewt::encoding","COAP encoder state used by CoAP encoding macros",null,null],[3,"CoapContext","mynewt::encoding::coap_context","CoAP encoder state. Buffers the next key and value to be…",null,null],[12,"key_buffer","","Static buffer for the key to be encoded. Will be passed to…",138,null],[12,"value_buffer","","Static buffer for the string value to be encoded. Will be…",138,null],[4,"CoapError","","Error codes for COAP encoding failure",null,null],[13,"OK","","No error",139,null],[13,"VALUE_NOT_UINT","","Encoded value is not unsigned integer",139,null],[7,"COAP_CONTEXT","","Global instance that contains the current state of the…",null,null],[7,"cbor_encoder0","","Global CBOR root map for encoding CBOR documents",null,null],[7,"cbor_encoder1","","",null,null],[17,"COAP_KEY_SIZE","","Size of the static key buffer",null,null],[17,"COAP_VALUE_SIZE","","Size of the static value buffer",null,null],[17,"_ROOT","","Root of CoAP document",null,null],[17,"_MAP","","Map element of CoAP document",null,null],[17,"_ARRAY","","Array element of CoAP document",null,null],[8,"ToBytesOptionalNull","","Convert the type to array of bytes that may or may not end…",null,null],[10,"to_bytes_optional_nul","","Convert the type to array of bytes that may or may not end…",140,[[["self"]]]],[11,"json_set_geolocation","","",138,[[["sensorvaluetype"],["self"],["strn"]]]],[11,"json_set_text_string","","Encode a text value into the current JSON document with…",138,[[["self"],["strn"]]]],[11,"key_strn_to_cstr","","Given a Strn key `key`, return a `*char` pointer that is…",138,[[["self"],["strn"]]]],[11,"value_strn_to_cstr","","Given a Strn value `value`, return a `*char` pointer that…",138,[[["self"],["strn"]]]],[11,"key_to_cstr","","Given a key `s`, return a `*char` pointer that is…",138,[[["self"]]]],[11,"value_to_cstr","","Given a value `s`, return a `*char` pointer that is…",138,[[["self"]]]],[11,"cstr_len","","Compute the byte length of the string in `s`. If `s` is…",138,[[["self"]],["usize"]]],[11,"global_encoder","","Return the global CBOR encoder",138,[[["self"]]]],[11,"new_encoder","","Create a new CBOR encoder for the current map or array,…",138,[[["str"],["self"]]]],[11,"encoder","","Return the CBOR encoder for the current map or array, e.g.…",138,[[["str"],["self"]]]],[11,"check_result","","Fail the encoding with an error if `res` is non-zero.",138,[[["u32"],["self"]]]],[11,"fail","","Fail the encoding with an error",138,[[["coaperror"],["self"]]]],[11,"to_void_ptr","","Cast itself as a `*mut c_void`",138,[[["self"]]]],[17,"APPLICATION_JSON","mynewt::encoding","CoAP Payload is in JSON format",null,null],[17,"APPLICATION_CBOR","","CoAP Payload is in CBOR format",null,null],[0,"util","mynewt","Mynewt Utility Macros for Rust",null,null],[0,"macros","mynewt::util","Mynewt Macros for Rust. Note that macros defined locally…",null,null],[0,"libs","mynewt","Mynewt Custom API for Rust",null,null],[0,"sensor_coap","mynewt::libs","Contains Rust bindings for Mynewt Custom API…",null,null],[3,"__BindgenBitfieldUnit","mynewt::libs::sensor_coap","",null,null],[12,"storage","","",141,null],[12,"align","","",141,null],[3,"__IncompleteArrayField","","",null,null],[12,"0","","",142,null],[12,"1","","",142,null],[3,"__BindgenUnionField","","",null,null],[12,"0","","",143,null],[3,"os_mbuf_pool","","A mbuf pool from which to allocate mbufs. This contains a…",null,null],[12,"omp_databuf_len","","Total length of the databuf in each mbuf. This is the size…",144,null],[12,"omp_pool","","The memory pool which to allocate mbufs out of",144,null],[12,"omp_next","","",144,null],[3,"os_mbuf_pool__bindgen_ty_1","","",null,null],[12,"stqe_next","","",145,null],[3,"os_mbuf","","Chained memory buffer.",null,null],[12,"om_data","","Current pointer to data in the structure",146,null],[12,"om_flags","","Flags associated with this buffer, see OS_MBUF_F_*…",146,null],[12,"om_pkthdr_len","","Length of packet header",146,null],[12,"om_len","","Length of data in this buffer",146,null],[12,"om_omp","","The mbuf pool this mbuf was allocated out of",146,null],[12,"om_next","","",146,null],[12,"om_databuf","","Pointer to the beginning of the data, after this buffer",146,null],[3,"os_mbuf__bindgen_ty_1","","",null,null],[12,"sle_next","","",147,null],[3,"os_memblock","","A memory block structure. This simply contains a pointer…",null,null],[12,"mb_next","","",148,null],[3,"os_memblock__bindgen_ty_1","","",null,null],[12,"sle_next","","",149,null],[3,"os_mempool","","Memory pool",null,null],[12,"mp_block_size","","Size of the memory blocks, in bytes.",150,null],[12,"mp_num_blocks","","The number of memory blocks.",150,null],[12,"mp_num_free","","The number of free blocks left",150,null],[12,"mp_min_free","","The lowest number of free blocks seen",150,null],[12,"mp_flags","","Bitmap of OS_MEMPOOL_F_[...] values.",150,null],[12,"mp_membuf_addr","","Address of memory buffer used by pool",150,null],[12,"mp_list","","",150,null],[12,"__bindgen_anon_1","","",150,null],[12,"name","","Name for memory block",150,null],[3,"os_mempool__bindgen_ty_1","","",null,null],[12,"stqe_next","","",151,null],[3,"os_mempool__bindgen_ty_2","","",null,null],[12,"slh_first","","",152,null],[3,"oc_ep_hdr","","",null,null],[12,"_bitfield_1","","",153,null],[3,"oc_endpoint","","",null,null],[12,"ep","","",154,null],[12,"_res","","",154,null],[3,"stats_coap_stats","","",null,null],[3,"oc_server_handle","","",null,null],[12,"endpoint","","",155,null],[3,"sensor_value","","",null,null],[12,"key","","",156,null],[12,"val_type","","",156,null],[12,"int_val","","",156,null],[12,"float_val","","",156,null],[3,"json_value__bindgen_ty_1","","",null,null],[12,"u","","",157,null],[12,"fl","","",157,null],[12,"str","","",157,null],[12,"composite","","",157,null],[12,"bindgen_union_field","","",157,null],[3,"json_value__bindgen_ty_1__bindgen_ty_1","","",null,null],[12,"keys","","",158,null],[12,"values","","",158,null],[7,"coap_stats","","",null,null],[7,"coap_error_message","","",null,null],[5,"init_sensor_coap","","Init the Sensor CoAP module. Called by sysinit() during…",null,null],[5,"sensor_coap_ready","","",null,null],[5,"init_sensor_post","","",null,null],[5,"do_sensor_post","","",null,null],[7,"coap_json_encoder","","",null,null],[7,"coap_json_value","","",null,null],[5,"json_rep_new","","Prepare to write a new JSON CoAP payload into the mbuf.",null,null],[5,"json_rep_reset","","Close the current JSON CoAP payload. Erase the JSON…",null,null],[5,"json_rep_finalize","","Finalise the payload and return the payload size.",null,null],[5,"json_rep_start_root_object","","Start the JSON representation. Assume top level is object.…",null,null],[5,"json_rep_end_root_object","","End the JSON representation. Assume top level is object.…",null,null],[7,"coap_json_mbuf","","",null,null],[6,"__uint8_t","","",null,null],[6,"__uint16_t","","",null,null],[6,"__uint32_t","","",null,null],[6,"__uint64_t","","",null,null],[6,"oc_endpoint_t","","",null,null],[6,"json_write_func_t","","",null,null],[17,"COAP_LINK_FORMAT_FILTERING","","",null,null],[17,"COAP_PROXY_OPTION_PROCESSING","","",null,null],[17,"COAP_MAX_ATTEMPTS","","",null,null],[17,"COAP_OBSERVE_REFRESH_INTERVAL","","",null,null],[17,"COAP_DEFAULT_PORT","","",null,null],[17,"COAP_DEFAULT_MAX_AGE","","",null,null],[17,"COAP_RESPONSE_RANDOM_FACTOR","","",null,null],[17,"COAP_MAX_RETRANSMIT","","",null,null],[17,"COAP_HEADER_LEN","","",null,null],[17,"COAP_TOKEN_LEN","","",null,null],[17,"COAP_ETAG_LEN","","",null,null],[17,"COAP_MAX_URI","","",null,null],[17,"COAP_MAX_URI_QUERY","","",null,null],[17,"COAP_TCP_LENGTH8_OFF","","",null,null],[17,"COAP_TCP_LENGTH16_OFF","","",null,null],[17,"COAP_TCP_LENGTH32_OFF","","",null,null],[17,"COAP_TCP_TYPE0","","",null,null],[17,"COAP_TCP_TYPE8","","",null,null],[17,"COAP_TCP_TYPE16","","",null,null],[17,"COAP_TCP_TYPE32","","",null,null],[17,"COAP_HEADER_OPTION_DELTA_MASK","","",null,null],[17,"COAP_HEADER_OPTION_SHORT_LENGTH_MASK","","",null,null],[17,"COAP_PORT_UNSECURED","","",null,null],[11,"new","","",141,[[["storage"]],["self"]]],[11,"get_bit","","",141,[[["self"],["usize"]],["bool"]]],[11,"set_bit","","",141,[[["self"],["usize"],["bool"]]]],[11,"get","","",141,[[["u8"],["self"],["usize"]],["u64"]]],[11,"set","","",141,[[["usize"],["self"],["u64"],["u8"]]]],[11,"new","","",142,[[],["self"]]],[11,"as_ptr","","",142,[[["self"]]]],[11,"as_mut_ptr","","",142,[[["self"]]]],[11,"as_slice","","",142,[[["self"],["usize"]]]],[11,"as_mut_slice","","",142,[[["self"],["usize"]]]],[11,"new","","",143,[[],["self"]]],[11,"as_ref","","",143,[[["self"]],["t"]]],[11,"as_mut","","",143,[[["self"]],["t"]]],[11,"oe_type","","",153,[[["self"]],["u8"]]],[11,"set_oe_type","","",153,[[["self"],["u8"]]]],[11,"oe_flags","","",153,[[["self"]],["u8"]]],[11,"set_oe_flags","","",153,[[["self"],["u8"]]]],[11,"new_bitfield_1","","",153,[[["u8"]],[["u8"],["__bindgenbitfieldunit",["u8"]]]]],[0,"sensor_network","mynewt::libs","Contains Rust bindings for Mynewt Custom API…",null,null],[3,"oc_server_handle","mynewt::libs::sensor_network","",null,null],[12,"_unused","","",159,null],[3,"sensor_network_interface","","",null,null],[12,"iface_type","","",160,null],[12,"network_device","","",160,null],[12,"server_endpoint_size","","",160,null],[12,"register_transport_func","","",160,null],[12,"transport_registered","","",160,null],[3,"sensor_network_endpoint","","",null,null],[12,"endpoint","","",161,null],[5,"start_server_transport","","",null,[[],["mynewtresult"]]],[5,"init_server_post","","",null,[[["strn"]],[["bool"],["mynewtresult",["bool"]]]]],[5,"prepare_post","","",null,[[["c_int"]],[["bool"],["mynewtresult",["bool"]]]]],[5,"do_server_post","","",null,[[],[["bool"],["mynewtresult",["bool"]]]]],[5,"get_device_id","","",null,[[],[["mynewtresult",["strn"]],["strn"]]]],[5,"init_sensor_post","","",null,null],[5,"do_sensor_post","","",null,null],[5,"start_collector_transport","","",null,null],[5,"sensor_network_start_transport","","",null,null],[5,"register_server_transport","","",null,null],[5,"register_collector_transport","","",null,null],[5,"sensor_network_register_transport","","",null,null],[5,"init_collector_post","","",null,null],[5,"sensor_network_init_post","","",null,null],[5,"do_collector_post","","",null,null],[5,"sensor_network_do_post","","",null,null],[5,"is_collector_node","","",null,null],[5,"is_sensor_node","","",null,null],[5,"is_standalone_node","","",null,null],[5,"should_send_to_collector","","",null,null],[5,"sensor_network_init","","",null,null],[5,"sensor_network_register_interface","","",null,null],[7,"sensor_network_interfaces","","",null,null],[7,"sensor_network_endpoints","","",null,null],[7,"sensor_network_encoding","","",null,null],[7,"sensor_network_shortname","","",null,null],[6,"__uint8_t","","",null,null],[6,"__uint16_t","","",null,null],[17,"SENSOR_NETWORK_SIZE","","",null,null],[0,"mynewt_rust","mynewt::libs","Contains Rust bindings for Mynewt Custom API…",null,null],[3,"__BindgenBitfieldUnit","mynewt::libs::mynewt_rust","",null,null],[12,"storage","","",162,null],[12,"align","","",162,null],[3,"os_event__bindgen_ty_1","","",null,null],[12,"stqe_next","","",163,null],[3,"os_dev__bindgen_ty_1","","",null,null],[12,"stqe_next","","",164,null],[3,"os_mutex__bindgen_ty_1","","",null,null],[12,"slh_first","","",165,null],[3,"os_sanity_check__bindgen_ty_1","","",null,null],[12,"sle_next","","",166,null],[3,"os_task__bindgen_ty_1","","",null,null],[12,"stqe_next","","",167,null],[3,"os_task__bindgen_ty_2","","",null,null],[12,"tqe_next","","",168,null],[12,"tqe_prev","","",168,null],[3,"os_task__bindgen_ty_3","","",null,null],[12,"sle_next","","",169,null],[3,"sensor_listener__bindgen_ty_1","","",null,null],[12,"sle_next","","",170,null],[3,"sensor_notifier__bindgen_ty_1","","",null,null],[12,"sle_next","","",171,null],[3,"sensor_type_traits__bindgen_ty_1","","",null,null],[12,"sle_next","","",172,null],[3,"sensor__bindgen_ty_1","","",null,null],[12,"slh_first","","",173,null],[3,"sensor__bindgen_ty_2","","",null,null],[12,"slh_first","","",174,null],[3,"sensor__bindgen_ty_3","","",null,null],[12,"slh_first","","",175,null],[3,"sensor__bindgen_ty_4","","",null,null],[12,"sle_next","","",176,null],[3,"sensor_temp_raw_data","","Represents a single temperature sensor raw value",null,null],[12,"strd_temp_raw","","Raw temp from STM32 Internal Temp Sensor is 0 to 4095",177,null],[12,"_bitfield_1","","",177,null],[5,"rust_sysinit","","Initialise the Mynewt system. Start the Mynewt drivers and…",null,null],[5,"get_temp_raw_data","","Interpret `sensor_data` as a `sensor_temp_raw_data` struct…",null,null],[5,"get_temp_data","","Interpret `sensor_data` as a `sensor_temp_data` struct…",null,null],[5,"sensor_get_device","","Return the Mynewt device for the Mynewt sensor.",null,null],[5,"device_get_name","","Return the name for the Mynewt device. Assumes name is…",null,null],[5,"null_sensor","","Return the NULL sensor.",null,null],[5,"is_null_sensor","","Return non-zero if sensor is NULL.",null,null],[5,"is_null_sensor_data","","Return non-zero if sensor data is NULL.",null,null],[5,"json_helper_set_array","","Assume we are writing an object now. Write the key name…",null,null],[5,"json_helper_close_array","","End the child array and resume writing the parent object.…",null,null],[5,"json_helper_object_array_start_item","","Assume we have called `set_array`. Start an array item,…",null,null],[5,"json_helper_object_array_end_item","","End an array item, assumed to be an object. `[... --> [...,`",null,null],[5,"json_helper_set_int","","Encode an int value into the current JSON encoding value…",null,null],[5,"json_helper_set_uint","","Encode an unsigned int value into the current JSON…",null,null],[5,"json_helper_set_float","","Encode a float value into the current JSON encoding value…",null,null],[5,"json_helper_set_text_string","","Encode a text value into the current JSON encoding value…",null,null],[6,"__uint8_t","","",null,null],[6,"__int16_t","","",null,null],[6,"__uint16_t","","",null,null],[6,"__int32_t","","",null,null],[6,"__uint32_t","","",null,null],[6,"__int64_t","","",null,null],[6,"__uint64_t","","",null,null],[6,"os_stack_t","","",null,null],[6,"os_time_t","","",null,null],[6,"os_event_fn","","",null,null],[6,"os_dev_init_func_t","","Initialize a device.",null,null],[6,"os_dev_open_func_t","","",null,null],[6,"os_dev_suspend_func_t","","",null,null],[6,"os_dev_resume_func_t","","",null,null],[6,"os_dev_close_func_t","","",null,null],[6,"os_sanity_check_func_t","","",null,null],[6,"os_task_func_t","","",null,null],[6,"sensor_type_t","","",null,null],[6,"sensor_event_type_t","","",null,null],[6,"sensor_data_func_t","","Callback for handling sensor data, specified in a sensor…",null,null],[6,"sensor_trigger_cmp_func_t","","Callback for trigger compare functions.",null,null],[6,"sensor_notifier_func_t","","Callback for event notifications.",null,null],[6,"sensor_error_func_t","","Callback for reporting a sensor read error.",null,null],[6,"sensor_read_func_t","","Read a single value from a sensor, given a specific sensor…",null,null],[6,"sensor_get_config_func_t","","Get the configuration of the sensor for the sensor type.…",null,null],[6,"sensor_set_config_func_t","","Send a new configuration register set to the sensor.",null,null],[6,"sensor_set_trigger_thresh_t","","Set the trigger and threshold values for a specific sensor…",null,null],[6,"sensor_clear_trigger_thresh_t","","Clear the high/low threshold values for a specific sensor…",null,null],[6,"sensor_set_notification_t","","Set the notification expectation for a targeted set of…",null,null],[6,"sensor_unset_notification_t","","Unset the notification expectation for a targeted set of…",null,null],[6,"sensor_handle_interrupt_t","","Let driver handle interrupt in the sensor context",null,null],[6,"sensor_reset_t","","Reset Sensor function Ptr",null,null],[17,"sensor_type_t_SENSOR_TYPE_NONE","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_ACCELEROMETER","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_MAGNETIC_FIELD","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_GYROSCOPE","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_LIGHT","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_TEMPERATURE","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_AMBIENT_TEMPERATURE","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_PRESSURE","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_PROXIMITY","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_RELATIVE_HUMIDITY","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_ROTATION_VECTOR","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_ALTITUDE","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_WEIGHT","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_LINEAR_ACCEL","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_GRAVITY","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_EULER","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_COLOR","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_USER_DEFINED_1","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_USER_DEFINED_2","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_USER_DEFINED_3","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_USER_DEFINED_4","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_USER_DEFINED_5","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_USER_DEFINED_6","","",null,null],[17,"sensor_type_t_SENSOR_TYPE_ALL","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_DOUBLE_TAP","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_SINGLE_TAP","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_FREE_FALL","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_SLEEP_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_WAKEUP","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_SLEEP","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_X_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_Y_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_Z_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_X_L_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_Y_L_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_Z_L_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_X_H_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_Y_H_CHANGE","","",null,null],[17,"sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_Z_H_CHANGE","","",null,null],[11,"new","","",162,[[["storage"]],["self"]]],[11,"get_bit","","",162,[[["self"],["usize"]],["bool"]]],[11,"set_bit","","",162,[[["self"],["usize"],["bool"]]]],[11,"get","","",162,[[["u8"],["self"],["usize"]],["u64"]]],[11,"set","","",162,[[["usize"],["self"],["u64"],["u8"]]]],[11,"strd_temp_raw_is_valid","","",177,[[["self"]],["u8"]]],[11,"set_strd_temp_raw_is_valid","","",177,[[["self"],["u8"]]]],[11,"new_bitfield_1","","",177,[[["u8"]],[["u8"],["__bindgenbitfieldunit",["u8"]]]]],[0,"hal","mynewt","",null,null],[3,"SPI","mynewt::hal","Rust Embedded HAL interface for Mynewt SPI",null,null],[12,"spi_num","","Mynewt SPI port number",1,null],[12,"cs_pin","","Mynewt GPIO pin number for Chip Select",1,null],[3,"GPIO","","Rust Embedded HAL interface for Mynewt GPIO",null,null],[12,"pin","","Mynewt GPIO pin number",0,null],[3,"Delay","","Rust Embedded HAL interface for Mynewt Delay",null,null],[11,"new","mynewt","Create a new SPI port",1,[[],["self"]]],[11,"init","","Initiaise the SPI port",1,[[["self"],["i32"]],["mynewtresult"]]],[11,"new","","Create a new output GPIO pin",0,[[],["self"]]],[11,"init","","Initialise the output GPIO pin",0,[[["self"],["i32"]],["mynewtresult"]]],[11,"new","","Create a new delay",178,[[],["self"]]],[0,"spi","","Experimental Non-Blocking SPI Transfer API. Uses a…",null,null],[3,"SpiCallback","mynewt::spi","Non-blocking SPI transfer callback parameter (not used)",null,null],[5,"spi_noblock_init","","Init non-blocking SPI transfer",null,[[],["mynewtresult"]]],[5,"spi_task_func","","SPI Task Function. Execute sequentially each SPI request…",null,[[["ptr"]]]],[5,"spi_noblock_write_command","","Set pending request for non-blocking SPI write for Command…",null,[[["u8"]],["mynewtresult"]]],[5,"spi_noblock_write_data","","Set pending request for non-blocking SPI write for Data…",null,[[],["mynewtresult"]]],[5,"spi_noblock_write_flush","","Enqueue any pending request for non-blocking SPI write for…",null,[[],["mynewtresult"]]],[5,"spi_noblock_write","","Enqueue request for non-blocking SPI write. Returns…",null,[[["u8"]],["mynewtresult"]]],[5,"spi_event_callback","","Callback for the event that is triggered when an SPI…",null,[[]]],[5,"internal_spi_noblock_write","","Perform non-blocking SPI write in Mynewt OS. Blocks until…",null,[[["bool"],["u8"],["i32"]],["mynewtresult"]]],[5,"spi_noblock_handler","","Called by interrupt handler after Non-blocking SPI…",null,[[["i32"],["ptr"]]]],[5,"delay_ms","","Sleep for the specified number of milliseconds",null,[[["u8"]]]],[5,"hal_watchdog_tickle","","Tickles the watchdog so that the Watchdog Timer doesn't…",null,null],[6,"PendingCmdSize","","Max size of pending Command Bytes",null,null],[6,"PendingDataSize","","Max size of pending Data Bytes",null,null],[7,"SPI_SETTINGS","","TODO: Remove SPI settings for ST7789 display controller",null,null],[7,"PENDING_CMD","","Pending SPI Command Byte to be written",null,null],[7,"PENDING_DATA","","Pending SPI Data Bytes to be written",null,null],[7,"SPI_SEM","","Semaphore that is signalled for every completed SPI request",null,null],[7,"SPI_THROTTLE_SEM","","Semaphore that throttles the number of queued SPI requests",null,null],[7,"SPI_DATA_QUEUE","","Mbuf Queue that contains the SPI data packets to be sent.…",null,null],[7,"SPI_EVENT_QUEUE","","Event Queue that contains the pending non-blocking SPI…",null,null],[7,"SPI_TASK","","SPI Task that will send each SPI request sequentially",null,null],[7,"SPI_TASK_STACK","","Stack space for SPI Task, initialised to 0.",null,null],[7,"SPI_CALLBACK","","Non-blocking SPI transfer callback values (not used)",null,null],[17,"DISPLAY_SPI","","",null,null],[17,"DISPLAY_CS","","",null,null],[17,"DISPLAY_DC","","",null,null],[17,"SPI_NUM","","",null,null],[17,"SPI_SS_PIN","","",null,null],[17,"SPI_DC_PIN","","",null,null],[17,"SPI_TASK_STACK_SIZE","","Size of the stack (in 4-byte units). Previously…",null,null],[17,"OS_TICKS_PER_SEC","","",null,null],[0,"result","mynewt","Return type and error codes for Mynewt API",null,null],[4,"MynewtError","mynewt::result","Error codes for Mynewt API",null,null],[13,"SYS_EOK","","Error code 0 means no error.",179,null],[13,"SYS_ENOMEM","","",179,null],[13,"SYS_EINVAL","","",179,null],[13,"SYS_ETIMEOUT","","",179,null],[13,"SYS_ENOENT","","",179,null],[13,"SYS_EIO","","",179,null],[13,"SYS_EAGAIN","","",179,null],[13,"SYS_EACCES","","",179,null],[13,"SYS_EBUSY","","",179,null],[13,"SYS_ENODEV","","",179,null],[13,"SYS_ERANGE","","",179,null],[13,"SYS_EALREADY","","",179,null],[13,"SYS_ENOTSUP","","",179,null],[13,"SYS_EUNKNOWN","","",179,null],[13,"SYS_EREMOTEIO","","",179,null],[13,"SYS_EDONE","","",179,null],[13,"SYS_EPERUSER","","",179,null],[6,"MynewtResult","","Common return type for Mynewt API. If no error, returns…",null,null],[6,"Out","mynewt","Declare a pointer that will be used by C functions to…",null,null],[6,"Ptr","","Declare a `void *` pointer that will be passed to C…",null,null],[17,"NULL","","Declare a `NULL` pointer that will be passed to C functions",null,null],[11,"new","","Create a new `Strn` with a byte string. Fail if the last…",2,[[],["strn"]]],[11,"from_cstr","","Create a new `Strn` with a null-terminated string pointer…",2,[[],["strn"]]],[11,"as_ptr","","Return a pointer to the string",2,[[["self"]]]],[11,"len","","Return the length of the string, excluding the terminating…",2,[[["self"]],["usize"]]],[11,"is_empty","","Return true if the string is empty",2,[[["self"]],["bool"]]],[11,"as_cstr","","Return the byte string as a null-terminated `* const char`…",2,[[["self"]]]],[11,"as_bytestr","","Return the byte string. Fail if the last byte is not zero.",2,[[["self"]]]],[11,"validate","","Fail if the last byte is not zero.",2,[[["self"]]]],[11,"validate_bytestr","","Fail if the last byte is not zero.",2,[[]]],[14,"coap","","Macro to compose a CoAP payload with JSON or CBOR…",null,null],[14,"parse","","Parse the JSON code in the parameter and compose the CoAP…",null,null],[14,"parse_vector","","TODO: Parse the vector e.g. array items",null,null],[14,"unexpected_token","","Show an unexpected token error",null,null],[14,"coap_root","","Compose the payload root.",null,null],[14,"coap_array","","Compose an array under `object`, named as `key` (e.g.…",null,null],[14,"coap_item_int","","Append a (key + int value + geo) item to the array named…",null,null],[14,"coap_item_str","","Append a (`key` + `val` string value) item to the array…",null,null],[14,"coap_item","","Append an array item under the current object item. Add…",null,null],[14,"coap_set_int_val","","Given an object parent and an integer Sensor Value `val`,…",null,null],[14,"coap_item_int_val","","Encode Integer Sensor Value: Create a new Item object in…",null,null],[14,"json_rep_set_array","","Assume we are writing an object now. Write the key name…",null,null],[14,"json_rep_close_array","","End the child array and resume writing the parent object.…",null,null],[14,"json_rep_object_array_start_item","","Assume we have called `set_array`. Start an array item,…",null,null],[14,"json_rep_object_array_end_item","","End an array item, assumed to be an object. `[... --> [...,`",null,null],[14,"json_rep_set_int","","Encode an int value into the current JSON encoding value…",null,null],[14,"json_rep_set_text_string","","Encode a text value into the current JSON encoding value…",null,null],[14,"oc_rep_start_root_object","","",null,null],[14,"oc_rep_end_root_object","","",null,null],[14,"oc_rep_start_object","","",null,null],[14,"oc_rep_end_object","","",null,null],[14,"oc_rep_start_array","","",null,null],[14,"oc_rep_end_array","","",null,null],[14,"oc_rep_set_array","","Assume we are writing an object now. Write the key name…",null,null],[14,"oc_rep_close_array","","End the child array and resume writing the parent object.…",null,null],[14,"oc_rep_object_array_start_item","","Assume we have called `set_array`. Start an array item,…",null,null],[14,"oc_rep_object_array_end_item","","End an array item, assumed to be an object. `[... --> [...,`",null,null],[14,"oc_rep_set_int","","Encode an int value ",null,null],[14,"oc_rep_set_text_string","","Encode a text value ",null,null],[14,"fill_zero","","Return a const struct that has all fields set to 0. Used…",null,null],[14,"stringify_null","","Macro that takes an identifier and returns a `[u8]`…",null,null],[14,"d","","Macro to dump all tokens received as a literal string,…",null,null],[14,"nx","","Macro to display the token being parsed and the remaining…",null,null],[11,"from","","",178,[[["t"]],["t"]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"into","","",178,[[],["u"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"set_low","","",0,[[["self"]],["result"]]],[11,"set_high","","",0,[[["self"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"write","","",1,[[["self"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","mynewt::kernel::os","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"into","","",35,[[],["u"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"into","","",36,[[],["u"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"into","","",44,[[],["u"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into","","",45,[[],["u"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"into","","",46,[[],["u"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"into","","",47,[[],["u"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"into","","",48,[[],["u"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"into","","",49,[[],["u"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"into","","",50,[[],["u"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"into","","",51,[[],["u"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"into","","",52,[[],["u"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","mynewt::hw::hal","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"into","","",53,[[],["u"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"into","","",54,[[],["u"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"into","","",55,[[],["u"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"into","","",56,[[],["u"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"into","","",57,[[],["u"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","mynewt::hw::sensor","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"into","","",58,[[],["u"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"into","","",59,[[],["u"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"into","","",60,[[],["u"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"into","","",61,[[],["u"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"into","","",62,[[],["u"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"into","","",63,[[],["u"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"into","","",64,[[],["u"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"into","","",65,[[],["u"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"into","","",66,[[],["u"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"into","","",67,[[],["u"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"into","","",68,[[],["u"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"into","","",69,[[],["u"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"into","","",70,[[],["u"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"into","","",71,[[],["u"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"into","","",72,[[],["u"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"into","","",73,[[],["u"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"into","","",74,[[],["u"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"into","","",75,[[],["u"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"into","","",76,[[],["u"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"into","","",77,[[],["u"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"into","","",78,[[],["u"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"into","","",79,[[],["u"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"into","","",80,[[],["u"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"into","","",81,[[],["u"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"into","","",82,[[],["u"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"into","","",83,[[],["u"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"into","","",84,[[],["u"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"into","","",85,[[],["u"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"into","","",86,[[],["u"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"into","","",87,[[],["u"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"into","","",88,[[],["u"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"into","","",89,[[],["u"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"into","","",90,[[],["u"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"into","","",91,[[],["u"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"into","","",92,[[],["u"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"into","","",93,[[],["u"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"into","","",94,[[],["u"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"into","","",95,[[],["u"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"into","","",96,[[],["u"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"into","","",97,[[],["u"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"into","","",98,[[],["u"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"into","","",99,[[],["u"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"into","","",100,[[],["u"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"into","","",101,[[],["u"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"into","","",102,[[],["u"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"into","","",103,[[],["u"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"into","","",104,[[],["u"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"into","","",105,[[],["u"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"into","","",106,[[],["u"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"into","","",107,[[],["u"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"into","","",108,[[],["u"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"into","","",109,[[],["u"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"from","mynewt::hw::sensor_mgr","",110,[[["t"]],["t"]]],[11,"into_iter","","",110,[[],["i"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"into","","",110,[[],["u"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"from","mynewt::encoding::json","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"into","","",111,[[],["u"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"into","","",112,[[],["u"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"into","","",113,[[],["u"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"into","","",114,[[],["u"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"into","","",115,[[],["u"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"into","","",116,[[],["u"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"into","","",117,[[],["u"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"into","","",118,[[],["u"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"into","","",119,[[],["u"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"into","","",120,[[],["u"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"into","","",121,[[],["u"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"into","","",122,[[],["u"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"into","","",123,[[],["u"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"into","","",124,[[],["u"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"into","","",125,[[],["u"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"into","","",126,[[],["u"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"into","","",127,[[],["u"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"into","","",128,[[],["u"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"into","","",129,[[],["u"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"from","mynewt::encoding::tinycbor","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"into","","",130,[[],["u"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"into","","",131,[[],["u"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"into","","",132,[[],["u"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"into","","",133,[[],["u"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"into","","",134,[[],["u"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"into","","",135,[[],["u"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"into","","",136,[[],["u"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"into","","",137,[[],["u"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"from","mynewt::encoding::coap_context","",138,[[["t"]],["t"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"into","","",138,[[],["u"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"into","","",139,[[],["u"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"from","mynewt::libs::sensor_coap","",141,[[["t"]],["t"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"into","","",141,[[],["u"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"into","","",142,[[],["u"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"into","","",143,[[],["u"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"into","","",144,[[],["u"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"into","","",145,[[],["u"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"into","","",146,[[],["u"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"into","","",147,[[],["u"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"into","","",148,[[],["u"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"into","","",149,[[],["u"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"into","","",150,[[],["u"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"into","","",151,[[],["u"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"into","","",152,[[],["u"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"into","","",153,[[],["u"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"into","","",154,[[],["u"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"into","","",180,[[],["u"]]],[11,"try_into","","",180,[[],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"type_id","","",180,[[["self"]],["typeid"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"into","","",155,[[],["u"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"into","","",156,[[],["u"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"into","","",157,[[],["u"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"into","","",158,[[],["u"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"from","mynewt::libs::sensor_network","",159,[[["t"]],["t"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"into","","",159,[[],["u"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"into","","",160,[[],["u"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"into","","",161,[[],["u"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"from","mynewt::libs::mynewt_rust","",162,[[["t"]],["t"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"into","","",162,[[],["u"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"into","","",163,[[],["u"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"into","","",164,[[],["u"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"into","","",165,[[],["u"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"into","","",166,[[],["u"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"into","","",167,[[],["u"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"into","","",168,[[],["u"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"into","","",169,[[],["u"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"into","","",170,[[],["u"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"into","","",171,[[],["u"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"into","","",172,[[],["u"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"into","","",173,[[],["u"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"into","","",174,[[],["u"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"into","","",175,[[],["u"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"into","","",176,[[],["u"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"into","","",177,[[],["u"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"from","mynewt::spi","",181,[[["t"]],["t"]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"into","","",181,[[],["u"]]],[11,"try_into","","",181,[[],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"type_id","","",181,[[["self"]],["typeid"]]],[11,"from","mynewt::result","",179,[[["t"]],["t"]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"into","","",179,[[],["u"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"to_bytes_optional_nul","mynewt","Convert the type to array of bytes that may or may not end…",2,[[["self"]]]],[11,"from","mynewt::result","Cast `i32` to `MynewtError`",179,[[["i32"]],["self"]]],[11,"from","","Cast `()` to `MynewtError`",179,[[],["self"]]],[11,"fmt","mynewt::encoding::json","",111,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",112,[[["formatter"],["self"]],["result"]]],[11,"fmt","mynewt::encoding::coap_context","",139,[[["formatter"],["self"]],["result"]]],[11,"fmt","mynewt::result","",179,[[["formatter"],["self"]],["result"]]],[11,"eq","mynewt::hw::sensor","",58,[[["self"],["__bindgenbitfieldunit"]],["bool"]]],[11,"ne","","",58,[[["self"],["__bindgenbitfieldunit"]],["bool"]]],[11,"eq","","",59,[[["__bindgenunionfield"],["self"]],["bool"]]],[11,"eq","mynewt::encoding::json","",111,[[["__bindgenbitfieldunit"],["self"]],["bool"]]],[11,"ne","","",111,[[["__bindgenbitfieldunit"],["self"]],["bool"]]],[11,"eq","","",112,[[["__bindgenunionfield"],["self"]],["bool"]]],[11,"eq","mynewt::encoding::coap_context","",139,[[["self"],["coaperror"]],["bool"]]],[11,"eq","mynewt::libs::sensor_coap","",141,[[["__bindgenbitfieldunit"],["self"]],["bool"]]],[11,"ne","","",141,[[["__bindgenbitfieldunit"],["self"]],["bool"]]],[11,"eq","","",143,[[["self"],["__bindgenunionfield"]],["bool"]]],[11,"eq","mynewt::libs::mynewt_rust","",162,[[["__bindgenbitfieldunit"],["self"]],["bool"]]],[11,"ne","","",162,[[["__bindgenbitfieldunit"],["self"]],["bool"]]],[11,"eq","mynewt::result","",179,[[["self"],["mynewterror"]],["bool"]]],[11,"cmp","mynewt::hw::sensor","",58,[[["self"],["__bindgenbitfieldunit"]],["ordering"]]],[11,"cmp","mynewt::encoding::json","",111,[[["__bindgenbitfieldunit"],["self"]],["ordering"]]],[11,"cmp","mynewt::libs::sensor_coap","",141,[[["__bindgenbitfieldunit"],["self"]],["ordering"]]],[11,"cmp","mynewt::libs::mynewt_rust","",162,[[["__bindgenbitfieldunit"],["self"]],["ordering"]]],[11,"partial_cmp","mynewt::hw::sensor","",58,[[["self"],["__bindgenbitfieldunit"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",58,[[["self"],["__bindgenbitfieldunit"]],["bool"]]],[11,"le","","",58,[[["self"],["__bindgenbitfieldunit"]],["bool"]]],[11,"gt","","",58,[[["self"],["__bindgenbitfieldunit"]],["bool"]]],[11,"ge","","",58,[[["self"],["__bindgenbitfieldunit"]],["bool"]]],[11,"partial_cmp","mynewt::encoding::json","",111,[[["__bindgenbitfieldunit"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",111,[[["__bindgenbitfieldunit"],["self"]],["bool"]]],[11,"le","","",111,[[["__bindgenbitfieldunit"],["self"]],["bool"]]],[11,"gt","","",111,[[["__bindgenbitfieldunit"],["self"]],["bool"]]],[11,"ge","","",111,[[["__bindgenbitfieldunit"],["self"]],["bool"]]],[11,"partial_cmp","mynewt::libs::sensor_coap","",141,[[["__bindgenbitfieldunit"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",141,[[["__bindgenbitfieldunit"],["self"]],["bool"]]],[11,"le","","",141,[[["__bindgenbitfieldunit"],["self"]],["bool"]]],[11,"gt","","",141,[[["__bindgenbitfieldunit"],["self"]],["bool"]]],[11,"ge","","",141,[[["__bindgenbitfieldunit"],["self"]],["bool"]]],[11,"partial_cmp","mynewt::libs::mynewt_rust","",162,[[["__bindgenbitfieldunit"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",162,[[["__bindgenbitfieldunit"],["self"]],["bool"]]],[11,"le","","",162,[[["__bindgenbitfieldunit"],["self"]],["bool"]]],[11,"gt","","",162,[[["__bindgenbitfieldunit"],["self"]],["bool"]]],[11,"ge","","",162,[[["__bindgenbitfieldunit"],["self"]],["bool"]]],[11,"hash","mynewt::hw::sensor","",58,[[["self"],["__h"]]]],[11,"hash","","",59,[[["self"],["h"]]]],[11,"hash","mynewt::encoding::json","",111,[[["self"],["__h"]]]],[11,"hash","","",112,[[["self"],["h"]]]],[11,"hash","mynewt::libs::sensor_coap","",141,[[["self"],["__h"]]]],[11,"hash","","",143,[[["self"],["h"]]]],[11,"hash","mynewt::libs::mynewt_rust","",162,[[["self"],["__h"]]]],[11,"next","mynewt::hw::sensor_mgr","Return the next sensor that matches the device name    ",110,[[["self"]],[["sensor_ptr"],["option",["sensor_ptr"]]]]],[11,"clone","mynewt::kernel::os","",4,[[["self"]],["self"]]],[11,"clone","mynewt::hw::sensor","",58,[[["self"]],["__bindgenbitfieldunit"]]],[11,"clone","","",59,[[["self"]],["self"]]],[11,"clone","","",105,[[["self"]],["sensor_listener_info"]]],[11,"clone","","",106,[[["self"]],["sensorvalue"]]],[11,"clone","","",109,[[["self"]],["sensorvaluetype"]]],[11,"clone","","",74,[[["self"]],["sensor_listener"]]],[11,"clone","","",75,[[["self"]],["sensor_listener__bindgen_ty_1"]]],[11,"clone","mynewt::encoding::json","",111,[[["self"]],["__bindgenbitfieldunit"]]],[11,"clone","","",112,[[["self"]],["self"]]],[11,"clone","mynewt::libs::sensor_coap","",141,[[["self"]],["__bindgenbitfieldunit"]]],[11,"clone","","",142,[[["self"]],["self"]]],[11,"clone","","",143,[[["self"]],["self"]]],[11,"clone","mynewt::libs::mynewt_rust","",162,[[["self"]],["__bindgenbitfieldunit"]]],[11,"clone","mynewt","",2,[[["self"]],["strn"]]],[11,"clone","","",3,[[["self"]],["strnrep"]]],[11,"default","mynewt::kernel::os","",4,[[],["__incompletearrayfield"]]],[11,"default","","",6,[[],["os_timeval"]]],[11,"default","","",7,[[],["os_timezone"]]],[11,"default","","",8,[[],["self"]]],[11,"default","","",10,[[],["self"]]],[11,"default","","",9,[[],["self"]]],[11,"default","","",12,[[],["self"]]],[11,"default","","",11,[[],["self"]]],[11,"default","","",14,[[],["self"]]],[11,"default","","",13,[[],["self"]]],[11,"default","","",16,[[],["self"]]],[11,"default","","",15,[[],["self"]]],[11,"default","","",17,[[],["self"]]],[11,"default","","",19,[[],["self"]]],[11,"default","","",18,[[],["self"]]],[11,"default","","",20,[[],["os_dev_handlers"]]],[11,"default","","",22,[[],["self"]]],[11,"default","","",21,[[],["self"]]],[11,"default","","",24,[[],["self"]]],[11,"default","","",23,[[],["self"]]],[11,"default","","",26,[[],["self"]]],[11,"default","","",25,[[],["self"]]],[11,"default","","",28,[[],["self"]]],[11,"default","","",27,[[],["self"]]],[11,"default","","",30,[[],["self"]]],[11,"default","","",29,[[],["self"]]],[11,"default","","",32,[[],["self"]]],[11,"default","","",31,[[],["self"]]],[11,"default","","",34,[[],["self"]]],[11,"default","","",35,[[],["self"]]],[11,"default","","",33,[[],["self"]]],[11,"default","","",36,[[],["self"]]],[11,"default","","",37,[[],["os_mempool_info"]]],[11,"default","","",39,[[],["self"]]],[11,"default","","",38,[[],["self"]]],[11,"default","","",41,[[],["self"]]],[11,"default","","",40,[[],["self"]]],[11,"default","","",43,[[],["self"]]],[11,"default","","",42,[[],["self"]]],[11,"default","","",45,[[],["self"]]],[11,"default","","",46,[[],["self"]]],[11,"default","","",47,[[],["self"]]],[11,"default","","",44,[[],["self"]]],[11,"default","","",48,[[],["self"]]],[11,"default","","",49,[[],["os_task_info"]]],[11,"default","","",50,[[],["self"]]],[11,"default","","",52,[[],["self"]]],[11,"default","","",51,[[],["self"]]],[11,"default","mynewt::hw::hal","",53,[[],["hal_i2c_hw_settings"]]],[11,"default","","",54,[[],["hal_i2c_settings"]]],[11,"default","","",55,[[],["self"]]],[11,"default","","",56,[[],["hal_spi_hw_settings"]]],[11,"default","","",57,[[],["hal_spi_settings"]]],[11,"default","mynewt::hw::sensor","",58,[[],["__bindgenbitfieldunit"]]],[11,"default","","",59,[[],["self"]]],[11,"default","","",60,[[],["self"]]],[11,"default","","",61,[[],["self"]]],[11,"default","","",62,[[],["self"]]],[11,"default","","",63,[[],["self"]]],[11,"default","","",64,[[],["self"]]],[11,"default","","",65,[[],["self"]]],[11,"default","","",66,[[],["self"]]],[11,"default","","",67,[[],["self"]]],[11,"default","","",68,[[],["self"]]],[11,"default","","",69,[[],["self"]]],[11,"default","","",70,[[],["self"]]],[11,"default","","",71,[[],["self"]]],[11,"default","","",72,[[],["sensor_cfg"]]],[11,"default","","",73,[[],["self"]]],[11,"default","","",75,[[],["self"]]],[11,"default","","",74,[[],["self"]]],[11,"default","","",77,[[],["self"]]],[11,"default","","",76,[[],["self"]]],[11,"default","","",78,[[],["self"]]],[11,"default","","",80,[[],["self"]]],[11,"default","","",79,[[],["self"]]],[11,"default","","",81,[[],["self"]]],[11,"default","","",82,[[],["self"]]],[11,"default","","",83,[[],["sensor_driver"]]],[11,"default","","",84,[[],["self"]]],[11,"default","","",85,[[],["sensor_int"]]],[11,"default","","",86,[[],["self"]]],[11,"default","","",88,[[],["self"]]],[11,"default","","",89,[[],["self"]]],[11,"default","","",90,[[],["self"]]],[11,"default","","",91,[[],["self"]]],[11,"default","","",87,[[],["self"]]],[11,"default","","",92,[[],["self"]]],[11,"default","","",93,[[],["sensor_accel_data"]]],[11,"default","","",94,[[],["sensor_mag_data"]]],[11,"default","","",95,[[],["sensor_light_data"]]],[11,"default","","",96,[[],["sensor_quat_data"]]],[11,"default","","",97,[[],["sensor_euler_data"]]],[11,"default","","",98,[[],["sensor_color_data"]]],[11,"default","","",99,[[],["sensor_temp_data"]]],[11,"default","","",100,[[],["sensor_press_data"]]],[11,"default","","",101,[[],["sensor_humid_data"]]],[11,"default","","",102,[[],["sensor_gyro_data"]]],[11,"default","","",104,[[],["self"]]],[11,"default","","",103,[[],["self"]]],[11,"default","","",106,[[],["sensorvalue"]]],[11,"default","mynewt::encoding::json","",111,[[],["__bindgenbitfieldunit"]]],[11,"default","","",112,[[],["self"]]],[11,"default","","",115,[[],["self"]]],[11,"default","","",114,[[],["self"]]],[11,"default","","",113,[[],["self"]]],[11,"default","","",116,[[],["self"]]],[11,"default","","",117,[[],["self"]]],[11,"default","","",120,[[],["self"]]],[11,"default","","",121,[[],["self"]]],[11,"default","","",122,[[],["self"]]],[11,"default","","",123,[[],["self"]]],[11,"default","","",124,[[],["self"]]],[11,"default","","",125,[[],["self"]]],[11,"default","","",119,[[],["self"]]],[11,"default","","",118,[[],["self"]]],[11,"default","","",127,[[],["self"]]],[11,"default","","",128,[[],["self"]]],[11,"default","","",126,[[],["self"]]],[11,"default","","",129,[[],["json_buffer"]]],[11,"default","mynewt::encoding::tinycbor","",130,[[],["file_methods"]]],[11,"default","","",131,[[],["self"]]],[11,"default","","",132,[[],["cbor_encoder_writer"]]],[11,"default","","",133,[[],["self"]]],[11,"default","","",134,[[],["self"]]],[11,"default","","",135,[[],["cbor_decoder_reader"]]],[11,"default","","",136,[[],["self"]]],[11,"default","","",137,[[],["self"]]],[11,"default","mynewt::encoding::coap_context","",138,[[],["coapcontext"]]],[11,"default","mynewt::libs::sensor_coap","",141,[[],["__bindgenbitfieldunit"]]],[11,"default","","",142,[[],["__incompletearrayfield"]]],[11,"default","","",143,[[],["self"]]],[11,"default","","",145,[[],["self"]]],[11,"default","","",144,[[],["self"]]],[11,"default","","",147,[[],["self"]]],[11,"default","","",146,[[],["self"]]],[11,"default","","",149,[[],["self"]]],[11,"default","","",148,[[],["self"]]],[11,"default","","",151,[[],["self"]]],[11,"default","","",152,[[],["self"]]],[11,"default","","",150,[[],["self"]]],[11,"default","","",153,[[],["oc_ep_hdr"]]],[11,"default","","",154,[[],["oc_endpoint"]]],[11,"default","","",180,[[],["stats_coap_stats"]]],[11,"default","","",155,[[],["oc_server_handle"]]],[11,"default","","",156,[[],["self"]]],[11,"default","","",158,[[],["self"]]],[11,"default","","",157,[[],["self"]]],[11,"default","mynewt::libs::sensor_network","",160,[[],["self"]]],[11,"default","","",161,[[],["sensor_network_endpoint"]]],[11,"default","mynewt::libs::mynewt_rust","",162,[[],["__bindgenbitfieldunit"]]],[11,"default","","",163,[[],["self"]]],[11,"default","","",164,[[],["self"]]],[11,"default","","",165,[[],["self"]]],[11,"default","","",166,[[],["self"]]],[11,"default","","",167,[[],["self"]]],[11,"default","","",168,[[],["self"]]],[11,"default","","",169,[[],["self"]]],[11,"default","","",170,[[],["self"]]],[11,"default","","",171,[[],["self"]]],[11,"default","","",172,[[],["self"]]],[11,"default","","",173,[[],["self"]]],[11,"default","","",174,[[],["self"]]],[11,"default","","",175,[[],["self"]]],[11,"default","","",176,[[],["self"]]],[11,"default","","",177,[[],["sensor_temp_raw_data"]]],[11,"delay_ms","mynewt","Sleep for the specified number of milliseconds",178,[[["self"],["u8"]]]],[11,"write","","Write to the SPI port",1,[[["self"]],["result"]]],[11,"set_low","","Set the GPIO pin to low",0,[[["self"]],["result"]]],[11,"set_high","","Set the GPIO pin to high",0,[[["self"]],["result"]]]],"p":[[3,"GPIO"],[3,"SPI"],[3,"Strn"],[4,"StrnRep"],[3,"__IncompleteArrayField"],[3,"os_stack"],[3,"os_timeval"],[3,"os_timezone"],[3,"os_time_change_info"],[3,"os_time_change_listener"],[3,"os_time_change_listener__bindgen_ty_1"],[3,"os_event"],[3,"os_event__bindgen_ty_1"],[3,"os_eventq"],[3,"os_eventq__bindgen_ty_1"],[3,"os_callout"],[3,"os_callout__bindgen_ty_1"],[3,"os_callout_list"],[3,"hal_timer"],[3,"hal_timer__bindgen_ty_1"],[3,"os_dev_handlers"],[3,"os_dev"],[3,"os_dev__bindgen_ty_1"],[3,"os_mbuf_pool"],[3,"os_mbuf_pool__bindgen_ty_1"],[3,"os_mbuf_pkthdr"],[3,"os_mbuf_pkthdr__bindgen_ty_1"],[3,"os_mbuf"],[3,"os_mbuf__bindgen_ty_1"],[3,"os_mqueue"],[3,"os_mqueue__bindgen_ty_1"],[3,"os_memblock"],[3,"os_memblock__bindgen_ty_1"],[3,"os_mempool"],[3,"os_mempool__bindgen_ty_1"],[3,"os_mempool__bindgen_ty_2"],[3,"os_mempool_ext"],[3,"os_mempool_info"],[3,"os_mutex"],[3,"os_mutex__bindgen_ty_1"],[3,"os_sanity_check"],[3,"os_sanity_check__bindgen_ty_1"],[3,"os_task_obj"],[3,"os_task_obj__bindgen_ty_1"],[3,"os_task"],[3,"os_task__bindgen_ty_1"],[3,"os_task__bindgen_ty_2"],[3,"os_task__bindgen_ty_3"],[3,"os_task_stailq"],[3,"os_task_info"],[3,"os_task_list"],[3,"os_sem"],[3,"os_sem__bindgen_ty_1"],[3,"hal_i2c_hw_settings"],[3,"hal_i2c_settings"],[3,"hal_i2c_master_data"],[3,"hal_spi_hw_settings"],[3,"hal_spi_settings"],[3,"__BindgenBitfieldUnit"],[3,"__BindgenUnionField"],[3,"os_event__bindgen_ty_1"],[3,"os_eventq__bindgen_ty_1"],[3,"os_callout__bindgen_ty_1"],[3,"os_dev__bindgen_ty_1"],[3,"os_memblock__bindgen_ty_1"],[3,"os_mempool__bindgen_ty_1"],[3,"os_mempool__bindgen_ty_2"],[3,"os_mutex__bindgen_ty_1"],[3,"os_sanity_check__bindgen_ty_1"],[3,"os_task__bindgen_ty_1"],[3,"os_task__bindgen_ty_2"],[3,"os_task__bindgen_ty_3"],[3,"sensor_cfg"],[3,"sensor_data_t"],[3,"sensor_listener"],[3,"sensor_listener__bindgen_ty_1"],[3,"sensor_notifier"],[3,"sensor_notifier__bindgen_ty_1"],[3,"sensor_read_ev_ctx"],[3,"sensor_type_traits"],[3,"sensor_type_traits__bindgen_ty_1"],[3,"sensor_notify_ev_ctx"],[3,"sensor_notify_os_ev"],[3,"sensor_driver"],[3,"sensor_timestamp"],[3,"sensor_int"],[3,"sensor_itf"],[3,"sensor"],[3,"sensor__bindgen_ty_1"],[3,"sensor__bindgen_ty_2"],[3,"sensor__bindgen_ty_3"],[3,"sensor__bindgen_ty_4"],[3,"sensor_read_ctx"],[3,"sensor_accel_data"],[3,"sensor_mag_data"],[3,"sensor_light_data"],[3,"sensor_quat_data"],[3,"sensor_euler_data"],[3,"sensor_color_data"],[3,"sensor_temp_data"],[3,"sensor_press_data"],[3,"sensor_humid_data"],[3,"sensor_gyro_data"],[3,"_bindgen_ty_1"],[3,"_bindgen_ty_1__bindgen_ty_1"],[3,"sensor_listener_info"],[3,"SensorValue"],[3,"sensor_temp_raw_data"],[3,"sensor_geolocation_data"],[4,"SensorValueType"],[3,"SensorsByDevname"],[3,"__BindgenBitfieldUnit"],[3,"__BindgenUnionField"],[3,"json_value"],[3,"json_value__bindgen_ty_1"],[3,"json_value__bindgen_ty_1__bindgen_ty_1"],[3,"json_encoder"],[3,"json_enum_t"],[3,"json_array_t"],[3,"json_array_t__bindgen_ty_1"],[3,"json_array_t__bindgen_ty_1__bindgen_ty_1"],[3,"json_array_t__bindgen_ty_1__bindgen_ty_2"],[3,"json_array_t__bindgen_ty_1__bindgen_ty_3"],[3,"json_array_t__bindgen_ty_1__bindgen_ty_4"],[3,"json_array_t__bindgen_ty_1__bindgen_ty_5"],[3,"json_array_t__bindgen_ty_1__bindgen_ty_6"],[3,"json_attr_t"],[3,"json_attr_t__bindgen_ty_1"],[3,"json_attr_t__bindgen_ty_2"],[3,"json_buffer"],[3,"File_methods"],[3,"File"],[3,"cbor_encoder_writer"],[3,"cbor_iovec"],[3,"CborEncoder"],[3,"cbor_decoder_reader"],[3,"CborParser"],[3,"CborValue"],[3,"CoapContext"],[4,"CoapError"],[8,"ToBytesOptionalNull"],[3,"__BindgenBitfieldUnit"],[3,"__IncompleteArrayField"],[3,"__BindgenUnionField"],[3,"os_mbuf_pool"],[3,"os_mbuf_pool__bindgen_ty_1"],[3,"os_mbuf"],[3,"os_mbuf__bindgen_ty_1"],[3,"os_memblock"],[3,"os_memblock__bindgen_ty_1"],[3,"os_mempool"],[3,"os_mempool__bindgen_ty_1"],[3,"os_mempool__bindgen_ty_2"],[3,"oc_ep_hdr"],[3,"oc_endpoint"],[3,"oc_server_handle"],[3,"sensor_value"],[3,"json_value__bindgen_ty_1"],[3,"json_value__bindgen_ty_1__bindgen_ty_1"],[3,"oc_server_handle"],[3,"sensor_network_interface"],[3,"sensor_network_endpoint"],[3,"__BindgenBitfieldUnit"],[3,"os_event__bindgen_ty_1"],[3,"os_dev__bindgen_ty_1"],[3,"os_mutex__bindgen_ty_1"],[3,"os_sanity_check__bindgen_ty_1"],[3,"os_task__bindgen_ty_1"],[3,"os_task__bindgen_ty_2"],[3,"os_task__bindgen_ty_3"],[3,"sensor_listener__bindgen_ty_1"],[3,"sensor_notifier__bindgen_ty_1"],[3,"sensor_type_traits__bindgen_ty_1"],[3,"sensor__bindgen_ty_1"],[3,"sensor__bindgen_ty_2"],[3,"sensor__bindgen_ty_3"],[3,"sensor__bindgen_ty_4"],[3,"sensor_temp_raw_data"],[3,"Delay"],[4,"MynewtError"],[3,"stats_coap_stats"],[3,"SpiCallback"]]};
searchIndex["nb"] = {"doc":"Minimal and reusable non-blocking I/O layer","i":[[4,"Error","nb","A non-blocking error",null,null],[13,"Other","","A different kind of error",0,null],[13,"WouldBlock","","This operation requires blocking behavior to complete",0,null],[6,"Result","","A non-blocking result",null,null],[11,"map","","Maps an `Error<E>` to `Error<T>` by applying a function to…",0,[[["f"]],["error"]]],[14,"block","","Turns the non-blocking expression `$e` into a blocking…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"from","","",0,[[],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",0,[[["e"]],["error"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"eq","","",0,[[["error"],["self"]],["bool"]]],[11,"ne","","",0,[[["error"],["self"]],["bool"]]],[11,"cmp","","",0,[[["error"],["self"]],["ordering"]]],[11,"partial_cmp","","",0,[[["error"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",0,[[["error"],["self"]],["bool"]]],[11,"le","","",0,[[["error"],["self"]],["bool"]]],[11,"gt","","",0,[[["error"],["self"]],["bool"]]],[11,"ge","","",0,[[["error"],["self"]],["bool"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"clone","","",0,[[["self"]],["error"]]]],"p":[[4,"Error"]]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","i":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[["partialord"]],["partialord"]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[["partialord"]],["partialord"]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[["partialord"]],["partialord"]]],[0,"bounds","","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",2,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",2,[[],["self"]]],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,[[["numcast"]],[["numcast"],["option"]]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[["self"]],[["option",["i8"]],["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[["self"]],[["option",["i16"]],["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[["self"]],[["option",["i32"]],["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[["self"]],[["i128"],["option",["i128"]]]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[["self"]],[["u16"],["option",["u16"]]]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[["self"]],[["option",["u32"]],["u32"]]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[["self"]],[["option",["u128"]],["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`. If the value…",3,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64","","Converts the value of `self` to an `f64`. If the value…",3,[[["self"]],[["option",["f64"]],["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[["isize"]],["option"]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[["i8"]],["option"]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[["i16"]],["option"]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[["i32"]],["option"]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[["i64"]],["option"]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[["i128"]],["option"]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[["usize"]],["option"]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[["u8"]],["option"]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[["u16"]],["option"]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[["u32"]],["option"]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[["u64"]],["option"]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[["u128"]],["option"]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[["f32"]],["option"]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[["f64"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[["toprimitive"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[],["t"]]],[0,"float","num_traits","",null,null],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",7,[[],["self"]]],[10,"neg_infinity","","Returns negative infinity.",7,[[],["self"]]],[10,"nan","","Returns NaN.",7,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",7,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",7,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",7,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",7,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",7,[[],["self"]]],[11,"is_nan","","Returns `true` if the number is NaN.",7,[[],["bool"]]],[11,"is_infinite","","Returns `true` if the number is infinite.",7,[[],["bool"]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",7,[[],["bool"]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",7,[[],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",7,[[],["fpcategory"]]],[11,"floor","","Returns the largest integer less than or equal to a number.",7,[[],["self"]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",7,[[],["self"]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",7,[[],["self"]]],[11,"trunc","","Return the integer part of a number.",7,[[],["self"]]],[11,"fract","","Returns the fractional part of a number.",7,[[],["self"]]],[11,"abs","","Computes the absolute value of `self`. Returns…",7,[[],["self"]]],[11,"signum","","Returns a number that represents the sign of `self`.",7,[[],["self"]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",7,[[],["bool"]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",7,[[],["bool"]]],[11,"min","","Returns the minimum of the two numbers.",7,[[],["self"]]],[11,"max","","Returns the maximum of the two numbers.",7,[[],["self"]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",7,[[],["self"]]],[11,"powi","","Raise a number to an integer power.",7,[[["i32"]],["self"]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",7,[[],["self"]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",7,[[],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",7,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",8,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",8,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",8,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",8,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",8,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",8,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",8,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",8,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",8,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",8,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",8,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",8,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",8,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",8,[[],["self"]]],[10,"PI","","Return Archimedes’ constant.",8,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",8,[[],["self"]]],[0,"identities","num_traits","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,[[],["zero"]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[],["one"]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",9,[[],["self"]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",9,[[["self"]]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",9,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",10,[[],["self"]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",10,[[["self"]]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",10,[[["self"]],["bool"]]],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",11,[[],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",11,[[],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",11,[[],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",11,[[],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",11,[[["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",11,[[["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",11,[[["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",11,[[["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",11,[[["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",11,[[["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",11,[[],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's…",11,[[],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's…",11,[[],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",11,[[],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's…",11,[[],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",11,[[["u32"]],["self"]]],[0,"ops","num_traits","",null,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",12,[[["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",13,[[["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",14,[[["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",15,[[["self"]],["option"]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",16,[[["self"]],["option"]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can't…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can't…",17,[[["self"]],["option"]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",18,[[["u32"],["self"]],["option"]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",19,[[["u32"],["self"]],["option"]]],[0,"inv","num_traits::ops","",null,null],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",20,null],[10,"inv","","Returns the multiplicative inverse of `self`.",20,[[]]],[0,"mul_add","num_traits::ops","",null,null],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",21,null],[10,"mul_add","","Performs the fused multiply-add operation.",21,[[["a"],["b"]]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",22,[[["a"],["self"],["b"]]]],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",23,[[],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",23,[[],["self"]]],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",24,[[["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",25,[[["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",26,[[["self"]],["self"]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",27,[[["u32"],["self"]],["self"]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",28,[[["u32"],["self"]],["self"]]],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation…",null,[[["usize"],["mul"],["clone"],["one"]],[["mul"],["clone"],["one"]]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[["checkedmul"],["usize"],["clone"],["one"]],[["option"],["one"],["clone"],["checkedmul"]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",29,null],[10,"pow","","Returns `self` to the power `rhs`.",29,[[["rhs"]]]],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,[[["signed"]],["signed"]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[["signed"]],["signed"]]],[5,"signum","","Returns the sign of the number.",null,[[["signed"]],["signed"]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",30,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",30,[[["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",30,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the…",30,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the…",30,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",31,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",31,[[["str"],["u32"]],["result"]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Signed"],[8,"Num"]]};
searchIndex["piet"] = {"doc":"A 2D graphics abstraction.","i":[[3,"Error","piet","An error that can occur while rendering 2D graphics.",null,null],[3,"FixedLinearGradient","","Specification of a linear gradient.",null,null],[12,"start","","The start point (corresponding to pos 0.0).",0,null],[12,"end","","The end point (corresponding to pos 1.0).",0,null],[12,"stops","","The stops.",0,null],[3,"FixedRadialGradient","","Specification of a radial gradient in image-space.",null,null],[12,"center","","The center.",1,null],[12,"origin_offset","","The offset of the origin relative to the center.",1,null],[12,"radius","","The radius.",1,null],[12,"stops","","The stops (see similar field in `LinearGradient`).",1,null],[3,"GradientStop","","Specification of a gradient stop.",null,null],[12,"pos","","The coordinate of the stop.",2,null],[12,"color","","The color at that stop.",2,null],[3,"LinearGradient","","A description of a linear gradient in the unit rect, which…",null,null],[12,"start","","",3,null],[12,"end","","",3,null],[12,"stops","","",3,null],[3,"RadialGradient","","A description of a radial gradient in the unit rect, which…",null,null],[12,"center","","",4,null],[12,"origin","","",4,null],[12,"radius","","",4,null],[12,"stops","","",4,null],[12,"scale_mode","","",4,null],[3,"UnitPoint","","A representation of a point relative to a unit rectangle.",null,null],[12,"u","","",5,null],[12,"v","","",5,null],[3,"StrokeStyle","","Options for drawing stroked lines.",null,null],[12,"line_join","","",6,null],[12,"line_cap","","",6,null],[12,"dash","","",6,null],[12,"miter_limit","","",6,null],[3,"HitTestPoint","","return values for `hit_test_point`.",null,null],[12,"metrics","","`metrics.text_position` will give you the text position.",7,null],[12,"is_inside","","`is_inside` indicates whether the hit test point landed…",7,null],[3,"HitTestTextPosition","","return values for `hit_test_text_position`.",null,null],[12,"point","","the `point`'s `x` value is the position of the leading…",8,null],[12,"metrics","","`metrics.text_position` will give you the text position.",8,null],[3,"HitTestMetrics","","Hit test metrics, returned as part of…",null,null],[12,"text_position","","",9,null],[4,"Color","","A datatype representing color.",null,null],[13,"Rgba32","","",10,null],[4,"FixedGradient","","Any fixed gradient.",null,null],[13,"Linear","","A linear gradient.",11,null],[13,"Radial","","A radial gradient.",11,null],[4,"ScaleMode","","Mappings from the unit square into a non-square rectangle.",null,null],[13,"Fit","","The unit 1.0 is mapped to the smaller of width & height,…",12,null],[13,"Fill","","The unit 1.0 is mapped to the larger of width & height;…",12,null],[4,"InterpolationMode","","A requested interpolation mode for drawing images.",null,null],[13,"NearestNeighbor","","Don't interpolate, use nearest neighbor.",13,null],[13,"Bilinear","","Use bilinear interpolation.",13,null],[4,"ImageFormat","","The pixel format for bitmap images.",null,null],[13,"Rgb","","3 bytes per pixel, in RGB order.",14,null],[13,"RgbaSeparate","","4 bytes per pixel, in RGBA order, with separate alpha.",14,null],[13,"RgbaPremul","","4 bytes per pixel, in RGBA order, with premultiplied alpha.",14,null],[4,"PaintBrush","","A color or a gradient.",null,null],[13,"Color","","",15,null],[4,"LineJoin","","Options for angled joins in strokes.",null,null],[13,"Miter","","",16,null],[13,"Round","","",16,null],[13,"Bevel","","",16,null],[4,"LineCap","","Options for the cap of stroked lines.",null,null],[13,"Butt","","",17,null],[13,"Round","","",17,null],[13,"Square","","",17,null],[0,"color","","A simple representation of color",null,null],[4,"Color","piet::color","A datatype representing color.",null,null],[13,"Rgba32","","",10,null],[11,"rgb8","piet","Create a color from 8 bit per sample RGB values.",10,[[["u8"]],["color"]]],[11,"rgba8","","Create a color from 8 bit per sample RGBA values.",10,[[["u8"]],["color"]]],[11,"from_rgba32_u32","","Create a color from a 32-bit rgba value (alpha as least…",10,[[["u32"]],["color"]]],[11,"grey8","","Create a color from a grey value.",10,[[["u8"]],["color"]]],[11,"grey","","Create a color with a grey value in the range 0.0..=1.0.",10,[[],["color"]]],[11,"rgba","","Create a color from four floating point values, each in…",10,[[["f64"],["into",["f64"]]],["color"]]],[11,"rgb","","Create a color from three floating point values, each in…",10,[[["f64"],["into",["f64"]]],["color"]]],[11,"hlc","","Create a color from a CIEL*a*b* polar (also known as CIE…",10,[[["f64"],["into",["f64"]]],["color"]]],[11,"hlca","","Create a color from a CIEL*a*b* polar specification and…",10,[[["f64"],["into",["f64"]]],["color"]]],[11,"with_alpha","","Change just the alpha value of a color.",10,[[],["color"]]],[11,"as_rgba_u32","","Convert a color value to a 32-bit rgba value.",10,[[["self"]],["u32"]]],[18,"WHITE","","Opaque white.",10,null],[18,"BLACK","","Opaque black.",10,null],[0,"conv","","Conversions of fundamental numeric and geometric types.",null,null],[8,"RoundFrom","piet::conv","This is our own implementation of a \"lossy From\" trait,…",null,null],[10,"round_from","","",18,[[["t"]],["self"]]],[8,"RoundInto","","The companion to `RoundFrom`. As with `From` and `Into`, a…",null,null],[10,"round_into","","",19,[[],["t"]]],[0,"error","piet","The common error type for piet operations.",null,null],[3,"Error","piet::error","An error that can occur while rendering 2D graphics.",null,null],[0,"gradient","piet","Gradient specifications.",null,null],[3,"FixedLinearGradient","piet::gradient","Specification of a linear gradient.",null,null],[12,"start","","The start point (corresponding to pos 0.0).",0,null],[12,"end","","The end point (corresponding to pos 1.0).",0,null],[12,"stops","","The stops.",0,null],[3,"FixedRadialGradient","","Specification of a radial gradient in image-space.",null,null],[12,"center","","The center.",1,null],[12,"origin_offset","","The offset of the origin relative to the center.",1,null],[12,"radius","","The radius.",1,null],[12,"stops","","The stops (see similar field in `LinearGradient`).",1,null],[3,"GradientStop","","Specification of a gradient stop.",null,null],[12,"pos","","The coordinate of the stop.",2,null],[12,"color","","The color at that stop.",2,null],[3,"LinearGradient","","A description of a linear gradient in the unit rect, which…",null,null],[12,"start","","",3,null],[12,"end","","",3,null],[12,"stops","","",3,null],[3,"RadialGradient","","A description of a radial gradient in the unit rect, which…",null,null],[12,"center","","",4,null],[12,"origin","","",4,null],[12,"radius","","",4,null],[12,"stops","","",4,null],[12,"scale_mode","","",4,null],[3,"UnitPoint","","A representation of a point relative to a unit rectangle.",null,null],[12,"u","","",5,null],[12,"v","","",5,null],[4,"FixedGradient","","Any fixed gradient.",null,null],[13,"Linear","","A linear gradient.",11,null],[13,"Radial","","A radial gradient.",11,null],[4,"ScaleMode","","Mappings from the unit square into a non-square rectangle.",null,null],[13,"Fit","","The unit 1.0 is mapped to the smaller of width & height,…",12,null],[13,"Fill","","The unit 1.0 is mapped to the larger of width & height;…",12,null],[5,"equalize_sides_preserving_center","","",null,[[["f64"],["rect"]],["rect"]]],[6,"GradientStopArray","","",null,null],[17,"MAX_GRADIENT_STOPS","","",null,null],[8,"GradientStops","","A flexible, ergonomic way to describe gradient stops.",null,null],[10,"to_vec","","",20,[[],["arrayvec"]]],[18,"TOP_LEFT","piet","",5,null],[18,"TOP","","",5,null],[18,"TOP_RIGHT","","",5,null],[18,"LEFT","","",5,null],[18,"CENTER","","",5,null],[18,"RIGHT","","",5,null],[18,"BOTTOM_LEFT","","",5,null],[18,"BOTTOM","","",5,null],[18,"BOTTOM_RIGHT","","",5,null],[11,"new","","Create a new UnitPoint.",5,[[["f64"]],["unitpoint"]]],[11,"resolve","","Given a rectangle, resolve the point within the rectangle.",5,[[["self"],["rect"]],["point"]]],[11,"new","","Create a new linear gradient.",3,[[["unitpoint"]],["lineargradient"]]],[11,"resolve","","Generate a [`FixedLinearGradient`] by mapping points in…",3,[[["self"],["rect"]],["fixedlineargradient"]]],[11,"new","","Creates a simple `RadialGradient`. This gradient has…",4,[[["f64"]],["self"]]],[11,"with_center","","A builder-style method for changing the center of the…",4,[[["unitpoint"]],["self"]]],[11,"with_origin","","A builder-style method for changing the origin of the…",4,[[["unitpoint"]],["self"]]],[11,"with_scale_mode","","A builder-style method for changing the [`ScaleMode`] of…",4,[[["scalemode"]],["self"]]],[11,"resolve","","Generate a [`FixedRadialGradient`] by mapping points in…",4,[[["self"],["rect"]],["fixedradialgradient"]]],[0,"null_renderer","","A render context that does nothing.",null,null],[0,"render_context","","The main render context trait.",null,null],[4,"InterpolationMode","piet::render_context","A requested interpolation mode for drawing images.",null,null],[13,"NearestNeighbor","","Don't interpolate, use nearest neighbor.",13,null],[13,"Bilinear","","Use bilinear interpolation.",13,null],[4,"ImageFormat","","The pixel format for bitmap images.",null,null],[13,"Rgb","","3 bytes per pixel, in RGB order.",14,null],[13,"RgbaSeparate","","4 bytes per pixel, in RGBA order, with separate alpha.",14,null],[13,"RgbaPremul","","4 bytes per pixel, in RGBA order, with premultiplied alpha.",14,null],[4,"PaintBrush","","A color or a gradient.",null,null],[13,"Color","","",15,null],[8,"RenderContext","","The main trait for rendering graphics.",null,null],[16,"Brush","","The type of a \"brush\".",21,null],[16,"Text","","An associated factory for creating text layouts and…",21,null],[16,"TextLayout","","",21,null],[10,"status","","Report an internal error.",21,[[["self"]],[["result",["error"]],["error"]]]],[10,"solid_brush","","Create a new brush resource.",21,[[["self"],["color"]]]],[10,"clear","","Clear the canvas with the given color.",21,[[["self"],["color"]]]],[10,"stroke","","Stroke a shape.",21,[[["self"],["f64"]]]],[10,"stroke_styled","","Stroke a shape, with styled strokes.",21,[[["strokestyle"],["self"],["f64"]]]],[10,"fill","","Fill a shape, using non-zero fill rule.",21,[[["self"]]]],[10,"fill_even_odd","","Fill a shape, using even-odd fill rule",21,[[["self"]]]],[10,"clip","","Clip to a shape.",21,[[["self"]]]],[10,"text","","",21,[[["self"]]]],[10,"draw_text","","Draw a text layout.",21,[[["self"]]]],[10,"save","","Save the context state.",21,[[["self"]],[["result",["error"]],["error"]]]],[10,"restore","","Restore the context state.",21,[[["self"]],[["result",["error"]],["error"]]]],[11,"with_save","","Do graphics operations with the context state saved and…",21,[[["self"]],[["result",["error"]],["error"]]]],[10,"finish","","Finish any pending operations.",21,[[["self"]],[["result",["error"]],["error"]]]],[10,"transform","","Apply a transform.",21,[[["self"],["affine"]]]],[8,"IntoBrush","","A trait for various types that can be used as brushes.…",null,null],[10,"make_brush","","",22,[[["self"],["p"]]]],[11,"bytes_per_pixel","piet","",14,[[["self"]],["usize"]]],[0,"shapes","","Options for drawing paths.",null,null],[3,"StrokeStyle","piet::shapes","Options for drawing stroked lines.",null,null],[12,"line_join","","",6,null],[12,"line_cap","","",6,null],[12,"dash","","",6,null],[12,"miter_limit","","",6,null],[4,"LineJoin","","Options for angled joins in strokes.",null,null],[13,"Miter","","",16,null],[13,"Round","","",16,null],[13,"Bevel","","",16,null],[4,"LineCap","","Options for the cap of stroked lines.",null,null],[13,"Butt","","",17,null],[13,"Round","","",17,null],[13,"Square","","",17,null],[6,"DashArray","","",null,null],[17,"MAX_DASH","","",null,null],[11,"new","piet","",6,[[],["strokestyle"]]],[11,"set_line_join","","",6,[[["linejoin"],["self"]]]],[11,"set_line_cap","","",6,[[["self"],["linecap"]]]],[11,"set_dash","","",6,[[["arrayvec"],["self"],["f64"]]]],[11,"set_miter_limit","","",6,[[["f64"]]]],[0,"text","","Traits for fonts and text handling.",null,null],[3,"HitTestPoint","piet::text","return values for `hit_test_point`.",null,null],[12,"metrics","","`metrics.text_position` will give you the text position.",7,null],[12,"is_inside","","`is_inside` indicates whether the hit test point landed…",7,null],[3,"HitTestTextPosition","","return values for `hit_test_text_position`.",null,null],[12,"point","","the `point`'s `x` value is the position of the leading…",8,null],[12,"metrics","","`metrics.text_position` will give you the text position.",8,null],[3,"HitTestMetrics","","Hit test metrics, returned as part of…",null,null],[12,"text_position","","",9,null],[8,"Text","","",null,null],[16,"FontBuilder","","",23,null],[16,"Font","","",23,null],[16,"TextLayoutBuilder","","",23,null],[16,"TextLayout","","",23,null],[10,"new_font_by_name","","",23,[[["str"],["self"],["f64"]]]],[10,"new_text_layout","","",23,[[["self"],["str"]]]],[8,"FontBuilder","","",null,null],[16,"Out","","",24,null],[10,"build","","",24,[[],[["error"],["result",["error"]]]]],[8,"Font","","",null,null],[8,"TextLayoutBuilder","","",null,null],[16,"Out","","",25,null],[10,"build","","",25,[[],[["error"],["result",["error"]]]]],[8,"TextLayout","","Text Layout",null,null],[10,"width","","Measure the advance width of the text.",26,[[["self"]],["f64"]]],[10,"hit_test_point","","Given a `Point`, determine the corresponding text position.",26,[[["point"],["self"]],["hittestpoint"]]],[10,"hit_test_text_position","","Given a text position, determine the corresponding pixel…",26,[[["self"],["usize"]],[["hittesttextposition"],["option",["hittesttextposition"]]]]],[8,"RoundFrom","piet","This is our own implementation of a \"lossy From\" trait,…",null,null],[10,"round_from","","",18,[[["t"]],["self"]]],[8,"RoundInto","","The companion to `RoundFrom`. As with `From` and `Into`, a…",null,null],[10,"round_into","","",19,[[],["t"]]],[8,"GradientStops","","A flexible, ergonomic way to describe gradient stops.",null,null],[10,"to_vec","","",20,[[],["arrayvec"]]],[8,"RenderContext","","The main trait for rendering graphics.",null,null],[16,"Brush","","The type of a \"brush\".",21,null],[16,"Text","","An associated factory for creating text layouts and…",21,null],[16,"TextLayout","","",21,null],[10,"status","","Report an internal error.",21,[[["self"]],[["result",["error"]],["error"]]]],[10,"solid_brush","","Create a new brush resource.",21,[[["self"],["color"]]]],[10,"clear","","Clear the canvas with the given color.",21,[[["self"],["color"]]]],[10,"stroke","","Stroke a shape.",21,[[["self"],["f64"]]]],[10,"stroke_styled","","Stroke a shape, with styled strokes.",21,[[["strokestyle"],["self"],["f64"]]]],[10,"fill","","Fill a shape, using non-zero fill rule.",21,[[["self"]]]],[10,"fill_even_odd","","Fill a shape, using even-odd fill rule",21,[[["self"]]]],[10,"clip","","Clip to a shape.",21,[[["self"]]]],[10,"text","","",21,[[["self"]]]],[10,"draw_text","","Draw a text layout.",21,[[["self"]]]],[10,"save","","Save the context state.",21,[[["self"]],[["result",["error"]],["error"]]]],[10,"restore","","Restore the context state.",21,[[["self"]],[["result",["error"]],["error"]]]],[11,"with_save","piet::render_context","Do graphics operations with the context state saved and…",21,[[["self"]],[["result",["error"]],["error"]]]],[10,"finish","piet","Finish any pending operations.",21,[[["self"]],[["result",["error"]],["error"]]]],[10,"transform","","Apply a transform.",21,[[["self"],["affine"]]]],[8,"IntoBrush","","A trait for various types that can be used as brushes.…",null,null],[10,"make_brush","","",22,[[["self"],["p"]]]],[8,"Text","","",null,null],[16,"FontBuilder","","",23,null],[16,"Font","","",23,null],[16,"TextLayoutBuilder","","",23,null],[16,"TextLayout","","",23,null],[10,"new_font_by_name","","",23,[[["str"],["self"],["f64"]]]],[10,"new_text_layout","","",23,[[["self"],["str"]]]],[8,"FontBuilder","","",null,null],[16,"Out","","",24,null],[10,"build","","",24,[[],[["error"],["result",["error"]]]]],[8,"Font","","",null,null],[8,"TextLayoutBuilder","","",null,null],[16,"Out","","",25,null],[10,"build","","",25,[[],[["error"],["result",["error"]]]]],[8,"TextLayout","","Text Layout",null,null],[10,"width","","Measure the advance width of the text.",26,[[["self"]],["f64"]]],[10,"hit_test_point","","Given a `Point`, determine the corresponding text position.",26,[[["point"],["self"]],["hittestpoint"]]],[10,"hit_test_text_position","","Given a text position, determine the corresponding pixel…",26,[[["self"],["usize"]],[["hittesttextposition"],["option",["hittesttextposition"]]]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"make_brush","","",10,[[["self"],["p"]]]],[11,"make_brush","","",15,[[["self"],["p"]]]],[11,"from","","",11,[[["fixedlineargradient"]],["fixedgradient"]]],[11,"from","","",11,[[["fixedradialgradient"]],["fixedgradient"]]],[11,"from","","",15,[[["color"]],["paintbrush"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"eq","","",13,[[["interpolationmode"],["self"]],["bool"]]],[11,"eq","","",14,[[["self"],["imageformat"]],["bool"]]],[11,"eq","","",6,[[["self"],["strokestyle"]],["bool"]]],[11,"ne","","",6,[[["self"],["strokestyle"]],["bool"]]],[11,"eq","","",16,[[["linejoin"],["self"]],["bool"]]],[11,"eq","","",17,[[["linecap"],["self"]],["bool"]]],[11,"eq","","",7,[[["hittestpoint"],["self"]],["bool"]]],[11,"ne","","",7,[[["hittestpoint"],["self"]],["bool"]]],[11,"eq","","",9,[[["self"],["hittestmetrics"]],["bool"]]],[11,"ne","","",9,[[["self"],["hittestmetrics"]],["bool"]]],[11,"clone","","",10,[[["self"]],["color"]]],[11,"clone","","",0,[[["self"]],["fixedlineargradient"]]],[11,"clone","","",1,[[["self"]],["fixedradialgradient"]]],[11,"clone","","",11,[[["self"]],["fixedgradient"]]],[11,"clone","","",2,[[["self"]],["gradientstop"]]],[11,"clone","","",3,[[["self"]],["lineargradient"]]],[11,"clone","","",4,[[["self"]],["radialgradient"]]],[11,"clone","","",12,[[["self"]],["scalemode"]]],[11,"clone","","",5,[[["self"]],["unitpoint"]]],[11,"clone","","",13,[[["self"]],["interpolationmode"]]],[11,"clone","","",14,[[["self"]],["imageformat"]]],[11,"clone","","",15,[[["self"]],["paintbrush"]]],[11,"clone","","",6,[[["self"]],["strokestyle"]]],[11,"clone","","",16,[[["self"]],["linejoin"]]],[11,"clone","","",17,[[["self"]],["linecap"]]],[11,"default","","",7,[[],["hittestpoint"]]],[11,"default","","",8,[[],["hittesttextposition"]]],[11,"default","","",9,[[],["hittestmetrics"]]]],"p":[[3,"FixedLinearGradient"],[3,"FixedRadialGradient"],[3,"GradientStop"],[3,"LinearGradient"],[3,"RadialGradient"],[3,"UnitPoint"],[3,"StrokeStyle"],[3,"HitTestPoint"],[3,"HitTestTextPosition"],[3,"HitTestMetrics"],[4,"Color"],[4,"FixedGradient"],[4,"ScaleMode"],[4,"InterpolationMode"],[4,"ImageFormat"],[4,"PaintBrush"],[4,"LineJoin"],[4,"LineCap"],[8,"RoundFrom"],[8,"RoundInto"],[8,"GradientStops"],[8,"RenderContext"],[8,"IntoBrush"],[8,"Text"],[8,"FontBuilder"],[8,"TextLayoutBuilder"],[8,"TextLayout"],[3,"Error"]]};
searchIndex["piet_common"] = {"doc":"A piet backend appropriate for the current platform.","i":[[0,"common","piet_common::kurbo","Common mathematical operations",null,null],[5,"solve_cubic","piet_common::kurbo::common","Find real roots of cubic equation.",null,[[["f64"]],["arrayvec"]]],[5,"solve_quadratic","","Find real roots of quadratic equation.",null,[[["f64"]],["arrayvec"]]],[17,"GAUSS_LEGENDRE_COEFFS_3","","Tables of Legendre-Gauss quadrature coefficients, adapted…",null,null],[17,"GAUSS_LEGENDRE_COEFFS_5","","",null,null],[17,"GAUSS_LEGENDRE_COEFFS_7","","",null,null],[17,"GAUSS_LEGENDRE_COEFFS_9","","",null,null],[17,"GAUSS_LEGENDRE_COEFFS_11","","",null,null],[17,"GAUSS_LEGENDRE_COEFFS_24","","",null,null],[3,"Point","piet_common::kurbo","A 2d point.",null,null],[12,"x","","The x coordinate.",0,null],[12,"y","","The y coordinate.",0,null],[3,"Rect","","A rectangle.",null,null],[12,"x0","","The minimum x coordinate (left edge).",1,null],[12,"y0","","The minimum y coordinate (top edge in y-down spaces).",1,null],[12,"x1","","The maximum x coordinate (right edge).",1,null],[12,"y1","","The maximum y coordinate (bottom edge in y-down spaces).",1,null],[3,"Vec2","","A 2D vector.",null,null],[12,"x","","",2,null],[12,"y","","",2,null],[4,"PathEl","","The element of a Bézier path.",null,null],[13,"MoveTo","","",3,null],[13,"LineTo","","",3,null],[13,"QuadTo","","",3,null],[13,"CurveTo","","",3,null],[13,"ClosePath","","",3,null],[17,"MAX_EXTREMA","","The maximum number of extrema that can be reported in the…",null,null],[3,"Affine","","A 2D affine transform.",null,null],[12,"0","","",4,null],[3,"CubicBez","","A single cubic Bézier segment.",null,null],[12,"p0","","",5,null],[12,"p1","","",5,null],[12,"p2","","",5,null],[12,"p3","","",5,null],[3,"Line","","A single line.",null,null],[12,"p0","","",6,null],[12,"p1","","",6,null],[8,"ParamCurve","","A curve parametrized by a scalar.",null,null],[10,"eval","","Evaluate the curve at parameter `t`.",7,[[["f64"],["self"]],["point"]]],[10,"subsegment","","Get a subsegment of the curve for the given parameter range.",7,[[["range",["f64"]],["self"],["f64"]],["self"]]],[11,"subdivide","","Subdivide into (roughly) halves.",7,[[["self"]]]],[11,"start","","The start point.",7,[[["self"]],["point"]]],[11,"end","","The end point.",7,[[["self"]],["point"]]],[8,"ParamCurveArclen","","A parametrized curve that can have its arc length measured.",null,null],[10,"arclen","","The arc length of the curve.",8,[[["f64"],["self"]],["f64"]]],[11,"inv_arclen","","Solve for the parameter that has the given arclength from…",8,[[["f64"],["self"]],["f64"]]],[8,"ParamCurveArea","","A parametrized curve that can have its signed area measured.",null,null],[10,"signed_area","","Compute the signed area under the curve.",9,[[["self"]],["f64"]]],[8,"ParamCurveExtrema","","A parametrized curve that reports its extrema.",null,null],[10,"extrema","","Compute the extrema of the curve.",10,[[["self"]],["arrayvec"]]],[11,"extrema_ranges","","Return parameter ranges, each of which is monotonic within…",10,[[["self"]],["arrayvec"]]],[11,"bounding_box","","The smallest rectangle that encloses the curve in the…",10,[[["self"]],["rect"]]],[8,"ParamCurveNearest","","A parametrized curve that reports the nearest point.",null,null],[10,"nearest","","Find the point on the curve nearest the given point.",11,[[["f64"],["self"],["point"]]]],[3,"QuadBez","","A single quadratic Bézier segment.",null,null],[12,"p0","","",12,null],[12,"p1","","",12,null],[12,"p2","","",12,null],[8,"Shape","","A generic trait for open and closed shapes.",null,null],[16,"BezPathIter","","The iterator resulting from `to_bez_path`.",13,null],[10,"to_bez_path","","Convert to a Bézier path, as an iterator over path elements.",13,[[["f64"],["self"]]]],[11,"into_bez_path","","Convert into a Bézier path.",13,[[["f64"]],["bezpath"]]],[10,"area","","Signed area.",13,[[["self"]],["f64"]]],[10,"perimeter","","Total length of perimeter.",13,[[["f64"],["self"]],["f64"]]],[10,"winding","","Winding number of point.",13,[[["self"],["point"]],["i32"]]],[10,"bounding_box","","The smallest rectangle that encloses the shape.",13,[[["self"]],["rect"]]],[11,"as_line","","If the shape is a line, make it available.",13,[[["self"]],[["option",["line"]],["line"]]]],[11,"as_rect","","If the shape is a rectangle, make it available.",13,[[["self"]],[["option",["rect"]],["rect"]]]],[11,"as_rounded_rect","","If the shape is a rounded rectangle, make it available.",13,[[["self"]],[["option",["roundedrect"]],["roundedrect"]]]],[11,"as_circle","","If the shape is a circle, make it available.",13,[[["self"]],[["option",["circle"]],["circle"]]]],[11,"as_path_slice","","If the shape is stored as a slice of path elements, make…",13,[[["self"]],["option"]]],[3,"TranslateScale","","A transformation including scaling and translation.",null,null],[12,"translation","","",14,null],[12,"scale","","",14,null],[8,"ParamCurveCurvature","","A parametrized curve that reports its curvature.",null,null],[11,"curvature","","Compute the signed curvature at parameter `t`.",15,[[["f64"],["self"]],["f64"]]],[8,"ParamCurveDeriv","","A differentiable parametrized curve.",null,null],[16,"DerivResult","","",16,null],[10,"deriv","","The derivative of the curve.",16,[[["self"]]]],[11,"gauss_arclen","","Estimate arclength using Gaussian quadrature.",16,[[["self"]],["f64"]]],[3,"Insets","","Insets from the edges of a rectangle.",null,null],[12,"x0","","The minimum x coordinate (left edge).",17,null],[12,"y0","","The minimum y coordinate (top edge in y-down spaces).",17,null],[12,"x1","","The maximum x coordinate (right edge).",17,null],[12,"y1","","The maximum y coordinate (bottom edge in y-down spaces).",17,null],[3,"RoundedRect","","A rectangle with equally rounded corners.",null,null],[12,"rect","","Coordinates of the rectangle.",18,null],[12,"radius","","Radius of all four corners.",18,null],[3,"Size","","A 2d size.",null,null],[12,"width","","The width.",19,null],[12,"height","","The height.",19,null],[3,"Arc","","A single arc segment.",null,null],[12,"center","","",20,null],[12,"radii","","",20,null],[12,"start_angle","","",20,null],[12,"sweep_angle","","",20,null],[12,"x_rotation","","",20,null],[3,"BezPath","","A path that can Bézier segments up to cubic, possibly with…",null,null],[12,"0","","",21,null],[3,"Circle","","A circle.",null,null],[12,"center","","The center.",22,null],[12,"radius","","The radius.",22,null],[6,"PathElArray","","",null,null],[17,"MAX_BEZ_PATH","","",null,null],[4,"PathSeg","","A segment of a Bézier path.",null,null],[13,"Line","","",23,null],[13,"Quad","","",23,null],[13,"Cubic","","",23,null],[3,"ConstPoint","","A trivial \"curve\" that is just a constant.",null,null],[12,"0","","",24,null],[4,"Color","piet_common","A datatype representing color.",null,null],[13,"Rgba32","","",25,null],[3,"Error","","An error that can occur while rendering 2D graphics.",null,null],[8,"Font","","",null,null],[8,"FontBuilder","","",null,null],[16,"Out","","",26,null],[10,"build","","",26,[[],[["result",["error"]],["error"]]]],[3,"HitTestPoint","","return values for `hit_test_point`.",null,null],[12,"metrics","","`metrics.text_position` will give you the text position.",27,null],[12,"is_inside","","`is_inside` indicates whether the hit test point landed…",27,null],[3,"HitTestTextPosition","","return values for `hit_test_text_position`.",null,null],[12,"point","","the `point`'s `x` value is the position of the leading…",28,null],[12,"metrics","","`metrics.text_position` will give you the text position.",28,null],[8,"IntoBrush","","A trait for various types that can be used as brushes.…",null,null],[10,"make_brush","","",29,[[["self"],["p"]]]],[8,"RenderContext","","The main trait for rendering graphics.",null,null],[16,"Brush","","The type of a \"brush\".",30,null],[16,"Text","","An associated factory for creating text layouts and…",30,null],[16,"TextLayout","","",30,null],[10,"status","","Report an internal error.",30,[[["self"]],[["error"],["result",["error"]]]]],[10,"solid_brush","","Create a new brush resource.",30,[[["self"],["color"]]]],[10,"clear","","Clear the canvas with the given color.",30,[[["self"],["color"]]]],[10,"stroke","","Stroke a shape.",30,[[["self"],["f64"]]]],[10,"stroke_styled","","Stroke a shape, with styled strokes.",30,[[["self"],["f64"],["strokestyle"]]]],[10,"fill","","Fill a shape, using non-zero fill rule.",30,[[["self"]]]],[10,"fill_even_odd","","Fill a shape, using even-odd fill rule",30,[[["self"]]]],[10,"clip","","Clip to a shape.",30,[[["self"]]]],[10,"text","","",30,[[["self"]]]],[10,"draw_text","","Draw a text layout.",30,[[["self"]]]],[10,"save","","Save the context state.",30,[[["self"]],[["error"],["result",["error"]]]]],[10,"restore","","Restore the context state.",30,[[["self"]],[["error"],["result",["error"]]]]],[11,"with_save","","Do graphics operations with the context state saved and…",30,[[["self"]],[["error"],["result",["error"]]]]],[10,"finish","","Finish any pending operations.",30,[[["self"]],[["error"],["result",["error"]]]]],[10,"transform","","Apply a transform.",30,[[["affine"],["self"]]]],[3,"StrokeStyle","","Options for drawing stroked lines.",null,null],[12,"line_join","","",31,null],[12,"line_cap","","",31,null],[12,"dash","","",31,null],[12,"miter_limit","","",31,null],[8,"Text","","",null,null],[16,"FontBuilder","","",32,null],[16,"Font","","",32,null],[16,"TextLayoutBuilder","","",32,null],[16,"TextLayout","","",32,null],[10,"new_font_by_name","","",32,[[["str"],["self"],["f64"]]]],[10,"new_text_layout","","",32,[[["str"],["self"]]]],[8,"TextLayout","","Text Layout",null,null],[10,"width","","Measure the advance width of the text.",33,[[["self"]],["f64"]]],[10,"hit_test_point","","Given a `Point`, determine the corresponding text position.",33,[[["self"],["point"]],["hittestpoint"]]],[10,"hit_test_text_position","","Given a text position, determine the corresponding pixel…",33,[[["self"],["usize"]],[["hittesttextposition"],["option",["hittesttextposition"]]]]],[8,"TextLayoutBuilder","","",null,null],[16,"Out","","",34,null],[10,"build","","",34,[[],[["error"],["result",["error"]]]]],[8,"RoundFrom","","This is our own implementation of a \"lossy From\" trait,…",null,null],[10,"round_from","","",35,[[["t"]],["self"]]],[8,"RoundInto","","The companion to `RoundFrom`. As with `From` and `Into`, a…",null,null],[10,"round_into","","",36,[[],["t"]]],[8,"GradientStops","","A flexible, ergonomic way to describe gradient stops.",null,null],[10,"to_vec","","",37,[[],["arrayvec"]]],[3,"FixedLinearGradient","","Specification of a linear gradient.",null,null],[12,"start","","The start point (corresponding to pos 0.0).",38,null],[12,"end","","The end point (corresponding to pos 1.0).",38,null],[12,"stops","","The stops.",38,null],[3,"FixedRadialGradient","","Specification of a radial gradient in image-space.",null,null],[12,"center","","The center.",39,null],[12,"origin_offset","","The offset of the origin relative to the center.",39,null],[12,"radius","","The radius.",39,null],[12,"stops","","The stops (see similar field in `LinearGradient`).",39,null],[4,"FixedGradient","","Any fixed gradient.",null,null],[13,"Linear","","A linear gradient.",40,null],[13,"Radial","","A radial gradient.",40,null],[3,"GradientStop","","Specification of a gradient stop.",null,null],[12,"pos","","The coordinate of the stop.",41,null],[12,"color","","The color at that stop.",41,null],[3,"LinearGradient","","A description of a linear gradient in the unit rect, which…",null,null],[12,"start","","",42,null],[12,"end","","",42,null],[12,"stops","","",42,null],[3,"RadialGradient","","A description of a radial gradient in the unit rect, which…",null,null],[12,"center","","",43,null],[12,"origin","","",43,null],[12,"radius","","",43,null],[12,"stops","","",43,null],[12,"scale_mode","","",43,null],[4,"ScaleMode","","Mappings from the unit square into a non-square rectangle.",null,null],[13,"Fit","","The unit 1.0 is mapped to the smaller of width & height,…",44,null],[13,"Fill","","The unit 1.0 is mapped to the larger of width & height;…",44,null],[3,"UnitPoint","","A representation of a point relative to a unit rectangle.",null,null],[12,"u","","",45,null],[12,"v","","",45,null],[4,"InterpolationMode","","A requested interpolation mode for drawing images.",null,null],[13,"NearestNeighbor","","Don't interpolate, use nearest neighbor.",46,null],[13,"Bilinear","","Use bilinear interpolation.",46,null],[4,"ImageFormat","","The pixel format for bitmap images.",null,null],[13,"Rgb","","3 bytes per pixel, in RGB order.",47,null],[13,"RgbaSeparate","","4 bytes per pixel, in RGBA order, with separate alpha.",47,null],[13,"RgbaPremul","","4 bytes per pixel, in RGBA order, with premultiplied alpha.",47,null],[4,"PaintBrush","","A color or a gradient.",null,null],[13,"Color","","",48,null],[4,"LineJoin","","Options for angled joins in strokes.",null,null],[13,"Miter","","",49,null],[13,"Round","","",49,null],[13,"Bevel","","",49,null],[4,"LineCap","","Options for the cap of stroked lines.",null,null],[13,"Butt","","",50,null],[13,"Round","","",50,null],[13,"Square","","",50,null],[3,"HitTestMetrics","","Hit test metrics, returned as part of…",null,null],[12,"text_position","","",51,null],[3,"Device","","The associated image type for this backend.",null,null],[0,"backend","","Support for piet embedded-graphics back-end.",null,null],[3,"Device","piet_common::backend","The associated image type for this backend.",null,null],[6,"Piet","","The `RenderContext` for the Embed backend, which is…",null,null],[6,"Brush","","The associated brush type for this backend.",null,null],[6,"PietText","","The associated text factory for this backend.",null,null],[6,"PietFont","","The associated font type for this backend.",null,null],[6,"PietFontBuilder","","The associated font builder for this backend.",null,null],[6,"PietTextLayout","","The associated text layout type for this backend.",null,null],[6,"PietTextLayoutBuilder","","The associated text layout builder for this backend.",null,null],[6,"Piet","piet_common","The `RenderContext` for the Embed backend, which is…",null,null],[6,"Brush","","The associated brush type for this backend.",null,null],[6,"PietText","","The associated text factory for this backend.",null,null],[6,"PietFont","","The associated font type for this backend.",null,null],[6,"PietFontBuilder","","The associated font builder for this backend.",null,null],[6,"PietTextLayout","","The associated text layout type for this backend.",null,null],[6,"PietTextLayoutBuilder","","The associated text layout builder for this backend.",null,null],[11,"from","piet_common::kurbo","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"round_from","","",0,[[["t"]],["t"]]],[11,"round_into","","",0,[[],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"round_from","","",1,[[["t"]],["t"]]],[11,"round_into","","",1,[[],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"round_from","","",2,[[["t"]],["t"]]],[11,"round_into","","",2,[[],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"round_from","","",3,[[["t"]],["t"]]],[11,"round_into","","",3,[[],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"round_from","","",4,[[["t"]],["t"]]],[11,"round_into","","",4,[[],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"round_from","","",5,[[["t"]],["t"]]],[11,"round_into","","",5,[[],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"round_from","","",6,[[["t"]],["t"]]],[11,"round_into","","",6,[[],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"round_from","","",12,[[["t"]],["t"]]],[11,"round_into","","",12,[[],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"round_from","","",14,[[["t"]],["t"]]],[11,"round_into","","",14,[[],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"round_from","","",17,[[["t"]],["t"]]],[11,"round_into","","",17,[[],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"round_from","","",18,[[["t"]],["t"]]],[11,"round_into","","",18,[[],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"round_from","","",19,[[["t"]],["t"]]],[11,"round_into","","",19,[[],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"round_from","","",20,[[["t"]],["t"]]],[11,"round_into","","",20,[[],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"round_from","","",21,[[["t"]],["t"]]],[11,"round_into","","",21,[[],["u"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"round_from","","",22,[[["t"]],["t"]]],[11,"round_into","","",22,[[],["u"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"round_from","","",23,[[["t"]],["t"]]],[11,"round_into","","",23,[[],["u"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"round_from","","",24,[[["t"]],["t"]]],[11,"round_into","","",24,[[],["u"]]],[11,"from","piet_common","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"round_from","","",25,[[["t"]],["t"]]],[11,"round_into","","",25,[[],["u"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"into","","",52,[[],["u"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"round_from","","",52,[[["t"]],["t"]]],[11,"round_into","","",52,[[],["u"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"round_from","","",27,[[["t"]],["t"]]],[11,"round_into","","",27,[[],["u"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"round_from","","",28,[[["t"]],["t"]]],[11,"round_into","","",28,[[],["u"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"round_from","","",31,[[["t"]],["t"]]],[11,"round_into","","",31,[[],["u"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"round_from","","",38,[[["t"]],["t"]]],[11,"round_into","","",38,[[],["u"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"round_from","","",39,[[["t"]],["t"]]],[11,"round_into","","",39,[[],["u"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"round_from","","",40,[[["t"]],["t"]]],[11,"round_into","","",40,[[],["u"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"round_from","","",41,[[["t"]],["t"]]],[11,"round_into","","",41,[[],["u"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"round_from","","",42,[[["t"]],["t"]]],[11,"round_into","","",42,[[],["u"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"round_from","","",43,[[["t"]],["t"]]],[11,"round_into","","",43,[[],["u"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"into","","",44,[[],["u"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"round_from","","",44,[[["t"]],["t"]]],[11,"round_into","","",44,[[],["u"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into","","",45,[[],["u"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"round_from","","",45,[[["t"]],["t"]]],[11,"round_into","","",45,[[],["u"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"into","","",46,[[],["u"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"round_from","","",46,[[["t"]],["t"]]],[11,"round_into","","",46,[[],["u"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"into","","",47,[[],["u"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"round_from","","",47,[[["t"]],["t"]]],[11,"round_into","","",47,[[],["u"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"into","","",48,[[],["u"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"round_from","","",48,[[["t"]],["t"]]],[11,"round_into","","",48,[[],["u"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"into","","",49,[[],["u"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"round_from","","",49,[[["t"]],["t"]]],[11,"round_into","","",49,[[],["u"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"into","","",50,[[],["u"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"round_from","","",50,[[["t"]],["t"]]],[11,"round_into","","",50,[[],["u"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"into","","",51,[[],["u"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"round_from","","",51,[[["t"]],["t"]]],[11,"round_into","","",51,[[],["u"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"into","","",53,[[],["u"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"round_from","","",53,[[["t"]],["t"]]],[11,"round_into","","",53,[[],["u"]]],[11,"eq","","",46,[[["self"],["interpolationmode"]],["bool"]]],[11,"eq","","",31,[[["strokestyle"],["self"]],["bool"]]],[11,"ne","","",31,[[["strokestyle"],["self"]],["bool"]]],[11,"eq","","",47,[[["self"],["imageformat"]],["bool"]]],[11,"eq","","",27,[[["hittestpoint"],["self"]],["bool"]]],[11,"ne","","",27,[[["hittestpoint"],["self"]],["bool"]]],[11,"eq","","",51,[[["self"],["hittestmetrics"]],["bool"]]],[11,"ne","","",51,[[["self"],["hittestmetrics"]],["bool"]]],[11,"eq","","",50,[[["self"],["linecap"]],["bool"]]],[11,"eq","","",49,[[["linejoin"],["self"]],["bool"]]],[11,"default","","",27,[[],["hittestpoint"]]],[11,"default","","",51,[[],["hittestmetrics"]]],[11,"default","","",28,[[],["hittesttextposition"]]],[11,"round_from","piet_common::kurbo","",2,[[],["vec2"]]],[11,"round_from","","",2,[[],["vec2"]]],[11,"clone","piet_common","",47,[[["self"]],["imageformat"]]],[11,"clone","","",45,[[["self"]],["unitpoint"]]],[11,"clone","","",25,[[["self"]],["color"]]],[11,"clone","","",31,[[["self"]],["strokestyle"]]],[11,"clone","","",41,[[["self"]],["gradientstop"]]],[11,"clone","","",49,[[["self"]],["linejoin"]]],[11,"clone","","",44,[[["self"]],["scalemode"]]],[11,"clone","","",43,[[["self"]],["radialgradient"]]],[11,"clone","","",46,[[["self"]],["interpolationmode"]]],[11,"clone","","",38,[[["self"]],["fixedlineargradient"]]],[11,"clone","","",39,[[["self"]],["fixedradialgradient"]]],[11,"clone","","",48,[[["self"]],["paintbrush"]]],[11,"clone","","",50,[[["self"]],["linecap"]]],[11,"clone","","",40,[[["self"]],["fixedgradient"]]],[11,"clone","","",42,[[["self"]],["lineargradient"]]],[11,"fmt","","",31,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",28,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",50,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",27,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",51,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",45,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",52,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",47,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",49,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"make_brush","","",48,[[["self"],["p"]]]],[11,"make_brush","","",25,[[["self"],["p"]]]],[11,"from","","",48,[[["color"]],["paintbrush"]]],[11,"from","","",40,[[["fixedradialgradient"]],["fixedgradient"]]],[11,"from","","",40,[[["fixedlineargradient"]],["fixedgradient"]]],[11,"extrema","piet_common::kurbo","",23,[[["self"]],["arrayvec"]]],[11,"extrema","","",5,[[["self"]],["arrayvec"]]],[11,"extrema","","",6,[[["self"]],["arrayvec"]]],[11,"extrema","","",12,[[["self"]],["arrayvec"]]],[11,"add","","",0,[[["vec2"]],["point"]]],[11,"add","","",2,[[["vec2"]],["vec2"]]],[11,"add","","",1,[[["insets"]],["rect"]]],[11,"add","","",14,[[["vec2"]],["translatescale"]]],[11,"add","","",17,[[["rect"]],["rect"]]],[11,"add","","",1,[[["vec2"]],["rect"]]],[11,"add","","",22,[[["vec2"]],["circle"]]],[11,"add","","",2,[[["translatescale"]],["translatescale"]]],[11,"deriv","","",24,[[["self"]],["constpoint"]]],[11,"deriv","","",5,[[["self"]],["quadbez"]]],[11,"deriv","","",6,[[["self"]],["constpoint"]]],[11,"deriv","","",12,[[["self"]],["line"]]],[11,"eq","","",12,[[["quadbez"],["self"]],["bool"]]],[11,"ne","","",12,[[["quadbez"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["vec2"]],["bool"]]],[11,"ne","","",2,[[["self"],["vec2"]],["bool"]]],[11,"eq","","",5,[[["self"],["cubicbez"]],["bool"]]],[11,"ne","","",5,[[["self"],["cubicbez"]],["bool"]]],[11,"eq","","",23,[[["pathseg"],["self"]],["bool"]]],[11,"ne","","",23,[[["pathseg"],["self"]],["bool"]]],[11,"eq","","",19,[[["self"],["size"]],["bool"]]],[11,"ne","","",19,[[["self"],["size"]],["bool"]]],[11,"eq","","",6,[[["line"],["self"]],["bool"]]],[11,"ne","","",6,[[["line"],["self"]],["bool"]]],[11,"eq","","",0,[[["point"],["self"]],["bool"]]],[11,"ne","","",0,[[["point"],["self"]],["bool"]]],[11,"eval","","",6,[[["f64"],["self"]],["point"]]],[11,"start","","",6,[[["self"]],["point"]]],[11,"end","","",6,[[["self"]],["point"]]],[11,"subsegment","","",6,[[["range",["f64"]],["self"],["f64"]],["line"]]],[11,"eval","","",5,[[["f64"],["self"]],["point"]]],[11,"start","","",5,[[["self"]],["point"]]],[11,"end","","",5,[[["self"]],["point"]]],[11,"subsegment","","",5,[[["range",["f64"]],["self"],["f64"]],["cubicbez"]]],[11,"subdivide","","Subdivide into halves, using de Casteljau.",5,[[["self"]]]],[11,"eval","","",24,[[["f64"],["self"]],["point"]]],[11,"subsegment","","",24,[[["range",["f64"]],["self"],["f64"]],["constpoint"]]],[11,"eval","","",23,[[["f64"],["self"]],["point"]]],[11,"subsegment","","",23,[[["range",["f64"]],["self"],["f64"]],["pathseg"]]],[11,"eval","","",12,[[["f64"],["self"]],["point"]]],[11,"start","","",12,[[["self"]],["point"]]],[11,"end","","",12,[[["self"]],["point"]]],[11,"subdivide","","Subdivide into halves, using de Casteljau.",12,[[["self"]]]],[11,"subsegment","","",12,[[["range",["f64"]],["self"],["f64"]],["quadbez"]]],[11,"div_assign","","",2,[[["self"],["f64"]]]],[11,"mul","","",14,[[["quadbez"]],["quadbez"]]],[11,"mul","","",14,[[["bezpath"]],["bezpath"]]],[11,"mul","","",14,[[["roundedrect"]],["roundedrect"]]],[11,"mul","","",14,[[["line"]],["line"]]],[11,"mul","","",19,[[["f64"]],["size"]]],[11,"mul","","",4,[[["line"]],["line"]]],[11,"mul","","",2,[[["f64"]],["vec2"]]],[11,"mul","","",4,[[["bezpath"]],["bezpath"]]],[11,"mul","","",14,[[["pathel"]],["pathel"]]],[11,"mul","","",14,[[["translatescale"]],["translatescale"]]],[11,"mul","","",4,[[["cubicbez"]],["cubicbez"]]],[11,"mul","","",14,[[["point"]],["point"]]],[11,"mul","","",4,[[["bezpath"]],["bezpath"]]],[11,"mul","","",14,[[["rect"]],["rect"]]],[11,"mul","","",14,[[["circle"]],["circle"]]],[11,"mul","","",14,[[["bezpath"]],["bezpath"]]],[11,"mul","","",4,[[["affine"]],["affine"]]],[11,"mul","","",4,[[["point"]],["point"]]],[11,"mul","","",4,[[["pathel"]],["pathel"]]],[11,"mul","","",14,[[["cubicbez"]],["cubicbez"]]],[11,"mul","","",4,[[["quadbez"]],["quadbez"]]],[11,"to_bez_path","","",18,[[["f64"],["self"]],["roundedrectpathiter"]]],[11,"area","","",18,[[["self"]],["f64"]]],[11,"perimeter","","",18,[[["f64"],["self"]],["f64"]]],[11,"winding","","",18,[[["self"],["point"]],["i32"]]],[11,"bounding_box","","",18,[[["self"]],["rect"]]],[11,"as_rounded_rect","","",18,[[["self"]],[["option",["roundedrect"]],["roundedrect"]]]],[11,"to_bez_path","","",1,[[["f64"],["self"]],["rectpathiter"]]],[11,"area","","",1,[[["self"]],["f64"]]],[11,"perimeter","","",1,[[["f64"],["self"]],["f64"]]],[11,"winding","","Note: this function is carefully designed so that if the…",1,[[["self"],["point"]],["i32"]]],[11,"bounding_box","","",1,[[["self"]],["rect"]]],[11,"as_rect","","",1,[[["self"]],[["option",["rect"]],["rect"]]]],[11,"to_bez_path","","",21,[[["f64"],["self"]]]],[11,"area","","Signed area.",21,[[["self"]],["f64"]]],[11,"perimeter","","",21,[[["f64"],["self"]],["f64"]]],[11,"winding","","Winding number of point.",21,[[["self"],["point"]],["i32"]]],[11,"bounding_box","","",21,[[["self"]],["rect"]]],[11,"as_path_slice","","",21,[[["self"]],["option"]]],[11,"to_bez_path","","",6,[[["f64"],["self"]],["linepathiter"]]],[11,"area","","Returning zero here is consistent with the contract (area…",6,[[["self"]],["f64"]]],[11,"perimeter","","",6,[[["f64"],["self"]],["f64"]]],[11,"winding","","Same consideration as `area`.",6,[[["self"],["point"]],["i32"]]],[11,"bounding_box","","",6,[[["self"]],["rect"]]],[11,"as_line","","",6,[[["self"]],[["option",["line"]],["line"]]]],[11,"to_bez_path","","",22,[[["f64"],["self"]],["circlepathiter"]]],[11,"area","","",22,[[["self"]],["f64"]]],[11,"perimeter","","",22,[[["f64"],["self"]],["f64"]]],[11,"winding","","",22,[[["self"],["point"]],["i32"]]],[11,"bounding_box","","",22,[[["self"]],["rect"]]],[11,"as_circle","","",22,[[["self"]],[["option",["circle"]],["circle"]]]],[11,"default","","",21,[[],["bezpath"]]],[11,"default","","",14,[[],["translatescale"]]],[11,"default","","",4,[[],["affine"]]],[11,"default","","",18,[[],["roundedrect"]]],[11,"default","","",1,[[],["rect"]]],[11,"default","","",0,[[],["point"]]],[11,"default","","",19,[[],["size"]]],[11,"default","","",22,[[],["circle"]]],[11,"default","","",2,[[],["vec2"]]],[11,"default","","",17,[[],["insets"]]],[11,"signed_area","","",5,[[["self"]],["f64"]]],[11,"signed_area","","",23,[[["self"]],["f64"]]],[11,"signed_area","","",6,[[["self"]],["f64"]]],[11,"signed_area","","",12,[[["self"]],["f64"]]],[11,"arclen","","",6,[[["f64"],["self"]],["f64"]]],[11,"arclen","","Arclength of a quadratic Bézier segment.",12,[[["f64"],["self"]],["f64"]]],[11,"arclen","","Arclength of a cubic Bézier segment.",5,[[["f64"],["self"]],["f64"]]],[11,"arclen","","",24,[[["f64"],["self"]],["f64"]]],[11,"arclen","","",23,[[["f64"],["self"]],["f64"]]],[11,"clone","","",23,[[["self"]],["pathseg"]]],[11,"clone","","",2,[[["self"]],["vec2"]]],[11,"clone","","",20,[[["self"]],["arc"]]],[11,"clone","","",14,[[["self"]],["translatescale"]]],[11,"clone","","",5,[[["self"]],["cubicbez"]]],[11,"clone","","",3,[[["self"]],["pathel"]]],[11,"clone","","",0,[[["self"]],["point"]]],[11,"clone","","",6,[[["self"]],["line"]]],[11,"clone","","",22,[[["self"]],["circle"]]],[11,"clone","","",1,[[["self"]],["rect"]]],[11,"clone","","",24,[[["self"]],["constpoint"]]],[11,"clone","","",21,[[["self"]],["bezpath"]]],[11,"clone","","",17,[[["self"]],["insets"]]],[11,"clone","","",19,[[["self"]],["size"]]],[11,"clone","","",4,[[["self"]],["affine"]]],[11,"clone","","",12,[[["self"]],["quadbez"]]],[11,"clone","","",18,[[["self"]],["roundedrect"]]],[11,"fmt","","",23,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",12,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",19,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",21,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",17,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",6,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",18,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",14,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",20,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",24,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",22,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"sub_assign","","",0,[[["self"],["vec2"]]]],[11,"sub_assign","","",14,[[["self"],["vec2"]]]],[11,"sub_assign","","",2,[[["self"],["vec2"]]]],[11,"fmt","","",19,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"mul_assign","","",2,[[["self"],["f64"]]]],[11,"mul_assign","","",4,[[["affine"],["self"]]]],[11,"mul_assign","","",14,[[["self"],["translatescale"]]]],[11,"mul_assign","","",19,[[["self"],["f64"]]]],[11,"sub","","",2,[[["vec2"]],["vec2"]]],[11,"sub","","",17,[[["rect"]],["rect"]]],[11,"sub","","",1,[[["rect"]],["insets"]]],[11,"sub","","",1,[[["vec2"]],["rect"]]],[11,"sub","","",0,[[["point"]],["vec2"]]],[11,"sub","","",0,[[["vec2"]],["point"]]],[11,"sub","","",14,[[["vec2"]],["translatescale"]]],[11,"sub","","",22,[[["vec2"]],["circle"]]],[11,"sub","","",1,[[["insets"]],["rect"]]],[11,"nearest","","Find nearest point, using analytical algorithm based on…",12,[[["f64"],["self"],["point"]]]],[11,"nearest","","",23,[[["f64"],["self"],["point"]]]],[11,"nearest","","Find nearest point, using subdivision.",5,[[["f64"],["self"],["point"]]]],[11,"nearest","","",6,[[["f64"],["self"],["point"]]]],[11,"neg","","",17,[[],["insets"]]],[11,"neg","","",2,[[],["vec2"]]],[11,"add_assign","","",2,[[["self"],["vec2"]]]],[11,"add_assign","","",0,[[["self"],["vec2"]]]],[11,"add_assign","","",14,[[["self"],["vec2"]]]],[11,"div","","Note: division by a scalar is implemented by multiplying…",2,[[["f64"]],["vec2"]]],[11,"from","","",1,[[],["rect"]]],[11,"from","","",19,[[],["size"]]],[11,"from","","",23,[[["cubicbez"]],["pathseg"]]],[11,"from","","",1,[[],["rect"]]],[11,"from","","",17,[[],["insets"]]],[11,"from","","",17,[[["f64"]],["insets"]]],[11,"from","","",23,[[["quadbez"]],["pathseg"]]],[11,"from","","",23,[[["line"]],["pathseg"]]],[11,"from","","",17,[[],["insets"]]],[11,"from","","",0,[[],["point"]]],[11,"from","","",2,[[],["vec2"]]],[11,"from","","",4,[[["translatescale"]],["affine"]]],[11,"curvature","","",6,[[["f64"],["self"]],["f64"]]],[18,"ZERO","","The point (0, 0).",0,null],[18,"ORIGIN","","The point at the origin; (0, 0).",0,null],[11,"new","","Create a new `Point` with the provided `x` and `y`…",0,[[["f64"]],["point"]]],[11,"to_vec2","","Convert this point into a `Vec2`.",0,[[],["vec2"]]],[11,"lerp","","Linearly interpolate between two points.",0,[[["f64"],["point"]],["point"]]],[11,"midpoint","","Determine the midpoint of two points.",0,[[["point"]],["point"]]],[11,"distance","","Euclidean distance.",0,[[["point"]],["f64"]]],[11,"round","","A new `Point`, with each of x and y rounded to the nearest…",0,[[],["point"]]],[18,"ZERO","","The empty rectangle at the origin.",1,null],[11,"new","","A new rectangle from minimum and maximum coordinates.",1,[[["f64"]],["rect"]]],[11,"from_points","","A new rectangle from two points.",1,[[],["rect"]]],[11,"from_origin_size","","A new rectangle from origin and size.",1,[[],["rect"]]],[11,"with_origin","","Create a new `Rect` with the same size as `self` and a new…",1,[[],["rect"]]],[11,"with_size","","Create a new `Rect` with the same origin as `self` and a…",1,[[],["rect"]]],[11,"inset","","Create a new `Rect` by applying the [`Insets`].",1,[[],["rect"]]],[11,"width","","The width of the rectangle.",1,[[["self"]],["f64"]]],[11,"height","","The height of the rectangle.",1,[[["self"]],["f64"]]],[11,"min_x","","Returns the minimum value for the x-coordinate of the…",1,[[["self"]],["f64"]]],[11,"max_x","","Returns the maximum value for the x-coordinate of the…",1,[[["self"]],["f64"]]],[11,"min_y","","Returns the minimum value for the y-coordinate of the…",1,[[["self"]],["f64"]]],[11,"max_y","","Returns the maximum value for the y-coordinate of the…",1,[[["self"]],["f64"]]],[11,"origin","","The origin of the rectangle.",1,[[["self"]],["point"]]],[11,"size","","The size of the rectangle.",1,[[["self"]],["size"]]],[11,"area","","The area of the rectangle.",1,[[["self"]],["f64"]]],[11,"center","","The center point of the rectangle.",1,[[["self"]],["point"]]],[11,"contains","","Returns `true` if `point` lies within `self`.",1,[[["self"],["point"]],["bool"]]],[11,"abs","","Take absolute value of width and height.",1,[[["self"]],["rect"]]],[11,"union","","The smallest rectangle enclosing two rectangles.",1,[[["self"],["rect"]],["rect"]]],[11,"union_pt","","Compute the union with one point.",1,[[["self"],["point"]],["rect"]]],[11,"intersect","","The intersection of two rectangles.",1,[[["self"],["rect"]],["rect"]]],[11,"inflate","","Expand a rectangle by a constant amount in both directions.",1,[[["f64"],["self"]],["rect"]]],[11,"round","","A new `Rect`, with each coordinate value rounded to the…",1,[[],["rect"]]],[11,"to_rounded_rect","","Creates a new [`RoundedRect`] from this `Rect` and the…",1,[[["f64"]],["roundedrect"]]],[18,"ZERO","","The vector (0, 0).",2,null],[11,"new","","Create a new vector.",2,[[["f64"]],["vec2"]]],[11,"to_point","","Convert this vector into a `Point`.",2,[[],["point"]]],[11,"to_size","","Convert this vector into a `Size`.",2,[[],["size"]]],[11,"dot","","Dot product of two vectors.",2,[[["vec2"],["self"]],["f64"]]],[11,"cross","","Cross product of two vectors.",2,[[["vec2"],["self"]],["f64"]]],[11,"hypot","","Magnitude of vector.",2,[[["self"]],["f64"]]],[11,"hypot2","","Magnitude squared of vector.",2,[[["self"]],["f64"]]],[11,"atan2","","Angle of vector.",2,[[["self"]],["f64"]]],[11,"from_angle","","A unit vector of the given angle.",2,[[["f64"]],["vec2"]]],[11,"lerp","","Linearly interpolate between two vectors.",2,[[["vec2"],["self"],["f64"]],["vec2"]]],[11,"normalize","","Returns a vector of magnitude 1.0 with the same angle as…",2,[[],["vec2"]]],[11,"round","","Returns a new `Vec2` with each of `x` and `y` rounded to…",2,[[],["vec2"]]],[11,"ceil","","Returns a new `Vec2` where each of `x` and `y`, with a…",2,[[],["vec2"]]],[11,"floor","","Returns a new `Vec2` where each of `x` and `y`, with a…",2,[[],["vec2"]]],[18,"FLIP_Y","","A transform that is flipped on the y-axis. Useful for…",4,null],[18,"FLIP_X","","A transform that is flipped on the x-axis.",4,null],[11,"new","","Construct an affine transform from coefficients.",4,[[],["affine"]]],[11,"scale","","An affine transform representing uniform scaling.",4,[[["f64"]],["affine"]]],[11,"rotate","","An affine transform representing rotation.",4,[[["f64"]],["affine"]]],[11,"translate","","An affine transform representing translation.",4,[[["v"]],["affine"]]],[11,"as_coeffs","","Get the coefficients of the transform.",4,[[]]],[11,"determinant","","Compute the determinant of this transform.",4,[[],["f64"]]],[11,"inverse","","Compute the inverse transform.",4,[[],["affine"]]],[11,"transform_rect_bbox","","Compute the bounding box of a transformed rectangle.",4,[[["rect"]],["rect"]]],[11,"new","","Create a new cubic Bézier segment.",5,[[["p"]],["cubicbez"]]],[11,"to_quads","","Convert to quadratic Béziers.",5,[[["f64"],["self"]]]],[11,"new","","",6,[[["p"]],["line"]]],[11,"new","","Create a new quadratic Bézier segment.",12,[[["v"]],["quadbez"]]],[11,"raise","","Raise the order by 1.",12,[[["self"]],["cubicbez"]]],[11,"new","","Create a new transformation from translation and scale.",14,[[["vec2"],["f64"]],["translatescale"]]],[11,"scale","","Create a new transformation with scale only.",14,[[["f64"]],["translatescale"]]],[11,"translate","","Create a new transformation with translation only.",14,[[["vec2"]],["translatescale"]]],[11,"as_tuple","","Decompose transformation into translation and scale.",14,[[]]],[11,"inverse","","Compute the inverse transform.",14,[[],["translatescale"]]],[18,"ZERO","","Zero'd insets.",17,null],[11,"uniform","","New uniform insets.",17,[[["f64"]],["insets"]]],[11,"uniform_xy","","New insets with uniform values along each axis.",17,[[["f64"]],["insets"]]],[11,"new","","New insets. The ordering of the arguments is \"left, top,…",17,[[["f64"]],["insets"]]],[11,"x_value","","The total delta on the x-axis represented by these insets.",17,[[],["f64"]]],[11,"y_value","","The total delta on the y-axis represented by these insets.",17,[[],["f64"]]],[11,"new","","A new rectangle from minimum and maximum coordinates.",18,[[["f64"]],["roundedrect"]]],[11,"from_rect","","A new rounded rectangle from a rectangle and corner radius.",18,[[["f64"],["rect"]],["roundedrect"]]],[11,"from_points","","A new rectangle from two points.",18,[[["f64"],["point"]],["roundedrect"]]],[11,"from_origin_size","","A new rectangle from origin and size.",18,[[["vec2"],["f64"],["point"]],["roundedrect"]]],[11,"width","","The width of the rectangle.",18,[[["self"]],["f64"]]],[11,"height","","The height of the rectangle.",18,[[["self"]],["f64"]]],[11,"radius","","Radius of the rounded corners. #[inline]",18,[[["self"]],["f64"]]],[11,"rect","","The (non-rounded) rectangle.",18,[[["self"]],["rect"]]],[11,"origin","","The origin of the rectangle.",18,[[["self"]],["point"]]],[11,"center","","The center point of the rectangle.",18,[[["self"]],["point"]]],[18,"ZERO","","A size with zero width or height.",19,null],[11,"new","","Create a new `Size` with the provided `width` and `height`.",19,[[["f64"]],["size"]]],[11,"clamp","","Returns a new size bounded by `min` and `max.`",19,[[["size"]],["size"]]],[11,"to_vec2","","Convert this size into a `Vec2`, with `width` mapped to…",19,[[],["vec2"]]],[11,"round","","A new `Size`, with each of width and height rounded to the…",19,[[],["size"]]],[11,"append_iter","","Create an iterator generating Bezier path elements.",20,[[["f64"],["self"]],["arcappenditer"]]],[11,"to_cubic_beziers","","Converts an Arc into a series of cubic bezier segments.",20,[[["f64"],["p"]]]],[11,"new","","Create a new path.",21,[[],["bezpath"]]],[11,"from_vec","","Create a path from a vector of path elements.",21,[[["arrayvec"]],["bezpath"]]],[11,"push","","Push a generic path element onto the path.",21,[[["self"],["pathel"]]]],[11,"move_to","","Push a \"move to\" element onto the path.",21,[[["self"],["p"]]]],[11,"line_to","","Push a \"line to\" element onto the path.",21,[[["self"],["p"]]]],[11,"quad_to","","Push a \"quad to\" element onto the path.",21,[[["self"],["p"]]]],[11,"curve_to","","Push a \"curve to\" element onto the path.",21,[[["self"],["p"]]]],[11,"close_path","","Push a \"close path\" element onto the path.",21,[[["self"]]]],[11,"elements","","Get the path elements.",21,[[["self"]]]],[11,"segments","","Iterate over the path segments.",21,[[["self"]]]],[11,"get_seg","","Get the segment at the given element index.",21,[[["self"],["usize"]],[["option",["pathseg"]],["pathseg"]]]],[11,"is_empty","","Returns `true` if the path contains no segments.",21,[[["self"]],["bool"]]],[11,"apply_affine","","Apply an affine transform to the path.",21,[[["affine"],["self"]]]],[11,"nearest","","Find the nearest point.",21,[[["f64"],["self"],["point"]]]],[11,"new","","A new circle from center and radius.",22,[[["f64"]],["circle"]]],[11,"reverse","","Returns a new `PathSeg` describing the same path as…",23,[[["self"]],["pathseg"]]],[11,"to_cubic","","Convert this segment to a cubic bezier.",23,[[["self"]],["cubicbez"]]],[11,"rgb8","piet_common","Create a color from 8 bit per sample RGB values.",25,[[["u8"]],["color"]]],[11,"rgba8","","Create a color from 8 bit per sample RGBA values.",25,[[["u8"]],["color"]]],[11,"from_rgba32_u32","","Create a color from a 32-bit rgba value (alpha as least…",25,[[["u32"]],["color"]]],[11,"grey8","","Create a color from a grey value.",25,[[["u8"]],["color"]]],[11,"grey","","Create a color with a grey value in the range 0.0..=1.0.",25,[[],["color"]]],[11,"rgba","","Create a color from four floating point values, each in…",25,[[["f"]],["color"]]],[11,"rgb","","Create a color from three floating point values, each in…",25,[[["f"]],["color"]]],[11,"hlc","","Create a color from a CIEL*a*b* polar (also known as CIE…",25,[[["f"]],["color"]]],[11,"hlca","","Create a color from a CIEL*a*b* polar specification and…",25,[[["f"]],["color"]]],[11,"with_alpha","","Change just the alpha value of a color.",25,[[],["color"]]],[11,"as_rgba_u32","","Convert a color value to a 32-bit rgba value.",25,[[["self"]],["u32"]]],[18,"WHITE","","Opaque white.",25,null],[18,"BLACK","","Opaque black.",25,null],[11,"new","","",31,[[],["strokestyle"]]],[11,"set_line_join","","",31,[[["self"],["linejoin"]]]],[11,"set_line_cap","","",31,[[["self"],["linecap"]]]],[11,"set_dash","","",31,[[["f64"],["self"],["arrayvec"]]]],[11,"set_miter_limit","","",31,[[["f64"]]]],[11,"new","","Create a new linear gradient.",42,[[["unitpoint"]],["lineargradient"]]],[11,"new","","Creates a simple `RadialGradient`. This gradient has…",43,[[["f64"]],["radialgradient"]]],[11,"with_center","","A builder-style method for changing the center of the…",43,[[["unitpoint"]],["radialgradient"]]],[11,"with_origin","","A builder-style method for changing the origin of the…",43,[[["unitpoint"]],["radialgradient"]]],[11,"with_scale_mode","","A builder-style method for changing the [`ScaleMode`] of…",43,[[["scalemode"]],["radialgradient"]]],[18,"TOP_LEFT","","",45,null],[18,"TOP","","",45,null],[18,"TOP_RIGHT","","",45,null],[18,"LEFT","","",45,null],[18,"CENTER","","",45,null],[18,"RIGHT","","",45,null],[18,"BOTTOM_LEFT","","",45,null],[18,"BOTTOM","","",45,null],[18,"BOTTOM_RIGHT","","",45,null],[11,"new","","Create a new UnitPoint.",45,[[["f64"]],["unitpoint"]]],[11,"resolve","","Given a rectangle, resolve the point within the rectangle.",45,[[["self"],["rect"]],["point"]]],[11,"bytes_per_pixel","","",47,[[["self"]],["usize"]]]],"p":[[3,"Point"],[3,"Rect"],[3,"Vec2"],[4,"PathEl"],[3,"Affine"],[3,"CubicBez"],[3,"Line"],[8,"ParamCurve"],[8,"ParamCurveArclen"],[8,"ParamCurveArea"],[8,"ParamCurveExtrema"],[8,"ParamCurveNearest"],[3,"QuadBez"],[8,"Shape"],[3,"TranslateScale"],[8,"ParamCurveCurvature"],[8,"ParamCurveDeriv"],[3,"Insets"],[3,"RoundedRect"],[3,"Size"],[3,"Arc"],[3,"BezPath"],[3,"Circle"],[4,"PathSeg"],[3,"ConstPoint"],[4,"Color"],[8,"FontBuilder"],[3,"HitTestPoint"],[3,"HitTestTextPosition"],[8,"IntoBrush"],[8,"RenderContext"],[3,"StrokeStyle"],[8,"Text"],[8,"TextLayout"],[8,"TextLayoutBuilder"],[8,"RoundFrom"],[8,"RoundInto"],[8,"GradientStops"],[3,"FixedLinearGradient"],[3,"FixedRadialGradient"],[4,"FixedGradient"],[3,"GradientStop"],[3,"LinearGradient"],[3,"RadialGradient"],[4,"ScaleMode"],[3,"UnitPoint"],[4,"InterpolationMode"],[4,"ImageFormat"],[4,"PaintBrush"],[4,"LineJoin"],[4,"LineCap"],[3,"HitTestMetrics"],[3,"Error"],[3,"Device"]]};
searchIndex["piet_embedded_graphics"] = {"doc":"The embedded-graphics backend for the Piet 2D graphics…","i":[[3,"EmbedRenderContext","piet_embedded_graphics","",null,null],[3,"EmbedFont","","",null,null],[3,"EmbedFontBuilder","","",null,null],[3,"EmbedText","","Right now, we don't need any state, as the \"toy text API\"…",null,null],[3,"EmbedTextLayout","","",null,null],[12,"text","","",0,null],[3,"EmbedTextLayoutBuilder","","",null,null],[12,"0","","",1,null],[4,"Brush","","",null,null],[13,"Solid","","",2,null],[5,"start_display","","Initialise the display controller",null,[[],["mynewtresult"]]],[5,"draw_to_display","","Draw the item to the display",null,[[["t"]]]],[5,"set_display_pixels","","Draw the pixel colours to the display at the window from…",null,[[["u16"],["intoiterator"]],["result"]]],[5,"show_touch","","Display the touched (X, Y) coordinates",null,[[["u16"]],["mynewtresult"]]],[0,"batch","","Batch the pixels to be rendered into Pixel Rows and Pixel…",null,null],[3,"RowIterator","piet_embedded_graphics::batch","Iterator for each Pixel Row in the pixel data. A Pixel Row…",null,null],[12,"pixels","","Pixels to be batched into rows",3,null],[12,"x_left","","Start column number",3,null],[12,"x_right","","End column number",3,null],[12,"y","","Row number",3,null],[12,"colors","","List of pixel colours for the entire row",3,null],[12,"first_pixel","","True if this is the first pixel for the row",3,null],[3,"BlockIterator","","Iterator for each Pixel Block in the pixel data. A Pixel…",null,null],[12,"rows","","Pixel Rows to be batched into blocks",4,null],[12,"x_left","","Start column number",4,null],[12,"x_right","","End column number",4,null],[12,"y_top","","Start row number",4,null],[12,"y_bottom","","End row number",4,null],[12,"colors","","List of pixel colours for the entire block, row by row",4,null],[12,"first_row","","True if this is the first row for the block",4,null],[3,"PixelRow","","A row of contiguous pixels",null,null],[12,"x_left","","Start column number",5,null],[12,"x_right","","End column number",5,null],[12,"y","","Row number",5,null],[12,"colors","","List of pixel colours for the entire row",5,null],[3,"PixelBlock","","A block of contiguous pixel rows with the same start and…",null,null],[12,"x_left","","Start column number",6,null],[12,"x_right","","End column number",6,null],[12,"y_top","","Start row number",6,null],[12,"y_bottom","","End row number",6,null],[12,"colors","","List of pixel colours for the entire block, row by row",6,null],[5,"draw_blocks","","Draw the pixels in the item as Pixel Blocks of contiguous…",null,[[["st7735"],["t"]],["result"]]],[5,"to_rows","","Batch the pixels into Pixel Rows, which are contiguous…",null,[[["p"]],["rowiterator"]]],[5,"to_blocks","","Batch the Pixel Rows into Pixel Blocks, which are…",null,[[["r"]],["blockiterator"]]],[6,"MaxRowSize","","Max number of pixels per Pixel Row",null,null],[6,"MaxBlockSize","","Max number of pixels per Pixel Block",null,null],[6,"RowColors","","Consecutive color words for a Pixel Row",null,null],[6,"BlockColors","","Consecutive color words for a Pixel Block",null,null],[0,"brush","piet_embedded_graphics","",null,null],[4,"Brush","piet_embedded_graphics::brush","",null,null],[13,"Solid","","",2,null],[0,"context","piet_embedded_graphics","",null,null],[3,"EmbedRenderContext","piet_embedded_graphics::context","",null,null],[5,"get_transform_stack","","",null,[[],["coord"]]],[6,"MaxTransforms","","Maximum number of transforms supported",null,null],[7,"EMBED_TEXT","","",null,null],[7,"TRANSFORM_STACK","","Stack of transforms to be applied to the current render",null,null],[17,"DISPLAY_WIDTH","","",null,null],[17,"DISPLAY_HEIGHT","","",null,null],[11,"convert_brush","piet_embedded_graphics","Get the source pattern for the brush",7,[[["self"],["brush"]],["rgb565"]]],[0,"display","","",null,null],[5,"start_display","piet_embedded_graphics::display","Initialise the display controller",null,[[],["mynewtresult"]]],[5,"show_touch","","Display the touched (X, Y) coordinates",null,[[["u16"]],["mynewtresult"]]],[5,"draw_to_display","","Draw the item to the display",null,[[["t"]]]],[5,"set_display_pixels","","Draw the pixel colours to the display at the window from…",null,[[["u16"],["intoiterator"]],["result"]]],[6,"Display","","",null,null],[6,"MynewtGPIO","","",null,null],[7,"SPI_SETTINGS","","SPI settings for ST7789 display controller",null,null],[7,"DISPLAY","","Display Driver",null,null],[7,"BACKLIGHT_HIGH","","GPIO Pin for Display Backlight",null,null],[17,"DISPLAY_SPI","","",null,null],[17,"DISPLAY_CS","","",null,null],[17,"DISPLAY_DC","","",null,null],[17,"DISPLAY_RST","","",null,null],[17,"DISPLAY_HIGH","","",null,null],[0,"image","piet_embedded_graphics","",null,null],[0,"status","","",null,null],[0,"text","","",null,null],[3,"EmbedText","piet_embedded_graphics::text","Right now, we don't need any state, as the \"toy text API\"…",null,null],[3,"EmbedFont","","",null,null],[3,"EmbedFontBuilder","","",null,null],[3,"EmbedTextLayout","","",null,null],[12,"text","","",0,null],[3,"EmbedTextLayoutBuilder","","",null,null],[12,"0","","",1,null],[17,"FONT_WIDTH","","",null,null],[11,"new","piet_embedded_graphics","Create a new factory that satisfies the piet `Text` trait.",8,[[],["embedtext"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"round_from","","",7,[[["t"]],["t"]]],[11,"round_into","","",7,[[],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"round_from","","",9,[[["t"]],["t"]]],[11,"round_into","","",9,[[],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"round_from","","",10,[[["t"]],["t"]]],[11,"round_into","","",10,[[],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"round_from","","",8,[[["t"]],["t"]]],[11,"round_into","","",8,[[],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"round_from","","",0,[[["t"]],["t"]]],[11,"round_into","","",0,[[],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"round_from","","",1,[[["t"]],["t"]]],[11,"round_into","","",1,[[],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"round_from","","",2,[[["t"]],["t"]]],[11,"round_into","","",2,[[],["u"]]],[11,"from","piet_embedded_graphics::batch","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"round_from","","",3,[[["t"]],["t"]]],[11,"round_into","","",3,[[],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"round_from","","",4,[[["t"]],["t"]]],[11,"round_into","","",4,[[],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"round_from","","",5,[[["t"]],["t"]]],[11,"round_into","","",5,[[],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"round_from","","",6,[[["t"]],["t"]]],[11,"round_into","","",6,[[],["u"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"next","","Return the next Pixel Row of contiguous pixels on the same…",3,[[["self"]],["option"]]],[11,"next","","Return the next Pixel Block of contiguous Pixel Rows with…",4,[[["self"]],["option"]]],[11,"clone","","",3,[[["self"]],["rowiterator"]]],[11,"clone","","",4,[[["self"]],["blockiterator"]]],[11,"clone","piet_embedded_graphics","",2,[[["self"]],["brush"]]],[11,"build","","",10,[[],[["result",["error"]],["error"]]]],[11,"make_brush","","",2,[[["self"],["embedrendercontext"]],["brush"]]],[11,"status","","",7,[[["self"]],[["result",["error"]],["error"]]]],[11,"clear","","",7,[[["self"],["color"]]]],[11,"solid_brush","","",7,[[["self"],["color"]],["brush"]]],[11,"fill","","",7,[[["self"]]]],[11,"fill_even_odd","","",7,[[["self"]]]],[11,"clip","","",7,[[["self"]]]],[11,"stroke","","",7,[[["f64"],["self"]]]],[11,"stroke_styled","","",7,[[["f64"],["strokestyle"],["self"]]]],[11,"text","","",7,[[["self"]]]],[11,"draw_text","","",7,[[["self"]]]],[11,"save","","",7,[[["self"]],[["result",["error"]],["error"]]]],[11,"restore","","",7,[[["self"]],[["result",["error"]],["error"]]]],[11,"finish","","",7,[[["self"]],[["result",["error"]],["error"]]]],[11,"transform","","",7,[[["affine"],["self"]]]],[11,"new_font_by_name","","",8,[[["str"],["self"],["f64"]]]],[11,"new_text_layout","","",8,[[["str"],["self"]]]],[11,"width","","",0,[[["self"]],["f64"]]],[11,"hit_test_point","","",0,[[["point"],["self"]],["hittestpoint"]]],[11,"hit_test_text_position","","",0,[[["self"],["usize"]],[["option",["hittesttextposition"]],["hittesttextposition"]]]],[11,"build","","",1,[[],[["result",["error"]],["error"]]]]],"p":[[3,"EmbedTextLayout"],[3,"EmbedTextLayoutBuilder"],[4,"Brush"],[3,"RowIterator"],[3,"BlockIterator"],[3,"PixelRow"],[3,"PixelBlock"],[3,"EmbedRenderContext"],[3,"EmbedText"],[3,"EmbedFont"],[3,"EmbedFontBuilder"]]};
searchIndex["r0"] = {"doc":"Initialization code (\"crt0\") written in Rust","i":[[5,"init_data","r0","Initializes the `.data` section",null,[[]]],[5,"run_init_array","","",null,[[]]],[5,"zero_bss","","Zeroes the `.bss` section",null,[[]]],[14,"pre_init_array","","",null,null],[14,"init_array","","",null,null]],"p":[]};
searchIndex["st7735_lcd"] = {"doc":"This crate provides a ST7735 driver to connect to TFT…","i":[[3,"ST7735","st7735_lcd","ST7735 driver to connect to TFT displays.",null,null],[12,"_spi","","SPI",0,null],[12,"_dc","","Data/command pin.",0,null],[12,"rst","","Reset pin.",0,null],[12,"rgb","","Whether the display is RGB (true) or BGR (false)",0,null],[12,"inverted","","Whether the colours are inverted (true) or not (false)",0,null],[12,"dx","","Global image offset",0,null],[12,"dy","","",0,null],[4,"Orientation","","Display orientation.",null,null],[13,"Portrait","","",1,null],[13,"Landscape","","",1,null],[13,"PortraitSwapped","","",1,null],[13,"LandscapeSwapped","","",1,null],[0,"instruction","","",null,null],[4,"Instruction","st7735_lcd::instruction","ST7735 instructions.",null,null],[13,"NOP","","",2,null],[13,"SWRESET","","",2,null],[13,"RDDID","","",2,null],[13,"RDDST","","",2,null],[13,"SLPIN","","",2,null],[13,"SLPOUT","","",2,null],[13,"PTLON","","",2,null],[13,"NORON","","",2,null],[13,"INVOFF","","",2,null],[13,"INVON","","",2,null],[13,"DISPOFF","","",2,null],[13,"DISPON","","",2,null],[13,"CASET","","",2,null],[13,"RASET","","",2,null],[13,"RAMWR","","",2,null],[13,"RAMRD","","",2,null],[13,"PTLAR","","",2,null],[13,"COLMOD","","",2,null],[13,"MADCTL","","",2,null],[13,"FRMCTR1","","",2,null],[13,"FRMCTR2","","",2,null],[13,"FRMCTR3","","",2,null],[13,"INVCTR","","",2,null],[13,"DISSET5","","",2,null],[13,"PWCTR1","","",2,null],[13,"PWCTR2","","",2,null],[13,"PWCTR3","","",2,null],[13,"PWCTR4","","",2,null],[13,"PWCTR5","","",2,null],[13,"VMCTR1","","",2,null],[13,"RDID1","","",2,null],[13,"RDID2","","",2,null],[13,"RDID3","","",2,null],[13,"RDID4","","",2,null],[13,"PWCTR6","","",2,null],[13,"GMCTRP1","","",2,null],[13,"GMCTRN1","","",2,null],[17,"_IMPL_NUM_ToPrimitive_FOR_Instruction","","",null,null],[17,"_IMPL_NUM_ToPrimitive_FOR_Orientation","st7735_lcd","",null,null],[11,"new","","Creates a new driver instance that uses hardware SPI.",0,[[["spi"],["rst"],["dc"],["bool"]],["self"]]],[11,"init","","Runs commands to initialize the display.",0,[[["self"],["delay"]],["result"]]],[11,"hard_reset","","",0,[[["self"]],["result"]]],[11,"write_command","","",0,[[["option"],["self"],["instruction"]],["result"]]],[11,"write_data","","",0,[[["self"]],["result"]]],[11,"write_word","","Writes a data word to the display.",0,[[["u16"],["self"]],["result"]]],[11,"set_orientation","","",0,[[["self"],["orientation"]],["result"]]],[11,"set_offset","","Sets the global offset of the displayed image",0,[[["u16"],["self"]]]],[11,"set_address_window","","Sets the address window for the display.",0,[[["u16"],["self"]],["result"]]],[11,"set_pixel","","Sets a pixel color at the given coords.",0,[[["u16"],["self"]],["result"]]],[11,"write_pixels","","Writes pixel colors sequentially into the current drawing…",0,[[["self"],["intoiterator"]],["result"]]],[11,"set_pixels","","Sets pixel colors at the given drawing window",0,[[["u16"],["self"],["intoiterator"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","st7735_lcd::instruction","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"draw","st7735_lcd","",0,[[["self"],["t"]]]],[11,"draw_sized","","",0,[[["self"],["t"]]]],[11,"to_i64","st7735_lcd::instruction","",2,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"to_u64","","",2,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_i64","st7735_lcd","",1,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"to_u64","","",1,[[["self"]],[["option",["u64"]],["u64"]]]]],"p":[[3,"ST7735"],[4,"Orientation"],[4,"Instruction"]]};
searchIndex["stable_deref_trait"] = {"doc":"This module defines an unsafe marker trait, StableDeref,…","i":[[8,"StableDeref","stable_deref_trait","An unsafe marker trait for types that deref to a stable…",null,null],[8,"CloneStableDeref","","An unsafe marker trait for types where clones deref to the…",null,null]],"p":[]};
searchIndex["typenum"] = {"doc":"This crate provides type-level numbers evaluated at…","i":[[3,"Greater","typenum","A potential output from `Cmp`, this is the type equivalent…",null,null],[3,"Less","","A potential output from `Cmp`, this is the type equivalent…",null,null],[3,"Equal","","A potential output from `Cmp`, this is the type equivalent…",null,null],[0,"consts","","Type aliases for many constants.",null,null],[6,"True","typenum::consts","",null,null],[6,"False","","",null,null],[6,"U0","","",null,null],[6,"U1","","",null,null],[6,"P1","","",null,null],[6,"N1","","",null,null],[6,"U2","","",null,null],[6,"P2","","",null,null],[6,"N2","","",null,null],[6,"U3","","",null,null],[6,"P3","","",null,null],[6,"N3","","",null,null],[6,"U4","","",null,null],[6,"P4","","",null,null],[6,"N4","","",null,null],[6,"U5","","",null,null],[6,"P5","","",null,null],[6,"N5","","",null,null],[6,"U6","","",null,null],[6,"P6","","",null,null],[6,"N6","","",null,null],[6,"U7","","",null,null],[6,"P7","","",null,null],[6,"N7","","",null,null],[6,"U8","","",null,null],[6,"P8","","",null,null],[6,"N8","","",null,null],[6,"U9","","",null,null],[6,"P9","","",null,null],[6,"N9","","",null,null],[6,"U10","","",null,null],[6,"P10","","",null,null],[6,"N10","","",null,null],[6,"U11","","",null,null],[6,"P11","","",null,null],[6,"N11","","",null,null],[6,"U12","","",null,null],[6,"P12","","",null,null],[6,"N12","","",null,null],[6,"U13","","",null,null],[6,"P13","","",null,null],[6,"N13","","",null,null],[6,"U14","","",null,null],[6,"P14","","",null,null],[6,"N14","","",null,null],[6,"U15","","",null,null],[6,"P15","","",null,null],[6,"N15","","",null,null],[6,"U16","","",null,null],[6,"P16","","",null,null],[6,"N16","","",null,null],[6,"U17","","",null,null],[6,"P17","","",null,null],[6,"N17","","",null,null],[6,"U18","","",null,null],[6,"P18","","",null,null],[6,"N18","","",null,null],[6,"U19","","",null,null],[6,"P19","","",null,null],[6,"N19","","",null,null],[6,"U20","","",null,null],[6,"P20","","",null,null],[6,"N20","","",null,null],[6,"U21","","",null,null],[6,"P21","","",null,null],[6,"N21","","",null,null],[6,"U22","","",null,null],[6,"P22","","",null,null],[6,"N22","","",null,null],[6,"U23","","",null,null],[6,"P23","","",null,null],[6,"N23","","",null,null],[6,"U24","","",null,null],[6,"P24","","",null,null],[6,"N24","","",null,null],[6,"U25","","",null,null],[6,"P25","","",null,null],[6,"N25","","",null,null],[6,"U26","","",null,null],[6,"P26","","",null,null],[6,"N26","","",null,null],[6,"U27","","",null,null],[6,"P27","","",null,null],[6,"N27","","",null,null],[6,"U28","","",null,null],[6,"P28","","",null,null],[6,"N28","","",null,null],[6,"U29","","",null,null],[6,"P29","","",null,null],[6,"N29","","",null,null],[6,"U30","","",null,null],[6,"P30","","",null,null],[6,"N30","","",null,null],[6,"U31","","",null,null],[6,"P31","","",null,null],[6,"N31","","",null,null],[6,"U32","","",null,null],[6,"P32","","",null,null],[6,"N32","","",null,null],[6,"U33","","",null,null],[6,"P33","","",null,null],[6,"N33","","",null,null],[6,"U34","","",null,null],[6,"P34","","",null,null],[6,"N34","","",null,null],[6,"U35","","",null,null],[6,"P35","","",null,null],[6,"N35","","",null,null],[6,"U36","","",null,null],[6,"P36","","",null,null],[6,"N36","","",null,null],[6,"U37","","",null,null],[6,"P37","","",null,null],[6,"N37","","",null,null],[6,"U38","","",null,null],[6,"P38","","",null,null],[6,"N38","","",null,null],[6,"U39","","",null,null],[6,"P39","","",null,null],[6,"N39","","",null,null],[6,"U40","","",null,null],[6,"P40","","",null,null],[6,"N40","","",null,null],[6,"U41","","",null,null],[6,"P41","","",null,null],[6,"N41","","",null,null],[6,"U42","","",null,null],[6,"P42","","",null,null],[6,"N42","","",null,null],[6,"U43","","",null,null],[6,"P43","","",null,null],[6,"N43","","",null,null],[6,"U44","","",null,null],[6,"P44","","",null,null],[6,"N44","","",null,null],[6,"U45","","",null,null],[6,"P45","","",null,null],[6,"N45","","",null,null],[6,"U46","","",null,null],[6,"P46","","",null,null],[6,"N46","","",null,null],[6,"U47","","",null,null],[6,"P47","","",null,null],[6,"N47","","",null,null],[6,"U48","","",null,null],[6,"P48","","",null,null],[6,"N48","","",null,null],[6,"U49","","",null,null],[6,"P49","","",null,null],[6,"N49","","",null,null],[6,"U50","","",null,null],[6,"P50","","",null,null],[6,"N50","","",null,null],[6,"U51","","",null,null],[6,"P51","","",null,null],[6,"N51","","",null,null],[6,"U52","","",null,null],[6,"P52","","",null,null],[6,"N52","","",null,null],[6,"U53","","",null,null],[6,"P53","","",null,null],[6,"N53","","",null,null],[6,"U54","","",null,null],[6,"P54","","",null,null],[6,"N54","","",null,null],[6,"U55","","",null,null],[6,"P55","","",null,null],[6,"N55","","",null,null],[6,"U56","","",null,null],[6,"P56","","",null,null],[6,"N56","","",null,null],[6,"U57","","",null,null],[6,"P57","","",null,null],[6,"N57","","",null,null],[6,"U58","","",null,null],[6,"P58","","",null,null],[6,"N58","","",null,null],[6,"U59","","",null,null],[6,"P59","","",null,null],[6,"N59","","",null,null],[6,"U60","","",null,null],[6,"P60","","",null,null],[6,"N60","","",null,null],[6,"U61","","",null,null],[6,"P61","","",null,null],[6,"N61","","",null,null],[6,"U62","","",null,null],[6,"P62","","",null,null],[6,"N62","","",null,null],[6,"U63","","",null,null],[6,"P63","","",null,null],[6,"N63","","",null,null],[6,"U64","","",null,null],[6,"P64","","",null,null],[6,"N64","","",null,null],[6,"U65","","",null,null],[6,"P65","","",null,null],[6,"N65","","",null,null],[6,"U66","","",null,null],[6,"P66","","",null,null],[6,"N66","","",null,null],[6,"U67","","",null,null],[6,"P67","","",null,null],[6,"N67","","",null,null],[6,"U68","","",null,null],[6,"P68","","",null,null],[6,"N68","","",null,null],[6,"U69","","",null,null],[6,"P69","","",null,null],[6,"N69","","",null,null],[6,"U70","","",null,null],[6,"P70","","",null,null],[6,"N70","","",null,null],[6,"U71","","",null,null],[6,"P71","","",null,null],[6,"N71","","",null,null],[6,"U72","","",null,null],[6,"P72","","",null,null],[6,"N72","","",null,null],[6,"U73","","",null,null],[6,"P73","","",null,null],[6,"N73","","",null,null],[6,"U74","","",null,null],[6,"P74","","",null,null],[6,"N74","","",null,null],[6,"U75","","",null,null],[6,"P75","","",null,null],[6,"N75","","",null,null],[6,"U76","","",null,null],[6,"P76","","",null,null],[6,"N76","","",null,null],[6,"U77","","",null,null],[6,"P77","","",null,null],[6,"N77","","",null,null],[6,"U78","","",null,null],[6,"P78","","",null,null],[6,"N78","","",null,null],[6,"U79","","",null,null],[6,"P79","","",null,null],[6,"N79","","",null,null],[6,"U80","","",null,null],[6,"P80","","",null,null],[6,"N80","","",null,null],[6,"U81","","",null,null],[6,"P81","","",null,null],[6,"N81","","",null,null],[6,"U82","","",null,null],[6,"P82","","",null,null],[6,"N82","","",null,null],[6,"U83","","",null,null],[6,"P83","","",null,null],[6,"N83","","",null,null],[6,"U84","","",null,null],[6,"P84","","",null,null],[6,"N84","","",null,null],[6,"U85","","",null,null],[6,"P85","","",null,null],[6,"N85","","",null,null],[6,"U86","","",null,null],[6,"P86","","",null,null],[6,"N86","","",null,null],[6,"U87","","",null,null],[6,"P87","","",null,null],[6,"N87","","",null,null],[6,"U88","","",null,null],[6,"P88","","",null,null],[6,"N88","","",null,null],[6,"U89","","",null,null],[6,"P89","","",null,null],[6,"N89","","",null,null],[6,"U90","","",null,null],[6,"P90","","",null,null],[6,"N90","","",null,null],[6,"U91","","",null,null],[6,"P91","","",null,null],[6,"N91","","",null,null],[6,"U92","","",null,null],[6,"P92","","",null,null],[6,"N92","","",null,null],[6,"U93","","",null,null],[6,"P93","","",null,null],[6,"N93","","",null,null],[6,"U94","","",null,null],[6,"P94","","",null,null],[6,"N94","","",null,null],[6,"U95","","",null,null],[6,"P95","","",null,null],[6,"N95","","",null,null],[6,"U96","","",null,null],[6,"P96","","",null,null],[6,"N96","","",null,null],[6,"U97","","",null,null],[6,"P97","","",null,null],[6,"N97","","",null,null],[6,"U98","","",null,null],[6,"P98","","",null,null],[6,"N98","","",null,null],[6,"U99","","",null,null],[6,"P99","","",null,null],[6,"N99","","",null,null],[6,"U100","","",null,null],[6,"P100","","",null,null],[6,"N100","","",null,null],[6,"U101","","",null,null],[6,"P101","","",null,null],[6,"N101","","",null,null],[6,"U102","","",null,null],[6,"P102","","",null,null],[6,"N102","","",null,null],[6,"U103","","",null,null],[6,"P103","","",null,null],[6,"N103","","",null,null],[6,"U104","","",null,null],[6,"P104","","",null,null],[6,"N104","","",null,null],[6,"U105","","",null,null],[6,"P105","","",null,null],[6,"N105","","",null,null],[6,"U106","","",null,null],[6,"P106","","",null,null],[6,"N106","","",null,null],[6,"U107","","",null,null],[6,"P107","","",null,null],[6,"N107","","",null,null],[6,"U108","","",null,null],[6,"P108","","",null,null],[6,"N108","","",null,null],[6,"U109","","",null,null],[6,"P109","","",null,null],[6,"N109","","",null,null],[6,"U110","","",null,null],[6,"P110","","",null,null],[6,"N110","","",null,null],[6,"U111","","",null,null],[6,"P111","","",null,null],[6,"N111","","",null,null],[6,"U112","","",null,null],[6,"P112","","",null,null],[6,"N112","","",null,null],[6,"U113","","",null,null],[6,"P113","","",null,null],[6,"N113","","",null,null],[6,"U114","","",null,null],[6,"P114","","",null,null],[6,"N114","","",null,null],[6,"U115","","",null,null],[6,"P115","","",null,null],[6,"N115","","",null,null],[6,"U116","","",null,null],[6,"P116","","",null,null],[6,"N116","","",null,null],[6,"U117","","",null,null],[6,"P117","","",null,null],[6,"N117","","",null,null],[6,"U118","","",null,null],[6,"P118","","",null,null],[6,"N118","","",null,null],[6,"U119","","",null,null],[6,"P119","","",null,null],[6,"N119","","",null,null],[6,"U120","","",null,null],[6,"P120","","",null,null],[6,"N120","","",null,null],[6,"U121","","",null,null],[6,"P121","","",null,null],[6,"N121","","",null,null],[6,"U122","","",null,null],[6,"P122","","",null,null],[6,"N122","","",null,null],[6,"U123","","",null,null],[6,"P123","","",null,null],[6,"N123","","",null,null],[6,"U124","","",null,null],[6,"P124","","",null,null],[6,"N124","","",null,null],[6,"U125","","",null,null],[6,"P125","","",null,null],[6,"N125","","",null,null],[6,"U126","","",null,null],[6,"P126","","",null,null],[6,"N126","","",null,null],[6,"U127","","",null,null],[6,"P127","","",null,null],[6,"N127","","",null,null],[6,"U128","","",null,null],[6,"P128","","",null,null],[6,"N128","","",null,null],[6,"U129","","",null,null],[6,"P129","","",null,null],[6,"N129","","",null,null],[6,"U130","","",null,null],[6,"P130","","",null,null],[6,"N130","","",null,null],[6,"U131","","",null,null],[6,"P131","","",null,null],[6,"N131","","",null,null],[6,"U132","","",null,null],[6,"P132","","",null,null],[6,"N132","","",null,null],[6,"U133","","",null,null],[6,"P133","","",null,null],[6,"N133","","",null,null],[6,"U134","","",null,null],[6,"P134","","",null,null],[6,"N134","","",null,null],[6,"U135","","",null,null],[6,"P135","","",null,null],[6,"N135","","",null,null],[6,"U136","","",null,null],[6,"P136","","",null,null],[6,"N136","","",null,null],[6,"U137","","",null,null],[6,"P137","","",null,null],[6,"N137","","",null,null],[6,"U138","","",null,null],[6,"P138","","",null,null],[6,"N138","","",null,null],[6,"U139","","",null,null],[6,"P139","","",null,null],[6,"N139","","",null,null],[6,"U140","","",null,null],[6,"P140","","",null,null],[6,"N140","","",null,null],[6,"U141","","",null,null],[6,"P141","","",null,null],[6,"N141","","",null,null],[6,"U142","","",null,null],[6,"P142","","",null,null],[6,"N142","","",null,null],[6,"U143","","",null,null],[6,"P143","","",null,null],[6,"N143","","",null,null],[6,"U144","","",null,null],[6,"P144","","",null,null],[6,"N144","","",null,null],[6,"U145","","",null,null],[6,"P145","","",null,null],[6,"N145","","",null,null],[6,"U146","","",null,null],[6,"P146","","",null,null],[6,"N146","","",null,null],[6,"U147","","",null,null],[6,"P147","","",null,null],[6,"N147","","",null,null],[6,"U148","","",null,null],[6,"P148","","",null,null],[6,"N148","","",null,null],[6,"U149","","",null,null],[6,"P149","","",null,null],[6,"N149","","",null,null],[6,"U150","","",null,null],[6,"P150","","",null,null],[6,"N150","","",null,null],[6,"U151","","",null,null],[6,"P151","","",null,null],[6,"N151","","",null,null],[6,"U152","","",null,null],[6,"P152","","",null,null],[6,"N152","","",null,null],[6,"U153","","",null,null],[6,"P153","","",null,null],[6,"N153","","",null,null],[6,"U154","","",null,null],[6,"P154","","",null,null],[6,"N154","","",null,null],[6,"U155","","",null,null],[6,"P155","","",null,null],[6,"N155","","",null,null],[6,"U156","","",null,null],[6,"P156","","",null,null],[6,"N156","","",null,null],[6,"U157","","",null,null],[6,"P157","","",null,null],[6,"N157","","",null,null],[6,"U158","","",null,null],[6,"P158","","",null,null],[6,"N158","","",null,null],[6,"U159","","",null,null],[6,"P159","","",null,null],[6,"N159","","",null,null],[6,"U160","","",null,null],[6,"P160","","",null,null],[6,"N160","","",null,null],[6,"U161","","",null,null],[6,"P161","","",null,null],[6,"N161","","",null,null],[6,"U162","","",null,null],[6,"P162","","",null,null],[6,"N162","","",null,null],[6,"U163","","",null,null],[6,"P163","","",null,null],[6,"N163","","",null,null],[6,"U164","","",null,null],[6,"P164","","",null,null],[6,"N164","","",null,null],[6,"U165","","",null,null],[6,"P165","","",null,null],[6,"N165","","",null,null],[6,"U166","","",null,null],[6,"P166","","",null,null],[6,"N166","","",null,null],[6,"U167","","",null,null],[6,"P167","","",null,null],[6,"N167","","",null,null],[6,"U168","","",null,null],[6,"P168","","",null,null],[6,"N168","","",null,null],[6,"U169","","",null,null],[6,"P169","","",null,null],[6,"N169","","",null,null],[6,"U170","","",null,null],[6,"P170","","",null,null],[6,"N170","","",null,null],[6,"U171","","",null,null],[6,"P171","","",null,null],[6,"N171","","",null,null],[6,"U172","","",null,null],[6,"P172","","",null,null],[6,"N172","","",null,null],[6,"U173","","",null,null],[6,"P173","","",null,null],[6,"N173","","",null,null],[6,"U174","","",null,null],[6,"P174","","",null,null],[6,"N174","","",null,null],[6,"U175","","",null,null],[6,"P175","","",null,null],[6,"N175","","",null,null],[6,"U176","","",null,null],[6,"P176","","",null,null],[6,"N176","","",null,null],[6,"U177","","",null,null],[6,"P177","","",null,null],[6,"N177","","",null,null],[6,"U178","","",null,null],[6,"P178","","",null,null],[6,"N178","","",null,null],[6,"U179","","",null,null],[6,"P179","","",null,null],[6,"N179","","",null,null],[6,"U180","","",null,null],[6,"P180","","",null,null],[6,"N180","","",null,null],[6,"U181","","",null,null],[6,"P181","","",null,null],[6,"N181","","",null,null],[6,"U182","","",null,null],[6,"P182","","",null,null],[6,"N182","","",null,null],[6,"U183","","",null,null],[6,"P183","","",null,null],[6,"N183","","",null,null],[6,"U184","","",null,null],[6,"P184","","",null,null],[6,"N184","","",null,null],[6,"U185","","",null,null],[6,"P185","","",null,null],[6,"N185","","",null,null],[6,"U186","","",null,null],[6,"P186","","",null,null],[6,"N186","","",null,null],[6,"U187","","",null,null],[6,"P187","","",null,null],[6,"N187","","",null,null],[6,"U188","","",null,null],[6,"P188","","",null,null],[6,"N188","","",null,null],[6,"U189","","",null,null],[6,"P189","","",null,null],[6,"N189","","",null,null],[6,"U190","","",null,null],[6,"P190","","",null,null],[6,"N190","","",null,null],[6,"U191","","",null,null],[6,"P191","","",null,null],[6,"N191","","",null,null],[6,"U192","","",null,null],[6,"P192","","",null,null],[6,"N192","","",null,null],[6,"U193","","",null,null],[6,"P193","","",null,null],[6,"N193","","",null,null],[6,"U194","","",null,null],[6,"P194","","",null,null],[6,"N194","","",null,null],[6,"U195","","",null,null],[6,"P195","","",null,null],[6,"N195","","",null,null],[6,"U196","","",null,null],[6,"P196","","",null,null],[6,"N196","","",null,null],[6,"U197","","",null,null],[6,"P197","","",null,null],[6,"N197","","",null,null],[6,"U198","","",null,null],[6,"P198","","",null,null],[6,"N198","","",null,null],[6,"U199","","",null,null],[6,"P199","","",null,null],[6,"N199","","",null,null],[6,"U200","","",null,null],[6,"P200","","",null,null],[6,"N200","","",null,null],[6,"U201","","",null,null],[6,"P201","","",null,null],[6,"N201","","",null,null],[6,"U202","","",null,null],[6,"P202","","",null,null],[6,"N202","","",null,null],[6,"U203","","",null,null],[6,"P203","","",null,null],[6,"N203","","",null,null],[6,"U204","","",null,null],[6,"P204","","",null,null],[6,"N204","","",null,null],[6,"U205","","",null,null],[6,"P205","","",null,null],[6,"N205","","",null,null],[6,"U206","","",null,null],[6,"P206","","",null,null],[6,"N206","","",null,null],[6,"U207","","",null,null],[6,"P207","","",null,null],[6,"N207","","",null,null],[6,"U208","","",null,null],[6,"P208","","",null,null],[6,"N208","","",null,null],[6,"U209","","",null,null],[6,"P209","","",null,null],[6,"N209","","",null,null],[6,"U210","","",null,null],[6,"P210","","",null,null],[6,"N210","","",null,null],[6,"U211","","",null,null],[6,"P211","","",null,null],[6,"N211","","",null,null],[6,"U212","","",null,null],[6,"P212","","",null,null],[6,"N212","","",null,null],[6,"U213","","",null,null],[6,"P213","","",null,null],[6,"N213","","",null,null],[6,"U214","","",null,null],[6,"P214","","",null,null],[6,"N214","","",null,null],[6,"U215","","",null,null],[6,"P215","","",null,null],[6,"N215","","",null,null],[6,"U216","","",null,null],[6,"P216","","",null,null],[6,"N216","","",null,null],[6,"U217","","",null,null],[6,"P217","","",null,null],[6,"N217","","",null,null],[6,"U218","","",null,null],[6,"P218","","",null,null],[6,"N218","","",null,null],[6,"U219","","",null,null],[6,"P219","","",null,null],[6,"N219","","",null,null],[6,"U220","","",null,null],[6,"P220","","",null,null],[6,"N220","","",null,null],[6,"U221","","",null,null],[6,"P221","","",null,null],[6,"N221","","",null,null],[6,"U222","","",null,null],[6,"P222","","",null,null],[6,"N222","","",null,null],[6,"U223","","",null,null],[6,"P223","","",null,null],[6,"N223","","",null,null],[6,"U224","","",null,null],[6,"P224","","",null,null],[6,"N224","","",null,null],[6,"U225","","",null,null],[6,"P225","","",null,null],[6,"N225","","",null,null],[6,"U226","","",null,null],[6,"P226","","",null,null],[6,"N226","","",null,null],[6,"U227","","",null,null],[6,"P227","","",null,null],[6,"N227","","",null,null],[6,"U228","","",null,null],[6,"P228","","",null,null],[6,"N228","","",null,null],[6,"U229","","",null,null],[6,"P229","","",null,null],[6,"N229","","",null,null],[6,"U230","","",null,null],[6,"P230","","",null,null],[6,"N230","","",null,null],[6,"U231","","",null,null],[6,"P231","","",null,null],[6,"N231","","",null,null],[6,"U232","","",null,null],[6,"P232","","",null,null],[6,"N232","","",null,null],[6,"U233","","",null,null],[6,"P233","","",null,null],[6,"N233","","",null,null],[6,"U234","","",null,null],[6,"P234","","",null,null],[6,"N234","","",null,null],[6,"U235","","",null,null],[6,"P235","","",null,null],[6,"N235","","",null,null],[6,"U236","","",null,null],[6,"P236","","",null,null],[6,"N236","","",null,null],[6,"U237","","",null,null],[6,"P237","","",null,null],[6,"N237","","",null,null],[6,"U238","","",null,null],[6,"P238","","",null,null],[6,"N238","","",null,null],[6,"U239","","",null,null],[6,"P239","","",null,null],[6,"N239","","",null,null],[6,"U240","","",null,null],[6,"P240","","",null,null],[6,"N240","","",null,null],[6,"U241","","",null,null],[6,"P241","","",null,null],[6,"N241","","",null,null],[6,"U242","","",null,null],[6,"P242","","",null,null],[6,"N242","","",null,null],[6,"U243","","",null,null],[6,"P243","","",null,null],[6,"N243","","",null,null],[6,"U244","","",null,null],[6,"P244","","",null,null],[6,"N244","","",null,null],[6,"U245","","",null,null],[6,"P245","","",null,null],[6,"N245","","",null,null],[6,"U246","","",null,null],[6,"P246","","",null,null],[6,"N246","","",null,null],[6,"U247","","",null,null],[6,"P247","","",null,null],[6,"N247","","",null,null],[6,"U248","","",null,null],[6,"P248","","",null,null],[6,"N248","","",null,null],[6,"U249","","",null,null],[6,"P249","","",null,null],[6,"N249","","",null,null],[6,"U250","","",null,null],[6,"P250","","",null,null],[6,"N250","","",null,null],[6,"U251","","",null,null],[6,"P251","","",null,null],[6,"N251","","",null,null],[6,"U252","","",null,null],[6,"P252","","",null,null],[6,"N252","","",null,null],[6,"U253","","",null,null],[6,"P253","","",null,null],[6,"N253","","",null,null],[6,"U254","","",null,null],[6,"P254","","",null,null],[6,"N254","","",null,null],[6,"U255","","",null,null],[6,"P255","","",null,null],[6,"N255","","",null,null],[6,"U256","","",null,null],[6,"P256","","",null,null],[6,"N256","","",null,null],[6,"U257","","",null,null],[6,"P257","","",null,null],[6,"N257","","",null,null],[6,"U258","","",null,null],[6,"P258","","",null,null],[6,"N258","","",null,null],[6,"U259","","",null,null],[6,"P259","","",null,null],[6,"N259","","",null,null],[6,"U260","","",null,null],[6,"P260","","",null,null],[6,"N260","","",null,null],[6,"U261","","",null,null],[6,"P261","","",null,null],[6,"N261","","",null,null],[6,"U262","","",null,null],[6,"P262","","",null,null],[6,"N262","","",null,null],[6,"U263","","",null,null],[6,"P263","","",null,null],[6,"N263","","",null,null],[6,"U264","","",null,null],[6,"P264","","",null,null],[6,"N264","","",null,null],[6,"U265","","",null,null],[6,"P265","","",null,null],[6,"N265","","",null,null],[6,"U266","","",null,null],[6,"P266","","",null,null],[6,"N266","","",null,null],[6,"U267","","",null,null],[6,"P267","","",null,null],[6,"N267","","",null,null],[6,"U268","","",null,null],[6,"P268","","",null,null],[6,"N268","","",null,null],[6,"U269","","",null,null],[6,"P269","","",null,null],[6,"N269","","",null,null],[6,"U270","","",null,null],[6,"P270","","",null,null],[6,"N270","","",null,null],[6,"U271","","",null,null],[6,"P271","","",null,null],[6,"N271","","",null,null],[6,"U272","","",null,null],[6,"P272","","",null,null],[6,"N272","","",null,null],[6,"U273","","",null,null],[6,"P273","","",null,null],[6,"N273","","",null,null],[6,"U274","","",null,null],[6,"P274","","",null,null],[6,"N274","","",null,null],[6,"U275","","",null,null],[6,"P275","","",null,null],[6,"N275","","",null,null],[6,"U276","","",null,null],[6,"P276","","",null,null],[6,"N276","","",null,null],[6,"U277","","",null,null],[6,"P277","","",null,null],[6,"N277","","",null,null],[6,"U278","","",null,null],[6,"P278","","",null,null],[6,"N278","","",null,null],[6,"U279","","",null,null],[6,"P279","","",null,null],[6,"N279","","",null,null],[6,"U280","","",null,null],[6,"P280","","",null,null],[6,"N280","","",null,null],[6,"U281","","",null,null],[6,"P281","","",null,null],[6,"N281","","",null,null],[6,"U282","","",null,null],[6,"P282","","",null,null],[6,"N282","","",null,null],[6,"U283","","",null,null],[6,"P283","","",null,null],[6,"N283","","",null,null],[6,"U284","","",null,null],[6,"P284","","",null,null],[6,"N284","","",null,null],[6,"U285","","",null,null],[6,"P285","","",null,null],[6,"N285","","",null,null],[6,"U286","","",null,null],[6,"P286","","",null,null],[6,"N286","","",null,null],[6,"U287","","",null,null],[6,"P287","","",null,null],[6,"N287","","",null,null],[6,"U288","","",null,null],[6,"P288","","",null,null],[6,"N288","","",null,null],[6,"U289","","",null,null],[6,"P289","","",null,null],[6,"N289","","",null,null],[6,"U290","","",null,null],[6,"P290","","",null,null],[6,"N290","","",null,null],[6,"U291","","",null,null],[6,"P291","","",null,null],[6,"N291","","",null,null],[6,"U292","","",null,null],[6,"P292","","",null,null],[6,"N292","","",null,null],[6,"U293","","",null,null],[6,"P293","","",null,null],[6,"N293","","",null,null],[6,"U294","","",null,null],[6,"P294","","",null,null],[6,"N294","","",null,null],[6,"U295","","",null,null],[6,"P295","","",null,null],[6,"N295","","",null,null],[6,"U296","","",null,null],[6,"P296","","",null,null],[6,"N296","","",null,null],[6,"U297","","",null,null],[6,"P297","","",null,null],[6,"N297","","",null,null],[6,"U298","","",null,null],[6,"P298","","",null,null],[6,"N298","","",null,null],[6,"U299","","",null,null],[6,"P299","","",null,null],[6,"N299","","",null,null],[6,"U300","","",null,null],[6,"P300","","",null,null],[6,"N300","","",null,null],[6,"U301","","",null,null],[6,"P301","","",null,null],[6,"N301","","",null,null],[6,"U302","","",null,null],[6,"P302","","",null,null],[6,"N302","","",null,null],[6,"U303","","",null,null],[6,"P303","","",null,null],[6,"N303","","",null,null],[6,"U304","","",null,null],[6,"P304","","",null,null],[6,"N304","","",null,null],[6,"U305","","",null,null],[6,"P305","","",null,null],[6,"N305","","",null,null],[6,"U306","","",null,null],[6,"P306","","",null,null],[6,"N306","","",null,null],[6,"U307","","",null,null],[6,"P307","","",null,null],[6,"N307","","",null,null],[6,"U308","","",null,null],[6,"P308","","",null,null],[6,"N308","","",null,null],[6,"U309","","",null,null],[6,"P309","","",null,null],[6,"N309","","",null,null],[6,"U310","","",null,null],[6,"P310","","",null,null],[6,"N310","","",null,null],[6,"U311","","",null,null],[6,"P311","","",null,null],[6,"N311","","",null,null],[6,"U312","","",null,null],[6,"P312","","",null,null],[6,"N312","","",null,null],[6,"U313","","",null,null],[6,"P313","","",null,null],[6,"N313","","",null,null],[6,"U314","","",null,null],[6,"P314","","",null,null],[6,"N314","","",null,null],[6,"U315","","",null,null],[6,"P315","","",null,null],[6,"N315","","",null,null],[6,"U316","","",null,null],[6,"P316","","",null,null],[6,"N316","","",null,null],[6,"U317","","",null,null],[6,"P317","","",null,null],[6,"N317","","",null,null],[6,"U318","","",null,null],[6,"P318","","",null,null],[6,"N318","","",null,null],[6,"U319","","",null,null],[6,"P319","","",null,null],[6,"N319","","",null,null],[6,"U320","","",null,null],[6,"P320","","",null,null],[6,"N320","","",null,null],[6,"U321","","",null,null],[6,"P321","","",null,null],[6,"N321","","",null,null],[6,"U322","","",null,null],[6,"P322","","",null,null],[6,"N322","","",null,null],[6,"U323","","",null,null],[6,"P323","","",null,null],[6,"N323","","",null,null],[6,"U324","","",null,null],[6,"P324","","",null,null],[6,"N324","","",null,null],[6,"U325","","",null,null],[6,"P325","","",null,null],[6,"N325","","",null,null],[6,"U326","","",null,null],[6,"P326","","",null,null],[6,"N326","","",null,null],[6,"U327","","",null,null],[6,"P327","","",null,null],[6,"N327","","",null,null],[6,"U328","","",null,null],[6,"P328","","",null,null],[6,"N328","","",null,null],[6,"U329","","",null,null],[6,"P329","","",null,null],[6,"N329","","",null,null],[6,"U330","","",null,null],[6,"P330","","",null,null],[6,"N330","","",null,null],[6,"U331","","",null,null],[6,"P331","","",null,null],[6,"N331","","",null,null],[6,"U332","","",null,null],[6,"P332","","",null,null],[6,"N332","","",null,null],[6,"U333","","",null,null],[6,"P333","","",null,null],[6,"N333","","",null,null],[6,"U334","","",null,null],[6,"P334","","",null,null],[6,"N334","","",null,null],[6,"U335","","",null,null],[6,"P335","","",null,null],[6,"N335","","",null,null],[6,"U336","","",null,null],[6,"P336","","",null,null],[6,"N336","","",null,null],[6,"U337","","",null,null],[6,"P337","","",null,null],[6,"N337","","",null,null],[6,"U338","","",null,null],[6,"P338","","",null,null],[6,"N338","","",null,null],[6,"U339","","",null,null],[6,"P339","","",null,null],[6,"N339","","",null,null],[6,"U340","","",null,null],[6,"P340","","",null,null],[6,"N340","","",null,null],[6,"U341","","",null,null],[6,"P341","","",null,null],[6,"N341","","",null,null],[6,"U342","","",null,null],[6,"P342","","",null,null],[6,"N342","","",null,null],[6,"U343","","",null,null],[6,"P343","","",null,null],[6,"N343","","",null,null],[6,"U344","","",null,null],[6,"P344","","",null,null],[6,"N344","","",null,null],[6,"U345","","",null,null],[6,"P345","","",null,null],[6,"N345","","",null,null],[6,"U346","","",null,null],[6,"P346","","",null,null],[6,"N346","","",null,null],[6,"U347","","",null,null],[6,"P347","","",null,null],[6,"N347","","",null,null],[6,"U348","","",null,null],[6,"P348","","",null,null],[6,"N348","","",null,null],[6,"U349","","",null,null],[6,"P349","","",null,null],[6,"N349","","",null,null],[6,"U350","","",null,null],[6,"P350","","",null,null],[6,"N350","","",null,null],[6,"U351","","",null,null],[6,"P351","","",null,null],[6,"N351","","",null,null],[6,"U352","","",null,null],[6,"P352","","",null,null],[6,"N352","","",null,null],[6,"U353","","",null,null],[6,"P353","","",null,null],[6,"N353","","",null,null],[6,"U354","","",null,null],[6,"P354","","",null,null],[6,"N354","","",null,null],[6,"U355","","",null,null],[6,"P355","","",null,null],[6,"N355","","",null,null],[6,"U356","","",null,null],[6,"P356","","",null,null],[6,"N356","","",null,null],[6,"U357","","",null,null],[6,"P357","","",null,null],[6,"N357","","",null,null],[6,"U358","","",null,null],[6,"P358","","",null,null],[6,"N358","","",null,null],[6,"U359","","",null,null],[6,"P359","","",null,null],[6,"N359","","",null,null],[6,"U360","","",null,null],[6,"P360","","",null,null],[6,"N360","","",null,null],[6,"U361","","",null,null],[6,"P361","","",null,null],[6,"N361","","",null,null],[6,"U362","","",null,null],[6,"P362","","",null,null],[6,"N362","","",null,null],[6,"U363","","",null,null],[6,"P363","","",null,null],[6,"N363","","",null,null],[6,"U364","","",null,null],[6,"P364","","",null,null],[6,"N364","","",null,null],[6,"U365","","",null,null],[6,"P365","","",null,null],[6,"N365","","",null,null],[6,"U366","","",null,null],[6,"P366","","",null,null],[6,"N366","","",null,null],[6,"U367","","",null,null],[6,"P367","","",null,null],[6,"N367","","",null,null],[6,"U368","","",null,null],[6,"P368","","",null,null],[6,"N368","","",null,null],[6,"U369","","",null,null],[6,"P369","","",null,null],[6,"N369","","",null,null],[6,"U370","","",null,null],[6,"P370","","",null,null],[6,"N370","","",null,null],[6,"U371","","",null,null],[6,"P371","","",null,null],[6,"N371","","",null,null],[6,"U372","","",null,null],[6,"P372","","",null,null],[6,"N372","","",null,null],[6,"U373","","",null,null],[6,"P373","","",null,null],[6,"N373","","",null,null],[6,"U374","","",null,null],[6,"P374","","",null,null],[6,"N374","","",null,null],[6,"U375","","",null,null],[6,"P375","","",null,null],[6,"N375","","",null,null],[6,"U376","","",null,null],[6,"P376","","",null,null],[6,"N376","","",null,null],[6,"U377","","",null,null],[6,"P377","","",null,null],[6,"N377","","",null,null],[6,"U378","","",null,null],[6,"P378","","",null,null],[6,"N378","","",null,null],[6,"U379","","",null,null],[6,"P379","","",null,null],[6,"N379","","",null,null],[6,"U380","","",null,null],[6,"P380","","",null,null],[6,"N380","","",null,null],[6,"U381","","",null,null],[6,"P381","","",null,null],[6,"N381","","",null,null],[6,"U382","","",null,null],[6,"P382","","",null,null],[6,"N382","","",null,null],[6,"U383","","",null,null],[6,"P383","","",null,null],[6,"N383","","",null,null],[6,"U384","","",null,null],[6,"P384","","",null,null],[6,"N384","","",null,null],[6,"U385","","",null,null],[6,"P385","","",null,null],[6,"N385","","",null,null],[6,"U386","","",null,null],[6,"P386","","",null,null],[6,"N386","","",null,null],[6,"U387","","",null,null],[6,"P387","","",null,null],[6,"N387","","",null,null],[6,"U388","","",null,null],[6,"P388","","",null,null],[6,"N388","","",null,null],[6,"U389","","",null,null],[6,"P389","","",null,null],[6,"N389","","",null,null],[6,"U390","","",null,null],[6,"P390","","",null,null],[6,"N390","","",null,null],[6,"U391","","",null,null],[6,"P391","","",null,null],[6,"N391","","",null,null],[6,"U392","","",null,null],[6,"P392","","",null,null],[6,"N392","","",null,null],[6,"U393","","",null,null],[6,"P393","","",null,null],[6,"N393","","",null,null],[6,"U394","","",null,null],[6,"P394","","",null,null],[6,"N394","","",null,null],[6,"U395","","",null,null],[6,"P395","","",null,null],[6,"N395","","",null,null],[6,"U396","","",null,null],[6,"P396","","",null,null],[6,"N396","","",null,null],[6,"U397","","",null,null],[6,"P397","","",null,null],[6,"N397","","",null,null],[6,"U398","","",null,null],[6,"P398","","",null,null],[6,"N398","","",null,null],[6,"U399","","",null,null],[6,"P399","","",null,null],[6,"N399","","",null,null],[6,"U400","","",null,null],[6,"P400","","",null,null],[6,"N400","","",null,null],[6,"U401","","",null,null],[6,"P401","","",null,null],[6,"N401","","",null,null],[6,"U402","","",null,null],[6,"P402","","",null,null],[6,"N402","","",null,null],[6,"U403","","",null,null],[6,"P403","","",null,null],[6,"N403","","",null,null],[6,"U404","","",null,null],[6,"P404","","",null,null],[6,"N404","","",null,null],[6,"U405","","",null,null],[6,"P405","","",null,null],[6,"N405","","",null,null],[6,"U406","","",null,null],[6,"P406","","",null,null],[6,"N406","","",null,null],[6,"U407","","",null,null],[6,"P407","","",null,null],[6,"N407","","",null,null],[6,"U408","","",null,null],[6,"P408","","",null,null],[6,"N408","","",null,null],[6,"U409","","",null,null],[6,"P409","","",null,null],[6,"N409","","",null,null],[6,"U410","","",null,null],[6,"P410","","",null,null],[6,"N410","","",null,null],[6,"U411","","",null,null],[6,"P411","","",null,null],[6,"N411","","",null,null],[6,"U412","","",null,null],[6,"P412","","",null,null],[6,"N412","","",null,null],[6,"U413","","",null,null],[6,"P413","","",null,null],[6,"N413","","",null,null],[6,"U414","","",null,null],[6,"P414","","",null,null],[6,"N414","","",null,null],[6,"U415","","",null,null],[6,"P415","","",null,null],[6,"N415","","",null,null],[6,"U416","","",null,null],[6,"P416","","",null,null],[6,"N416","","",null,null],[6,"U417","","",null,null],[6,"P417","","",null,null],[6,"N417","","",null,null],[6,"U418","","",null,null],[6,"P418","","",null,null],[6,"N418","","",null,null],[6,"U419","","",null,null],[6,"P419","","",null,null],[6,"N419","","",null,null],[6,"U420","","",null,null],[6,"P420","","",null,null],[6,"N420","","",null,null],[6,"U421","","",null,null],[6,"P421","","",null,null],[6,"N421","","",null,null],[6,"U422","","",null,null],[6,"P422","","",null,null],[6,"N422","","",null,null],[6,"U423","","",null,null],[6,"P423","","",null,null],[6,"N423","","",null,null],[6,"U424","","",null,null],[6,"P424","","",null,null],[6,"N424","","",null,null],[6,"U425","","",null,null],[6,"P425","","",null,null],[6,"N425","","",null,null],[6,"U426","","",null,null],[6,"P426","","",null,null],[6,"N426","","",null,null],[6,"U427","","",null,null],[6,"P427","","",null,null],[6,"N427","","",null,null],[6,"U428","","",null,null],[6,"P428","","",null,null],[6,"N428","","",null,null],[6,"U429","","",null,null],[6,"P429","","",null,null],[6,"N429","","",null,null],[6,"U430","","",null,null],[6,"P430","","",null,null],[6,"N430","","",null,null],[6,"U431","","",null,null],[6,"P431","","",null,null],[6,"N431","","",null,null],[6,"U432","","",null,null],[6,"P432","","",null,null],[6,"N432","","",null,null],[6,"U433","","",null,null],[6,"P433","","",null,null],[6,"N433","","",null,null],[6,"U434","","",null,null],[6,"P434","","",null,null],[6,"N434","","",null,null],[6,"U435","","",null,null],[6,"P435","","",null,null],[6,"N435","","",null,null],[6,"U436","","",null,null],[6,"P436","","",null,null],[6,"N436","","",null,null],[6,"U437","","",null,null],[6,"P437","","",null,null],[6,"N437","","",null,null],[6,"U438","","",null,null],[6,"P438","","",null,null],[6,"N438","","",null,null],[6,"U439","","",null,null],[6,"P439","","",null,null],[6,"N439","","",null,null],[6,"U440","","",null,null],[6,"P440","","",null,null],[6,"N440","","",null,null],[6,"U441","","",null,null],[6,"P441","","",null,null],[6,"N441","","",null,null],[6,"U442","","",null,null],[6,"P442","","",null,null],[6,"N442","","",null,null],[6,"U443","","",null,null],[6,"P443","","",null,null],[6,"N443","","",null,null],[6,"U444","","",null,null],[6,"P444","","",null,null],[6,"N444","","",null,null],[6,"U445","","",null,null],[6,"P445","","",null,null],[6,"N445","","",null,null],[6,"U446","","",null,null],[6,"P446","","",null,null],[6,"N446","","",null,null],[6,"U447","","",null,null],[6,"P447","","",null,null],[6,"N447","","",null,null],[6,"U448","","",null,null],[6,"P448","","",null,null],[6,"N448","","",null,null],[6,"U449","","",null,null],[6,"P449","","",null,null],[6,"N449","","",null,null],[6,"U450","","",null,null],[6,"P450","","",null,null],[6,"N450","","",null,null],[6,"U451","","",null,null],[6,"P451","","",null,null],[6,"N451","","",null,null],[6,"U452","","",null,null],[6,"P452","","",null,null],[6,"N452","","",null,null],[6,"U453","","",null,null],[6,"P453","","",null,null],[6,"N453","","",null,null],[6,"U454","","",null,null],[6,"P454","","",null,null],[6,"N454","","",null,null],[6,"U455","","",null,null],[6,"P455","","",null,null],[6,"N455","","",null,null],[6,"U456","","",null,null],[6,"P456","","",null,null],[6,"N456","","",null,null],[6,"U457","","",null,null],[6,"P457","","",null,null],[6,"N457","","",null,null],[6,"U458","","",null,null],[6,"P458","","",null,null],[6,"N458","","",null,null],[6,"U459","","",null,null],[6,"P459","","",null,null],[6,"N459","","",null,null],[6,"U460","","",null,null],[6,"P460","","",null,null],[6,"N460","","",null,null],[6,"U461","","",null,null],[6,"P461","","",null,null],[6,"N461","","",null,null],[6,"U462","","",null,null],[6,"P462","","",null,null],[6,"N462","","",null,null],[6,"U463","","",null,null],[6,"P463","","",null,null],[6,"N463","","",null,null],[6,"U464","","",null,null],[6,"P464","","",null,null],[6,"N464","","",null,null],[6,"U465","","",null,null],[6,"P465","","",null,null],[6,"N465","","",null,null],[6,"U466","","",null,null],[6,"P466","","",null,null],[6,"N466","","",null,null],[6,"U467","","",null,null],[6,"P467","","",null,null],[6,"N467","","",null,null],[6,"U468","","",null,null],[6,"P468","","",null,null],[6,"N468","","",null,null],[6,"U469","","",null,null],[6,"P469","","",null,null],[6,"N469","","",null,null],[6,"U470","","",null,null],[6,"P470","","",null,null],[6,"N470","","",null,null],[6,"U471","","",null,null],[6,"P471","","",null,null],[6,"N471","","",null,null],[6,"U472","","",null,null],[6,"P472","","",null,null],[6,"N472","","",null,null],[6,"U473","","",null,null],[6,"P473","","",null,null],[6,"N473","","",null,null],[6,"U474","","",null,null],[6,"P474","","",null,null],[6,"N474","","",null,null],[6,"U475","","",null,null],[6,"P475","","",null,null],[6,"N475","","",null,null],[6,"U476","","",null,null],[6,"P476","","",null,null],[6,"N476","","",null,null],[6,"U477","","",null,null],[6,"P477","","",null,null],[6,"N477","","",null,null],[6,"U478","","",null,null],[6,"P478","","",null,null],[6,"N478","","",null,null],[6,"U479","","",null,null],[6,"P479","","",null,null],[6,"N479","","",null,null],[6,"U480","","",null,null],[6,"P480","","",null,null],[6,"N480","","",null,null],[6,"U481","","",null,null],[6,"P481","","",null,null],[6,"N481","","",null,null],[6,"U482","","",null,null],[6,"P482","","",null,null],[6,"N482","","",null,null],[6,"U483","","",null,null],[6,"P483","","",null,null],[6,"N483","","",null,null],[6,"U484","","",null,null],[6,"P484","","",null,null],[6,"N484","","",null,null],[6,"U485","","",null,null],[6,"P485","","",null,null],[6,"N485","","",null,null],[6,"U486","","",null,null],[6,"P486","","",null,null],[6,"N486","","",null,null],[6,"U487","","",null,null],[6,"P487","","",null,null],[6,"N487","","",null,null],[6,"U488","","",null,null],[6,"P488","","",null,null],[6,"N488","","",null,null],[6,"U489","","",null,null],[6,"P489","","",null,null],[6,"N489","","",null,null],[6,"U490","","",null,null],[6,"P490","","",null,null],[6,"N490","","",null,null],[6,"U491","","",null,null],[6,"P491","","",null,null],[6,"N491","","",null,null],[6,"U492","","",null,null],[6,"P492","","",null,null],[6,"N492","","",null,null],[6,"U493","","",null,null],[6,"P493","","",null,null],[6,"N493","","",null,null],[6,"U494","","",null,null],[6,"P494","","",null,null],[6,"N494","","",null,null],[6,"U495","","",null,null],[6,"P495","","",null,null],[6,"N495","","",null,null],[6,"U496","","",null,null],[6,"P496","","",null,null],[6,"N496","","",null,null],[6,"U497","","",null,null],[6,"P497","","",null,null],[6,"N497","","",null,null],[6,"U498","","",null,null],[6,"P498","","",null,null],[6,"N498","","",null,null],[6,"U499","","",null,null],[6,"P499","","",null,null],[6,"N499","","",null,null],[6,"U500","","",null,null],[6,"P500","","",null,null],[6,"N500","","",null,null],[6,"U501","","",null,null],[6,"P501","","",null,null],[6,"N501","","",null,null],[6,"U502","","",null,null],[6,"P502","","",null,null],[6,"N502","","",null,null],[6,"U503","","",null,null],[6,"P503","","",null,null],[6,"N503","","",null,null],[6,"U504","","",null,null],[6,"P504","","",null,null],[6,"N504","","",null,null],[6,"U505","","",null,null],[6,"P505","","",null,null],[6,"N505","","",null,null],[6,"U506","","",null,null],[6,"P506","","",null,null],[6,"N506","","",null,null],[6,"U507","","",null,null],[6,"P507","","",null,null],[6,"N507","","",null,null],[6,"U508","","",null,null],[6,"P508","","",null,null],[6,"N508","","",null,null],[6,"U509","","",null,null],[6,"P509","","",null,null],[6,"N509","","",null,null],[6,"U510","","",null,null],[6,"P510","","",null,null],[6,"N510","","",null,null],[6,"U511","","",null,null],[6,"P511","","",null,null],[6,"N511","","",null,null],[6,"U512","","",null,null],[6,"P512","","",null,null],[6,"N512","","",null,null],[6,"U513","","",null,null],[6,"P513","","",null,null],[6,"N513","","",null,null],[6,"U514","","",null,null],[6,"P514","","",null,null],[6,"N514","","",null,null],[6,"U515","","",null,null],[6,"P515","","",null,null],[6,"N515","","",null,null],[6,"U516","","",null,null],[6,"P516","","",null,null],[6,"N516","","",null,null],[6,"U517","","",null,null],[6,"P517","","",null,null],[6,"N517","","",null,null],[6,"U518","","",null,null],[6,"P518","","",null,null],[6,"N518","","",null,null],[6,"U519","","",null,null],[6,"P519","","",null,null],[6,"N519","","",null,null],[6,"U520","","",null,null],[6,"P520","","",null,null],[6,"N520","","",null,null],[6,"U521","","",null,null],[6,"P521","","",null,null],[6,"N521","","",null,null],[6,"U522","","",null,null],[6,"P522","","",null,null],[6,"N522","","",null,null],[6,"U523","","",null,null],[6,"P523","","",null,null],[6,"N523","","",null,null],[6,"U524","","",null,null],[6,"P524","","",null,null],[6,"N524","","",null,null],[6,"U525","","",null,null],[6,"P525","","",null,null],[6,"N525","","",null,null],[6,"U526","","",null,null],[6,"P526","","",null,null],[6,"N526","","",null,null],[6,"U527","","",null,null],[6,"P527","","",null,null],[6,"N527","","",null,null],[6,"U528","","",null,null],[6,"P528","","",null,null],[6,"N528","","",null,null],[6,"U529","","",null,null],[6,"P529","","",null,null],[6,"N529","","",null,null],[6,"U530","","",null,null],[6,"P530","","",null,null],[6,"N530","","",null,null],[6,"U531","","",null,null],[6,"P531","","",null,null],[6,"N531","","",null,null],[6,"U532","","",null,null],[6,"P532","","",null,null],[6,"N532","","",null,null],[6,"U533","","",null,null],[6,"P533","","",null,null],[6,"N533","","",null,null],[6,"U534","","",null,null],[6,"P534","","",null,null],[6,"N534","","",null,null],[6,"U535","","",null,null],[6,"P535","","",null,null],[6,"N535","","",null,null],[6,"U536","","",null,null],[6,"P536","","",null,null],[6,"N536","","",null,null],[6,"U537","","",null,null],[6,"P537","","",null,null],[6,"N537","","",null,null],[6,"U538","","",null,null],[6,"P538","","",null,null],[6,"N538","","",null,null],[6,"U539","","",null,null],[6,"P539","","",null,null],[6,"N539","","",null,null],[6,"U540","","",null,null],[6,"P540","","",null,null],[6,"N540","","",null,null],[6,"U541","","",null,null],[6,"P541","","",null,null],[6,"N541","","",null,null],[6,"U542","","",null,null],[6,"P542","","",null,null],[6,"N542","","",null,null],[6,"U543","","",null,null],[6,"P543","","",null,null],[6,"N543","","",null,null],[6,"U544","","",null,null],[6,"P544","","",null,null],[6,"N544","","",null,null],[6,"U545","","",null,null],[6,"P545","","",null,null],[6,"N545","","",null,null],[6,"U546","","",null,null],[6,"P546","","",null,null],[6,"N546","","",null,null],[6,"U547","","",null,null],[6,"P547","","",null,null],[6,"N547","","",null,null],[6,"U548","","",null,null],[6,"P548","","",null,null],[6,"N548","","",null,null],[6,"U549","","",null,null],[6,"P549","","",null,null],[6,"N549","","",null,null],[6,"U550","","",null,null],[6,"P550","","",null,null],[6,"N550","","",null,null],[6,"U551","","",null,null],[6,"P551","","",null,null],[6,"N551","","",null,null],[6,"U552","","",null,null],[6,"P552","","",null,null],[6,"N552","","",null,null],[6,"U553","","",null,null],[6,"P553","","",null,null],[6,"N553","","",null,null],[6,"U554","","",null,null],[6,"P554","","",null,null],[6,"N554","","",null,null],[6,"U555","","",null,null],[6,"P555","","",null,null],[6,"N555","","",null,null],[6,"U556","","",null,null],[6,"P556","","",null,null],[6,"N556","","",null,null],[6,"U557","","",null,null],[6,"P557","","",null,null],[6,"N557","","",null,null],[6,"U558","","",null,null],[6,"P558","","",null,null],[6,"N558","","",null,null],[6,"U559","","",null,null],[6,"P559","","",null,null],[6,"N559","","",null,null],[6,"U560","","",null,null],[6,"P560","","",null,null],[6,"N560","","",null,null],[6,"U561","","",null,null],[6,"P561","","",null,null],[6,"N561","","",null,null],[6,"U562","","",null,null],[6,"P562","","",null,null],[6,"N562","","",null,null],[6,"U563","","",null,null],[6,"P563","","",null,null],[6,"N563","","",null,null],[6,"U564","","",null,null],[6,"P564","","",null,null],[6,"N564","","",null,null],[6,"U565","","",null,null],[6,"P565","","",null,null],[6,"N565","","",null,null],[6,"U566","","",null,null],[6,"P566","","",null,null],[6,"N566","","",null,null],[6,"U567","","",null,null],[6,"P567","","",null,null],[6,"N567","","",null,null],[6,"U568","","",null,null],[6,"P568","","",null,null],[6,"N568","","",null,null],[6,"U569","","",null,null],[6,"P569","","",null,null],[6,"N569","","",null,null],[6,"U570","","",null,null],[6,"P570","","",null,null],[6,"N570","","",null,null],[6,"U571","","",null,null],[6,"P571","","",null,null],[6,"N571","","",null,null],[6,"U572","","",null,null],[6,"P572","","",null,null],[6,"N572","","",null,null],[6,"U573","","",null,null],[6,"P573","","",null,null],[6,"N573","","",null,null],[6,"U574","","",null,null],[6,"P574","","",null,null],[6,"N574","","",null,null],[6,"U575","","",null,null],[6,"P575","","",null,null],[6,"N575","","",null,null],[6,"U576","","",null,null],[6,"P576","","",null,null],[6,"N576","","",null,null],[6,"U577","","",null,null],[6,"P577","","",null,null],[6,"N577","","",null,null],[6,"U578","","",null,null],[6,"P578","","",null,null],[6,"N578","","",null,null],[6,"U579","","",null,null],[6,"P579","","",null,null],[6,"N579","","",null,null],[6,"U580","","",null,null],[6,"P580","","",null,null],[6,"N580","","",null,null],[6,"U581","","",null,null],[6,"P581","","",null,null],[6,"N581","","",null,null],[6,"U582","","",null,null],[6,"P582","","",null,null],[6,"N582","","",null,null],[6,"U583","","",null,null],[6,"P583","","",null,null],[6,"N583","","",null,null],[6,"U584","","",null,null],[6,"P584","","",null,null],[6,"N584","","",null,null],[6,"U585","","",null,null],[6,"P585","","",null,null],[6,"N585","","",null,null],[6,"U586","","",null,null],[6,"P586","","",null,null],[6,"N586","","",null,null],[6,"U587","","",null,null],[6,"P587","","",null,null],[6,"N587","","",null,null],[6,"U588","","",null,null],[6,"P588","","",null,null],[6,"N588","","",null,null],[6,"U589","","",null,null],[6,"P589","","",null,null],[6,"N589","","",null,null],[6,"U590","","",null,null],[6,"P590","","",null,null],[6,"N590","","",null,null],[6,"U591","","",null,null],[6,"P591","","",null,null],[6,"N591","","",null,null],[6,"U592","","",null,null],[6,"P592","","",null,null],[6,"N592","","",null,null],[6,"U593","","",null,null],[6,"P593","","",null,null],[6,"N593","","",null,null],[6,"U594","","",null,null],[6,"P594","","",null,null],[6,"N594","","",null,null],[6,"U595","","",null,null],[6,"P595","","",null,null],[6,"N595","","",null,null],[6,"U596","","",null,null],[6,"P596","","",null,null],[6,"N596","","",null,null],[6,"U597","","",null,null],[6,"P597","","",null,null],[6,"N597","","",null,null],[6,"U598","","",null,null],[6,"P598","","",null,null],[6,"N598","","",null,null],[6,"U599","","",null,null],[6,"P599","","",null,null],[6,"N599","","",null,null],[6,"U600","","",null,null],[6,"P600","","",null,null],[6,"N600","","",null,null],[6,"U601","","",null,null],[6,"P601","","",null,null],[6,"N601","","",null,null],[6,"U602","","",null,null],[6,"P602","","",null,null],[6,"N602","","",null,null],[6,"U603","","",null,null],[6,"P603","","",null,null],[6,"N603","","",null,null],[6,"U604","","",null,null],[6,"P604","","",null,null],[6,"N604","","",null,null],[6,"U605","","",null,null],[6,"P605","","",null,null],[6,"N605","","",null,null],[6,"U606","","",null,null],[6,"P606","","",null,null],[6,"N606","","",null,null],[6,"U607","","",null,null],[6,"P607","","",null,null],[6,"N607","","",null,null],[6,"U608","","",null,null],[6,"P608","","",null,null],[6,"N608","","",null,null],[6,"U609","","",null,null],[6,"P609","","",null,null],[6,"N609","","",null,null],[6,"U610","","",null,null],[6,"P610","","",null,null],[6,"N610","","",null,null],[6,"U611","","",null,null],[6,"P611","","",null,null],[6,"N611","","",null,null],[6,"U612","","",null,null],[6,"P612","","",null,null],[6,"N612","","",null,null],[6,"U613","","",null,null],[6,"P613","","",null,null],[6,"N613","","",null,null],[6,"U614","","",null,null],[6,"P614","","",null,null],[6,"N614","","",null,null],[6,"U615","","",null,null],[6,"P615","","",null,null],[6,"N615","","",null,null],[6,"U616","","",null,null],[6,"P616","","",null,null],[6,"N616","","",null,null],[6,"U617","","",null,null],[6,"P617","","",null,null],[6,"N617","","",null,null],[6,"U618","","",null,null],[6,"P618","","",null,null],[6,"N618","","",null,null],[6,"U619","","",null,null],[6,"P619","","",null,null],[6,"N619","","",null,null],[6,"U620","","",null,null],[6,"P620","","",null,null],[6,"N620","","",null,null],[6,"U621","","",null,null],[6,"P621","","",null,null],[6,"N621","","",null,null],[6,"U622","","",null,null],[6,"P622","","",null,null],[6,"N622","","",null,null],[6,"U623","","",null,null],[6,"P623","","",null,null],[6,"N623","","",null,null],[6,"U624","","",null,null],[6,"P624","","",null,null],[6,"N624","","",null,null],[6,"U625","","",null,null],[6,"P625","","",null,null],[6,"N625","","",null,null],[6,"U626","","",null,null],[6,"P626","","",null,null],[6,"N626","","",null,null],[6,"U627","","",null,null],[6,"P627","","",null,null],[6,"N627","","",null,null],[6,"U628","","",null,null],[6,"P628","","",null,null],[6,"N628","","",null,null],[6,"U629","","",null,null],[6,"P629","","",null,null],[6,"N629","","",null,null],[6,"U630","","",null,null],[6,"P630","","",null,null],[6,"N630","","",null,null],[6,"U631","","",null,null],[6,"P631","","",null,null],[6,"N631","","",null,null],[6,"U632","","",null,null],[6,"P632","","",null,null],[6,"N632","","",null,null],[6,"U633","","",null,null],[6,"P633","","",null,null],[6,"N633","","",null,null],[6,"U634","","",null,null],[6,"P634","","",null,null],[6,"N634","","",null,null],[6,"U635","","",null,null],[6,"P635","","",null,null],[6,"N635","","",null,null],[6,"U636","","",null,null],[6,"P636","","",null,null],[6,"N636","","",null,null],[6,"U637","","",null,null],[6,"P637","","",null,null],[6,"N637","","",null,null],[6,"U638","","",null,null],[6,"P638","","",null,null],[6,"N638","","",null,null],[6,"U639","","",null,null],[6,"P639","","",null,null],[6,"N639","","",null,null],[6,"U640","","",null,null],[6,"P640","","",null,null],[6,"N640","","",null,null],[6,"U641","","",null,null],[6,"P641","","",null,null],[6,"N641","","",null,null],[6,"U642","","",null,null],[6,"P642","","",null,null],[6,"N642","","",null,null],[6,"U643","","",null,null],[6,"P643","","",null,null],[6,"N643","","",null,null],[6,"U644","","",null,null],[6,"P644","","",null,null],[6,"N644","","",null,null],[6,"U645","","",null,null],[6,"P645","","",null,null],[6,"N645","","",null,null],[6,"U646","","",null,null],[6,"P646","","",null,null],[6,"N646","","",null,null],[6,"U647","","",null,null],[6,"P647","","",null,null],[6,"N647","","",null,null],[6,"U648","","",null,null],[6,"P648","","",null,null],[6,"N648","","",null,null],[6,"U649","","",null,null],[6,"P649","","",null,null],[6,"N649","","",null,null],[6,"U650","","",null,null],[6,"P650","","",null,null],[6,"N650","","",null,null],[6,"U651","","",null,null],[6,"P651","","",null,null],[6,"N651","","",null,null],[6,"U652","","",null,null],[6,"P652","","",null,null],[6,"N652","","",null,null],[6,"U653","","",null,null],[6,"P653","","",null,null],[6,"N653","","",null,null],[6,"U654","","",null,null],[6,"P654","","",null,null],[6,"N654","","",null,null],[6,"U655","","",null,null],[6,"P655","","",null,null],[6,"N655","","",null,null],[6,"U656","","",null,null],[6,"P656","","",null,null],[6,"N656","","",null,null],[6,"U657","","",null,null],[6,"P657","","",null,null],[6,"N657","","",null,null],[6,"U658","","",null,null],[6,"P658","","",null,null],[6,"N658","","",null,null],[6,"U659","","",null,null],[6,"P659","","",null,null],[6,"N659","","",null,null],[6,"U660","","",null,null],[6,"P660","","",null,null],[6,"N660","","",null,null],[6,"U661","","",null,null],[6,"P661","","",null,null],[6,"N661","","",null,null],[6,"U662","","",null,null],[6,"P662","","",null,null],[6,"N662","","",null,null],[6,"U663","","",null,null],[6,"P663","","",null,null],[6,"N663","","",null,null],[6,"U664","","",null,null],[6,"P664","","",null,null],[6,"N664","","",null,null],[6,"U665","","",null,null],[6,"P665","","",null,null],[6,"N665","","",null,null],[6,"U666","","",null,null],[6,"P666","","",null,null],[6,"N666","","",null,null],[6,"U667","","",null,null],[6,"P667","","",null,null],[6,"N667","","",null,null],[6,"U668","","",null,null],[6,"P668","","",null,null],[6,"N668","","",null,null],[6,"U669","","",null,null],[6,"P669","","",null,null],[6,"N669","","",null,null],[6,"U670","","",null,null],[6,"P670","","",null,null],[6,"N670","","",null,null],[6,"U671","","",null,null],[6,"P671","","",null,null],[6,"N671","","",null,null],[6,"U672","","",null,null],[6,"P672","","",null,null],[6,"N672","","",null,null],[6,"U673","","",null,null],[6,"P673","","",null,null],[6,"N673","","",null,null],[6,"U674","","",null,null],[6,"P674","","",null,null],[6,"N674","","",null,null],[6,"U675","","",null,null],[6,"P675","","",null,null],[6,"N675","","",null,null],[6,"U676","","",null,null],[6,"P676","","",null,null],[6,"N676","","",null,null],[6,"U677","","",null,null],[6,"P677","","",null,null],[6,"N677","","",null,null],[6,"U678","","",null,null],[6,"P678","","",null,null],[6,"N678","","",null,null],[6,"U679","","",null,null],[6,"P679","","",null,null],[6,"N679","","",null,null],[6,"U680","","",null,null],[6,"P680","","",null,null],[6,"N680","","",null,null],[6,"U681","","",null,null],[6,"P681","","",null,null],[6,"N681","","",null,null],[6,"U682","","",null,null],[6,"P682","","",null,null],[6,"N682","","",null,null],[6,"U683","","",null,null],[6,"P683","","",null,null],[6,"N683","","",null,null],[6,"U684","","",null,null],[6,"P684","","",null,null],[6,"N684","","",null,null],[6,"U685","","",null,null],[6,"P685","","",null,null],[6,"N685","","",null,null],[6,"U686","","",null,null],[6,"P686","","",null,null],[6,"N686","","",null,null],[6,"U687","","",null,null],[6,"P687","","",null,null],[6,"N687","","",null,null],[6,"U688","","",null,null],[6,"P688","","",null,null],[6,"N688","","",null,null],[6,"U689","","",null,null],[6,"P689","","",null,null],[6,"N689","","",null,null],[6,"U690","","",null,null],[6,"P690","","",null,null],[6,"N690","","",null,null],[6,"U691","","",null,null],[6,"P691","","",null,null],[6,"N691","","",null,null],[6,"U692","","",null,null],[6,"P692","","",null,null],[6,"N692","","",null,null],[6,"U693","","",null,null],[6,"P693","","",null,null],[6,"N693","","",null,null],[6,"U694","","",null,null],[6,"P694","","",null,null],[6,"N694","","",null,null],[6,"U695","","",null,null],[6,"P695","","",null,null],[6,"N695","","",null,null],[6,"U696","","",null,null],[6,"P696","","",null,null],[6,"N696","","",null,null],[6,"U697","","",null,null],[6,"P697","","",null,null],[6,"N697","","",null,null],[6,"U698","","",null,null],[6,"P698","","",null,null],[6,"N698","","",null,null],[6,"U699","","",null,null],[6,"P699","","",null,null],[6,"N699","","",null,null],[6,"U700","","",null,null],[6,"P700","","",null,null],[6,"N700","","",null,null],[6,"U701","","",null,null],[6,"P701","","",null,null],[6,"N701","","",null,null],[6,"U702","","",null,null],[6,"P702","","",null,null],[6,"N702","","",null,null],[6,"U703","","",null,null],[6,"P703","","",null,null],[6,"N703","","",null,null],[6,"U704","","",null,null],[6,"P704","","",null,null],[6,"N704","","",null,null],[6,"U705","","",null,null],[6,"P705","","",null,null],[6,"N705","","",null,null],[6,"U706","","",null,null],[6,"P706","","",null,null],[6,"N706","","",null,null],[6,"U707","","",null,null],[6,"P707","","",null,null],[6,"N707","","",null,null],[6,"U708","","",null,null],[6,"P708","","",null,null],[6,"N708","","",null,null],[6,"U709","","",null,null],[6,"P709","","",null,null],[6,"N709","","",null,null],[6,"U710","","",null,null],[6,"P710","","",null,null],[6,"N710","","",null,null],[6,"U711","","",null,null],[6,"P711","","",null,null],[6,"N711","","",null,null],[6,"U712","","",null,null],[6,"P712","","",null,null],[6,"N712","","",null,null],[6,"U713","","",null,null],[6,"P713","","",null,null],[6,"N713","","",null,null],[6,"U714","","",null,null],[6,"P714","","",null,null],[6,"N714","","",null,null],[6,"U715","","",null,null],[6,"P715","","",null,null],[6,"N715","","",null,null],[6,"U716","","",null,null],[6,"P716","","",null,null],[6,"N716","","",null,null],[6,"U717","","",null,null],[6,"P717","","",null,null],[6,"N717","","",null,null],[6,"U718","","",null,null],[6,"P718","","",null,null],[6,"N718","","",null,null],[6,"U719","","",null,null],[6,"P719","","",null,null],[6,"N719","","",null,null],[6,"U720","","",null,null],[6,"P720","","",null,null],[6,"N720","","",null,null],[6,"U721","","",null,null],[6,"P721","","",null,null],[6,"N721","","",null,null],[6,"U722","","",null,null],[6,"P722","","",null,null],[6,"N722","","",null,null],[6,"U723","","",null,null],[6,"P723","","",null,null],[6,"N723","","",null,null],[6,"U724","","",null,null],[6,"P724","","",null,null],[6,"N724","","",null,null],[6,"U725","","",null,null],[6,"P725","","",null,null],[6,"N725","","",null,null],[6,"U726","","",null,null],[6,"P726","","",null,null],[6,"N726","","",null,null],[6,"U727","","",null,null],[6,"P727","","",null,null],[6,"N727","","",null,null],[6,"U728","","",null,null],[6,"P728","","",null,null],[6,"N728","","",null,null],[6,"U729","","",null,null],[6,"P729","","",null,null],[6,"N729","","",null,null],[6,"U730","","",null,null],[6,"P730","","",null,null],[6,"N730","","",null,null],[6,"U731","","",null,null],[6,"P731","","",null,null],[6,"N731","","",null,null],[6,"U732","","",null,null],[6,"P732","","",null,null],[6,"N732","","",null,null],[6,"U733","","",null,null],[6,"P733","","",null,null],[6,"N733","","",null,null],[6,"U734","","",null,null],[6,"P734","","",null,null],[6,"N734","","",null,null],[6,"U735","","",null,null],[6,"P735","","",null,null],[6,"N735","","",null,null],[6,"U736","","",null,null],[6,"P736","","",null,null],[6,"N736","","",null,null],[6,"U737","","",null,null],[6,"P737","","",null,null],[6,"N737","","",null,null],[6,"U738","","",null,null],[6,"P738","","",null,null],[6,"N738","","",null,null],[6,"U739","","",null,null],[6,"P739","","",null,null],[6,"N739","","",null,null],[6,"U740","","",null,null],[6,"P740","","",null,null],[6,"N740","","",null,null],[6,"U741","","",null,null],[6,"P741","","",null,null],[6,"N741","","",null,null],[6,"U742","","",null,null],[6,"P742","","",null,null],[6,"N742","","",null,null],[6,"U743","","",null,null],[6,"P743","","",null,null],[6,"N743","","",null,null],[6,"U744","","",null,null],[6,"P744","","",null,null],[6,"N744","","",null,null],[6,"U745","","",null,null],[6,"P745","","",null,null],[6,"N745","","",null,null],[6,"U746","","",null,null],[6,"P746","","",null,null],[6,"N746","","",null,null],[6,"U747","","",null,null],[6,"P747","","",null,null],[6,"N747","","",null,null],[6,"U748","","",null,null],[6,"P748","","",null,null],[6,"N748","","",null,null],[6,"U749","","",null,null],[6,"P749","","",null,null],[6,"N749","","",null,null],[6,"U750","","",null,null],[6,"P750","","",null,null],[6,"N750","","",null,null],[6,"U751","","",null,null],[6,"P751","","",null,null],[6,"N751","","",null,null],[6,"U752","","",null,null],[6,"P752","","",null,null],[6,"N752","","",null,null],[6,"U753","","",null,null],[6,"P753","","",null,null],[6,"N753","","",null,null],[6,"U754","","",null,null],[6,"P754","","",null,null],[6,"N754","","",null,null],[6,"U755","","",null,null],[6,"P755","","",null,null],[6,"N755","","",null,null],[6,"U756","","",null,null],[6,"P756","","",null,null],[6,"N756","","",null,null],[6,"U757","","",null,null],[6,"P757","","",null,null],[6,"N757","","",null,null],[6,"U758","","",null,null],[6,"P758","","",null,null],[6,"N758","","",null,null],[6,"U759","","",null,null],[6,"P759","","",null,null],[6,"N759","","",null,null],[6,"U760","","",null,null],[6,"P760","","",null,null],[6,"N760","","",null,null],[6,"U761","","",null,null],[6,"P761","","",null,null],[6,"N761","","",null,null],[6,"U762","","",null,null],[6,"P762","","",null,null],[6,"N762","","",null,null],[6,"U763","","",null,null],[6,"P763","","",null,null],[6,"N763","","",null,null],[6,"U764","","",null,null],[6,"P764","","",null,null],[6,"N764","","",null,null],[6,"U765","","",null,null],[6,"P765","","",null,null],[6,"N765","","",null,null],[6,"U766","","",null,null],[6,"P766","","",null,null],[6,"N766","","",null,null],[6,"U767","","",null,null],[6,"P767","","",null,null],[6,"N767","","",null,null],[6,"U768","","",null,null],[6,"P768","","",null,null],[6,"N768","","",null,null],[6,"U769","","",null,null],[6,"P769","","",null,null],[6,"N769","","",null,null],[6,"U770","","",null,null],[6,"P770","","",null,null],[6,"N770","","",null,null],[6,"U771","","",null,null],[6,"P771","","",null,null],[6,"N771","","",null,null],[6,"U772","","",null,null],[6,"P772","","",null,null],[6,"N772","","",null,null],[6,"U773","","",null,null],[6,"P773","","",null,null],[6,"N773","","",null,null],[6,"U774","","",null,null],[6,"P774","","",null,null],[6,"N774","","",null,null],[6,"U775","","",null,null],[6,"P775","","",null,null],[6,"N775","","",null,null],[6,"U776","","",null,null],[6,"P776","","",null,null],[6,"N776","","",null,null],[6,"U777","","",null,null],[6,"P777","","",null,null],[6,"N777","","",null,null],[6,"U778","","",null,null],[6,"P778","","",null,null],[6,"N778","","",null,null],[6,"U779","","",null,null],[6,"P779","","",null,null],[6,"N779","","",null,null],[6,"U780","","",null,null],[6,"P780","","",null,null],[6,"N780","","",null,null],[6,"U781","","",null,null],[6,"P781","","",null,null],[6,"N781","","",null,null],[6,"U782","","",null,null],[6,"P782","","",null,null],[6,"N782","","",null,null],[6,"U783","","",null,null],[6,"P783","","",null,null],[6,"N783","","",null,null],[6,"U784","","",null,null],[6,"P784","","",null,null],[6,"N784","","",null,null],[6,"U785","","",null,null],[6,"P785","","",null,null],[6,"N785","","",null,null],[6,"U786","","",null,null],[6,"P786","","",null,null],[6,"N786","","",null,null],[6,"U787","","",null,null],[6,"P787","","",null,null],[6,"N787","","",null,null],[6,"U788","","",null,null],[6,"P788","","",null,null],[6,"N788","","",null,null],[6,"U789","","",null,null],[6,"P789","","",null,null],[6,"N789","","",null,null],[6,"U790","","",null,null],[6,"P790","","",null,null],[6,"N790","","",null,null],[6,"U791","","",null,null],[6,"P791","","",null,null],[6,"N791","","",null,null],[6,"U792","","",null,null],[6,"P792","","",null,null],[6,"N792","","",null,null],[6,"U793","","",null,null],[6,"P793","","",null,null],[6,"N793","","",null,null],[6,"U794","","",null,null],[6,"P794","","",null,null],[6,"N794","","",null,null],[6,"U795","","",null,null],[6,"P795","","",null,null],[6,"N795","","",null,null],[6,"U796","","",null,null],[6,"P796","","",null,null],[6,"N796","","",null,null],[6,"U797","","",null,null],[6,"P797","","",null,null],[6,"N797","","",null,null],[6,"U798","","",null,null],[6,"P798","","",null,null],[6,"N798","","",null,null],[6,"U799","","",null,null],[6,"P799","","",null,null],[6,"N799","","",null,null],[6,"U800","","",null,null],[6,"P800","","",null,null],[6,"N800","","",null,null],[6,"U801","","",null,null],[6,"P801","","",null,null],[6,"N801","","",null,null],[6,"U802","","",null,null],[6,"P802","","",null,null],[6,"N802","","",null,null],[6,"U803","","",null,null],[6,"P803","","",null,null],[6,"N803","","",null,null],[6,"U804","","",null,null],[6,"P804","","",null,null],[6,"N804","","",null,null],[6,"U805","","",null,null],[6,"P805","","",null,null],[6,"N805","","",null,null],[6,"U806","","",null,null],[6,"P806","","",null,null],[6,"N806","","",null,null],[6,"U807","","",null,null],[6,"P807","","",null,null],[6,"N807","","",null,null],[6,"U808","","",null,null],[6,"P808","","",null,null],[6,"N808","","",null,null],[6,"U809","","",null,null],[6,"P809","","",null,null],[6,"N809","","",null,null],[6,"U810","","",null,null],[6,"P810","","",null,null],[6,"N810","","",null,null],[6,"U811","","",null,null],[6,"P811","","",null,null],[6,"N811","","",null,null],[6,"U812","","",null,null],[6,"P812","","",null,null],[6,"N812","","",null,null],[6,"U813","","",null,null],[6,"P813","","",null,null],[6,"N813","","",null,null],[6,"U814","","",null,null],[6,"P814","","",null,null],[6,"N814","","",null,null],[6,"U815","","",null,null],[6,"P815","","",null,null],[6,"N815","","",null,null],[6,"U816","","",null,null],[6,"P816","","",null,null],[6,"N816","","",null,null],[6,"U817","","",null,null],[6,"P817","","",null,null],[6,"N817","","",null,null],[6,"U818","","",null,null],[6,"P818","","",null,null],[6,"N818","","",null,null],[6,"U819","","",null,null],[6,"P819","","",null,null],[6,"N819","","",null,null],[6,"U820","","",null,null],[6,"P820","","",null,null],[6,"N820","","",null,null],[6,"U821","","",null,null],[6,"P821","","",null,null],[6,"N821","","",null,null],[6,"U822","","",null,null],[6,"P822","","",null,null],[6,"N822","","",null,null],[6,"U823","","",null,null],[6,"P823","","",null,null],[6,"N823","","",null,null],[6,"U824","","",null,null],[6,"P824","","",null,null],[6,"N824","","",null,null],[6,"U825","","",null,null],[6,"P825","","",null,null],[6,"N825","","",null,null],[6,"U826","","",null,null],[6,"P826","","",null,null],[6,"N826","","",null,null],[6,"U827","","",null,null],[6,"P827","","",null,null],[6,"N827","","",null,null],[6,"U828","","",null,null],[6,"P828","","",null,null],[6,"N828","","",null,null],[6,"U829","","",null,null],[6,"P829","","",null,null],[6,"N829","","",null,null],[6,"U830","","",null,null],[6,"P830","","",null,null],[6,"N830","","",null,null],[6,"U831","","",null,null],[6,"P831","","",null,null],[6,"N831","","",null,null],[6,"U832","","",null,null],[6,"P832","","",null,null],[6,"N832","","",null,null],[6,"U833","","",null,null],[6,"P833","","",null,null],[6,"N833","","",null,null],[6,"U834","","",null,null],[6,"P834","","",null,null],[6,"N834","","",null,null],[6,"U835","","",null,null],[6,"P835","","",null,null],[6,"N835","","",null,null],[6,"U836","","",null,null],[6,"P836","","",null,null],[6,"N836","","",null,null],[6,"U837","","",null,null],[6,"P837","","",null,null],[6,"N837","","",null,null],[6,"U838","","",null,null],[6,"P838","","",null,null],[6,"N838","","",null,null],[6,"U839","","",null,null],[6,"P839","","",null,null],[6,"N839","","",null,null],[6,"U840","","",null,null],[6,"P840","","",null,null],[6,"N840","","",null,null],[6,"U841","","",null,null],[6,"P841","","",null,null],[6,"N841","","",null,null],[6,"U842","","",null,null],[6,"P842","","",null,null],[6,"N842","","",null,null],[6,"U843","","",null,null],[6,"P843","","",null,null],[6,"N843","","",null,null],[6,"U844","","",null,null],[6,"P844","","",null,null],[6,"N844","","",null,null],[6,"U845","","",null,null],[6,"P845","","",null,null],[6,"N845","","",null,null],[6,"U846","","",null,null],[6,"P846","","",null,null],[6,"N846","","",null,null],[6,"U847","","",null,null],[6,"P847","","",null,null],[6,"N847","","",null,null],[6,"U848","","",null,null],[6,"P848","","",null,null],[6,"N848","","",null,null],[6,"U849","","",null,null],[6,"P849","","",null,null],[6,"N849","","",null,null],[6,"U850","","",null,null],[6,"P850","","",null,null],[6,"N850","","",null,null],[6,"U851","","",null,null],[6,"P851","","",null,null],[6,"N851","","",null,null],[6,"U852","","",null,null],[6,"P852","","",null,null],[6,"N852","","",null,null],[6,"U853","","",null,null],[6,"P853","","",null,null],[6,"N853","","",null,null],[6,"U854","","",null,null],[6,"P854","","",null,null],[6,"N854","","",null,null],[6,"U855","","",null,null],[6,"P855","","",null,null],[6,"N855","","",null,null],[6,"U856","","",null,null],[6,"P856","","",null,null],[6,"N856","","",null,null],[6,"U857","","",null,null],[6,"P857","","",null,null],[6,"N857","","",null,null],[6,"U858","","",null,null],[6,"P858","","",null,null],[6,"N858","","",null,null],[6,"U859","","",null,null],[6,"P859","","",null,null],[6,"N859","","",null,null],[6,"U860","","",null,null],[6,"P860","","",null,null],[6,"N860","","",null,null],[6,"U861","","",null,null],[6,"P861","","",null,null],[6,"N861","","",null,null],[6,"U862","","",null,null],[6,"P862","","",null,null],[6,"N862","","",null,null],[6,"U863","","",null,null],[6,"P863","","",null,null],[6,"N863","","",null,null],[6,"U864","","",null,null],[6,"P864","","",null,null],[6,"N864","","",null,null],[6,"U865","","",null,null],[6,"P865","","",null,null],[6,"N865","","",null,null],[6,"U866","","",null,null],[6,"P866","","",null,null],[6,"N866","","",null,null],[6,"U867","","",null,null],[6,"P867","","",null,null],[6,"N867","","",null,null],[6,"U868","","",null,null],[6,"P868","","",null,null],[6,"N868","","",null,null],[6,"U869","","",null,null],[6,"P869","","",null,null],[6,"N869","","",null,null],[6,"U870","","",null,null],[6,"P870","","",null,null],[6,"N870","","",null,null],[6,"U871","","",null,null],[6,"P871","","",null,null],[6,"N871","","",null,null],[6,"U872","","",null,null],[6,"P872","","",null,null],[6,"N872","","",null,null],[6,"U873","","",null,null],[6,"P873","","",null,null],[6,"N873","","",null,null],[6,"U874","","",null,null],[6,"P874","","",null,null],[6,"N874","","",null,null],[6,"U875","","",null,null],[6,"P875","","",null,null],[6,"N875","","",null,null],[6,"U876","","",null,null],[6,"P876","","",null,null],[6,"N876","","",null,null],[6,"U877","","",null,null],[6,"P877","","",null,null],[6,"N877","","",null,null],[6,"U878","","",null,null],[6,"P878","","",null,null],[6,"N878","","",null,null],[6,"U879","","",null,null],[6,"P879","","",null,null],[6,"N879","","",null,null],[6,"U880","","",null,null],[6,"P880","","",null,null],[6,"N880","","",null,null],[6,"U881","","",null,null],[6,"P881","","",null,null],[6,"N881","","",null,null],[6,"U882","","",null,null],[6,"P882","","",null,null],[6,"N882","","",null,null],[6,"U883","","",null,null],[6,"P883","","",null,null],[6,"N883","","",null,null],[6,"U884","","",null,null],[6,"P884","","",null,null],[6,"N884","","",null,null],[6,"U885","","",null,null],[6,"P885","","",null,null],[6,"N885","","",null,null],[6,"U886","","",null,null],[6,"P886","","",null,null],[6,"N886","","",null,null],[6,"U887","","",null,null],[6,"P887","","",null,null],[6,"N887","","",null,null],[6,"U888","","",null,null],[6,"P888","","",null,null],[6,"N888","","",null,null],[6,"U889","","",null,null],[6,"P889","","",null,null],[6,"N889","","",null,null],[6,"U890","","",null,null],[6,"P890","","",null,null],[6,"N890","","",null,null],[6,"U891","","",null,null],[6,"P891","","",null,null],[6,"N891","","",null,null],[6,"U892","","",null,null],[6,"P892","","",null,null],[6,"N892","","",null,null],[6,"U893","","",null,null],[6,"P893","","",null,null],[6,"N893","","",null,null],[6,"U894","","",null,null],[6,"P894","","",null,null],[6,"N894","","",null,null],[6,"U895","","",null,null],[6,"P895","","",null,null],[6,"N895","","",null,null],[6,"U896","","",null,null],[6,"P896","","",null,null],[6,"N896","","",null,null],[6,"U897","","",null,null],[6,"P897","","",null,null],[6,"N897","","",null,null],[6,"U898","","",null,null],[6,"P898","","",null,null],[6,"N898","","",null,null],[6,"U899","","",null,null],[6,"P899","","",null,null],[6,"N899","","",null,null],[6,"U900","","",null,null],[6,"P900","","",null,null],[6,"N900","","",null,null],[6,"U901","","",null,null],[6,"P901","","",null,null],[6,"N901","","",null,null],[6,"U902","","",null,null],[6,"P902","","",null,null],[6,"N902","","",null,null],[6,"U903","","",null,null],[6,"P903","","",null,null],[6,"N903","","",null,null],[6,"U904","","",null,null],[6,"P904","","",null,null],[6,"N904","","",null,null],[6,"U905","","",null,null],[6,"P905","","",null,null],[6,"N905","","",null,null],[6,"U906","","",null,null],[6,"P906","","",null,null],[6,"N906","","",null,null],[6,"U907","","",null,null],[6,"P907","","",null,null],[6,"N907","","",null,null],[6,"U908","","",null,null],[6,"P908","","",null,null],[6,"N908","","",null,null],[6,"U909","","",null,null],[6,"P909","","",null,null],[6,"N909","","",null,null],[6,"U910","","",null,null],[6,"P910","","",null,null],[6,"N910","","",null,null],[6,"U911","","",null,null],[6,"P911","","",null,null],[6,"N911","","",null,null],[6,"U912","","",null,null],[6,"P912","","",null,null],[6,"N912","","",null,null],[6,"U913","","",null,null],[6,"P913","","",null,null],[6,"N913","","",null,null],[6,"U914","","",null,null],[6,"P914","","",null,null],[6,"N914","","",null,null],[6,"U915","","",null,null],[6,"P915","","",null,null],[6,"N915","","",null,null],[6,"U916","","",null,null],[6,"P916","","",null,null],[6,"N916","","",null,null],[6,"U917","","",null,null],[6,"P917","","",null,null],[6,"N917","","",null,null],[6,"U918","","",null,null],[6,"P918","","",null,null],[6,"N918","","",null,null],[6,"U919","","",null,null],[6,"P919","","",null,null],[6,"N919","","",null,null],[6,"U920","","",null,null],[6,"P920","","",null,null],[6,"N920","","",null,null],[6,"U921","","",null,null],[6,"P921","","",null,null],[6,"N921","","",null,null],[6,"U922","","",null,null],[6,"P922","","",null,null],[6,"N922","","",null,null],[6,"U923","","",null,null],[6,"P923","","",null,null],[6,"N923","","",null,null],[6,"U924","","",null,null],[6,"P924","","",null,null],[6,"N924","","",null,null],[6,"U925","","",null,null],[6,"P925","","",null,null],[6,"N925","","",null,null],[6,"U926","","",null,null],[6,"P926","","",null,null],[6,"N926","","",null,null],[6,"U927","","",null,null],[6,"P927","","",null,null],[6,"N927","","",null,null],[6,"U928","","",null,null],[6,"P928","","",null,null],[6,"N928","","",null,null],[6,"U929","","",null,null],[6,"P929","","",null,null],[6,"N929","","",null,null],[6,"U930","","",null,null],[6,"P930","","",null,null],[6,"N930","","",null,null],[6,"U931","","",null,null],[6,"P931","","",null,null],[6,"N931","","",null,null],[6,"U932","","",null,null],[6,"P932","","",null,null],[6,"N932","","",null,null],[6,"U933","","",null,null],[6,"P933","","",null,null],[6,"N933","","",null,null],[6,"U934","","",null,null],[6,"P934","","",null,null],[6,"N934","","",null,null],[6,"U935","","",null,null],[6,"P935","","",null,null],[6,"N935","","",null,null],[6,"U936","","",null,null],[6,"P936","","",null,null],[6,"N936","","",null,null],[6,"U937","","",null,null],[6,"P937","","",null,null],[6,"N937","","",null,null],[6,"U938","","",null,null],[6,"P938","","",null,null],[6,"N938","","",null,null],[6,"U939","","",null,null],[6,"P939","","",null,null],[6,"N939","","",null,null],[6,"U940","","",null,null],[6,"P940","","",null,null],[6,"N940","","",null,null],[6,"U941","","",null,null],[6,"P941","","",null,null],[6,"N941","","",null,null],[6,"U942","","",null,null],[6,"P942","","",null,null],[6,"N942","","",null,null],[6,"U943","","",null,null],[6,"P943","","",null,null],[6,"N943","","",null,null],[6,"U944","","",null,null],[6,"P944","","",null,null],[6,"N944","","",null,null],[6,"U945","","",null,null],[6,"P945","","",null,null],[6,"N945","","",null,null],[6,"U946","","",null,null],[6,"P946","","",null,null],[6,"N946","","",null,null],[6,"U947","","",null,null],[6,"P947","","",null,null],[6,"N947","","",null,null],[6,"U948","","",null,null],[6,"P948","","",null,null],[6,"N948","","",null,null],[6,"U949","","",null,null],[6,"P949","","",null,null],[6,"N949","","",null,null],[6,"U950","","",null,null],[6,"P950","","",null,null],[6,"N950","","",null,null],[6,"U951","","",null,null],[6,"P951","","",null,null],[6,"N951","","",null,null],[6,"U952","","",null,null],[6,"P952","","",null,null],[6,"N952","","",null,null],[6,"U953","","",null,null],[6,"P953","","",null,null],[6,"N953","","",null,null],[6,"U954","","",null,null],[6,"P954","","",null,null],[6,"N954","","",null,null],[6,"U955","","",null,null],[6,"P955","","",null,null],[6,"N955","","",null,null],[6,"U956","","",null,null],[6,"P956","","",null,null],[6,"N956","","",null,null],[6,"U957","","",null,null],[6,"P957","","",null,null],[6,"N957","","",null,null],[6,"U958","","",null,null],[6,"P958","","",null,null],[6,"N958","","",null,null],[6,"U959","","",null,null],[6,"P959","","",null,null],[6,"N959","","",null,null],[6,"U960","","",null,null],[6,"P960","","",null,null],[6,"N960","","",null,null],[6,"U961","","",null,null],[6,"P961","","",null,null],[6,"N961","","",null,null],[6,"U962","","",null,null],[6,"P962","","",null,null],[6,"N962","","",null,null],[6,"U963","","",null,null],[6,"P963","","",null,null],[6,"N963","","",null,null],[6,"U964","","",null,null],[6,"P964","","",null,null],[6,"N964","","",null,null],[6,"U965","","",null,null],[6,"P965","","",null,null],[6,"N965","","",null,null],[6,"U966","","",null,null],[6,"P966","","",null,null],[6,"N966","","",null,null],[6,"U967","","",null,null],[6,"P967","","",null,null],[6,"N967","","",null,null],[6,"U968","","",null,null],[6,"P968","","",null,null],[6,"N968","","",null,null],[6,"U969","","",null,null],[6,"P969","","",null,null],[6,"N969","","",null,null],[6,"U970","","",null,null],[6,"P970","","",null,null],[6,"N970","","",null,null],[6,"U971","","",null,null],[6,"P971","","",null,null],[6,"N971","","",null,null],[6,"U972","","",null,null],[6,"P972","","",null,null],[6,"N972","","",null,null],[6,"U973","","",null,null],[6,"P973","","",null,null],[6,"N973","","",null,null],[6,"U974","","",null,null],[6,"P974","","",null,null],[6,"N974","","",null,null],[6,"U975","","",null,null],[6,"P975","","",null,null],[6,"N975","","",null,null],[6,"U976","","",null,null],[6,"P976","","",null,null],[6,"N976","","",null,null],[6,"U977","","",null,null],[6,"P977","","",null,null],[6,"N977","","",null,null],[6,"U978","","",null,null],[6,"P978","","",null,null],[6,"N978","","",null,null],[6,"U979","","",null,null],[6,"P979","","",null,null],[6,"N979","","",null,null],[6,"U980","","",null,null],[6,"P980","","",null,null],[6,"N980","","",null,null],[6,"U981","","",null,null],[6,"P981","","",null,null],[6,"N981","","",null,null],[6,"U982","","",null,null],[6,"P982","","",null,null],[6,"N982","","",null,null],[6,"U983","","",null,null],[6,"P983","","",null,null],[6,"N983","","",null,null],[6,"U984","","",null,null],[6,"P984","","",null,null],[6,"N984","","",null,null],[6,"U985","","",null,null],[6,"P985","","",null,null],[6,"N985","","",null,null],[6,"U986","","",null,null],[6,"P986","","",null,null],[6,"N986","","",null,null],[6,"U987","","",null,null],[6,"P987","","",null,null],[6,"N987","","",null,null],[6,"U988","","",null,null],[6,"P988","","",null,null],[6,"N988","","",null,null],[6,"U989","","",null,null],[6,"P989","","",null,null],[6,"N989","","",null,null],[6,"U990","","",null,null],[6,"P990","","",null,null],[6,"N990","","",null,null],[6,"U991","","",null,null],[6,"P991","","",null,null],[6,"N991","","",null,null],[6,"U992","","",null,null],[6,"P992","","",null,null],[6,"N992","","",null,null],[6,"U993","","",null,null],[6,"P993","","",null,null],[6,"N993","","",null,null],[6,"U994","","",null,null],[6,"P994","","",null,null],[6,"N994","","",null,null],[6,"U995","","",null,null],[6,"P995","","",null,null],[6,"N995","","",null,null],[6,"U996","","",null,null],[6,"P996","","",null,null],[6,"N996","","",null,null],[6,"U997","","",null,null],[6,"P997","","",null,null],[6,"N997","","",null,null],[6,"U998","","",null,null],[6,"P998","","",null,null],[6,"N998","","",null,null],[6,"U999","","",null,null],[6,"P999","","",null,null],[6,"N999","","",null,null],[6,"U1000","","",null,null],[6,"P1000","","",null,null],[6,"N1000","","",null,null],[6,"U1001","","",null,null],[6,"P1001","","",null,null],[6,"N1001","","",null,null],[6,"U1002","","",null,null],[6,"P1002","","",null,null],[6,"N1002","","",null,null],[6,"U1003","","",null,null],[6,"P1003","","",null,null],[6,"N1003","","",null,null],[6,"U1004","","",null,null],[6,"P1004","","",null,null],[6,"N1004","","",null,null],[6,"U1005","","",null,null],[6,"P1005","","",null,null],[6,"N1005","","",null,null],[6,"U1006","","",null,null],[6,"P1006","","",null,null],[6,"N1006","","",null,null],[6,"U1007","","",null,null],[6,"P1007","","",null,null],[6,"N1007","","",null,null],[6,"U1008","","",null,null],[6,"P1008","","",null,null],[6,"N1008","","",null,null],[6,"U1009","","",null,null],[6,"P1009","","",null,null],[6,"N1009","","",null,null],[6,"U1010","","",null,null],[6,"P1010","","",null,null],[6,"N1010","","",null,null],[6,"U1011","","",null,null],[6,"P1011","","",null,null],[6,"N1011","","",null,null],[6,"U1012","","",null,null],[6,"P1012","","",null,null],[6,"N1012","","",null,null],[6,"U1013","","",null,null],[6,"P1013","","",null,null],[6,"N1013","","",null,null],[6,"U1014","","",null,null],[6,"P1014","","",null,null],[6,"N1014","","",null,null],[6,"U1015","","",null,null],[6,"P1015","","",null,null],[6,"N1015","","",null,null],[6,"U1016","","",null,null],[6,"P1016","","",null,null],[6,"N1016","","",null,null],[6,"U1017","","",null,null],[6,"P1017","","",null,null],[6,"N1017","","",null,null],[6,"U1018","","",null,null],[6,"P1018","","",null,null],[6,"N1018","","",null,null],[6,"U1019","","",null,null],[6,"P1019","","",null,null],[6,"N1019","","",null,null],[6,"U1020","","",null,null],[6,"P1020","","",null,null],[6,"N1020","","",null,null],[6,"U1021","","",null,null],[6,"P1021","","",null,null],[6,"N1021","","",null,null],[6,"U1022","","",null,null],[6,"P1022","","",null,null],[6,"N1022","","",null,null],[6,"U1023","","",null,null],[6,"P1023","","",null,null],[6,"N1023","","",null,null],[6,"U1024","","",null,null],[6,"P1024","","",null,null],[6,"N1024","","",null,null],[6,"U2048","","",null,null],[6,"P2048","","",null,null],[6,"N2048","","",null,null],[6,"U4096","","",null,null],[6,"P4096","","",null,null],[6,"N4096","","",null,null],[6,"U8192","","",null,null],[6,"P8192","","",null,null],[6,"N8192","","",null,null],[6,"U16384","","",null,null],[6,"P16384","","",null,null],[6,"N16384","","",null,null],[6,"U32768","","",null,null],[6,"P32768","","",null,null],[6,"N32768","","",null,null],[6,"U65536","","",null,null],[6,"P65536","","",null,null],[6,"N65536","","",null,null],[6,"U131072","","",null,null],[6,"P131072","","",null,null],[6,"N131072","","",null,null],[6,"U262144","","",null,null],[6,"P262144","","",null,null],[6,"N262144","","",null,null],[6,"U524288","","",null,null],[6,"P524288","","",null,null],[6,"N524288","","",null,null],[6,"U1048576","","",null,null],[6,"P1048576","","",null,null],[6,"N1048576","","",null,null],[6,"U2097152","","",null,null],[6,"P2097152","","",null,null],[6,"N2097152","","",null,null],[6,"U4194304","","",null,null],[6,"P4194304","","",null,null],[6,"N4194304","","",null,null],[6,"U8388608","","",null,null],[6,"P8388608","","",null,null],[6,"N8388608","","",null,null],[6,"U16777216","","",null,null],[6,"P16777216","","",null,null],[6,"N16777216","","",null,null],[6,"U33554432","","",null,null],[6,"P33554432","","",null,null],[6,"N33554432","","",null,null],[6,"U67108864","","",null,null],[6,"P67108864","","",null,null],[6,"N67108864","","",null,null],[6,"U134217728","","",null,null],[6,"P134217728","","",null,null],[6,"N134217728","","",null,null],[6,"U268435456","","",null,null],[6,"P268435456","","",null,null],[6,"N268435456","","",null,null],[6,"U536870912","","",null,null],[6,"P536870912","","",null,null],[6,"N536870912","","",null,null],[6,"U1073741824","","",null,null],[6,"P1073741824","","",null,null],[6,"N1073741824","","",null,null],[6,"U2147483648","","",null,null],[6,"P2147483648","","",null,null],[6,"N2147483648","","",null,null],[6,"U4294967296","","",null,null],[6,"P4294967296","","",null,null],[6,"N4294967296","","",null,null],[6,"U8589934592","","",null,null],[6,"P8589934592","","",null,null],[6,"N8589934592","","",null,null],[6,"U17179869184","","",null,null],[6,"P17179869184","","",null,null],[6,"N17179869184","","",null,null],[6,"U34359738368","","",null,null],[6,"P34359738368","","",null,null],[6,"N34359738368","","",null,null],[6,"U68719476736","","",null,null],[6,"P68719476736","","",null,null],[6,"N68719476736","","",null,null],[6,"U137438953472","","",null,null],[6,"P137438953472","","",null,null],[6,"N137438953472","","",null,null],[6,"U274877906944","","",null,null],[6,"P274877906944","","",null,null],[6,"N274877906944","","",null,null],[6,"U549755813888","","",null,null],[6,"P549755813888","","",null,null],[6,"N549755813888","","",null,null],[6,"U1099511627776","","",null,null],[6,"P1099511627776","","",null,null],[6,"N1099511627776","","",null,null],[6,"U2199023255552","","",null,null],[6,"P2199023255552","","",null,null],[6,"N2199023255552","","",null,null],[6,"U4398046511104","","",null,null],[6,"P4398046511104","","",null,null],[6,"N4398046511104","","",null,null],[6,"U8796093022208","","",null,null],[6,"P8796093022208","","",null,null],[6,"N8796093022208","","",null,null],[6,"U17592186044416","","",null,null],[6,"P17592186044416","","",null,null],[6,"N17592186044416","","",null,null],[6,"U35184372088832","","",null,null],[6,"P35184372088832","","",null,null],[6,"N35184372088832","","",null,null],[6,"U70368744177664","","",null,null],[6,"P70368744177664","","",null,null],[6,"N70368744177664","","",null,null],[6,"U140737488355328","","",null,null],[6,"P140737488355328","","",null,null],[6,"N140737488355328","","",null,null],[6,"U281474976710656","","",null,null],[6,"P281474976710656","","",null,null],[6,"N281474976710656","","",null,null],[6,"U562949953421312","","",null,null],[6,"P562949953421312","","",null,null],[6,"N562949953421312","","",null,null],[6,"U1125899906842624","","",null,null],[6,"P1125899906842624","","",null,null],[6,"N1125899906842624","","",null,null],[6,"U2251799813685248","","",null,null],[6,"P2251799813685248","","",null,null],[6,"N2251799813685248","","",null,null],[6,"U4503599627370496","","",null,null],[6,"P4503599627370496","","",null,null],[6,"N4503599627370496","","",null,null],[6,"U9007199254740992","","",null,null],[6,"P9007199254740992","","",null,null],[6,"N9007199254740992","","",null,null],[6,"U18014398509481984","","",null,null],[6,"P18014398509481984","","",null,null],[6,"N18014398509481984","","",null,null],[6,"U36028797018963968","","",null,null],[6,"P36028797018963968","","",null,null],[6,"N36028797018963968","","",null,null],[6,"U72057594037927936","","",null,null],[6,"P72057594037927936","","",null,null],[6,"N72057594037927936","","",null,null],[6,"U144115188075855872","","",null,null],[6,"P144115188075855872","","",null,null],[6,"N144115188075855872","","",null,null],[6,"U288230376151711744","","",null,null],[6,"P288230376151711744","","",null,null],[6,"N288230376151711744","","",null,null],[6,"U576460752303423488","","",null,null],[6,"P576460752303423488","","",null,null],[6,"N576460752303423488","","",null,null],[6,"U1152921504606846976","","",null,null],[6,"P1152921504606846976","","",null,null],[6,"N1152921504606846976","","",null,null],[6,"U2305843009213693952","","",null,null],[6,"P2305843009213693952","","",null,null],[6,"N2305843009213693952","","",null,null],[6,"U4611686018427387904","","",null,null],[6,"P4611686018427387904","","",null,null],[6,"N4611686018427387904","","",null,null],[6,"U9223372036854775808","","",null,null],[6,"U10000","","",null,null],[6,"P10000","","",null,null],[6,"N10000","","",null,null],[6,"U100000","","",null,null],[6,"P100000","","",null,null],[6,"N100000","","",null,null],[6,"U1000000","","",null,null],[6,"P1000000","","",null,null],[6,"N1000000","","",null,null],[6,"U10000000","","",null,null],[6,"P10000000","","",null,null],[6,"N10000000","","",null,null],[6,"U100000000","","",null,null],[6,"P100000000","","",null,null],[6,"N100000000","","",null,null],[6,"U1000000000","","",null,null],[6,"P1000000000","","",null,null],[6,"N1000000000","","",null,null],[6,"U10000000000","","",null,null],[6,"P10000000000","","",null,null],[6,"N10000000000","","",null,null],[6,"U100000000000","","",null,null],[6,"P100000000000","","",null,null],[6,"N100000000000","","",null,null],[6,"U1000000000000","","",null,null],[6,"P1000000000000","","",null,null],[6,"N1000000000000","","",null,null],[6,"U10000000000000","","",null,null],[6,"P10000000000000","","",null,null],[6,"N10000000000000","","",null,null],[6,"U100000000000000","","",null,null],[6,"P100000000000000","","",null,null],[6,"N100000000000000","","",null,null],[6,"U1000000000000000","","",null,null],[6,"P1000000000000000","","",null,null],[6,"N1000000000000000","","",null,null],[6,"U10000000000000000","","",null,null],[6,"P10000000000000000","","",null,null],[6,"N10000000000000000","","",null,null],[6,"U100000000000000000","","",null,null],[6,"P100000000000000000","","",null,null],[6,"N100000000000000000","","",null,null],[6,"U1000000000000000000","","",null,null],[6,"P1000000000000000000","","",null,null],[6,"N1000000000000000000","","",null,null],[6,"U10000000000000000000","","",null,null],[0,"bit","typenum","Type-level bits.",null,null],[3,"B0","typenum::bit","The type-level bit 0.",null,null],[3,"B1","","The type-level bit 1.",null,null],[11,"new","","Instantiates a singleton representing this bit.",0,[[],["b0"]]],[11,"new","","Instantiates a singleton representing this bit.",1,[[],["b1"]]],[0,"int","typenum","Type-level signed integers.",null,null],[3,"PInt","typenum::int","Type-level signed integers with positive sign.",null,null],[3,"NInt","","Type-level signed integers with negative sign.",null,null],[3,"Z0","","The type-level signed integer 0.",null,null],[11,"new","","Instantiates a singleton representing this strictly…",2,[[],["pint"]]],[11,"new","","Instantiates a singleton representing this strictly…",3,[[],["nint"]]],[11,"new","","Instantiates a singleton representing the integer 0.",4,[[],["z0"]]],[0,"marker_traits","typenum","All of the marker traits used in typenum.",null,null],[8,"NonZero","typenum::marker_traits","A marker trait to designate that a type is not zero. All…",null,null],[8,"Ord","","A Marker trait for the types `Greater`, `Equal`, and `Less`.",null,null],[10,"to_ordering","","",5,[[],["ordering"]]],[8,"Bit","","The marker trait for compile time bits.",null,null],[18,"U8","","",6,null],[18,"BOOL","","",6,null],[10,"to_u8","","",6,[[],["u8"]]],[10,"to_bool","","",6,[[],["bool"]]],[8,"Unsigned","","The marker trait for compile time unsigned integers.",null,null],[18,"U8","","",7,null],[18,"U16","","",7,null],[18,"U32","","",7,null],[18,"U64","","",7,null],[18,"USIZE","","",7,null],[18,"I8","","",7,null],[18,"I16","","",7,null],[18,"I32","","",7,null],[18,"I64","","",7,null],[18,"ISIZE","","",7,null],[10,"to_u8","","",7,[[],["u8"]]],[10,"to_u16","","",7,[[],["u16"]]],[10,"to_u32","","",7,[[],["u32"]]],[10,"to_u64","","",7,[[],["u64"]]],[10,"to_usize","","",7,[[],["usize"]]],[10,"to_i8","","",7,[[],["i8"]]],[10,"to_i16","","",7,[[],["i16"]]],[10,"to_i32","","",7,[[],["i32"]]],[10,"to_i64","","",7,[[],["i64"]]],[10,"to_isize","","",7,[[],["isize"]]],[8,"Integer","","The marker trait for compile time signed integers.",null,null],[18,"I8","","",8,null],[18,"I16","","",8,null],[18,"I32","","",8,null],[18,"I64","","",8,null],[18,"ISIZE","","",8,null],[10,"to_i8","","",8,[[],["i8"]]],[10,"to_i16","","",8,[[],["i16"]]],[10,"to_i32","","",8,[[],["i32"]]],[10,"to_i64","","",8,[[],["i64"]]],[10,"to_isize","","",8,[[],["isize"]]],[8,"TypeArray","","The marker trait for type-level arrays of type-level…",null,null],[8,"PowerOfTwo","","The marker trait for type-level numbers which are a power…",null,null],[0,"operator_aliases","typenum","Aliases for the type operators used in this crate. Their…",null,null],[6,"And","typenum::operator_aliases","Alias for the associated type of `BitAnd`: `And<A, B> = <A…",null,null],[6,"Or","","Alias for the associated type of `BitOr`: `Or<A, B> = <A…",null,null],[6,"Xor","","Alias for the associated type of `BitXor`: `Xor<A, B> = <A…",null,null],[6,"Shleft","","Alias for the associated type of `Shl`: `Shleft<A, B> = <A…",null,null],[6,"Shright","","Alias for the associated type of `Shr`: `Shright<A, B> =…",null,null],[6,"Sum","","Alias for the associated type of `Add`: `Sum<A, B> = <A as…",null,null],[6,"Diff","","Alias for the associated type of `Sub`: `Diff<A, B> = <A…",null,null],[6,"Prod","","Alias for the associated type of `Mul`: `Prod<A, B> = <A…",null,null],[6,"Quot","","Alias for the associated type of `Div`: `Quot<A, B> = <A…",null,null],[6,"Mod","","Alias for the associated type of `Rem`: `Mod<A, B> = <A as…",null,null],[6,"PartialQuot","","Alias for the associated type of `PartialDiv`:…",null,null],[6,"Negate","","Alias for the associated type of `Neg`: `Negate<A> = <A as…",null,null],[6,"AbsVal","","Alias for the associated type of `Abs`: `AbsVal<A> = <A as…",null,null],[6,"Exp","","Alias for the associated type of `Pow`: `Exp<A, B> = <A as…",null,null],[6,"Add1","","Alias to make it easy to add 1: `Add1<A> = <A as…",null,null],[6,"Sub1","","Alias to make it easy to subtract 1: `Sub1<A> = <A as…",null,null],[6,"Double","","Alias to make it easy to multiply by 2. `Double<A> =…",null,null],[6,"Square","","Alias to make it easy to square. `Square<A> = <A as…",null,null],[6,"Cube","","Alias to make it easy to cube. `Cube<A> = <Square<A> as…",null,null],[6,"Sqrt","","Alias for the associated type of `SquareRoot`: `Sqrt<A> =…",null,null],[6,"Compare","","Alias for the associated type of `Cmp`: `Compare<A, B> =…",null,null],[6,"Length","","Alias for the associated type of `Len`: `Length<A> = <A as…",null,null],[6,"Minimum","","Alias for the associated type of `Min`: `Minimum<A, B> =…",null,null],[6,"Maximum","","Alias for the associated type of `Max`: `Maximum<A, B> =…",null,null],[6,"Le","","Alias for the associated type of `IsLess`: `Le<A, B> = <A…",null,null],[6,"Eq","","Alias for the associated type of `IsEqual`: `Eq<A, B> = <A…",null,null],[6,"Gr","","Alias for the associated type of `IsGreater`: `Gr<A, B> =…",null,null],[6,"GrEq","","Alias for the associated type of `IsGreaterOrEqual`:…",null,null],[6,"LeEq","","Alias for the associated type of `IsLessOrEqual`: `LeEq<A,…",null,null],[6,"NotEq","","Alias for the associated type of `IsNotEqual`: `NotEq<A,…",null,null],[6,"Log2","","Alias for the associated type of `Logarithm2`: `Log2<A> =…",null,null],[0,"type_operators","typenum","Useful type operators that are not defined in `core::ops`.",null,null],[8,"Same","typenum::type_operators","A type operator that ensures that `Rhs` is the same as…",null,null],[16,"Output","","Should always be `Self`",9,null],[8,"Abs","","A type operator that returns the absolute value.",null,null],[16,"Output","","The absolute value.",10,null],[8,"Pow","","A type operator that provides exponentiation by repeated…",null,null],[16,"Output","","The result of the exponentiation.",11,null],[10,"powi","","This function isn't used in this crate, but may be useful…",11,[[["exp"]]]],[8,"Cmp","","A type operator for comparing `Self` and `Rhs`. It…",null,null],[16,"Output","","The result of the comparison. It should only ever be one…",12,null],[8,"Len","","A type operator that gives the length of an `Array` or the…",null,null],[16,"Output","","The length as a type-level unsigned integer.",13,null],[10,"len","","This function isn't used in this crate, but may be useful…",13,[[["self"]]]],[8,"PartialDiv","","Division as a partial function. This type operator…",null,null],[16,"Output","","The type of the result of the division",14,null],[10,"partial_div","","Method for performing the division",14,[[["rhs"]]]],[8,"Min","","A type operator that returns the minimum of `Self` and…",null,null],[16,"Output","","The type of the minimum of `Self` and `Rhs`",15,null],[10,"min","","Method returning the minimum",15,[[["rhs"]]]],[8,"Max","","A type operator that returns the maximum of `Self` and…",null,null],[16,"Output","","The type of the maximum of `Self` and `Rhs`",16,null],[10,"max","","Method returning the maximum",16,[[["rhs"]]]],[8,"IsLess","","A type operator that returns `True` if `Self < Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",17,null],[10,"is_less","","Method returning `True` or `False`.",17,[[["rhs"]]]],[8,"IsEqual","","A type operator that returns `True` if `Self == Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",18,null],[10,"is_equal","","Method returning `True` or `False`.",18,[[["rhs"]]]],[8,"IsGreater","","A type operator that returns `True` if `Self > Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",19,null],[10,"is_greater","","Method returning `True` or `False`.",19,[[["rhs"]]]],[8,"IsLessOrEqual","","A type operator that returns `True` if `Self <= Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",20,null],[10,"is_less_or_equal","","Method returning `True` or `False`.",20,[[["rhs"]]]],[8,"IsNotEqual","","A type operator that returns `True` if `Self != Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",21,null],[10,"is_not_equal","","Method returning `True` or `False`.",21,[[["rhs"]]]],[8,"IsGreaterOrEqual","","A type operator that returns `True` if `Self >= Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",22,null],[10,"is_greater_or_equal","","Method returning `True` or `False`.",22,[[["rhs"]]]],[8,"SquareRoot","","A type operator for taking the integer square root of…",null,null],[16,"Output","","The result of the integer square root.",23,null],[8,"Logarithm2","","A type operator for taking the integer binary logarithm of…",null,null],[16,"Output","","The result of the integer binary logarithm.",24,null],[0,"uint","typenum","Type-level unsigned integers.",null,null],[3,"UTerm","typenum::uint","The terminating type for `UInt`; it always comes after the…",null,null],[3,"UInt","","`UInt` is defined recursively, where `B` is the least…",null,null],[6,"GetBitOut","","",null,null],[6,"SetBitOut","","Alias for the result of calling `SetBit`: `SetBitOut<N, I,…",null,null],[8,"GetBit","","",null,null],[16,"Output","","",25,null],[8,"SetBit","","A type operator that, when implemented for unsigned…",null,null],[16,"Output","","",26,null],[11,"new","","Instantiates a singleton representing this unsigned integer.",27,[[],["uterm"]]],[11,"new","","Instantiates a singleton representing this unsigned integer.",28,[[],["uint"]]],[0,"array","typenum","A type-level array of type-level numbers.",null,null],[3,"ATerm","typenum::array","The terminating type for type arrays.",null,null],[3,"TArr","","`TArr` is a type that acts as an array of types. It is…",null,null],[14,"op","typenum","Convenient type operations.",null,null],[14,"cmp","","A convenience macro for comparing type numbers. Use `op!`…",null,null],[14,"tarr","","Create a new type-level arrray. Only usable on Rust 1.13.0…",null,null],[14,"assert_type_eq","","Asserts that two types are the same.",null,null],[14,"assert_type","","Asserts that a type is `True`, aka `B1`.",null,null],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"is_less","typenum::bit","",0,[[["b"]]]],[11,"is_equal","","",0,[[["b"]]]],[11,"is_greater","","",0,[[["b"]]]],[11,"is_less_or_equal","","",0,[[["b"]]]],[11,"is_not_equal","","",0,[[["b"]]]],[11,"is_greater_or_equal","","",0,[[["b"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"is_less","","",1,[[["b"]]]],[11,"is_equal","","",1,[[["b"]]]],[11,"is_greater","","",1,[[["b"]]]],[11,"is_less_or_equal","","",1,[[["b"]]]],[11,"is_not_equal","","",1,[[["b"]]]],[11,"is_greater_or_equal","","",1,[[["b"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"powi","typenum::int","",2,[[["n"]]]],[11,"partial_div","","",2,[[["n"]]]],[11,"is_less","","",2,[[["b"]]]],[11,"is_equal","","",2,[[["b"]]]],[11,"is_greater","","",2,[[["b"]]]],[11,"is_less_or_equal","","",2,[[["b"]]]],[11,"is_not_equal","","",2,[[["b"]]]],[11,"is_greater_or_equal","","",2,[[["b"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"powi","","",3,[[["n"]]]],[11,"partial_div","","",3,[[["n"]]]],[11,"is_less","","",3,[[["b"]]]],[11,"is_equal","","",3,[[["b"]]]],[11,"is_greater","","",3,[[["b"]]]],[11,"is_less_or_equal","","",3,[[["b"]]]],[11,"is_not_equal","","",3,[[["b"]]]],[11,"is_greater_or_equal","","",3,[[["b"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"powi","","",4,[[["n"]]]],[11,"partial_div","","",4,[[["n"]]]],[11,"is_less","","",4,[[["b"]]]],[11,"is_equal","","",4,[[["b"]]]],[11,"is_greater","","",4,[[["b"]]]],[11,"is_less_or_equal","","",4,[[["b"]]]],[11,"is_not_equal","","",4,[[["b"]]]],[11,"is_greater_or_equal","","",4,[[["b"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"powi","typenum::uint","",27,[[["n"]]]],[11,"partial_div","","",27,[[["n"]]]],[11,"is_less","","",27,[[["b"]]]],[11,"is_equal","","",27,[[["b"]]]],[11,"is_greater","","",27,[[["b"]]]],[11,"is_less_or_equal","","",27,[[["b"]]]],[11,"is_not_equal","","",27,[[["b"]]]],[11,"is_greater_or_equal","","",27,[[["b"]]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"powi","","",28,[[["n"]]]],[11,"partial_div","","",28,[[["n"]]]],[11,"is_less","","",28,[[["b"]]]],[11,"is_equal","","",28,[[["b"]]]],[11,"is_greater","","",28,[[["b"]]]],[11,"is_less_or_equal","","",28,[[["b"]]]],[11,"is_not_equal","","",28,[[["b"]]]],[11,"is_greater_or_equal","","",28,[[["b"]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"partial_div","typenum::array","",32,[[["n"]]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"partial_div","","",33,[[["n"]]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"to_ordering","typenum","",29,[[],["ordering"]]],[11,"to_ordering","","",30,[[],["ordering"]]],[11,"to_ordering","","",31,[[],["ordering"]]],[11,"to_u8","typenum::bit","",0,[[],["u8"]]],[11,"to_bool","","",0,[[],["bool"]]],[11,"to_u8","","",1,[[],["u8"]]],[11,"to_bool","","",1,[[],["bool"]]],[11,"to_u8","typenum::uint","",27,[[],["u8"]]],[11,"to_u16","","",27,[[],["u16"]]],[11,"to_u32","","",27,[[],["u32"]]],[11,"to_u64","","",27,[[],["u64"]]],[11,"to_usize","","",27,[[],["usize"]]],[11,"to_i8","","",27,[[],["i8"]]],[11,"to_i16","","",27,[[],["i16"]]],[11,"to_i32","","",27,[[],["i32"]]],[11,"to_i64","","",27,[[],["i64"]]],[11,"to_isize","","",27,[[],["isize"]]],[11,"to_u8","","",28,[[],["u8"]]],[11,"to_u16","","",28,[[],["u16"]]],[11,"to_u32","","",28,[[],["u32"]]],[11,"to_u64","","",28,[[],["u64"]]],[11,"to_usize","","",28,[[],["usize"]]],[11,"to_i8","","",28,[[],["i8"]]],[11,"to_i16","","",28,[[],["i16"]]],[11,"to_i32","","",28,[[],["i32"]]],[11,"to_i64","","",28,[[],["i64"]]],[11,"to_isize","","",28,[[],["isize"]]],[11,"to_i8","typenum::int","",4,[[],["i8"]]],[11,"to_i16","","",4,[[],["i16"]]],[11,"to_i32","","",4,[[],["i32"]]],[11,"to_i64","","",4,[[],["i64"]]],[11,"to_isize","","",4,[[],["isize"]]],[11,"to_i8","","",2,[[],["i8"]]],[11,"to_i16","","",2,[[],["i16"]]],[11,"to_i32","","",2,[[],["i32"]]],[11,"to_i64","","",2,[[],["i64"]]],[11,"to_isize","","",2,[[],["isize"]]],[11,"to_i8","","",3,[[],["i8"]]],[11,"to_i16","","",3,[[],["i16"]]],[11,"to_i32","","",3,[[],["i32"]]],[11,"to_i64","","",3,[[],["i64"]]],[11,"to_isize","","",3,[[],["isize"]]],[11,"powi","","",4,[[["z0"]]]],[11,"powi","","",4,[[["pint"]]]],[11,"powi","","",4,[[["nint"]]]],[11,"powi","typenum","",34,[[["nint"]]]],[11,"powi","","",35,[[["nint",["uint"]],["uint",["b0"]]]]],[11,"powi","","",35,[[["nint",["uint"]],["uint",["b1"]]]]],[11,"powi","typenum::int","",2,[[["z0"]]]],[11,"powi","","",3,[[["z0"]]]],[11,"powi","","",2,[[["pint"]]]],[11,"powi","","",3,[[["uint",["b0"]],["pint",["uint"]]]]],[11,"powi","","",3,[[["pint",["uint"]],["uint",["b1"]]]]],[11,"len","typenum::uint","",27,[[["self"]]]],[11,"len","","",28,[[["self"]]]],[11,"len","typenum::array","",32,[[["self"]]]],[11,"len","","",33,[[["self"]]]],[11,"partial_div","typenum::uint","",27,[[["uint"]]]],[11,"partial_div","","",28,[[["uint"]]]],[11,"partial_div","typenum::array","",32,[[["rhs"]]]],[11,"partial_div","","",33,[[["rhs"]]]],[11,"min","typenum::bit","",0,[[["b0"]],["b0"]]],[11,"min","","",0,[[["b1"]],["b0"]]],[11,"min","","",1,[[["b0"]],["b0"]]],[11,"min","","",1,[[["b1"]],["b1"]]],[11,"min","typenum::int","",4,[[["z0"]]]],[11,"min","","",4,[[["pint"]]]],[11,"min","","",4,[[["nint"]]]],[11,"min","","",2,[[["z0"]]]],[11,"min","","",3,[[["z0"]]]],[11,"min","","",2,[[["pint"]]]],[11,"min","","",3,[[["pint"]]]],[11,"min","","",2,[[["nint"]]]],[11,"min","","",3,[[["nint"]]]],[11,"min","typenum::uint","",27,[[["u"]]]],[11,"min","","",28,[[["ur"]]]],[11,"max","typenum::bit","",0,[[["b0"]],["b0"]]],[11,"max","","",0,[[["b1"]],["b1"]]],[11,"max","","",1,[[["b0"]],["b1"]]],[11,"max","","",1,[[["b1"]],["b1"]]],[11,"max","typenum::int","",4,[[["z0"]]]],[11,"max","","",4,[[["pint"]]]],[11,"max","","",4,[[["nint"]]]],[11,"max","","",2,[[["z0"]]]],[11,"max","","",3,[[["z0"]]]],[11,"max","","",2,[[["pint"]]]],[11,"max","","",3,[[["pint"]]]],[11,"max","","",2,[[["nint"]]]],[11,"max","","",3,[[["nint"]]]],[11,"max","typenum::uint","",27,[[["u"]]]],[11,"max","","",28,[[["ur"]]]],[11,"fmt","typenum::bit","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","typenum::int","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","typenum::uint","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","typenum::array","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","typenum","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"div","typenum::int","",4,[[["i"]]]],[11,"div","","",2,[[["pint"]]]],[11,"div","","",2,[[["nint"]]]],[11,"div","","",3,[[["pint"]]]],[11,"div","","",3,[[["nint"]]]],[11,"div","typenum::uint","",27,[[["uint"]]]],[11,"div","","",28,[[["uint"]]]],[11,"div","typenum::array","",32,[[["rhs"]]]],[11,"div","","",33,[[["rhs"]]]],[11,"rem","typenum::int","",4,[[["i"]]]],[11,"rem","","",2,[[["pint"]]]],[11,"rem","","",2,[[["nint"]]]],[11,"rem","","",3,[[["pint"]]]],[11,"rem","","",3,[[["nint"]]]],[11,"rem","typenum::uint","",27,[[["uint"]]]],[11,"rem","","",28,[[["uint"]]]],[11,"rem","typenum::array","",32,[[["rhs"]]]],[11,"rem","","",33,[[["rhs"]]]],[11,"sub","typenum::int","",4,[[["z0"]]]],[11,"sub","","",4,[[["pint"]]]],[11,"sub","","",4,[[["nint"]]]],[11,"sub","","",2,[[["z0"]]]],[11,"sub","","",3,[[["z0"]]]],[11,"sub","","",2,[[["nint"]]]],[11,"sub","","",3,[[["pint"]]]],[11,"sub","","",2,[[["pint"]]]],[11,"sub","","",3,[[["nint"]]]],[11,"sub","typenum::uint","",27,[[["b0"]]]],[11,"sub","","",28,[[["b0"]]]],[11,"sub","","",28,[[["b1"]]]],[11,"sub","","",28,[[["b1"]]]],[11,"sub","","",28,[[["b1"]]]],[11,"sub","","",27,[[["uterm"]]]],[11,"sub","","",28,[[["ur"]]]],[11,"sub","typenum::array","",32,[[["aterm"]]]],[11,"sub","","",33,[[["tarr"]]]],[11,"eq","typenum::bit","",0,[[["self"],["b0"]],["bool"]]],[11,"eq","","",1,[[["b1"],["self"]],["bool"]]],[11,"eq","typenum::int","",2,[[["pint"],["self"]],["bool"]]],[11,"ne","","",2,[[["pint"],["self"]],["bool"]]],[11,"eq","","",3,[[["self"],["nint"]],["bool"]]],[11,"ne","","",3,[[["self"],["nint"]],["bool"]]],[11,"eq","","",4,[[["z0"],["self"]],["bool"]]],[11,"eq","typenum::uint","",27,[[["uterm"],["self"]],["bool"]]],[11,"eq","","",28,[[["uint"],["self"]],["bool"]]],[11,"ne","","",28,[[["uint"],["self"]],["bool"]]],[11,"eq","typenum::array","",32,[[["self"],["aterm"]],["bool"]]],[11,"eq","","",33,[[["self"],["tarr"]],["bool"]]],[11,"ne","","",33,[[["self"],["tarr"]],["bool"]]],[11,"eq","typenum","",29,[[["self"],["greater"]],["bool"]]],[11,"eq","","",30,[[["self"],["less"]],["bool"]]],[11,"eq","","",31,[[["self"],["equal"]],["bool"]]],[11,"cmp","typenum::bit","",0,[[["self"],["b0"]],["ordering"]]],[11,"cmp","","",1,[[["b1"],["self"]],["ordering"]]],[11,"cmp","typenum::int","",2,[[["pint"],["self"]],["ordering"]]],[11,"cmp","","",3,[[["self"],["nint"]],["ordering"]]],[11,"cmp","","",4,[[["z0"],["self"]],["ordering"]]],[11,"cmp","typenum::uint","",27,[[["uterm"],["self"]],["ordering"]]],[11,"cmp","","",28,[[["uint"],["self"]],["ordering"]]],[11,"cmp","typenum::array","",32,[[["self"],["aterm"]],["ordering"]]],[11,"cmp","","",33,[[["self"],["tarr"]],["ordering"]]],[11,"cmp","typenum","",29,[[["self"],["greater"]],["ordering"]]],[11,"cmp","","",30,[[["self"],["less"]],["ordering"]]],[11,"cmp","","",31,[[["self"],["equal"]],["ordering"]]],[11,"partial_cmp","typenum::bit","",0,[[["self"],["b0"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",1,[[["b1"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","typenum::int","",2,[[["pint"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",2,[[["pint"],["self"]],["bool"]]],[11,"le","","",2,[[["pint"],["self"]],["bool"]]],[11,"gt","","",2,[[["pint"],["self"]],["bool"]]],[11,"ge","","",2,[[["pint"],["self"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["nint"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",3,[[["self"],["nint"]],["bool"]]],[11,"le","","",3,[[["self"],["nint"]],["bool"]]],[11,"gt","","",3,[[["self"],["nint"]],["bool"]]],[11,"ge","","",3,[[["self"],["nint"]],["bool"]]],[11,"partial_cmp","","",4,[[["z0"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","typenum::uint","",27,[[["uterm"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",28,[[["uint"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",28,[[["uint"],["self"]],["bool"]]],[11,"le","","",28,[[["uint"],["self"]],["bool"]]],[11,"gt","","",28,[[["uint"],["self"]],["bool"]]],[11,"ge","","",28,[[["uint"],["self"]],["bool"]]],[11,"partial_cmp","typenum::array","",32,[[["self"],["aterm"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",33,[[["self"],["tarr"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",33,[[["self"],["tarr"]],["bool"]]],[11,"le","","",33,[[["self"],["tarr"]],["bool"]]],[11,"gt","","",33,[[["self"],["tarr"]],["bool"]]],[11,"ge","","",33,[[["self"],["tarr"]],["bool"]]],[11,"partial_cmp","typenum","",29,[[["self"],["greater"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",30,[[["self"],["less"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",31,[[["self"],["equal"]],[["ordering"],["option",["ordering"]]]]],[11,"add","typenum::int","",4,[[["i"]]]],[11,"add","","",2,[[["z0"]]]],[11,"add","","",3,[[["z0"]]]],[11,"add","","",2,[[["pint"]]]],[11,"add","","",3,[[["nint"]]]],[11,"add","","",2,[[["nint"]]]],[11,"add","","",3,[[["pint"]]]],[11,"add","typenum::uint","",27,[[["b0"]]]],[11,"add","","",28,[[["b0"]]]],[11,"add","","",27,[[["b1"]]]],[11,"add","","",28,[[["b1"]]]],[11,"add","","",28,[[["b1"]]]],[11,"add","","",27,[[["u"]]]],[11,"add","","",28,[[["uterm"]]]],[11,"add","","",28,[[["uint",["b0"]],["b0"]]]],[11,"add","","",28,[[["uint",["b1"]],["b1"]]]],[11,"add","","",28,[[["uint",["b0"]],["b0"]]]],[11,"add","","",28,[[["uint",["b1"]],["b1"]]]],[11,"add","typenum::array","",32,[[["aterm"]]]],[11,"add","","",33,[[["tarr"]]]],[11,"mul","typenum::int","",4,[[["i"]]]],[11,"mul","","",2,[[["z0"]]]],[11,"mul","","",3,[[["z0"]]]],[11,"mul","","",2,[[["pint"]]]],[11,"mul","","",3,[[["nint"]]]],[11,"mul","","",2,[[["nint"]]]],[11,"mul","","",3,[[["pint"]]]],[11,"mul","typenum::uint","",28,[[["b0"]]]],[11,"mul","","",27,[[["b0"]]]],[11,"mul","","",27,[[["b1"]]]],[11,"mul","","",28,[[["b1"]]]],[11,"mul","","",28,[[["uterm"]]]],[11,"mul","","",27,[[["u"]]]],[11,"mul","","",28,[[["uint"]]]],[11,"mul","","",28,[[["uint"]]]],[11,"mul","typenum::array","",32,[[["rhs"]]]],[11,"mul","","",33,[[["rhs"]]]],[11,"mul","typenum::int","",4,[[["aterm"]]]],[11,"mul","","",2,[[["aterm"]]]],[11,"mul","","",3,[[["aterm"]]]],[11,"mul","","",4,[[["tarr"]]]],[11,"mul","","",2,[[["tarr"]]]],[11,"mul","","",3,[[["tarr"]]]],[11,"neg","","",4,[[]]],[11,"neg","","",2,[[]]],[11,"neg","","",3,[[]]],[11,"neg","typenum::array","",32,[[]]],[11,"neg","","",33,[[]]],[11,"not","typenum::bit","",0,[[]]],[11,"not","","",1,[[]]],[11,"bitand","","",0,[[["rhs"]]]],[11,"bitand","","",1,[[["b0"]]]],[11,"bitand","","",1,[[["b1"]]]],[11,"bitand","typenum::uint","",27,[[["ur"]]]],[11,"bitand","","",28,[[["ur"]]]],[11,"bitor","typenum::bit","",0,[[["b0"]]]],[11,"bitor","","",0,[[["b1"]]]],[11,"bitor","","",1,[[["rhs"]]]],[11,"bitor","typenum::uint","",27,[[["u"]]]],[11,"bitor","","",28,[[["uterm"]]]],[11,"bitor","","",28,[[["uint",["b0"]],["b0"]]]],[11,"bitor","","",28,[[["uint",["b1"]],["b1"]]]],[11,"bitor","","",28,[[["uint",["b0"]],["b0"]]]],[11,"bitor","","",28,[[["uint",["b1"]],["b1"]]]],[11,"bitxor","typenum::bit","",0,[[["b0"]]]],[11,"bitxor","","",1,[[["b0"]]]],[11,"bitxor","","",0,[[["b1"]]]],[11,"bitxor","","",1,[[["b1"]]]],[11,"bitxor","typenum::uint","",27,[[["ur"]]]],[11,"bitxor","","",28,[[["ur"]]]],[11,"shl","","",27,[[["b0"]]]],[11,"shl","","",27,[[["b1"]]]],[11,"shl","","",28,[[["b0"]]]],[11,"shl","","",28,[[["b1"]]]],[11,"shl","","",28,[[["uterm"]]]],[11,"shl","","",27,[[["u"]]]],[11,"shl","","",28,[[["uint"]]]],[11,"shr","","",27,[[["u"]]]],[11,"shr","","",28,[[["uterm"]]]],[11,"shr","","",27,[[["b0"]]]],[11,"shr","","",27,[[["b1"]]]],[11,"shr","","",28,[[["b0"]]]],[11,"shr","","",28,[[["b1"]]]],[11,"shr","","",28,[[["uint"]]]],[11,"hash","typenum::bit","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","typenum::int","",2,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"hash","typenum::uint","",27,[[["self"],["__h"]]]],[11,"hash","","",28,[[["self"],["__h"]]]],[11,"hash","typenum::array","",32,[[["self"],["__h"]]]],[11,"hash","","",33,[[["self"],["__h"]]]],[11,"hash","typenum","",29,[[["self"],["__h"]]]],[11,"hash","","",30,[[["self"],["__h"]]]],[11,"hash","","",31,[[["self"],["__h"]]]],[11,"clone","typenum::bit","",0,[[["self"]],["b0"]]],[11,"clone","","",1,[[["self"]],["b1"]]],[11,"clone","typenum::int","",2,[[["self"]],["pint"]]],[11,"clone","","",3,[[["self"]],["nint"]]],[11,"clone","","",4,[[["self"]],["z0"]]],[11,"clone","typenum::uint","",27,[[["self"]],["uterm"]]],[11,"clone","","",28,[[["self"]],["uint"]]],[11,"clone","typenum::array","",32,[[["self"]],["aterm"]]],[11,"clone","","",33,[[["self"]],["tarr"]]],[11,"clone","typenum","",29,[[["self"]],["greater"]]],[11,"clone","","",30,[[["self"]],["less"]]],[11,"clone","","",31,[[["self"]],["equal"]]],[11,"default","typenum::bit","",0,[[],["b0"]]],[11,"default","","",1,[[],["b1"]]],[11,"default","typenum::int","",2,[[],["pint"]]],[11,"default","","",3,[[],["nint"]]],[11,"default","","",4,[[],["z0"]]],[11,"default","typenum::uint","",27,[[],["uterm"]]],[11,"default","","",28,[[],["uint"]]],[11,"default","typenum","",29,[[],["greater"]]],[11,"default","","",30,[[],["less"]]],[11,"default","","",31,[[],["equal"]]]],"p":[[3,"B0"],[3,"B1"],[3,"PInt"],[3,"NInt"],[3,"Z0"],[8,"Ord"],[8,"Bit"],[8,"Unsigned"],[8,"Integer"],[8,"Same"],[8,"Abs"],[8,"Pow"],[8,"Cmp"],[8,"Len"],[8,"PartialDiv"],[8,"Min"],[8,"Max"],[8,"IsLess"],[8,"IsEqual"],[8,"IsGreater"],[8,"IsLessOrEqual"],[8,"IsNotEqual"],[8,"IsGreaterOrEqual"],[8,"SquareRoot"],[8,"Logarithm2"],[8,"GetBit"],[8,"SetBit"],[3,"UTerm"],[3,"UInt"],[3,"Greater"],[3,"Less"],[3,"Equal"],[3,"ATerm"],[3,"TArr"],[6,"P1"],[6,"N1"]]};
searchIndex["unicode_segmentation"] = {"doc":"Iterators which split strings on Grapheme Cluster, Word or…","i":[[3,"Graphemes","unicode_segmentation","External iterator for a string's grapheme clusters.",null,null],[3,"GraphemeIndices","","External iterator for grapheme clusters and byte offsets.",null,null],[3,"GraphemeCursor","","Cursor-based segmenter for grapheme clusters.",null,null],[3,"UWordBounds","","External iterator for a string's word boundaries.",null,null],[3,"UWordBoundIndices","","External iterator for word boundaries and byte offsets.",null,null],[3,"UnicodeWords","","An iterator over the substrings of a string which, after…",null,null],[3,"USentenceBounds","","External iterator for a string's sentence boundaries.",null,null],[3,"USentenceBoundIndices","","External iterator for sentence boundaries and byte offsets.",null,null],[3,"UnicodeSentences","","An iterator over the substrings of a string which, after…",null,null],[4,"GraphemeIncomplete","","An error return indicating that not enough content was…",null,null],[13,"PreContext","","More pre-context is needed. The caller should call…",0,null],[13,"PrevChunk","","When requesting `prev_boundary`, the cursor is moving past…",0,null],[13,"NextChunk","","When requesting `next_boundary`, the cursor is moving past…",0,null],[13,"InvalidOffset","","An error returned when the chunk given does not contain…",0,null],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",1,[[["self"]],["str"]]],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",2,[[["self"]],["str"]]],[11,"new","","Create a new cursor. The string and initial offset are…",3,[[["usize"],["bool"]],["graphemecursor"]]],[11,"set_cursor","","Set the cursor to a new location in the same string.",3,[[["self"],["usize"]]]],[11,"cur_cursor","","The current offset of the cursor. Equal to the last value…",3,[[["self"]],["usize"]]],[11,"provide_context","","Provide additional pre-context when it is needed to decide…",3,[[["str"],["self"],["usize"]]]],[11,"is_boundary","","Determine whether the current cursor location is a…",3,[[["str"],["self"],["usize"]],[["graphemeincomplete"],["result",["bool","graphemeincomplete"]],["bool"]]]],[11,"next_boundary","","Find the next boundary after the current cursor position.…",3,[[["str"],["self"],["usize"]],[["result",["option","graphemeincomplete"]],["graphemeincomplete"],["option",["usize"]]]]],[11,"prev_boundary","","Find the previous boundary after the current cursor…",3,[[["str"],["self"],["usize"]],[["result",["option","graphemeincomplete"]],["graphemeincomplete"],["option",["usize"]]]]],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",4,[[["self"]],["str"]]],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",5,[[["self"]],["str"]]],[17,"UNICODE_VERSION","","The version of Unicode that this version of…",null,null],[8,"UnicodeSegmentation","","Methods for segmenting strings according to Unicode…",null,null],[10,"graphemes","","Returns an iterator over the [grapheme…",6,[[["self"],["bool"]],["graphemes"]]],[10,"grapheme_indices","","Returns an iterator over the grapheme clusters of `self`…",6,[[["self"],["bool"]],["graphemeindices"]]],[10,"unicode_words","","Returns an iterator over the words of `self`, separated on…",6,[[["self"]],["unicodewords"]]],[10,"split_word_bounds","","Returns an iterator over substrings of `self` separated on…",6,[[["self"]],["uwordbounds"]]],[10,"split_word_bound_indices","","Returns an iterator over substrings of `self`, split on…",6,[[["self"]],["uwordboundindices"]]],[10,"unicode_sentences","","Returns an iterator over substrings of `self` separated on…",6,[[["self"]],["unicodesentences"]]],[10,"split_sentence_bounds","","Returns an iterator over substrings of `self` separated on…",6,[[["self"]],["usentencebounds"]]],[10,"split_sentence_bound_indices","","Returns an iterator over substrings of `self`, split on…",6,[[["self"]],["usentenceboundindices"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"eq","","",0,[[["graphemeincomplete"],["self"]],["bool"]]],[11,"ne","","",0,[[["graphemeincomplete"],["self"]],["bool"]]],[11,"next","","",1,[[["self"]],["option"]]],[11,"size_hint","","",1,[[["self"]]]],[11,"size_hint","","",2,[[["self"]]]],[11,"next","","",2,[[["self"]],[["option",["str"]],["str"]]]],[11,"next","","",7,[[["self"]],[["option",["str"]],["str"]]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,[[["self"]]]],[11,"size_hint","","",5,[[["self"]]]],[11,"next","","",5,[[["self"]],[["option",["str"]],["str"]]]],[11,"next","","",10,[[["self"]],[["option",["str"]],["str"]]]],[11,"size_hint","","",8,[[["self"]]]],[11,"next","","",8,[[["self"]],[["option",["str"]],["str"]]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,[[["self"]]]],[11,"next_back","","",1,[[["self"]],["option"]]],[11,"next_back","","",2,[[["self"]],[["option",["str"]],["str"]]]],[11,"next_back","","",7,[[["self"]],[["option",["str"]],["str"]]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],[["option",["str"]],["str"]]]],[11,"clone","","",1,[[["self"]],["graphemeindices"]]],[11,"clone","","",2,[[["self"]],["graphemes"]]],[11,"clone","","",3,[[["self"]],["graphemecursor"]]],[11,"clone","","",5,[[["self"]],["uwordbounds"]]],[11,"clone","","",4,[[["self"]],["uwordboundindices"]]],[11,"clone","","",10,[[["self"]],["unicodesentences"]]],[11,"clone","","",8,[[["self"]],["usentencebounds"]]],[11,"clone","","",9,[[["self"]],["usentenceboundindices"]]]],"p":[[4,"GraphemeIncomplete"],[3,"GraphemeIndices"],[3,"Graphemes"],[3,"GraphemeCursor"],[3,"UWordBoundIndices"],[3,"UWordBounds"],[8,"UnicodeSegmentation"],[3,"UnicodeWords"],[3,"USentenceBounds"],[3,"USentenceBoundIndices"],[3,"UnicodeSentences"]]};
searchIndex["vcell"] = {"doc":"Just like [`Cell`] but with [volatile] read / write…","i":[[3,"VolatileCell","vcell","Just like [`Cell`] but with [volatile] read / write…",null,null],[11,"new","","Creates a new `VolatileCell` containing the given value",0,[[["t"]],["self"]]],[11,"get","","Returns a copy of the contained value",0,[[["self"]],["t"]]],[11,"set","","Sets the contained value",0,[[["self"],["t"]]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in the cell",0,[[["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]]],"p":[[3,"VolatileCell"]]};
searchIndex["void"] = {"doc":"Void","i":[[4,"Void","void","The empty type for cases which can't occur.",null,null],[5,"unreachable","","A safe version of `intrinsincs::unreachable`.",null,[[["void"]]]],[8,"ResultVoidExt","","Extensions to `Result<T, Void>`",null,null],[10,"void_unwrap","","Get the value out of a wrapper.",0,[[],["t"]]],[8,"ResultVoidErrExt","","Extensions to `Result<Void, E>`",null,null],[10,"void_unwrap_err","","Get the error out of a wrapper.",1,[[],["e"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"eq","","",2,[[["t"],["self"]],["bool"]]],[11,"partial_cmp","","",2,[[["t"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"clone","","",2,[[["self"]],["void"]]]],"p":[[8,"ResultVoidExt"],[8,"ResultVoidErrExt"],[4,"Void"]]};
searchIndex["volatile_register"] = {"doc":"Volatile access to memory mapped hardware registers","i":[[3,"RO","volatile_register","Read-Only register",null,null],[3,"RW","","Read-Write register",null,null],[3,"WO","","Write-Only register",null,null],[11,"read","","Reads the value of the register",0,[[["self"]],["t"]]],[11,"modify","","Performs a read-modify-write operation",1,[[["self"],["f"]]]],[11,"read","","Reads the value of the register",1,[[["self"]],["t"]]],[11,"write","","Writes a `value` into the register",1,[[["self"],["t"]]]],[11,"write","","Writes `value` into the register",2,[[["self"],["t"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]]],"p":[[3,"RO"],[3,"RW"],[3,"WO"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);