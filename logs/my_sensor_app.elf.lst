
/Users/Luppy/PineTime/pinetime-rust-mynewt/bin/targets/nrf52_my_sensor/app/apps/my_sensor_app/my_sensor_app.elf:     file format elf32-littlearm
/Users/Luppy/PineTime/pinetime-rust-mynewt/bin/targets/nrf52_my_sensor/app/apps/my_sensor_app/my_sensor_app.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000080f9

Program Header:
0x70000001 off    0x0001fa44 vaddr 0x0001fa44 paddr 0x0001fa44 align 2**2
         filesz 0x00000018 memsz 0x00000018 flags r--
    LOAD off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**16
         filesz 0x0001fa5c memsz 0x0001fa5c flags rwx
    LOAD off    0x000200d8 vaddr 0x200000d8 paddr 0x0001fa5c align 2**16
         filesz 0x00000064 memsz 0x00000064 flags rw-
    LOAD off    0x00020140 vaddr 0x20000140 paddr 0x0001fac0 align 2**16
         filesz 0x00000000 memsz 0x00009de8 flags rw-
    LOAD off    0x00030000 vaddr 0x20000000 paddr 0x20000000 align 2**16
         filesz 0x00000000 memsz 0x000000d8 flags rw-
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx
private flags = 5000400: [Version5 EABI] [hard-float ABI]

Sections:
Idx Name               Size      VMA       LMA       File off  Algn  Flags
  0 .imghdr            00000020  00008000  00008000  00008000  2**0  ALLOC
  1 .text              00017a24  00008020  00008020  00008020  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .ARM.extab         00000000  0001fa44  0001fa44  0002013c  2**0  CONTENTS
  3 .ARM.exidx         00000018  0001fa44  0001fa44  0001fa44  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .vector_relocation 000000d8  20000000  20000000  00030000  2**0  ALLOC
  5 .rtt               00000000  200000d8  200000d8  0002013c  2**0  CONTENTS
  6 .data              00000064  200000d8  0001fa5c  000200d8  2**2  CONTENTS, ALLOC, LOAD, DATA
  7 .bssnz             00000000  2000013c  2000013c  0002013c  2**0  CONTENTS
  8 .bss               00009de8  20000140  0001fac0  00020140  2**3  ALLOC
  9 .stack_dummy       000001b0  20009f28  20009f28  00020140  2**3  CONTENTS, READONLY
 10 .ARM.attributes    0000003b  00000000  00000000  000202f0  2**0  CONTENTS, READONLY
 11 .comment           0000007f  00000000  00000000  0002032b  2**0  CONTENTS, READONLY
 12 .svc_table         00000004  00000000  00000000  000203aa  2**0  CONTENTS, READONLY
 13 .debug_line        00055c7f  00000000  00000000  000203ae  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_info        00095119  00000000  00000000  0007602d  2**0  CONTENTS, READONLY, DEBUGGING
 15 .debug_abbrev      0000eb18  00000000  00000000  0010b146  2**0  CONTENTS, READONLY, DEBUGGING
 16 .debug_aranges     00006160  00000000  00000000  00119c60  2**3  CONTENTS, READONLY, DEBUGGING
 17 .debug_str         00069aea  00000000  00000000  0011fdc0  2**0  CONTENTS, READONLY, DEBUGGING
 18 .debug_loc         000136c2  00000000  00000000  001898aa  2**0  CONTENTS, READONLY, DEBUGGING
 19 .debug_ranges      0001e0c0  00000000  00000000  0019cf6c  2**0  CONTENTS, READONLY, DEBUGGING
 20 .debug_frame       000101e0  00000000  00000000  001bb02c  2**2  CONTENTS, READONLY, DEBUGGING
 21 .debug_macinfo     0000005a  00000000  00000000  001cb20c  2**0  CONTENTS, READONLY, DEBUGGING
 22 .debug_pubnames    0001df34  00000000  00000000  001cb266  2**0  CONTENTS, READONLY, DEBUGGING
 23 .debug_pubtypes    00047c53  00000000  00000000  001e919a  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00008000 l    d  .imghdr	00000000 .imghdr
00008020 l    d  .text	00000000 .text
0001fa44 l    d  .ARM.extab	00000000 .ARM.extab
0001fa44 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .vector_relocation	00000000 .vector_relocation
200000d8 l    d  .rtt	00000000 .rtt
200000d8 l    d  .data	00000000 .data
2000013c l    d  .bssnz	00000000 .bssnz
20000140 l    d  .bss	00000000 .bss
20009f28 l    d  .stack_dummy	00000000 .stack_dummy
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .svc_table	00000000 .svc_table
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_macinfo	00000000 .debug_macinfo
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_pubtypes	00000000 .debug_pubtypes
00000000 l    df *ABS*	00000000 gcc_startup_nrf52.o
000001b0 l       *ABS*	00000000 Stack_Size
00000000 l       *ABS*	00000000 Heap_Size
00008100 l       .text	00000000 .bss_zero_loop
00000000 l    df *ABS*	00000000 sbrk.c
200000d8 l     O .data	00000004 sbrkBase
200000dc l     O .data	00000004 sbrkLimit
200000e0 l     O .data	00000004 brk
00000000 l    df *ABS*	00000000 hal_system.c
00000000 l    df *ABS*	00000000 system_nrf52.c
0000820c l     F .text	0000003c errata_16
00008248 l     F .text	0000004c errata_31
00008294 l     F .text	0000003c errata_32
000082d0 l     F .text	0000004c errata_36
0000831c l     F .text	0000003c errata_37
00008358 l     F .text	0000003c errata_57
00008394 l     F .text	0000003c errata_66
000083d0 l     F .text	0000004c errata_108
00000000 l    df *ABS*	00000000 start.c
00000000 l    df *ABS*	00000000 3oi6uzsn3ot5dawp
00000d7e l       .debug_str	00000000 
00062a03 l       .debug_str	00000000 
00000da7 l       .debug_str	00000000 
00000db2 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
00000dc8 l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000def l       .debug_str	00000000 
00000e06 l       .debug_str	00000000 
00000e2a l       .debug_str	00000000 
00000e56 l       .debug_str	00000000 
00000e46 l       .debug_str	00000000 
00000e60 l       .debug_str	00000000 
00000ed0 l       .debug_str	00000000 
00000ebe l       .debug_str	00000000 
00000edb l       .debug_str	00000000 
0003bcfd l       .debug_str	00000000 
0003bcf1 l       .debug_str	00000000 
0003bd62 l       .debug_str	00000000 
00062317 l       .debug_str	00000000 
00062a7e l       .debug_str	00000000 
00061d4b l       .debug_str	00000000 
00000ef4 l       .debug_str	00000000 
0003bd8f l       .debug_str	00000000 
0003bd81 l       .debug_str	00000000 
00000f06 l       .debug_str	00000000 
00000ef8 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
00000b3d l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00057262 l       .debug_str	00000000 
000410bb l       .debug_str	00000000 
00003435 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000b51 l       .debug_str	00000000 
00000b56 l       .debug_str	00000000 
00000b5c l       .debug_str	00000000 
00000b63 l       .debug_str	00000000 
00000b6b l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00064f66 l       .debug_str	00000000 
00000b83 l       .debug_str	00000000 
00000b8c l       .debug_str	00000000 
00000b90 l       .debug_str	00000000 
00000bba l       .debug_str	00000000 
00000bbf l       .debug_str	00000000 
00000be9 l       .debug_str	00000000 
00063df1 l       .debug_str	00000000 
00000bf6 l       .debug_str	00000000 
00000c08 l       .debug_str	00000000 
0000c614 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
0000c61a l       .debug_str	00000000 
0000e51e l       .debug_str	00000000 
00000c0e l       .debug_str	00000000 
00000c16 l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
00000c2a l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
00000c45 l       .debug_str	00000000 
0003bd4e l       .debug_str	00000000 
00067a27 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00000c56 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
00000c70 l       .debug_str	00000000 
00000c7c l       .debug_str	00000000 
00040bba l       .debug_str	00000000 
00000c84 l       .debug_str	00000000 
00000c89 l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00000c90 l       .debug_str	00000000 
00064e10 l       .debug_str	00000000 
00001a1f l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00069452 l       .debug_str	00000000 
0000bfe3 l       .debug_str	00000000 
00000c99 l       .debug_str	00000000 
00000ca3 l       .debug_str	00000000 
00000caa l       .debug_str	00000000 
00000ca6 l       .debug_str	00000000 
00000cb0 l       .debug_str	00000000 
00000cb8 l       .debug_str	00000000 
000010b6 l       .debug_str	00000000 
00000cbe l       .debug_str	00000000 
00000ce3 l       .debug_str	00000000 
00000cc9 l       .debug_str	00000000 
00000cec l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000d10 l       .debug_str	00000000 
00062a8c l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00000d37 l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
00000d3d l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00000d4c l       .debug_str	00000000 
00000d50 l       .debug_str	00000000 
00000d59 l       .debug_str	00000000 
00000d65 l       .debug_str	00000000 
00000d8a l       .debug_str	00000000 
00000d8f l       .debug_str	00000000 
00000d99 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 3wgwa4igh7a6mjbc
000019f6 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
000010e4 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
000010ea l       .debug_str	00000000 
00008953 l       .debug_str	00000000 
000010f4 l       .debug_str	00000000 
0000898e l       .debug_str	00000000 
00015bed l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
00000b3d l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
00000f10 l       .debug_str	00000000 
00000f18 l       .debug_str	00000000 
00000f23 l       .debug_str	00000000 
00000f2e l       .debug_str	00000000 
00000f3b l       .debug_str	00000000 
00000f46 l       .debug_str	00000000 
00000f4e l       .debug_str	00000000 
00000f59 l       .debug_str	00000000 
00000f64 l       .debug_str	00000000 
00000f6e l       .debug_str	00000000 
00000f79 l       .debug_str	00000000 
00000f84 l       .debug_str	00000000 
00000f91 l       .debug_str	00000000 
00000f9d l       .debug_str	00000000 
00000faa l       .debug_str	00000000 
00000fb8 l       .debug_str	00000000 
00000fc2 l       .debug_str	00000000 
00017cbe l       .debug_str	00000000 
00064f66 l       .debug_str	00000000 
00005f81 l       .debug_str	00000000 
00000fcf l       .debug_str	00000000 
00001001 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00056d15 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
0000100e l       .debug_str	00000000 
00001036 l       .debug_str	00000000 
00001a29 l       .debug_str	00000000 
00001041 l       .debug_str	00000000 
0000104c l       .debug_str	00000000 
00001056 l       .debug_str	00000000 
000011a9 l       .debug_str	00000000 
0000105f l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
0000881c l       .debug_str	00000000 
00001072 l       .debug_str	00000000 
0000107f l       .debug_str	00000000 
00001085 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00001090 l       .debug_str	00000000 
0000109b l       .debug_str	00000000 
00008867 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
000108af l       .debug_str	00000000 
000010a2 l       .debug_str	00000000 
000010af l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
0003c3db l       .debug_str	00000000 
0001086b l       .debug_str	00000000 
000125b7 l       .debug_str	00000000 
00012c6d l       .debug_str	00000000 
000010bc l       .debug_str	00000000 
000010c3 l       .debug_str	00000000 
0000194d l       .debug_str	00000000 
000010ca l       .debug_str	00000000 
00067fb9 l       .debug_str	00000000 
000010d1 l       .debug_str	00000000 
000010d7 l       .debug_str	00000000 
00005c47 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 3zy9c3z5vflnby97
000011ef l       .debug_str	00000000 
000021fd l       .debug_str	00000000 
000044cb l       .debug_str	00000000 
00067983 l       .debug_str	00000000 
00001228 l       .debug_str	00000000 
000012c3 l       .debug_str	00000000 
0000131d l       .debug_str	00000000 
00001359 l       .debug_str	00000000 
0002c770 l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00069443 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
00000b3d l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
00001134 l       .debug_str	00000000 
00001a29 l       .debug_str	00000000 
00001090 l       .debug_str	00000000 
0000109b l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00008867 l       .debug_str	00000000 
00001138 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
000123da l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
0001c5ae l       .debug_str	00000000 
00001172 l       .debug_str	00000000 
00001180 l       .debug_str	00000000 
00001189 l       .debug_str	00000000 
00001197 l       .debug_str	00000000 
000088ca l       .debug_str	00000000 
000125b7 l       .debug_str	00000000 
000011af l       .debug_str	00000000 
000011e4 l       .debug_str	00000000 
00001041 l       .debug_str	00000000 
000010bc l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 44d1oo9th7vq2w44
00001367 l       .debug_str	00000000 
000013c6 l       .debug_str	00000000 
00001402 l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
0000140b l       .debug_str	00000000 
00001436 l       .debug_str	00000000 
0000143f l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
00000c2a l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
00000c45 l       .debug_str	00000000 
0003bd4e l       .debug_str	00000000 
0000149d l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
00000b3d l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00000c16 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00000c8a l       .debug_str	00000000 
00011e7c l       .debug_str	00000000 
00017134 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
0000136c l       .debug_str	00000000 
000013b3 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
0001c5ae l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00001172 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 4z3ogk24h77552tc
00001864 l       .debug_str	00000000 
000125b7 l       .debug_str	00000000 
0000194d l       .debug_str	00000000 
000014a6 l       .debug_str	00000000 
0000153f l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
000019af l       .debug_str	00000000 
00001578 l       .debug_str	00000000 
0000160f l       .debug_str	00000000 
00001643 l       .debug_str	00000000 
000016e0 l       .debug_str	00000000 
00001779 l       .debug_str	00000000 
00001180 l       .debug_str	00000000 
00001189 l       .debug_str	00000000 
00001197 l       .debug_str	00000000 
000088ca l       .debug_str	00000000 
000011af l       .debug_str	00000000 
000012c3 l       .debug_str	00000000 
000017ad l       .debug_str	00000000 
0000189f l       .debug_str	00000000 
000018f2 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
000010a9 l       .debug_str	00000000 
00001925 l       .debug_str	00000000 
00001983 l       .debug_str	00000000 
000019ed l       .debug_str	00000000 
00062d05 l       .debug_str	00000000 
000019f0 l       .debug_str	00000000 
00001a03 l       .debug_str	00000000 
000019fd l       .debug_str	00000000 
00001a0d l       .debug_str	00000000 
00001134 l       .debug_str	00000000 
00001138 l       .debug_str	00000000 
000123da l       .debug_str	00000000 
00019366 l       .debug_str	00000000 
000630c3 l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
00001a12 l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
00001a1c l       .debug_str	00000000 
00031b8a l       .debug_str	00000000 
000044cb l       .debug_str	00000000 
000007da l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
00000b3d l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00001a29 l       .debug_str	00000000 
00001041 l       .debug_str	00000000 
000010bc l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
000021fd l       .debug_str	00000000 
000010c3 l       .debug_str	00000000 
000011a9 l       .debug_str	00000000 
0000105f l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
0000881c l       .debug_str	00000000 
000019f6 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
0000107f l       .debug_str	00000000 
00001085 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00001090 l       .debug_str	00000000 
0000109b l       .debug_str	00000000 
00008867 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
000108af l       .debug_str	00000000 
000010a2 l       .debug_str	00000000 
000010af l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
0003c3db l       .debug_str	00000000 
0001086b l       .debug_str	00000000 
0001b120 l     O .text	0000001f str.0
0001b160 l     O .text	00000021 str.1
0001b190 l     O .text	0000001c str.2
0001b1c0 l     O .text	00000021 str.3
00000000 l    df *ABS*	00000000 atrc76z4m4tp586
00000c6d l       .debug_str	00000000 
000108af l       .debug_str	00000000 
000010a2 l       .debug_str	00000000 
000010af l       .debug_str	00000000 
0003c3db l       .debug_str	00000000 
0001086b l       .debug_str	00000000 
000125b7 l       .debug_str	00000000 
0000194d l       .debug_str	00000000 
00001a3b l       .debug_str	00000000 
00001a84 l       .debug_str	00000000 
00001a0d l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
00000b3d l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00001a24 l       .debug_str	00000000 
00005f81 l       .debug_str	00000000 
00001a29 l       .debug_str	00000000 
00001041 l       .debug_str	00000000 
000010bc l       .debug_str	00000000 
000010c3 l       .debug_str	00000000 
000011a9 l       .debug_str	00000000 
0000105f l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
0000881c l       .debug_str	00000000 
000019f6 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
0000107f l       .debug_str	00000000 
00001085 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00001090 l       .debug_str	00000000 
0000109b l       .debug_str	00000000 
00008867 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 s6le1b8f6wgzo29
00000def l       .debug_str	00000000 
00000d65 l       .debug_str	00000000 
00000d8a l       .debug_str	00000000 
00000d7e l       .debug_str	00000000 
00000d8f l       .debug_str	00000000 
00000d99 l       .debug_str	00000000 
00062a03 l       .debug_str	00000000 
00000da7 l       .debug_str	00000000 
00000db2 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
00000dc8 l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000e06 l       .debug_str	00000000 
00000e2a l       .debug_str	00000000 
00000e56 l       .debug_str	00000000 
00000e46 l       .debug_str	00000000 
00000e60 l       .debug_str	00000000 
00000ed0 l       .debug_str	00000000 
00000ebe l       .debug_str	00000000 
00000edb l       .debug_str	00000000 
0003bcfd l       .debug_str	00000000 
0003bcf1 l       .debug_str	00000000 
0006825e l       .debug_str	00000000 
00065719 l       .debug_str	00000000 
00001f9b l       .debug_str	00000000 
00000ac8 l       .debug_str	00000000 
00001fa5 l       .debug_str	00000000 
0000087f l       .debug_str	00000000 
00000a41 l       .debug_str	00000000 
00000a2b l       .debug_str	00000000 
00000a09 l       .debug_str	00000000 
00000a9b l       .debug_str	00000000 
00067702 l       .debug_str	00000000 
000009cf l       .debug_str	00000000 
000008b1 l       .debug_str	00000000 
00000878 l       .debug_str	00000000 
00062151 l       .debug_str	00000000 
00001fae l       .debug_str	00000000 
00001fdb l       .debug_str	00000000 
0000bfb9 l       .debug_str	00000000 
0006853d l       .debug_str	00000000 
000008f3 l       .debug_str	00000000 
00000a5c l       .debug_str	00000000 
000009b8 l       .debug_str	00000000 
000008c2 l       .debug_str	00000000 
00002010 l       .debug_str	00000000 
00002039 l       .debug_str	00000000 
00002097 l       .debug_str	00000000 
00000998 l       .debug_str	00000000 
00000aa3 l       .debug_str	00000000 
00000a7b l       .debug_str	00000000 
000020fd l       .debug_str	00000000 
00002029 l       .debug_str	00000000 
00000aba l       .debug_str	00000000 
0000086d l       .debug_str	00000000 
00000a34 l       .debug_str	00000000 
00000aab l       .debug_str	00000000 
0000211b l       .debug_str	00000000 
00000a21 l       .debug_str	00000000 
00000948 l       .debug_str	00000000 
000008db l       .debug_str	00000000 
00002131 l       .debug_str	00000000 
00002157 l       .debug_str	00000000 
0000088a l       .debug_str	00000000 
0000216d l       .debug_str	00000000 
0000fdf3 l       .debug_str	00000000 
00002136 l       .debug_str	00000000 
00002183 l       .debug_str	00000000 
0000218c l       .debug_str	00000000 
00000895 l       .debug_str	00000000 
00000ad3 l       .debug_str	00000000 
00002195 l       .debug_str	00000000 
000021bc l       .debug_str	00000000 
000021ed l       .debug_str	00000000 
000021d4 l       .debug_str	00000000 
00066869 l       .debug_str	00000000 
00002c41 l       .debug_str	00000000 
00001f6d l       .debug_str	00000000 
0006523d l       .debug_str	00000000 
000021f7 l       .debug_str	00000000 
00005b50 l       .debug_str	00000000 
000021fb l       .debug_str	00000000 
00069443 l       .debug_str	00000000 
00031b8a l       .debug_str	00000000 
0006449e l       .debug_str	00000000 
00002202 l       .debug_str	00000000 
00002229 l       .debug_str	00000000 
00002231 l       .debug_str	00000000 
00002238 l       .debug_str	00000000 
0000223e l       .debug_str	00000000 
00002245 l       .debug_str	00000000 
00065253 l       .debug_str	00000000 
0000224b l       .debug_str	00000000 
0000225a l       .debug_str	00000000 
00002268 l       .debug_str	00000000 
00002272 l       .debug_str	00000000 
00002277 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
00000b3d l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00064f66 l       .debug_str	00000000 
00001e1a l       .debug_str	00000000 
00001af2 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00001afe l       .debug_str	00000000 
00062c5e l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
0000b6a7 l       .debug_str	00000000 
00001b02 l       .debug_str	00000000 
00001b39 l       .debug_str	00000000 
0000b6be l       .debug_str	00000000 
00001b45 l       .debug_str	00000000 
00001b7c l       .debug_str	00000000 
00001b87 l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
00001b8f l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00001b96 l       .debug_str	00000000 
00001b9d l       .debug_str	00000000 
000685db l       .debug_str	00000000 
00001ba6 l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
00062e21 l       .debug_str	00000000 
00001bb0 l       .debug_str	00000000 
0000221a l       .debug_str	00000000 
00001bba l       .debug_str	00000000 
00001bf0 l       .debug_str	00000000 
00001bf4 l       .debug_str	00000000 
00001c22 l       .debug_str	00000000 
00001c2e l       .debug_str	00000000 
0001af01 l       .debug_str	00000000 
00001c35 l       .debug_str	00000000 
00065a8c l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
0000219a l       .debug_str	00000000 
00001c3f l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00001c77 l       .debug_str	00000000 
00001cb7 l       .debug_str	00000000 
00001cbe l       .debug_str	00000000 
00001cc2 l       .debug_str	00000000 
00001ccd l       .debug_str	00000000 
00001ce8 l       .debug_str	00000000 
00001cd8 l       .debug_str	00000000 
00001cef l       .debug_str	00000000 
00000947 l       .debug_str	00000000 
00001cf7 l       .debug_str	00000000 
000021b3 l       .debug_str	00000000 
00001d0e l       .debug_str	00000000 
00001d45 l       .debug_str	00000000 
00062e3e l       .debug_str	00000000 
0006810f l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
00068388 l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
00001d4e l       .debug_str	00000000 
00001d62 l       .debug_str	00000000 
00001d95 l       .debug_str	00000000 
00001da0 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000f10 l       .debug_str	00000000 
00000f18 l       .debug_str	00000000 
00000f23 l       .debug_str	00000000 
00000f2e l       .debug_str	00000000 
00000f3b l       .debug_str	00000000 
00000f46 l       .debug_str	00000000 
00000f4e l       .debug_str	00000000 
00000f59 l       .debug_str	00000000 
00000f64 l       .debug_str	00000000 
00000f6e l       .debug_str	00000000 
00000f79 l       .debug_str	00000000 
00000f84 l       .debug_str	00000000 
00000f91 l       .debug_str	00000000 
00000f9d l       .debug_str	00000000 
00000faa l       .debug_str	00000000 
00000fb8 l       .debug_str	00000000 
00000fc2 l       .debug_str	00000000 
00017cbe l       .debug_str	00000000 
00057262 l       .debug_str	00000000 
000410bb l       .debug_str	00000000 
00003435 l       .debug_str	00000000 
00000b51 l       .debug_str	00000000 
00000b56 l       .debug_str	00000000 
00000b5c l       .debug_str	00000000 
00000b63 l       .debug_str	00000000 
00000b6b l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00001dd6 l       .debug_str	00000000 
00001e14 l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
00056d15 l       .debug_str	00000000 
0000100e l       .debug_str	00000000 
00001e27 l       .debug_str	00000000 
00001e6a l       .debug_str	00000000 
00001e82 l       .debug_str	00000000 
00001ec2 l       .debug_str	00000000 
00001ed7 l       .debug_str	00000000 
00001f11 l       .debug_str	00000000 
00001f20 l       .debug_str	00000000 
00001f5f l       .debug_str	00000000 
00063092 l       .debug_str	00000000 
00000365 l       .debug_str	00000000 
00001f73 l       .debug_str	00000000 
000087b7 l       .debug_str	00000000 
00001f7c l       .debug_str	00000000 
00001f86 l       .debug_str	00000000 
00001f8b l       .debug_str	00000000 
00001f91 l       .debug_str	00000000 
00001f96 l       .debug_str	00000000 
00000c56 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
00000c70 l       .debug_str	00000000 
00000c7c l       .debug_str	00000000 
00040bba l       .debug_str	00000000 
00000c84 l       .debug_str	00000000 
00000c89 l       .debug_str	00000000 
00000c90 l       .debug_str	00000000 
00064e10 l       .debug_str	00000000 
00001a1f l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00069452 l       .debug_str	00000000 
0000bfe3 l       .debug_str	00000000 
00000c99 l       .debug_str	00000000 
00000ca3 l       .debug_str	00000000 
00000caa l       .debug_str	00000000 
00000ca6 l       .debug_str	00000000 
00000cb0 l       .debug_str	00000000 
00000cb8 l       .debug_str	00000000 
000010b6 l       .debug_str	00000000 
00000cbe l       .debug_str	00000000 
00000ce3 l       .debug_str	00000000 
00000cc9 l       .debug_str	00000000 
00000cec l       .debug_str	00000000 
00000d10 l       .debug_str	00000000 
00062a8c l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00000d37 l       .debug_str	00000000 
00000d3d l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00000d4c l       .debug_str	00000000 
00000d50 l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
00000c2a l       .debug_str	00000000 
00000c45 l       .debug_str	00000000 
00000d59 l       .debug_str	00000000 
200001f0 l     O .bss	00000001 _ZN3app12touch_sensor10I2C_BUFFER17hc6c8e7a622db91d3E
20000144 l     O .bss	00000052 _ZN3app12touch_sensor10TOUCH_DATA17hbce3ed6af7e66c2fE
20000144 l     O .bss	00000000 _ZN3app12touch_sensor11TOUCH_DELAY17ha4a1435df4fef609E
200001d8 l     O .bss	00000010 _ZN3app12touch_sensor11TOUCH_EVENT17h627afce896a79bedE
20000140 l     O .bss	00000004 _ZN3app12touch_sensor11TOUCH_RESET17h73f1c952b22dc920E
00009740 l     F .text	00000766 _ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E
00009ea6 l     F .text	0000019a _ZN3app12touch_sensor19read_register_range17h84615e3b234f6933E
0000960a l     F .text	00000136 _ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E
000095c0 l     F .text	0000004a _ZN3app12touch_sensor23touch_interrupt_handler17h62f0ff10632577e9E
20000196 l     O .bss	0000003f _ZN3app12touch_sensor3BUF17hef9c6a9bff55f764E
200001e8 l     O .bss	00000008 _ZN3app12touch_sensor8I2C_DATA17hed6a3d3fa5e4d1c5E
0001b4c0 l     O .text	00000021 str.0
0001b500 l     O .text	0000001c str.1
00000000 l    df *ABS*	00000000 cstr_core.dsd0mrv6-cgu.0
00003db8 l       .debug_str	00000000 
0006788d l       .debug_str	00000000 
00002da0 l       .debug_str	00000000 
0005315b l       .debug_str	00000000 
00002da6 l       .debug_str	00000000 
000021fd l       .debug_str	00000000 
00002db5 l       .debug_str	00000000 
00002dbf l       .debug_str	00000000 
00005c2d l       .debug_str	00000000 
000054e8 l       .debug_str	00000000 
00002dc4 l       .debug_str	00000000 
00002e4a l       .debug_str	00000000 
00002e54 l       .debug_str	00000000 
00002ee6 l       .debug_str	00000000 
00012237 l       .debug_str	00000000 
00002f2c l       .debug_str	00000000 
00002fc0 l       .debug_str	00000000 
00003022 l       .debug_str	00000000 
0000306a l       .debug_str	00000000 
00003094 l       .debug_str	00000000 
00031d55 l       .debug_str	00000000 
000030e1 l       .debug_str	00000000 
0000313b l       .debug_str	00000000 
00003149 l       .debug_str	00000000 
0000319c l       .debug_str	00000000 
000031a4 l       .debug_str	00000000 
000031f9 l       .debug_str	00000000 
00003203 l       .debug_str	00000000 
00003241 l       .debug_str	00000000 
0000325c l       .debug_str	00000000 
0000329e l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
000032bd l       .debug_str	00000000 
000032ef l       .debug_str	00000000 
000032ff l       .debug_str	00000000 
0000335e l       .debug_str	00000000 
00005a52 l       .debug_str	00000000 
000033c3 l       .debug_str	00000000 
000033f4 l       .debug_str	00000000 
000033ff l       .debug_str	00000000 
00003431 l       .debug_str	00000000 
00003438 l       .debug_str	00000000 
00003466 l       .debug_str	00000000 
00003478 l       .debug_str	00000000 
0000349e l       .debug_str	00000000 
000034aa l       .debug_str	00000000 
000034f1 l       .debug_str	00000000 
000034fd l       .debug_str	00000000 
00003544 l       .debug_str	00000000 
00003550 l       .debug_str	00000000 
0000359b l       .debug_str	00000000 
000035ab l       .debug_str	00000000 
000035b9 l       .debug_str	00000000 
00003604 l       .debug_str	00000000 
00003614 l       .debug_str	00000000 
00062da4 l       .debug_str	00000000 
0000361a l       .debug_str	00000000 
000036a6 l       .debug_str	00000000 
000036c1 l       .debug_str	00000000 
000036f6 l       .debug_str	00000000 
00003774 l       .debug_str	00000000 
000037a9 l       .debug_str	00000000 
000037c4 l       .debug_str	00000000 
000037f9 l       .debug_str	00000000 
00003833 l       .debug_str	00000000 
00003869 l       .debug_str	00000000 
00003884 l       .debug_str	00000000 
000038be l       .debug_str	00000000 
000038dd l       .debug_str	00000000 
00003919 l       .debug_str	00000000 
0000393f l       .debug_str	00000000 
0000394b l       .debug_str	00000000 
00003972 l       .debug_str	00000000 
0000397f l       .debug_str	00000000 
00003b8c l       .debug_str	00000000 
000039cd l       .debug_str	00000000 
00003bfc l       .debug_str	00000000 
00003a1e l       .debug_str	00000000 
00003a70 l       .debug_str	00000000 
00003a7c l       .debug_str	00000000 
00003ac7 l       .debug_str	00000000 
00003ad9 l       .debug_str	00000000 
00003b1c l       .debug_str	00000000 
00003b27 l       .debug_str	00000000 
00003b83 l       .debug_str	00000000 
00003b94 l       .debug_str	00000000 
00003bf3 l       .debug_str	00000000 
00003c07 l       .debug_str	00000000 
00003c5d l       .debug_str	00000000 
00003c6c l       .debug_str	00000000 
00003d01 l       .debug_str	00000000 
00003d0d l       .debug_str	00000000 
00003da7 l       .debug_str	00000000 
00003ddd l       .debug_str	00000000 
00003e86 l       .debug_str	00000000 
00003e97 l       .debug_str	00000000 
00062e93 l       .debug_str	00000000 
00003e9c l       .debug_str	00000000 
00003f24 l       .debug_str	00000000 
00003edb l       .debug_str	00000000 
00003f1f l       .debug_str	00000000 
00003f69 l       .debug_str	00000000 
00003faa l       .debug_str	00000000 
00003fcf l       .debug_str	00000000 
00004020 l       .debug_str	00000000 
00004065 l       .debug_str	00000000 
000040b8 l       .debug_str	00000000 
00004119 l       .debug_str	00000000 
00004180 l       .debug_str	00000000 
0001ce1c l       .debug_str	00000000 
000041c7 l       .debug_str	00000000 
00004212 l       .debug_str	00000000 
0000421f l       .debug_str	00000000 
000042f9 l       .debug_str	00000000 
00004280 l       .debug_str	00000000 
000042f1 l       .debug_str	00000000 
00004301 l       .debug_str	00000000 
0000431d l       .debug_str	00000000 
0000432c l       .debug_str	00000000 
000043a1 l       .debug_str	00000000 
000043cc l       .debug_str	00000000 
00004445 l       .debug_str	00000000 
0000444f l       .debug_str	00000000 
00004475 l       .debug_str	00000000 
000044ae l       .debug_str	00000000 
000044c6 l       .debug_str	00000000 
000044d5 l       .debug_str	00000000 
0000450e l       .debug_str	00000000 
00004546 l       .debug_str	00000000 
0000457f l       .debug_str	00000000 
00004589 l       .debug_str	00000000 
000045c4 l       .debug_str	00000000 
00004608 l       .debug_str	00000000 
0000464e l       .debug_str	00000000 
0000468a l       .debug_str	00000000 
000046b2 l       .debug_str	00000000 
000046ee l       .debug_str	00000000 
0000574e l       .debug_str	00000000 
00004712 l       .debug_str	00000000 
00004763 l       .debug_str	00000000 
0000477a l       .debug_str	00000000 
000047cb l       .debug_str	00000000 
000047e9 l       .debug_str	00000000 
0000483a l       .debug_str	00000000 
00004846 l       .debug_str	00000000 
00004897 l       .debug_str	00000000 
000048a9 l       .debug_str	00000000 
00004901 l       .debug_str	00000000 
00004917 l       .debug_str	00000000 
0000497a l       .debug_str	00000000 
000049ef l       .debug_str	00000000 
00004a52 l       .debug_str	00000000 
00004a7d l       .debug_str	00000000 
00004adf l       .debug_str	00000000 
00004ae7 l       .debug_str	00000000 
00004b4b l       .debug_str	00000000 
00004b55 l       .debug_str	00000000 
00004bc5 l       .debug_str	00000000 
00004bd9 l       .debug_str	00000000 
00004c44 l       .debug_str	00000000 
00004c53 l       .debug_str	00000000 
00004cbf l       .debug_str	00000000 
00004cf1 l       .debug_str	00000000 
00004d17 l       .debug_str	00000000 
00004d86 l       .debug_str	00000000 
00004da6 l       .debug_str	00000000 
00004e16 l       .debug_str	00000000 
00004e37 l       .debug_str	00000000 
00004eab l       .debug_str	00000000 
00004eb4 l       .debug_str	00000000 
00004f34 l       .debug_str	00000000 
00004f7a l       .debug_str	00000000 
00004fa3 l       .debug_str	00000000 
00004faa l       .debug_str	00000000 
00004fe2 l       .debug_str	00000000 
00005021 l       .debug_str	00000000 
00005028 l       .debug_str	00000000 
000050a1 l       .debug_str	00000000 
00005138 l       .debug_str	00000000 
00005144 l       .debug_str	00000000 
000051c2 l       .debug_str	00000000 
000051cc l       .debug_str	00000000 
0000525a l       .debug_str	00000000 
00005306 l       .debug_str	00000000 
0000534d l       .debug_str	00000000 
0000535a l       .debug_str	00000000 
000053a7 l       .debug_str	00000000 
000053ba l       .debug_str	00000000 
0000540c l       .debug_str	00000000 
0000547c l       .debug_str	00000000 
00002dad l       .debug_str	00000000 
000054dc l       .debug_str	00000000 
000054ed l       .debug_str	00000000 
00005552 l       .debug_str	00000000 
00005582 l       .debug_str	00000000 
0000558b l       .debug_str	00000000 
000055c7 l       .debug_str	00000000 
000055db l       .debug_str	00000000 
00005616 l       .debug_str	00000000 
0000565c l       .debug_str	00000000 
0000567a l       .debug_str	00000000 
000056aa l       .debug_str	00000000 
000056b3 l       .debug_str	00000000 
000056ed l       .debug_str	00000000 
000056ff l       .debug_str	00000000 
0000572d l       .debug_str	00000000 
00000c78 l       .debug_str	00000000 
00005734 l       .debug_str	00000000 
00005740 l       .debug_str	00000000 
0000574a l       .debug_str	00000000 
00005754 l       .debug_str	00000000 
00005777 l       .debug_str	00000000 
0003b5ca l       .debug_str	00000000 
000057cc l       .debug_str	00000000 
0000582c l       .debug_str	00000000 
00005838 l       .debug_str	00000000 
00005888 l       .debug_str	00000000 
000058eb l       .debug_str	00000000 
00005952 l       .debug_str	00000000 
000059c1 l       .debug_str	00000000 
00005a51 l       .debug_str	00000000 
00063092 l       .debug_str	00000000 
00069443 l       .debug_str	00000000 
00005a55 l       .debug_str	00000000 
00005a7c l       .debug_str	00000000 
000628ff l       .debug_str	00000000 
00005a82 l       .debug_str	00000000 
00000364 l       .debug_str	00000000 
00005a89 l       .debug_str	00000000 
00063073 l       .debug_str	00000000 
00062e21 l       .debug_str	00000000 
00005a96 l       .debug_str	00000000 
00005aa0 l       .debug_str	00000000 
0004ed7b l       .debug_str	00000000 
00068311 l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
00005aaa l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
00005afe l       .debug_str	00000000 
00064dfe l       .debug_str	00000000 
0000cb1c l       .debug_str	00000000 
00005b02 l       .debug_str	00000000 
00005b0e l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
0000c621 l       .debug_str	00000000 
0006433a l       .debug_str	00000000 
00031b8a l       .debug_str	00000000 
00000c8a l       .debug_str	00000000 
0003ffd5 l       .debug_str	00000000 
00065d67 l       .debug_str	00000000 
00005b39 l       .debug_str	00000000 
00005b5d l       .debug_str	00000000 
000051c7 l       .debug_str	00000000 
000628d0 l       .debug_str	00000000 
0000e903 l       .debug_str	00000000 
00005b7d l       .debug_str	00000000 
0000b655 l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
00005bb8 l       .debug_str	00000000 
00005bbf l       .debug_str	00000000 
0002c776 l       .debug_str	00000000 
000007da l       .debug_str	00000000 
00005c00 l       .debug_str	00000000 
00005c47 l       .debug_str	00000000 
000021fb l       .debug_str	00000000 
0000a2e9 l       .debug_str	00000000 
00005c21 l       .debug_str	00000000 
00001f86 l       .debug_str	00000000 
00006490 l       .debug_str	00000000 
00005c43 l       .debug_str	00000000 
00005c4b l       .debug_str	00000000 
00005c56 l       .debug_str	00000000 
00005c6a l       .debug_str	00000000 
00005c73 l       .debug_str	00000000 
00005c7e l       .debug_str	00000000 
00005c8a l       .debug_str	00000000 
00005c77 l       .debug_str	00000000 
00005c93 l       .debug_str	00000000 
00005c9e l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000227b l       .debug_str	00000000 
000022d3 l       .debug_str	00000000 
00000c2a l       .debug_str	00000000 
00002320 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
0000232a l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00002336 l       .debug_str	00000000 
00005b1f l       .debug_str	00000000 
00005b13 l       .debug_str	00000000 
00005b07 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00057262 l       .debug_str	00000000 
000410bb l       .debug_str	00000000 
00003435 l       .debug_str	00000000 
00000b51 l       .debug_str	00000000 
00000b56 l       .debug_str	00000000 
00000b5c l       .debug_str	00000000 
00000b63 l       .debug_str	00000000 
00000b6b l       .debug_str	00000000 
000669f8 l       .debug_str	00000000 
0003d0fb l       .debug_str	00000000 
00002347 l       .debug_str	00000000 
0000234c l       .debug_str	00000000 
00002352 l       .debug_str	00000000 
00006188 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00002c41 l       .debug_str	00000000 
0000235a l       .debug_str	00000000 
00002363 l       .debug_str	00000000 
00000d4c l       .debug_str	00000000 
0000236b l       .debug_str	00000000 
00001f6d l       .debug_str	00000000 
00002371 l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00002380 l       .debug_str	00000000 
000023aa l       .debug_str	00000000 
000023ba l       .debug_str	00000000 
000023e3 l       .debug_str	00000000 
000023f2 l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00000d37 l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
00000d3d l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00000d50 l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
00000c45 l       .debug_str	00000000 
00000d59 l       .debug_str	00000000 
00000d65 l       .debug_str	00000000 
00000d8a l       .debug_str	00000000 
00000d7e l       .debug_str	00000000 
00000d8f l       .debug_str	00000000 
0000bfe3 l       .debug_str	00000000 
00001a1f l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00069452 l       .debug_str	00000000 
000010b6 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000d99 l       .debug_str	00000000 
00000c99 l       .debug_str	00000000 
00062a03 l       .debug_str	00000000 
00000da7 l       .debug_str	00000000 
00000db2 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
00000ebe l       .debug_str	00000000 
00000dc8 l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000def l       .debug_str	00000000 
00000e06 l       .debug_str	00000000 
00000e2a l       .debug_str	00000000 
00062a8c l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00000edb l       .debug_str	00000000 
00000e56 l       .debug_str	00000000 
00000e46 l       .debug_str	00000000 
00000e60 l       .debug_str	00000000 
00000ed0 l       .debug_str	00000000 
00000c56 l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
00000c70 l       .debug_str	00000000 
00000c7c l       .debug_str	00000000 
00040bba l       .debug_str	00000000 
00000c84 l       .debug_str	00000000 
00000c89 l       .debug_str	00000000 
00000c90 l       .debug_str	00000000 
00064e10 l       .debug_str	00000000 
00000ca3 l       .debug_str	00000000 
00000caa l       .debug_str	00000000 
00000ca6 l       .debug_str	00000000 
00000cb0 l       .debug_str	00000000 
00000cb8 l       .debug_str	00000000 
00000cbe l       .debug_str	00000000 
00000ce3 l       .debug_str	00000000 
00000cc9 l       .debug_str	00000000 
00000cec l       .debug_str	00000000 
00000d10 l       .debug_str	00000000 
0003bcfd l       .debug_str	00000000 
00066c14 l       .debug_str	00000000 
000023f8 l       .debug_str	00000000 
00011e7c l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
00001134 l       .debug_str	00000000 
00002412 l       .debug_str	00000000 
00002684 l       .debug_str	00000000 
00002416 l       .debug_str	00000000 
0000243f l       .debug_str	00000000 
00002474 l       .debug_str	00000000 
0000247a l       .debug_str	00000000 
00002481 l       .debug_str	00000000 
000026a9 l       .debug_str	00000000 
00002567 l       .debug_str	00000000 
0000248f l       .debug_str	00000000 
000024e0 l       .debug_str	00000000 
00002518 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00002549 l       .debug_str	00000000 
000025a0 l       .debug_str	00000000 
00002622 l       .debug_str	00000000 
00002659 l       .debug_str	00000000 
0000268a l       .debug_str	00000000 
000028fc l       .debug_str	00000000 
0000292a l       .debug_str	00000000 
000027cd l       .debug_str	00000000 
000026e3 l       .debug_str	00000000 
00002734 l       .debug_str	00000000 
00002775 l       .debug_str	00000000 
000027af l       .debug_str	00000000 
0000280f l       .debug_str	00000000 
00002891 l       .debug_str	00000000 
000028d1 l       .debug_str	00000000 
0000290b l       .debug_str	00000000 
00002b23 l       .debug_str	00000000 
00002a53 l       .debug_str	00000000 
0000296d l       .debug_str	00000000 
000029b9 l       .debug_str	00000000 
000029c7 l       .debug_str	00000000 
00002a18 l       .debug_str	00000000 
00002a2a l       .debug_str	00000000 
00002a35 l       .debug_str	00000000 
00002a66 l       .debug_str	00000000 
00002ae8 l       .debug_str	00000000 
00002af9 l       .debug_str	00000000 
00002b04 l       .debug_str	00000000 
00002b37 l       .debug_str	00000000 
00002b89 l       .debug_str	00000000 
00002b9c l       .debug_str	00000000 
00002bef l       .debug_str	00000000 
00069694 l       .debug_str	00000000 
00002c01 l       .debug_str	00000000 
0003d0d5 l       .debug_str	00000000 
00002c09 l       .debug_str	00000000 
0000d034 l       .debug_str	00000000 
00002c13 l       .debug_str	00000000 
00040a1c l       .debug_str	00000000 
00020225 l       .debug_str	00000000 
00002c1c l       .debug_str	00000000 
00002d97 l       .debug_str	00000000 
0002c770 l       .debug_str	00000000 
000044cb l       .debug_str	00000000 
0000b644 l       .debug_str	00000000 
00067983 l       .debug_str	00000000 
00005bda l       .debug_str	00000000 
0004c067 l       .debug_str	00000000 
00002c2d l       .debug_str	00000000 
00002c37 l       .debug_str	00000000 
0006523d l       .debug_str	00000000 
000021f7 l       .debug_str	00000000 
00005b50 l       .debug_str	00000000 
0006449e l       .debug_str	00000000 
00004467 l       .debug_str	00000000 
00005b90 l       .debug_str	00000000 
00002c3d l       .debug_str	00000000 
000011e4 l       .debug_str	00000000 
000059e5 l       .debug_str	00000000 
00005976 l       .debug_str	00000000 
00002c46 l       .debug_str	00000000 
00002c4c l       .debug_str	00000000 
00002c75 l       .debug_str	00000000 
0000ba07 l       .debug_str	00000000 
00004450 l       .debug_str	00000000 
00002c81 l       .debug_str	00000000 
00002cae l       .debug_str	00000000 
00002cb6 l       .debug_str	00000000 
00056d15 l       .debug_str	00000000 
00002cc1 l       .debug_str	00000000 
00002cea l       .debug_str	00000000 
00002cf2 l       .debug_str	00000000 
00002cf9 l       .debug_str	00000000 
00002d23 l       .debug_str	00000000 
0000b323 l       .debug_str	00000000 
00002d27 l       .debug_str	00000000 
0001d309 l       .debug_str	00000000 
00002d30 l       .debug_str	00000000 
00002d72 l       .debug_str	00000000 
00002d85 l       .debug_str	00000000 
0000a040 l     F .text	0000002e _ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$9add_usize17h4dc5739e759482d3E
0000a210 l     F .text	0000001c _ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h3e96443342d0c3c4E
0000a242 l     F .text	00000048 _ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17hb4588df65d5763e7E
0000a28a l     F .text	00000048 _ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hac7667fcdb859cc9E
0000a2d2 l     F .text	0000004a _ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17hcef50a31e19b04c5E
0000a31c l     F .text	0000004a _ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h46163c3ee8e044f0E
0000a3e8 l     F .text	000000f8 _ZN4core3ptr25swap_nonoverlapping_bytes17hb65fda32277fae74E
0001b8b0 l     O .text	00000039 str.1
00000000 l    df *ABS*	00000000 4zy7wo7d4w76mzvz
00000c77 l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
000010e4 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
000010ea l       .debug_str	00000000 
00008953 l       .debug_str	00000000 
000010f4 l       .debug_str	00000000 
0000898e l       .debug_str	00000000 
00015bed l       .debug_str	00000000 
00005db5 l       .debug_str	00000000 
00005dfe l       .debug_str	00000000 
00001a0d l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
00005ca9 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00001a24 l       .debug_str	00000000 
00005f81 l       .debug_str	00000000 
00001a29 l       .debug_str	00000000 
00001041 l       .debug_str	00000000 
00061d4b l       .debug_str	00000000 
0006523d l       .debug_str	00000000 
000011a9 l       .debug_str	00000000 
0000105f l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
0000881c l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
0000107f l       .debug_str	00000000 
00001085 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00001090 l       .debug_str	00000000 
0000109b l       .debug_str	00000000 
00008867 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
000108af l       .debug_str	00000000 
000010a2 l       .debug_str	00000000 
000010af l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
0003c3db l       .debug_str	00000000 
0001086b l       .debug_str	00000000 
000125b7 l       .debug_str	00000000 
00005cce l       .debug_str	00000000 
00005d02 l       .debug_str	00000000 
00005d4b l       .debug_str	00000000 
000010d1 l       .debug_str	00000000 
000010d7 l       .debug_str	00000000 
00005c47 l       .debug_str	00000000 
00067fb9 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 embedded_graphics.f187stpu-cgu.0
0000681b l       .debug_str	00000000 
00000e46 l       .debug_str	00000000 
00000e60 l       .debug_str	00000000 
00000ed0 l       .debug_str	00000000 
00066c14 l       .debug_str	00000000 
00000c56 l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
00000c70 l       .debug_str	00000000 
00000c7c l       .debug_str	00000000 
00040bba l       .debug_str	00000000 
00000c84 l       .debug_str	00000000 
00000c89 l       .debug_str	00000000 
00000c90 l       .debug_str	00000000 
00064e10 l       .debug_str	00000000 
00000ca3 l       .debug_str	00000000 
00000caa l       .debug_str	00000000 
00000ca6 l       .debug_str	00000000 
00000cb0 l       .debug_str	00000000 
00000cb8 l       .debug_str	00000000 
00000cbe l       .debug_str	00000000 
00000ce3 l       .debug_str	00000000 
00000cc9 l       .debug_str	00000000 
00000cec l       .debug_str	00000000 
00000d10 l       .debug_str	00000000 
0003bcfd l       .debug_str	00000000 
00005f5b l       .debug_str	00000000 
00001a29 l       .debug_str	00000000 
000011a9 l       .debug_str	00000000 
0000105f l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
0000881c l       .debug_str	00000000 
000010d1 l       .debug_str	00000000 
000010ea l       .debug_str	00000000 
00005f62 l       .debug_str	00000000 
00005f6b l       .debug_str	00000000 
00005f73 l       .debug_str	00000000 
00005f7c l       .debug_str	00000000 
0003c3db l       .debug_str	00000000 
00005f89 l       .debug_str	00000000 
00005f99 l       .debug_str	00000000 
00005faa l       .debug_str	00000000 
00001090 l       .debug_str	00000000 
0000109b l       .debug_str	00000000 
00008867 l       .debug_str	00000000 
00001041 l       .debug_str	00000000 
00005fbb l       .debug_str	00000000 
00001189 l       .debug_str	00000000 
00001197 l       .debug_str	00000000 
000088ca l       .debug_str	00000000 
00005fc4 l       .debug_str	00000000 
00005fca l       .debug_str	00000000 
00005fd5 l       .debug_str	00000000 
00005fdf l       .debug_str	00000000 
00005fe9 l       .debug_str	00000000 
00006031 l       .debug_str	00000000 
0000603a l       .debug_str	00000000 
00006082 l       .debug_str	00000000 
0000608b l       .debug_str	00000000 
000060d3 l       .debug_str	00000000 
00003e97 l       .debug_str	00000000 
000060dc l       .debug_str	00000000 
00006105 l       .debug_str	00000000 
0000610e l       .debug_str	00000000 
0000616b l       .debug_str	00000000 
00067983 l       .debug_str	00000000 
00006191 l       .debug_str	00000000 
000061b9 l       .debug_str	00000000 
000061eb l       .debug_str	00000000 
000033f4 l       .debug_str	00000000 
0000621c l       .debug_str	00000000 
00006279 l       .debug_str	00000000 
000062d6 l       .debug_str	00000000 
00006333 l       .debug_str	00000000 
00003431 l       .debug_str	00000000 
00006365 l       .debug_str	00000000 
000063aa l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
000063b6 l       .debug_str	00000000 
00061e97 l       .debug_str	00000000 
000063f2 l       .debug_str	00000000 
00006436 l       .debug_str	00000000 
00006441 l       .debug_str	00000000 
00006488 l       .debug_str	00000000 
00006496 l       .debug_str	00000000 
000064dd l       .debug_str	00000000 
000064eb l       .debug_str	00000000 
0000652b l       .debug_str	00000000 
00006533 l       .debug_str	00000000 
00006540 l       .debug_str	00000000 
00006545 l       .debug_str	00000000 
00006580 l       .debug_str	00000000 
000065be l       .debug_str	00000000 
000065f3 l       .debug_str	00000000 
0000660c l       .debug_str	00000000 
00006641 l       .debug_str	00000000 
0000665a l       .debug_str	00000000 
0000668f l       .debug_str	00000000 
000066a8 l       .debug_str	00000000 
00047006 l       .debug_str	00000000 
000066f3 l       .debug_str	00000000 
0000674a l       .debug_str	00000000 
00006759 l       .debug_str	00000000 
000067a4 l       .debug_str	00000000 
000034f9 l       .debug_str	00000000 
000068a0 l       .debug_str	00000000 
000068ab l       .debug_str	00000000 
00031d55 l       .debug_str	00000000 
00006922 l       .debug_str	00000000 
000069a7 l       .debug_str	00000000 
000069b2 l       .debug_str	00000000 
000628d0 l       .debug_str	00000000 
00006a3b l       .debug_str	00000000 
0000a838 l       .debug_str	00000000 
00006ab2 l       .debug_str	00000000 
000642ac l       .debug_str	00000000 
00006b47 l       .debug_str	00000000 
00006bde l       .debug_str	00000000 
00006c79 l       .debug_str	00000000 
00006d0e l       .debug_str	00000000 
00006da5 l       .debug_str	00000000 
00006e40 l       .debug_str	00000000 
00006f08 l       .debug_str	00000000 
00006f13 l       .debug_str	00000000 
00006fdf l       .debug_str	00000000 
0000706f l       .debug_str	00000000 
0000707b l       .debug_str	00000000 
00007121 l       .debug_str	00000000 
0000712d l       .debug_str	00000000 
000071d1 l       .debug_str	00000000 
00007273 l       .debug_str	00000000 
00007317 l       .debug_str	00000000 
0000736b l       .debug_str	00000000 
000073c0 l       .debug_str	00000000 
00007415 l       .debug_str	00000000 
00002dad l       .debug_str	00000000 
00007498 l       .debug_str	00000000 
0000751c l       .debug_str	00000000 
000075a0 l       .debug_str	00000000 
0002c751 l       .debug_str	00000000 
000075e7 l       .debug_str	00000000 
0000cb16 l       .debug_str	00000000 
0000762e l       .debug_str	00000000 
0000cb1c l       .debug_str	00000000 
00007675 l       .debug_str	00000000 
000076f3 l       .debug_str	00000000 
00007772 l       .debug_str	00000000 
0000780d l       .debug_str	00000000 
000078a1 l       .debug_str	00000000 
000078ee l       .debug_str	00000000 
000078fa l       .debug_str	00000000 
0000795d l       .debug_str	00000000 
000079a5 l       .debug_str	00000000 
00001134 l       .debug_str	00000000 
000079ad l       .debug_str	00000000 
00007a41 l       .debug_str	00000000 
00007aa7 l       .debug_str	00000000 
00007b38 l       .debug_str	00000000 
00007bd7 l       .debug_str	00000000 
00007c68 l       .debug_str	00000000 
00007d07 l       .debug_str	00000000 
00007da9 l       .debug_str	00000000 
00007e3a l       .debug_str	00000000 
00007ee8 l       .debug_str	00000000 
00007f98 l       .debug_str	00000000 
0000804c l       .debug_str	00000000 
0000813f l       .debug_str	00000000 
0000814a l       .debug_str	00000000 
00008241 l       .debug_str	00000000 
000082ed l       .debug_str	00000000 
000082f7 l       .debug_str	00000000 
00008369 l       .debug_str	00000000 
000083de l       .debug_str	00000000 
00008451 l       .debug_str	00000000 
000084c2 l       .debug_str	00000000 
00008535 l       .debug_str	00000000 
000085ac l       .debug_str	00000000 
00008621 l       .debug_str	00000000 
00008696 l       .debug_str	00000000 
00008706 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00008792 l       .debug_str	00000000 
0002c770 l       .debug_str	00000000 
00001f8b l       .debug_str	00000000 
00008798 l       .debug_str	00000000 
00005a7c l       .debug_str	00000000 
00031b84 l       .debug_str	00000000 
00004adf l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
00005b07 l       .debug_str	00000000 
00005aaa l       .debug_str	00000000 
00006490 l       .debug_str	00000000 
0000879e l       .debug_str	00000000 
000087a8 l       .debug_str	00000000 
000087b2 l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
000087bc l       .debug_str	00000000 
000087ed l       .debug_str	00000000 
000699b0 l       .debug_str	00000000 
00001f86 l       .debug_str	00000000 
00008822 l       .debug_str	00000000 
0000882c l       .debug_str	00000000 
000007da l       .debug_str	00000000 
00008836 l       .debug_str	00000000 
0000883f l       .debug_str	00000000 
0000886e l       .debug_str	00000000 
0000887b l       .debug_str	00000000 
0002c065 l       .debug_str	00000000 
0000887e l       .debug_str	00000000 
00008881 l       .debug_str	00000000 
00008884 l       .debug_str	00000000 
00008887 l       .debug_str	00000000 
0000888a l       .debug_str	00000000 
000088d8 l       .debug_str	00000000 
00005c4b l       .debug_str	00000000 
00008922 l       .debug_str	00000000 
00005c56 l       .debug_str	00000000 
00005c6a l       .debug_str	00000000 
00005c77 l       .debug_str	00000000 
00005c93 l       .debug_str	00000000 
00005c9e l       .debug_str	00000000 
00008953 l       .debug_str	00000000 
0000892d l       .debug_str	00000000 
00008986 l       .debug_str	00000000 
00008961 l       .debug_str	00000000 
000089b7 l       .debug_str	00000000 
00008993 l       .debug_str	00000000 
000089e8 l       .debug_str	00000000 
000089c3 l       .debug_str	00000000 
00008a1c l       .debug_str	00000000 
000089f5 l       .debug_str	00000000 
00008a51 l       .debug_str	00000000 
00008a2b l       .debug_str	00000000 
00008a85 l       .debug_str	00000000 
00008a5f l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
00005ea6 l       .debug_str	00000000 
00005f06 l       .debug_str	00000000 
00000c2a l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
000087b7 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
000087ad l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
000087a3 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00057262 l       .debug_str	00000000 
000410bb l       .debug_str	00000000 
00003435 l       .debug_str	00000000 
00000b51 l       .debug_str	00000000 
00000b56 l       .debug_str	00000000 
00000b5c l       .debug_str	00000000 
00000b63 l       .debug_str	00000000 
00000b6b l       .debug_str	00000000 
000669f8 l       .debug_str	00000000 
0003d0fb l       .debug_str	00000000 
00002347 l       .debug_str	00000000 
0000234c l       .debug_str	00000000 
00002352 l       .debug_str	00000000 
00006188 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
0003fbe5 l       .debug_str	00000000 
000023f2 l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00000d37 l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
00000d3d l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00000d4c l       .debug_str	00000000 
00000d50 l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
00000c45 l       .debug_str	00000000 
00000d59 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d65 l       .debug_str	00000000 
00000d8a l       .debug_str	00000000 
00000d7e l       .debug_str	00000000 
00000d8f l       .debug_str	00000000 
0000bfe3 l       .debug_str	00000000 
00001a1f l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00069452 l       .debug_str	00000000 
000010b6 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00000d99 l       .debug_str	00000000 
00000c99 l       .debug_str	00000000 
00062a03 l       .debug_str	00000000 
00000da7 l       .debug_str	00000000 
00000db2 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
00000ebe l       .debug_str	00000000 
00000dc8 l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000def l       .debug_str	00000000 
00000e06 l       .debug_str	00000000 
00000e2a l       .debug_str	00000000 
00062a8c l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00000edb l       .debug_str	00000000 
00000e56 l       .debug_str	00000000 
0000a864 l     F .text	00000044 _ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$i32$GT$3cmp17hca032127d60ba8a6E
0000a958 l     F .text	00000038 _ZN4core3fmt9Arguments6new_v117h5508566f218d4fc1E
0000a990 l     F .text	0000001a _ZN4core3ops8function6FnOnce9call_once17h3bc69fc6db4dc474E
0001b9f0 l     O .text	0000001c str.1
0001ba20 l     O .text	00000021 str.2
00000000 l    df *ABS*	00000000 hash32.dv7iilq5-cgu.0
00062da4 l       .debug_str	00000000 
0000329e l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
00009100 l       .debug_str	00000000 
00009142 l       .debug_str	00000000 
0000915e l       .debug_str	00000000 
00009190 l       .debug_str	00000000 
0000919d l       .debug_str	00000000 
000032ef l       .debug_str	00000000 
000091cf l       .debug_str	00000000 
00005a52 l       .debug_str	00000000 
00009234 l       .debug_str	00000000 
00009264 l       .debug_str	00000000 
0000928b l       .debug_str	00000000 
0000349e l       .debug_str	00000000 
000092b1 l       .debug_str	00000000 
000092f6 l       .debug_str	00000000 
00009302 l       .debug_str	00000000 
00009348 l       .debug_str	00000000 
00009355 l       .debug_str	00000000 
0000939b l       .debug_str	00000000 
000093a8 l       .debug_str	00000000 
000093e6 l       .debug_str	00000000 
000093ec l       .debug_str	00000000 
000034f1 l       .debug_str	00000000 
00009433 l       .debug_str	00000000 
00003544 l       .debug_str	00000000 
0000947a l       .debug_str	00000000 
0000359b l       .debug_str	00000000 
000035ab l       .debug_str	00000000 
000094c5 l       .debug_str	00000000 
00003604 l       .debug_str	00000000 
00009510 l       .debug_str	00000000 
00003869 l       .debug_str	00000000 
00009546 l       .debug_str	00000000 
000038be l       .debug_str	00000000 
00009580 l       .debug_str	00000000 
000095bc l       .debug_str	00000000 
0000393f l       .debug_str	00000000 
000095e2 l       .debug_str	00000000 
00003972 l       .debug_str	00000000 
00009609 l       .debug_str	00000000 
00003b8c l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
00009657 l       .debug_str	00000000 
00003bfc l       .debug_str	00000000 
000096a8 l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
000096fa l       .debug_str	00000000 
0000974f l       .debug_str	00000000 
00003c5d l       .debug_str	00000000 
000097a5 l       .debug_str	00000000 
00003a70 l       .debug_str	00000000 
000097fb l       .debug_str	00000000 
00003d01 l       .debug_str	00000000 
00009890 l       .debug_str	00000000 
000098de l       .debug_str	00000000 
0000b644 l       .debug_str	00000000 
000098ed l       .debug_str	00000000 
0000993e l       .debug_str	00000000 
00020225 l       .debug_str	00000000 
00009956 l       .debug_str	00000000 
000099ab l       .debug_str	00000000 
000099c7 l       .debug_str	00000000 
000099cf l       .debug_str	00000000 
00009a15 l       .debug_str	00000000 
00009a1d l       .debug_str	00000000 
00003b1c l       .debug_str	00000000 
00009a66 l       .debug_str	00000000 
00009aa2 l       .debug_str	00000000 
00009ab0 l       .debug_str	00000000 
000642ac l       .debug_str	00000000 
00009b1f l       .debug_str	00000000 
0000483a l       .debug_str	00000000 
000011e4 l       .debug_str	00000000 
00009b70 l       .debug_str	00000000 
00004897 l       .debug_str	00000000 
00009bc1 l       .debug_str	00000000 
00004901 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00002cb6 l       .debug_str	00000000 
00056d15 l       .debug_str	00000000 
00002cc1 l       .debug_str	00000000 
00000d4c l       .debug_str	00000000 
0006523d l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
000021f7 l       .debug_str	00000000 
00005b50 l       .debug_str	00000000 
00009c19 l       .debug_str	00000000 
00009c7c l       .debug_str	00000000 
00009ca6 l       .debug_str	00000000 
00009d09 l       .debug_str	00000000 
00009d12 l       .debug_str	00000000 
00009d7f l       .debug_str	00000000 
00009d91 l       .debug_str	00000000 
00009e02 l       .debug_str	00000000 
00009e18 l       .debug_str	00000000 
00002dad l       .debug_str	00000000 
00009e78 l       .debug_str	00000000 
00009eab l       .debug_str	00000000 
00009f15 l       .debug_str	00000000 
00009f48 l       .debug_str	00000000 
00009f4d l       .debug_str	00000000 
00009fb1 l       .debug_str	00000000 
00066b6d l       .debug_str	00000000 
0000a00c l       .debug_str	00000000 
0000a048 l       .debug_str	00000000 
0000a056 l       .debug_str	00000000 
0000a085 l       .debug_str	00000000 
00005b07 l       .debug_str	00000000 
000628ff l       .debug_str	00000000 
00005a82 l       .debug_str	00000000 
00000364 l       .debug_str	00000000 
00063073 l       .debug_str	00000000 
00062e21 l       .debug_str	00000000 
00005a89 l       .debug_str	00000000 
00005a96 l       .debug_str	00000000 
00005aa0 l       .debug_str	00000000 
0004ed7b l       .debug_str	00000000 
00068311 l       .debug_str	00000000 
00005a7c l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
00005afe l       .debug_str	00000000 
00064dfe l       .debug_str	00000000 
0000cb1c l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
0000c621 l       .debug_str	00000000 
0006433a l       .debug_str	00000000 
00031b8a l       .debug_str	00000000 
00000c8a l       .debug_str	00000000 
0003ffd5 l       .debug_str	00000000 
00065d67 l       .debug_str	00000000 
00002da0 l       .debug_str	00000000 
00005b39 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00002268 l       .debug_str	00000000 
0001d309 l       .debug_str	00000000 
00069443 l       .debug_str	00000000 
0003d666 l       .debug_str	00000000 
0006449e l       .debug_str	00000000 
0000a08d l       .debug_str	00000000 
0000a0a5 l       .debug_str	00000000 
000021fb l       .debug_str	00000000 
0000a0c2 l       .debug_str	00000000 
0000a050 l       .debug_str	00000000 
0000a0db l       .debug_str	00000000 
0000a0f7 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
00008a93 l       .debug_str	00000000 
00008ae8 l       .debug_str	00000000 
00008b32 l       .debug_str	00000000 
00008b39 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00005c53 l       .debug_str	00000000 
0000892a l       .debug_str	00000000 
000108ed l       .debug_str	00000000 
00066407 l       .debug_str	00000000 
0000a09f l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00002c41 l       .debug_str	00000000 
00001f6d l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00002371 l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00008b41 l       .debug_str	00000000 
000023aa l       .debug_str	00000000 
00008b6b l       .debug_str	00000000 
00008b95 l       .debug_str	00000000 
00008ba2 l       .debug_str	00000000 
00002c75 l       .debug_str	00000000 
00008bcb l       .debug_str	00000000 
000023e3 l       .debug_str	00000000 
000669f8 l       .debug_str	00000000 
000023f2 l       .debug_str	00000000 
00066c14 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
000023f8 l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00011e7c l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
00001134 l       .debug_str	00000000 
00002412 l       .debug_str	00000000 
00002684 l       .debug_str	00000000 
00008bf4 l       .debug_str	00000000 
0000243f l       .debug_str	00000000 
00002474 l       .debug_str	00000000 
0000247a l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00002481 l       .debug_str	00000000 
000026a9 l       .debug_str	00000000 
00002567 l       .debug_str	00000000 
00008c1d l       .debug_str	00000000 
000024e0 l       .debug_str	00000000 
00002518 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00002549 l       .debug_str	00000000 
00008c6e l       .debug_str	00000000 
00002622 l       .debug_str	00000000 
00002659 l       .debug_str	00000000 
0000268a l       .debug_str	00000000 
000028fc l       .debug_str	00000000 
0000292a l       .debug_str	00000000 
000027cd l       .debug_str	00000000 
00008cf0 l       .debug_str	00000000 
00002734 l       .debug_str	00000000 
00002775 l       .debug_str	00000000 
000027af l       .debug_str	00000000 
00008d41 l       .debug_str	00000000 
00002891 l       .debug_str	00000000 
000028d1 l       .debug_str	00000000 
0000290b l       .debug_str	00000000 
00002b23 l       .debug_str	00000000 
00002a53 l       .debug_str	00000000 
00008dc3 l       .debug_str	00000000 
000029b9 l       .debug_str	00000000 
00008e0f l       .debug_str	00000000 
00002a18 l       .debug_str	00000000 
00002a2a l       .debug_str	00000000 
00002a35 l       .debug_str	00000000 
00008e60 l       .debug_str	00000000 
00002ae8 l       .debug_str	00000000 
00002af9 l       .debug_str	00000000 
00002b04 l       .debug_str	00000000 
00008ee2 l       .debug_str	00000000 
00002b89 l       .debug_str	00000000 
00008f34 l       .debug_str	00000000 
00002bef l       .debug_str	00000000 
00069694 l       .debug_str	00000000 
00002c01 l       .debug_str	00000000 
00002c09 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000d99 l       .debug_str	00000000 
00002cae l       .debug_str	00000000 
0000d034 l       .debug_str	00000000 
00002cea l       .debug_str	00000000 
00008f87 l       .debug_str	00000000 
00008fb0 l       .debug_str	00000000 
00008fbd l       .debug_str	00000000 
00008fc7 l       .debug_str	00000000 
00062a03 l       .debug_str	00000000 
00006490 l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
00000574 l       .debug_str	00000000 
000628d0 l       .debug_str	00000000 
00008fcb l       .debug_str	00000000 
00062df5 l       .debug_str	00000000 
0000a0f1 l       .debug_str	00000000 
0000a0bb l       .debug_str	00000000 
00008fd5 l       .debug_str	00000000 
000031f9 l       .debug_str	00000000 
0000902a l       .debug_str	00000000 
00009068 l       .debug_str	00000000 
00009080 l       .debug_str	00000000 
00003241 l       .debug_str	00000000 
000090be l       .debug_str	00000000 
0001bb50 l     O .text	00000039 str.0
00000000 l    df *ABS*	00000000 memchr.18xxlz3r-cgu.0
0000a887 l       .debug_str	00000000 
00000cb8 l       .debug_str	00000000 
00000cbe l       .debug_str	00000000 
00000ce3 l       .debug_str	00000000 
00000cc9 l       .debug_str	00000000 
00000cec l       .debug_str	00000000 
00000d10 l       .debug_str	00000000 
0003bcfd l       .debug_str	00000000 
00005f5b l       .debug_str	00000000 
00002c09 l       .debug_str	00000000 
00002cf2 l       .debug_str	00000000 
00008836 l       .debug_str	00000000 
0000a1f2 l       .debug_str	00000000 
0000a227 l       .debug_str	00000000 
0000cb1c l       .debug_str	00000000 
00020225 l       .debug_str	00000000 
000044cb l       .debug_str	00000000 
00067983 l       .debug_str	00000000 
0000a233 l       .debug_str	00000000 
0000a26b l       .debug_str	00000000 
0000a285 l       .debug_str	00000000 
0000a28f l       .debug_str	00000000 
0000a297 l       .debug_str	00000000 
0000a29f l       .debug_str	00000000 
0000a2db l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
0000a2ee l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
0000a2f6 l       .debug_str	00000000 
0000a32e l       .debug_str	00000000 
00001134 l       .debug_str	00000000 
0000a336 l       .debug_str	00000000 
0000a36e l       .debug_str	00000000 
0000a376 l       .debug_str	00000000 
0000a3ae l       .debug_str	00000000 
0000a3c8 l       .debug_str	00000000 
0000a3d1 l       .debug_str	00000000 
0000a409 l       .debug_str	00000000 
0000a412 l       .debug_str	00000000 
0000a44a l       .debug_str	00000000 
00002e4a l       .debug_str	00000000 
0001d309 l       .debug_str	00000000 
0000a4d2 l       .debug_str	00000000 
0000a51a l       .debug_str	00000000 
0000a525 l       .debug_str	00000000 
00009068 l       .debug_str	00000000 
0000a563 l       .debug_str	00000000 
00009142 l       .debug_str	00000000 
0000a5a5 l       .debug_str	00000000 
00009190 l       .debug_str	00000000 
00003e97 l       .debug_str	00000000 
0000a5d7 l       .debug_str	00000000 
0000a600 l       .debug_str	00000000 
0000a60b l       .debug_str	00000000 
0000a630 l       .debug_str	00000000 
00005b07 l       .debug_str	00000000 
0000a68f l       .debug_str	00000000 
0000a6b9 l       .debug_str	00000000 
0000a6e1 l       .debug_str	00000000 
0000a719 l       .debug_str	00000000 
0000a74a l       .debug_str	00000000 
0000a756 l       .debug_str	00000000 
0000a7b5 l       .debug_str	00000000 
00003431 l       .debug_str	00000000 
0000a7e7 l       .debug_str	00000000 
0000a82f l       .debug_str	00000000 
00002da0 l       .debug_str	00000000 
0000a83c l       .debug_str	00000000 
0000a897 l       .debug_str	00000000 
0000a8a5 l       .debug_str	00000000 
00003544 l       .debug_str	00000000 
0000a8ec l       .debug_str	00000000 
0000a934 l       .debug_str	00000000 
0000a941 l       .debug_str	00000000 
0000a98b l       .debug_str	00000000 
0000a99a l       .debug_str	00000000 
00003604 l       .debug_str	00000000 
000035ab l       .debug_str	00000000 
0000a9e5 l       .debug_str	00000000 
00006540 l       .debug_str	00000000 
0000a9f6 l       .debug_str	00000000 
0000aa31 l       .debug_str	00000000 
0000aa77 l       .debug_str	00000000 
0000aaae l       .debug_str	00000000 
0000aac7 l       .debug_str	00000000 
0000aad3 l       .debug_str	00000000 
00003b8c l       .debug_str	00000000 
0000ab25 l       .debug_str	00000000 
00003bfc l       .debug_str	00000000 
0000ab7a l       .debug_str	00000000 
00003a70 l       .debug_str	00000000 
0000abd0 l       .debug_str	00000000 
0000aab4 l       .debug_str	00000000 
0000ac03 l       .debug_str	00000000 
00009a15 l       .debug_str	00000000 
0000ac49 l       .debug_str	00000000 
00003b1c l       .debug_str	00000000 
00001f6d l       .debug_str	00000000 
0006523d l       .debug_str	00000000 
000021f7 l       .debug_str	00000000 
0000ac92 l       .debug_str	00000000 
0000b644 l       .debug_str	00000000 
0000aca3 l       .debug_str	00000000 
0000ad18 l       .debug_str	00000000 
0000ad45 l       .debug_str	00000000 
00009aa2 l       .debug_str	00000000 
0000ad81 l       .debug_str	00000000 
0000adc0 l       .debug_str	00000000 
0000add1 l       .debug_str	00000000 
00009d7f l       .debug_str	00000000 
0000ae5d l       .debug_str	00000000 
0000aee0 l       .debug_str	00000000 
0000af0f l       .debug_str	00000000 
00005138 l       .debug_str	00000000 
0000af5c l       .debug_str	00000000 
0000af8c l       .debug_str	00000000 
0000afda l       .debug_str	00000000 
0000b00a l       .debug_str	00000000 
0000b058 l       .debug_str	00000000 
0000b088 l       .debug_str	00000000 
0000b0d6 l       .debug_str	00000000 
0000b107 l       .debug_str	00000000 
0000b156 l       .debug_str	00000000 
0000b187 l       .debug_str	00000000 
0000b1d6 l       .debug_str	00000000 
0000b206 l       .debug_str	00000000 
0000b20e l       .debug_str	00000000 
0000b23e l       .debug_str	00000000 
0000b246 l       .debug_str	00000000 
0000b284 l       .debug_str	00000000 
0000b299 l       .debug_str	00000000 
00031d55 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
0000b2c5 l       .debug_str	00000000 
0002c770 l       .debug_str	00000000 
00000364 l       .debug_str	00000000 
00063073 l       .debug_str	00000000 
00062e21 l       .debug_str	00000000 
00005a96 l       .debug_str	00000000 
00005aa0 l       .debug_str	00000000 
0004ed7b l       .debug_str	00000000 
00068311 l       .debug_str	00000000 
00005a7c l       .debug_str	00000000 
00031b84 l       .debug_str	00000000 
00004adf l       .debug_str	00000000 
0000b2cd l       .debug_str	00000000 
00005afe l       .debug_str	00000000 
00064dfe l       .debug_str	00000000 
0006449e l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
000628d0 l       .debug_str	00000000 
00069443 l       .debug_str	00000000 
00002dad l       .debug_str	00000000 
00005b50 l       .debug_str	00000000 
0000b323 l       .debug_str	00000000 
00002d27 l       .debug_str	00000000 
0000b322 l       .debug_str	00000000 
0000b326 l       .debug_str	00000000 
0000b330 l       .debug_str	00000000 
00001f73 l       .debug_str	00000000 
00001f7c l       .debug_str	00000000 
00001f86 l       .debug_str	00000000 
00001f91 l       .debug_str	00000000 
0000b336 l       .debug_str	00000000 
0000b33a l       .debug_str	00000000 
0000a2e9 l       .debug_str	00000000 
0002c648 l       .debug_str	00000000 
0000b33e l       .debug_str	00000000 
0000b342 l       .debug_str	00000000 
0000b346 l       .debug_str	00000000 
0000b34b l       .debug_str	00000000 
0000b34a l       .debug_str	00000000 
0000b34e l       .debug_str	00000000 
0000b352 l       .debug_str	00000000 
000628ff l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000a100 l       .debug_str	00000000 
0000a155 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00057262 l       .debug_str	00000000 
000410bb l       .debug_str	00000000 
00003435 l       .debug_str	00000000 
00000b51 l       .debug_str	00000000 
00000b56 l       .debug_str	00000000 
00000b5c l       .debug_str	00000000 
00000b63 l       .debug_str	00000000 
00000b6b l       .debug_str	00000000 
000669f8 l       .debug_str	00000000 
0003d0fb l       .debug_str	00000000 
00002347 l       .debug_str	00000000 
0000234c l       .debug_str	00000000 
00002352 l       .debug_str	00000000 
00006188 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00002371 l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
0000a19f l       .debug_str	00000000 
00008b95 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
0000a1c9 l       .debug_str	00000000 
00002c75 l       .debug_str	00000000 
0003fbe5 l       .debug_str	00000000 
000023f2 l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00000d37 l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
00000d3d l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00000d4c l       .debug_str	00000000 
00000d50 l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
00000c2a l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
00000c45 l       .debug_str	00000000 
00000d59 l       .debug_str	00000000 
00000d65 l       .debug_str	00000000 
00000d8a l       .debug_str	00000000 
00000d7e l       .debug_str	00000000 
00000d8f l       .debug_str	00000000 
0000bfe3 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00001a1f l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00069452 l       .debug_str	00000000 
000010b6 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00000d99 l       .debug_str	00000000 
00000c99 l       .debug_str	00000000 
00062a03 l       .debug_str	00000000 
00000da7 l       .debug_str	00000000 
00000db2 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
00000ebe l       .debug_str	00000000 
00000dc8 l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000def l       .debug_str	00000000 
00000e06 l       .debug_str	00000000 
00000e2a l       .debug_str	00000000 
00062a8c l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00000edb l       .debug_str	00000000 
00000e56 l       .debug_str	00000000 
00000e46 l       .debug_str	00000000 
00000e60 l       .debug_str	00000000 
00000ed0 l       .debug_str	00000000 
00066c14 l       .debug_str	00000000 
00000c56 l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
00000c70 l       .debug_str	00000000 
00000c7c l       .debug_str	00000000 
00040bba l       .debug_str	00000000 
00000c84 l       .debug_str	00000000 
00000c89 l       .debug_str	00000000 
00000c90 l       .debug_str	00000000 
00064e10 l       .debug_str	00000000 
00000ca3 l       .debug_str	00000000 
00000caa l       .debug_str	00000000 
00000ca6 l       .debug_str	00000000 
00000cb0 l       .debug_str	00000000 
0000afb6 l     F .text	00000048 _ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hb9815a64ffd59df2E
0000affe l     F .text	0000002e _ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17haf166df4609a463eE
0000b02c l     F .text	0000004a _ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17hf5fe5fe53f40a0a3E
0001bcf0 l     O .text	00000039 str.0
00000000 l    df *ABS*	00000000 20sa72t7mlmsnkr9
00000cc9 l       .debug_str	00000000 
00000cb8 l       .debug_str	00000000 
000010b6 l       .debug_str	00000000 
00000cbe l       .debug_str	00000000 
00000ce3 l       .debug_str	00000000 
00000cec l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000d10 l       .debug_str	00000000 
00062a8c l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00000d37 l       .debug_str	00000000 
00000d3d l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00000d4c l       .debug_str	00000000 
00000d50 l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
00000c2a l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
00000c45 l       .debug_str	00000000 
00000d59 l       .debug_str	00000000 
00000d65 l       .debug_str	00000000 
00000d8a l       .debug_str	00000000 
00000d7e l       .debug_str	00000000 
00000d8f l       .debug_str	00000000 
00000d99 l       .debug_str	00000000 
00062a03 l       .debug_str	00000000 
00000da7 l       .debug_str	00000000 
00000db2 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
00000dc8 l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000def l       .debug_str	00000000 
00000e06 l       .debug_str	00000000 
00000e2a l       .debug_str	00000000 
00000e56 l       .debug_str	00000000 
00000e46 l       .debug_str	00000000 
00000e60 l       .debug_str	00000000 
00000ed0 l       .debug_str	00000000 
00000ebe l       .debug_str	00000000 
00000edb l       .debug_str	00000000 
0003bcfd l       .debug_str	00000000 
0003bcf1 l       .debug_str	00000000 
0003188c l       .debug_str	00000000 
0001d309 l       .debug_str	00000000 
0000b695 l       .debug_str	00000000 
0000b6ac l       .debug_str	00000000 
00065bff l       .debug_str	00000000 
00063af3 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00001cbe l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00001cc2 l       .debug_str	00000000 
00001ccd l       .debug_str	00000000 
00001ce8 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
00000f10 l       .debug_str	00000000 
00000f18 l       .debug_str	00000000 
00000f23 l       .debug_str	00000000 
00000f2e l       .debug_str	00000000 
00000f3b l       .debug_str	00000000 
00000f46 l       .debug_str	00000000 
00000f4e l       .debug_str	00000000 
00000f59 l       .debug_str	00000000 
00000f64 l       .debug_str	00000000 
00000f6e l       .debug_str	00000000 
00000f79 l       .debug_str	00000000 
00000f84 l       .debug_str	00000000 
00000f91 l       .debug_str	00000000 
00000f9d l       .debug_str	00000000 
00000faa l       .debug_str	00000000 
00000fb8 l       .debug_str	00000000 
00000fc2 l       .debug_str	00000000 
00017cbe l       .debug_str	00000000 
00057262 l       .debug_str	00000000 
000410bb l       .debug_str	00000000 
00003435 l       .debug_str	00000000 
00000b51 l       .debug_str	00000000 
00000b56 l       .debug_str	00000000 
00000b5c l       .debug_str	00000000 
00000b63 l       .debug_str	00000000 
00000b6b l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00001afe l       .debug_str	00000000 
0000b36d l       .debug_str	00000000 
0000d443 l       .debug_str	00000000 
0000b642 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00062c5e l       .debug_str	00000000 
0000b6a7 l       .debug_str	00000000 
0000b6be l       .debug_str	00000000 
0000b375 l       .debug_str	00000000 
00047006 l       .debug_str	00000000 
0000b3a0 l       .debug_str	00000000 
00068297 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00056d15 l       .debug_str	00000000 
0000100e l       .debug_str	00000000 
0000b3cc l       .debug_str	00000000 
0006959b l       .debug_str	00000000 
0000b43d l       .debug_str	00000000 
0000b469 l       .debug_str	00000000 
0000b496 l       .debug_str	00000000 
0000b502 l       .debug_str	00000000 
0000b50a l       .debug_str	00000000 
0000b577 l       .debug_str	00000000 
0000b580 l       .debug_str	00000000 
0000b5ad l       .debug_str	00000000 
0000b627 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
0000b630 l       .debug_str	00000000 
0000b688 l       .debug_str	00000000 
00062e3e l       .debug_str	00000000 
0000b646 l       .debug_str	00000000 
0000b650 l       .debug_str	00000000 
0000b65b l       .debug_str	00000000 
0000b665 l       .debug_str	00000000 
0000b684 l       .debug_str	00000000 
0000b66e l       .debug_str	00000000 
00000365 l       .debug_str	00000000 
00001f73 l       .debug_str	00000000 
000087b7 l       .debug_str	00000000 
00001f7c l       .debug_str	00000000 
00001f86 l       .debug_str	00000000 
00001f8b l       .debug_str	00000000 
00001f91 l       .debug_str	00000000 
00001f96 l       .debug_str	00000000 
00000c56 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
00000c70 l       .debug_str	00000000 
00000c7c l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00040bba l       .debug_str	00000000 
00000c84 l       .debug_str	00000000 
00000c89 l       .debug_str	00000000 
00000c90 l       .debug_str	00000000 
00064e10 l       .debug_str	00000000 
00001a1f l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00069452 l       .debug_str	00000000 
0000bfe3 l       .debug_str	00000000 
00000c99 l       .debug_str	00000000 
00000ca3 l       .debug_str	00000000 
00000caa l       .debug_str	00000000 
00000ca6 l       .debug_str	00000000 
00000cb0 l       .debug_str	00000000 
0001bf10 l     O .text	00000021 str.0
00000000 l    df *ABS*	00000000 2ubt21btzf0kfnr9
0000b715 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
00000f10 l       .debug_str	00000000 
00000f18 l       .debug_str	00000000 
00000f23 l       .debug_str	00000000 
00000f2e l       .debug_str	00000000 
00000f3b l       .debug_str	00000000 
00000c8a l       .debug_str	00000000 
00000f46 l       .debug_str	00000000 
00000f4e l       .debug_str	00000000 
00000f59 l       .debug_str	00000000 
00000f64 l       .debug_str	00000000 
00000f6e l       .debug_str	00000000 
00000f79 l       .debug_str	00000000 
00000f84 l       .debug_str	00000000 
00000f91 l       .debug_str	00000000 
00000f9d l       .debug_str	00000000 
00000faa l       .debug_str	00000000 
00000fb8 l       .debug_str	00000000 
00000fc2 l       .debug_str	00000000 
00017cbe l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00002cae l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
0000b6c4 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 49b1vg044y0fs5ls
0006298d l       .debug_str	00000000 
00000c99 l       .debug_str	00000000 
00000ca3 l       .debug_str	00000000 
00000caa l       .debug_str	00000000 
00000ca6 l       .debug_str	00000000 
00000cb0 l       .debug_str	00000000 
00000cb8 l       .debug_str	00000000 
000010b6 l       .debug_str	00000000 
00000cbe l       .debug_str	00000000 
00000ce3 l       .debug_str	00000000 
00000cc9 l       .debug_str	00000000 
00000cec l       .debug_str	00000000 
00000d10 l       .debug_str	00000000 
00062a8c l       .debug_str	00000000 
00000d37 l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
00000d3d l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00000d4c l       .debug_str	00000000 
00000d50 l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
00000c2a l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
00000c45 l       .debug_str	00000000 
00000d59 l       .debug_str	00000000 
00000d65 l       .debug_str	00000000 
00000d8a l       .debug_str	00000000 
00000d7e l       .debug_str	00000000 
00000d8f l       .debug_str	00000000 
00000d99 l       .debug_str	00000000 
00062a03 l       .debug_str	00000000 
00000da7 l       .debug_str	00000000 
00000db2 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
00000dc8 l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000def l       .debug_str	00000000 
00000e06 l       .debug_str	00000000 
00000e2a l       .debug_str	00000000 
00000e56 l       .debug_str	00000000 
00000e46 l       .debug_str	00000000 
00000e60 l       .debug_str	00000000 
00000ed0 l       .debug_str	00000000 
00000ebe l       .debug_str	00000000 
00000edb l       .debug_str	00000000 
0003bcfd l       .debug_str	00000000 
0003bcf1 l       .debug_str	00000000 
0000b871 l       .debug_str	00000000 
00002c41 l       .debug_str	00000000 
00001f6d l       .debug_str	00000000 
0006523d l       .debug_str	00000000 
000021f7 l       .debug_str	00000000 
0000ba13 l       .debug_str	00000000 
000021fb l       .debug_str	00000000 
00069443 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00057262 l       .debug_str	00000000 
000410bb l       .debug_str	00000000 
00003435 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000b51 l       .debug_str	00000000 
00000b56 l       .debug_str	00000000 
00000b5c l       .debug_str	00000000 
00000b63 l       .debug_str	00000000 
00000b6b l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00068126 l       .debug_str	00000000 
0000b737 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00069102 l       .debug_str	00000000 
0000b744 l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
0001d309 l       .debug_str	00000000 
000054e8 l       .debug_str	00000000 
0000b74c l       .debug_str	00000000 
0000b9f2 l       .debug_str	00000000 
0000b754 l       .debug_str	00000000 
0000b7d9 l       .debug_str	00000000 
0000b7ef l       .debug_str	00000000 
00064f6f l       .debug_str	00000000 
0000b816 l       .debug_str	00000000 
00047006 l       .debug_str	00000000 
0000b83e l       .debug_str	00000000 
0000b86c l       .debug_str	00000000 
0000b876 l       .debug_str	00000000 
0000b8a1 l       .debug_str	00000000 
0000b8a8 l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
0000b8d0 l       .debug_str	00000000 
000694c3 l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
0000b8fd l       .debug_str	00000000 
0000b929 l       .debug_str	00000000 
0000b931 l       .debug_str	00000000 
0000b961 l       .debug_str	00000000 
0000b96c l       .debug_str	00000000 
0000b999 l       .debug_str	00000000 
0000b9a2 l       .debug_str	00000000 
0000b9d8 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
0000b9e9 l       .debug_str	00000000 
00061e98 l       .debug_str	00000000 
0000b870 l       .debug_str	00000000 
00001f73 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00020225 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
0000ba07 l       .debug_str	00000000 
0000b9f8 l       .debug_str	00000000 
00001f7c l       .debug_str	00000000 
00001f86 l       .debug_str	00000000 
0000b9f7 l       .debug_str	00000000 
00001f91 l       .debug_str	00000000 
00001f96 l       .debug_str	00000000 
00000c56 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
00000c70 l       .debug_str	00000000 
00000c7c l       .debug_str	00000000 
00040bba l       .debug_str	00000000 
00000c84 l       .debug_str	00000000 
00000c89 l       .debug_str	00000000 
00000c90 l       .debug_str	00000000 
00064e10 l       .debug_str	00000000 
00001a1f l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00069452 l       .debug_str	00000000 
0000bfe3 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 4o8rn6dz0mrw2ixo
0000d49b l       .debug_str	00000000 
00000e06 l       .debug_str	00000000 
00000e2a l       .debug_str	00000000 
00062a8c l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00000edb l       .debug_str	00000000 
00000e56 l       .debug_str	00000000 
00000e46 l       .debug_str	00000000 
00063092 l       .debug_str	00000000 
0000e903 l       .debug_str	00000000 
00005c56 l       .debug_str	00000000 
00005c6a l       .debug_str	00000000 
00005c77 l       .debug_str	00000000 
00005c93 l       .debug_str	00000000 
00005c9e l       .debug_str	00000000 
00005c8a l       .debug_str	00000000 
00005a7c l       .debug_str	00000000 
0000d909 l       .debug_str	00000000 
00002da0 l       .debug_str	00000000 
0000d913 l       .debug_str	00000000 
0000d91e l       .debug_str	00000000 
0000d928 l       .debug_str	00000000 
0000d9bb l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00000c2a l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00020225 l       .debug_str	00000000 
00020224 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00057262 l       .debug_str	00000000 
000410bb l       .debug_str	00000000 
00003435 l       .debug_str	00000000 
00000b51 l       .debug_str	00000000 
00000b56 l       .debug_str	00000000 
00000b5c l       .debug_str	00000000 
00000b63 l       .debug_str	00000000 
00000b6b l       .debug_str	00000000 
00001cbe l       .debug_str	00000000 
00001cc2 l       .debug_str	00000000 
00001ccd l       .debug_str	00000000 
00001ce8 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00000d99 l       .debug_str	00000000 
0000ba07 l       .debug_str	00000000 
0000ba1e l       .debug_str	00000000 
0000ba66 l       .debug_str	00000000 
0000457f l       .debug_str	00000000 
00056d15 l       .debug_str	00000000 
0000ba85 l       .debug_str	00000000 
0000bac0 l       .debug_str	00000000 
0000bae5 l       .debug_str	00000000 
0000bb0c l       .debug_str	00000000 
0000bb6c l       .debug_str	00000000 
0000bb75 l       .debug_str	00000000 
0000bbe0 l       .debug_str	00000000 
0000bbf0 l       .debug_str	00000000 
0000bc5c l       .debug_str	00000000 
0000bc6f l       .debug_str	00000000 
0000bcd2 l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00062e3e l       .debug_str	00000000 
0000d81f l       .debug_str	00000000 
0000bcda l       .debug_str	00000000 
0000c028 l       .debug_str	00000000 
00001c2e l       .debug_str	00000000 
0001af01 l       .debug_str	00000000 
0000bce3 l       .debug_str	00000000 
0000bcef l       .debug_str	00000000 
00001cd8 l       .debug_str	00000000 
0000bcf7 l       .debug_str	00000000 
0000bd51 l       .debug_str	00000000 
0000bdb3 l       .debug_str	00000000 
0000bdbe l       .debug_str	00000000 
0000be05 l       .debug_str	00000000 
0000be54 l       .debug_str	00000000 
0000be5e l       .debug_str	00000000 
0000be9b l       .debug_str	00000000 
0000bee0 l       .debug_str	00000000 
0000bee9 l       .debug_str	00000000 
0000bef9 l       .debug_str	00000000 
0000bf01 l       .debug_str	00000000 
0000bf56 l       .debug_str	00000000 
0000bfb3 l       .debug_str	00000000 
0000bfbf l       .debug_str	00000000 
0000bfc8 l       .debug_str	00000000 
0000bfd4 l       .debug_str	00000000 
0000bfe0 l       .debug_str	00000000 
0000bfe9 l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
0000bff1 l       .debug_str	00000000 
00000947 l       .debug_str	00000000 
0000bff9 l       .debug_str	00000000 
0000c027 l       .debug_str	00000000 
0000c00e l       .debug_str	00000000 
0000c02e l       .debug_str	00000000 
0000c035 l       .debug_str	00000000 
0000c03d l       .debug_str	00000000 
00000ac8 l       .debug_str	00000000 
00001fa5 l       .debug_str	00000000 
0000087f l       .debug_str	00000000 
00000a41 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00000a2b l       .debug_str	00000000 
00000a09 l       .debug_str	00000000 
00000a9b l       .debug_str	00000000 
00067702 l       .debug_str	00000000 
000009cf l       .debug_str	00000000 
000008b1 l       .debug_str	00000000 
00000878 l       .debug_str	00000000 
00062151 l       .debug_str	00000000 
00001fae l       .debug_str	00000000 
00001fdb l       .debug_str	00000000 
0000bfb9 l       .debug_str	00000000 
0006853d l       .debug_str	00000000 
000008f3 l       .debug_str	00000000 
00000a5c l       .debug_str	00000000 
000009b8 l       .debug_str	00000000 
000008c2 l       .debug_str	00000000 
00002010 l       .debug_str	00000000 
00002039 l       .debug_str	00000000 
00002097 l       .debug_str	00000000 
00000998 l       .debug_str	00000000 
00000aa3 l       .debug_str	00000000 
00000a7b l       .debug_str	00000000 
000020fd l       .debug_str	00000000 
00002029 l       .debug_str	00000000 
00000aba l       .debug_str	00000000 
0000086d l       .debug_str	00000000 
00000a34 l       .debug_str	00000000 
00000aab l       .debug_str	00000000 
0000211b l       .debug_str	00000000 
00000a21 l       .debug_str	00000000 
00000948 l       .debug_str	00000000 
000008db l       .debug_str	00000000 
00002131 l       .debug_str	00000000 
00002157 l       .debug_str	00000000 
0000088a l       .debug_str	00000000 
0000216d l       .debug_str	00000000 
0000fdf3 l       .debug_str	00000000 
00002136 l       .debug_str	00000000 
0000c047 l       .debug_str	00000000 
00057e20 l       .debug_str	00000000 
0000c05e l       .debug_str	00000000 
0000c066 l       .debug_str	00000000 
0000c06f l       .debug_str	00000000 
0000d473 l       .debug_str	00000000 
0000c078 l       .debug_str	00000000 
000101ce l       .debug_str	00000000 
000681f0 l       .debug_str	00000000 
0000c080 l       .debug_str	00000000 
0000c08c l       .debug_str	00000000 
0000c097 l       .debug_str	00000000 
0000c09f l       .debug_str	00000000 
0000d937 l       .debug_str	00000000 
0000c0a7 l       .debug_str	00000000 
0000c1a3 l       .debug_str	00000000 
0000c2a7 l       .debug_str	00000000 
0000c2b5 l       .debug_str	00000000 
0000c2c0 l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
0000c2ed l       .debug_str	00000000 
0000c2ca l       .debug_str	00000000 
0000c2f8 l       .debug_str	00000000 
0000c373 l       .debug_str	00000000 
0000c3f6 l       .debug_str	00000000 
0000c404 l       .debug_str	00000000 
0000c463 l       .debug_str	00000000 
0000c4ca l       .debug_str	00000000 
0000c4e0 l       .debug_str	00000000 
0000c4f0 l       .debug_str	00000000 
00066a26 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
0000c4ff l       .debug_str	00000000 
00031927 l       .debug_str	00000000 
0000c505 l       .debug_str	00000000 
0000c50b l       .debug_str	00000000 
0000c511 l       .debug_str	00000000 
0000c51d l       .debug_str	00000000 
00069452 l       .debug_str	00000000 
0000c525 l       .debug_str	00000000 
0000c52d l       .debug_str	00000000 
0000c533 l       .debug_str	00000000 
0000c579 l       .debug_str	00000000 
0000c556 l       .debug_str	00000000 
0000c589 l       .debug_str	00000000 
0000c5c9 l       .debug_str	00000000 
000665b3 l       .debug_str	00000000 
0000c611 l       .debug_str	00000000 
0000c617 l       .debug_str	00000000 
0000c61d l       .debug_str	00000000 
0000c646 l       .debug_str	00000000 
0000c623 l       .debug_str	00000000 
0000c658 l       .debug_str	00000000 
0000c69a l       .debug_str	00000000 
0006649c l       .debug_str	00000000 
0000c6e4 l       .debug_str	00000000 
0000c6ea l       .debug_str	00000000 
0000c6f0 l       .debug_str	00000000 
0000c719 l       .debug_str	00000000 
0000c6f6 l       .debug_str	00000000 
0000c72b l       .debug_str	00000000 
0000c76d l       .debug_str	00000000 
00065960 l       .debug_str	00000000 
0000c7b7 l       .debug_str	00000000 
0000c7bd l       .debug_str	00000000 
0000c7c3 l       .debug_str	00000000 
0000c7c9 l       .debug_str	00000000 
0000c7f2 l       .debug_str	00000000 
0000c7cf l       .debug_str	00000000 
0000c803 l       .debug_str	00000000 
0000c844 l       .debug_str	00000000 
0000c88d l       .debug_str	00000000 
0000c892 l       .debug_str	00000000 
000667ea l       .debug_str	00000000 
0000c897 l       .debug_str	00000000 
0000c89d l       .debug_str	00000000 
0000c8a3 l       .debug_str	00000000 
0000c8cc l       .debug_str	00000000 
0000c8a9 l       .debug_str	00000000 
0000c8dd l       .debug_str	00000000 
0000c91e l       .debug_str	00000000 
00065a18 l       .debug_str	00000000 
0000c967 l       .debug_str	00000000 
0000c993 l       .debug_str	00000000 
0000c970 l       .debug_str	00000000 
0000c9a4 l       .debug_str	00000000 
0000c9e5 l       .debug_str	00000000 
0000ca2e l       .debug_str	00000000 
000669be l       .debug_str	00000000 
0000ca33 l       .debug_str	00000000 
0000ca3c l       .debug_str	00000000 
0000ca43 l       .debug_str	00000000 
0000ca6e l       .debug_str	00000000 
0000ca4b l       .debug_str	00000000 
0000ca80 l       .debug_str	00000000 
0000cac2 l       .debug_str	00000000 
00066686 l       .debug_str	00000000 
0000cb0c l       .debug_str	00000000 
0000cb12 l       .debug_str	00000000 
0000cb18 l       .debug_str	00000000 
0000cb1e l       .debug_str	00000000 
0000cb24 l       .debug_str	00000000 
0000cb2c l       .debug_str	00000000 
0000cb3a l       .debug_str	00000000 
0000cb49 l       .debug_str	00000000 
0000cb5a l       .debug_str	00000000 
0000cb65 l       .debug_str	00000000 
0000cb70 l       .debug_str	00000000 
0000cb7b l       .debug_str	00000000 
0000cb82 l       .debug_str	00000000 
0000cbc8 l       .debug_str	00000000 
0000cba5 l       .debug_str	00000000 
0000cbda l       .debug_str	00000000 
0000cc1c l       .debug_str	00000000 
00065b1b l       .debug_str	00000000 
0000cc66 l       .debug_str	00000000 
0000cc93 l       .debug_str	00000000 
0000cc70 l       .debug_str	00000000 
0000cca5 l       .debug_str	00000000 
0000cce7 l       .debug_str	00000000 
0000cd31 l       .debug_str	00000000 
0000cd36 l       .debug_str	00000000 
0000cd63 l       .debug_str	00000000 
0000cd40 l       .debug_str	00000000 
0000cd75 l       .debug_str	00000000 
0000cdb7 l       .debug_str	00000000 
0000ce01 l       .debug_str	00000000 
00011e7c l       .debug_str	00000000 
0000ce80 l       .debug_str	00000000 
0000ce15 l       .debug_str	00000000 
0000ce25 l       .debug_str	00000000 
0000ce2e l       .debug_str	00000000 
0000ce39 l       .debug_str	00000000 
0000ce48 l       .debug_str	00000000 
0000ce5d l       .debug_str	00000000 
0000ce8e l       .debug_str	00000000 
0000cf2b l       .debug_str	00000000 
0000cfd0 l       .debug_str	00000000 
0000cfdb l       .debug_str	00000000 
0000cfe4 l       .debug_str	00000000 
0000d028 l       .debug_str	00000000 
0000d005 l       .debug_str	00000000 
0000d03b l       .debug_str	00000000 
0000d0be l       .debug_str	00000000 
0000d149 l       .debug_str	00000000 
0000d165 l       .debug_str	00000000 
0000d1b1 l       .debug_str	00000000 
0000d205 l       .debug_str	00000000 
0000d222 l       .debug_str	00000000 
0000d236 l       .debug_str	00000000 
0000d282 l       .debug_str	00000000 
0000d2d6 l       .debug_str	00000000 
0000d2ec l       .debug_str	00000000 
0000d300 l       .debug_str	00000000 
0000d347 l       .debug_str	00000000 
0000d396 l       .debug_str	00000000 
0000d3c2 l       .debug_str	00000000 
0000d39f l       .debug_str	00000000 
0000d3d0 l       .debug_str	00000000 
0000d3d6 l       .debug_str	00000000 
0000d3de l       .debug_str	00000000 
0000d3e5 l       .debug_str	00000000 
0000e401 l       .debug_str	00000000 
0000d3ed l       .debug_str	00000000 
0000d3f5 l       .debug_str	00000000 
0003b83c l       .debug_str	00000000 
0000d404 l       .debug_str	00000000 
0000e433 l       .debug_str	00000000 
0000d40f l       .debug_str	00000000 
0000d41a l       .debug_str	00000000 
0000d42b l       .debug_str	00000000 
0000d431 l       .debug_str	00000000 
0000d439 l       .debug_str	00000000 
0000d440 l       .debug_str	00000000 
0000d44a l       .debug_str	00000000 
0000d452 l       .debug_str	00000000 
0000d45a l       .debug_str	00000000 
0000d47c l       .debug_str	00000000 
0000d487 l       .debug_str	00000000 
0000d493 l       .debug_str	00000000 
0000d4a4 l       .debug_str	00000000 
000194da l       .debug_str	00000000 
0000d4af l       .debug_str	00000000 
0000d4ba l       .debug_str	00000000 
0000d4c5 l       .debug_str	00000000 
00001c35 l       .debug_str	00000000 
00065a8c l       .debug_str	00000000 
0000219a l       .debug_str	00000000 
00001c3f l       .debug_str	00000000 
00001c77 l       .debug_str	00000000 
00001cb7 l       .debug_str	00000000 
00001cef l       .debug_str	00000000 
00001cf7 l       .debug_str	00000000 
000021b3 l       .debug_str	00000000 
0000d4d5 l       .debug_str	00000000 
0000d4e5 l       .debug_str	00000000 
0000d4f4 l       .debug_str	00000000 
0000d4fc l       .debug_str	00000000 
0000d503 l       .debug_str	00000000 
0000d50b l       .debug_str	00000000 
0000d54c l       .debug_str	00000000 
0000d529 l       .debug_str	00000000 
0000d55c l       .debug_str	00000000 
0000d571 l       .debug_str	00000000 
0000d57a l       .debug_str	00000000 
0000d5d7 l       .debug_str	00000000 
0000d63c l       .debug_str	00000000 
0000d646 l       .debug_str	00000000 
0000d656 l       .debug_str	00000000 
0000d66b l       .debug_str	00000000 
0000d673 l       .debug_str	00000000 
0000d6d7 l       .debug_str	00000000 
0000d743 l       .debug_str	00000000 
0000d74a l       .debug_str	00000000 
0000d752 l       .debug_str	00000000 
0000d793 l       .debug_str	00000000 
0000d770 l       .debug_str	00000000 
0000d7a3 l       .debug_str	00000000 
0000d7b8 l       .debug_str	00000000 
0000d7cb l       .debug_str	00000000 
0000d7e0 l       .debug_str	00000000 
0000d7e7 l       .debug_str	00000000 
0000d7fc l       .debug_str	00000000 
0000d9bc l       .debug_str	00000000 
0000d826 l       .debug_str	00000000 
0000d889 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
0000b9f8 l       .debug_str	00000000 
0000b9f7 l       .debug_str	00000000 
0002c770 l       .debug_str	00000000 
0000bfe3 l       .debug_str	00000000 
00001a1f l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
000010b6 l       .debug_str	00000000 
00000c99 l       .debug_str	00000000 
00062a03 l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
00000c45 l       .debug_str	00000000 
00000da7 l       .debug_str	00000000 
00000db2 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00000d37 l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
00000d3d l       .debug_str	00000000 
00000d4c l       .debug_str	00000000 
00000d50 l       .debug_str	00000000 
00000d59 l       .debug_str	00000000 
00000d65 l       .debug_str	00000000 
00000d8a l       .debug_str	00000000 
00000d7e l       .debug_str	00000000 
00000d8f l       .debug_str	00000000 
00000e60 l       .debug_str	00000000 
00000ed0 l       .debug_str	00000000 
00000ebe l       .debug_str	00000000 
00000dc8 l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000def l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 4vs8bf4hjiouz7lo
0000d3f5 l       .debug_str	00000000 
0000df35 l       .debug_str	00000000 
0000df3f l       .debug_str	00000000 
0000df66 l       .debug_str	00000000 
0000df71 l       .debug_str	00000000 
0000df98 l       .debug_str	00000000 
0000d9bc l       .debug_str	00000000 
0000d9bb l       .debug_str	00000000 
00005a7c l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
00062e21 l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
0000c621 l       .debug_str	00000000 
0006449e l       .debug_str	00000000 
00000364 l       .debug_str	00000000 
0000dfa2 l       .debug_str	00000000 
00065d67 l       .debug_str	00000000 
00063073 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00001cbe l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00001cc2 l       .debug_str	00000000 
00001ccd l       .debug_str	00000000 
00001ce8 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
0000da38 l       .debug_str	00000000 
00008fb0 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00002474 l       .debug_str	00000000 
0000247a l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00002481 l       .debug_str	00000000 
0000dc02 l       .debug_str	00000000 
0000db38 l       .debug_str	00000000 
0000da61 l       .debug_str	00000000 
0000daad l       .debug_str	00000000 
0000dab9 l       .debug_str	00000000 
0000db0a l       .debug_str	00000000 
00001fa5 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
0000db1a l       .debug_str	00000000 
0000db49 l       .debug_str	00000000 
0000dbcb l       .debug_str	00000000 
0000dbda l       .debug_str	00000000 
0000dbe3 l       .debug_str	00000000 
0000dc14 l       .debug_str	00000000 
0000dc66 l       .debug_str	00000000 
0000dc77 l       .debug_str	00000000 
0000dcca l       .debug_str	00000000 
00069694 l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
0000dcda l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00062e3e l       .debug_str	00000000 
0000d81f l       .debug_str	00000000 
0000bcda l       .debug_str	00000000 
0000c028 l       .debug_str	00000000 
00001c2e l       .debug_str	00000000 
0001af01 l       .debug_str	00000000 
0000bce3 l       .debug_str	00000000 
0000bcef l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00001cd8 l       .debug_str	00000000 
0000bcf7 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
0000bd51 l       .debug_str	00000000 
0000bdb3 l       .debug_str	00000000 
0000bdbe l       .debug_str	00000000 
0000be05 l       .debug_str	00000000 
0000be54 l       .debug_str	00000000 
0000be5e l       .debug_str	00000000 
0000be9b l       .debug_str	00000000 
0000bee0 l       .debug_str	00000000 
0000bee9 l       .debug_str	00000000 
0000bef9 l       .debug_str	00000000 
0000bf01 l       .debug_str	00000000 
0000bf56 l       .debug_str	00000000 
0000bfb3 l       .debug_str	00000000 
0000bfbf l       .debug_str	00000000 
0000bfc8 l       .debug_str	00000000 
0000bfd4 l       .debug_str	00000000 
0000bfe0 l       .debug_str	00000000 
0000bfe9 l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
0000bff1 l       .debug_str	00000000 
00000947 l       .debug_str	00000000 
0000bff9 l       .debug_str	00000000 
0000c027 l       .debug_str	00000000 
0000c00e l       .debug_str	00000000 
0000c02e l       .debug_str	00000000 
0000c035 l       .debug_str	00000000 
0000c03d l       .debug_str	00000000 
00000ac8 l       .debug_str	00000000 
0000087f l       .debug_str	00000000 
00000a41 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00000a2b l       .debug_str	00000000 
00000a09 l       .debug_str	00000000 
00000a9b l       .debug_str	00000000 
00067702 l       .debug_str	00000000 
000009cf l       .debug_str	00000000 
000008b1 l       .debug_str	00000000 
00000878 l       .debug_str	00000000 
00062151 l       .debug_str	00000000 
00001fae l       .debug_str	00000000 
00001fdb l       .debug_str	00000000 
0000bfb9 l       .debug_str	00000000 
0006853d l       .debug_str	00000000 
000008f3 l       .debug_str	00000000 
00000a5c l       .debug_str	00000000 
000009b8 l       .debug_str	00000000 
000008c2 l       .debug_str	00000000 
00002010 l       .debug_str	00000000 
00002039 l       .debug_str	00000000 
00002097 l       .debug_str	00000000 
00000998 l       .debug_str	00000000 
00000aa3 l       .debug_str	00000000 
00000a7b l       .debug_str	00000000 
000020fd l       .debug_str	00000000 
00002029 l       .debug_str	00000000 
00000aba l       .debug_str	00000000 
0000086d l       .debug_str	00000000 
00000a34 l       .debug_str	00000000 
00000aab l       .debug_str	00000000 
0000211b l       .debug_str	00000000 
00000a21 l       .debug_str	00000000 
00000948 l       .debug_str	00000000 
000008db l       .debug_str	00000000 
00002131 l       .debug_str	00000000 
00002157 l       .debug_str	00000000 
0000088a l       .debug_str	00000000 
0000216d l       .debug_str	00000000 
0000fdf3 l       .debug_str	00000000 
00002136 l       .debug_str	00000000 
0000c047 l       .debug_str	00000000 
00057e20 l       .debug_str	00000000 
0000c05e l       .debug_str	00000000 
0000c066 l       .debug_str	00000000 
0000c06f l       .debug_str	00000000 
0000d473 l       .debug_str	00000000 
0000c078 l       .debug_str	00000000 
000101ce l       .debug_str	00000000 
000681f0 l       .debug_str	00000000 
0000c080 l       .debug_str	00000000 
0000c08c l       .debug_str	00000000 
0000c097 l       .debug_str	00000000 
0000c09f l       .debug_str	00000000 
0000dcde l       .debug_str	00000000 
0000d937 l       .debug_str	00000000 
0000c0a7 l       .debug_str	00000000 
0000c1a3 l       .debug_str	00000000 
0000c2a7 l       .debug_str	00000000 
0000c2b5 l       .debug_str	00000000 
0000c2c0 l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
0000c2ed l       .debug_str	00000000 
0000c2ca l       .debug_str	00000000 
0000c2f8 l       .debug_str	00000000 
0000c373 l       .debug_str	00000000 
0000c3f6 l       .debug_str	00000000 
0000c404 l       .debug_str	00000000 
0000c463 l       .debug_str	00000000 
0000c4ca l       .debug_str	00000000 
0000c4e0 l       .debug_str	00000000 
0000c4f0 l       .debug_str	00000000 
00066a26 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
0000c4ff l       .debug_str	00000000 
00031927 l       .debug_str	00000000 
0000c505 l       .debug_str	00000000 
0000c50b l       .debug_str	00000000 
0000c511 l       .debug_str	00000000 
0000c51d l       .debug_str	00000000 
00069452 l       .debug_str	00000000 
0000c525 l       .debug_str	00000000 
0000c52d l       .debug_str	00000000 
0000c533 l       .debug_str	00000000 
0000c579 l       .debug_str	00000000 
0000c556 l       .debug_str	00000000 
0000c589 l       .debug_str	00000000 
0000c5c9 l       .debug_str	00000000 
000665b3 l       .debug_str	00000000 
0000c611 l       .debug_str	00000000 
0000c617 l       .debug_str	00000000 
0000c61d l       .debug_str	00000000 
0000c646 l       .debug_str	00000000 
0000c623 l       .debug_str	00000000 
0000c658 l       .debug_str	00000000 
0000c69a l       .debug_str	00000000 
0006649c l       .debug_str	00000000 
0000c6e4 l       .debug_str	00000000 
0000c6ea l       .debug_str	00000000 
0000c6f0 l       .debug_str	00000000 
0000c719 l       .debug_str	00000000 
0000c6f6 l       .debug_str	00000000 
0000c72b l       .debug_str	00000000 
0000c76d l       .debug_str	00000000 
00065960 l       .debug_str	00000000 
0000c7b7 l       .debug_str	00000000 
0000c7bd l       .debug_str	00000000 
0000c7c3 l       .debug_str	00000000 
0000c7c9 l       .debug_str	00000000 
0000c7f2 l       .debug_str	00000000 
0000c7cf l       .debug_str	00000000 
0000c803 l       .debug_str	00000000 
0000c844 l       .debug_str	00000000 
0000c88d l       .debug_str	00000000 
0000c892 l       .debug_str	00000000 
000667ea l       .debug_str	00000000 
0000c897 l       .debug_str	00000000 
0000c89d l       .debug_str	00000000 
0000c8a3 l       .debug_str	00000000 
0000c8cc l       .debug_str	00000000 
0000c8a9 l       .debug_str	00000000 
0000c8dd l       .debug_str	00000000 
0000c91e l       .debug_str	00000000 
00065a18 l       .debug_str	00000000 
0000c967 l       .debug_str	00000000 
0000c993 l       .debug_str	00000000 
0000c970 l       .debug_str	00000000 
0000c9a4 l       .debug_str	00000000 
0000c9e5 l       .debug_str	00000000 
0000ca2e l       .debug_str	00000000 
000669be l       .debug_str	00000000 
0000ca33 l       .debug_str	00000000 
0000ca3c l       .debug_str	00000000 
0000ca43 l       .debug_str	00000000 
0000ca6e l       .debug_str	00000000 
0000ca4b l       .debug_str	00000000 
0000ca80 l       .debug_str	00000000 
0000cac2 l       .debug_str	00000000 
00066686 l       .debug_str	00000000 
0000cb0c l       .debug_str	00000000 
0000cb12 l       .debug_str	00000000 
0000cb18 l       .debug_str	00000000 
0000cb1e l       .debug_str	00000000 
0000cb24 l       .debug_str	00000000 
0000cb2c l       .debug_str	00000000 
0000cb3a l       .debug_str	00000000 
0000cb49 l       .debug_str	00000000 
0000cb5a l       .debug_str	00000000 
0000cb65 l       .debug_str	00000000 
0000cb70 l       .debug_str	00000000 
0000cb7b l       .debug_str	00000000 
0000cb82 l       .debug_str	00000000 
0000cbc8 l       .debug_str	00000000 
0000cba5 l       .debug_str	00000000 
0000cbda l       .debug_str	00000000 
0000cc1c l       .debug_str	00000000 
00065b1b l       .debug_str	00000000 
0000cc66 l       .debug_str	00000000 
0000cc93 l       .debug_str	00000000 
0000cc70 l       .debug_str	00000000 
0000cca5 l       .debug_str	00000000 
0000cce7 l       .debug_str	00000000 
0000cd31 l       .debug_str	00000000 
0000cd36 l       .debug_str	00000000 
0000cd63 l       .debug_str	00000000 
0000cd40 l       .debug_str	00000000 
0000cd75 l       .debug_str	00000000 
0000cdb7 l       .debug_str	00000000 
0000ce01 l       .debug_str	00000000 
00011e7c l       .debug_str	00000000 
0000ce80 l       .debug_str	00000000 
0000ce15 l       .debug_str	00000000 
0000ce25 l       .debug_str	00000000 
0000ce2e l       .debug_str	00000000 
0000ce39 l       .debug_str	00000000 
0000ce48 l       .debug_str	00000000 
0000ce5d l       .debug_str	00000000 
0000ce8e l       .debug_str	00000000 
0000cf2b l       .debug_str	00000000 
0000cfd0 l       .debug_str	00000000 
0000cfdb l       .debug_str	00000000 
0000cfe4 l       .debug_str	00000000 
0000d028 l       .debug_str	00000000 
0000d005 l       .debug_str	00000000 
0000d03b l       .debug_str	00000000 
0000d0be l       .debug_str	00000000 
0000d149 l       .debug_str	00000000 
0000d165 l       .debug_str	00000000 
0000d1b1 l       .debug_str	00000000 
0000d205 l       .debug_str	00000000 
0000d222 l       .debug_str	00000000 
0000d236 l       .debug_str	00000000 
0000d282 l       .debug_str	00000000 
0000d2d6 l       .debug_str	00000000 
0000d2ec l       .debug_str	00000000 
0000d300 l       .debug_str	00000000 
0000d347 l       .debug_str	00000000 
0000d396 l       .debug_str	00000000 
0000d3c2 l       .debug_str	00000000 
0000d39f l       .debug_str	00000000 
0000d3d0 l       .debug_str	00000000 
0000d3d6 l       .debug_str	00000000 
0000d3de l       .debug_str	00000000 
0000d3e5 l       .debug_str	00000000 
0000e401 l       .debug_str	00000000 
0000d3ed l       .debug_str	00000000 
0003b83c l       .debug_str	00000000 
0000d404 l       .debug_str	00000000 
0000e433 l       .debug_str	00000000 
0000d40f l       .debug_str	00000000 
0000d41a l       .debug_str	00000000 
0000d42b l       .debug_str	00000000 
0000d431 l       .debug_str	00000000 
0000d439 l       .debug_str	00000000 
0000d440 l       .debug_str	00000000 
0000d44a l       .debug_str	00000000 
0000d452 l       .debug_str	00000000 
0000d45a l       .debug_str	00000000 
0000d47c l       .debug_str	00000000 
0000d487 l       .debug_str	00000000 
0000d493 l       .debug_str	00000000 
0000d49b l       .debug_str	00000000 
0000d4a4 l       .debug_str	00000000 
000194da l       .debug_str	00000000 
0000d4af l       .debug_str	00000000 
0000d4ba l       .debug_str	00000000 
0000d4c5 l       .debug_str	00000000 
00001c35 l       .debug_str	00000000 
00065a8c l       .debug_str	00000000 
0000219a l       .debug_str	00000000 
00001c3f l       .debug_str	00000000 
00001c77 l       .debug_str	00000000 
00001cb7 l       .debug_str	00000000 
00001cef l       .debug_str	00000000 
00001cf7 l       .debug_str	00000000 
000021b3 l       .debug_str	00000000 
0000d4d5 l       .debug_str	00000000 
0000d4e5 l       .debug_str	00000000 
0000d4f4 l       .debug_str	00000000 
0000d4fc l       .debug_str	00000000 
0000d503 l       .debug_str	00000000 
0000d50b l       .debug_str	00000000 
0000d54c l       .debug_str	00000000 
0000d529 l       .debug_str	00000000 
0000d55c l       .debug_str	00000000 
0000d571 l       .debug_str	00000000 
0000d57a l       .debug_str	00000000 
0000d5d7 l       .debug_str	00000000 
0000d63c l       .debug_str	00000000 
0000d646 l       .debug_str	00000000 
0000d656 l       .debug_str	00000000 
0000d66b l       .debug_str	00000000 
0000d673 l       .debug_str	00000000 
0000d6d7 l       .debug_str	00000000 
0000d743 l       .debug_str	00000000 
0000d74a l       .debug_str	00000000 
0000d752 l       .debug_str	00000000 
0000d793 l       .debug_str	00000000 
0000d770 l       .debug_str	00000000 
0000d7a3 l       .debug_str	00000000 
0000d7b8 l       .debug_str	00000000 
0000d7cb l       .debug_str	00000000 
0000d7e0 l       .debug_str	00000000 
0000d7e7 l       .debug_str	00000000 
0000d7fc l       .debug_str	00000000 
00062da4 l       .debug_str	00000000 
00062e93 l       .debug_str	00000000 
000125b7 l       .debug_str	00000000 
00062b9e l       .debug_str	00000000 
0000dceb l       .debug_str	00000000 
0000dda3 l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
0000de07 l       .debug_str	00000000 
0000de3d l       .debug_str	00000000 
0000de56 l       .debug_str	00000000 
0000de90 l       .debug_str	00000000 
0000dead l       .debug_str	00000000 
0000dee8 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
0000df05 l       .debug_str	00000000 
0000df0f l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 4w7pexg02jmb1hc0
0000d3d6 l       .debug_str	00000000 
0000e048 l       .debug_str	00000000 
0000e088 l       .debug_str	00000000 
0000e0d6 l       .debug_str	00000000 
0000e116 l       .debug_str	00000000 
0000e13d l       .debug_str	00000000 
0000e17d l       .debug_str	00000000 
0000e18b l       .debug_str	00000000 
0000e1fa l       .debug_str	00000000 
0000e225 l       .debug_str	00000000 
0000e295 l       .debug_str	00000000 
0000e2a8 l       .debug_str	00000000 
0000e318 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
0000e344 l       .debug_str	00000000 
0000e362 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
00000c8a l       .debug_str	00000000 
00006531 l       .debug_str	00000000 
0000e903 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00000c2a l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
00000f10 l       .debug_str	00000000 
00000f18 l       .debug_str	00000000 
00000f23 l       .debug_str	00000000 
00000f2e l       .debug_str	00000000 
00000f3b l       .debug_str	00000000 
00000f46 l       .debug_str	00000000 
00000f4e l       .debug_str	00000000 
00000f59 l       .debug_str	00000000 
00000f64 l       .debug_str	00000000 
00000f6e l       .debug_str	00000000 
00000f79 l       .debug_str	00000000 
00000f84 l       .debug_str	00000000 
00000f91 l       .debug_str	00000000 
00000f9d l       .debug_str	00000000 
00000faa l       .debug_str	00000000 
00000fb8 l       .debug_str	00000000 
00000fc2 l       .debug_str	00000000 
00017cbe l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00001cbe l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00001cc2 l       .debug_str	00000000 
00001ccd l       .debug_str	00000000 
00001ce8 l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00056d15 l       .debug_str	00000000 
0000e353 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00062e3e l       .debug_str	00000000 
0000d81f l       .debug_str	00000000 
0000bcda l       .debug_str	00000000 
0000c028 l       .debug_str	00000000 
00001c2e l       .debug_str	00000000 
0001af01 l       .debug_str	00000000 
0000bce3 l       .debug_str	00000000 
0000bcef l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00001cd8 l       .debug_str	00000000 
0000bcf7 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
0000bd51 l       .debug_str	00000000 
0000bdb3 l       .debug_str	00000000 
0000bdbe l       .debug_str	00000000 
0000be05 l       .debug_str	00000000 
0000be54 l       .debug_str	00000000 
0000be5e l       .debug_str	00000000 
0000be9b l       .debug_str	00000000 
0000bee0 l       .debug_str	00000000 
0000bee9 l       .debug_str	00000000 
0000bef9 l       .debug_str	00000000 
0000bf01 l       .debug_str	00000000 
0000bf56 l       .debug_str	00000000 
0000bfb3 l       .debug_str	00000000 
0000bfbf l       .debug_str	00000000 
0000bfc8 l       .debug_str	00000000 
0000bfd4 l       .debug_str	00000000 
0000bfe0 l       .debug_str	00000000 
0000bfe9 l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
0000bff1 l       .debug_str	00000000 
00000947 l       .debug_str	00000000 
0000bff9 l       .debug_str	00000000 
0000c027 l       .debug_str	00000000 
0000c00e l       .debug_str	00000000 
0000c02e l       .debug_str	00000000 
0000c035 l       .debug_str	00000000 
0000c03d l       .debug_str	00000000 
00000ac8 l       .debug_str	00000000 
00001fa5 l       .debug_str	00000000 
0000087f l       .debug_str	00000000 
00000a41 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00000a2b l       .debug_str	00000000 
00000a09 l       .debug_str	00000000 
00000a9b l       .debug_str	00000000 
00067702 l       .debug_str	00000000 
000009cf l       .debug_str	00000000 
000008b1 l       .debug_str	00000000 
00000878 l       .debug_str	00000000 
00062151 l       .debug_str	00000000 
00001fae l       .debug_str	00000000 
00001fdb l       .debug_str	00000000 
0000bfb9 l       .debug_str	00000000 
0006853d l       .debug_str	00000000 
000008f3 l       .debug_str	00000000 
00000a5c l       .debug_str	00000000 
000009b8 l       .debug_str	00000000 
000008c2 l       .debug_str	00000000 
00002010 l       .debug_str	00000000 
00002039 l       .debug_str	00000000 
00002097 l       .debug_str	00000000 
00000998 l       .debug_str	00000000 
00000aa3 l       .debug_str	00000000 
00000a7b l       .debug_str	00000000 
000020fd l       .debug_str	00000000 
00002029 l       .debug_str	00000000 
00000aba l       .debug_str	00000000 
0000086d l       .debug_str	00000000 
00000a34 l       .debug_str	00000000 
00000aab l       .debug_str	00000000 
0000211b l       .debug_str	00000000 
00000a21 l       .debug_str	00000000 
00000948 l       .debug_str	00000000 
000008db l       .debug_str	00000000 
00002131 l       .debug_str	00000000 
00002157 l       .debug_str	00000000 
0000088a l       .debug_str	00000000 
0000216d l       .debug_str	00000000 
0000fdf3 l       .debug_str	00000000 
00002136 l       .debug_str	00000000 
0000c047 l       .debug_str	00000000 
00057e20 l       .debug_str	00000000 
0000c05e l       .debug_str	00000000 
0000c066 l       .debug_str	00000000 
0000c06f l       .debug_str	00000000 
0000d473 l       .debug_str	00000000 
0000c078 l       .debug_str	00000000 
000101ce l       .debug_str	00000000 
000681f0 l       .debug_str	00000000 
0000c080 l       .debug_str	00000000 
0000c08c l       .debug_str	00000000 
0000c097 l       .debug_str	00000000 
0000c09f l       .debug_str	00000000 
0000d9bc l       .debug_str	00000000 
0000d937 l       .debug_str	00000000 
0000c0a7 l       .debug_str	00000000 
0000c1a3 l       .debug_str	00000000 
0000c2a7 l       .debug_str	00000000 
0000c2b5 l       .debug_str	00000000 
0000c2c0 l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
0000c2ed l       .debug_str	00000000 
0000c2ca l       .debug_str	00000000 
0000c2f8 l       .debug_str	00000000 
0000c373 l       .debug_str	00000000 
0000c3f6 l       .debug_str	00000000 
0000c404 l       .debug_str	00000000 
0000c463 l       .debug_str	00000000 
0000c4ca l       .debug_str	00000000 
0000c4e0 l       .debug_str	00000000 
0000c4f0 l       .debug_str	00000000 
00066a26 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
0000c4ff l       .debug_str	00000000 
00031927 l       .debug_str	00000000 
0000c505 l       .debug_str	00000000 
0000c50b l       .debug_str	00000000 
0000c511 l       .debug_str	00000000 
0000c51d l       .debug_str	00000000 
00069452 l       .debug_str	00000000 
0000c525 l       .debug_str	00000000 
0000c52d l       .debug_str	00000000 
0000c533 l       .debug_str	00000000 
0000c579 l       .debug_str	00000000 
0000c556 l       .debug_str	00000000 
0000c589 l       .debug_str	00000000 
0000c5c9 l       .debug_str	00000000 
000665b3 l       .debug_str	00000000 
0000c611 l       .debug_str	00000000 
0000c617 l       .debug_str	00000000 
0000c61d l       .debug_str	00000000 
0000c646 l       .debug_str	00000000 
0000c623 l       .debug_str	00000000 
0000c658 l       .debug_str	00000000 
0000c69a l       .debug_str	00000000 
0006649c l       .debug_str	00000000 
0000c6e4 l       .debug_str	00000000 
0000c6ea l       .debug_str	00000000 
0000c6f0 l       .debug_str	00000000 
0000c719 l       .debug_str	00000000 
0000c6f6 l       .debug_str	00000000 
0000c72b l       .debug_str	00000000 
0000c76d l       .debug_str	00000000 
00065960 l       .debug_str	00000000 
0000c7b7 l       .debug_str	00000000 
0000c7bd l       .debug_str	00000000 
0000c7c3 l       .debug_str	00000000 
0000c7c9 l       .debug_str	00000000 
0000c7f2 l       .debug_str	00000000 
0000c7cf l       .debug_str	00000000 
0000c803 l       .debug_str	00000000 
0000c844 l       .debug_str	00000000 
0000c88d l       .debug_str	00000000 
0000c892 l       .debug_str	00000000 
000667ea l       .debug_str	00000000 
0000c897 l       .debug_str	00000000 
0000c89d l       .debug_str	00000000 
0000c8a3 l       .debug_str	00000000 
0000c8cc l       .debug_str	00000000 
0000c8a9 l       .debug_str	00000000 
0000c8dd l       .debug_str	00000000 
0000c91e l       .debug_str	00000000 
00065a18 l       .debug_str	00000000 
0000c967 l       .debug_str	00000000 
0000c993 l       .debug_str	00000000 
0000c970 l       .debug_str	00000000 
0000c9a4 l       .debug_str	00000000 
0000c9e5 l       .debug_str	00000000 
0000ca2e l       .debug_str	00000000 
000669be l       .debug_str	00000000 
0000ca33 l       .debug_str	00000000 
0000ca3c l       .debug_str	00000000 
0000ca43 l       .debug_str	00000000 
0000ca6e l       .debug_str	00000000 
0000ca4b l       .debug_str	00000000 
0000ca80 l       .debug_str	00000000 
0000cac2 l       .debug_str	00000000 
00066686 l       .debug_str	00000000 
0000cb0c l       .debug_str	00000000 
0000cb12 l       .debug_str	00000000 
0000cb18 l       .debug_str	00000000 
0000cb1e l       .debug_str	00000000 
0000cb24 l       .debug_str	00000000 
0000cb2c l       .debug_str	00000000 
0000cb3a l       .debug_str	00000000 
0000cb49 l       .debug_str	00000000 
0000cb5a l       .debug_str	00000000 
0000cb65 l       .debug_str	00000000 
0000cb70 l       .debug_str	00000000 
0000cb7b l       .debug_str	00000000 
0000cb82 l       .debug_str	00000000 
0000cbc8 l       .debug_str	00000000 
0000cba5 l       .debug_str	00000000 
0000cbda l       .debug_str	00000000 
0000cc1c l       .debug_str	00000000 
00065b1b l       .debug_str	00000000 
0000cc66 l       .debug_str	00000000 
0000cc93 l       .debug_str	00000000 
0000cc70 l       .debug_str	00000000 
0000cca5 l       .debug_str	00000000 
0000cce7 l       .debug_str	00000000 
0000cd31 l       .debug_str	00000000 
0000cd36 l       .debug_str	00000000 
0000cd63 l       .debug_str	00000000 
0000cd40 l       .debug_str	00000000 
0000cd75 l       .debug_str	00000000 
0000cdb7 l       .debug_str	00000000 
0000ce01 l       .debug_str	00000000 
00011e7c l       .debug_str	00000000 
0000ce80 l       .debug_str	00000000 
0000ce15 l       .debug_str	00000000 
0000ce25 l       .debug_str	00000000 
0000ce2e l       .debug_str	00000000 
0000ce39 l       .debug_str	00000000 
0000ce48 l       .debug_str	00000000 
0000ce5d l       .debug_str	00000000 
0000ce8e l       .debug_str	00000000 
0000cf2b l       .debug_str	00000000 
0000cfd0 l       .debug_str	00000000 
0000cfdb l       .debug_str	00000000 
0000cfe4 l       .debug_str	00000000 
0000d028 l       .debug_str	00000000 
0000d005 l       .debug_str	00000000 
0000d03b l       .debug_str	00000000 
0000d0be l       .debug_str	00000000 
0000d149 l       .debug_str	00000000 
0000d165 l       .debug_str	00000000 
0000d1b1 l       .debug_str	00000000 
0000d205 l       .debug_str	00000000 
0000d222 l       .debug_str	00000000 
0000d236 l       .debug_str	00000000 
0000d282 l       .debug_str	00000000 
0000d2d6 l       .debug_str	00000000 
0000d2ec l       .debug_str	00000000 
0000d300 l       .debug_str	00000000 
0000d347 l       .debug_str	00000000 
0000d396 l       .debug_str	00000000 
0000d3c2 l       .debug_str	00000000 
0000d39f l       .debug_str	00000000 
0000d3d0 l       .debug_str	00000000 
0000d3de l       .debug_str	00000000 
0000d3e5 l       .debug_str	00000000 
0000e401 l       .debug_str	00000000 
0000d3ed l       .debug_str	00000000 
0000d3f5 l       .debug_str	00000000 
0003b83c l       .debug_str	00000000 
0000d404 l       .debug_str	00000000 
0000e433 l       .debug_str	00000000 
0000d40f l       .debug_str	00000000 
0000d41a l       .debug_str	00000000 
0000d42b l       .debug_str	00000000 
0000d431 l       .debug_str	00000000 
0000d439 l       .debug_str	00000000 
0000d440 l       .debug_str	00000000 
0000d44a l       .debug_str	00000000 
0000d452 l       .debug_str	00000000 
0000d45a l       .debug_str	00000000 
0000d47c l       .debug_str	00000000 
0000d487 l       .debug_str	00000000 
0000d493 l       .debug_str	00000000 
0000d49b l       .debug_str	00000000 
0000d4a4 l       .debug_str	00000000 
000194da l       .debug_str	00000000 
0000d4af l       .debug_str	00000000 
0000d4ba l       .debug_str	00000000 
0000d4c5 l       .debug_str	00000000 
00001c35 l       .debug_str	00000000 
00065a8c l       .debug_str	00000000 
0000219a l       .debug_str	00000000 
00001c3f l       .debug_str	00000000 
00001c77 l       .debug_str	00000000 
00001cb7 l       .debug_str	00000000 
00001cef l       .debug_str	00000000 
00001cf7 l       .debug_str	00000000 
000021b3 l       .debug_str	00000000 
0000d4d5 l       .debug_str	00000000 
0000d4e5 l       .debug_str	00000000 
0000d4f4 l       .debug_str	00000000 
0000d4fc l       .debug_str	00000000 
0000d503 l       .debug_str	00000000 
0000d50b l       .debug_str	00000000 
0000d54c l       .debug_str	00000000 
0000d529 l       .debug_str	00000000 
0000d55c l       .debug_str	00000000 
0000d571 l       .debug_str	00000000 
0000d57a l       .debug_str	00000000 
0000d5d7 l       .debug_str	00000000 
0000d63c l       .debug_str	00000000 
0000d646 l       .debug_str	00000000 
0000d656 l       .debug_str	00000000 
0000d66b l       .debug_str	00000000 
0000d673 l       .debug_str	00000000 
0000d6d7 l       .debug_str	00000000 
0000d743 l       .debug_str	00000000 
0000d74a l       .debug_str	00000000 
0000d752 l       .debug_str	00000000 
0000d793 l       .debug_str	00000000 
0000d770 l       .debug_str	00000000 
0000d7a3 l       .debug_str	00000000 
0000d7b8 l       .debug_str	00000000 
0000d7cb l       .debug_str	00000000 
0000d7e0 l       .debug_str	00000000 
0000d7e7 l       .debug_str	00000000 
0000d7fc l       .debug_str	00000000 
0000dfad l       .debug_str	00000000 
0000100e l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
0000dffc l       .debug_str	00000000 
0000e03b l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 54rjibodf4dvijrz
0000f023 l       .debug_str	00000000 
0000f050 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
0000f05b l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
0000f06b l       .debug_str	00000000 
0000f09f l       .debug_str	00000000 
0000f086 l       .debug_str	00000000 
0000f0a7 l       .debug_str	00000000 
0000f0bd l       .debug_str	00000000 
0000f125 l       .debug_str	00000000 
0000f19d l       .debug_str	00000000 
0000f1ca l       .debug_str	00000000 
0000f1e2 l       .debug_str	00000000 
0000f24c l       .debug_str	00000000 
0000f254 l       .debug_str	00000000 
0000f25a l       .debug_str	00000000 
0000f264 l       .debug_str	00000000 
0000f2de l       .debug_str	00000000 
0000f34a l       .debug_str	00000000 
0000f3c3 l       .debug_str	00000000 
0000f43c l       .debug_str	00000000 
0000f4a7 l       .debug_str	00000000 
0000f516 l       .debug_str	00000000 
0000f51d l       .debug_str	00000000 
0000f528 l       .debug_str	00000000 
0000f550 l       .debug_str	00000000 
0000f5c5 l       .debug_str	00000000 
0000f642 l       .debug_str	00000000 
0000f541 l       .debug_str	00000000 
0000f64e l       .debug_str	00000000 
0000c047 l       .debug_str	00000000 
0000f6c5 l       .debug_str	00000000 
0000c035 l       .debug_str	00000000 
00057e20 l       .debug_str	00000000 
0000c05e l       .debug_str	00000000 
0000c066 l       .debug_str	00000000 
0000c06f l       .debug_str	00000000 
0000d473 l       .debug_str	00000000 
0000f72e l       .debug_str	00000000 
0000f7ac l       .debug_str	00000000 
0000f81c l       .debug_str	00000000 
0000f896 l       .debug_str	00000000 
0000f8b0 l       .debug_str	00000000 
0000f91c l       .debug_str	00000000 
0000f925 l       .debug_str	00000000 
0000f931 l       .debug_str	00000000 
0000f9a7 l       .debug_str	00000000 
0000fa1d l       .debug_str	00000000 
0000fa93 l       .debug_str	00000000 
0000fafb l       .debug_str	00000000 
00000968 l       .debug_str	00000000 
0000fb6a l       .debug_str	00000000 
00000a4f l       .debug_str	00000000 
0000fbd7 l       .debug_str	00000000 
0000fc4c l       .debug_str	00000000 
0000fc61 l       .debug_str	00000000 
0000fcc8 l       .debug_str	00000000 
0000fcd1 l       .debug_str	00000000 
0000fcdc l       .debug_str	00000000 
0000fce3 l       .debug_str	00000000 
00063df9 l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
00056d15 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
0000100e l       .debug_str	00000000 
0000fd18 l       .debug_str	00000000 
00063832 l       .debug_str	00000000 
0000fd52 l       .debug_str	00000000 
0000fd9a l       .debug_str	00000000 
000636d9 l       .debug_str	00000000 
00068b76 l       .debug_str	00000000 
0000fdcd l       .debug_str	00000000 
00001f91 l       .debug_str	00000000 
0000fdda l       .debug_str	00000000 
00001f96 l       .debug_str	00000000 
00069102 l       .debug_str	00000000 
0000b744 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
0001d309 l       .debug_str	00000000 
000054e8 l       .debug_str	00000000 
0000b74c l       .debug_str	00000000 
0000b9f2 l       .debug_str	00000000 
0000b9e9 l       .debug_str	00000000 
0000fdfb l       .debug_str	00000000 
0000fe00 l       .debug_str	00000000 
0000fe05 l       .debug_str	00000000 
0000fe0a l       .debug_str	00000000 
0000fe0f l       .debug_str	00000000 
0000dfa2 l       .debug_str	00000000 
0000fe14 l       .debug_str	00000000 
0000fe1f l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00001cbe l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00001cc2 l       .debug_str	00000000 
00001ccd l       .debug_str	00000000 
00001ce8 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
00000f10 l       .debug_str	00000000 
00000f18 l       .debug_str	00000000 
00000f23 l       .debug_str	00000000 
00000f2e l       .debug_str	00000000 
00000f3b l       .debug_str	00000000 
00000f46 l       .debug_str	00000000 
00000f4e l       .debug_str	00000000 
00000f59 l       .debug_str	00000000 
00000f64 l       .debug_str	00000000 
00000f6e l       .debug_str	00000000 
00000f79 l       .debug_str	00000000 
00000f84 l       .debug_str	00000000 
00000f91 l       .debug_str	00000000 
00000f9d l       .debug_str	00000000 
00000faa l       .debug_str	00000000 
00000fb8 l       .debug_str	00000000 
00000fc2 l       .debug_str	00000000 
00017cbe l       .debug_str	00000000 
00001c2e l       .debug_str	00000000 
0001af01 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
0000e366 l       .debug_str	00000000 
00002dad l       .debug_str	00000000 
0000e3da l       .debug_str	00000000 
0000d3de l       .debug_str	00000000 
000101ce l       .debug_str	00000000 
0000d3e5 l       .debug_str	00000000 
0000e401 l       .debug_str	00000000 
0000e3e6 l       .debug_str	00000000 
0000e40c l       .debug_str	00000000 
0000d3f5 l       .debug_str	00000000 
0003b83c l       .debug_str	00000000 
0000d404 l       .debug_str	00000000 
0000e433 l       .debug_str	00000000 
0000e418 l       .debug_str	00000000 
0000e43f l       .debug_str	00000000 
0000e44a l       .debug_str	00000000 
0000e455 l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
0000e50f l       .debug_str	00000000 
0000e466 l       .debug_str	00000000 
00000947 l       .debug_str	00000000 
0000e4ed l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
0000e4f4 l       .debug_str	00000000 
00001cd8 l       .debug_str	00000000 
0000e523 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
0000e580 l       .debug_str	00000000 
0000e5e5 l       .debug_str	00000000 
0000e5ed l       .debug_str	00000000 
0000e60f l       .debug_str	00000000 
0000e5f6 l       .debug_str	00000000 
0000e627 l       .debug_str	00000000 
0000e64d l       .debug_str	00000000 
0000e6c5 l       .debug_str	00000000 
00001c35 l       .debug_str	00000000 
00065a8c l       .debug_str	00000000 
00001c3f l       .debug_str	00000000 
00001c77 l       .debug_str	00000000 
00001cb7 l       .debug_str	00000000 
00001cef l       .debug_str	00000000 
000021b3 l       .debug_str	00000000 
0000219a l       .debug_str	00000000 
00001cf7 l       .debug_str	00000000 
0000e73c l       .debug_str	00000000 
0000e7a5 l       .debug_str	00000000 
00000895 l       .debug_str	00000000 
00000ad3 l       .debug_str	00000000 
00002195 l       .debug_str	00000000 
000021bc l       .debug_str	00000000 
0000e81d l       .debug_str	00000000 
00001f9b l       .debug_str	00000000 
00000ac8 l       .debug_str	00000000 
00001fa5 l       .debug_str	00000000 
0000087f l       .debug_str	00000000 
00000a41 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00000a2b l       .debug_str	00000000 
00000a09 l       .debug_str	00000000 
00000a9b l       .debug_str	00000000 
00067702 l       .debug_str	00000000 
000009cf l       .debug_str	00000000 
000008b1 l       .debug_str	00000000 
00000878 l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00062151 l       .debug_str	00000000 
00001fae l       .debug_str	00000000 
00001fdb l       .debug_str	00000000 
0000bfb9 l       .debug_str	00000000 
0006853d l       .debug_str	00000000 
000008f3 l       .debug_str	00000000 
00000a5c l       .debug_str	00000000 
000009b8 l       .debug_str	00000000 
000008c2 l       .debug_str	00000000 
00002010 l       .debug_str	00000000 
00002039 l       .debug_str	00000000 
00002097 l       .debug_str	00000000 
00000998 l       .debug_str	00000000 
00000aa3 l       .debug_str	00000000 
00000a7b l       .debug_str	00000000 
000020fd l       .debug_str	00000000 
00002029 l       .debug_str	00000000 
00000aba l       .debug_str	00000000 
0000086d l       .debug_str	00000000 
00000a34 l       .debug_str	00000000 
00000aab l       .debug_str	00000000 
0000211b l       .debug_str	00000000 
00000a21 l       .debug_str	00000000 
00000948 l       .debug_str	00000000 
000008db l       .debug_str	00000000 
00002131 l       .debug_str	00000000 
00002157 l       .debug_str	00000000 
0000088a l       .debug_str	00000000 
0000216d l       .debug_str	00000000 
0000fdf3 l       .debug_str	00000000 
00002136 l       .debug_str	00000000 
00002183 l       .debug_str	00000000 
0000218c l       .debug_str	00000000 
000021ed l       .debug_str	00000000 
0000e887 l       .debug_str	00000000 
0000e900 l       .debug_str	00000000 
00068b74 l       .debug_str	00000000 
000021d4 l       .debug_str	00000000 
0000e905 l       .debug_str	00000000 
00000aa4 l       .debug_str	00000000 
0000e92b l       .debug_str	00000000 
0000e912 l       .debug_str	00000000 
0000e90d l       .debug_str	00000000 
0000e936 l       .debug_str	00000000 
0000e94f l       .debug_str	00000000 
0000e9ba l       .debug_str	00000000 
00000896 l       .debug_str	00000000 
00000ad4 l       .debug_str	00000000 
0000ea2a l       .debug_str	00000000 
0000ea3a l       .debug_str	00000000 
0000eab2 l       .debug_str	00000000 
00063389 l       .debug_str	00000000 
000630e3 l       .debug_str	00000000 
0000eabc l       .debug_str	00000000 
0000eac3 l       .debug_str	00000000 
0000eae6 l       .debug_str	00000000 
0000eacd l       .debug_str	00000000 
0000eac8 l       .debug_str	00000000 
0000eaf0 l       .debug_str	00000000 
0000eb08 l       .debug_str	00000000 
0000eb72 l       .debug_str	00000000 
0000bce3 l       .debug_str	00000000 
0000bcef l       .debug_str	00000000 
0000bcf7 l       .debug_str	00000000 
0000bd51 l       .debug_str	00000000 
0000bdb3 l       .debug_str	00000000 
0000bdbe l       .debug_str	00000000 
0000be05 l       .debug_str	00000000 
0000be54 l       .debug_str	00000000 
0000be5e l       .debug_str	00000000 
0000be9b l       .debug_str	00000000 
0000bee0 l       .debug_str	00000000 
0000bee9 l       .debug_str	00000000 
0000bef9 l       .debug_str	00000000 
0000bf01 l       .debug_str	00000000 
0000bf56 l       .debug_str	00000000 
0000bfb3 l       .debug_str	00000000 
0000bfbf l       .debug_str	00000000 
0000bfc8 l       .debug_str	00000000 
0000bfd4 l       .debug_str	00000000 
0000bfe0 l       .debug_str	00000000 
0000bfe9 l       .debug_str	00000000 
0000bff1 l       .debug_str	00000000 
0000c027 l       .debug_str	00000000 
0000c00e l       .debug_str	00000000 
0000bff9 l       .debug_str	00000000 
0000ebe7 l       .debug_str	00000000 
0000ec4e l       .debug_str	00000000 
0000ecc9 l       .debug_str	00000000 
0000ecd9 l       .debug_str	00000000 
0000ece2 l       .debug_str	00000000 
0000ecf0 l       .debug_str	00000000 
0000ecfe l       .debug_str	00000000 
0000ed0a l       .debug_str	00000000 
0000ef18 l       .debug_str	00000000 
0000ed16 l       .debug_str	00000000 
0000ed25 l       .debug_str	00000000 
0000ed2d l       .debug_str	00000000 
0000ed46 l       .debug_str	00000000 
0000c03d l       .debug_str	00000000 
0000ed57 l       .debug_str	00000000 
0000ed5f l       .debug_str	00000000 
0000ed92 l       .debug_str	00000000 
0000ed79 l       .debug_str	00000000 
0000ed9e l       .debug_str	00000000 
0000bfec l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
0000edd0 l       .debug_str	00000000 
0000edb7 l       .debug_str	00000000 
0000eddb l       .debug_str	00000000 
0000edfd l       .debug_str	00000000 
0000ede4 l       .debug_str	00000000 
0000ee0a l       .debug_str	00000000 
0000ee25 l       .debug_str	00000000 
0000ee92 l       .debug_str	00000000 
0000ef0f l       .debug_str	00000000 
0000ef17 l       .debug_str	00000000 
0000f1bb l       .debug_str	00000000 
0000f1a2 l       .debug_str	00000000 
0000ef21 l       .debug_str	00000000 
0000ef3e l       .debug_str	00000000 
0000efad l       .debug_str	00000000 
000196cf l       .debug_str	00000000 
0000f02c l       .debug_str	00000000 
0000f03a l       .debug_str	00000000 
0000f041 l       .debug_str	00000000 
0000f048 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 54wqyk0x3q5b56ac
00062a03 l       .debug_str	00000000 
00000ed0 l       .debug_str	00000000 
00000ebe l       .debug_str	00000000 
00000edb l       .debug_str	00000000 
0003bcfd l       .debug_str	00000000 
0000fe24 l       .debug_str	00000000 
00003431 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00057262 l       .debug_str	00000000 
000410bb l       .debug_str	00000000 
00003435 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000b51 l       .debug_str	00000000 
00000b56 l       .debug_str	00000000 
00000b5c l       .debug_str	00000000 
00000b63 l       .debug_str	00000000 
00000b6b l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00000c56 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
00000c70 l       .debug_str	00000000 
00000c7c l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00040bba l       .debug_str	00000000 
00000c84 l       .debug_str	00000000 
00000c89 l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00000c90 l       .debug_str	00000000 
00064e10 l       .debug_str	00000000 
00001a1f l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00069452 l       .debug_str	00000000 
0000bfe3 l       .debug_str	00000000 
00000c99 l       .debug_str	00000000 
00000ca3 l       .debug_str	00000000 
00000caa l       .debug_str	00000000 
00000ca6 l       .debug_str	00000000 
00000cb0 l       .debug_str	00000000 
00000cb8 l       .debug_str	00000000 
000010b6 l       .debug_str	00000000 
00000cbe l       .debug_str	00000000 
00000ce3 l       .debug_str	00000000 
00000cc9 l       .debug_str	00000000 
00000cec l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000d10 l       .debug_str	00000000 
00062a8c l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00000d37 l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
00000d3d l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00000d4c l       .debug_str	00000000 
00000d50 l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
00000c2a l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
00000c45 l       .debug_str	00000000 
00000d59 l       .debug_str	00000000 
00000d65 l       .debug_str	00000000 
00000d8a l       .debug_str	00000000 
00000d7e l       .debug_str	00000000 
00000d8f l       .debug_str	00000000 
00000d99 l       .debug_str	00000000 
00000da7 l       .debug_str	00000000 
00000db2 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
00000dc8 l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000def l       .debug_str	00000000 
00000e06 l       .debug_str	00000000 
00000e2a l       .debug_str	00000000 
00000e56 l       .debug_str	00000000 
00000e46 l       .debug_str	00000000 
00000e60 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 htrvvlxbjnr4rth
00000c66 l       .debug_str	00000000 
00000ca6 l       .debug_str	00000000 
00000cb0 l       .debug_str	00000000 
00000cb8 l       .debug_str	00000000 
00000cbe l       .debug_str	00000000 
00000ce3 l       .debug_str	00000000 
00000cc9 l       .debug_str	00000000 
00000cec l       .debug_str	00000000 
00000d10 l       .debug_str	00000000 
0003bcfd l       .debug_str	00000000 
0001017b l       .debug_str	00000000 
000101ac l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00020224 l       .debug_str	00000000 
000101c6 l       .debug_str	00000000 
0002c770 l       .debug_str	00000000 
00008798 l       .debug_str	00000000 
000101cc l       .debug_str	00000000 
00001f8b l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
000101d2 l       .debug_str	00000000 
00010224 l       .debug_str	00000000 
00010277 l       .debug_str	00000000 
0000b9f7 l       .debug_str	00000000 
000102ca l       .debug_str	00000000 
00010333 l       .debug_str	00000000 
0001035f l       .debug_str	00000000 
000103d8 l       .debug_str	00000000 
0003bcf1 l       .debug_str	00000000 
0001042b l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00057262 l       .debug_str	00000000 
000410bb l       .debug_str	00000000 
00003435 l       .debug_str	00000000 
00000b51 l       .debug_str	00000000 
00000b56 l       .debug_str	00000000 
00000b5c l       .debug_str	00000000 
00000b63 l       .debug_str	00000000 
00000b6b l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00068126 l       .debug_str	00000000 
0000b737 l       .debug_str	00000000 
00000f15 l       .debug_str	00000000 
0000fe56 l       .debug_str	00000000 
00010355 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00000d37 l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
00000d3d l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00000d4c l       .debug_str	00000000 
00000d50 l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
00000c2a l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
00000c45 l       .debug_str	00000000 
00000d59 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d65 l       .debug_str	00000000 
00000d8a l       .debug_str	00000000 
00000d7e l       .debug_str	00000000 
00000d8f l       .debug_str	00000000 
0000bfe3 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00001a1f l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00069452 l       .debug_str	00000000 
000010b6 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00000d99 l       .debug_str	00000000 
00000c99 l       .debug_str	00000000 
00062a03 l       .debug_str	00000000 
00000da7 l       .debug_str	00000000 
00000db2 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
00000ebe l       .debug_str	00000000 
00000dc8 l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000def l       .debug_str	00000000 
00000e06 l       .debug_str	00000000 
00000e2a l       .debug_str	00000000 
00062a8c l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00000edb l       .debug_str	00000000 
00000e56 l       .debug_str	00000000 
00000e46 l       .debug_str	00000000 
00000e60 l       .debug_str	00000000 
00000ed0 l       .debug_str	00000000 
00020225 l       .debug_str	00000000 
0000fe65 l       .debug_str	00000000 
0000bb6c l       .debug_str	00000000 
0000fead l       .debug_str	00000000 
000060d3 l       .debug_str	00000000 
000101ce l       .debug_str	00000000 
0000fef5 l       .debug_str	00000000 
0000ff3d l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
0000ff46 l       .debug_str	00000000 
00006082 l       .debug_str	00000000 
0000ff8e l       .debug_str	00000000 
0000ffd6 l       .debug_str	00000000 
0000ffde l       .debug_str	00000000 
0001000f l       .debug_str	00000000 
000101cd l       .debug_str	00000000 
00010018 l       .debug_str	00000000 
00010049 l       .debug_str	00000000 
000087b7 l       .debug_str	00000000 
00010053 l       .debug_str	00000000 
00010084 l       .debug_str	00000000 
0000ba07 l       .debug_str	00000000 
0000b9f8 l       .debug_str	00000000 
0001008e l       .debug_str	00000000 
000100bf l       .debug_str	00000000 
00010334 l       .debug_str	00000000 
000100df l       .debug_str	00000000 
00010110 l       .debug_str	00000000 
000087a3 l       .debug_str	00000000 
00010140 l       .debug_str	00000000 
00010171 l       .debug_str	00000000 
00000c56 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
00000c70 l       .debug_str	00000000 
00000c7c l       .debug_str	00000000 
00040bba l       .debug_str	00000000 
00000c84 l       .debug_str	00000000 
00000c89 l       .debug_str	00000000 
00000c90 l       .debug_str	00000000 
00064e10 l       .debug_str	00000000 
00000ca3 l       .debug_str	00000000 
00000caa l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 z5rycehogflviby
00065252 l       .debug_str	00000000 
0001069a l       .debug_str	00000000 
00061e12 l       .debug_str	00000000 
0000e362 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
00062a03 l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
00069888 l       .debug_str	00000000 
00069887 l       .debug_str	00000000 
00069102 l       .debug_str	00000000 
0000b744 l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
0001d309 l       .debug_str	00000000 
000054e8 l       .debug_str	00000000 
0000b74c l       .debug_str	00000000 
0000b9f2 l       .debug_str	00000000 
0000b9e9 l       .debug_str	00000000 
0000e903 l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
00031927 l       .debug_str	00000000 
0001bfdf l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
0001048e l       .debug_str	00000000 
00061d35 l       .debug_str	00000000 
00010492 l       .debug_str	00000000 
000104c3 l       .debug_str	00000000 
000104c9 l       .debug_str	00000000 
0001050a l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
0001051f l       .debug_str	00000000 
00010556 l       .debug_str	00000000 
00010561 l       .debug_str	00000000 
00068388 l       .debug_str	00000000 
00010593 l       .debug_str	00000000 
00061e79 l       .debug_str	00000000 
000105c7 l       .debug_str	00000000 
00061e68 l       .debug_str	00000000 
000105fb l       .debug_str	00000000 
00061e20 l       .debug_str	00000000 
00010632 l       .debug_str	00000000 
00061eb2 l       .debug_str	00000000 
0001066a l       .debug_str	00000000 
00061ce3 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 1qpcwo0ys0dum9aa
00010850 l       .debug_str	00000000 
0001086b l       .debug_str	00000000 
000107a4 l       .debug_str	00000000 
00010819 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00005c4b l       .debug_str	00000000 
000108a0 l       .debug_str	00000000 
00008922 l       .debug_str	00000000 
000108e5 l       .debug_str	00000000 
00020225 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00001a29 l       .debug_str	00000000 
0000107f l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00001090 l       .debug_str	00000000 
0000109b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00008867 l       .debug_str	00000000 
0003c3db l       .debug_str	00000000 
00010700 l       .debug_str	00000000 
0001076f l       .debug_str	00000000 
00001085 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
000108af l       .debug_str	00000000 
000010a2 l       .debug_str	00000000 
000010af l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 1tbtdbxm9squq4dl
0001c814 l       .debug_str	00000000 
000115f6 l       .debug_str	00000000 
00011603 l       .debug_str	00000000 
00011643 l       .debug_str	00000000 
0001165f l       .debug_str	00000000 
0001169f l       .debug_str	00000000 
000116be l       .debug_str	00000000 
000116fe l       .debug_str	00000000 
0001170d l       .debug_str	00000000 
0001174d l       .debug_str	00000000 
0001175b l       .debug_str	00000000 
0001179b l       .debug_str	00000000 
00011898 l       .debug_str	00000000 
000118d8 l       .debug_str	00000000 
00067983 l       .debug_str	00000000 
000118e6 l       .debug_str	00000000 
000118f1 l       .debug_str	00000000 
000118fc l       .debug_str	00000000 
00000788 l       .debug_str	00000000 
00011906 l       .debug_str	00000000 
00011947 l       .debug_str	00000000 
0001197c l       .debug_str	00000000 
00011989 l       .debug_str	00000000 
000044cb l       .debug_str	00000000 
00011993 l       .debug_str	00000000 
000119d4 l       .debug_str	00000000 
00011a21 l       .debug_str	00000000 
00011a2c l       .debug_str	00000000 
00011a6d l       .debug_str	00000000 
00011aba l       .debug_str	00000000 
00011afb l       .debug_str	00000000 
00011b30 l       .debug_str	00000000 
00011b3a l       .debug_str	00000000 
00011b7b l       .debug_str	00000000 
00011bb0 l       .debug_str	00000000 
00011c1f l       .debug_str	00000000 
00011d20 l       .debug_str	00000000 
00011d8f l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00011da1 l       .debug_str	00000000 
00011dc0 l       .debug_str	00000000 
0000e362 l       .debug_str	00000000 
00006531 l       .debug_str	00000000 
00000c8a l       .debug_str	00000000 
00062cd9 l       .debug_str	00000000 
0000e903 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00000c2a l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00057262 l       .debug_str	00000000 
0000574e l       .debug_str	00000000 
000108f0 l       .debug_str	00000000 
00066cd8 l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
0001bfdf l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
000215b7 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
00000f10 l       .debug_str	00000000 
00000f18 l       .debug_str	00000000 
00000f23 l       .debug_str	00000000 
00000f2e l       .debug_str	00000000 
00000f3b l       .debug_str	00000000 
00000f46 l       .debug_str	00000000 
00000f4e l       .debug_str	00000000 
00000f59 l       .debug_str	00000000 
00000f64 l       .debug_str	00000000 
00000f6e l       .debug_str	00000000 
00000f79 l       .debug_str	00000000 
00000f84 l       .debug_str	00000000 
00000f91 l       .debug_str	00000000 
00000f9d l       .debug_str	00000000 
00000faa l       .debug_str	00000000 
00000fb8 l       .debug_str	00000000 
00000fc2 l       .debug_str	00000000 
00017cbe l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00056d15 l       .debug_str	00000000 
00011db0 l       .debug_str	00000000 
00011e7c l       .debug_str	00000000 
000108f6 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00010916 l       .debug_str	00000000 
00068d42 l       .debug_str	00000000 
00031b8a l       .debug_str	00000000 
000114cb l       .debug_str	00000000 
00068388 l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
00002474 l       .debug_str	00000000 
0000247a l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00002481 l       .debug_str	00000000 
0001091f l       .debug_str	00000000 
0006449e l       .debug_str	00000000 
0001092d l       .debug_str	00000000 
00010935 l       .debug_str	00000000 
000011e4 l       .debug_str	00000000 
0001093d l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
0000f05b l       .debug_str	00000000 
00010959 l       .debug_str	00000000 
0001099e l       .debug_str	00000000 
00010a0b l       .debug_str	00000000 
00010aa1 l       .debug_str	00000000 
00010b60 l       .debug_str	00000000 
00010b68 l       .debug_str	00000000 
00010b6d l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
00015d3f l       .debug_str	00000000 
00010b73 l       .debug_str	00000000 
00010b76 l       .debug_str	00000000 
00010b9f l       .debug_str	00000000 
00062e93 l       .debug_str	00000000 
00010bd5 l       .debug_str	00000000 
00010c02 l       .debug_str	00000000 
00010c05 l       .debug_str	00000000 
00010c55 l       .debug_str	00000000 
00010cb2 l       .debug_str	00000000 
00010d06 l       .debug_str	00000000 
00010d7d l       .debug_str	00000000 
00010e01 l       .debug_str	00000000 
00010e7c l       .debug_str	00000000 
00010f1a l       .debug_str	00000000 
00010fc5 l       .debug_str	00000000 
00011067 l       .debug_str	00000000 
0001112c l       .debug_str	00000000 
000111fe l       .debug_str	00000000 
00028725 l       .debug_str	00000000 
00027cc7 l       .debug_str	00000000 
0002791e l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00062da4 l       .debug_str	00000000 
0002b755 l       .debug_str	00000000 
000112c7 l       .debug_str	00000000 
000002ea l       .debug_str	00000000 
0001c23d l       .debug_str	00000000 
000113c8 l       .debug_str	00000000 
0000100e l       .debug_str	00000000 
000114c6 l       .debug_str	00000000 
000114cf l       .debug_str	00000000 
000114d6 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
000114de l       .debug_str	00000000 
000114f2 l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00011524 l       .debug_str	00000000 
00011538 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
0001156a l       .debug_str	00000000 
000115a9 l       .debug_str	00000000 
000115b7 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 24um2j7oik6b5n7l
00000db9 l       .debug_str	00000000 
00000ed0 l       .debug_str	00000000 
00000ebe l       .debug_str	00000000 
00000edb l       .debug_str	00000000 
0003bcfd l       .debug_str	00000000 
00011dde l       .debug_str	00000000 
00011e29 l       .debug_str	00000000 
00003431 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00011e5b l       .debug_str	00000000 
0002c770 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00057262 l       .debug_str	00000000 
000410bb l       .debug_str	00000000 
00003435 l       .debug_str	00000000 
00000b51 l       .debug_str	00000000 
00000b56 l       .debug_str	00000000 
00000b5c l       .debug_str	00000000 
00000b63 l       .debug_str	00000000 
00000b6b l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00000c56 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
00000c70 l       .debug_str	00000000 
00000c7c l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00040bba l       .debug_str	00000000 
00000c84 l       .debug_str	00000000 
00000c89 l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00000c90 l       .debug_str	00000000 
00064e10 l       .debug_str	00000000 
00001a1f l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00069452 l       .debug_str	00000000 
0000bfe3 l       .debug_str	00000000 
00000c99 l       .debug_str	00000000 
00000ca3 l       .debug_str	00000000 
00000caa l       .debug_str	00000000 
00000ca6 l       .debug_str	00000000 
00000cb0 l       .debug_str	00000000 
00000cb8 l       .debug_str	00000000 
000010b6 l       .debug_str	00000000 
00000cbe l       .debug_str	00000000 
00000ce3 l       .debug_str	00000000 
00000cc9 l       .debug_str	00000000 
00000cec l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000d10 l       .debug_str	00000000 
00062a8c l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00000d37 l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
00000d3d l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00000d4c l       .debug_str	00000000 
00000d50 l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
00000c2a l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
00000c45 l       .debug_str	00000000 
00000d59 l       .debug_str	00000000 
00000d65 l       .debug_str	00000000 
00000d8a l       .debug_str	00000000 
00000d7e l       .debug_str	00000000 
00000d8f l       .debug_str	00000000 
00000d99 l       .debug_str	00000000 
00062a03 l       .debug_str	00000000 
00000da7 l       .debug_str	00000000 
00000db2 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
00000dc8 l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000def l       .debug_str	00000000 
00000e06 l       .debug_str	00000000 
00000e2a l       .debug_str	00000000 
00000e56 l       .debug_str	00000000 
00000e46 l       .debug_str	00000000 
00000e60 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 3102d5fidnprmal
0001c814 l       .debug_str	00000000 
00011f4a l       .debug_str	00000000 
00011f66 l       .debug_str	00000000 
00011fa2 l       .debug_str	00000000 
00011fd8 l       .debug_str	00000000 
00012014 l       .debug_str	00000000 
0001201f l       .debug_str	00000000 
0001205b l       .debug_str	00000000 
00012069 l       .debug_str	00000000 
000120a6 l       .debug_str	00000000 
000120dd l       .debug_str	00000000 
0001211a l       .debug_str	00000000 
00012129 l       .debug_str	00000000 
00012166 l       .debug_str	00000000 
000121a9 l       .debug_str	00000000 
000121e6 l       .debug_str	00000000 
0001221d l       .debug_str	00000000 
00012242 l       .debug_str	00000000 
00012280 l       .debug_str	00000000 
000122b7 l       .debug_str	00000000 
000122f6 l       .debug_str	00000000 
0001232f l       .debug_str	00000000 
0001076f l       .debug_str	00000000 
0002c770 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00012393 l       .debug_str	00000000 
0000e362 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
00069443 l       .debug_str	00000000 
000108a0 l       .debug_str	00000000 
000123ae l       .debug_str	00000000 
000123cb l       .debug_str	00000000 
00002dad l       .debug_str	00000000 
0000883f l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
00001134 l       .debug_str	00000000 
00001a29 l       .debug_str	00000000 
00001090 l       .debug_str	00000000 
0000109b l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00008867 l       .debug_str	00000000 
00001138 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
000123da l       .debug_str	00000000 
00011e7c l       .debug_str	00000000 
000123a2 l       .debug_str	00000000 
000108f0 l       .debug_str	00000000 
00066cd8 l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
0001bfdf l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
000215b7 l       .debug_str	00000000 
00011e5f l       .debug_str	00000000 
000108af l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00012237 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
0001d309 l       .debug_str	00000000 
000123bd l       .debug_str	00000000 
00011e7b l       .debug_str	00000000 
00011e80 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00001180 l       .debug_str	00000000 
00001189 l       .debug_str	00000000 
00001197 l       .debug_str	00000000 
000088ca l       .debug_str	00000000 
000125b7 l       .debug_str	00000000 
000011af l       .debug_str	00000000 
000011e4 l       .debug_str	00000000 
00001041 l       .debug_str	00000000 
0000104c l       .debug_str	00000000 
000021fd l       .debug_str	00000000 
000044cb l       .debug_str	00000000 
00067983 l       .debug_str	00000000 
00011e8d l       .debug_str	00000000 
00001228 l       .debug_str	00000000 
000012c3 l       .debug_str	00000000 
00011ec6 l       .debug_str	00000000 
00011f02 l       .debug_str	00000000 
00011f0e l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 3l17l2nzvwrwvvc8
00001367 l       .debug_str	00000000 
000124e5 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00020225 l       .debug_str	00000000 
000087a3 l       .debug_str	00000000 
000087ad l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00002c46 l       .debug_str	00000000 
000023f2 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
0001241c l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00012480 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 3lwvn54roxqwo3v1
00001a29 l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
0000107f l       .debug_str	00000000 
00001085 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00001090 l       .debug_str	00000000 
0000109b l       .debug_str	00000000 
00008867 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
000108af l       .debug_str	00000000 
000010a2 l       .debug_str	00000000 
000010af l       .debug_str	00000000 
0003c3db l       .debug_str	00000000 
0001086b l       .debug_str	00000000 
000010e4 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
000010ea l       .debug_str	00000000 
00008953 l       .debug_str	00000000 
000010f4 l       .debug_str	00000000 
000125b7 l       .debug_str	00000000 
0000898e l       .debug_str	00000000 
00015bed l       .debug_str	00000000 
0001274e l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00001a24 l       .debug_str	00000000 
00005f81 l       .debug_str	00000000 
0001254a l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00062e3e l       .debug_str	00000000 
00001afe l       .debug_str	00000000 
0000b646 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
0000b650 l       .debug_str	00000000 
0000b65b l       .debug_str	00000000 
0000b665 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
0000b684 l       .debug_str	00000000 
00012557 l       .debug_str	00000000 
0001259d l       .debug_str	00000000 
000118e6 l       .debug_str	00000000 
00065821 l       .debug_str	00000000 
0000b36d l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
0000d443 l       .debug_str	00000000 
0000b642 l       .debug_str	00000000 
000125a5 l       .debug_str	00000000 
00062c5e l       .debug_str	00000000 
0000b6a7 l       .debug_str	00000000 
000686fc l       .debug_str	00000000 
000125a9 l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
000125ad l       .debug_str	00000000 
000021f8 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00067b38 l       .debug_str	00000000 
000125b6 l       .debug_str	00000000 
00067190 l       .debug_str	00000000 
00016d33 l       .debug_str	00000000 
000125b9 l       .debug_str	00000000 
000125f9 l       .debug_str	00000000 
00012608 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000f10 l       .debug_str	00000000 
00000f18 l       .debug_str	00000000 
00000f23 l       .debug_str	00000000 
00000f2e l       .debug_str	00000000 
00000f3b l       .debug_str	00000000 
00000f46 l       .debug_str	00000000 
00000f4e l       .debug_str	00000000 
00000f59 l       .debug_str	00000000 
00000f64 l       .debug_str	00000000 
00000f6e l       .debug_str	00000000 
00000f79 l       .debug_str	00000000 
00000f84 l       .debug_str	00000000 
00000f91 l       .debug_str	00000000 
00000f9d l       .debug_str	00000000 
00000faa l       .debug_str	00000000 
00000fb8 l       .debug_str	00000000 
00000fc2 l       .debug_str	00000000 
00017cbe l       .debug_str	00000000 
00012650 l       .debug_str	00000000 
00012697 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00056d15 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
0000100e l       .debug_str	00000000 
000126a5 l       .debug_str	00000000 
000126e9 l       .debug_str	00000000 
000126f4 l       .debug_str	00000000 
000126fd l       .debug_str	00000000 
00012705 l       .debug_str	00000000 
00063092 l       .debug_str	00000000 
00064a39 l       .debug_str	00000000 
0000b6be l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
0001270e l       .debug_str	00000000 
000114c6 l       .debug_str	00000000 
0001197c l       .debug_str	00000000 
00031a67 l       .debug_str	00000000 
00002474 l       .debug_str	00000000 
0004c067 l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
0000247a l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00002481 l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
00012714 l       .debug_str	00000000 
0001272b l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
00062da4 l       .debug_str	00000000 
00014f8d l       .debug_str	00000000 
00012741 l       .debug_str	00000000 
00001f86 l       .debug_str	00000000 
000087ad l       .debug_str	00000000 
00012747 l       .debug_str	00000000 
000010d1 l       .debug_str	00000000 
000010d7 l       .debug_str	00000000 
00005c47 l       .debug_str	00000000 
000011a9 l       .debug_str	00000000 
0000105f l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
0000881c l       .debug_str	00000000 
00067fb9 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
200000e8 l     O .data	00000008 _ZN22piet_embedded_graphics7display12SPI_SETTINGS17h24df2b4cc156028eE
2000020c l     O .bss	00000004 _ZN22piet_embedded_graphics7display14BACKLIGHT_HIGH17h42081c58866dcb71E
00000000 l    df *ABS*	00000000 3p4cvfsm7744rvup
00012bbf l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00001180 l       .debug_str	00000000 
00001189 l       .debug_str	00000000 
00001197 l       .debug_str	00000000 
000088ca l       .debug_str	00000000 
000011af l       .debug_str	00000000 
000012c3 l       .debug_str	00000000 
00012aa9 l       .debug_str	00000000 
00001864 l       .debug_str	00000000 
00012b66 l       .debug_str	00000000 
000018f2 l       .debug_str	00000000 
0001076f l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00012c42 l       .debug_str	00000000 
00012ca6 l       .debug_str	00000000 
000010a9 l       .debug_str	00000000 
00012ca9 l       .debug_str	00000000 
0001411e l       .debug_str	00000000 
00001134 l       .debug_str	00000000 
00001138 l       .debug_str	00000000 
000123da l       .debug_str	00000000 
0006207c l       .debug_str	00000000 
00012d19 l       .debug_str	00000000 
0006999a l       .debug_str	00000000 
00012d26 l       .debug_str	00000000 
00001a1f l       .debug_str	00000000 
000044cb l       .debug_str	00000000 
000007da l       .debug_str	00000000 
00005c4b l       .debug_str	00000000 
000087bc l       .debug_str	00000000 
00008922 l       .debug_str	00000000 
000108e5 l       .debug_str	00000000 
00010850 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00001a29 l       .debug_str	00000000 
00001041 l       .debug_str	00000000 
0000104c l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
000021fd l       .debug_str	00000000 
00001056 l       .debug_str	00000000 
000011a9 l       .debug_str	00000000 
0000105f l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
0000881c l       .debug_str	00000000 
00001072 l       .debug_str	00000000 
0000107f l       .debug_str	00000000 
00001085 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00001090 l       .debug_str	00000000 
0000109b l       .debug_str	00000000 
00008867 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
000108af l       .debug_str	00000000 
000010a2 l       .debug_str	00000000 
000010af l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
0003c3db l       .debug_str	00000000 
0001086b l       .debug_str	00000000 
000125b7 l       .debug_str	00000000 
00012c6d l       .debug_str	00000000 
00012755 l       .debug_str	00000000 
000127f2 l       .debug_str	00000000 
0001282b l       .debug_str	00000000 
0000153f l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
00012cd8 l       .debug_str	00000000 
000128ca l       .debug_str	00000000 
0000160f l       .debug_str	00000000 
00012967 l       .debug_str	00000000 
00012a0a l       .debug_str	00000000 
00001779 l       .debug_str	00000000 
0001c100 l     O .text	0000001c str.0
0001c130 l     O .text	00000021 str.1
00000000 l    df *ABS*	00000000 3zo2ztioz8wb8gwi
0001272b l       .debug_str	00000000 
00010d06 l       .debug_str	00000000 
00010d7d l       .debug_str	00000000 
00010e01 l       .debug_str	00000000 
00010e7c l       .debug_str	00000000 
00010f1a l       .debug_str	00000000 
00010fc5 l       .debug_str	00000000 
00027179 l       .debug_str	00000000 
00026729 l       .debug_str	00000000 
000263c2 l       .debug_str	00000000 
0002b523 l       .debug_str	00000000 
0001502b l       .debug_str	00000000 
00014734 l       .debug_str	00000000 
00014769 l       .debug_str	00000000 
00014857 l       .debug_str	00000000 
0001488c l       .debug_str	00000000 
00015122 l       .debug_str	00000000 
000148a3 l       .debug_str	00000000 
000148d8 l       .debug_str	00000000 
00014914 l       .debug_str	00000000 
00014949 l       .debug_str	00000000 
0001525b l       .debug_str	00000000 
00014a75 l       .debug_str	00000000 
00014aaa l       .debug_str	00000000 
00014afc l       .debug_str	00000000 
00014b31 l       .debug_str	00000000 
00014c84 l       .debug_str	00000000 
00014c9a l       .debug_str	00000000 
00014ca3 l       .debug_str	00000000 
00014dec l       .debug_str	00000000 
00014e88 l       .debug_str	00000000 
00014ea1 l       .debug_str	00000000 
00014f6b l       .debug_str	00000000 
00014fa3 l       .debug_str	00000000 
00014fe8 l       .debug_str	00000000 
00015017 l       .debug_str	00000000 
000150f6 l       .debug_str	00000000 
000150fe l       .debug_str	00000000 
0001512b l       .debug_str	00000000 
00015248 l       .debug_str	00000000 
0001528b l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00000d4c l       .debug_str	00000000 
00000d50 l       .debug_str	00000000 
00005f5b l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00012237 l       .debug_str	00000000 
00011e7c l       .debug_str	00000000 
00011e7b l       .debug_str	00000000 
0001221d l       .debug_str	00000000 
00003e97 l       .debug_str	00000000 
00012d29 l       .debug_str	00000000 
00006540 l       .debug_str	00000000 
00012d30 l       .debug_str	00000000 
00012d6b l       .debug_str	00000000 
00057262 l       .debug_str	00000000 
0000574e l       .debug_str	00000000 
00012da2 l       .debug_str	00000000 
00012dd7 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00012dfc l       .debug_str	00000000 
00012e31 l       .debug_str	00000000 
00010916 l       .debug_str	00000000 
000114cb l       .debug_str	00000000 
00031b8a l       .debug_str	00000000 
00068388 l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
00002474 l       .debug_str	00000000 
0000247a l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00002481 l       .debug_str	00000000 
0001091f l       .debug_str	00000000 
0006449e l       .debug_str	00000000 
0001092d l       .debug_str	00000000 
00010935 l       .debug_str	00000000 
000011e4 l       .debug_str	00000000 
00012e49 l       .debug_str	00000000 
00012e66 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00012eac l       .debug_str	00000000 
00012ebd l       .debug_str	00000000 
00012f2d l       .debug_str	00000000 
00012fc7 l       .debug_str	00000000 
0001308a l       .debug_str	00000000 
00013177 l       .debug_str	00000000 
00010b60 l       .debug_str	00000000 
00010b68 l       .debug_str	00000000 
00010b6d l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
00015d3f l       .debug_str	00000000 
00010b73 l       .debug_str	00000000 
00010b76 l       .debug_str	00000000 
00010b9f l       .debug_str	00000000 
00062e93 l       .debug_str	00000000 
00010bd5 l       .debug_str	00000000 
0001328e l       .debug_str	00000000 
000132de l       .debug_str	00000000 
0001333b l       .debug_str	00000000 
00010c02 l       .debug_str	00000000 
0001338f l       .debug_str	00000000 
00013406 l       .debug_str	00000000 
0001348a l       .debug_str	00000000 
00013505 l       .debug_str	00000000 
000135a3 l       .debug_str	00000000 
0001364e l       .debug_str	00000000 
000136f0 l       .debug_str	00000000 
000137b5 l       .debug_str	00000000 
00013887 l       .debug_str	00000000 
00013950 l       .debug_str	00000000 
00013a3c l       .debug_str	00000000 
00013b35 l       .debug_str	00000000 
00013c25 l       .debug_str	00000000 
00013d38 l       .debug_str	00000000 
00013e58 l       .debug_str	00000000 
00020d18 l       .debug_str	00000000 
00026026 l       .debug_str	00000000 
00025b90 l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00062da4 l       .debug_str	00000000 
0002b3c4 l       .debug_str	00000000 
000002ea l       .debug_str	00000000 
0001529f l       .debug_str	00000000 
000021fd l       .debug_str	00000000 
00014cb7 l       .debug_str	00000000 
00013f6f l       .debug_str	00000000 
00013fa4 l       .debug_str	00000000 
00001a24 l       .debug_str	00000000 
000140fc l       .debug_str	00000000 
00016d8a l       .debug_str	00000000 
00001a29 l       .debug_str	00000000 
00001041 l       .debug_str	00000000 
0000104c l       .debug_str	00000000 
00001056 l       .debug_str	00000000 
000011a9 l       .debug_str	00000000 
0000105f l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
0000881c l       .debug_str	00000000 
00001072 l       .debug_str	00000000 
0000107f l       .debug_str	00000000 
00001085 l       .debug_str	00000000 
00001090 l       .debug_str	00000000 
0000109b l       .debug_str	00000000 
00008867 l       .debug_str	00000000 
000108af l       .debug_str	00000000 
000010a2 l       .debug_str	00000000 
000010af l       .debug_str	00000000 
0003c3db l       .debug_str	00000000 
0001086b l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
000125b7 l       .debug_str	00000000 
00012cd8 l       .debug_str	00000000 
00014102 l       .debug_str	00000000 
00014109 l       .debug_str	00000000 
00014111 l       .debug_str	00000000 
00027f59 l       .debug_str	00000000 
00026efd l       .debug_str	00000000 
00026adc l       .debug_str	00000000 
0002b61d l       .debug_str	00000000 
0001513f l       .debug_str	00000000 
00014118 l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
00014e10 l       .debug_str	00000000 
00014124 l       .debug_str	00000000 
00014159 l       .debug_str	00000000 
000108f0 l       .debug_str	00000000 
00066cd8 l       .debug_str	00000000 
0001bfdf l       .debug_str	00000000 
000215b7 l       .debug_str	00000000 
00014204 l       .debug_str	00000000 
00014239 l       .debug_str	00000000 
00014261 l       .debug_str	00000000 
00014266 l       .debug_str	00000000 
0001426c l       .debug_str	00000000 
00014275 l       .debug_str	00000000 
0006549a l       .debug_str	00000000 
00014ec5 l       .debug_str	00000000 
0001427f l       .debug_str	00000000 
000142b4 l       .debug_str	00000000 
000114c6 l       .debug_str	00000000 
0001197c l       .debug_str	00000000 
00031a67 l       .debug_str	00000000 
0004c067 l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
00012714 l       .debug_str	00000000 
00014f8d l       .debug_str	00000000 
00014f70 l       .debug_str	00000000 
0001438d l       .debug_str	00000000 
000143c2 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
0001500c l       .debug_str	00000000 
00014fb6 l       .debug_str	00000000 
00014409 l       .debug_str	00000000 
0001443e l       .debug_str	00000000 
00014492 l       .debug_str	00000000 
000144c7 l       .debug_str	00000000 
00014505 l       .debug_str	00000000 
00014532 l       .debug_str	00000000 
00014553 l       .debug_str	00000000 
000145ba l       .debug_str	00000000 
0001465a l       .debug_str	00000000 
00010c05 l       .debug_str	00000000 
00010c55 l       .debug_str	00000000 
00010cb2 l       .debug_str	00000000 
0000d11a l     F .text	00000014 _ZN4core3ptr18real_drop_in_place17h341d5af2990194aeE
0000d168 l     F .text	00000012 _ZN4core3ptr18real_drop_in_place17h9f2dd99f41bfa5ddE
0000d182 l     F .text	00000012 _ZN4core3ptr18real_drop_in_place17hb90aa7de9eead791E
00000000 l    df *ABS*	00000000 4gnzgbeoaabs9i86
00001367 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00001a29 l       .debug_str	00000000 
00001090 l       .debug_str	00000000 
0000109b l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
0000883f l       .debug_str	00000000 
000153cf l       .debug_str	00000000 
00002c46 l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00008867 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 55fdxg6zius5gse3
00015941 l       .debug_str	00000000 
0001086b l       .debug_str	00000000 
000010e4 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
000010f4 l       .debug_str	00000000 
00015bed l       .debug_str	00000000 
00015536 l       .debug_str	00000000 
000155dc l       .debug_str	00000000 
00015649 l       .debug_str	00000000 
000156ed l       .debug_str	00000000 
00015759 l       .debug_str	00000000 
000157ff l       .debug_str	00000000 
0001586b l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00015877 l       .debug_str	00000000 
00015883 l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00015890 l       .debug_str	00000000 
000699b0 l       .debug_str	00000000 
00015c89 l       .debug_str	00000000 
0001589d l       .debug_str	00000000 
000159a8 l       .debug_str	00000000 
00015a4e l       .debug_str	00000000 
00015ab7 l       .debug_str	00000000 
00015b5d l       .debug_str	00000000 
00001180 l       .debug_str	00000000 
00001189 l       .debug_str	00000000 
00001197 l       .debug_str	00000000 
000088ca l       .debug_str	00000000 
000011af l       .debug_str	00000000 
000012c3 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00015bc4 l       .debug_str	00000000 
00012ca6 l       .debug_str	00000000 
000010a9 l       .debug_str	00000000 
00015c5c l       .debug_str	00000000 
00015d00 l       .debug_str	00000000 
0001411e l       .debug_str	00000000 
00007121 l       .debug_str	00000000 
00015d09 l       .debug_str	00000000 
00015d0d l       .debug_str	00000000 
00015d14 l       .debug_str	00000000 
00015d1b l       .debug_str	00000000 
00015d2c l       .debug_str	00000000 
00015d38 l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00001a29 l       .debug_str	00000000 
000010d1 l       .debug_str	00000000 
000010d7 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00001090 l       .debug_str	00000000 
0000109b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00008867 l       .debug_str	00000000 
000125b7 l       .debug_str	00000000 
000010ea l       .debug_str	00000000 
00008953 l       .debug_str	00000000 
0000898e l       .debug_str	00000000 
00015443 l       .debug_str	00000000 
000154ce l       .debug_str	00000000 
00005c47 l       .debug_str	00000000 
000011a9 l       .debug_str	00000000 
0000105f l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
0000881c l       .debug_str	00000000 
00067fb9 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
0000107f l       .debug_str	00000000 
00001085 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
000108af l       .debug_str	00000000 
000010a2 l       .debug_str	00000000 
000010af l       .debug_str	00000000 
0003c3db l       .debug_str	00000000 
0001c240 l     O .text	00000021 str.0
0001c280 l     O .text	0000001c str.1
0001c2c0 l     O .text	00000019 str.2
0001c300 l     O .text	00000021 str.3
0001d660 l     O .text	00000023 str.4
00000000 l    df *ABS*	00000000 56h6njh5gnq0opnj
00011e7b l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
00011e7c l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00015d43 l       .debug_str	00000000 
00015d6c l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
0002c6da l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00015d79 l       .debug_str	00000000 
00002c75 l       .debug_str	00000000 
00015da2 l       .debug_str	00000000 
00067095 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00015dad l       .debug_str	00000000 
00015e02 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00012237 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 5ewfu8rgu42v09j7
00000d7e l       .debug_str	00000000 
00062a8c l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00000edb l       .debug_str	00000000 
00000e56 l       .debug_str	00000000 
00000e46 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00057262 l       .debug_str	00000000 
000410bb l       .debug_str	00000000 
00003435 l       .debug_str	00000000 
00000b51 l       .debug_str	00000000 
00000b56 l       .debug_str	00000000 
00000b5c l       .debug_str	00000000 
00000b63 l       .debug_str	00000000 
00000b6b l       .debug_str	00000000 
00066c14 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00015e08 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
000087ad l       .debug_str	00000000 
0002c770 l       .debug_str	00000000 
0000bfe3 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00001a1f l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00069452 l       .debug_str	00000000 
000010b6 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00000d99 l       .debug_str	00000000 
00000c99 l       .debug_str	00000000 
00062a03 l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
00000c2a l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
00000c45 l       .debug_str	00000000 
00000da7 l       .debug_str	00000000 
00000db2 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00000d37 l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
00000d3d l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00000d4c l       .debug_str	00000000 
00000d50 l       .debug_str	00000000 
00000d59 l       .debug_str	00000000 
00000d65 l       .debug_str	00000000 
00000d8a l       .debug_str	00000000 
00000d8f l       .debug_str	00000000 
00000e60 l       .debug_str	00000000 
00000ed0 l       .debug_str	00000000 
00000ebe l       .debug_str	00000000 
00000dc8 l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000def l       .debug_str	00000000 
00000e06 l       .debug_str	00000000 
00000e2a l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 l6sseyp3m4levwq
00001367 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00002cae l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00015eb6 l       .debug_str	00000000 
00001a29 l       .debug_str	00000000 
00001090 l       .debug_str	00000000 
0000109b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00008867 l       .debug_str	00000000 
000011e4 l       .debug_str	00000000 
00015e65 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 xlewgat4yjeo3l3
00000c6d l       .debug_str	00000000 
000108af l       .debug_str	00000000 
000010a2 l       .debug_str	00000000 
000010af l       .debug_str	00000000 
0003c3db l       .debug_str	00000000 
0001086b l       .debug_str	00000000 
000125b7 l       .debug_str	00000000 
00012c6d l       .debug_str	00000000 
00015eed l       .debug_str	00000000 
00015f36 l       .debug_str	00000000 
00001a0d l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00001a24 l       .debug_str	00000000 
00005f81 l       .debug_str	00000000 
00001a29 l       .debug_str	00000000 
00001041 l       .debug_str	00000000 
0000104c l       .debug_str	00000000 
00001056 l       .debug_str	00000000 
000011a9 l       .debug_str	00000000 
0000105f l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
0000881c l       .debug_str	00000000 
00001072 l       .debug_str	00000000 
0000107f l       .debug_str	00000000 
00001085 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00001090 l       .debug_str	00000000 
0000109b l       .debug_str	00000000 
00008867 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 zbiswg6e7ju3r3f
000169a1 l       .debug_str	00000000 
00016905 l       .debug_str	00000000 
0001694b l       .debug_str	00000000 
000169ea l       .debug_str	00000000 
00016a30 l       .debug_str	00000000 
0000b6be l       .debug_str	00000000 
00001b3f l       .debug_str	00000000 
00016a6a l       .debug_str	00000000 
00016ab1 l       .debug_str	00000000 
00016aff l       .debug_str	00000000 
00016b4b l       .debug_str	00000000 
00001a29 l       .debug_str	00000000 
000010d1 l       .debug_str	00000000 
000010d7 l       .debug_str	00000000 
00005c47 l       .debug_str	00000000 
000011a9 l       .debug_str	00000000 
0000105f l       .debug_str	00000000 
0000881c l       .debug_str	00000000 
00067fb9 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
0000107f l       .debug_str	00000000 
00001085 l       .debug_str	00000000 
00001090 l       .debug_str	00000000 
0000109b l       .debug_str	00000000 
00008867 l       .debug_str	00000000 
000108af l       .debug_str	00000000 
000010a2 l       .debug_str	00000000 
000010af l       .debug_str	00000000 
0001086b l       .debug_str	00000000 
000010e4 l       .debug_str	00000000 
000010ea l       .debug_str	00000000 
00008953 l       .debug_str	00000000 
000010f4 l       .debug_str	00000000 
000125b7 l       .debug_str	00000000 
0000898e l       .debug_str	00000000 
00015bed l       .debug_str	00000000 
00016b8b l       .debug_str	00000000 
00016c37 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00016d09 l       .debug_str	00000000 
00016d22 l       .debug_str	00000000 
00063092 l       .debug_str	00000000 
000118fc l       .debug_str	00000000 
000044cb l       .debug_str	00000000 
00011b30 l       .debug_str	00000000 
00031bcb l       .debug_str	00000000 
00048abd l       .debug_str	00000000 
0000a0a2 l       .debug_str	00000000 
00044b56 l       .debug_str	00000000 
00014111 l       .debug_str	00000000 
0001d309 l       .debug_str	00000000 
00006490 l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
00002c41 l       .debug_str	00000000 
000021fd l       .debug_str	00000000 
00014cb7 l       .debug_str	00000000 
000021fb l       .debug_str	00000000 
00069443 l       .debug_str	00000000 
000010a9 l       .debug_str	00000000 
0002094f l       .debug_str	00000000 
00016d72 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
000123bd l       .debug_str	00000000 
00016d79 l       .debug_str	00000000 
00065822 l       .debug_str	00000000 
000125a6 l       .debug_str	00000000 
00005f81 l       .debug_str	00000000 
00064a39 l       .debug_str	00000000 
0000b6ac l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
0001586b l       .debug_str	00000000 
00015877 l       .debug_str	00000000 
00015883 l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00015890 l       .debug_str	00000000 
000699b0 l       .debug_str	00000000 
00015c89 l       .debug_str	00000000 
00001180 l       .debug_str	00000000 
00001189 l       .debug_str	00000000 
00001197 l       .debug_str	00000000 
000088ca l       .debug_str	00000000 
000011af l       .debug_str	00000000 
00016d85 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
000118e6 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00015faa l       .debug_str	00000000 
00015fb3 l       .debug_str	00000000 
00015fbd l       .debug_str	00000000 
00015fcd l       .debug_str	00000000 
00016d16 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
00000f10 l       .debug_str	00000000 
00000f18 l       .debug_str	00000000 
00000f23 l       .debug_str	00000000 
00000f2e l       .debug_str	00000000 
00000f3b l       .debug_str	00000000 
00000f46 l       .debug_str	00000000 
00000f4e l       .debug_str	00000000 
00000f59 l       .debug_str	00000000 
00000f64 l       .debug_str	00000000 
00000f6e l       .debug_str	00000000 
00000f79 l       .debug_str	00000000 
00000f84 l       .debug_str	00000000 
00000f91 l       .debug_str	00000000 
00000f9d l       .debug_str	00000000 
00000faa l       .debug_str	00000000 
00000fb8 l       .debug_str	00000000 
00000fc2 l       .debug_str	00000000 
00017cbe l       .debug_str	00000000 
00015fde l       .debug_str	00000000 
00015fea l       .debug_str	00000000 
00015fee l       .debug_str	00000000 
00015ff6 l       .debug_str	00000000 
00015ffc l       .debug_str	00000000 
00016002 l       .debug_str	00000000 
00016008 l       .debug_str	00000000 
0001600f l       .debug_str	00000000 
00016015 l       .debug_str	00000000 
0001601b l       .debug_str	00000000 
00016022 l       .debug_str	00000000 
00016028 l       .debug_str	00000000 
00016030 l       .debug_str	00000000 
00016037 l       .debug_str	00000000 
0001603d l       .debug_str	00000000 
00016043 l       .debug_str	00000000 
00016049 l       .debug_str	00000000 
0001604f l       .debug_str	00000000 
00016055 l       .debug_str	00000000 
0001605c l       .debug_str	00000000 
00016063 l       .debug_str	00000000 
0001606b l       .debug_str	00000000 
00016073 l       .debug_str	00000000 
0001607b l       .debug_str	00000000 
00016082 l       .debug_str	00000000 
0001608a l       .debug_str	00000000 
00016091 l       .debug_str	00000000 
00016098 l       .debug_str	00000000 
0001609f l       .debug_str	00000000 
000160a6 l       .debug_str	00000000 
000160ad l       .debug_str	00000000 
000160b4 l       .debug_str	00000000 
000160ba l       .debug_str	00000000 
000160c0 l       .debug_str	00000000 
000160c6 l       .debug_str	00000000 
000160cc l       .debug_str	00000000 
000160d3 l       .debug_str	00000000 
000160db l       .debug_str	00000000 
0002bd6b l       .debug_str	00000000 
00015da2 l       .debug_str	00000000 
00067095 l       .debug_str	00000000 
000160e3 l       .debug_str	00000000 
00065821 l       .debug_str	00000000 
00001afe l       .debug_str	00000000 
0000b36d l       .debug_str	00000000 
0000d443 l       .debug_str	00000000 
0000b642 l       .debug_str	00000000 
000125a5 l       .debug_str	00000000 
00062c5e l       .debug_str	00000000 
0000b6a7 l       .debug_str	00000000 
000686fc l       .debug_str	00000000 
000125a9 l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
000125ad l       .debug_str	00000000 
000021f8 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00067b38 l       .debug_str	00000000 
000125b6 l       .debug_str	00000000 
00067190 l       .debug_str	00000000 
00016d33 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
000118f1 l       .debug_str	00000000 
00003e97 l       .debug_str	00000000 
000160ef l       .debug_str	00000000 
0001612b l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00012237 l       .debug_str	00000000 
0001614a l       .debug_str	00000000 
00016198 l       .debug_str	00000000 
000161d9 l       .debug_str	00000000 
00016245 l       .debug_str	00000000 
00016287 l       .debug_str	00000000 
000162f3 l       .debug_str	00000000 
00010916 l       .debug_str	00000000 
000114cb l       .debug_str	00000000 
00031b8a l       .debug_str	00000000 
00068388 l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
00002474 l       .debug_str	00000000 
0000247a l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00002481 l       .debug_str	00000000 
0001091f l       .debug_str	00000000 
0006449e l       .debug_str	00000000 
0001092d l       .debug_str	00000000 
00010935 l       .debug_str	00000000 
000011e4 l       .debug_str	00000000 
00012e49 l       .debug_str	00000000 
00012e66 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00012eac l       .debug_str	00000000 
00012ebd l       .debug_str	00000000 
00012f2d l       .debug_str	00000000 
00012fc7 l       .debug_str	00000000 
0001308a l       .debug_str	00000000 
00013177 l       .debug_str	00000000 
00010b60 l       .debug_str	00000000 
00010b68 l       .debug_str	00000000 
00010b6d l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
00015d3f l       .debug_str	00000000 
00010b73 l       .debug_str	00000000 
00010b76 l       .debug_str	00000000 
00010b9f l       .debug_str	00000000 
00062e93 l       .debug_str	00000000 
00010bd5 l       .debug_str	00000000 
0001328e l       .debug_str	00000000 
000132de l       .debug_str	00000000 
0001333b l       .debug_str	00000000 
00010c02 l       .debug_str	00000000 
0001338f l       .debug_str	00000000 
00013406 l       .debug_str	00000000 
0001348a l       .debug_str	00000000 
00013505 l       .debug_str	00000000 
000135a3 l       .debug_str	00000000 
0001364e l       .debug_str	00000000 
000136f0 l       .debug_str	00000000 
000137b5 l       .debug_str	00000000 
00013887 l       .debug_str	00000000 
00013950 l       .debug_str	00000000 
00013a3c l       .debug_str	00000000 
00013b35 l       .debug_str	00000000 
00013c25 l       .debug_str	00000000 
00013d38 l       .debug_str	00000000 
00013e58 l       .debug_str	00000000 
00020d18 l       .debug_str	00000000 
00026026 l       .debug_str	00000000 
00025b90 l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00062da4 l       .debug_str	00000000 
0002b3c4 l       .debug_str	00000000 
000002ea l       .debug_str	00000000 
0001529f l       .debug_str	00000000 
0003c3db l       .debug_str	00000000 
0001635f l       .debug_str	00000000 
000163ad l       .debug_str	00000000 
0001652d l       .debug_str	00000000 
0001657b l       .debug_str	00000000 
000165bc l       .debug_str	00000000 
0001660a l       .debug_str	00000000 
0001664b l       .debug_str	00000000 
0001669b l       .debug_str	00000000 
0001681d l       .debug_str	00000000 
0001686e l       .debug_str	00000000 
000168b2 l       .debug_str	00000000 
0001d850 l     O .text	0000001c str.0
00000000 l    df *ABS*	00000000 55hcxy6v643lhfvt
000123a2 l       .debug_str	00000000 
00016f3c l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00016d09 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
00016d91 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
000118e6 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00015faa l       .debug_str	00000000 
00015fb3 l       .debug_str	00000000 
00015fbd l       .debug_str	00000000 
00015fcd l       .debug_str	00000000 
00016d16 l       .debug_str	00000000 
00016db5 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00016ddb l       .debug_str	00000000 
00016e82 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00011e7c l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
000101ce l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00016e89 l       .debug_str	00000000 
00016e95 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 o8mb21kp49sv70r
00001367 l       .debug_str	00000000 
00016fb9 l       .debug_str	00000000 
0002c770 l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
00016d91 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00011e7c l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
000101ce l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00016e89 l       .debug_str	00000000 
000011e4 l       .debug_str	00000000 
000118e6 l       .debug_str	00000000 
00016db5 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00016f3c l       .debug_str	00000000 
000044cb l       .debug_str	00000000 
00067983 l       .debug_str	00000000 
00016f43 l       .debug_str	00000000 
00016f7c l       .debug_str	00000000 
000123a2 l       .debug_str	00000000 
00015fde l       .debug_str	00000000 
00016f93 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 rd47u9eqzujho2n
0000c615 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
00016d91 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
000118e6 l       .debug_str	00000000 
00015fde l       .debug_str	00000000 
00016f93 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
000101ce l       .debug_str	00000000 
00016f3c l       .debug_str	00000000 
00016ff2 l       .debug_str	00000000 
00005138 l       .debug_str	00000000 
00011e7c l       .debug_str	00000000 
000044cb l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 1te4wi2lhve5aodr
00005c4b l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
00000b3d l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00000c16 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
000170d1 l       .debug_str	00000000 
0003b5ca l       .debug_str	00000000 
00011e7b l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00000c8a l       .debug_str	00000000 
00011e7c l       .debug_str	00000000 
00017134 l       .debug_str	00000000 
00017128 l       .debug_str	00000000 
00005a7c l       .debug_str	00000000 
0001713b l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 2c2m6mdd14wbpksr
00062a03 l       .debug_str	00000000 
00000ed0 l       .debug_str	00000000 
00000ebe l       .debug_str	00000000 
00000edb l       .debug_str	00000000 
0003bcfd l       .debug_str	00000000 
00017146 l       .debug_str	00000000 
00003431 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
00000b3d l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00057262 l       .debug_str	00000000 
000410bb l       .debug_str	00000000 
00003435 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000b51 l       .debug_str	00000000 
00000b56 l       .debug_str	00000000 
00000b5c l       .debug_str	00000000 
00000b63 l       .debug_str	00000000 
00000b6b l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00000c56 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
00000c70 l       .debug_str	00000000 
00000c7c l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00040bba l       .debug_str	00000000 
00000c84 l       .debug_str	00000000 
00000c89 l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00000c90 l       .debug_str	00000000 
00064e10 l       .debug_str	00000000 
00001a1f l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00069452 l       .debug_str	00000000 
0000bfe3 l       .debug_str	00000000 
00000c99 l       .debug_str	00000000 
00000ca3 l       .debug_str	00000000 
00000caa l       .debug_str	00000000 
00000ca6 l       .debug_str	00000000 
00000cb0 l       .debug_str	00000000 
00000cb8 l       .debug_str	00000000 
000010b6 l       .debug_str	00000000 
00000cbe l       .debug_str	00000000 
00000ce3 l       .debug_str	00000000 
00000cc9 l       .debug_str	00000000 
00000cec l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000d10 l       .debug_str	00000000 
00062a8c l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00000d37 l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
00000d3d l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00000d4c l       .debug_str	00000000 
00000d50 l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
00000c2a l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
00000c45 l       .debug_str	00000000 
00000d59 l       .debug_str	00000000 
00000d65 l       .debug_str	00000000 
00000d8a l       .debug_str	00000000 
00000d7e l       .debug_str	00000000 
00000d8f l       .debug_str	00000000 
00000d99 l       .debug_str	00000000 
00000da7 l       .debug_str	00000000 
00000db2 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
00000dc8 l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000def l       .debug_str	00000000 
00000e06 l       .debug_str	00000000 
00000e2a l       .debug_str	00000000 
00000e56 l       .debug_str	00000000 
00000e46 l       .debug_str	00000000 
00000e60 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 3eluqmoad5at3pin
0000b642 l       .debug_str	00000000 
000177c5 l       .debug_str	00000000 
00001180 l       .debug_str	00000000 
00001189 l       .debug_str	00000000 
00001197 l       .debug_str	00000000 
000088ca l       .debug_str	00000000 
000011af l       .debug_str	00000000 
000012c3 l       .debug_str	00000000 
00015d09 l       .debug_str	00000000 
000010a9 l       .debug_str	00000000 
000177d0 l       .debug_str	00000000 
00017894 l       .debug_str	00000000 
00005f81 l       .debug_str	00000000 
000118e6 l       .debug_str	00000000 
00065821 l       .debug_str	00000000 
000125a5 l       .debug_str	00000000 
000686fc l       .debug_str	00000000 
000125a9 l       .debug_str	00000000 
000125ad l       .debug_str	00000000 
000021f8 l       .debug_str	00000000 
00067b38 l       .debug_str	00000000 
00016d33 l       .debug_str	00000000 
00016d22 l       .debug_str	00000000 
000641d7 l       .debug_str	00000000 
000021fb l       .debug_str	00000000 
00069443 l       .debug_str	00000000 
00063092 l       .debug_str	00000000 
00016d85 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
00000b3d l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00001a24 l       .debug_str	00000000 
000140fc l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00002c41 l       .debug_str	00000000 
0000d034 l       .debug_str	00000000 
00002cea l       .debug_str	00000000 
00001a29 l       .debug_str	00000000 
00001041 l       .debug_str	00000000 
000010bc l       .debug_str	00000000 
000010c3 l       .debug_str	00000000 
000011a9 l       .debug_str	00000000 
0000105f l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
0000881c l       .debug_str	00000000 
000019f6 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
0000107f l       .debug_str	00000000 
00001085 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00001090 l       .debug_str	00000000 
0000109b l       .debug_str	00000000 
00008867 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
000108af l       .debug_str	00000000 
000010a2 l       .debug_str	00000000 
000010af l       .debug_str	00000000 
0003c3db l       .debug_str	00000000 
0001086b l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
000125b7 l       .debug_str	00000000 
000019af l       .debug_str	00000000 
00017178 l       .debug_str	00000000 
00017206 l       .debug_str	00000000 
00014102 l       .debug_str	00000000 
00014109 l       .debug_str	00000000 
00014111 l       .debug_str	00000000 
00010916 l       .debug_str	00000000 
000114cb l       .debug_str	00000000 
00031b8a l       .debug_str	00000000 
00068388 l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
00002474 l       .debug_str	00000000 
0000247a l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00002481 l       .debug_str	00000000 
0001091f l       .debug_str	00000000 
0006449e l       .debug_str	00000000 
0001092d l       .debug_str	00000000 
00010935 l       .debug_str	00000000 
000011e4 l       .debug_str	00000000 
00012e49 l       .debug_str	00000000 
00012e66 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00012eac l       .debug_str	00000000 
00012ebd l       .debug_str	00000000 
00012f2d l       .debug_str	00000000 
00012fc7 l       .debug_str	00000000 
0001308a l       .debug_str	00000000 
00010b60 l       .debug_str	00000000 
00010b68 l       .debug_str	00000000 
00010b6d l       .debug_str	00000000 
00015d3f l       .debug_str	00000000 
00010b73 l       .debug_str	00000000 
00010b76 l       .debug_str	00000000 
00010b9f l       .debug_str	00000000 
00062e93 l       .debug_str	00000000 
00010bd5 l       .debug_str	00000000 
0001328e l       .debug_str	00000000 
000132de l       .debug_str	00000000 
0001333b l       .debug_str	00000000 
00010c02 l       .debug_str	00000000 
0001338f l       .debug_str	00000000 
00013406 l       .debug_str	00000000 
0001348a l       .debug_str	00000000 
00013505 l       .debug_str	00000000 
000135a3 l       .debug_str	00000000 
0001364e l       .debug_str	00000000 
000136f0 l       .debug_str	00000000 
000137b5 l       .debug_str	00000000 
00013887 l       .debug_str	00000000 
00013950 l       .debug_str	00000000 
00013a3c l       .debug_str	00000000 
00013b35 l       .debug_str	00000000 
00027f59 l       .debug_str	00000000 
00026efd l       .debug_str	00000000 
00026adc l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00062da4 l       .debug_str	00000000 
0002b61d l       .debug_str	00000000 
000002ea l       .debug_str	00000000 
0001513f l       .debug_str	00000000 
00015122 l       .debug_str	00000000 
0001525b l       .debug_str	00000000 
00016d8a l       .debug_str	00000000 
00014118 l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
00017753 l       .debug_str	00000000 
0006549a l       .debug_str	00000000 
00017271 l       .debug_str	00000000 
00017301 l       .debug_str	00000000 
00014266 l       .debug_str	00000000 
0001426c l       .debug_str	00000000 
00013177 l       .debug_str	00000000 
00013c25 l       .debug_str	00000000 
00013d38 l       .debug_str	00000000 
00013e58 l       .debug_str	00000000 
00020d18 l       .debug_str	00000000 
00026026 l       .debug_str	00000000 
00025b90 l       .debug_str	00000000 
0002b3c4 l       .debug_str	00000000 
0001529f l       .debug_str	00000000 
0001500c l       .debug_str	00000000 
00014fb6 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00001afe l       .debug_str	00000000 
0000b36d l       .debug_str	00000000 
0000d443 l       .debug_str	00000000 
00062c5e l       .debug_str	00000000 
0000b6a7 l       .debug_str	00000000 
000125b6 l       .debug_str	00000000 
00067190 l       .debug_str	00000000 
0000194d l       .debug_str	00000000 
00017398 l       .debug_str	00000000 
000173db l       .debug_str	00000000 
0001747a l       .debug_str	00000000 
000174b8 l       .debug_str	00000000 
00017526 l       .debug_str	00000000 
00017566 l       .debug_str	00000000 
00014261 l       .debug_str	00000000 
00014275 l       .debug_str	00000000 
000177f4 l       .debug_str	00000000 
0000b644 l       .debug_str	00000000 
00017602 l       .debug_str	00000000 
00017665 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
0001772f l       .debug_str	00000000 
0001d9c0 l     O .text	0000001c str.0
00000000 l    df *ABS*	00000000 3hpsndp98lduat02
00065a8c l       .debug_str	00000000 
000178dd l       .debug_str	00000000 
0000e362 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
00000c8a l       .debug_str	00000000 
00006531 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
00000b3d l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00000c2a l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
00000f10 l       .debug_str	00000000 
00000f18 l       .debug_str	00000000 
00000f23 l       .debug_str	00000000 
00000f2e l       .debug_str	00000000 
00000f3b l       .debug_str	00000000 
00000f46 l       .debug_str	00000000 
00000f4e l       .debug_str	00000000 
00000f59 l       .debug_str	00000000 
00000f64 l       .debug_str	00000000 
00000f6e l       .debug_str	00000000 
00000f79 l       .debug_str	00000000 
00000f84 l       .debug_str	00000000 
00000f91 l       .debug_str	00000000 
00000f9d l       .debug_str	00000000 
00000faa l       .debug_str	00000000 
00000fb8 l       .debug_str	00000000 
00000fc2 l       .debug_str	00000000 
00017cbe l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00001cbe l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00001cc2 l       .debug_str	00000000 
00001ccd l       .debug_str	00000000 
00001ce8 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00001c2e l       .debug_str	00000000 
0001af01 l       .debug_str	00000000 
00001f9b l       .debug_str	00000000 
00000ac8 l       .debug_str	00000000 
00001fa5 l       .debug_str	00000000 
0000087f l       .debug_str	00000000 
00000a41 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00000a2b l       .debug_str	00000000 
00000a09 l       .debug_str	00000000 
00000a9b l       .debug_str	00000000 
00067702 l       .debug_str	00000000 
000009cf l       .debug_str	00000000 
000008b1 l       .debug_str	00000000 
00000878 l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00062151 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00001cd8 l       .debug_str	00000000 
00001fae l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00001fdb l       .debug_str	00000000 
0000bfb9 l       .debug_str	00000000 
0006853d l       .debug_str	00000000 
000008f3 l       .debug_str	00000000 
00000a5c l       .debug_str	00000000 
000009b8 l       .debug_str	00000000 
000008c2 l       .debug_str	00000000 
00002010 l       .debug_str	00000000 
00002039 l       .debug_str	00000000 
00002097 l       .debug_str	00000000 
00000998 l       .debug_str	00000000 
00000aa3 l       .debug_str	00000000 
00000a7b l       .debug_str	00000000 
000020fd l       .debug_str	00000000 
00002029 l       .debug_str	00000000 
00000aba l       .debug_str	00000000 
0000086d l       .debug_str	00000000 
00000a34 l       .debug_str	00000000 
00000aab l       .debug_str	00000000 
00000947 l       .debug_str	00000000 
0000211b l       .debug_str	00000000 
00000a21 l       .debug_str	00000000 
00000948 l       .debug_str	00000000 
000008db l       .debug_str	00000000 
00002131 l       .debug_str	00000000 
00002157 l       .debug_str	00000000 
0000088a l       .debug_str	00000000 
0000216d l       .debug_str	00000000 
0000fdf3 l       .debug_str	00000000 
00002136 l       .debug_str	00000000 
00002183 l       .debug_str	00000000 
0000218c l       .debug_str	00000000 
00000895 l       .debug_str	00000000 
00001c35 l       .debug_str	00000000 
00001c3f l       .debug_str	00000000 
00001c77 l       .debug_str	00000000 
00001cb7 l       .debug_str	00000000 
00001cef l       .debug_str	00000000 
00001cf7 l       .debug_str	00000000 
000021b3 l       .debug_str	00000000 
0000219a l       .debug_str	00000000 
00000ad3 l       .debug_str	00000000 
00002195 l       .debug_str	00000000 
000021bc l       .debug_str	00000000 
000021ed l       .debug_str	00000000 
000021d4 l       .debug_str	00000000 
00056d15 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
0000fd52 l       .debug_str	00000000 
0001789d l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 5lunst982mwrdcc
0001426c l       .debug_str	00000000 
000144c7 l       .debug_str	00000000 
00015122 l       .debug_str	00000000 
0001525b l       .debug_str	00000000 
00017a61 l       .debug_str	00000000 
00014aaa l       .debug_str	00000000 
00017a96 l       .debug_str	00000000 
00017acb l       .debug_str	00000000 
00017b70 l       .debug_str	00000000 
00017ba5 l       .debug_str	00000000 
00017bd5 l       .debug_str	00000000 
00014949 l       .debug_str	00000000 
00017c0a l       .debug_str	00000000 
00014b31 l       .debug_str	00000000 
00014fb6 l       .debug_str	00000000 
00017c3f l       .debug_str	00000000 
0001443e l       .debug_str	00000000 
00017c74 l       .debug_str	00000000 
000148d8 l       .debug_str	00000000 
000177d0 l       .debug_str	00000000 
00014fe8 l       .debug_str	00000000 
00015248 l       .debug_str	00000000 
0001772f l       .debug_str	00000000 
00017ca9 l       .debug_str	00000000 
0001512b l       .debug_str	00000000 
0001528b l       .debug_str	00000000 
00014fa3 l       .debug_str	00000000 
000150fe l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
00000b3d l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
00000f10 l       .debug_str	00000000 
00000f18 l       .debug_str	00000000 
00000f23 l       .debug_str	00000000 
00000f2e l       .debug_str	00000000 
00000f3b l       .debug_str	00000000 
00000f46 l       .debug_str	00000000 
00000f4e l       .debug_str	00000000 
00000f59 l       .debug_str	00000000 
00000f64 l       .debug_str	00000000 
00000f6e l       .debug_str	00000000 
00000f79 l       .debug_str	00000000 
00000f84 l       .debug_str	00000000 
00000f91 l       .debug_str	00000000 
00000f9d l       .debug_str	00000000 
00000faa l       .debug_str	00000000 
00000fb8 l       .debug_str	00000000 
00000fc2 l       .debug_str	00000000 
00017cbe l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00001a24 l       .debug_str	00000000 
000140fc l       .debug_str	00000000 
00014261 l       .debug_str	00000000 
00016d8a l       .debug_str	00000000 
00001a29 l       .debug_str	00000000 
00001041 l       .debug_str	00000000 
000010bc l       .debug_str	00000000 
000010c3 l       .debug_str	00000000 
000011a9 l       .debug_str	00000000 
0000105f l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
0000881c l       .debug_str	00000000 
000019f6 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
0000107f l       .debug_str	00000000 
00001085 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00001090 l       .debug_str	00000000 
0000109b l       .debug_str	00000000 
00008867 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
000108af l       .debug_str	00000000 
000010a2 l       .debug_str	00000000 
000010af l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
0003c3db l       .debug_str	00000000 
0001086b l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
000125b7 l       .debug_str	00000000 
000019af l       .debug_str	00000000 
00014102 l       .debug_str	00000000 
00014109 l       .debug_str	00000000 
00014111 l       .debug_str	00000000 
00010916 l       .debug_str	00000000 
000114cb l       .debug_str	00000000 
00031b8a l       .debug_str	00000000 
00068388 l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
00002474 l       .debug_str	00000000 
0000247a l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00002481 l       .debug_str	00000000 
0001091f l       .debug_str	00000000 
0006449e l       .debug_str	00000000 
0001092d l       .debug_str	00000000 
00010935 l       .debug_str	00000000 
000011e4 l       .debug_str	00000000 
00012e49 l       .debug_str	00000000 
00012e66 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00012eac l       .debug_str	00000000 
00012ebd l       .debug_str	00000000 
00012f2d l       .debug_str	00000000 
00012fc7 l       .debug_str	00000000 
0001308a l       .debug_str	00000000 
00010b60 l       .debug_str	00000000 
00010b68 l       .debug_str	00000000 
00010b6d l       .debug_str	00000000 
00015d3f l       .debug_str	00000000 
00010b73 l       .debug_str	00000000 
00010b76 l       .debug_str	00000000 
00010b9f l       .debug_str	00000000 
00062e93 l       .debug_str	00000000 
00010bd5 l       .debug_str	00000000 
0001328e l       .debug_str	00000000 
000132de l       .debug_str	00000000 
0001333b l       .debug_str	00000000 
00010c02 l       .debug_str	00000000 
0001338f l       .debug_str	00000000 
00013406 l       .debug_str	00000000 
0001348a l       .debug_str	00000000 
00013505 l       .debug_str	00000000 
000135a3 l       .debug_str	00000000 
0001364e l       .debug_str	00000000 
000136f0 l       .debug_str	00000000 
000137b5 l       .debug_str	00000000 
00013887 l       .debug_str	00000000 
00013950 l       .debug_str	00000000 
00013a3c l       .debug_str	00000000 
00013b35 l       .debug_str	00000000 
00027f59 l       .debug_str	00000000 
00026efd l       .debug_str	00000000 
00026adc l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00062da4 l       .debug_str	00000000 
0002b61d l       .debug_str	00000000 
000002ea l       .debug_str	00000000 
0001513f l       .debug_str	00000000 
00014118 l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
00017753 l       .debug_str	00000000 
00014266 l       .debug_str	00000000 
00013177 l       .debug_str	00000000 
00013c25 l       .debug_str	00000000 
00013d38 l       .debug_str	00000000 
00013e58 l       .debug_str	00000000 
00020d18 l       .debug_str	00000000 
00026026 l       .debug_str	00000000 
00025b90 l       .debug_str	00000000 
0002b3c4 l       .debug_str	00000000 
0001529f l       .debug_str	00000000 
00014275 l       .debug_str	00000000 
0006549a l       .debug_str	00000000 
000177f4 l       .debug_str	00000000 
00017924 l       .debug_str	00000000 
00017959 l       .debug_str	00000000 
0001500c l       .debug_str	00000000 
00017a2c l       .debug_str	00000000 
0000f73c l     F .text	00000012 _ZN4core3ptr18real_drop_in_place17h64e1884895087585E
0000f76c l     F .text	00000014 _ZN4core3ptr18real_drop_in_place17hb413ab870661fa5cE
0000f79a l     F .text	00000012 _ZN4core3ptr18real_drop_in_place17he575e23365b80091E
0000f7ca l     F .text	00000012 _ZN4core3ptr18real_drop_in_place17hf8e8cb4cd4262f66E
00000000 l    df *ABS*	00000000 17y0y3a69id481nm
0000b642 l       .debug_str	00000000 
0001865a l       .debug_str	00000000 
0001869a l       .debug_str	00000000 
00018b48 l       .debug_str	00000000 
0000b644 l       .debug_str	00000000 
00018732 l       .debug_str	00000000 
00018795 l       .debug_str	00000000 
0001885b l       .debug_str	00000000 
000188be l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
000189c2 l       .debug_str	00000000 
000177c5 l       .debug_str	00000000 
00001180 l       .debug_str	00000000 
00001189 l       .debug_str	00000000 
00001197 l       .debug_str	00000000 
000088ca l       .debug_str	00000000 
000011af l       .debug_str	00000000 
000012c3 l       .debug_str	00000000 
00015d09 l       .debug_str	00000000 
000010a9 l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
00018a92 l       .debug_str	00000000 
00018b24 l       .debug_str	00000000 
00017894 l       .debug_str	00000000 
00018be4 l       .debug_str	00000000 
00005f81 l       .debug_str	00000000 
000118e6 l       .debug_str	00000000 
00065821 l       .debug_str	00000000 
000125a5 l       .debug_str	00000000 
000686fc l       .debug_str	00000000 
000125a9 l       .debug_str	00000000 
000125ad l       .debug_str	00000000 
000021f8 l       .debug_str	00000000 
00067b38 l       .debug_str	00000000 
00016d33 l       .debug_str	00000000 
00016d22 l       .debug_str	00000000 
000641d7 l       .debug_str	00000000 
000021fb l       .debug_str	00000000 
00069443 l       .debug_str	00000000 
00016d85 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
00005ca9 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00001a24 l       .debug_str	00000000 
000140fc l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00002c41 l       .debug_str	00000000 
0000d034 l       .debug_str	00000000 
00002cea l       .debug_str	00000000 
00001a29 l       .debug_str	00000000 
000010d1 l       .debug_str	00000000 
000010d7 l       .debug_str	00000000 
0001586b l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00015877 l       .debug_str	00000000 
00015883 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00015890 l       .debug_str	00000000 
000699b0 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00005c47 l       .debug_str	00000000 
000011a9 l       .debug_str	00000000 
0000105f l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
0000881c l       .debug_str	00000000 
00067fb9 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
0000107f l       .debug_str	00000000 
00001085 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00001090 l       .debug_str	00000000 
0000109b l       .debug_str	00000000 
00008867 l       .debug_str	00000000 
000108af l       .debug_str	00000000 
000010a2 l       .debug_str	00000000 
000010af l       .debug_str	00000000 
0003c3db l       .debug_str	00000000 
0001086b l       .debug_str	00000000 
000010e4 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
000010ea l       .debug_str	00000000 
00008953 l       .debug_str	00000000 
000010f4 l       .debug_str	00000000 
000125b7 l       .debug_str	00000000 
0000898e l       .debug_str	00000000 
00015c89 l       .debug_str	00000000 
00017cca l       .debug_str	00000000 
00017d58 l       .debug_str	00000000 
00014102 l       .debug_str	00000000 
00014109 l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
00014111 l       .debug_str	00000000 
00010916 l       .debug_str	00000000 
000114cb l       .debug_str	00000000 
00031b8a l       .debug_str	00000000 
00068388 l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
00002474 l       .debug_str	00000000 
0000247a l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00002481 l       .debug_str	00000000 
0001091f l       .debug_str	00000000 
0006449e l       .debug_str	00000000 
0001092d l       .debug_str	00000000 
00010935 l       .debug_str	00000000 
000011e4 l       .debug_str	00000000 
00012e49 l       .debug_str	00000000 
00012e66 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00012eac l       .debug_str	00000000 
00012ebd l       .debug_str	00000000 
00012f2d l       .debug_str	00000000 
00012fc7 l       .debug_str	00000000 
0001308a l       .debug_str	00000000 
00010b60 l       .debug_str	00000000 
00010b68 l       .debug_str	00000000 
00010b6d l       .debug_str	00000000 
00015d3f l       .debug_str	00000000 
00010b73 l       .debug_str	00000000 
00010b76 l       .debug_str	00000000 
00010b9f l       .debug_str	00000000 
00062e93 l       .debug_str	00000000 
00010bd5 l       .debug_str	00000000 
0001328e l       .debug_str	00000000 
000132de l       .debug_str	00000000 
0001333b l       .debug_str	00000000 
00010c02 l       .debug_str	00000000 
0001338f l       .debug_str	00000000 
00013406 l       .debug_str	00000000 
0001348a l       .debug_str	00000000 
00013505 l       .debug_str	00000000 
000135a3 l       .debug_str	00000000 
0001364e l       .debug_str	00000000 
000136f0 l       .debug_str	00000000 
000137b5 l       .debug_str	00000000 
00013887 l       .debug_str	00000000 
00013950 l       .debug_str	00000000 
00013a3c l       .debug_str	00000000 
00013b35 l       .debug_str	00000000 
00027f59 l       .debug_str	00000000 
00026efd l       .debug_str	00000000 
00026adc l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
00062da4 l       .debug_str	00000000 
0002b61d l       .debug_str	00000000 
000002ea l       .debug_str	00000000 
0001513f l       .debug_str	00000000 
00015122 l       .debug_str	00000000 
0001525b l       .debug_str	00000000 
00001041 l       .debug_str	00000000 
00061d4b l       .debug_str	00000000 
0006523d l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
0006575f l       .debug_str	00000000 
00017dfd l       .debug_str	00000000 
00063092 l       .debug_str	00000000 
00063b6b l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
00017e07 l       .debug_str	00000000 
00017e43 l       .debug_str	00000000 
00017ed1 l       .debug_str	00000000 
00016d8a l       .debug_str	00000000 
00014118 l       .debug_str	00000000 
00018ab6 l       .debug_str	00000000 
0006549a l       .debug_str	00000000 
00017f38 l       .debug_str	00000000 
00017fc8 l       .debug_str	00000000 
00014266 l       .debug_str	00000000 
0001426c l       .debug_str	00000000 
00013177 l       .debug_str	00000000 
00013c25 l       .debug_str	00000000 
00013d38 l       .debug_str	00000000 
00013e58 l       .debug_str	00000000 
00020d18 l       .debug_str	00000000 
00026026 l       .debug_str	00000000 
00025b90 l       .debug_str	00000000 
0002b3c4 l       .debug_str	00000000 
0001529f l       .debug_str	00000000 
0001500c l       .debug_str	00000000 
00014fb6 l       .debug_str	00000000 
000189e6 l       .debug_str	00000000 
0001805b l       .debug_str	00000000 
000180eb l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00001afe l       .debug_str	00000000 
0000b36d l       .debug_str	00000000 
0000d443 l       .debug_str	00000000 
00062c5e l       .debug_str	00000000 
0000b6a7 l       .debug_str	00000000 
000125b6 l       .debug_str	00000000 
00067190 l       .debug_str	00000000 
00005cce l       .debug_str	00000000 
000181bc l       .debug_str	00000000 
000181ff l       .debug_str	00000000 
00015bed l       .debug_str	00000000 
0001829a l       .debug_str	00000000 
000182dd l       .debug_str	00000000 
000183b6 l       .debug_str	00000000 
000183f4 l       .debug_str	00000000 
0001849c l       .debug_str	00000000 
000184da l       .debug_str	00000000 
00018544 l       .debug_str	00000000 
00018584 l       .debug_str	00000000 
00014261 l       .debug_str	00000000 
00014275 l       .debug_str	00000000 
00018c08 l       .debug_str	00000000 
0001dac0 l     O .text	0000001c str.0
00000000 l    df *ABS*	00000000 akzmiy9og1zoqcx
0001aa66 l       .debug_str	00000000 
00018b48 l       .debug_str	00000000 
0001b459 l       .debug_str	00000000 
0001b48e l       .debug_str	00000000 
00015122 l       .debug_str	00000000 
0001525b l       .debug_str	00000000 
0001b55d l       .debug_str	00000000 
00014aaa l       .debug_str	00000000 
0001c5ae l       .debug_str	00000000 
0001b592 l       .debug_str	00000000 
0001b5c7 l       .debug_str	00000000 
0001c5b9 l       .debug_str	00000000 
0001b5e1 l       .debug_str	00000000 
0001b616 l       .debug_str	00000000 
0001c5d1 l       .debug_str	00000000 
0001b63d l       .debug_str	00000000 
0001b672 l       .debug_str	00000000 
0001b699 l       .debug_str	00000000 
0001b6a0 l       .debug_str	00000000 
0001c933 l       .debug_str	00000000 
0001b6a6 l       .debug_str	00000000 
0001b6db l       .debug_str	00000000 
000087b7 l       .debug_str	00000000 
0001b71f l       .debug_str	00000000 
0000668f l       .debug_str	00000000 
00014fb6 l       .debug_str	00000000 
0001b754 l       .debug_str	00000000 
0001443e l       .debug_str	00000000 
0001c61e l       .debug_str	00000000 
0001b789 l       .debug_str	00000000 
0001b7be l       .debug_str	00000000 
0001b7ed l       .debug_str	00000000 
0001b822 l       .debug_str	00000000 
0001c6f7 l       .debug_str	00000000 
0001b8ea l       .debug_str	00000000 
0001b91f l       .debug_str	00000000 
0001ba26 l       .debug_str	00000000 
0001ba5b l       .debug_str	00000000 
00018c08 l       .debug_str	00000000 
0001ba8e l       .debug_str	00000000 
0001bac3 l       .debug_str	00000000 
0001bbd0 l       .debug_str	00000000 
000148d8 l       .debug_str	00000000 
0001c813 l       .debug_str	00000000 
0001bc05 l       .debug_str	00000000 
0001bc3a l       .debug_str	00000000 
0001bc54 l       .debug_str	00000000 
0001bc89 l       .debug_str	00000000 
0001bcbe l       .debug_str	00000000 
0001bcf3 l       .debug_str	00000000 
0001bda8 l       .debug_str	00000000 
0001bddd l       .debug_str	00000000 
0001be1b l       .debug_str	00000000 
0001be50 l       .debug_str	00000000 
0001be8e l       .debug_str	00000000 
00066cd8 l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
000215b7 l       .debug_str	00000000 
0001be94 l       .debug_str	00000000 
00062e21 l       .debug_str	00000000 
0001c957 l       .debug_str	00000000 
0001c948 l       .debug_str	00000000 
0001be9f l       .debug_str	00000000 
0001bed4 l       .debug_str	00000000 
0001c967 l       .debug_str	00000000 
0001bf02 l       .debug_str	00000000 
0001bf37 l       .debug_str	00000000 
0001bf60 l       .debug_str	00000000 
0001bf95 l       .debug_str	00000000 
0001bfca l       .debug_str	00000000 
0001bfe3 l       .debug_str	00000000 
0001512b l       .debug_str	00000000 
0001c00b l       .debug_str	00000000 
00018a92 l       .debug_str	00000000 
0001528b l       .debug_str	00000000 
0001c036 l       .debug_str	00000000 
0001c127 l       .debug_str	00000000 
0001c14e l       .debug_str	00000000 
0001c178 l       .debug_str	00000000 
0001c221 l       .debug_str	00000000 
0001c31d l       .debug_str	00000000 
000189c2 l       .debug_str	00000000 
0001c344 l       .debug_str	00000000 
0001c35c l       .debug_str	00000000 
0000879e l       .debug_str	00000000 
00014fe8 l       .debug_str	00000000 
0001c397 l       .debug_str	00000000 
0001c46f l       .debug_str	00000000 
0001c4af l       .debug_str	00000000 
0001c56e l       .debug_str	00000000 
00018b24 l       .debug_str	00000000 
00015248 l       .debug_str	00000000 
0001c5a9 l       .debug_str	00000000 
0001c5b4 l       .debug_str	00000000 
0001c5cc l       .debug_str	00000000 
0001c5e4 l       .debug_str	00000000 
000087b2 l       .debug_str	00000000 
00014fa3 l       .debug_str	00000000 
0001c619 l       .debug_str	00000000 
0001c639 l       .debug_str	00000000 
0001c6f2 l       .debug_str	00000000 
0001c7ea l       .debug_str	00000000 
00018be4 l       .debug_str	00000000 
000150fe l       .debug_str	00000000 
0001c80e l       .debug_str	00000000 
0001c819 l       .debug_str	00000000 
0001c83f l       .debug_str	00000000 
0001c8e5 l       .debug_str	00000000 
0001c914 l       .debug_str	00000000 
0001c943 l       .debug_str	00000000 
0001c962 l       .debug_str	00000000 
0001c97c l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
00005ca9 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00018ce2 l       .debug_str	00000000 
00018ce9 l       .debug_str	00000000 
00018cef l       .debug_str	00000000 
00018cf6 l       .debug_str	00000000 
00018cfb l       .debug_str	00000000 
00018d06 l       .debug_str	00000000 
00018d0f l       .debug_str	00000000 
00000d4c l       .debug_str	00000000 
00000d50 l       .debug_str	00000000 
00018d14 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
0001bfdf l       .debug_str	00000000 
0001bfcf l       .debug_str	00000000 
00003e97 l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
00018d1a l       .debug_str	00000000 
00006540 l       .debug_str	00000000 
00018d25 l       .debug_str	00000000 
00018d5e l       .debug_str	00000000 
00018d87 l       .debug_str	00000000 
00069725 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00018d8e l       .debug_str	00000000 
00067fb9 l       .debug_str	00000000 
00018d94 l       .debug_str	00000000 
00018d9e l       .debug_str	00000000 
00044b55 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
00018dab l       .debug_str	00000000 
00010916 l       .debug_str	00000000 
00068d42 l       .debug_str	00000000 
00031b8a l       .debug_str	00000000 
000114cb l       .debug_str	00000000 
00068388 l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
00002474 l       .debug_str	00000000 
0000247a l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00002481 l       .debug_str	00000000 
0001091f l       .debug_str	00000000 
0006449e l       .debug_str	00000000 
0001092d l       .debug_str	00000000 
00010935 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
000011e4 l       .debug_str	00000000 
0001093d l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
0000f05b l       .debug_str	00000000 
00010959 l       .debug_str	00000000 
0001099e l       .debug_str	00000000 
00010a0b l       .debug_str	00000000 
00010aa1 l       .debug_str	00000000 
00010b60 l       .debug_str	00000000 
00010b68 l       .debug_str	00000000 
00010b6d l       .debug_str	00000000 
00015d3f l       .debug_str	00000000 
00010b73 l       .debug_str	00000000 
00010b76 l       .debug_str	00000000 
00010b9f l       .debug_str	00000000 
00062e93 l       .debug_str	00000000 
00010bd5 l       .debug_str	00000000 
00010c02 l       .debug_str	00000000 
00010c05 l       .debug_str	00000000 
00010c55 l       .debug_str	00000000 
00010cb2 l       .debug_str	00000000 
00010d06 l       .debug_str	00000000 
00010d7d l       .debug_str	00000000 
00010e01 l       .debug_str	00000000 
00010e7c l       .debug_str	00000000 
00010f1a l       .debug_str	00000000 
00010fc5 l       .debug_str	00000000 
00011067 l       .debug_str	00000000 
0001112c l       .debug_str	00000000 
000111fe l       .debug_str	00000000 
00028725 l       .debug_str	00000000 
00027cc7 l       .debug_str	00000000 
0002791e l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
00062da4 l       .debug_str	00000000 
0002b755 l       .debug_str	00000000 
000112c7 l       .debug_str	00000000 
000002ea l       .debug_str	00000000 
0001c23d l       .debug_str	00000000 
00018db7 l       .debug_str	00000000 
00062a8c l       .debug_str	00000000 
00018eb1 l       .debug_str	00000000 
00067c87 l       .debug_str	00000000 
0004eb5d l       .debug_str	00000000 
0004e7ec l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
0000574e l       .debug_str	00000000 
00018efa l       .debug_str	00000000 
000087a3 l       .debug_str	00000000 
00064b11 l       .debug_str	00000000 
00018ec7 l       .debug_str	00000000 
00018eba l       .debug_str	00000000 
00018ecb l       .debug_str	00000000 
00018f03 l       .debug_str	00000000 
00018f12 l       .debug_str	00000000 
00018f3e l       .debug_str	00000000 
00018f83 l       .debug_str	00000000 
00018fbc l       .debug_str	00000000 
00019053 l       .debug_str	00000000 
000190f1 l       .debug_str	00000000 
000191ac l       .debug_str	00000000 
00019266 l       .debug_str	00000000 
0001c18c l       .debug_str	00000000 
0001c4c2 l       .debug_str	00000000 
00019318 l       .debug_str	00000000 
0001c8ff l       .debug_str	00000000 
00019321 l       .debug_str	00000000 
0001c169 l       .debug_str	00000000 
00069452 l       .debug_str	00000000 
0001932a l       .debug_str	00000000 
0001932f l       .debug_str	00000000 
00031b78 l       .debug_str	00000000 
0000e903 l       .debug_str	00000000 
00019338 l       .debug_str	00000000 
0001c834 l       .debug_str	00000000 
00001b8f l       .debug_str	00000000 
00019342 l       .debug_str	00000000 
0001934a l       .debug_str	00000000 
00019356 l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
00000c2a l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
00000c45 l       .debug_str	00000000 
0001935d l       .debug_str	00000000 
00019369 l       .debug_str	00000000 
00019373 l       .debug_str	00000000 
0001937c l       .debug_str	00000000 
00019385 l       .debug_str	00000000 
00062df5 l       .debug_str	00000000 
00067868 l       .debug_str	00000000 
0001938e l       .debug_str	00000000 
0001939a l       .debug_str	00000000 
000193a2 l       .debug_str	00000000 
000193b3 l       .debug_str	00000000 
000193c5 l       .debug_str	00000000 
000193ce l       .debug_str	00000000 
00019417 l       .debug_str	00000000 
00019401 l       .debug_str	00000000 
0001944b l       .debug_str	00000000 
00019456 l       .debug_str	00000000 
000108f0 l       .debug_str	00000000 
0001945d l       .debug_str	00000000 
00031bcf l       .debug_str	00000000 
00019462 l       .debug_str	00000000 
00031bd6 l       .debug_str	00000000 
00008881 l       .debug_str	00000000 
0001c5c7 l       .debug_str	00000000 
00019465 l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
00019471 l       .debug_str	00000000 
00019478 l       .debug_str	00000000 
00019482 l       .debug_str	00000000 
0001948d l       .debug_str	00000000 
0001949a l       .debug_str	00000000 
000194a8 l       .debug_str	00000000 
000194b2 l       .debug_str	00000000 
000194cc l       .debug_str	00000000 
000194c0 l       .debug_str	00000000 
000194d6 l       .debug_str	00000000 
000194e1 l       .debug_str	00000000 
000194ec l       .debug_str	00000000 
00062b9e l       .debug_str	00000000 
00019500 l       .debug_str	00000000 
000194f4 l       .debug_str	00000000 
0000dbda l       .debug_str	00000000 
0001950e l       .debug_str	00000000 
0001bfff l       .debug_str	00000000 
00019548 l       .debug_str	00000000 
0001957d l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00012e49 l       .debug_str	00000000 
00012e66 l       .debug_str	00000000 
00012eac l       .debug_str	00000000 
00012ebd l       .debug_str	00000000 
00012f2d l       .debug_str	00000000 
00012fc7 l       .debug_str	00000000 
0001308a l       .debug_str	00000000 
0001328e l       .debug_str	00000000 
000132de l       .debug_str	00000000 
0001333b l       .debug_str	00000000 
0001338f l       .debug_str	00000000 
00013406 l       .debug_str	00000000 
0001348a l       .debug_str	00000000 
00013505 l       .debug_str	00000000 
000135a3 l       .debug_str	00000000 
0001364e l       .debug_str	00000000 
000136f0 l       .debug_str	00000000 
000137b5 l       .debug_str	00000000 
00013887 l       .debug_str	00000000 
00013950 l       .debug_str	00000000 
00013a3c l       .debug_str	00000000 
00013b35 l       .debug_str	00000000 
00027f59 l       .debug_str	00000000 
00026efd l       .debug_str	00000000 
00026adc l       .debug_str	00000000 
0002b61d l       .debug_str	00000000 
0001513f l       .debug_str	00000000 
000195b4 l       .debug_str	00000000 
00014949 l       .debug_str	00000000 
000195e9 l       .debug_str	00000000 
00011e7c l       .debug_str	00000000 
0000c52d l       .debug_str	00000000 
000194ef l       .debug_str	00000000 
000195f3 l       .debug_str	00000000 
000195fc l       .debug_str	00000000 
0004c067 l       .debug_str	00000000 
00019608 l       .debug_str	00000000 
0001960e l       .debug_str	00000000 
00019618 l       .debug_str	00000000 
00067178 l       .debug_str	00000000 
00019627 l       .debug_str	00000000 
00019660 l       .debug_str	00000000 
0001966d l       .debug_str	00000000 
00019679 l       .debug_str	00000000 
00019687 l       .debug_str	00000000 
00019692 l       .debug_str	00000000 
0004ed7b l       .debug_str	00000000 
000010b6 l       .debug_str	00000000 
000196c3 l       .debug_str	00000000 
0001c5df l       .debug_str	00000000 
000196ca l       .debug_str	00000000 
000196d7 l       .debug_str	00000000 
00019705 l       .debug_str	00000000 
00017dfd l       .debug_str	00000000 
0001970a l       .debug_str	00000000 
00016d72 l       .debug_str	00000000 
00019713 l       .debug_str	00000000 
0001971a l       .debug_str	00000000 
0001972b l       .debug_str	00000000 
0001976a l       .debug_str	00000000 
0001979d l       .debug_str	00000000 
00019828 l       .debug_str	00000000 
000198ff l       .debug_str	00000000 
00019a22 l       .debug_str	00000000 
00019a99 l       .debug_str	00000000 
00019b1d l       .debug_str	00000000 
00019b98 l       .debug_str	00000000 
00019c36 l       .debug_str	00000000 
00019ce1 l       .debug_str	00000000 
00019d83 l       .debug_str	00000000 
00019e69 l       .debug_str	00000000 
00019f6c l       .debug_str	00000000 
0001a06e l       .debug_str	00000000 
0001c04a l       .debug_str	00000000 
0001c804 l       .debug_str	00000000 
0001c57a l       .debug_str	00000000 
0001c483 l       .debug_str	00000000 
000468e6 l       .debug_str	00000000 
0001a168 l       .debug_str	00000000 
0006412f l       .debug_str	00000000 
00058cf3 l       .debug_str	00000000 
00064b88 l       .debug_str	00000000 
000647aa l       .debug_str	00000000 
0001a170 l       .debug_str	00000000 
0001a17d l       .debug_str	00000000 
0001a1b2 l       .debug_str	00000000 
0001c334 l       .debug_str	00000000 
0001c993 l       .debug_str	00000000 
0001a1e4 l       .debug_str	00000000 
0001a219 l       .debug_str	00000000 
00001a24 l       .debug_str	00000000 
000140fc l       .debug_str	00000000 
00016d8a l       .debug_str	00000000 
00001a29 l       .debug_str	00000000 
00001041 l       .debug_str	00000000 
00061d4b l       .debug_str	00000000 
0000107f l       .debug_str	00000000 
00001085 l       .debug_str	00000000 
00001090 l       .debug_str	00000000 
0000109b l       .debug_str	00000000 
00008867 l       .debug_str	00000000 
000108af l       .debug_str	00000000 
000010a2 l       .debug_str	00000000 
000010af l       .debug_str	00000000 
0003c3db l       .debug_str	00000000 
0001086b l       .debug_str	00000000 
0006523d l       .debug_str	00000000 
000011a9 l       .debug_str	00000000 
0000105f l       .debug_str	00000000 
0000881c l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
0006575f l       .debug_str	00000000 
00063092 l       .debug_str	00000000 
00063b6b l       .debug_str	00000000 
000125b7 l       .debug_str	00000000 
00017e07 l       .debug_str	00000000 
00014102 l       .debug_str	00000000 
00014109 l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
00014111 l       .debug_str	00000000 
00014118 l       .debug_str	00000000 
00018ab6 l       .debug_str	00000000 
0001a253 l       .debug_str	00000000 
0001a288 l       .debug_str	00000000 
00013177 l       .debug_str	00000000 
00013c25 l       .debug_str	00000000 
00013d38 l       .debug_str	00000000 
00013e58 l       .debug_str	00000000 
00020d18 l       .debug_str	00000000 
00026026 l       .debug_str	00000000 
00025b90 l       .debug_str	00000000 
0002b3c4 l       .debug_str	00000000 
0001529f l       .debug_str	00000000 
0001a329 l       .debug_str	00000000 
00014b31 l       .debug_str	00000000 
0001a35e l       .debug_str	00000000 
0001a393 l       .debug_str	00000000 
0001c12c l       .debug_str	00000000 
0001a493 l       .debug_str	00000000 
0001a4c8 l       .debug_str	00000000 
0001a4fe l       .debug_str	00000000 
0001a533 l       .debug_str	00000000 
0001a56c l       .debug_str	00000000 
0001a5a1 l       .debug_str	00000000 
0001c226 l       .debug_str	00000000 
0001a659 l       .debug_str	00000000 
0001a68e l       .debug_str	00000000 
0001a799 l       .debug_str	00000000 
0001a7ce l       .debug_str	00000000 
000010d1 l       .debug_str	00000000 
000010d7 l       .debug_str	00000000 
0001586b l       .debug_str	00000000 
00015877 l       .debug_str	00000000 
00015883 l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00015890 l       .debug_str	00000000 
000699b0 l       .debug_str	00000000 
00005c47 l       .debug_str	00000000 
000010e4 l       .debug_str	00000000 
000010ea l       .debug_str	00000000 
00008953 l       .debug_str	00000000 
000010f4 l       .debug_str	00000000 
0000898e l       .debug_str	00000000 
00015c89 l       .debug_str	00000000 
000189e6 l       .debug_str	00000000 
0001a804 l       .debug_str	00000000 
0001a839 l       .debug_str	00000000 
0006203d l       .debug_str	00000000 
0001a918 l       .debug_str	00000000 
0001a94d l       .debug_str	00000000 
0001c38a l       .debug_str	00000000 
0001a974 l       .debug_str	00000000 
0001a9a9 l       .debug_str	00000000 
0001a9f3 l       .debug_str	00000000 
000065f3 l       .debug_str	00000000 
00014266 l       .debug_str	00000000 
0001426c l       .debug_str	00000000 
0001500c l       .debug_str	00000000 
0001aa28 l       .debug_str	00000000 
000144c7 l       .debug_str	00000000 
0001aa5d l       .debug_str	00000000 
00000981 l       .debug_str	00000000 
00069888 l       .debug_str	00000000 
0002083a l       .debug_str	00000000 
00000f77 l       .debug_str	00000000 
0001aa70 l       .debug_str	00000000 
0001aa98 l       .debug_str	00000000 
0001aaed l       .debug_str	00000000 
0001ab36 l       .debug_str	00000000 
0001abed l       .debug_str	00000000 
0001ac9b l       .debug_str	00000000 
0001ad66 l       .debug_str	00000000 
0001ae30 l       .debug_str	00000000 
0001c64d l       .debug_str	00000000 
0003b5df l       .debug_str	00000000 
0001aef2 l       .debug_str	00000000 
00066c14 l       .debug_str	00000000 
0001aef5 l       .debug_str	00000000 
0001af00 l       .debug_str	00000000 
0001af04 l       .debug_str	00000000 
0001af24 l       .debug_str	00000000 
0001af6b l       .debug_str	00000000 
0001afa6 l       .debug_str	00000000 
0001b041 l       .debug_str	00000000 
0001c858 l       .debug_str	00000000 
0001b0e1 l       .debug_str	00000000 
00008b32 l       .debug_str	00000000 
00008fc7 l       .debug_str	00000000 
0000a0bb l       .debug_str	00000000 
0001b0ee l       .debug_str	00000000 
0006282e l       .debug_str	00000000 
0001b10f l       .debug_str	00000000 
00000238 l       .debug_str	00000000 
0001c3b0 l       .debug_str	00000000 
0001b137 l       .debug_str	00000000 
0001b16c l       .debug_str	00000000 
0001b253 l       .debug_str	00000000 
0001b288 l       .debug_str	00000000 
0001b2d7 l       .debug_str	00000000 
0001b30c l       .debug_str	00000000 
0001b3da l       .debug_str	00000000 
0001b40f l       .debug_str	00000000 
00014261 l       .debug_str	00000000 
00014275 l       .debug_str	00000000 
0006549a l       .debug_str	00000000 
000100ea l     F .text	00000012 _ZN4core3ptr18real_drop_in_place17h0d6fd5bc5ab576dfE
000100fc l     F .text	00000014 _ZN4core3ptr18real_drop_in_place17h2f5d456fddc834acE
00010110 l     F .text	00000012 _ZN4core3ptr18real_drop_in_place17h4a6818fb05e2364fE
0001017a l     F .text	00000012 _ZN4core3ptr18real_drop_in_place17hbee10bb29aedc602E
00000000 l    df *ABS*	00000000 1l2krghj8faisu65
0001ca1c l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
0001ca6d l       .debug_str	00000000 
00000c8a l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0001c9a2 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00002cae l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
0001c9c1 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
0001c9c3 l       .debug_str	00000000 
0001ca14 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 1vhy6zx2xdxtgya5
00000ce3 l       .debug_str	00000000 
00000cec l       .debug_str	00000000 
00000d10 l       .debug_str	00000000 
00062a8c l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00000d37 l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
00000d3d l       .debug_str	00000000 
00000d50 l       .debug_str	00000000 
00000c2a l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
00000c45 l       .debug_str	00000000 
00000d59 l       .debug_str	00000000 
00000d65 l       .debug_str	00000000 
00000d8a l       .debug_str	00000000 
00000d7e l       .debug_str	00000000 
00000d8f l       .debug_str	00000000 
00000d99 l       .debug_str	00000000 
00062a03 l       .debug_str	00000000 
00000da7 l       .debug_str	00000000 
00000db2 l       .debug_str	00000000 
00000dc8 l       .debug_str	00000000 
00000def l       .debug_str	00000000 
00000e06 l       .debug_str	00000000 
00000e2a l       .debug_str	00000000 
00000e56 l       .debug_str	00000000 
00000e46 l       .debug_str	00000000 
00000e60 l       .debug_str	00000000 
00000ed0 l       .debug_str	00000000 
00000ebe l       .debug_str	00000000 
00000edb l       .debug_str	00000000 
0003bcfd l       .debug_str	00000000 
0003bcf1 l       .debug_str	00000000 
000628d0 l       .debug_str	00000000 
0001ce8f l       .debug_str	00000000 
00063092 l       .debug_str	00000000 
0000457f l       .debug_str	00000000 
00069443 l       .debug_str	00000000 
0001ce98 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00057262 l       .debug_str	00000000 
000410bb l       .debug_str	00000000 
00003435 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000b51 l       .debug_str	00000000 
00000b56 l       .debug_str	00000000 
00000b5c l       .debug_str	00000000 
00000b63 l       .debug_str	00000000 
00000b6b l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
0001ca76 l       .debug_str	00000000 
00002c75 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
0001ca9f l       .debug_str	00000000 
0000deee l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00002268 l       .debug_str	00000000 
0001cad6 l       .debug_str	00000000 
0001cb29 l       .debug_str	00000000 
0000b644 l       .debug_str	00000000 
0001cb3d l       .debug_str	00000000 
0001cb83 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00020225 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
0000ba07 l       .debug_str	00000000 
0001cb91 l       .debug_str	00000000 
0001cbd8 l       .debug_str	00000000 
0001cbe1 l       .debug_str	00000000 
0001cc2a l       .debug_str	00000000 
0000dfa2 l       .debug_str	00000000 
00000d4c l       .debug_str	00000000 
00001f6d l       .debug_str	00000000 
0001cc36 l       .debug_str	00000000 
0001cc40 l       .debug_str	00000000 
0001ccbc l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
000021f7 l       .debug_str	00000000 
0000431d l       .debug_str	00000000 
0001cce6 l       .debug_str	00000000 
0001cd62 l       .debug_str	00000000 
0001cd91 l       .debug_str	00000000 
0001ce17 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
0003d0d5 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00002c1c l       .debug_str	00000000 
00002d97 l       .debug_str	00000000 
0001ce25 l       .debug_str	00000000 
0001ce87 l       .debug_str	00000000 
0006449e l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00000364 l       .debug_str	00000000 
0001d309 l       .debug_str	00000000 
00001f73 l       .debug_str	00000000 
00005b07 l       .debug_str	00000000 
00001f7c l       .debug_str	00000000 
00001f86 l       .debug_str	00000000 
0000b2c5 l       .debug_str	00000000 
00001f91 l       .debug_str	00000000 
00001f96 l       .debug_str	00000000 
00000c56 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
00000c70 l       .debug_str	00000000 
00000c7c l       .debug_str	00000000 
00040bba l       .debug_str	00000000 
00000c84 l       .debug_str	00000000 
00000c89 l       .debug_str	00000000 
00000c90 l       .debug_str	00000000 
00064e10 l       .debug_str	00000000 
00001a1f l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00069452 l       .debug_str	00000000 
0000bfe3 l       .debug_str	00000000 
00000c99 l       .debug_str	00000000 
00000ca3 l       .debug_str	00000000 
00000caa l       .debug_str	00000000 
00000ca6 l       .debug_str	00000000 
00000cb0 l       .debug_str	00000000 
00000cb8 l       .debug_str	00000000 
000010b6 l       .debug_str	00000000 
00000cbe l       .debug_str	00000000 
00000cc9 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 2m3yf4kor9hkuoau
00005a7c l       .debug_str	00000000 
00020225 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
000087a3 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
000669f8 l       .debug_str	00000000 
000023f2 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
0001ce9f l       .debug_str	00000000 
0003b5ca l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
0001cf00 l       .debug_str	00000000 
00005a52 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 2qgakh16xkb751od
00000e60 l       .debug_str	00000000 
00000e06 l       .debug_str	00000000 
00000e2a l       .debug_str	00000000 
00062a8c l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00000edb l       .debug_str	00000000 
00000e56 l       .debug_str	00000000 
00000e46 l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
000087b7 l       .debug_str	00000000 
000101ce l       .debug_str	00000000 
000101cd l       .debug_str	00000000 
000087a3 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00057262 l       .debug_str	00000000 
000410bb l       .debug_str	00000000 
00003435 l       .debug_str	00000000 
00000b51 l       .debug_str	00000000 
00000b56 l       .debug_str	00000000 
00000b5c l       .debug_str	00000000 
00000b63 l       .debug_str	00000000 
00000b6b l       .debug_str	00000000 
00066c14 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
0001cf63 l       .debug_str	00000000 
0001cfbf l       .debug_str	00000000 
0001d01c l       .debug_str	00000000 
0001d079 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00020225 l       .debug_str	00000000 
0002c770 l       .debug_str	00000000 
0000bfe3 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00001a1f l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00069452 l       .debug_str	00000000 
000010b6 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00000d99 l       .debug_str	00000000 
00000c99 l       .debug_str	00000000 
00062a03 l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
00000c2a l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
00000c45 l       .debug_str	00000000 
00000da7 l       .debug_str	00000000 
00000db2 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00000d37 l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
00000d3d l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00000d4c l       .debug_str	00000000 
00000d50 l       .debug_str	00000000 
00000d59 l       .debug_str	00000000 
00000d65 l       .debug_str	00000000 
00000d8a l       .debug_str	00000000 
00000d7e l       .debug_str	00000000 
00000d8f l       .debug_str	00000000 
00000ed0 l       .debug_str	00000000 
00000ebe l       .debug_str	00000000 
00000dc8 l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000def l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 3hsoon7bk7h7obgr
000678c0 l       .debug_str	00000000 
0001d120 l       .debug_str	00000000 
0001d15c l       .debug_str	00000000 
0000b8a1 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00000c78 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
0001d0d6 l       .debug_str	00000000 
0001d117 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
0001d309 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 453wd2q5nkthf0qc
00066ba1 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00020225 l       .debug_str	00000000 
00020224 l       .debug_str	00000000 
00005a7c l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
0001c5ae l       .debug_str	00000000 
0001d309 l       .debug_str	00000000 
0001d308 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
000669f8 l       .debug_str	00000000 
000023f2 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00062da4 l       .debug_str	00000000 
00062e93 l       .debug_str	00000000 
0001d19b l       .debug_str	00000000 
00004445 l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
0003d0fb l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
0001d20c l       .debug_str	00000000 
0001d27d l       .debug_str	00000000 
0001d289 l       .debug_str	00000000 
0001d2fa l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 45iiw7gsawq4sxt9
0001e210 l       .debug_str	00000000 
0001fbbf l       .debug_str	00000000 
0001fda2 l       .debug_str	00000000 
00038718 l       .debug_str	00000000 
0003828c l       .debug_str	00000000 
00037bb0 l       .debug_str	00000000 
0003a873 l       .debug_str	00000000 
0002023d l       .debug_str	00000000 
0001ff7c l       .debug_str	00000000 
0001ffb1 l       .debug_str	00000000 
00017ca9 l       .debug_str	00000000 
000201c6 l       .debug_str	00000000 
0002021f l       .debug_str	00000000 
00020229 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
00000f10 l       .debug_str	00000000 
00000f18 l       .debug_str	00000000 
00000f23 l       .debug_str	00000000 
00000f2e l       .debug_str	00000000 
00000f3b l       .debug_str	00000000 
00000f46 l       .debug_str	00000000 
00000f4e l       .debug_str	00000000 
00000f59 l       .debug_str	00000000 
00000f64 l       .debug_str	00000000 
00000f6e l       .debug_str	00000000 
00000f79 l       .debug_str	00000000 
00000f84 l       .debug_str	00000000 
00000f91 l       .debug_str	00000000 
00000f9d l       .debug_str	00000000 
00000faa l       .debug_str	00000000 
00000fb8 l       .debug_str	00000000 
00000fc2 l       .debug_str	00000000 
00017cbe l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
0001d30f l       .debug_str	00000000 
00017ba5 l       .debug_str	00000000 
00010916 l       .debug_str	00000000 
000114cb l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00031b8a l       .debug_str	00000000 
00068388 l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
00002474 l       .debug_str	00000000 
0000247a l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00002481 l       .debug_str	00000000 
0001091f l       .debug_str	00000000 
0006449e l       .debug_str	00000000 
0001092d l       .debug_str	00000000 
00010935 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
000011e4 l       .debug_str	00000000 
0001093d l       .debug_str	00000000 
00010b60 l       .debug_str	00000000 
00010b68 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00010b6d l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
00015d3f l       .debug_str	00000000 
00010b73 l       .debug_str	00000000 
00010b76 l       .debug_str	00000000 
00010b9f l       .debug_str	00000000 
00062e93 l       .debug_str	00000000 
00010bd5 l       .debug_str	00000000 
000392d5 l       .debug_str	00000000 
000376b1 l       .debug_str	00000000 
000374dc l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00062da4 l       .debug_str	00000000 
0003a7ff l       .debug_str	00000000 
000002ea l       .debug_str	00000000 
000201da l       .debug_str	00000000 
0001d344 l       .debug_str	00000000 
0001d379 l       .debug_str	00000000 
00020225 l       .debug_str	00000000 
00020224 l       .debug_str	00000000 
0001d3e1 l       .debug_str	00000000 
0001d416 l       .debug_str	00000000 
0000f05b l       .debug_str	00000000 
00010959 l       .debug_str	00000000 
0001d42f l       .debug_str	00000000 
0001d49d l       .debug_str	00000000 
0001d534 l       .debug_str	00000000 
0001d5f4 l       .debug_str	00000000 
0001d6dd l       .debug_str	00000000 
0001d7ef l       .debug_str	00000000 
0001d92a l       .debug_str	00000000 
0001da8e l       .debug_str	00000000 
0001dc1b l       .debug_str	00000000 
0001ddd1 l       .debug_str	00000000 
00010c02 l       .debug_str	00000000 
00010c05 l       .debug_str	00000000 
00010c55 l       .debug_str	00000000 
00010cb2 l       .debug_str	00000000 
00019a22 l       .debug_str	00000000 
00019a99 l       .debug_str	00000000 
00019b1d l       .debug_str	00000000 
00019b98 l       .debug_str	00000000 
00019c36 l       .debug_str	00000000 
00019ce1 l       .debug_str	00000000 
0001dfb0 l       .debug_str	00000000 
0001e075 l       .debug_str	00000000 
0001e147 l       .debug_str	00000000 
0001e2fc l       .debug_str	00000000 
0001e3f5 l       .debug_str	00000000 
0001e4e5 l       .debug_str	00000000 
0001e5f8 l       .debug_str	00000000 
0001e718 l       .debug_str	00000000 
0001e82f l       .debug_str	00000000 
0001e969 l       .debug_str	00000000 
0001eab0 l       .debug_str	00000000 
0001ebee l       .debug_str	00000000 
0001ed4f l       .debug_str	00000000 
0001eebd l       .debug_str	00000000 
0001f022 l       .debug_str	00000000 
0001f1aa l       .debug_str	00000000 
0001f33f l       .debug_str	00000000 
0001f4cb l       .debug_str	00000000 
0001f67a l       .debug_str	00000000 
0001f836 l       .debug_str	00000000 
0001f9e9 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 4pxngat7bhh34vax
00000d3d l       .debug_str	00000000 
00000ebe l       .debug_str	00000000 
00000dc8 l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000def l       .debug_str	00000000 
00000e06 l       .debug_str	00000000 
00000e2a l       .debug_str	00000000 
00062a8c l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00000edb l       .debug_str	00000000 
00000e56 l       .debug_str	00000000 
00000e46 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
00000f10 l       .debug_str	00000000 
00000f18 l       .debug_str	00000000 
00000f23 l       .debug_str	00000000 
00000f2e l       .debug_str	00000000 
00000f3b l       .debug_str	00000000 
00000f46 l       .debug_str	00000000 
00000f4e l       .debug_str	00000000 
00000f59 l       .debug_str	00000000 
00000f64 l       .debug_str	00000000 
00000f6e l       .debug_str	00000000 
00000f79 l       .debug_str	00000000 
00000f84 l       .debug_str	00000000 
00000f91 l       .debug_str	00000000 
00000f9d l       .debug_str	00000000 
00000faa l       .debug_str	00000000 
00000fb8 l       .debug_str	00000000 
00000fc2 l       .debug_str	00000000 
00017cbe l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00057262 l       .debug_str	00000000 
000410bb l       .debug_str	00000000 
00003435 l       .debug_str	00000000 
00000b51 l       .debug_str	00000000 
00000b56 l       .debug_str	00000000 
00000b5c l       .debug_str	00000000 
00000b63 l       .debug_str	00000000 
00000b6b l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
0002042f l       .debug_str	00000000 
000642ac l       .debug_str	00000000 
000204b4 l       .debug_str	00000000 
00020521 l       .debug_str	00000000 
00020593 l       .debug_str	00000000 
00063092 l       .debug_str	00000000 
00066c14 l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
000205f1 l       .debug_str	00000000 
00057261 l       .debug_str	00000000 
0000bfe3 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00001a1f l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00069452 l       .debug_str	00000000 
000010b6 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00000d99 l       .debug_str	00000000 
00000c99 l       .debug_str	00000000 
00062a03 l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
00000c2a l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
00000c45 l       .debug_str	00000000 
00000da7 l       .debug_str	00000000 
00000db2 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00000d37 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00000d4c l       .debug_str	00000000 
00000d50 l       .debug_str	00000000 
00000d59 l       .debug_str	00000000 
00000d65 l       .debug_str	00000000 
00000d8a l       .debug_str	00000000 
00000d7e l       .debug_str	00000000 
00000d8f l       .debug_str	00000000 
00000e60 l       .debug_str	00000000 
00000ed0 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 d6v9s67p7k5jb59
00000365 l       .debug_str	00000000 
00001f91 l       .debug_str	00000000 
00001f96 l       .debug_str	00000000 
00000c56 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
00000c70 l       .debug_str	00000000 
00000c7c l       .debug_str	00000000 
00040bba l       .debug_str	00000000 
00000c84 l       .debug_str	00000000 
00000c89 l       .debug_str	00000000 
00000c90 l       .debug_str	00000000 
00064e10 l       .debug_str	00000000 
00001a1f l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00069452 l       .debug_str	00000000 
0000bfe3 l       .debug_str	00000000 
00000c99 l       .debug_str	00000000 
00000ca3 l       .debug_str	00000000 
00000caa l       .debug_str	00000000 
00000ca6 l       .debug_str	00000000 
00000cb0 l       .debug_str	00000000 
00000cb8 l       .debug_str	00000000 
000010b6 l       .debug_str	00000000 
00000cbe l       .debug_str	00000000 
00000ce3 l       .debug_str	00000000 
00000cc9 l       .debug_str	00000000 
00000cec l       .debug_str	00000000 
00000d10 l       .debug_str	00000000 
00062a8c l       .debug_str	00000000 
00000d37 l       .debug_str	00000000 
00000d3d l       .debug_str	00000000 
00000d4c l       .debug_str	00000000 
00000d50 l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
00000c2a l       .debug_str	00000000 
00000c45 l       .debug_str	00000000 
00000d59 l       .debug_str	00000000 
00000d65 l       .debug_str	00000000 
00000d8a l       .debug_str	00000000 
00000d7e l       .debug_str	00000000 
00000d8f l       .debug_str	00000000 
00000d99 l       .debug_str	00000000 
00062a03 l       .debug_str	00000000 
00000da7 l       .debug_str	00000000 
00000db2 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
00000dc8 l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
00000def l       .debug_str	00000000 
00000e06 l       .debug_str	00000000 
00000e2a l       .debug_str	00000000 
00000e56 l       .debug_str	00000000 
00000e46 l       .debug_str	00000000 
00000e60 l       .debug_str	00000000 
00000ed0 l       .debug_str	00000000 
00000ebe l       .debug_str	00000000 
00000edb l       .debug_str	00000000 
0003bcfd l       .debug_str	00000000 
0003bcf1 l       .debug_str	00000000 
0006825e l       .debug_str	00000000 
000087a3 l       .debug_str	00000000 
00008798 l       .debug_str	00000000 
00063092 l       .debug_str	00000000 
0006825d l       .debug_str	00000000 
00020b4f l       .debug_str	00000000 
0001d309 l       .debug_str	00000000 
00006531 l       .debug_str	00000000 
00020b53 l       .debug_str	00000000 
0006778b l       .debug_str	00000000 
000196cf l       .debug_str	00000000 
0000f023 l       .debug_str	00000000 
0000f02c l       .debug_str	00000000 
0000f03a l       .debug_str	00000000 
0000f041 l       .debug_str	00000000 
0000ecc9 l       .debug_str	00000000 
0000ecd9 l       .debug_str	00000000 
0000ece2 l       .debug_str	00000000 
0000ecf0 l       .debug_str	00000000 
0000ecfe l       .debug_str	00000000 
0000ed0a l       .debug_str	00000000 
0000ef18 l       .debug_str	00000000 
0000ed16 l       .debug_str	00000000 
0000ed25 l       .debug_str	00000000 
0000ed2d l       .debug_str	00000000 
0000ed46 l       .debug_str	00000000 
0000ed57 l       .debug_str	00000000 
0000ed5f l       .debug_str	00000000 
0000ed92 l       .debug_str	00000000 
0000ed79 l       .debug_str	00000000 
0000ed9e l       .debug_str	00000000 
0000bfec l       .debug_str	00000000 
0000edd0 l       .debug_str	00000000 
0000edb7 l       .debug_str	00000000 
0000ee0a l       .debug_str	00000000 
0000edfd l       .debug_str	00000000 
0000ede4 l       .debug_str	00000000 
0000f048 l       .debug_str	00000000 
0000f0a7 l       .debug_str	00000000 
0000f050 l       .debug_str	00000000 
0000f06b l       .debug_str	00000000 
0000f09f l       .debug_str	00000000 
0000f086 l       .debug_str	00000000 
00066869 l       .debug_str	00000000 
0006407d l       .debug_str	00000000 
000550ad l       .debug_str	00000000 
00034ba2 l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
00020225 l       .debug_str	00000000 
00020b5b l       .debug_str	00000000 
000678bf l       .debug_str	00000000 
00065bff l       .debug_str	00000000 
00063af3 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00065822 l       .debug_str	00000000 
0001254a l       .debug_str	00000000 
00062e3e l       .debug_str	00000000 
00001afe l       .debug_str	00000000 
0000b646 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
0000b650 l       .debug_str	00000000 
0000b65b l       .debug_str	00000000 
0000b665 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
0000b684 l       .debug_str	00000000 
0002060e l       .debug_str	00000000 
0002063f l       .debug_str	00000000 
00010916 l       .debug_str	00000000 
000114cb l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00031b8a l       .debug_str	00000000 
00068388 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
00002474 l       .debug_str	00000000 
0000247a l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00002481 l       .debug_str	00000000 
0001091f l       .debug_str	00000000 
0006449e l       .debug_str	00000000 
0001092d l       .debug_str	00000000 
00010935 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
000011e4 l       .debug_str	00000000 
0001093d l       .debug_str	00000000 
00010b60 l       .debug_str	00000000 
00010b68 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00010b6d l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
00015d3f l       .debug_str	00000000 
00010b73 l       .debug_str	00000000 
00010b76 l       .debug_str	00000000 
00010b9f l       .debug_str	00000000 
00062e93 l       .debug_str	00000000 
00010bd5 l       .debug_str	00000000 
000392d5 l       .debug_str	00000000 
000376b1 l       .debug_str	00000000 
000374dc l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00062da4 l       .debug_str	00000000 
0003a7ff l       .debug_str	00000000 
000002ea l       .debug_str	00000000 
000201da l       .debug_str	00000000 
0002064b l       .debug_str	00000000 
0002067b l       .debug_str	00000000 
0000f05b l       .debug_str	00000000 
00010959 l       .debug_str	00000000 
0001d42f l       .debug_str	00000000 
0001d49d l       .debug_str	00000000 
0001d534 l       .debug_str	00000000 
0001d5f4 l       .debug_str	00000000 
0001d6dd l       .debug_str	00000000 
0001d7ef l       .debug_str	00000000 
0001d92a l       .debug_str	00000000 
0001da8e l       .debug_str	00000000 
0001dc1b l       .debug_str	00000000 
0001ddd1 l       .debug_str	00000000 
00010c02 l       .debug_str	00000000 
00010c05 l       .debug_str	00000000 
00010c55 l       .debug_str	00000000 
00010cb2 l       .debug_str	00000000 
00019a22 l       .debug_str	00000000 
00019a99 l       .debug_str	00000000 
00019b1d l       .debug_str	00000000 
00019b98 l       .debug_str	00000000 
00019c36 l       .debug_str	00000000 
00019ce1 l       .debug_str	00000000 
0001dfb0 l       .debug_str	00000000 
0001e075 l       .debug_str	00000000 
0001e147 l       .debug_str	00000000 
0001e210 l       .debug_str	00000000 
0001e2fc l       .debug_str	00000000 
0001e3f5 l       .debug_str	00000000 
0001e4e5 l       .debug_str	00000000 
0001e5f8 l       .debug_str	00000000 
0001e718 l       .debug_str	00000000 
0001e82f l       .debug_str	00000000 
0001e969 l       .debug_str	00000000 
0001eab0 l       .debug_str	00000000 
0001ebee l       .debug_str	00000000 
0001ed4f l       .debug_str	00000000 
0001eebd l       .debug_str	00000000 
0001f022 l       .debug_str	00000000 
0001f1aa l       .debug_str	00000000 
0001f33f l       .debug_str	00000000 
0001f4cb l       .debug_str	00000000 
0001f67a l       .debug_str	00000000 
0001f836 l       .debug_str	00000000 
0001f9e9 l       .debug_str	00000000 
0001fbbf l       .debug_str	00000000 
0001fda2 l       .debug_str	00000000 
00038718 l       .debug_str	00000000 
0003828c l       .debug_str	00000000 
00037bb0 l       .debug_str	00000000 
0003a873 l       .debug_str	00000000 
0002023d l       .debug_str	00000000 
00020688 l       .debug_str	00000000 
000206b9 l       .debug_str	00000000 
00001c2e l       .debug_str	00000000 
0001af01 l       .debug_str	00000000 
0000fcc8 l       .debug_str	00000000 
0000c03d l       .debug_str	00000000 
00000ac8 l       .debug_str	00000000 
00001fa5 l       .debug_str	00000000 
0000087f l       .debug_str	00000000 
00000a41 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00000a2b l       .debug_str	00000000 
00000a09 l       .debug_str	00000000 
00000a9b l       .debug_str	00000000 
00067702 l       .debug_str	00000000 
000009cf l       .debug_str	00000000 
000008b1 l       .debug_str	00000000 
00000878 l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00062151 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00001cbe l       .debug_str	00000000 
00001cc2 l       .debug_str	00000000 
00001ccd l       .debug_str	00000000 
00001ce8 l       .debug_str	00000000 
00001cd8 l       .debug_str	00000000 
00001fae l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00001fdb l       .debug_str	00000000 
0000bfb9 l       .debug_str	00000000 
0006853d l       .debug_str	00000000 
000008f3 l       .debug_str	00000000 
00000a5c l       .debug_str	00000000 
000009b8 l       .debug_str	00000000 
000008c2 l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
00002010 l       .debug_str	00000000 
00002039 l       .debug_str	00000000 
00002097 l       .debug_str	00000000 
00000998 l       .debug_str	00000000 
00000aa3 l       .debug_str	00000000 
00000a7b l       .debug_str	00000000 
000020fd l       .debug_str	00000000 
00002029 l       .debug_str	00000000 
00000aba l       .debug_str	00000000 
0000086d l       .debug_str	00000000 
00000a34 l       .debug_str	00000000 
00000aab l       .debug_str	00000000 
00000947 l       .debug_str	00000000 
0000211b l       .debug_str	00000000 
00000a21 l       .debug_str	00000000 
00000948 l       .debug_str	00000000 
000008db l       .debug_str	00000000 
00002131 l       .debug_str	00000000 
00002157 l       .debug_str	00000000 
0000088a l       .debug_str	00000000 
0000216d l       .debug_str	00000000 
0000fdf3 l       .debug_str	00000000 
00002136 l       .debug_str	00000000 
0000fc4c l       .debug_str	00000000 
00057e20 l       .debug_str	00000000 
0000fcd1 l       .debug_str	00000000 
0000fcdc l       .debug_str	00000000 
000206c1 l       .debug_str	00000000 
000206ec l       .debug_str	00000000 
000206fd l       .debug_str	00000000 
00020732 l       .debug_str	00000000 
0000f24c l       .debug_str	00000000 
00000895 l       .debug_str	00000000 
0000ef0f l       .debug_str	00000000 
0000ef17 l       .debug_str	00000000 
0000eddb l       .debug_str	00000000 
0000ef21 l       .debug_str	00000000 
0000f1bb l       .debug_str	00000000 
0000f1a2 l       .debug_str	00000000 
00000ad3 l       .debug_str	00000000 
0000f19d l       .debug_str	00000000 
0000f1ca l       .debug_str	00000000 
0000f254 l       .debug_str	00000000 
00001c35 l       .debug_str	00000000 
00065a8c l       .debug_str	00000000 
0000219a l       .debug_str	00000000 
00001c3f l       .debug_str	00000000 
00001c77 l       .debug_str	00000000 
00001cb7 l       .debug_str	00000000 
00001cef l       .debug_str	00000000 
00001cf7 l       .debug_str	00000000 
000021b3 l       .debug_str	00000000 
0000f25a l       .debug_str	00000000 
00020741 l       .debug_str	00000000 
00020774 l       .debug_str	00000000 
00001f9b l       .debug_str	00000000 
00002183 l       .debug_str	00000000 
0000218c l       .debug_str	00000000 
00002195 l       .debug_str	00000000 
000021bc l       .debug_str	00000000 
000021ed l       .debug_str	00000000 
00020784 l       .debug_str	00000000 
000207b8 l       .debug_str	00000000 
000207c1 l       .debug_str	00000000 
000207ed l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
000207fc l       .debug_str	00000000 
0002082f l       .debug_str	00000000 
0002083c l       .debug_str	00000000 
00020848 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000f10 l       .debug_str	00000000 
00000f18 l       .debug_str	00000000 
00000f23 l       .debug_str	00000000 
00000f2e l       .debug_str	00000000 
00000f3b l       .debug_str	00000000 
00000f46 l       .debug_str	00000000 
00000f4e l       .debug_str	00000000 
00000f59 l       .debug_str	00000000 
00000f64 l       .debug_str	00000000 
00000f6e l       .debug_str	00000000 
00000f79 l       .debug_str	00000000 
00000f84 l       .debug_str	00000000 
00000f91 l       .debug_str	00000000 
00000f9d l       .debug_str	00000000 
00000faa l       .debug_str	00000000 
00000fb8 l       .debug_str	00000000 
00000fc2 l       .debug_str	00000000 
00017cbe l       .debug_str	00000000 
00057262 l       .debug_str	00000000 
000410bb l       .debug_str	00000000 
00003435 l       .debug_str	00000000 
00000b51 l       .debug_str	00000000 
00000b56 l       .debug_str	00000000 
00000b5c l       .debug_str	00000000 
00000b63 l       .debug_str	00000000 
00000b6b l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00020879 l       .debug_str	00000000 
000208ae l       .debug_str	00000000 
00056d15 l       .debug_str	00000000 
0000100e l       .debug_str	00000000 
000208bf l       .debug_str	00000000 
000208f1 l       .debug_str	00000000 
000208ff l       .debug_str	00000000 
0002093d l       .debug_str	00000000 
00020957 l       .debug_str	00000000 
00020992 l       .debug_str	00000000 
000209a9 l       .debug_str	00000000 
000209e5 l       .debug_str	00000000 
000209fd l       .debug_str	00000000 
00020ac5 l       .debug_str	00000000 
00020a33 l       .debug_str	00000000 
00020a6a l       .debug_str	00000000 
00020a7d l       .debug_str	00000000 
00020abc l       .debug_str	00000000 
00020ad7 l       .debug_str	00000000 
00020b0f l       .debug_str	00000000 
00020b23 l       .debug_str	00000000 
0000b627 l       .debug_str	00000000 
00001f73 l       .debug_str	00000000 
000087b7 l       .debug_str	00000000 
00001f7c l       .debug_str	00000000 
00001f86 l       .debug_str	00000000 
00001f8b l       .debug_str	00000000 
20000210 l     O .bss	00000008 _ZN6mynewt3spi11PENDING_CMD17he9ba53748647c28eE
20000218 l     O .bss	00000804 _ZN6mynewt3spi12PENDING_DATA17hd399b4169db6ef9fE
20000ea4 l     O .bss	00000000 _ZN6mynewt3spi12SPI_CALLBACK17h394d3759f84ff41dE
200000f0 l     O .data	00000008 _ZN6mynewt3spi12SPI_SETTINGS17hdfedf39f1083195cE
00010f9e l     F .text	0000003a _ZN6mynewt3spi13spi_task_func17h346af6cd785e337aE
20000a2c l     O .bss	00000018 _ZN6mynewt3spi14SPI_DATA_QUEUE17ha67a0be376182525E
20000aa4 l     O .bss	00000400 _ZN6mynewt3spi14SPI_TASK_STACK17h3d060f6837836e13E
20000a44 l     O .bss	00000010 _ZN6mynewt3spi15SPI_EVENT_QUEUE17hd354d0413d39e663E
20000a24 l     O .bss	00000008 _ZN6mynewt3spi16SPI_THROTTLE_SEM17h2e843ea5ab8081abE
0001122c l     F .text	000001e4 _ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE
00011410 l     F .text	000002de _ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE
00011a2c l     F .text	0000012c _ZN6mynewt3spi19spi_noblock_handler17hcdf172f93eaae99aE
000116ee l     F .text	0000033e _ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E
20000a1c l     O .bss	00000008 _ZN6mynewt3spi7SPI_SEM17h420a5db6ccd69489E
20000a54 l     O .bss	00000050 _ZN6mynewt3spi8SPI_TASK17h9f1fb2a7a31b5a57E
00011b58 l     F .text	00000058 _ZN6mynewt3spi8delay_ms17h72c5917ddd9111a5E
0001de10 l     O .text	00000021 str.0
0001de50 l     O .text	0000001c str.1
0001dea0 l     O .text	00000021 str.2
00000000 l    df *ABS*	00000000 1d12im3ett6zu0eh
00021dc7 l       .debug_str	00000000 
00021ed1 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00021edc l       .debug_str	00000000 
00021ee3 l       .debug_str	00000000 
00021f4e l       .debug_str	00000000 
0002207f l       .debug_str	00000000 
000220ec l       .debug_str	00000000 
0002215e l       .debug_str	00000000 
0002226c l       .debug_str	00000000 
00022277 l       .debug_str	00000000 
000222e9 l       .debug_str	00000000 
000223b9 l       .debug_str	00000000 
000223d4 l       .debug_str	00000000 
00022446 l       .debug_str	00000000 
0002257b l       .debug_str	00000000 
000225c5 l       .debug_str	00000000 
00022702 l       .debug_str	00000000 
0002273d l       .debug_str	00000000 
0002286c l       .debug_str	00000000 
000228a7 l       .debug_str	00000000 
000229af l       .debug_str	00000000 
000229ea l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00011e7c l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00011e5f l       .debug_str	00000000 
00022ab4 l       .debug_str	00000000 
00022af0 l       .debug_str	00000000 
00056d15 l       .debug_str	00000000 
00011db0 l       .debug_str	00000000 
00022bf9 l       .debug_str	00000000 
00022c35 l       .debug_str	00000000 
000108f6 l       .debug_str	00000000 
00022d00 l       .debug_str	00000000 
00022d3d l       .debug_str	00000000 
00022e6e l       .debug_str	00000000 
00022eab l       .debug_str	00000000 
00022fb5 l       .debug_str	00000000 
00023036 l       .debug_str	00000000 
000021fd l       .debug_str	00000000 
00014cb7 l       .debug_str	00000000 
0002316b l       .debug_str	00000000 
000231e9 l       .debug_str	00000000 
00023319 l       .debug_str	00000000 
00015017 l       .debug_str	00000000 
00023325 l       .debug_str	00000000 
0002343e l       .debug_str	00000000 
0001512b l       .debug_str	00000000 
0001528b l       .debug_str	00000000 
00014ca3 l       .debug_str	00000000 
00005a7c l       .debug_str	00000000 
00001a0d l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00010916 l       .debug_str	00000000 
000114cb l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00031b8a l       .debug_str	00000000 
00068388 l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
00002474 l       .debug_str	00000000 
0000247a l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00002481 l       .debug_str	00000000 
0001091f l       .debug_str	00000000 
0006449e l       .debug_str	00000000 
0001092d l       .debug_str	00000000 
00010935 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
000011e4 l       .debug_str	00000000 
00012e49 l       .debug_str	00000000 
00012e66 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00012eac l       .debug_str	00000000 
00012ebd l       .debug_str	00000000 
00012f2d l       .debug_str	00000000 
00012fc7 l       .debug_str	00000000 
0001308a l       .debug_str	00000000 
00013177 l       .debug_str	00000000 
00010b60 l       .debug_str	00000000 
00010b68 l       .debug_str	00000000 
00010b6d l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
00015d3f l       .debug_str	00000000 
00010b73 l       .debug_str	00000000 
00010b76 l       .debug_str	00000000 
00010b9f l       .debug_str	00000000 
00062e93 l       .debug_str	00000000 
00010bd5 l       .debug_str	00000000 
0001328e l       .debug_str	00000000 
000132de l       .debug_str	00000000 
0001333b l       .debug_str	00000000 
00010c02 l       .debug_str	00000000 
0001338f l       .debug_str	00000000 
00013406 l       .debug_str	00000000 
0001348a l       .debug_str	00000000 
00013505 l       .debug_str	00000000 
000135a3 l       .debug_str	00000000 
0001364e l       .debug_str	00000000 
000136f0 l       .debug_str	00000000 
000137b5 l       .debug_str	00000000 
00013887 l       .debug_str	00000000 
00013950 l       .debug_str	00000000 
00013a3c l       .debug_str	00000000 
00013b35 l       .debug_str	00000000 
00013c25 l       .debug_str	00000000 
00013d38 l       .debug_str	00000000 
00013e58 l       .debug_str	00000000 
00020d18 l       .debug_str	00000000 
00026026 l       .debug_str	00000000 
00025b90 l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00062da4 l       .debug_str	00000000 
0002b3c4 l       .debug_str	00000000 
000002ea l       .debug_str	00000000 
0001529f l       .debug_str	00000000 
00027f59 l       .debug_str	00000000 
00026efd l       .debug_str	00000000 
00026adc l       .debug_str	00000000 
0002b61d l       .debug_str	00000000 
0001513f l       .debug_str	00000000 
000108f0 l       .debug_str	00000000 
00066cd8 l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
0001bfdf l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
000215b7 l       .debug_str	00000000 
00014505 l       .debug_str	00000000 
00014532 l       .debug_str	00000000 
00014553 l       .debug_str	00000000 
000145ba l       .debug_str	00000000 
0001465a l       .debug_str	00000000 
00010c05 l       .debug_str	00000000 
00010c55 l       .debug_str	00000000 
00010cb2 l       .debug_str	00000000 
00010d06 l       .debug_str	00000000 
00010d7d l       .debug_str	00000000 
00010e01 l       .debug_str	00000000 
00010e7c l       .debug_str	00000000 
00010f1a l       .debug_str	00000000 
00010fc5 l       .debug_str	00000000 
00027179 l       .debug_str	00000000 
00026729 l       .debug_str	00000000 
000263c2 l       .debug_str	00000000 
0002b523 l       .debug_str	00000000 
0001502b l       .debug_str	00000000 
00020b66 l       .debug_str	00000000 
00020bb2 l       .debug_str	00000000 
00020d02 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00020e51 l       .debug_str	00000000 
00020fc0 l       .debug_str	00000000 
0002103b l       .debug_str	00000000 
0002118a l       .debug_str	00000000 
000212d3 l       .debug_str	00000000 
00021444 l       .debug_str	00000000 
000214d2 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
000215a2 l       .debug_str	00000000 
000215bd l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
000215da l       .debug_str	00000000 
00014e88 l       .debug_str	00000000 
000215f3 l       .debug_str	00000000 
00023927 l       .debug_str	00000000 
00021619 l       .debug_str	00000000 
0002167f l       .debug_str	00000000 
00021789 l       .debug_str	00000000 
000217ef l       .debug_str	00000000 
00021920 l       .debug_str	00000000 
00021988 l       .debug_str	00000000 
00021a91 l       .debug_str	00000000 
00021af9 l       .debug_str	00000000 
00021bc4 l       .debug_str	00000000 
00021c2c l       .debug_str	00000000 
00021d5c l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
0001dfe0 l     O .text	0000001c str.0
00000000 l    df *ABS*	00000000 1eyg6foo91nc4g7m
000235ed l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
0002357e l       .debug_str	00000000 
00001a29 l       .debug_str	00000000 
000010d1 l       .debug_str	00000000 
000010ea l       .debug_str	00000000 
00008953 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 1yirna5oebvobipm
0000b8a1 l       .debug_str	00000000 
00002c1c l       .debug_str	00000000 
00002d97 l       .debug_str	00000000 
0002442e l       .debug_str	00000000 
000236ed l       .debug_str	00000000 
0002372c l       .debug_str	00000000 
000021fd l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00015890 l       .debug_str	00000000 
0000e903 l       .debug_str	00000000 
0002441e l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00000c78 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
0001d0d6 l       .debug_str	00000000 
0001d117 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
0001d309 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
00023629 l       .debug_str	00000000 
0002365f l       .debug_str	00000000 
00023673 l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
000236af l       .debug_str	00000000 
0006217d l       .debug_str	00000000 
00002c41 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
0003d0d5 l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00020225 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 23ow2ffx3u3eh59z
00023b95 l       .debug_str	00000000 
00023a2f l       .debug_str	00000000 
00023a7d l       .debug_str	00000000 
0000b644 l       .debug_str	00000000 
00023a8d l       .debug_str	00000000 
00023ae2 l       .debug_str	00000000 
00014c9a l       .debug_str	00000000 
00023aff l       .debug_str	00000000 
00023b45 l       .debug_str	00000000 
00023b4e l       .debug_str	00000000 
00023dca l       .debug_str	00000000 
00023bde l       .debug_str	00000000 
00000d4c l       .debug_str	00000000 
00001f6d l       .debug_str	00000000 
0006523d l       .debug_str	00000000 
000021f7 l       .debug_str	00000000 
0000ac92 l       .debug_str	00000000 
00023bea l       .debug_str	00000000 
00023c66 l       .debug_str	00000000 
0001cc36 l       .debug_str	00000000 
00023c98 l       .debug_str	00000000 
00023d14 l       .debug_str	00000000 
00023d3f l       .debug_str	00000000 
00023dc5 l       .debug_str	00000000 
00023dd4 l       .debug_str	00000000 
00023e45 l       .debug_str	00000000 
00023e5c l       .debug_str	00000000 
00023ed0 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00023eda l       .debug_str	00000000 
00023ee7 l       .debug_str	00000000 
00023f5e l       .debug_str	00000000 
00023f78 l       .debug_str	00000000 
0006449e l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
000628d0 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
000108f0 l       .debug_str	00000000 
00066cd8 l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
0001bfdf l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
000215b7 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00023796 l       .debug_str	00000000 
000237bf l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
000237dc l       .debug_str	00000000 
00023805 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
00021ed1 l       .debug_str	00000000 
00023812 l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
000087ad l       .debug_str	00000000 
0002381f l       .debug_str	00000000 
00023899 l       .debug_str	00000000 
00023831 l       .debug_str	00000000 
00023873 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00023887 l       .debug_str	00000000 
0006788d l       .debug_str	00000000 
00002da0 l       .debug_str	00000000 
0005315b l       .debug_str	00000000 
000238a3 l       .debug_str	00000000 
000215a2 l       .debug_str	00000000 
000215bd l       .debug_str	00000000 
000215da l       .debug_str	00000000 
00014e88 l       .debug_str	00000000 
000215f3 l       .debug_str	00000000 
00023927 l       .debug_str	00000000 
000238ac l       .debug_str	00000000 
000238f1 l       .debug_str	00000000 
00023915 l       .debug_str	00000000 
00023944 l       .debug_str	00000000 
00024a0f l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00023977 l       .debug_str	00000000 
0002398e l       .debug_str	00000000 
000249b1 l       .debug_str	00000000 
00021edc l       .debug_str	00000000 
000239c1 l       .debug_str	00000000 
00024a91 l       .debug_str	00000000 
0002226c l       .debug_str	00000000 
000239f8 l       .debug_str	00000000 
00024af5 l       .debug_str	00000000 
000223b9 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 27z3u5buaaq0txq9
00003604 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00000d99 l       .debug_str	00000000 
00024068 l       .debug_str	00000000 
0000a98b l       .debug_str	00000000 
000240b2 l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
000035ab l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00005afe l       .debug_str	00000000 
00064dfe l       .debug_str	00000000 
0000cb1c l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00066c14 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00023f99 l       .debug_str	00000000 
00006436 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00023fdd l       .debug_str	00000000 
0002401b l       .debug_str	00000000 
00024021 l       .debug_str	00000000 
00003544 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00012260 l     F .text	00000022 _ZN4core3num21_$LT$impl$u20$u16$GT$10swap_bytes17h16a3ed1ea6eb745cE
00012316 l     F .text	0000004a _ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17ha28c0b1aafc724b3E
00000000 l    df *ABS*	00000000 2hqwml62nsnsfte
00001367 l       .debug_str	00000000 
0002420c l       .debug_str	00000000 
0002425e l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
00062e21 l       .debug_str	00000000 
00002da0 l       .debug_str	00000000 
00069443 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00002c01 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
000240fd l       .debug_str	00000000 
0002414b l       .debug_str	00000000 
000238a3 l       .debug_str	00000000 
00024154 l       .debug_str	00000000 
000241a4 l       .debug_str	00000000 
000241af l       .debug_str	00000000 
00024200 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 2qozjxshrs40996g
0000b644 l       .debug_str	00000000 
000628ff l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
000255a5 l       .debug_str	00000000 
0002441e l       .debug_str	00000000 
00024317 l       .debug_str	00000000 
0002437a l       .debug_str	00000000 
0002439b l       .debug_str	00000000 
00024402 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
000021fb l       .debug_str	00000000 
00069443 l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
00024419 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00002c41 l       .debug_str	00000000 
0000d034 l       .debug_str	00000000 
00002c13 l       .debug_str	00000000 
00040a1c l       .debug_str	00000000 
00002cea l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00000c78 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
0003d0d5 l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00020225 l       .debug_str	00000000 
00002c1c l       .debug_str	00000000 
00002d97 l       .debug_str	00000000 
0002442e l       .debug_str	00000000 
00003e97 l       .debug_str	00000000 
0002426b l       .debug_str	00000000 
000242aa l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00015890 l       .debug_str	00000000 
000242c0 l       .debug_str	00000000 
00024300 l       .debug_str	00000000 
0000235a l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 2sn44s63yn8ejs1x
00024a09 l       .debug_str	00000000 
000215a2 l       .debug_str	00000000 
00024a33 l       .debug_str	00000000 
00024a50 l       .debug_str	00000000 
00024a8b l       .debug_str	00000000 
00024aa9 l       .debug_str	00000000 
00024ab4 l       .debug_str	00000000 
00024aef l       .debug_str	00000000 
00024b1d l       .debug_str	00000000 
00024b38 l       .debug_str	00000000 
00024b5e l       .debug_str	00000000 
00024b68 l       .debug_str	00000000 
00024b8e l       .debug_str	00000000 
00024ba8 l       .debug_str	00000000 
00024bcf l       .debug_str	00000000 
00024bea l       .debug_str	00000000 
000241a4 l       .debug_str	00000000 
0006449e l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
00000364 l       .debug_str	00000000 
00065d67 l       .debug_str	00000000 
00063073 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
00002474 l       .debug_str	00000000 
0000247a l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00002481 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
000245bc l       .debug_str	00000000 
000244fb l       .debug_str	00000000 
00024434 l       .debug_str	00000000 
00024480 l       .debug_str	00000000 
0002448c l       .debug_str	00000000 
00023a7d l       .debug_str	00000000 
000238a3 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
000244dd l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
0002450c l       .debug_str	00000000 
0002458e l       .debug_str	00000000 
00014c9a l       .debug_str	00000000 
0002459d l       .debug_str	00000000 
000245ce l       .debug_str	00000000 
00024620 l       .debug_str	00000000 
00024631 l       .debug_str	00000000 
00024684 l       .debug_str	00000000 
00069694 l       .debug_str	00000000 
000108f0 l       .debug_str	00000000 
00066cd8 l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
0001bfdf l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
000215b7 l       .debug_str	00000000 
0002486c l       .debug_str	00000000 
0002478b l       .debug_str	00000000 
00024694 l       .debug_str	00000000 
000246e0 l       .debug_str	00000000 
000246fc l       .debug_str	00000000 
0002474d l       .debug_str	00000000 
000215da l       .debug_str	00000000 
0002476d l       .debug_str	00000000 
000247ac l       .debug_str	00000000 
0002482e l       .debug_str	00000000 
00014e88 l       .debug_str	00000000 
0002484d l       .debug_str	00000000 
0002488e l       .debug_str	00000000 
000248e0 l       .debug_str	00000000 
00024901 l       .debug_str	00000000 
00024954 l       .debug_str	00000000 
00024974 l       .debug_str	00000000 
000249ab l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00021ed1 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
000249c5 l       .debug_str	00000000 
000249d2 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 38t5aj9vnkk8qvk1
000125b6 l       .debug_str	00000000 
000118e6 l       .debug_str	00000000 
00065821 l       .debug_str	00000000 
000125a5 l       .debug_str	00000000 
000686fc l       .debug_str	00000000 
000125a9 l       .debug_str	00000000 
000125ad l       .debug_str	00000000 
000021f8 l       .debug_str	00000000 
00067b38 l       .debug_str	00000000 
00016d33 l       .debug_str	00000000 
00016d22 l       .debug_str	00000000 
000641d7 l       .debug_str	00000000 
000021fb l       .debug_str	00000000 
00069443 l       .debug_str	00000000 
00063092 l       .debug_str	00000000 
00016d85 l       .debug_str	00000000 
00014dec l       .debug_str	00000000 
000177c5 l       .debug_str	00000000 
00001180 l       .debug_str	00000000 
00001189 l       .debug_str	00000000 
00001197 l       .debug_str	00000000 
000088ca l       .debug_str	00000000 
000011af l       .debug_str	00000000 
000012c3 l       .debug_str	00000000 
00015d09 l       .debug_str	00000000 
000010a9 l       .debug_str	00000000 
00014ea1 l       .debug_str	00000000 
00017894 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00002c41 l       .debug_str	00000000 
0000d034 l       .debug_str	00000000 
00002cea l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00001a24 l       .debug_str	00000000 
000140fc l       .debug_str	00000000 
00014261 l       .debug_str	00000000 
00016d8a l       .debug_str	00000000 
00001a29 l       .debug_str	00000000 
00001041 l       .debug_str	00000000 
0000104c l       .debug_str	00000000 
00001056 l       .debug_str	00000000 
000011a9 l       .debug_str	00000000 
0000105f l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
0000881c l       .debug_str	00000000 
00001072 l       .debug_str	00000000 
0000107f l       .debug_str	00000000 
00001085 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00001090 l       .debug_str	00000000 
0000109b l       .debug_str	00000000 
00008867 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
000108af l       .debug_str	00000000 
000010a2 l       .debug_str	00000000 
000010af l       .debug_str	00000000 
0003c3db l       .debug_str	00000000 
0001086b l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
000125b7 l       .debug_str	00000000 
00012cd8 l       .debug_str	00000000 
00014102 l       .debug_str	00000000 
00014109 l       .debug_str	00000000 
00014111 l       .debug_str	00000000 
00010916 l       .debug_str	00000000 
000114cb l       .debug_str	00000000 
00031b8a l       .debug_str	00000000 
00068388 l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
00002474 l       .debug_str	00000000 
0000247a l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00002481 l       .debug_str	00000000 
0001091f l       .debug_str	00000000 
0006449e l       .debug_str	00000000 
0001092d l       .debug_str	00000000 
00010935 l       .debug_str	00000000 
000011e4 l       .debug_str	00000000 
00012e49 l       .debug_str	00000000 
00012e66 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00012eac l       .debug_str	00000000 
00012ebd l       .debug_str	00000000 
00012f2d l       .debug_str	00000000 
00012fc7 l       .debug_str	00000000 
0001308a l       .debug_str	00000000 
00010b60 l       .debug_str	00000000 
00010b68 l       .debug_str	00000000 
00010b6d l       .debug_str	00000000 
00015d3f l       .debug_str	00000000 
00010b73 l       .debug_str	00000000 
00010b76 l       .debug_str	00000000 
00010b9f l       .debug_str	00000000 
00062e93 l       .debug_str	00000000 
00010bd5 l       .debug_str	00000000 
0001328e l       .debug_str	00000000 
000132de l       .debug_str	00000000 
0001333b l       .debug_str	00000000 
00010c02 l       .debug_str	00000000 
0001338f l       .debug_str	00000000 
00013406 l       .debug_str	00000000 
0001348a l       .debug_str	00000000 
00013505 l       .debug_str	00000000 
000135a3 l       .debug_str	00000000 
0001364e l       .debug_str	00000000 
000136f0 l       .debug_str	00000000 
000137b5 l       .debug_str	00000000 
00013887 l       .debug_str	00000000 
00013950 l       .debug_str	00000000 
00013a3c l       .debug_str	00000000 
00013b35 l       .debug_str	00000000 
00027f59 l       .debug_str	00000000 
00026efd l       .debug_str	00000000 
00026adc l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00062da4 l       .debug_str	00000000 
0002b61d l       .debug_str	00000000 
000002ea l       .debug_str	00000000 
0001513f l       .debug_str	00000000 
00014118 l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
00014e10 l       .debug_str	00000000 
00014266 l       .debug_str	00000000 
0001426c l       .debug_str	00000000 
00013177 l       .debug_str	00000000 
00013c25 l       .debug_str	00000000 
00013d38 l       .debug_str	00000000 
00013e58 l       .debug_str	00000000 
00020d18 l       .debug_str	00000000 
00026026 l       .debug_str	00000000 
00025b90 l       .debug_str	00000000 
0002b3c4 l       .debug_str	00000000 
0001529f l       .debug_str	00000000 
00014275 l       .debug_str	00000000 
0006549a l       .debug_str	00000000 
00014ec5 l       .debug_str	00000000 
0000b644 l       .debug_str	00000000 
00024c11 l       .debug_str	00000000 
00024c74 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00001afe l       .debug_str	00000000 
0000b36d l       .debug_str	00000000 
0000d443 l       .debug_str	00000000 
0000b642 l       .debug_str	00000000 
00062c5e l       .debug_str	00000000 
0000b6a7 l       .debug_str	00000000 
00067190 l       .debug_str	00000000 
00012c6d l       .debug_str	00000000 
00024d44 l       .debug_str	00000000 
00024d87 l       .debug_str	00000000 
00024e2c l       .debug_str	00000000 
00024e6a l       .debug_str	00000000 
00024ede l       .debug_str	00000000 
00024f1e l       .debug_str	00000000 
00024fc0 l       .debug_str	00000000 
0002504e l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00015122 l       .debug_str	00000000 
0001525b l       .debug_str	00000000 
000250bf l       .debug_str	00000000 
0002514f l       .debug_str	00000000 
0001500c l       .debug_str	00000000 
00014fb6 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00005f81 l       .debug_str	00000000 
0001e120 l     O .text	0000001c str.0
00000000 l    df *ABS*	00000000 44i53wcjfbi7aup6
00000d4c l       .debug_str	00000000 
00025305 l       .debug_str	00000000 
00025383 l       .debug_str	00000000 
000215a2 l       .debug_str	00000000 
000223b9 l       .debug_str	00000000 
000253a2 l       .debug_str	00000000 
00023e45 l       .debug_str	00000000 
00025432 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00001f6d l       .debug_str	00000000 
0006523d l       .debug_str	00000000 
000021f7 l       .debug_str	00000000 
0000ac92 l       .debug_str	00000000 
0001cc36 l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
00005b50 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
000251ec l       .debug_str	00000000 
00025278 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00021ed1 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
0002226c l       .debug_str	00000000 
00025287 l       .debug_str	00000000 
000108f0 l       .debug_str	00000000 
00066cd8 l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
0001bfdf l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
000215b7 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 47rkdhwm787qhmj
00000c51 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00015890 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
0002558a l       .debug_str	00000000 
000255bc l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00002c41 l       .debug_str	00000000 
0000235a l       .debug_str	00000000 
00000c78 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
0003d0d5 l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00020225 l       .debug_str	00000000 
00002c1c l       .debug_str	00000000 
00002d97 l       .debug_str	00000000 
0002442e l       .debug_str	00000000 
000628ff l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
0000b644 l       .debug_str	00000000 
000255a5 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
000254b9 l       .debug_str	00000000 
000254f7 l       .debug_str	00000000 
0002550d l       .debug_str	00000000 
00024402 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 51yoxfx70x1zs6hm
0001c814 l       .debug_str	00000000 
00024200 l       .debug_str	00000000 
000256bc l       .debug_str	00000000 
0002425e l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00002da0 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00062e21 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00002c09 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
000255c2 l       .debug_str	00000000 
0002414b l       .debug_str	00000000 
00021ed1 l       .debug_str	00000000 
00025614 l       .debug_str	00000000 
00024b5e l       .debug_str	00000000 
00025667 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 57mna47q6qau6jmh
00023bde l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
00021ed1 l       .debug_str	00000000 
00023812 l       .debug_str	00000000 
00025712 l       .debug_str	00000000 
0002575d l       .debug_str	00000000 
00025780 l       .debug_str	00000000 
000257cb l       .debug_str	00000000 
000257de l       .debug_str	00000000 
000238a3 l       .debug_str	00000000 
00025821 l       .debug_str	00000000 
00025864 l       .debug_str	00000000 
000215da l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
000108f0 l       .debug_str	00000000 
00066cd8 l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
0001bfdf l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
000215b7 l       .debug_str	00000000 
000215a2 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
000215bd l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 58hcw6hr1y35zkdy
000294d9 l       .debug_str	00000000 
00029b2e l       .debug_str	00000000 
00029c03 l       .debug_str	00000000 
00029c8c l       .debug_str	00000000 
00029d77 l       .debug_str	00000000 
000225c5 l       .debug_str	00000000 
00029e03 l       .debug_str	00000000 
00029e8f l       .debug_str	00000000 
00029fa5 l       .debug_str	00000000 
0002a031 l       .debug_str	00000000 
0002a11f l       .debug_str	00000000 
00022c35 l       .debug_str	00000000 
00011e7c l       .debug_str	00000000 
00056d15 l       .debug_str	00000000 
000108f6 l       .debug_str	00000000 
0002a19d l       .debug_str	00000000 
00022af0 l       .debug_str	00000000 
00011db0 l       .debug_str	00000000 
0002a21b l       .debug_str	00000000 
00022d3d l       .debug_str	00000000 
0002a29a l       .debug_str	00000000 
00022eab l       .debug_str	00000000 
0002a319 l       .debug_str	00000000 
000217ef l       .debug_str	00000000 
0002a398 l       .debug_str	00000000 
0002167f l       .debug_str	00000000 
0002a417 l       .debug_str	00000000 
0002a499 l       .debug_str	00000000 
00023977 l       .debug_str	00000000 
0002a568 l       .debug_str	00000000 
0002a5ea l       .debug_str	00000000 
00021edc l       .debug_str	00000000 
0002a6f7 l       .debug_str	00000000 
0002a779 l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
0001d309 l       .debug_str	00000000 
0002a85e l       .debug_str	00000000 
0002a8e0 l       .debug_str	00000000 
0002aa14 l       .debug_str	00000000 
0002aa96 l       .debug_str	00000000 
0002ab7b l       .debug_str	00000000 
0002abfd l       .debug_str	00000000 
0002accc l       .debug_str	00000000 
0002ad4e l       .debug_str	00000000 
0002ae82 l       .debug_str	00000000 
0002af04 l       .debug_str	00000000 
0002b011 l       .debug_str	00000000 
0002b093 l       .debug_str	00000000 
0002b1a0 l       .debug_str	00000000 
0002b222 l       .debug_str	00000000 
0002b356 l       .debug_str	00000000 
0002b3b2 l       .debug_str	00000000 
0002b511 l       .debug_str	00000000 
0002b60b l       .debug_str	00000000 
00001a0d l       .debug_str	00000000 
0002b743 l       .debug_str	00000000 
00005a7c l       .debug_str	00000000 
00002c41 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
00023812 l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
000087ad l       .debug_str	00000000 
0002381f l       .debug_str	00000000 
00023899 l       .debug_str	00000000 
000021fb l       .debug_str	00000000 
00069443 l       .debug_str	00000000 
0002b853 l       .debug_str	00000000 
0003d0d5 l       .debug_str	00000000 
00020225 l       .debug_str	00000000 
00002c1c l       .debug_str	00000000 
00002d97 l       .debug_str	00000000 
0002b858 l       .debug_str	00000000 
00047006 l       .debug_str	00000000 
0002b9b3 l       .debug_str	00000000 
0002bae7 l       .debug_str	00000000 
0002bbdd l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00010916 l       .debug_str	00000000 
00031b8a l       .debug_str	00000000 
00068388 l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
00002474 l       .debug_str	00000000 
0000247a l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00002481 l       .debug_str	00000000 
0001091f l       .debug_str	00000000 
0006449e l       .debug_str	00000000 
0001092d l       .debug_str	00000000 
00010935 l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
000011e4 l       .debug_str	00000000 
00012e49 l       .debug_str	00000000 
00012e66 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00012eac l       .debug_str	00000000 
00012ebd l       .debug_str	00000000 
00012f2d l       .debug_str	00000000 
00012fc7 l       .debug_str	00000000 
0001308a l       .debug_str	00000000 
00013177 l       .debug_str	00000000 
00010b60 l       .debug_str	00000000 
00010b68 l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00010b6d l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
00015d3f l       .debug_str	00000000 
00010b73 l       .debug_str	00000000 
00010b76 l       .debug_str	00000000 
00010b9f l       .debug_str	00000000 
00062e93 l       .debug_str	00000000 
00010bd5 l       .debug_str	00000000 
0001328e l       .debug_str	00000000 
000132de l       .debug_str	00000000 
0001333b l       .debug_str	00000000 
00010c02 l       .debug_str	00000000 
0001338f l       .debug_str	00000000 
00013406 l       .debug_str	00000000 
0001348a l       .debug_str	00000000 
00013505 l       .debug_str	00000000 
000135a3 l       .debug_str	00000000 
0001364e l       .debug_str	00000000 
000136f0 l       .debug_str	00000000 
000137b5 l       .debug_str	00000000 
00013887 l       .debug_str	00000000 
00013950 l       .debug_str	00000000 
00013a3c l       .debug_str	00000000 
00013b35 l       .debug_str	00000000 
00013c25 l       .debug_str	00000000 
00013d38 l       .debug_str	00000000 
00013e58 l       .debug_str	00000000 
00020d18 l       .debug_str	00000000 
00026026 l       .debug_str	00000000 
00025b90 l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00062da4 l       .debug_str	00000000 
0002b3c4 l       .debug_str	00000000 
0001093d l       .debug_str	00000000 
0000f05b l       .debug_str	00000000 
00010959 l       .debug_str	00000000 
0001099e l       .debug_str	00000000 
00010a0b l       .debug_str	00000000 
00010aa1 l       .debug_str	00000000 
00010c05 l       .debug_str	00000000 
00010c55 l       .debug_str	00000000 
00010cb2 l       .debug_str	00000000 
00010d06 l       .debug_str	00000000 
00010d7d l       .debug_str	00000000 
00010e01 l       .debug_str	00000000 
00010e7c l       .debug_str	00000000 
00010f1a l       .debug_str	00000000 
00010fc5 l       .debug_str	00000000 
00011067 l       .debug_str	00000000 
0001112c l       .debug_str	00000000 
000111fe l       .debug_str	00000000 
00028725 l       .debug_str	00000000 
00027cc7 l       .debug_str	00000000 
0002791e l       .debug_str	00000000 
0002b755 l       .debug_str	00000000 
00027f59 l       .debug_str	00000000 
00026efd l       .debug_str	00000000 
00026adc l       .debug_str	00000000 
0002b61d l       .debug_str	00000000 
00025880 l       .debug_str	00000000 
000258d1 l       .debug_str	00000000 
00025a25 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00025b72 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00025ce5 l       .debug_str	00000000 
00025d67 l       .debug_str	00000000 
00025eba l       .debug_str	00000000 
00026007 l       .debug_str	00000000 
000108f0 l       .debug_str	00000000 
00066cd8 l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
0001bfdf l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
000215b7 l       .debug_str	00000000 
00014505 l       .debug_str	00000000 
00014532 l       .debug_str	00000000 
00014553 l       .debug_str	00000000 
000145ba l       .debug_str	00000000 
0001465a l       .debug_str	00000000 
00027179 l       .debug_str	00000000 
00026729 l       .debug_str	00000000 
000263c2 l       .debug_str	00000000 
0002617c l       .debug_str	00000000 
000261cd l       .debug_str	00000000 
000262bc l       .debug_str	00000000 
000263a4 l       .debug_str	00000000 
000264b2 l       .debug_str	00000000 
00026534 l       .debug_str	00000000 
00026622 l       .debug_str	00000000 
0002670a l       .debug_str	00000000 
0002b523 l       .debug_str	00000000 
0002681a l       .debug_str	00000000 
0002686b l       .debug_str	00000000 
00026998 l       .debug_str	00000000 
00026abe l       .debug_str	00000000 
00026c0a l       .debug_str	00000000 
00026c8c l       .debug_str	00000000 
00026db8 l       .debug_str	00000000 
00026ede l       .debug_str	00000000 
0002702c l       .debug_str	00000000 
00027078 l       .debug_str	00000000 
00027163 l       .debug_str	00000000 
0002724d l       .debug_str	00000000 
00027357 l       .debug_str	00000000 
000273d2 l       .debug_str	00000000 
000274bc l       .debug_str	00000000 
000275a0 l       .debug_str	00000000 
000276ac l       .debug_str	00000000 
000276fd l       .debug_str	00000000 
00027802 l       .debug_str	00000000 
00027900 l       .debug_str	00000000 
00027a24 l       .debug_str	00000000 
00027aa6 l       .debug_str	00000000 
00027baa l       .debug_str	00000000 
00027ca8 l       .debug_str	00000000 
00027dce l       .debug_str	00000000 
00027e1a l       .debug_str	00000000 
00027f43 l       .debug_str	00000000 
0002806b l       .debug_str	00000000 
000281b3 l       .debug_str	00000000 
0002822e l       .debug_str	00000000 
00028356 l       .debug_str	00000000 
00028478 l       .debug_str	00000000 
000285c2 l       .debug_str	00000000 
0002860e l       .debug_str	00000000 
0002870f l       .debug_str	00000000 
0002880f l       .debug_str	00000000 
0002892f l       .debug_str	00000000 
000289aa l       .debug_str	00000000 
00028aaa l       .debug_str	00000000 
00028ba4 l       .debug_str	00000000 
00020b66 l       .debug_str	00000000 
00020bb2 l       .debug_str	00000000 
00020d02 l       .debug_str	00000000 
00020e51 l       .debug_str	00000000 
00020fc0 l       .debug_str	00000000 
0002103b l       .debug_str	00000000 
0002118a l       .debug_str	00000000 
000212d3 l       .debug_str	00000000 
000114cb l       .debug_str	00000000 
000112c7 l       .debug_str	00000000 
00028cc6 l       .debug_str	00000000 
00028d1c l       .debug_str	00000000 
00028e69 l       .debug_str	00000000 
00028ebf l       .debug_str	00000000 
00028fbd l       .debug_str	00000000 
00029013 l       .debug_str	00000000 
000002ea l       .debug_str	00000000 
00029139 l       .debug_str	00000000 
000291c0 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00021ed1 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
0002226c l       .debug_str	00000000 
000292f8 l       .debug_str	00000000 
0002937f l       .debug_str	00000000 
000215a2 l       .debug_str	00000000 
000223b9 l       .debug_str	00000000 
00029452 l       .debug_str	00000000 
000295ea l       .debug_str	00000000 
00029672 l       .debug_str	00000000 
00029746 l       .debug_str	00000000 
000297cf l       .debug_str	00000000 
00029909 l       .debug_str	00000000 
00029992 l       .debug_str	00000000 
00029aa5 l       .debug_str	00000000 
0001e1e0 l     O .text	00000021 str.0
0001e220 l     O .text	0000001c str.1
00000000 l    df *ABS*	00000000 6cfx5nwokxvh8zp
000160e3 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00012237 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
0002bd51 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
000118e6 l       .debug_str	00000000 
00015fde l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00015fea l       .debug_str	00000000 
00015fee l       .debug_str	00000000 
00015ff6 l       .debug_str	00000000 
00015ffc l       .debug_str	00000000 
00016002 l       .debug_str	00000000 
00016008 l       .debug_str	00000000 
0001600f l       .debug_str	00000000 
00016015 l       .debug_str	00000000 
0001601b l       .debug_str	00000000 
00016022 l       .debug_str	00000000 
00016028 l       .debug_str	00000000 
00016030 l       .debug_str	00000000 
00016037 l       .debug_str	00000000 
0001603d l       .debug_str	00000000 
00016043 l       .debug_str	00000000 
00016049 l       .debug_str	00000000 
0001604f l       .debug_str	00000000 
00016055 l       .debug_str	00000000 
0001605c l       .debug_str	00000000 
00016063 l       .debug_str	00000000 
0001606b l       .debug_str	00000000 
00016073 l       .debug_str	00000000 
0001607b l       .debug_str	00000000 
00016082 l       .debug_str	00000000 
0001608a l       .debug_str	00000000 
00016091 l       .debug_str	00000000 
00016098 l       .debug_str	00000000 
0001609f l       .debug_str	00000000 
000160a6 l       .debug_str	00000000 
000160ad l       .debug_str	00000000 
000160b4 l       .debug_str	00000000 
000160ba l       .debug_str	00000000 
000160c0 l       .debug_str	00000000 
000160c6 l       .debug_str	00000000 
000160cc l       .debug_str	00000000 
000160d3 l       .debug_str	00000000 
000160db l       .debug_str	00000000 
0002bd6b l       .debug_str	00000000 
00015da2 l       .debug_str	00000000 
00067095 l       .debug_str	00000000 
00003e97 l       .debug_str	00000000 
0002bce9 l       .debug_str	00000000 
0002bd25 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 4ghfyj9ydwkw6b61
00002325 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
000101ce l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00016e89 l       .debug_str	00000000 
0002be38 l       .debug_str	00000000 
00016f3c l       .debug_str	00000000 
000123a2 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
0002bd51 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
00016d91 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
000118e6 l       .debug_str	00000000 
00015fde l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00015fea l       .debug_str	00000000 
00015fee l       .debug_str	00000000 
00015ff6 l       .debug_str	00000000 
00015ffc l       .debug_str	00000000 
00016002 l       .debug_str	00000000 
00016008 l       .debug_str	00000000 
0001600f l       .debug_str	00000000 
00016015 l       .debug_str	00000000 
0001601b l       .debug_str	00000000 
00016022 l       .debug_str	00000000 
00016028 l       .debug_str	00000000 
00016030 l       .debug_str	00000000 
00016037 l       .debug_str	00000000 
0001603d l       .debug_str	00000000 
00016043 l       .debug_str	00000000 
00016049 l       .debug_str	00000000 
0001604f l       .debug_str	00000000 
00016055 l       .debug_str	00000000 
0001605c l       .debug_str	00000000 
00016063 l       .debug_str	00000000 
0001606b l       .debug_str	00000000 
00016073 l       .debug_str	00000000 
0001607b l       .debug_str	00000000 
00016082 l       .debug_str	00000000 
0001608a l       .debug_str	00000000 
00016091 l       .debug_str	00000000 
00016098 l       .debug_str	00000000 
0001609f l       .debug_str	00000000 
000160a6 l       .debug_str	00000000 
000160ad l       .debug_str	00000000 
000160b4 l       .debug_str	00000000 
000160ba l       .debug_str	00000000 
000160c0 l       .debug_str	00000000 
000160c6 l       .debug_str	00000000 
000160cc l       .debug_str	00000000 
000160d3 l       .debug_str	00000000 
000160db l       .debug_str	00000000 
0002bd6b l       .debug_str	00000000 
00016f93 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
0002bd77 l       .debug_str	00000000 
00016e82 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00011e7c l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 5djqetqnmvq3okmr
000101ce l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
00016d91 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
000118e6 l       .debug_str	00000000 
00016db5 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
00016f3c l       .debug_str	00000000 
0002bef9 l       .debug_str	00000000 
00005138 l       .debug_str	00000000 
00011e7c l       .debug_str	00000000 
000044cb l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 libm.lj9dctag-cgu.0
0002f5c2 l       .debug_str	00000000 
0002bfbe l       .debug_str	00000000 
00031c1f l       .debug_str	00000000 
00031c1c l       .debug_str	00000000 
0002c011 l       .debug_str	00000000 
00031c19 l       .debug_str	00000000 
00031c16 l       .debug_str	00000000 
0002c059 l       .debug_str	00000000 
00031c13 l       .debug_str	00000000 
00031c10 l       .debug_str	00000000 
0002c05e l       .debug_str	00000000 
00031c0d l       .debug_str	00000000 
0002c063 l       .debug_str	00000000 
00031c0a l       .debug_str	00000000 
00031c07 l       .debug_str	00000000 
0002c068 l       .debug_str	00000000 
0003bf41 l       .debug_str	00000000 
00031c00 l       .debug_str	00000000 
00031bfb l       .debug_str	00000000 
00031bf8 l       .debug_str	00000000 
00011e7c l       .debug_str	00000000 
00031bf4 l       .debug_str	00000000 
000630c3 l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
00019366 l       .debug_str	00000000 
00031bf1 l       .debug_str	00000000 
0002c06c l       .debug_str	00000000 
00031bee l       .debug_str	00000000 
000555cb l       .debug_str	00000000 
0002c097 l       .debug_str	00000000 
00031bea l       .debug_str	00000000 
00031be4 l       .debug_str	00000000 
000656d0 l       .debug_str	00000000 
0002c750 l       .debug_str	00000000 
00068844 l       .debug_str	00000000 
0002c09d l       .debug_str	00000000 
00031bde l       .debug_str	00000000 
0002c0a4 l       .debug_str	00000000 
00031bd9 l       .debug_str	00000000 
00067b38 l       .debug_str	00000000 
000021fb l       .debug_str	00000000 
0002c0d3 l       .debug_str	00000000 
0006406b l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00065162 l       .debug_str	00000000 
0001bfdf l       .debug_str	00000000 
00031bd5 l       .debug_str	00000000 
0002c0d9 l       .debug_str	00000000 
00031bd2 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00031bce l       .debug_str	00000000 
00031bc9 l       .debug_str	00000000 
000669f8 l       .debug_str	00000000 
00031bc6 l       .debug_str	00000000 
00031bc0 l       .debug_str	00000000 
0003d0fb l       .debug_str	00000000 
0002c7cb l       .debug_str	00000000 
00048abd l       .debug_str	00000000 
00002347 l       .debug_str	00000000 
0006311c l       .debug_str	00000000 
00031bbd l       .debug_str	00000000 
0000234c l       .debug_str	00000000 
00031bb9 l       .debug_str	00000000 
00031bb5 l       .debug_str	00000000 
00002352 l       .debug_str	00000000 
00031bb1 l       .debug_str	00000000 
00031bad l       .debug_str	00000000 
00006188 l       .debug_str	00000000 
00031ba9 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
00031ba5 l       .debug_str	00000000 
00031ba1 l       .debug_str	00000000 
00031b9d l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
000687cf l       .debug_str	00000000 
00031b96 l       .debug_str	00000000 
00002dad l       .debug_str	00000000 
00031b91 l       .debug_str	00000000 
0003bf54 l       .debug_str	00000000 
00000d4c l       .debug_str	00000000 
0002c6db l       .debug_str	00000000 
00031b8c l       .debug_str	00000000 
0000236b l       .debug_str	00000000 
00031b87 l       .debug_str	00000000 
00068845 l       .debug_str	00000000 
00002c41 l       .debug_str	00000000 
00031b83 l       .debug_str	00000000 
00031b7d l       .debug_str	00000000 
00001f6d l       .debug_str	00000000 
00031b7a l       .debug_str	00000000 
00002371 l       .debug_str	00000000 
00031b77 l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
00031b70 l       .debug_str	00000000 
00031b69 l       .debug_str	00000000 
0002c103 l       .debug_str	00000000 
00031b62 l       .debug_str	00000000 
00031b5f l       .debug_str	00000000 
0002c12d l       .debug_str	00000000 
00031b5a l       .debug_str	00000000 
00062d3d l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00031b55 l       .debug_str	00000000 
00031b4f l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00031b4c l       .debug_str	00000000 
00031b45 l       .debug_str	00000000 
0002c13b l       .debug_str	00000000 
0002c857 l       .debug_str	00000000 
0000c6e8 l       .debug_str	00000000 
00008b95 l       .debug_str	00000000 
0000b343 l       .debug_str	00000000 
00031b42 l       .debug_str	00000000 
0002c165 l       .debug_str	00000000 
0000c96b l       .debug_str	00000000 
00031b3e l       .debug_str	00000000 
000023aa l       .debug_str	00000000 
00031b34 l       .debug_str	00000000 
0002c18f l       .debug_str	00000000 
00031b2a l       .debug_str	00000000 
00031b20 l       .debug_str	00000000 
000023e3 l       .debug_str	00000000 
00031b16 l       .debug_str	00000000 
0003658e l       .debug_str	00000000 
00063175 l       .debug_str	00000000 
0002c1b8 l       .debug_str	00000000 
00031b0f l       .debug_str	00000000 
00002c75 l       .debug_str	00000000 
00031b09 l       .debug_str	00000000 
000023f2 l       .debug_str	00000000 
00031b06 l       .debug_str	00000000 
00031b02 l       .debug_str	00000000 
0002c1e1 l       .debug_str	00000000 
00031afa l       .debug_str	00000000 
00031af3 l       .debug_str	00000000 
00031927 l       .debug_str	00000000 
00031af0 l       .debug_str	00000000 
00031aed l       .debug_str	00000000 
00066c14 l       .debug_str	00000000 
00059604 l       .debug_str	00000000 
00031ae7 l       .debug_str	00000000 
0002c1eb l       .debug_str	00000000 
0006411c l       .debug_str	00000000 
00031bcb l       .debug_str	00000000 
0006523d l       .debug_str	00000000 
00044b56 l       .debug_str	00000000 
0000a0a2 l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
00031ae3 l       .debug_str	00000000 
00031adf l       .debug_str	00000000 
000694c3 l       .debug_str	00000000 
00031acf l       .debug_str	00000000 
00031acb l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00031ac8 l       .debug_str	00000000 
00031acc l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00031ac3 l       .debug_str	00000000 
00031abc l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
00031ab4 l       .debug_str	00000000 
00031aab l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00017139 l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00031aa7 l       .debug_str	00000000 
00031964 l       .debug_str	00000000 
00031aa3 l       .debug_str	00000000 
000021f7 l       .debug_str	00000000 
00031a9f l       .debug_str	00000000 
000318e1 l       .debug_str	00000000 
00031a9b l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
0001aef2 l       .debug_str	00000000 
000023f8 l       .debug_str	00000000 
0003bd50 l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
00031a98 l       .debug_str	00000000 
00031a89 l       .debug_str	00000000 
00001134 l       .debug_str	00000000 
00031a85 l       .debug_str	00000000 
00002412 l       .debug_str	00000000 
00031a81 l       .debug_str	00000000 
00002684 l       .debug_str	00000000 
00031a7d l       .debug_str	00000000 
0002c1f4 l       .debug_str	00000000 
00031a79 l       .debug_str	00000000 
0000243f l       .debug_str	00000000 
00031a76 l       .debug_str	00000000 
00002474 l       .debug_str	00000000 
00063f3f l       .debug_str	00000000 
0000247a l       .debug_str	00000000 
00063f37 l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
00031a70 l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00031a6a l       .debug_str	00000000 
00002481 l       .debug_str	00000000 
00064c36 l       .debug_str	00000000 
000026a9 l       .debug_str	00000000 
00031a66 l       .debug_str	00000000 
00002567 l       .debug_str	00000000 
00031a62 l       .debug_str	00000000 
0002c21d l       .debug_str	00000000 
00031a51 l       .debug_str	00000000 
000024e0 l       .debug_str	00000000 
00031a5c l       .debug_str	00000000 
00002518 l       .debug_str	00000000 
00031a54 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00031a50 l       .debug_str	00000000 
00002549 l       .debug_str	00000000 
00031a49 l       .debug_str	00000000 
0002c26e l       .debug_str	00000000 
00062a04 l       .debug_str	00000000 
00002622 l       .debug_str	00000000 
00031a46 l       .debug_str	00000000 
00002659 l       .debug_str	00000000 
00031a43 l       .debug_str	00000000 
0006310d l       .debug_str	00000000 
0000268a l       .debug_str	00000000 
00031a39 l       .debug_str	00000000 
000028fc l       .debug_str	00000000 
00031a33 l       .debug_str	00000000 
0000292a l       .debug_str	00000000 
00031a30 l       .debug_str	00000000 
000027cd l       .debug_str	00000000 
0006506b l       .debug_str	00000000 
0002c2f0 l       .debug_str	00000000 
00002734 l       .debug_str	00000000 
00002775 l       .debug_str	00000000 
0000887e l       .debug_str	00000000 
000027af l       .debug_str	00000000 
0002c065 l       .debug_str	00000000 
0002c341 l       .debug_str	00000000 
0000887b l       .debug_str	00000000 
00002891 l       .debug_str	00000000 
00031a2a l       .debug_str	00000000 
000028d1 l       .debug_str	00000000 
00000b76 l       .debug_str	00000000 
0000290b l       .debug_str	00000000 
00031a27 l       .debug_str	00000000 
00002b23 l       .debug_str	00000000 
00031b6d l       .debug_str	00000000 
00002a53 l       .debug_str	00000000 
00031b66 l       .debug_str	00000000 
0002c3c3 l       .debug_str	00000000 
00031a3b l       .debug_str	00000000 
000029b9 l       .debug_str	00000000 
00031a1f l       .debug_str	00000000 
0002c40f l       .debug_str	00000000 
00031a16 l       .debug_str	00000000 
00002a18 l       .debug_str	00000000 
00031a10 l       .debug_str	00000000 
00002a2a l       .debug_str	00000000 
00031a0c l       .debug_str	00000000 
00002a35 l       .debug_str	00000000 
0002c460 l       .debug_str	00000000 
00031a09 l       .debug_str	00000000 
00002ae8 l       .debug_str	00000000 
00069857 l       .debug_str	00000000 
00002af9 l       .debug_str	00000000 
000101ce l       .debug_str	00000000 
00002b04 l       .debug_str	00000000 
00031a03 l       .debug_str	00000000 
0002c4e2 l       .debug_str	00000000 
00031a00 l       .debug_str	00000000 
00002b89 l       .debug_str	00000000 
000319fa l       .debug_str	00000000 
0002c534 l       .debug_str	00000000 
000319f7 l       .debug_str	00000000 
00002bef l       .debug_str	00000000 
000319f4 l       .debug_str	00000000 
00069694 l       .debug_str	00000000 
00062c8e l       .debug_str	00000000 
000319f1 l       .debug_str	00000000 
00002c01 l       .debug_str	00000000 
00069725 l       .debug_str	00000000 
00002c09 l       .debug_str	00000000 
000319ea l       .debug_str	00000000 
0000d034 l       .debug_str	00000000 
0002c770 l       .debug_str	00000000 
00002c13 l       .debug_str	00000000 
00031b78 l       .debug_str	00000000 
00040a1c l       .debug_str	00000000 
000319e2 l       .debug_str	00000000 
0000235a l       .debug_str	00000000 
000319df l       .debug_str	00000000 
000319a6 l       .debug_str	00000000 
000476da l       .debug_str	00000000 
00002c46 l       .debug_str	00000000 
000319dc l       .debug_str	00000000 
0002c587 l       .debug_str	00000000 
0002c7db l       .debug_str	00000000 
0002c5b0 l       .debug_str	00000000 
000007da l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
0000c7cd l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
000319d3 l       .debug_str	00000000 
000087b7 l       .debug_str	00000000 
0002c1e9 l       .debug_str	00000000 
0002c5bd l       .debug_str	00000000 
0002c776 l       .debug_str	00000000 
0002c5ca l       .debug_str	00000000 
0003198b l       .debug_str	00000000 
0002c5d3 l       .debug_str	00000000 
00005c4b l       .debug_str	00000000 
0002c5e4 l       .debug_str	00000000 
0001713b l       .debug_str	00000000 
0002c5e9 l       .debug_str	00000000 
00031971 l       .debug_str	00000000 
0002c5f6 l       .debug_str	00000000 
0000d913 l       .debug_str	00000000 
0002c5ff l       .debug_str	00000000 
0000d909 l       .debug_str	00000000 
00000d99 l       .debug_str	00000000 
0003d666 l       .debug_str	00000000 
00031955 l       .debug_str	00000000 
00004301 l       .debug_str	00000000 
00069443 l       .debug_str	00000000 
000628d0 l       .debug_str	00000000 
00002cae l       .debug_str	00000000 
0003194e l       .debug_str	00000000 
00002cea l       .debug_str	00000000 
00031943 l       .debug_str	00000000 
0002c610 l       .debug_str	00000000 
00031938 l       .debug_str	00000000 
0003192b l       .debug_str	00000000 
0002c615 l       .debug_str	00000000 
00003e86 l       .debug_str	00000000 
0002e505 l       .debug_str	00000000 
0002d0f6 l       .debug_str	00000000 
0002d135 l       .debug_str	00000000 
0002e467 l       .debug_str	00000000 
00003d01 l       .debug_str	00000000 
0002e3d2 l       .debug_str	00000000 
00062da4 l       .debug_str	00000000 
0002d175 l       .debug_str	00000000 
0002e3c5 l       .debug_str	00000000 
0002e36f l       .debug_str	00000000 
00003c5d l       .debug_str	00000000 
0002e319 l       .debug_str	00000000 
0002d1b7 l       .debug_str	00000000 
0000349e l       .debug_str	00000000 
00003a70 l       .debug_str	00000000 
0002e2c3 l       .debug_str	00000000 
0002e26e l       .debug_str	00000000 
0002e219 l       .debug_str	00000000 
0002e20e l       .debug_str	00000000 
0002e1bc l       .debug_str	00000000 
0002d1dd l       .debug_str	00000000 
0002e16a l       .debug_str	00000000 
0002e15e l       .debug_str	00000000 
0002e10d l       .debug_str	00000000 
0002e101 l       .debug_str	00000000 
0002e0b0 l       .debug_str	00000000 
00003bfc l       .debug_str	00000000 
0002d206 l       .debug_str	00000000 
0002e05f l       .debug_str	00000000 
0002e056 l       .debug_str	00000000 
0002e04d l       .debug_str	00000000 
0002dfff l       .debug_str	00000000 
0002dff6 l       .debug_str	00000000 
0002dfed l       .debug_str	00000000 
0002d215 l       .debug_str	00000000 
0002df9f l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
00003b8c l       .debug_str	00000000 
00009348 l       .debug_str	00000000 
0002df51 l       .debug_str	00000000 
00003972 l       .debug_str	00000000 
0002df2a l       .debug_str	00000000 
0002d25b l       .debug_str	00000000 
0000393f l       .debug_str	00000000 
0002df04 l       .debug_str	00000000 
0002dec8 l       .debug_str	00000000 
0002d2a1 l       .debug_str	00000000 
000038be l       .debug_str	00000000 
0002de8e l       .debug_str	00000000 
0002de81 l       .debug_str	00000000 
0002d2ae l       .debug_str	00000000 
0002de67 l       .debug_str	00000000 
0002de30 l       .debug_str	00000000 
0002d2f4 l       .debug_str	00000000 
00003869 l       .debug_str	00000000 
0002ddfa l       .debug_str	00000000 
0002d301 l       .debug_str	00000000 
0002dde7 l       .debug_str	00000000 
0002ddb7 l       .debug_str	00000000 
0002dda4 l       .debug_str	00000000 
0002dd74 l       .debug_str	00000000 
0002dd67 l       .debug_str	00000000 
0002dd1f l       .debug_str	00000000 
000033f4 l       .debug_str	00000000 
0002dcd9 l       .debug_str	00000000 
00005b07 l       .debug_str	00000000 
0002dcce l       .debug_str	00000000 
0002dc88 l       .debug_str	00000000 
0002dc70 l       .debug_str	00000000 
0002dc1c l       .debug_str	00000000 
0002dc11 l       .debug_str	00000000 
0002db76 l       .debug_str	00000000 
0000a934 l       .debug_str	00000000 
0002db6b l       .debug_str	00000000 
0002d347 l       .debug_str	00000000 
0002dad0 l       .debug_str	00000000 
0002d2fd l       .debug_str	00000000 
0002d38d l       .debug_str	00000000 
0002da43 l       .debug_str	00000000 
0002d2aa l       .debug_str	00000000 
0002d9b6 l       .debug_str	00000000 
0002d9a9 l       .debug_str	00000000 
0002d917 l       .debug_str	00000000 
000069a7 l       .debug_str	00000000 
0002d887 l       .debug_str	00000000 
000068a0 l       .debug_str	00000000 
0002d7f7 l       .debug_str	00000000 
0002d7f0 l       .debug_str	00000000 
0002d76a l       .debug_str	00000000 
0002d764 l       .debug_str	00000000 
0002d6e0 l       .debug_str	00000000 
0002d65e l       .debug_str	00000000 
000318bc l       .debug_str	00000000 
0002d5dc l       .debug_str	00000000 
00003604 l       .debug_str	00000000 
0002d591 l       .debug_str	00000000 
000035ab l       .debug_str	00000000 
0000359b l       .debug_str	00000000 
0002d3d3 l       .debug_str	00000000 
0002d546 l       .debug_str	00000000 
0002d419 l       .debug_str	00000000 
0000a98b l       .debug_str	00000000 
0002d4fc l       .debug_str	00000000 
00003544 l       .debug_str	00000000 
0002d4b5 l       .debug_str	00000000 
000034f1 l       .debug_str	00000000 
0002d46e l       .debug_str	00000000 
00005b39 l       .debug_str	00000000 
0002c61b l       .debug_str	00000000 
00002da0 l       .debug_str	00000000 
00065d67 l       .debug_str	00000000 
0003ffd5 l       .debug_str	00000000 
0002c621 l       .debug_str	00000000 
00000c8a l       .debug_str	00000000 
0002c628 l       .debug_str	00000000 
00031b8a l       .debug_str	00000000 
0002c62d l       .debug_str	00000000 
0006433a l       .debug_str	00000000 
0002c633 l       .debug_str	00000000 
0000c621 l       .debug_str	00000000 
0006449e l       .debug_str	00000000 
0002c639 l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
0002c640 l       .debug_str	00000000 
00031920 l       .debug_str	00000000 
000318f7 l       .debug_str	00000000 
000318ca l       .debug_str	00000000 
000318ac l       .debug_str	00000000 
0000cb1c l       .debug_str	00000000 
00064dfe l       .debug_str	00000000 
0002c645 l       .debug_str	00000000 
00005afe l       .debug_str	00000000 
0002c64b l       .debug_str	00000000 
000318a7 l       .debug_str	00000000 
0002c652 l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
0002c658 l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
0002c65e l       .debug_str	00000000 
0000e903 l       .debug_str	00000000 
0002c665 l       .debug_str	00000000 
00031892 l       .debug_str	00000000 
000087a3 l       .debug_str	00000000 
00068311 l       .debug_str	00000000 
0004ed7b l       .debug_str	00000000 
00005aa0 l       .debug_str	00000000 
00005a96 l       .debug_str	00000000 
0002c66a l       .debug_str	00000000 
00005a89 l       .debug_str	00000000 
0002c670 l       .debug_str	00000000 
0002c675 l       .debug_str	00000000 
0002c67b l       .debug_str	00000000 
00062e21 l       .debug_str	00000000 
00063073 l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
0002c684 l       .debug_str	00000000 
00000364 l       .debug_str	00000000 
00005a82 l       .debug_str	00000000 
000628ff l       .debug_str	00000000 
00005a7c l       .debug_str	00000000 
00031884 l       .debug_str	00000000 
00031853 l       .debug_str	00000000 
0002c82a l       .debug_str	00000000 
00031841 l       .debug_str	00000000 
0002c830 l       .debug_str	00000000 
0003180c l       .debug_str	00000000 
0002c61c l       .debug_str	00000000 
000317f9 l       .debug_str	00000000 
000317c3 l       .debug_str	00000000 
000317b6 l       .debug_str	00000000 
00031786 l       .debug_str	00000000 
0002c622 l       .debug_str	00000000 
00031778 l       .debug_str	00000000 
00031747 l       .debug_str	00000000 
0003173c l       .debug_str	00000000 
0002c7c4 l       .debug_str	00000000 
00031706 l       .debug_str	00000000 
0002c68e l       .debug_str	00000000 
000316c4 l       .debug_str	00000000 
000316bd l       .debug_str	00000000 
00031682 l       .debug_str	00000000 
00031672 l       .debug_str	00000000 
000556c9 l       .debug_str	00000000 
0003163e l       .debug_str	00000000 
0002c693 l       .debug_str	00000000 
0003160e l       .debug_str	00000000 
0002c699 l       .debug_str	00000000 
00031600 l       .debug_str	00000000 
000315c9 l       .debug_str	00000000 
0003159b l       .debug_str	00000000 
0003156b l       .debug_str	00000000 
0002c73e l       .debug_str	00000000 
0003153d l       .debug_str	00000000 
00031509 l       .debug_str	00000000 
000314d7 l       .debug_str	00000000 
000314a7 l       .debug_str	00000000 
0002c6a0 l       .debug_str	00000000 
00031479 l       .debug_str	00000000 
0003146e l       .debug_str	00000000 
0002c6a6 l       .debug_str	00000000 
0003143b l       .debug_str	00000000 
00031430 l       .debug_str	00000000 
000313fd l       .debug_str	00000000 
0002c6ad l       .debug_str	00000000 
000313f0 l       .debug_str	00000000 
000313bb l       .debug_str	00000000 
0002c6b2 l       .debug_str	00000000 
0002c6b8 l       .debug_str	00000000 
000313ad l       .debug_str	00000000 
0002c6bd l       .debug_str	00000000 
00031377 l       .debug_str	00000000 
0002c6c3 l       .debug_str	00000000 
00031369 l       .debug_str	00000000 
00031333 l       .debug_str	00000000 
0002c6c9 l       .debug_str	00000000 
00031305 l       .debug_str	00000000 
000312d5 l       .debug_str	00000000 
0002c6d0 l       .debug_str	00000000 
000312a7 l       .debug_str	00000000 
0002c6d4 l       .debug_str	00000000 
00031275 l       .debug_str	00000000 
0002c6d9 l       .debug_str	00000000 
00031245 l       .debug_str	00000000 
0002c6de l       .debug_str	00000000 
00000032 l       .debug_str	00000000 
0002c6e4 l       .debug_str	00000000 
0003121a l       .debug_str	00000000 
00031214 l       .debug_str	00000000 
000311e5 l       .debug_str	00000000 
0002c6e9 l       .debug_str	00000000 
000311b7 l       .debug_str	00000000 
0003118b l       .debug_str	00000000 
0003115f l       .debug_str	00000000 
00031135 l       .debug_str	00000000 
00031107 l       .debug_str	00000000 
000310db l       .debug_str	00000000 
0002c6ef l       .debug_str	00000000 
000310ad l       .debug_str	00000000 
00031081 l       .debug_str	00000000 
00031055 l       .debug_str	00000000 
00031023 l       .debug_str	00000000 
00030ff3 l       .debug_str	00000000 
00030fc9 l       .debug_str	00000000 
0002c6f4 l       .debug_str	00000000 
0002c6fa l       .debug_str	00000000 
00030f97 l       .debug_str	00000000 
00030f67 l       .debug_str	00000000 
00030f37 l       .debug_str	00000000 
00030f09 l       .debug_str	00000000 
00030ed7 l       .debug_str	00000000 
00030ea7 l       .debug_str	00000000 
00030e6d l       .debug_str	00000000 
00030e37 l       .debug_str	00000000 
00030e0b l       .debug_str	00000000 
00030de1 l       .debug_str	00000000 
0002c700 l       .debug_str	00000000 
00030da7 l       .debug_str	00000000 
00030d71 l       .debug_str	00000000 
00030d66 l       .debug_str	00000000 
00030d38 l       .debug_str	00000000 
00030d0c l       .debug_str	00000000 
0002c707 l       .debug_str	00000000 
00030ce0 l       .debug_str	00000000 
00030cb2 l       .debug_str	00000000 
00030c86 l       .debug_str	00000000 
00030c56 l       .debug_str	00000000 
0002c70d l       .debug_str	00000000 
0002c714 l       .debug_str	00000000 
00030c28 l       .debug_str	00000000 
00030bf8 l       .debug_str	00000000 
00030bca l       .debug_str	00000000 
0002c71a l       .debug_str	00000000 
0002c721 l       .debug_str	00000000 
00030ba0 l       .debug_str	00000000 
00030b6a l       .debug_str	00000000 
00030b37 l       .debug_str	00000000 
0002c724 l       .debug_str	00000000 
00030b05 l       .debug_str	00000000 
0002c728 l       .debug_str	00000000 
00030ad1 l       .debug_str	00000000 
0002c72b l       .debug_str	00000000 
00030aca l       .debug_str	00000000 
0002c72f l       .debug_str	00000000 
00030a98 l       .debug_str	00000000 
0002c732 l       .debug_str	00000000 
00030a68 l       .debug_str	00000000 
0002c736 l       .debug_str	00000000 
00030a38 l       .debug_str	00000000 
00030a0a l       .debug_str	00000000 
00030a06 l       .debug_str	00000000 
000309dc l       .debug_str	00000000 
000309b2 l       .debug_str	00000000 
0002c73c l       .debug_str	00000000 
000309af l       .debug_str	00000000 
00030987 l       .debug_str	00000000 
0003095f l       .debug_str	00000000 
00030959 l       .debug_str	00000000 
0002c743 l       .debug_str	00000000 
0003092d l       .debug_str	00000000 
00030927 l       .debug_str	00000000 
000308fb l       .debug_str	00000000 
000308f7 l       .debug_str	00000000 
000308cd l       .debug_str	00000000 
000308a3 l       .debug_str	00000000 
0002c74a l       .debug_str	00000000 
0002c753 l       .debug_str	00000000 
0002c75b l       .debug_str	00000000 
00030876 l       .debug_str	00000000 
00061d77 l       .debug_str	00000000 
0002c765 l       .debug_str	00000000 
0002c76b l       .debug_str	00000000 
0002c772 l       .debug_str	00000000 
0002c778 l       .debug_str	00000000 
0002c77f l       .debug_str	00000000 
0002c784 l       .debug_str	00000000 
0002c78a l       .debug_str	00000000 
0002c6f5 l       .debug_str	00000000 
0002c78f l       .debug_str	00000000 
0002c795 l       .debug_str	00000000 
0002c79f l       .debug_str	00000000 
0002c7aa l       .debug_str	00000000 
00030871 l       .debug_str	00000000 
0002c7ae l       .debug_str	00000000 
0002c7b3 l       .debug_str	00000000 
0002c7bd l       .debug_str	00000000 
0002c7c8 l       .debug_str	00000000 
0002c7cf l       .debug_str	00000000 
00040967 l       .debug_str	00000000 
0002c7d7 l       .debug_str	00000000 
0002c7de l       .debug_str	00000000 
0002c7e5 l       .debug_str	00000000 
0002c848 l       .debug_str	00000000 
0002c7ed l       .debug_str	00000000 
0002c7f4 l       .debug_str	00000000 
0002c84e l       .debug_str	00000000 
0002c634 l       .debug_str	00000000 
0002c63a l       .debug_str	00000000 
0002c7fc l       .debug_str	00000000 
0002c801 l       .debug_str	00000000 
0002c0d5 l       .debug_str	00000000 
0002c855 l       .debug_str	00000000 
0002c659 l       .debug_str	00000000 
0002c65f l       .debug_str	00000000 
0002c807 l       .debug_str	00000000 
0002c80e l       .debug_str	00000000 
0002c816 l       .debug_str	00000000 
0002c81c l       .debug_str	00000000 
00030847 l       .debug_str	00000000 
0002c837 l       .debug_str	00000000 
00030842 l       .debug_str	00000000 
00030818 l       .debug_str	00000000 
00008881 l       .debug_str	00000000 
000307f0 l       .debug_str	00000000 
000307c8 l       .debug_str	00000000 
0002c823 l       .debug_str	00000000 
0003079c l       .debug_str	00000000 
0002c828 l       .debug_str	00000000 
00030795 l       .debug_str	00000000 
0002c82e l       .debug_str	00000000 
00030768 l       .debug_str	00000000 
0002c835 l       .debug_str	00000000 
00030761 l       .debug_str	00000000 
0002c83d l       .debug_str	00000000 
00030734 l       .debug_str	00000000 
0002c846 l       .debug_str	00000000 
0002c84c l       .debug_str	00000000 
0002c853 l       .debug_str	00000000 
0002c85a l       .debug_str	00000000 
0002c863 l       .debug_str	00000000 
0002c872 l       .debug_str	00000000 
0002c87c l       .debug_str	00000000 
00030730 l       .debug_str	00000000 
00030706 l       .debug_str	00000000 
000306dc l       .debug_str	00000000 
000306af l       .debug_str	00000000 
000306a9 l       .debug_str	00000000 
0003067e l       .debug_str	00000000 
00030678 l       .debug_str	00000000 
0002c909 l       .debug_str	00000000 
0003064d l       .debug_str	00000000 
00019462 l       .debug_str	00000000 
00030625 l       .debug_str	00000000 
000305fd l       .debug_str	00000000 
000305f6 l       .debug_str	00000000 
000305ca l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
0003059a l       .debug_str	00000000 
0003056c l       .debug_str	00000000 
0003053c l       .debug_str	00000000 
0003050e l       .debug_str	00000000 
00018d1a l       .debug_str	00000000 
00001a0a l       .debug_str	00000000 
0002c914 l       .debug_str	00000000 
000304e3 l       .debug_str	00000000 
000304d8 l       .debug_str	00000000 
000304a8 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
0003049d l       .debug_str	00000000 
0003046f l       .debug_str	00000000 
00030441 l       .debug_str	00000000 
00030415 l       .debug_str	00000000 
0002c91f l       .debug_str	00000000 
000303e7 l       .debug_str	00000000 
0002c926 l       .debug_str	00000000 
000303bb l       .debug_str	00000000 
0003038d l       .debug_str	00000000 
0002c9b5 l       .debug_str	00000000 
00030361 l       .debug_str	00000000 
00030335 l       .debug_str	00000000 
0002ca06 l       .debug_str	00000000 
0003030b l       .debug_str	00000000 
00030300 l       .debug_str	00000000 
0000354c l       .debug_str	00000000 
000302d6 l       .debug_str	00000000 
000034f9 l       .debug_str	00000000 
000302d2 l       .debug_str	00000000 
00044f37 l       .debug_str	00000000 
00006531 l       .debug_str	00000000 
000550ad l       .debug_str	00000000 
0002ca53 l       .debug_str	00000000 
000302c8 l       .debug_str	00000000 
00030298 l       .debug_str	00000000 
00030268 l       .debug_str	00000000 
00031d55 l       .debug_str	00000000 
0003023a l       .debug_str	00000000 
0002caa0 l       .debug_str	00000000 
0003020c l       .debug_str	00000000 
0002caf3 l       .debug_str	00000000 
000301e0 l       .debug_str	00000000 
000301b2 l       .debug_str	00000000 
00030186 l       .debug_str	00000000 
00030156 l       .debug_str	00000000 
00030128 l       .debug_str	00000000 
000300fc l       .debug_str	00000000 
000300ce l       .debug_str	00000000 
000300a2 l       .debug_str	00000000 
00030072 l       .debug_str	00000000 
0002cafb l       .debug_str	00000000 
00030044 l       .debug_str	00000000 
0003001a l       .debug_str	00000000 
00030014 l       .debug_str	00000000 
0002ffe7 l       .debug_str	00000000 
0002ffbb l       .debug_str	00000000 
0002ff8e l       .debug_str	00000000 
0002ff61 l       .debug_str	00000000 
0002ff5c l       .debug_str	00000000 
0002ff31 l       .debug_str	00000000 
0002ff07 l       .debug_str	00000000 
0000319c l       .debug_str	00000000 
0002ff01 l       .debug_str	00000000 
0002fed5 l       .debug_str	00000000 
0002fecf l       .debug_str	00000000 
0002cb4e l       .debug_str	00000000 
0002fea3 l       .debug_str	00000000 
000031f9 l       .debug_str	00000000 
0002fe75 l       .debug_str	00000000 
0002cba3 l       .debug_str	00000000 
0002fe49 l       .debug_str	00000000 
0002fe1d l       .debug_str	00000000 
0002fdf3 l       .debug_str	00000000 
0002fdbd l       .debug_str	00000000 
0002fd89 l       .debug_str	00000000 
0002fd5b l       .debug_str	00000000 
0002fd2f l       .debug_str	00000000 
0002fd01 l       .debug_str	00000000 
0002fcd5 l       .debug_str	00000000 
00009068 l       .debug_str	00000000 
0002fca5 l       .debug_str	00000000 
0002fc77 l       .debug_str	00000000 
0002fc49 l       .debug_str	00000000 
0002fc19 l       .debug_str	00000000 
0002fbeb l       .debug_str	00000000 
0002fbbf l       .debug_str	00000000 
0002fb8f l       .debug_str	00000000 
0002fb61 l       .debug_str	00000000 
0002fb33 l       .debug_str	00000000 
0002fb09 l       .debug_str	00000000 
0002cbe1 l       .debug_str	00000000 
0002fadd l       .debug_str	00000000 
0002fad6 l       .debug_str	00000000 
0002faa8 l       .debug_str	00000000 
00003241 l       .debug_str	00000000 
0002fa78 l       .debug_str	00000000 
0002cc1f l       .debug_str	00000000 
0002fa4a l       .debug_str	00000000 
0002fa1c l       .debug_str	00000000 
0002f9f2 l       .debug_str	00000000 
0002cc61 l       .debug_str	00000000 
0002f9c6 l       .debug_str	00000000 
0002c751 l       .debug_str	00000000 
0002f99d l       .debug_str	00000000 
0002f91a l       .debug_str	00000000 
0002f88e l       .debug_str	00000000 
0002f860 l       .debug_str	00000000 
0002f7e4 l       .debug_str	00000000 
0002f7dc l       .debug_str	00000000 
0002f779 l       .debug_str	00000000 
0002cc7e l       .debug_str	00000000 
0002f771 l       .debug_str	00000000 
0002f70e l       .debug_str	00000000 
0000dea5 l       .debug_str	00000000 
0002f6ac l       .debug_str	00000000 
0002f6a4 l       .debug_str	00000000 
0002f642 l       .debug_str	00000000 
0002f635 l       .debug_str	00000000 
0002f5cf l       .debug_str	00000000 
0002d460 l       .debug_str	00000000 
0002f55c l       .debug_str	00000000 
00009142 l       .debug_str	00000000 
0002f553 l       .debug_str	00000000 
0002f4f1 l       .debug_str	00000000 
0002f4e8 l       .debug_str	00000000 
0002ccc0 l       .debug_str	00000000 
0002f486 l       .debug_str	00000000 
0000329e l       .debug_str	00000000 
0002f46f l       .debug_str	00000000 
0002f3fe l       .debug_str	00000000 
0002f3e7 l       .debug_str	00000000 
0002cd02 l       .debug_str	00000000 
0002f376 l       .debug_str	00000000 
0002f363 l       .debug_str	00000000 
0002f2f6 l       .debug_str	00000000 
0002f2e3 l       .debug_str	00000000 
0002f276 l       .debug_str	00000000 
0002f218 l       .debug_str	00000000 
0002f1ca l       .debug_str	00000000 
0002f167 l       .debug_str	00000000 
00009c7c l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0002f104 l       .debug_str	00000000 
00005b50 l       .debug_str	00000000 
0002f0d1 l       .debug_str	00000000 
0002f06e l       .debug_str	00000000 
0002f015 l       .debug_str	00000000 
00002cc1 l       .debug_str	00000000 
00056d15 l       .debug_str	00000000 
00002cb6 l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
000032ef l       .debug_str	00000000 
0002cd34 l       .debug_str	00000000 
00009190 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00004901 l       .debug_str	00000000 
0002efbd l       .debug_str	00000000 
00004897 l       .debug_str	00000000 
0002ef6c l       .debug_str	00000000 
0002ef5e l       .debug_str	00000000 
0002ef0d l       .debug_str	00000000 
000011e4 l       .debug_str	00000000 
0000483a l       .debug_str	00000000 
0002eebc l       .debug_str	00000000 
000642ac l       .debug_str	00000000 
0002cd66 l       .debug_str	00000000 
0002cdc3 l       .debug_str	00000000 
0002ee4c l       .debug_str	00000000 
0002ee2d l       .debug_str	00000000 
0002edee l       .debug_str	00000000 
0000adc0 l       .debug_str	00000000 
0002edaf l       .debug_str	00000000 
0003b5ca l       .debug_str	00000000 
0002eda1 l       .debug_str	00000000 
0002ed64 l       .debug_str	00000000 
0002ed56 l       .debug_str	00000000 
0002ed19 l       .debug_str	00000000 
00009aa2 l       .debug_str	00000000 
0002ecdd l       .debug_str	00000000 
0002eccc l       .debug_str	00000000 
0002ec90 l       .debug_str	00000000 
0002ec83 l       .debug_str	00000000 
0002ec47 l       .debug_str	00000000 
0002ec36 l       .debug_str	00000000 
0002ce25 l       .debug_str	00000000 
0002ebfa l       .debug_str	00000000 
0002ebed l       .debug_str	00000000 
0002ebb1 l       .debug_str	00000000 
0002eb99 l       .debug_str	00000000 
0002eb51 l       .debug_str	00000000 
0003b978 l       .debug_str	00000000 
0002eb1c l       .debug_str	00000000 
0002ce87 l       .debug_str	00000000 
0002eaa7 l       .debug_str	00000000 
0000582c l       .debug_str	00000000 
0002ea8f l       .debug_str	00000000 
0002ea7c l       .debug_str	00000000 
0002cef4 l       .debug_str	00000000 
000093e9 l       .debug_str	00000000 
0002ea32 l       .debug_str	00000000 
0002ea1f l       .debug_str	00000000 
0002cf59 l       .debug_str	00000000 
0002e9d5 l       .debug_str	00000000 
0002e9c9 l       .debug_str	00000000 
00005a52 l       .debug_str	00000000 
00003e97 l       .debug_str	00000000 
0002e980 l       .debug_str	00000000 
0002cfbe l       .debug_str	00000000 
0002e974 l       .debug_str	00000000 
0002e92b l       .debug_str	00000000 
0002cfc2 l       .debug_str	00000000 
0002cff0 l       .debug_str	00000000 
0002e922 l       .debug_str	00000000 
0002e8dc l       .debug_str	00000000 
0002d01c l       .debug_str	00000000 
0002e8d3 l       .debug_str	00000000 
0002e88d l       .debug_str	00000000 
0002d05b l       .debug_str	00000000 
0002d062 l       .debug_str	00000000 
0002e87e l       .debug_str	00000000 
0002e838 l       .debug_str	00000000 
0002e829 l       .debug_str	00000000 
0002e7e3 l       .debug_str	00000000 
0000b644 l       .debug_str	00000000 
0002e7d3 l       .debug_str	00000000 
0002d0a2 l       .debug_str	00000000 
0002d0aa l       .debug_str	00000000 
0002e785 l       .debug_str	00000000 
0002e775 l       .debug_str	00000000 
0002e727 l       .debug_str	00000000 
0002de6d l       .debug_str	00000000 
0002e6f4 l       .debug_str	00000000 
0002e68d l       .debug_str	00000000 
0002d0ec l       .debug_str	00000000 
0002e660 l       .debug_str	00000000 
0002e623 l       .debug_str	00000000 
0002e5f6 l       .debug_str	00000000 
0002e5b7 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 1285f1oqzff0p0ie
0000a98b l       .debug_str	00000000 
000195fc l       .debug_str	00000000 
00031c6a l       .debug_str	00000000 
0000359b l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
00031cb3 l       .debug_str	00000000 
00031cbf l       .debug_str	00000000 
00003544 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00000d99 l       .debug_str	00000000 
00031d06 l       .debug_str	00000000 
00031d4d l       .debug_str	00000000 
00031d59 l       .debug_str	00000000 
00031da3 l       .debug_str	00000000 
00003604 l       .debug_str	00000000 
000035ab l       .debug_str	00000000 
00031dee l       .debug_str	00000000 
00031e39 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00005afe l       .debug_str	00000000 
00064dfe l       .debug_str	00000000 
0000cb1c l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00066c14 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00031c25 l       .debug_str	00000000 
000034f1 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00013ac8 l     F .text	0000004a _ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h60b3428d3914c85fE
00013b12 l     F .text	0000004e _ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_sub17h28d689dafd2552e9E
00000000 l    df *ABS*	00000000 20f8cza0fivu75xp
00000c22 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00002c01 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00069443 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00031e49 l       .debug_str	00000000 
0000df98 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 31topgcic07gm1ic
0000f050 l       .debug_str	00000000 
0000f06b l       .debug_str	00000000 
0000f09f l       .debug_str	00000000 
00031e99 l       .debug_str	00000000 
00031eeb l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00002c01 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00000058 l       .debug_str	00000000 
00001c2e l       .debug_str	00000000 
0001af01 l       .debug_str	00000000 
000196cf l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
0000f023 l       .debug_str	00000000 
0000f02c l       .debug_str	00000000 
0000f03a l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
0000f041 l       .debug_str	00000000 
0000ecc9 l       .debug_str	00000000 
0000ecd9 l       .debug_str	00000000 
0000ece2 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
0000ecf0 l       .debug_str	00000000 
0000ecfe l       .debug_str	00000000 
0000ed0a l       .debug_str	00000000 
0000ef18 l       .debug_str	00000000 
0000ed16 l       .debug_str	00000000 
0000ed25 l       .debug_str	00000000 
00000947 l       .debug_str	00000000 
0000ed2d l       .debug_str	00000000 
0000ed46 l       .debug_str	00000000 
0000c03d l       .debug_str	00000000 
0000ed57 l       .debug_str	00000000 
00000a7b l       .debug_str	00000000 
0000ed5f l       .debug_str	00000000 
0000ed92 l       .debug_str	00000000 
0000ed79 l       .debug_str	00000000 
0000ed9e l       .debug_str	00000000 
0000bfec l       .debug_str	00000000 
0000edd0 l       .debug_str	00000000 
0000edb7 l       .debug_str	00000000 
0000eddb l       .debug_str	00000000 
0000ee0a l       .debug_str	00000000 
0000edfd l       .debug_str	00000000 
0000ede4 l       .debug_str	00000000 
0000f048 l       .debug_str	00000000 
0000f086 l       .debug_str	00000000 
0000f0a7 l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
0000f05b l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 3s9alryjxumojaj2
00031f10 l       .debug_str	00000000 
0001d309 l       .debug_str	00000000 
000322c8 l       .debug_str	00000000 
00032333 l       .debug_str	00000000 
00032526 l       .debug_str	00000000 
00032598 l       .debug_str	00000000 
00002268 l       .debug_str	00000000 
0003278f l       .debug_str	00000000 
00032801 l       .debug_str	00000000 
0003284b l       .debug_str	00000000 
00032895 l       .debug_str	00000000 
00032a94 l       .debug_str	00000000 
00032ad0 l       .debug_str	00000000 
00056d15 l       .debug_str	00000000 
0000e353 l       .debug_str	00000000 
00032b15 l       .debug_str	00000000 
00032b52 l       .debug_str	00000000 
00032b98 l       .debug_str	00000000 
00032bd5 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
000201c6 l       .debug_str	00000000 
00020229 l       .debug_str	00000000 
00032dc8 l       .debug_str	00000000 
00032e1d l       .debug_str	00000000 
00005a7c l       .debug_str	00000000 
00001a0d l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00010916 l       .debug_str	00000000 
000114cb l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00031b8a l       .debug_str	00000000 
00068388 l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
00002474 l       .debug_str	00000000 
0000247a l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00002481 l       .debug_str	00000000 
0001091f l       .debug_str	00000000 
0006449e l       .debug_str	00000000 
0001092d l       .debug_str	00000000 
00010935 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
000011e4 l       .debug_str	00000000 
0001093d l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
0000f05b l       .debug_str	00000000 
00010959 l       .debug_str	00000000 
0001d42f l       .debug_str	00000000 
0001d49d l       .debug_str	00000000 
0001d534 l       .debug_str	00000000 
0001d5f4 l       .debug_str	00000000 
0001d6dd l       .debug_str	00000000 
0001d7ef l       .debug_str	00000000 
0001d92a l       .debug_str	00000000 
0001da8e l       .debug_str	00000000 
0001dc1b l       .debug_str	00000000 
0001ddd1 l       .debug_str	00000000 
00010b60 l       .debug_str	00000000 
00010b68 l       .debug_str	00000000 
00010b6d l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
00015d3f l       .debug_str	00000000 
00010b73 l       .debug_str	00000000 
00010b76 l       .debug_str	00000000 
00010b9f l       .debug_str	00000000 
00062e93 l       .debug_str	00000000 
00010bd5 l       .debug_str	00000000 
00010c02 l       .debug_str	00000000 
00010c05 l       .debug_str	00000000 
00010c55 l       .debug_str	00000000 
00010cb2 l       .debug_str	00000000 
00019a22 l       .debug_str	00000000 
00019a99 l       .debug_str	00000000 
00019b1d l       .debug_str	00000000 
00019b98 l       .debug_str	00000000 
00019c36 l       .debug_str	00000000 
00019ce1 l       .debug_str	00000000 
0001dfb0 l       .debug_str	00000000 
0001e075 l       .debug_str	00000000 
0001e147 l       .debug_str	00000000 
0001e210 l       .debug_str	00000000 
0001e2fc l       .debug_str	00000000 
0001e3f5 l       .debug_str	00000000 
0001e4e5 l       .debug_str	00000000 
0001e5f8 l       .debug_str	00000000 
0001e718 l       .debug_str	00000000 
0001e82f l       .debug_str	00000000 
0001e969 l       .debug_str	00000000 
0001eab0 l       .debug_str	00000000 
0001ebee l       .debug_str	00000000 
0001ed4f l       .debug_str	00000000 
0001eebd l       .debug_str	00000000 
0001f022 l       .debug_str	00000000 
0001f1aa l       .debug_str	00000000 
0001f33f l       .debug_str	00000000 
0001f4cb l       .debug_str	00000000 
0001f67a l       .debug_str	00000000 
0001f836 l       .debug_str	00000000 
0001f9e9 l       .debug_str	00000000 
0001fbbf l       .debug_str	00000000 
0001fda2 l       .debug_str	00000000 
00038718 l       .debug_str	00000000 
0003828c l       .debug_str	00000000 
00037bb0 l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00062da4 l       .debug_str	00000000 
0003a873 l       .debug_str	00000000 
000002ea l       .debug_str	00000000 
0002023d l       .debug_str	00000000 
000392d5 l       .debug_str	00000000 
000376b1 l       .debug_str	00000000 
000374dc l       .debug_str	00000000 
0003a7ff l       .debug_str	00000000 
000201da l       .debug_str	00000000 
00031f78 l       .debug_str	00000000 
00031fbd l       .debug_str	00000000 
00032025 l       .debug_str	00000000 
00032217 l       .debug_str	00000000 
00032282 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 nw0b79u01whzz0a
00033283 l       .debug_str	00000000 
0001eab0 l       .debug_str	00000000 
0001ebee l       .debug_str	00000000 
0001ed4f l       .debug_str	00000000 
0001eebd l       .debug_str	00000000 
0001f022 l       .debug_str	00000000 
0001f1aa l       .debug_str	00000000 
0001f33f l       .debug_str	00000000 
0003320b l       .debug_str	00000000 
00033439 l       .debug_str	00000000 
000334b1 l       .debug_str	00000000 
0001f4cb l       .debug_str	00000000 
0001f67a l       .debug_str	00000000 
0001f836 l       .debug_str	00000000 
00033508 l       .debug_str	00000000 
00033580 l       .debug_str	00000000 
0003375d l       .debug_str	00000000 
000337d5 l       .debug_str	00000000 
000338c8 l       .debug_str	00000000 
00033940 l       .debug_str	00000000 
00033acf l       .debug_str	00000000 
00033b47 l       .debug_str	00000000 
00033c61 l       .debug_str	00000000 
00033cd9 l       .debug_str	00000000 
00033e1a l       .debug_str	00000000 
00033e92 l       .debug_str	00000000 
00033f10 l       .debug_str	00000000 
00033f88 l       .debug_str	00000000 
000340f0 l       .debug_str	00000000 
00034168 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00010b60 l       .debug_str	00000000 
00010b68 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00010b6d l       .debug_str	00000000 
000011e4 l       .debug_str	00000000 
00015d3f l       .debug_str	00000000 
00010b73 l       .debug_str	00000000 
00062e93 l       .debug_str	00000000 
0003301f l       .debug_str	00000000 
00033097 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
00010b76 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00010b9f l       .debug_str	00000000 
00010bd5 l       .debug_str	00000000 
00010c02 l       .debug_str	00000000 
00010c05 l       .debug_str	00000000 
00010c55 l       .debug_str	00000000 
00010cb2 l       .debug_str	00000000 
00019a22 l       .debug_str	00000000 
00019a99 l       .debug_str	00000000 
00019b1d l       .debug_str	00000000 
00019b98 l       .debug_str	00000000 
00019c36 l       .debug_str	00000000 
00019ce1 l       .debug_str	00000000 
000330c7 l       .debug_str	00000000 
0003313f l       .debug_str	00000000 
0001dfb0 l       .debug_str	00000000 
0001e075 l       .debug_str	00000000 
0001e147 l       .debug_str	00000000 
0001e210 l       .debug_str	00000000 
0001e2fc l       .debug_str	00000000 
0001e3f5 l       .debug_str	00000000 
0001e4e5 l       .debug_str	00000000 
0001e5f8 l       .debug_str	00000000 
0001e718 l       .debug_str	00000000 
0001e82f l       .debug_str	00000000 
0001e969 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 num_traits.82flndxb-cgu.0
000357c5 l       .debug_str	00000000 
0003497c l       .debug_str	00000000 
00003bf3 l       .debug_str	00000000 
000349db l       .debug_str	00000000 
00003b8c l       .debug_str	00000000 
00034a2d l       .debug_str	00000000 
00034a82 l       .debug_str	00000000 
00034ad8 l       .debug_str	00000000 
00034b06 l       .debug_str	00000000 
00034b12 l       .debug_str	00000000 
00034b44 l       .debug_str	00000000 
00034b6b l       .debug_str	00000000 
00034b9d l       .debug_str	00000000 
00034bad l       .debug_str	00000000 
00034be2 l       .debug_str	00000000 
00034bf5 l       .debug_str	00000000 
0002365f l       .debug_str	00000000 
00034c2b l       .debug_str	00000000 
00034c75 l       .debug_str	00000000 
00034c86 l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
00034cc2 l       .debug_str	00000000 
0006217d l       .debug_str	00000000 
00067983 l       .debug_str	00000000 
00034d00 l       .debug_str	00000000 
00034d3e l       .debug_str	00000000 
00002dbf l       .debug_str	00000000 
00034d4b l       .debug_str	00000000 
00056d15 l       .debug_str	00000000 
00034d59 l       .debug_str	00000000 
00034d81 l       .debug_str	00000000 
0000b8a1 l       .debug_str	00000000 
00034dc0 l       .debug_str	00000000 
00034dee l       .debug_str	00000000 
00034df5 l       .debug_str	00000000 
00034e98 l       .debug_str	00000000 
00034ea6 l       .debug_str	00000000 
00048b8f l       .debug_str	00000000 
00034f3e l       .debug_str	00000000 
00034fd8 l       .debug_str	00000000 
00005138 l       .debug_str	00000000 
00035090 l       .debug_str	00000000 
0003b5ca l       .debug_str	00000000 
00001f6d l       .debug_str	00000000 
000021f7 l       .debug_str	00000000 
0000ac92 l       .debug_str	00000000 
000350f3 l       .debug_str	00000000 
00035165 l       .debug_str	00000000 
0003518f l       .debug_str	00000000 
000351cd l       .debug_str	00000000 
000351e0 l       .debug_str	00000000 
0003522b l       .debug_str	00000000 
00003e97 l       .debug_str	00000000 
00035234 l       .debug_str	00000000 
00035276 l       .debug_str	00000000 
00036544 l       .debug_str	00000000 
000352b0 l       .debug_str	00000000 
000352f5 l       .debug_str	00000000 
00035311 l       .debug_str	00000000 
000254f7 l       .debug_str	00000000 
00035354 l       .debug_str	00000000 
000353b9 l       .debug_str	00000000 
0003541e l       .debug_str	00000000 
00035459 l       .debug_str	00000000 
00035466 l       .debug_str	00000000 
0000aab4 l       .debug_str	00000000 
00035499 l       .debug_str	00000000 
0001cb83 l       .debug_str	00000000 
000354df l       .debug_str	00000000 
00009a15 l       .debug_str	00000000 
00035525 l       .debug_str	00000000 
0001ce1c l       .debug_str	00000000 
0003556c l       .debug_str	00000000 
000355b5 l       .debug_str	00000000 
00004445 l       .debug_str	00000000 
0001c5ae l       .debug_str	00000000 
00005b07 l       .debug_str	00000000 
00001134 l       .debug_str	00000000 
000044cb l       .debug_str	00000000 
0003562e l       .debug_str	00000000 
00035673 l       .debug_str	00000000 
000011e4 l       .debug_str	00000000 
00035692 l       .debug_str	00000000 
000356cb l       .debug_str	00000000 
0000457f l       .debug_str	00000000 
000356e3 l       .debug_str	00000000 
0003571e l       .debug_str	00000000 
00035741 l       .debug_str	00000000 
00035766 l       .debug_str	00000000 
000357a1 l       .debug_str	00000000 
000357eb l       .debug_str	00000000 
00035828 l       .debug_str	00000000 
0003583f l       .debug_str	00000000 
0003587c l       .debug_str	00000000 
00035893 l       .debug_str	00000000 
0000adc0 l       .debug_str	00000000 
000358d2 l       .debug_str	00000000 
000047cb l       .debug_str	00000000 
00035923 l       .debug_str	00000000 
000068a0 l       .debug_str	00000000 
0003597e l       .debug_str	00000000 
000359e1 l       .debug_str	00000000 
00035a23 l       .debug_str	00000000 
00004b4b l       .debug_str	00000000 
00035a87 l       .debug_str	00000000 
00009d7f l       .debug_str	00000000 
00035af4 l       .debug_str	00000000 
0001ce87 l       .debug_str	00000000 
00035b56 l       .debug_str	00000000 
00035b64 l       .debug_str	00000000 
00035bcf l       .debug_str	00000000 
00035be9 l       .debug_str	00000000 
00035bff l       .debug_str	00000000 
00035c6a l       .debug_str	00000000 
00035c7a l       .debug_str	00000000 
00035ce6 l       .debug_str	00000000 
00035cf7 l       .debug_str	00000000 
00035d63 l       .debug_str	00000000 
00035d75 l       .debug_str	00000000 
00035ddc l       .debug_str	00000000 
00035e14 l       .debug_str	00000000 
00035e7e l       .debug_str	00000000 
00035f06 l       .debug_str	00000000 
00004eab l       .debug_str	00000000 
00035f7a l       .debug_str	00000000 
00024402 l       .debug_str	00000000 
00035ffc l       .debug_str	00000000 
0003603a l       .debug_str	00000000 
00011e7c l       .debug_str	00000000 
0003b83c l       .debug_str	00000000 
0003d0fb l       .debug_str	00000000 
0003604d l       .debug_str	00000000 
0003605c l       .debug_str	00000000 
0003609a l       .debug_str	00000000 
000360ad l       .debug_str	00000000 
000360d9 l       .debug_str	00000000 
000360e2 l       .debug_str	00000000 
0003610e l       .debug_str	00000000 
00036117 l       .debug_str	00000000 
00036177 l       .debug_str	00000000 
0003b273 l       .debug_str	00000000 
000361c8 l       .debug_str	00000000 
00036219 l       .debug_str	00000000 
00036276 l       .debug_str	00000000 
000362d4 l       .debug_str	00000000 
0003659e l       .debug_str	00000000 
00036325 l       .debug_str	00000000 
0003634e l       .debug_str	00000000 
000363b1 l       .debug_str	00000000 
000363c2 l       .debug_str	00000000 
000363cf l       .debug_str	00000000 
000363e4 l       .debug_str	00000000 
00036435 l       .debug_str	00000000 
0003645e l       .debug_str	00000000 
000364c1 l       .debug_str	00000000 
0002c770 l       .debug_str	00000000 
0000bfe3 l       .debug_str	00000000 
00001a1f l       .debug_str	00000000 
00069452 l       .debug_str	00000000 
000010b6 l       .debug_str	00000000 
00000c99 l       .debug_str	00000000 
00062a03 l       .debug_str	00000000 
00000c45 l       .debug_str	00000000 
00000da7 l       .debug_str	00000000 
00000db2 l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00000d37 l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
00000d3d l       .debug_str	00000000 
00000d50 l       .debug_str	00000000 
00000d59 l       .debug_str	00000000 
00000d65 l       .debug_str	00000000 
00000d8a l       .debug_str	00000000 
00000d7e l       .debug_str	00000000 
00000d8f l       .debug_str	00000000 
00000e60 l       .debug_str	00000000 
00000ed0 l       .debug_str	00000000 
00000ebe l       .debug_str	00000000 
00000dc8 l       .debug_str	00000000 
00000def l       .debug_str	00000000 
00000e06 l       .debug_str	00000000 
00000e2a l       .debug_str	00000000 
00062a8c l       .debug_str	00000000 
00000edb l       .debug_str	00000000 
00000e56 l       .debug_str	00000000 
00000e46 l       .debug_str	00000000 
00005a7c l       .debug_str	00000000 
0001d308 l       .debug_str	00000000 
00069443 l       .debug_str	00000000 
00005afe l       .debug_str	00000000 
00064dfe l       .debug_str	00000000 
0000cb1c l       .debug_str	00000000 
000364de l       .debug_str	00000000 
0006449e l       .debug_str	00000000 
00040900 l       .debug_str	00000000 
0000a2e9 l       .debug_str	00000000 
00006490 l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
00063092 l       .debug_str	00000000 
00068297 l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
00061e51 l       .debug_str	00000000 
0000c621 l       .debug_str	00000000 
000364ff l       .debug_str	00000000 
0000c7cd l       .debug_str	00000000 
0000e903 l       .debug_str	00000000 
00036503 l       .debug_str	00000000 
00031b8a l       .debug_str	00000000 
0003444a l       .debug_str	00000000 
00036515 l       .debug_str	00000000 
0002c5e4 l       .debug_str	00000000 
0003651a l       .debug_str	00000000 
00002dad l       .debug_str	00000000 
00000c8a l       .debug_str	00000000 
00002af9 l       .debug_str	00000000 
0003653f l       .debug_str	00000000 
0002441e l       .debug_str	00000000 
0002d0f1 l       .debug_str	00000000 
00044f37 l       .debug_str	00000000 
0003657b l       .debug_str	00000000 
00036584 l       .debug_str	00000000 
00062eed l       .debug_str	00000000 
000556c9 l       .debug_str	00000000 
0003658d l       .debug_str	00000000 
00036591 l       .debug_str	00000000 
0003e98d l       .debug_str	00000000 
00005c56 l       .debug_str	00000000 
00005c6a l       .debug_str	00000000 
00005c77 l       .debug_str	00000000 
00005c93 l       .debug_str	00000000 
00005c9e l       .debug_str	00000000 
00005c4b l       .debug_str	00000000 
00005c73 l       .debug_str	00000000 
00005c7e l       .debug_str	00000000 
00000364 l       .debug_str	00000000 
000365ae l       .debug_str	00000000 
000365bf l       .debug_str	00000000 
000365ba l       .debug_str	00000000 
00062c6e l       .debug_str	00000000 
000365c3 l       .debug_str	00000000 
000021fb l       .debug_str	00000000 
000007da l       .debug_str	00000000 
00043257 l       .debug_str	00000000 
000406ce l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0003420d l       .debug_str	00000000 
00034267 l       .debug_str	00000000 
00000c2a l       .debug_str	00000000 
00015da2 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
0003b566 l       .debug_str	00000000 
000342b6 l       .debug_str	00000000 
000364f0 l       .debug_str	00000000 
000364e3 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00057262 l       .debug_str	00000000 
000410bb l       .debug_str	00000000 
00003435 l       .debug_str	00000000 
00000b51 l       .debug_str	00000000 
00000b56 l       .debug_str	00000000 
00000b5c l       .debug_str	00000000 
00000b63 l       .debug_str	00000000 
00000b6b l       .debug_str	00000000 
00066c14 l       .debug_str	00000000 
000342be l       .debug_str	00000000 
000342cb l       .debug_str	00000000 
000342d4 l       .debug_str	00000000 
00061d6b l       .debug_str	00000000 
0003b8ad l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00000d4c l       .debug_str	00000000 
0000236b l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
000342de l       .debug_str	00000000 
00008b95 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00002371 l       .debug_str	00000000 
000669f8 l       .debug_str	00000000 
000023f2 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00002c01 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
0003d0d5 l       .debug_str	00000000 
00002c09 l       .debug_str	00000000 
00000c78 l       .debug_str	00000000 
0001d0d6 l       .debug_str	00000000 
0001d117 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
0001d309 l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
00002c41 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00020225 l       .debug_str	00000000 
00002c1c l       .debug_str	00000000 
00002d97 l       .debug_str	00000000 
0002442e l       .debug_str	00000000 
0000d034 l       .debug_str	00000000 
000628d0 l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
00002cae l       .debug_str	00000000 
00064e8c l       .debug_str	00000000 
00002c13 l       .debug_str	00000000 
00040a1c l       .debug_str	00000000 
0000235a l       .debug_str	00000000 
00062e21 l       .debug_str	00000000 
0000b644 l       .debug_str	00000000 
0003655f l       .debug_str	00000000 
00002c46 l       .debug_str	00000000 
00034308 l       .debug_str	00000000 
00034346 l       .debug_str	00000000 
00034355 l       .debug_str	00000000 
0006523d l       .debug_str	00000000 
0004ed7b l       .debug_str	00000000 
00068311 l       .debug_str	00000000 
0003436c l       .debug_str	00000000 
00002c75 l       .debug_str	00000000 
00034395 l       .debug_str	00000000 
000343c7 l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
000343d9 l       .debug_str	00000000 
000195fc l       .debug_str	00000000 
0000ba07 l       .debug_str	00000000 
00015890 l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
000343e6 l       .debug_str	00000000 
00036529 l       .debug_str	00000000 
00000d99 l       .debug_str	00000000 
00002cea l       .debug_str	00000000 
000021fd l       .debug_str	00000000 
000343f4 l       .debug_str	00000000 
00002d72 l       .debug_str	00000000 
00002d85 l       .debug_str	00000000 
0006788d l       .debug_str	00000000 
00002da0 l       .debug_str	00000000 
0005315b l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
00061f06 l       .debug_str	00000000 
0002c7aa l       .debug_str	00000000 
00034436 l       .debug_str	00000000 
00034441 l       .debug_str	00000000 
00034450 l       .debug_str	00000000 
00034498 l       .debug_str	00000000 
000344b8 l       .debug_str	00000000 
0000354c l       .debug_str	00000000 
00031927 l       .debug_str	00000000 
00034503 l       .debug_str	00000000 
0001bfdf l       .debug_str	00000000 
0003454e l       .debug_str	00000000 
00009142 l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
00062da4 l       .debug_str	00000000 
00062e93 l       .debug_str	00000000 
00034590 l       .debug_str	00000000 
0001d2fa l       .debug_str	00000000 
00034601 l       .debug_str	00000000 
00003466 l       .debug_str	00000000 
0003462f l       .debug_str	00000000 
00003544 l       .debug_str	00000000 
00034676 l       .debug_str	00000000 
0000a934 l       .debug_str	00000000 
000346be l       .debug_str	00000000 
0000a98b l       .debug_str	00000000 
00034708 l       .debug_str	00000000 
00003604 l       .debug_str	00000000 
000035ab l       .debug_str	00000000 
00034753 l       .debug_str	00000000 
00034788 l       .debug_str	00000000 
000347b8 l       .debug_str	00000000 
0000aaae l       .debug_str	00000000 
0000aac7 l       .debug_str	00000000 
000347ef l       .debug_str	00000000 
00003bfc l       .debug_str	00000000 
00034840 l       .debug_str	00000000 
00003a70 l       .debug_str	00000000 
00034892 l       .debug_str	00000000 
00003ac7 l       .debug_str	00000000 
000348dd l       .debug_str	00000000 
00003b1c l       .debug_str	00000000 
00034920 l       .debug_str	00000000 
00003b83 l       .debug_str	00000000 
00013ef0 l     F .text	0000003a _ZN4core3str11unwrap_or_017h8ed666a77c5c89c4E
0001405a l     F .text	00000020 _ZN4core3str15utf8_first_byte17hbfb743244c0d0905E
0001407a l     F .text	0000001c _ZN4core3str18utf8_acc_cont_byte17hd06c82ebbca406d8E
00014096 l     F .text	00000014 _ZN4core4char7convert18from_u32_unchecked17haed10aaf6679bedaE
00000000 l    df *ABS*	00000000 1mc0d15rg4ic1y4a
00036818 l       .debug_str	00000000 
00023796 l       .debug_str	00000000 
000237bf l       .debug_str	00000000 
0003664c l       .debug_str	00000000 
0003668a l       .debug_str	00000000 
000366a3 l       .debug_str	00000000 
000366e1 l       .debug_str	00000000 
0003670a l       .debug_str	00000000 
0003674c l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
00036769 l       .debug_str	00000000 
000367ab l       .debug_str	00000000 
000367d8 l       .debug_str	00000000 
0003680a l       .debug_str	00000000 
0003684a l       .debug_str	00000000 
00000364 l       .debug_str	00000000 
00021ed1 l       .debug_str	00000000 
00063073 l       .debug_str	00000000 
000238a3 l       .debug_str	00000000 
00062e21 l       .debug_str	00000000 
000215a2 l       .debug_str	00000000 
000215da l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00005a96 l       .debug_str	00000000 
00005aa0 l       .debug_str	00000000 
0004ed7b l       .debug_str	00000000 
00068311 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00002371 l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
000365cc l       .debug_str	00000000 
000365f6 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
000108f0 l       .debug_str	00000000 
00066cd8 l       .debug_str	00000000 
0000c615 l       .debug_str	00000000 
0001bfdf l       .debug_str	00000000 
0000c61b l       .debug_str	00000000 
000215b7 l       .debug_str	00000000 
00036604 l       .debug_str	00000000 
0003662e l       .debug_str	00000000 
000237dc l       .debug_str	00000000 
00023805 l       .debug_str	00000000 
0001e3a0 l     O .text	00000039 str.0
00000000 l    df *ABS*	00000000 4tnrccp7rfowmhbg
000136f0 l       .debug_str	00000000 
000369fd l       .debug_str	00000000 
00036ac9 l       .debug_str	00000000 
00036b41 l       .debug_str	00000000 
00013505 l       .debug_str	00000000 
000135a3 l       .debug_str	00000000 
0001364e l       .debug_str	00000000 
00036b98 l       .debug_str	00000000 
00036c10 l       .debug_str	00000000 
000137b5 l       .debug_str	00000000 
00013887 l       .debug_str	00000000 
00013950 l       .debug_str	00000000 
00013a3c l       .debug_str	00000000 
00013b35 l       .debug_str	00000000 
00036cdc l       .debug_str	00000000 
00036d54 l       .debug_str	00000000 
00036e6e l       .debug_str	00000000 
00036ee6 l       .debug_str	00000000 
00036f8b l       .debug_str	00000000 
00037003 l       .debug_str	00000000 
000370f6 l       .debug_str	00000000 
0003716e l       .debug_str	00000000 
000371ec l       .debug_str	00000000 
00037264 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00010b60 l       .debug_str	00000000 
00010b68 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00010b6d l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
00015d3f l       .debug_str	00000000 
00010b73 l       .debug_str	00000000 
00010b76 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
00010b9f l       .debug_str	00000000 
000011e4 l       .debug_str	00000000 
00062e93 l       .debug_str	00000000 
00010bd5 l       .debug_str	00000000 
0001328e l       .debug_str	00000000 
000132de l       .debug_str	00000000 
0001333b l       .debug_str	00000000 
00010c02 l       .debug_str	00000000 
0001338f l       .debug_str	00000000 
00013406 l       .debug_str	00000000 
0001348a l       .debug_str	00000000 
00036868 l       .debug_str	00000000 
000368e0 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00010c05 l       .debug_str	00000000 
00010c55 l       .debug_str	00000000 
00010cb2 l       .debug_str	00000000 
00010d06 l       .debug_str	00000000 
00010d7d l       .debug_str	00000000 
00010e01 l       .debug_str	00000000 
00010e7c l       .debug_str	00000000 
00010f1a l       .debug_str	00000000 
00010fc5 l       .debug_str	00000000 
00036985 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 3g3666yqw9ekwmf8
00015e02 l       .debug_str	00000000 
000372e2 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00037342 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00010b60 l       .debug_str	00000000 
00015d3f l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 3kpmputoffgyz3b5
00066ba1 l       .debug_str	00000000 
00032ad0 l       .debug_str	00000000 
00056d15 l       .debug_str	00000000 
0000e353 l       .debug_str	00000000 
00039d26 l       .debug_str	00000000 
00032b52 l       .debug_str	00000000 
00039da5 l       .debug_str	00000000 
00032bd5 l       .debug_str	00000000 
00039e24 l       .debug_str	00000000 
00039ea6 l       .debug_str	00000000 
0001d309 l       .debug_str	00000000 
0003a09c l       .debug_str	00000000 
0003a11e l       .debug_str	00000000 
0003a167 l       .debug_str	00000000 
0003a1e9 l       .debug_str	00000000 
0003a232 l       .debug_str	00000000 
0003a2b4 l       .debug_str	00000000 
0003a4aa l       .debug_str	00000000 
0003a52c l       .debug_str	00000000 
0003a722 l       .debug_str	00000000 
0003a7a4 l       .debug_str	00000000 
0003a7ed l       .debug_str	00000000 
0003a861 l       .debug_str	00000000 
00001a0d l       .debug_str	00000000 
00005a7c l       .debug_str	00000000 
00002c41 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
0003d0d5 l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
00020225 l       .debug_str	00000000 
00002c1c l       .debug_str	00000000 
00002d97 l       .debug_str	00000000 
000021fb l       .debug_str	00000000 
00069443 l       .debug_str	00000000 
0002b853 l       .debug_str	00000000 
0003aa82 l       .debug_str	00000000 
0003ac9f l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
00002474 l       .debug_str	00000000 
0000247a l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00002481 l       .debug_str	00000000 
0001091f l       .debug_str	00000000 
0006449e l       .debug_str	00000000 
0001092d l       .debug_str	00000000 
00010935 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
000011e4 l       .debug_str	00000000 
0001093d l       .debug_str	00000000 
00010b60 l       .debug_str	00000000 
00010b68 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00010b6d l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
00015d3f l       .debug_str	00000000 
00010b73 l       .debug_str	00000000 
00010b76 l       .debug_str	00000000 
00010b9f l       .debug_str	00000000 
00062e93 l       .debug_str	00000000 
00010bd5 l       .debug_str	00000000 
000392d5 l       .debug_str	00000000 
000376b1 l       .debug_str	00000000 
000374dc l       .debug_str	00000000 
000373a2 l       .debug_str	00000000 
000373f3 l       .debug_str	00000000 
0003745c l       .debug_str	00000000 
00001367 l       .debug_str	00000000 
000374be l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00037546 l       .debug_str	00000000 
000375c8 l       .debug_str	00000000 
00037630 l       .debug_str	00000000 
00037692 l       .debug_str	00000000 
00010916 l       .debug_str	00000000 
00031b8a l       .debug_str	00000000 
00068388 l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00062da4 l       .debug_str	00000000 
0003a7ff l       .debug_str	00000000 
0000f05b l       .debug_str	00000000 
00010959 l       .debug_str	00000000 
0001d42f l       .debug_str	00000000 
0001d49d l       .debug_str	00000000 
0001d534 l       .debug_str	00000000 
0001d5f4 l       .debug_str	00000000 
0001d6dd l       .debug_str	00000000 
0001d7ef l       .debug_str	00000000 
0001d92a l       .debug_str	00000000 
0001da8e l       .debug_str	00000000 
0001dc1b l       .debug_str	00000000 
0001ddd1 l       .debug_str	00000000 
00010c02 l       .debug_str	00000000 
00010c05 l       .debug_str	00000000 
00010c55 l       .debug_str	00000000 
00010cb2 l       .debug_str	00000000 
00019a22 l       .debug_str	00000000 
00019a99 l       .debug_str	00000000 
00019b1d l       .debug_str	00000000 
00019b98 l       .debug_str	00000000 
00019c36 l       .debug_str	00000000 
00019ce1 l       .debug_str	00000000 
0001dfb0 l       .debug_str	00000000 
0001e075 l       .debug_str	00000000 
0001e147 l       .debug_str	00000000 
0001e210 l       .debug_str	00000000 
0001e2fc l       .debug_str	00000000 
0001e3f5 l       .debug_str	00000000 
0001e4e5 l       .debug_str	00000000 
0001e5f8 l       .debug_str	00000000 
0001e718 l       .debug_str	00000000 
0001e82f l       .debug_str	00000000 
0001e969 l       .debug_str	00000000 
0001eab0 l       .debug_str	00000000 
0001ebee l       .debug_str	00000000 
0001ed4f l       .debug_str	00000000 
0001eebd l       .debug_str	00000000 
0001f022 l       .debug_str	00000000 
0001f1aa l       .debug_str	00000000 
0001f33f l       .debug_str	00000000 
0001f4cb l       .debug_str	00000000 
0001f67a l       .debug_str	00000000 
0001f836 l       .debug_str	00000000 
0001f9e9 l       .debug_str	00000000 
0001fbbf l       .debug_str	00000000 
0001fda2 l       .debug_str	00000000 
00038718 l       .debug_str	00000000 
0003828c l       .debug_str	00000000 
00037bb0 l       .debug_str	00000000 
0003771c l       .debug_str	00000000 
0003776d l       .debug_str	00000000 
00037983 l       .debug_str	00000000 
00037b92 l       .debug_str	00000000 
00037dc7 l       .debug_str	00000000 
00037e49 l       .debug_str	00000000 
0003805e l       .debug_str	00000000 
0003826d l       .debug_str	00000000 
0003a873 l       .debug_str	00000000 
000384a4 l       .debug_str	00000000 
000384f0 l       .debug_str	00000000 
00038702 l       .debug_str	00000000 
00038913 l       .debug_str	00000000 
00038b44 l       .debug_str	00000000 
00038bbf l       .debug_str	00000000 
00038dd0 l       .debug_str	00000000 
00038fdb l       .debug_str	00000000 
0003920e l       .debug_str	00000000 
0003925a l       .debug_str	00000000 
000392bf l       .debug_str	00000000 
00039323 l       .debug_str	00000000 
000393a7 l       .debug_str	00000000 
00039422 l       .debug_str	00000000 
00039486 l       .debug_str	00000000 
000394e4 l       .debug_str	00000000 
000002ea l       .debug_str	00000000 
0003956a l       .debug_str	00000000 
000395f1 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
00002268 l       .debug_str	00000000 
0003963e l       .debug_str	00000000 
000396c5 l       .debug_str	00000000 
000398bf l       .debug_str	00000000 
00039948 l       .debug_str	00000000 
00039997 l       .debug_str	00000000 
00039a20 l       .debug_str	00000000 
00039c1c l       .debug_str	00000000 
00032895 l       .debug_str	00000000 
00039ca8 l       .debug_str	00000000 
0001e460 l     O .text	0000001c str.0
0001e4a0 l     O .text	00000021 str.1
00000000 l    df *ABS*	00000000 3qky6kv8k7s6yamo
0003d666 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00002cae l       .debug_str	00000000 
00066c14 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
0003ad0f l       .debug_str	00000000 
000642ac l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 3tzb8umgxugscvxu
0003adec l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00010b60 l       .debug_str	00000000 
00010b68 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
0003ad80 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 23egx44pooy9ic25
00015e02 l       .debug_str	00000000 
0003adf5 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
0003ae55 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00010b60 l       .debug_str	00000000 
00015d3f l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 41hd3lvtxklu816n
0003d666 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
000106cb l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00002cae l       .debug_str	00000000 
00066c14 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
0003aeb5 l       .debug_str	00000000 
000642ac l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 3bq0mhxe3fyj5054
00001367 l       .debug_str	00000000 
00000afc l       .debug_str	00000000 
0000b356 l       .debug_str	00000000 
00000034 l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00002c46 l       .debug_str	00000000 
000023f2 l       .debug_str	00000000 
00020225 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
0003af26 l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000000 l    df *ABS*	00000000 core.3b9enp5i-cgu.0
00000afc l       .debug_str	00000000 
0003af8a l       .debug_str	00000000 
0003af9d l       .debug_str	00000000 
00002325 l       .debug_str	00000000 
00066c14 l       .debug_str	00000000 
0003afce l       .debug_str	00000000 
0003afd6 l       .debug_str	00000000 
0003afdf l       .debug_str	00000000 
0003b028 l       .debug_str	00000000 
0000f5c1 l       .debug_str	00000000 
00000c31 l       .debug_str	00000000 
0003afe6 l       .debug_str	00000000 
0003b025 l       .debug_str	00000000 
0003b02e l       .debug_str	00000000 
0003b070 l       .debug_str	00000000 
0003b07a l       .debug_str	00000000 
0003b0bd l       .debug_str	00000000 
0003b0c7 l       .debug_str	00000000 
0003b10a l       .debug_str	00000000 
0003b114 l       .debug_str	00000000 
0003b157 l       .debug_str	00000000 
0003b162 l       .debug_str	00000000 
0003b1a7 l       .debug_str	00000000 
0003b1b2 l       .debug_str	00000000 
0003b1f7 l       .debug_str	00000000 
0003b1fd l       .debug_str	00000000 
00000c8c l       .debug_str	00000000 
00011e7c l       .debug_str	00000000 
0000106e l       .debug_str	00000000 
0003b83c l       .debug_str	00000000 
00001134 l       .debug_str	00000000 
0003b20a l       .debug_str	00000000 
0003b21a l       .debug_str	00000000 
00000c2a l       .debug_str	00000000 
00002c41 l       .debug_str	00000000 
0000235a l       .debug_str	00000000 
00002363 l       .debug_str	00000000 
00000c78 l       .debug_str	00000000 
00000db9 l       .debug_str	00000000 
00000c62 l       .debug_str	00000000 
00000dbf l       .debug_str	00000000 
00000c1a l       .debug_str	00000000 
00000c6d l       .debug_str	00000000 
00000c66 l       .debug_str	00000000 
000002a2 l       .debug_str	00000000 
0003d0d5 l       .debug_str	00000000 
00069538 l       .debug_str	00000000 
00000de7 l       .debug_str	00000000 
00000de8 l       .debug_str	00000000 
00020225 l       .debug_str	00000000 
00002c1c l       .debug_str	00000000 
00002d97 l       .debug_str	00000000 
0002442e l       .debug_str	00000000 
0002c770 l       .debug_str	00000000 
0003b260 l       .debug_str	00000000 
0000b644 l       .debug_str	00000000 
00067983 l       .debug_str	00000000 
0003bbde l       .debug_str	00000000 
00002c2d l       .debug_str	00000000 
00067595 l       .debug_str	00000000 
00000c51 l       .debug_str	00000000 
0000008e l       .debug_str	00000000 
000007da l       .debug_str	00000000 
00062df5 l       .debug_str	00000000 
0003b272 l       .debug_str	00000000 
0003b277 l       .debug_str	00000000 
00018efd l       .debug_str	00000000 
0003b282 l       .debug_str	00000000 
00000326 l       .debug_str	00000000 
0003b28c l       .debug_str	00000000 
0003b904 l       .debug_str	00000000 
0003b296 l       .debug_str	00000000 
00005a90 l       .debug_str	00000000 
0003b944 l       .debug_str	00000000 
00000d0b l       .debug_str	00000000 
0003bc21 l       .debug_str	00000000 
00002c3d l       .debug_str	00000000 
000011e4 l       .debug_str	00000000 
0003b2a4 l       .debug_str	00000000 
0003b318 l       .debug_str	00000000 
0003bc5a l       .debug_str	00000000 
0003b32a l       .debug_str	00000000 
0003b94a l       .debug_str	00000000 
0003b924 l       .debug_str	00000000 
00004467 l       .debug_str	00000000 
0003bc9d l       .debug_str	00000000 
0003b32f l       .debug_str	00000000 
0003b3a3 l       .debug_str	00000000 
0003bb5e l       .debug_str	00000000 
0003bd14 l       .debug_str	00000000 
0003bba7 l       .debug_str	00000000 
0003b3bb l       .debug_str	00000000 
0004c067 l       .debug_str	00000000 
00040900 l       .debug_str	00000000 
00062da4 l       .debug_str	00000000 
0003bd2f l       .debug_str	00000000 
0003bcce l       .debug_str	00000000 
0003b433 l       .debug_str	00000000 
0006523d l       .debug_str	00000000 
0003b48b l       .debug_str	00000000 
0003b493 l       .debug_str	00000000 
00002d27 l       .debug_str	00000000 
00000c5d l       .debug_str	00000000 
00066ba1 l       .debug_str	00000000 
00000c77 l       .debug_str	00000000 
00001b96 l       .debug_str	00000000 
0003b49b l       .debug_str	00000000 
00005bb8 l       .debug_str	00000000 
0003b4a7 l       .debug_str	00000000 
0003b4b1 l       .debug_str	00000000 
0003b4be l       .debug_str	00000000 
0003b4cb l       .debug_str	00000000 
0001c814 l       .debug_str	00000000 
0003b4e0 l       .debug_str	00000000 
0003c3db l       .debug_str	00000000 
0003b4e9 l       .debug_str	00000000 
0003b4fd l       .debug_str	00000000 
0000e903 l       .debug_str	00000000 
0001d309 l       .debug_str	00000000 
0003b513 l       .debug_str	00000000 
0003b518 l       .debug_str	00000000 
0003b52a l       .debug_str	00000000 
0003b552 l       .debug_str	00000000 
0003b55c l       .debug_str	00000000 
0003b56c l       .debug_str	00000000 
0003b5c5 l       .debug_str	00000000 
0003b5cd l       .debug_str	00000000 
0003b5da l       .debug_str	00000000 
0003b5e7 l       .debug_str	00000000 
0003befa l       .debug_str	00000000 
000125b7 l       .debug_str	00000000 
0003b5f4 l       .debug_str	00000000 
0003b621 l       .debug_str	00000000 
0003b650 l       .debug_str	00000000 
0003b677 l       .debug_str	00000000 
00000c08 l       .debug_str	00000000 
000011e6 l       .debug_str	00000000 
0003b696 l       .debug_str	00000000 
0003b6ab l       .debug_str	00000000 
0001c9c1 l       .debug_str	00000000 
00057262 l       .debug_str	00000000 
00005c6a l       .debug_str	00000000 
00062a03 l       .debug_str	00000000 
00000c22 l       .debug_str	00000000 
00000c45 l       .debug_str	00000000 
00000da7 l       .debug_str	00000000 
0003b6b5 l       .debug_str	00000000 
0003b6da l       .debug_str	00000000 
0003b6c0 l       .debug_str	00000000 
0003b759 l       .debug_str	00000000 
0003b6ea l       .debug_str	00000000 
0003b6f0 l       .debug_str	00000000 
0003b6ff l       .debug_str	00000000 
0003b70a l       .debug_str	00000000 
0003b73f l       .debug_str	00000000 
0003b764 l       .debug_str	00000000 
0003b774 l       .debug_str	00000000 
00063605 l       .debug_str	00000000 
0003b7a6 l       .debug_str	00000000 
0003b7ab l       .debug_str	00000000 
0006449e l       .debug_str	00000000 
0003d04f l       .debug_str	00000000 
0003d048 l       .debug_str	00000000 
00002c46 l       .debug_str	00000000 
0003d076 l       .debug_str	00000000 
0003d0aa l       .debug_str	00000000 
0003b7b1 l       .debug_str	00000000 
0000248a l       .debug_str	00000000 
0003b7ef l       .debug_str	00000000 
0003d053 l       .debug_str	00000000 
0003d0a0 l       .debug_str	00000000 
0003b7d0 l       .debug_str	00000000 
0003b7bd l       .debug_str	00000000 
0003b7d6 l       .debug_str	00000000 
0001d308 l       .debug_str	00000000 
000101ce l       .debug_str	00000000 
000101cd l       .debug_str	00000000 
0003b7fe l       .debug_str	00000000 
0003b806 l       .debug_str	00000000 
00046926 l       .debug_str	00000000 
0003b80c l       .debug_str	00000000 
000556c9 l       .debug_str	00000000 
0003b833 l       .debug_str	00000000 
0003b817 l       .debug_str	00000000 
00011e7b l       .debug_str	00000000 
0003b83b l       .debug_str	00000000 
0003b566 l       .debug_str	00000000 
000342b6 l       .debug_str	00000000 
000364f0 l       .debug_str	00000000 
0003b840 l       .debug_str	00000000 
0001c813 l       .debug_str	00000000 
0003b864 l       .debug_str	00000000 
0003b86c l       .debug_str	00000000 
00057dcb l       .debug_str	00000000 
000464b0 l       .debug_str	00000000 
0003b871 l       .debug_str	00000000 
0003b899 l       .debug_str	00000000 
0003b87b l       .debug_str	00000000 
00021ed8 l       .debug_str	00000000 
000087ad l       .debug_str	00000000 
00005b07 l       .debug_str	00000000 
00011e5b l       .debug_str	00000000 
000342be l       .debug_str	00000000 
000342cb l       .debug_str	00000000 
000342d4 l       .debug_str	00000000 
00061d6b l       .debug_str	00000000 
0003b8ad l       .debug_str	00000000 
0003b8a1 l       .debug_str	00000000 
00002cae l       .debug_str	00000000 
0003b8ba l       .debug_str	00000000 
0003b8c6 l       .debug_str	00000000 
0003b8e9 l       .debug_str	00000000 
0003b8d3 l       .debug_str	00000000 
0003b8f7 l       .debug_str	00000000 
0003b917 l       .debug_str	00000000 
0003b937 l       .debug_str	00000000 
0003b952 l       .debug_str	00000000 
0003b96d l       .debug_str	00000000 
0003b973 l       .debug_str	00000000 
0003b977 l       .debug_str	00000000 
0003b988 l       .debug_str	00000000 
0003b97b l       .debug_str	00000000 
00001cbe l       .debug_str	00000000 
00001cc2 l       .debug_str	00000000 
00001ccd l       .debug_str	00000000 
00001ce8 l       .debug_str	00000000 
00001cd8 l       .debug_str	00000000 
0003b99d l       .debug_str	00000000 
0003b998 l       .debug_str	00000000 
0003b9b0 l       .debug_str	00000000 
0003b9fc l       .debug_str	00000000 
0003b9d5 l       .debug_str	00000000 
0003b9ec l       .debug_str	00000000 
0003ba16 l       .debug_str	00000000 
0003ba07 l       .debug_str	00000000 
0003ba5e l       .debug_str	00000000 
0003ba3e l       .debug_str	00000000 
0003bab7 l       .debug_str	00000000 
0003ba97 l       .debug_str	00000000 
00061d5d l       .debug_str	00000000 
0003bb0e l       .debug_str	00000000 
0003bb13 l       .debug_str	00000000 
0003bb19 l       .debug_str	00000000 
0003bb3c l       .debug_str	00000000 
0003bb1e l       .debug_str	00000000 
0003bb47 l       .debug_str	00000000 
0003bb98 l       .debug_str	00000000 
0003bbc7 l       .debug_str	00000000 
0003bc12 l       .debug_str	00000000 
0003bc43 l       .debug_str	00000000 
0003bc8e l       .debug_str	00000000 
0003bcbf l       .debug_str	00000000 
00034355 l       .debug_str	00000000 
00000c56 l       .debug_str	00000000 
00000c70 l       .debug_str	00000000 
00000c7c l       .debug_str	00000000 
000410bb l       .debug_str	00000000 
00003435 l       .debug_str	00000000 
00040bba l       .debug_str	00000000 
00000c84 l       .debug_str	00000000 
00000c89 l       .debug_str	00000000 
00000c90 l       .debug_str	00000000 
00064e10 l       .debug_str	00000000 
00001a1f l       .debug_str	00000000 
00069452 l       .debug_str	00000000 
00000b51 l       .debug_str	00000000 
00000b56 l       .debug_str	00000000 
00000b5c l       .debug_str	00000000 
00000b63 l       .debug_str	00000000 
00000b6b l       .debug_str	00000000 
0000bfe3 l       .debug_str	00000000 
00000c99 l       .debug_str	00000000 
00000ca3 l       .debug_str	00000000 
00000caa l       .debug_str	00000000 
00000ca6 l       .debug_str	00000000 
00000cb0 l       .debug_str	00000000 
00000cb8 l       .debug_str	00000000 
000010b6 l       .debug_str	00000000 
00000cbe l       .debug_str	00000000 
00000ce3 l       .debug_str	00000000 
00000cc9 l       .debug_str	00000000 
00000cec l       .debug_str	00000000 
00000d10 l       .debug_str	00000000 
00062a8c l       .debug_str	00000000 
0006298d l       .debug_str	00000000 
00000d37 l       .debug_str	00000000 
00000d3d l       .debug_str	00000000 
00000d4c l       .debug_str	00000000 
00000d50 l       .debug_str	00000000 
00000d59 l       .debug_str	00000000 
00000d65 l       .debug_str	00000000 
00000d8a l       .debug_str	00000000 
00000d7e l       .debug_str	00000000 
00000d8f l       .debug_str	00000000 
00031ad8 l       .debug_str	00000000 
00000b75 l       .debug_str	00000000 
00000b78 l       .debug_str	00000000 
00000b7c l       .debug_str	00000000 
00000d99 l       .debug_str	00000000 
00000db2 l       .debug_str	00000000 
00000dc8 l       .debug_str	00000000 
00000def l       .debug_str	00000000 
00000e06 l       .debug_str	00000000 
00000e2a l       .debug_str	00000000 
00000e56 l       .debug_str	00000000 
00000e46 l       .debug_str	00000000 
00000e60 l       .debug_str	00000000 
00000ed0 l       .debug_str	00000000 
00000ebe l       .debug_str	00000000 
00000edb l       .debug_str	00000000 
0003bcfd l       .debug_str	00000000 
0003bcf1 l       .debug_str	00000000 
0003bcf0 l       .debug_str	00000000 
0003bd07 l       .debug_str	00000000 
0003bd20 l       .debug_str	00000000 
00000c16 l       .debug_str	00000000 
0003bd4e l       .debug_str	00000000 
0003bd4d l       .debug_str	00000000 
0003bd62 l       .debug_str	00000000 
0003bd53 l       .debug_str	00000000 
00062a7e l       .debug_str	00000000 
00061d4b l       .debug_str	00000000 
00000ef4 l       .debug_str	00000000 
0003bd8f l       .debug_str	00000000 
0003bd81 l       .debug_str	00000000 
0003bd80 l       .debug_str	00000000 
0001c5ae l       .debug_str	00000000 
000087a3 l       .debug_str	00000000 
00069888 l       .debug_str	00000000 
0003bd98 l       .debug_str	00000000 
0003bd9c l       .debug_str	00000000 
0003bd9f l       .debug_str	00000000 
00068370 l       .debug_str	00000000 
00031b84 l       .debug_str	00000000 
0003bda2 l       .debug_str	00000000 
0000a0f1 l       .debug_str	00000000 
0003bda6 l       .debug_str	00000000 
0003bda5 l       .debug_str	00000000 
0003bdab l       .debug_str	00000000 
0003be76 l       .debug_str	00000000 
00000238 l       .debug_str	00000000 
0003bdc9 l       .debug_str	00000000 
0003bdb7 l       .debug_str	00000000 
0003bdee l       .debug_str	00000000 
0003beaf l       .debug_str	00000000 
0003be0c l       .debug_str	00000000 
0003bdfa l       .debug_str	00000000 
0001b0e7 l       .debug_str	00000000 
0003be43 l       .debug_str	00000000 
0003be31 l       .debug_str	00000000 
0003be4f l       .debug_str	00000000 
0003be67 l       .debug_str	00000000 
0003bea0 l       .debug_str	00000000 
0000a0f7 l       .debug_str	00000000 
0003bed9 l       .debug_str	00000000 
0003bee6 l       .debug_str	00000000 
0003bee5 l       .debug_str	00000000 
0003beee l       .debug_str	00000000 
0003bf1b l       .debug_str	00000000 
0003bf06 l       .debug_str	00000000 
0003bf38 l       .debug_str	00000000 
0003bf44 l       .debug_str	00000000 
0003bfee l       .debug_str	00000000 
0003bf50 l       .debug_str	00000000 
0003bf57 l       .debug_str	00000000 
0003bf60 l       .debug_str	00000000 
0003bf6e l       .debug_str	00000000 
0003bf75 l       .debug_str	00000000 
0003bf7d l       .debug_str	00000000 
0003bf84 l       .debug_str	00000000 
0003bfca l       .debug_str	00000000 
0003bfa5 l       .debug_str	00000000 
0003bf90 l       .debug_str	00000000 
0003bfb5 l       .debug_str	00000000 
0003bfd9 l       .debug_str	00000000 
00012237 l       .debug_str	00000000 
0003bffa l       .debug_str	00000000 
00036503 l       .debug_str	00000000 
0006625a l       .debug_str	00000000 
0003c02b l       .debug_str	00000000 
0003c014 l       .debug_str	00000000 
0003c049 l       .debug_str	00000000 
0003c06c l       .debug_str	00000000 
0003c055 l       .debug_str	00000000 
0003c0b6 l       .debug_str	00000000 
0003c0aa l       .debug_str	00000000 
0003b561 l       .debug_str	00000000 
0003c0d3 l       .debug_str	00000000 
0003c0bc l       .debug_str	00000000 
0003c11c l       .debug_str	00000000 
0003c144 l       .debug_str	00000000 
0003c12d l       .debug_str	00000000 
00064dfe l       .debug_str	00000000 
0000cb1c l       .debug_str	00000000 
00062e93 l       .debug_str	00000000 
0003c1f3 l       .debug_str	00000000 
0003c1d5 l       .debug_str	00000000 
0003c2e9 l       .debug_str	00000000 
0003c2c9 l       .debug_str	00000000 
0003c35c l       .debug_str	00000000 
0003c33c l       .debug_str	00000000 
00053294 l       .debug_str	00000000 
0003c3af l       .debug_str	00000000 
0003c3bc l       .debug_str	00000000 
0003c3c7 l       .debug_str	00000000 
0003c3dd l       .debug_str	00000000 
0003c3e7 l       .debug_str	00000000 
0003c43d l       .debug_str	00000000 
0003c44f l       .debug_str	00000000 
0003c4a1 l       .debug_str	00000000 
0003c4b5 l       .debug_str	00000000 
0003c509 l       .debug_str	00000000 
0003c510 l       .debug_str	00000000 
0003c556 l       .debug_str	00000000 
0003c565 l       .debug_str	00000000 
0003c5bf l       .debug_str	00000000 
0003c615 l       .debug_str	00000000 
0003c66d l       .debug_str	00000000 
0003c6b7 l       .debug_str	00000000 
0003c6bd l       .debug_str	00000000 
0003c70d l       .debug_str	00000000 
0003c759 l       .debug_str	00000000 
0003c7a7 l       .debug_str	00000000 
0003658e l       .debug_str	00000000 
0003c7e7 l       .debug_str	00000000 
0003c834 l       .debug_str	00000000 
0003c87d l       .debug_str	00000000 
0003c8c8 l       .debug_str	00000000 
0003c905 l       .debug_str	00000000 
0003c915 l       .debug_str	00000000 
0003c970 l       .debug_str	00000000 
0003c9c7 l       .debug_str	00000000 
0003ca20 l       .debug_str	00000000 
0004a337 l       .debug_str	00000000 
0003ca6b l       .debug_str	00000000 
0003cabf l       .debug_str	00000000 
0003cb0f l       .debug_str	00000000 
0003cb61 l       .debug_str	00000000 
000628ff l       .debug_str	00000000 
0003cba5 l       .debug_str	00000000 
0003cbf1 l       .debug_str	00000000 
0003cc39 l       .debug_str	00000000 
0003cc83 l       .debug_str	00000000 
0004a15a l       .debug_str	00000000 
0003ccbf l       .debug_str	00000000 
0003cd13 l       .debug_str	00000000 
0003cd63 l       .debug_str	00000000 
0003cdb5 l       .debug_str	00000000 
0003cdf9 l       .debug_str	00000000 
0003ce05 l       .debug_str	00000000 
0003ce5c l       .debug_str	00000000 
0003ceaf l       .debug_str	00000000 
0003cf04 l       .debug_str	00000000 
0003cf4b l       .debug_str	00000000 
0003cf57 l       .debug_str	00000000 
0003cf6e l       .debug_str	00000000 
0003cf67 l       .debug_str	00000000 
0003cf80 l       .debug_str	00000000 
0003cf95 l       .debug_str	00000000 
0003cfe6 l       .debug_str	00000000 
0003cff6 l       .debug_str	00000000 
0003d047 l       .debug_str	00000000 
0003d052 l       .debug_str	00000000 
0003d075 l       .debug_str	00000000 
0003d0a9 l       .debug_str	00000000 
0003d0bf l       .debug_str	00000000 
0003d0ed l       .debug_str	00000000 
0003d0e1 l       .debug_str	00000000 
0003d0fb l       .debug_str	00000000 
0003d0fa l       .debug_str	00000000 
0000be01 l       .debug_str	00000000 
000087b7 l       .debug_str	00000000 
00031927 l       .debug_str	00000000 
00036515 l       .debug_str	00000000 
0001bfdf l       .debug_str	00000000 
0002c5e4 l       .debug_str	00000000 
0003d0fe l       .debug_str	00000000 
0002d0a2 l       .debug_str	00000000 
0003d13e l       .debug_str	00000000 
0003d17e l       .debug_str	00000000 
0003d188 l       .debug_str	00000000 
00061e97 l       .debug_str	00000000 
000669f8 l       .debug_str	00000000 
0003d1c4 l       .debug_str	00000000 
0000a6e1 l       .debug_str	00000000 
0003fbe5 l       .debug_str	00000000 
0003d1ec l       .debug_str	00000000 
0000a600 l       .debug_str	00000000 
0003d215 l       .debug_str	00000000 
0003d23a l       .debug_str	00000000 
0004ed7b l       .debug_str	00000000 
00062eed l       .debug_str	00000000 
0003d241 l       .debug_str	00000000 
0003d24a l       .debug_str	00000000 
0003d283 l       .debug_str	00000000 
00001f6d l       .debug_str	00000000 
0003d28b l       .debug_str	00000000 
00003d01 l       .debug_str	00000000 
0003d320 l       .debug_str	00000000 
0000359b l       .debug_str	00000000 
0003d36b l       .debug_str	00000000 
000034f1 l       .debug_str	00000000 
0003d3b2 l       .debug_str	00000000 
000031f9 l       .debug_str	00000000 
0003d407 l       .debug_str	00000000 
0003d444 l       .debug_str	00000000 
00002c09 l       .debug_str	00000000 
0003d44f l       .debug_str	00000000 
00003bfc l       .debug_str	00000000 
0003d4a4 l       .debug_str	00000000 
00003b8c l       .debug_str	00000000 
0003d4f6 l       .debug_str	00000000 
0001ce1c l       .debug_str	00000000 
0003d53d l       .debug_str	00000000 
0001ce17 l       .debug_str	00000000 
0000d034 l       .debug_str	00000000 
00002c13 l       .debug_str	00000000 
00040a1c l       .debug_str	00000000 
0003d5c3 l       .debug_str	00000000 
0003d604 l       .debug_str	00000000 
0003d627 l       .debug_str	00000000 
0003d662 l       .debug_str	00000000 
0003d66c l       .debug_str	00000000 
0003d6f6 l       .debug_str	00000000 
0003d728 l       .debug_str	00000000 
00004eab l       .debug_str	00000000 
00002c01 l       .debug_str	00000000 
0003d79c l       .debug_str	00000000 
0003d7ed l       .debug_str	00000000 
00002d72 l       .debug_str	00000000 
0003d82f l       .debug_str	00000000 
0003d8b6 l       .debug_str	00000000 
0003d8c5 l       .debug_str	00000000 
0003d94f l       .debug_str	00000000 
0003d9cb l       .debug_str	00000000 
0003d9fb l       .debug_str	00000000 
0003da36 l       .debug_str	00000000 
0003da40 l       .debug_str	00000000 
0003dab7 l       .debug_str	00000000 
0003dac1 l       .debug_str	00000000 
0003db16 l       .debug_str	00000000 
0003db1f l       .debug_str	00000000 
0003db70 l       .debug_str	00000000 
0000dfa2 l       .debug_str	00000000 
0003db7c l       .debug_str	00000000 
00001fa5 l       .debug_str	00000000 
0000dbda l       .debug_str	00000000 
0003db89 l       .debug_str	00000000 
0003db9f l       .debug_str	00000000 
0003dbac l       .debug_str	00000000 
0003dbf1 l       .debug_str	00000000 
0003dc05 l       .debug_str	00000000 
0003dc5a l       .debug_str	00000000 
0003dc63 l       .debug_str	00000000 
00055ca9 l       .debug_str	00000000 
0003dc9b l       .debug_str	00000000 
0003dd1e l       .debug_str	00000000 
0003dd29 l       .debug_str	00000000 
0003ddaf l       .debug_str	00000000 
0003de24 l       .debug_str	00000000 
0003de50 l       .debug_str	00000000 
00003e86 l       .debug_str	00000000 
0003def9 l       .debug_str	00000000 
0003df75 l       .debug_str	00000000 
0000236b l       .debug_str	00000000 
0003df9a l       .debug_str	00000000 
00031d55 l       .debug_str	00000000 
0003dfe7 l       .debug_str	00000000 
0000319c l       .debug_str	00000000 
0003e03a l       .debug_str	00000000 
0003e075 l       .debug_str	00000000 
0003e080 l       .debug_str	00000000 
00009d7f l       .debug_str	00000000 
0003e10c l       .debug_str	00000000 
00002e4a l       .debug_str	00000000 
0003e18f l       .debug_str	00000000 
0003e217 l       .debug_str	00000000 
0000ad18 l       .debug_str	00000000 
0003e28c l       .debug_str	00000000 
0003e312 l       .debug_str	00000000 
000043a1 l       .debug_str	00000000 
0003e387 l       .debug_str	00000000 
0000bcd2 l       .debug_str	00000000 
000023f2 l       .debug_str	00000000 
0003e3ea l       .debug_str	00000000 
0003b5ca l       .debug_str	00000000 
0003e44b l       .debug_str	00000000 
00004445 l       .debug_str	00000000 
0003e4bc l       .debug_str	00000000 
0001ce87 l       .debug_str	00000000 
0003e51e l       .debug_str	00000000 
0001cb83 l       .debug_str	00000000 
0003e564 l       .debug_str	00000000 
0003e5ac l       .debug_str	00000000 
0003e5b6 l       .debug_str	00000000 
0003e5f7 l       .debug_str	00000000 
0003e611 l       .debug_str	00000000 
000365bf l       .debug_str	00000000 
00000b76 l       .debug_str	00000000 
0003e617 l       .debug_str	00000000 
0003e620 l       .debug_str	00000000 
0003e685 l       .debug_str	00000000 
0003e694 l       .debug_str	00000000 
0002d0ec l       .debug_str	00000000 
0003e6d6 l       .debug_str	00000000 
0003e73b l       .debug_str	00000000 
0003e77d l       .debug_str	00000000 
0003e7c7 l       .debug_str	00000000 
0003e7d6 l       .debug_str	00000000 
0003e80c l       .debug_str	00000000 
0003e815 l       .debug_str	00000000 
00006531 l       .debug_str	00000000 
0003e81f l       .debug_str	00000000 
0003e822 l       .debug_str	00000000 
000302c8 l       .debug_str	00000000 
0003e85a l       .debug_str	00000000 
0003e89e l       .debug_str	00000000 
0003e8b4 l       .debug_str	00000000 
0003e8fd l       .debug_str	00000000 
00002dbf l       .debug_str	00000000 
0003659e l       .debug_str	00000000 
0003e942 l       .debug_str	00000000 
0003e98b l       .debug_str	00000000 
0003e999 l       .debug_str	00000000 
0003e9e1 l       .debug_str	00000000 
00034c75 l       .debug_str	00000000 
0003ea2b l       .debug_str	00000000 
00048b8f l       .debug_str	00000000 
0003eac3 l       .debug_str	00000000 
000628d0 l       .debug_str	00000000 
0003eb5d l       .debug_str	00000000 
00035165 l       .debug_str	00000000 
0003ebcf l       .debug_str	00000000 
00034e98 l       .debug_str	00000000 
0003ec72 l       .debug_str	00000000 
00003431 l       .debug_str	00000000 
0003eca4 l       .debug_str	00000000 
0002d460 l       .debug_str	00000000 
0003eceb l       .debug_str	00000000 
0003ecf5 l       .debug_str	00000000 
0000db0a l       .debug_str	00000000 
0003ed43 l       .debug_str	00000000 
0003ed8e l       .debug_str	00000000 
0003ed9c l       .debug_str	00000000 
0003ee2a l       .debug_str	00000000 
0003ee39 l       .debug_str	00000000 
00031e39 l       .debug_str	00000000 
0003ee82 l       .debug_str	00000000 
00031d4d l       .debug_str	00000000 
0003eec7 l       .debug_str	00000000 
0003ef01 l       .debug_str	00000000 
0003ef0a l       .debug_str	00000000 
0003ef56 l       .debug_str	00000000 
0003ef6e l       .debug_str	00000000 
0003efd0 l       .debug_str	00000000 
000034f9 l       .debug_str	00000000 
0003f005 l       .debug_str	00000000 
0003f02d l       .debug_str	00000000 
0003f065 l       .debug_str	00000000 
0003f08e l       .debug_str	00000000 
0003f099 l       .debug_str	00000000 
0003f0be l       .debug_str	00000000 
0003f0c2 l       .debug_str	00000000 
0003f151 l       .debug_str	00000000 
0003f188 l       .debug_str	00000000 
0003f20e l       .debug_str	00000000 
0003f25c l       .debug_str	00000000 
0003f265 l       .debug_str	00000000 
0003f2eb l       .debug_str	00000000 
0003f2fe l       .debug_str	00000000 
0003f387 l       .debug_str	00000000 
0003f3e3 l       .debug_str	00000000 
0003f425 l       .debug_str	00000000 
0003f4d7 l       .debug_str	00000000 
0003f516 l       .debug_str	00000000 
0003f5bb l       .debug_str	00000000 
0003f644 l       .debug_str	00000000 
0003f653 l       .debug_str	00000000 
0003f6e7 l       .debug_str	00000000 
0003f70d l       .debug_str	00000000 
0003f789 l       .debug_str	00000000 
0003f7c4 l       .debug_str	00000000 
0003f829 l       .debug_str	00000000 
0003f830 l       .debug_str	00000000 
0003f88e l       .debug_str	00000000 
0003f89f l       .debug_str	00000000 
0003f8ac l       .debug_str	00000000 
0003f8e5 l       .debug_str	00000000 
0003f8fd l       .debug_str	00000000 
0003f93d l       .debug_str	00000000 
0003f949 l       .debug_str	00000000 
0003f9a6 l       .debug_str	00000000 
0003fa03 l       .debug_str	00000000 
0003fab0 l       .debug_str	00000000 
0003fb0d l       .debug_str	00000000 
0000582c l       .debug_str	00000000 
0003fb7a l       .debug_str	00000000 
0003fbde l       .debug_str	00000000 
0003fbe9 l       .debug_str	00000000 
0003fc19 l       .debug_str	00000000 
0003fc45 l       .debug_str	00000000 
0003fcb1 l       .debug_str	00000000 
0003fce1 l       .debug_str	00000000 
0003fd1d l       .debug_str	00000000 
0003fd67 l       .debug_str	00000000 
0003fd77 l       .debug_str	00000000 
0003fdac l       .debug_str	00000000 
0003fdf1 l       .debug_str	00000000 
0003fdfc l       .debug_str	00000000 
0003fe3c l       .debug_str	00000000 
0003fe4a l       .debug_str	00000000 
0003fed6 l       .debug_str	00000000 
0003ff52 l       .debug_str	00000000 
0003ff72 l       .debug_str	00000000 
0003ffcc l       .debug_str	00000000 
0003ffd9 l       .debug_str	00000000 
00040012 l       .debug_str	00000000 
0004001a l       .debug_str	00000000 
0004006f l       .debug_str	00000000 
000400c1 l       .debug_str	00000000 
0003ee2f l       .debug_str	00000000 
00040108 l       .debug_str	00000000 
0004017c l       .debug_str	00000000 
000401c0 l       .debug_str	00000000 
0004020c l       .debug_str	00000000 
0004024b l       .debug_str	00000000 
00040271 l       .debug_str	00000000 
00005138 l       .debug_str	00000000 
00063bde l       .debug_str	00000000 
00057225 l       .debug_str	00000000 
000402c8 l       .debug_str	00000000 
0004032b l       .debug_str	00000000 
00040347 l       .debug_str	00000000 
00040359 l       .debug_str	00000000 
00040363 l       .debug_str	00000000 
000403a5 l       .debug_str	00000000 
0004042c l       .debug_str	00000000 
0004043a l       .debug_str	00000000 
000404b6 l       .debug_str	00000000 
000404e3 l       .debug_str	00000000 
0004055a l       .debug_str	00000000 
000405a8 l       .debug_str	00000000 
00009e02 l       .debug_str	00000000 
00040638 l       .debug_str	00000000 
00040674 l       .debug_str	00000000 
00040681 l       .debug_str	00000000 
000406c7 l       .debug_str	00000000 
000406d4 l       .debug_str	00000000 
0000354c l       .debug_str	00000000 
00040706 l       .debug_str	00000000 
00040756 l       .debug_str	00000000 
0004076d l       .debug_str	00000000 
000407f7 l       .debug_str	00000000 
0001cd62 l       .debug_str	00000000 
00040873 l       .debug_str	00000000 
00040887 l       .debug_str	00000000 
000408e4 l       .debug_str	00000000 
000408f3 l       .debug_str	00000000 
00040904 l       .debug_str	00000000 
0004095e l       .debug_str	00000000 
0004096d l       .debug_str	00000000 
000409f6 l       .debug_str	00000000 
00040a04 l       .debug_str	00000000 
00040a11 l       .debug_str	00000000 
00040a25 l       .debug_str	00000000 
00040a7b l       .debug_str	00000000 
00040acf l       .debug_str	00000000 
00040b48 l       .debug_str	00000000 
00040b60 l       .debug_str	00000000 
00040b69 l       .debug_str	00000000 
00040bb9 l       .debug_str	00000000 
00040bc3 l       .debug_str	00000000 
00040c5a l       .debug_str	00000000 
00040c74 l       .debug_str	00000000 
00040d0b l       .debug_str	00000000 
00040d44 l       .debug_str	00000000 
00040d5f l       .debug_str	00000000 
00005a52 l       .debug_str	00000000 
000302d2 l       .debug_str	00000000 
00040dc4 l       .debug_str	00000000 
000410b9 l       .debug_str	00000000 
00040dc9 l       .debug_str	00000000 
000678c0 l       .debug_str	00000000 
00002371 l       .debug_str	00000000 
00040dfb l       .debug_str	00000000 
00009068 l       .debug_str	00000000 
00040e39 l       .debug_str	00000000 
0001cb29 l       .debug_str	00000000 
00040e8c l       .debug_str	00000000 
00040f18 l       .debug_str	00000000 
00040f94 l       .debug_str	00000000 
00040fb3 l       .debug_str	00000000 
00040ffe l       .debug_str	00000000 
0004100b l       .debug_str	00000000 
0004107f l       .debug_str	00000000 
00044f37 l       .debug_str	00000000 
00057c4f l       .debug_str	00000000 
0004109e l       .debug_str	00000000 
000410be l       .debug_str	00000000 
000410da l       .debug_str	00000000 
000410e4 l       .debug_str	00000000 
00041170 l       .debug_str	00000000 
000411ec l       .debug_str	00000000 
0004121d l       .debug_str	00000000 
000412a0 l       .debug_str	00000000 
000412c0 l       .debug_str	00000000 
00041346 l       .debug_str	00000000 
000413bb l       .debug_str	00000000 
000413fc l       .debug_str	00000000 
00064e8c l       .debug_str	00000000 
0004140c l       .debug_str	00000000 
0003522b l       .debug_str	00000000 
00041457 l       .debug_str	00000000 
00003604 l       .debug_str	00000000 
000414a0 l       .debug_str	00000000 
00003544 l       .debug_str	00000000 
000414e5 l       .debug_str	00000000 
00041541 l       .debug_str	00000000 
0004158a l       .debug_str	00000000 
000415cf l       .debug_str	00000000 
0004162b l       .debug_str	00000000 
00041674 l       .debug_str	00000000 
000416b9 l       .debug_str	00000000 
00041715 l       .debug_str	00000000 
00041770 l       .debug_str	00000000 
000417b8 l       .debug_str	00000000 
000417fc l       .debug_str	00000000 
00041844 l       .debug_str	00000000 
00041888 l       .debug_str	00000000 
000418e3 l       .debug_str	00000000 
0004192d l       .debug_str	00000000 
00041973 l       .debug_str	00000000 
000419d0 l       .debug_str	00000000 
00041a1a l       .debug_str	00000000 
00041a60 l       .debug_str	00000000 
00041abd l       .debug_str	00000000 
00041b07 l       .debug_str	00000000 
00041b4d l       .debug_str	00000000 
00041baa l       .debug_str	00000000 
00041bf3 l       .debug_str	00000000 
00041c38 l       .debug_str	00000000 
00041c94 l       .debug_str	00000000 
00041cdd l       .debug_str	00000000 
00041d22 l       .debug_str	00000000 
00041d7e l       .debug_str	00000000 
00041dc7 l       .debug_str	00000000 
00041e0c l       .debug_str	00000000 
00041e68 l       .debug_str	00000000 
00041ec3 l       .debug_str	00000000 
00041f0b l       .debug_str	00000000 
00041f4f l       .debug_str	00000000 
00041f97 l       .debug_str	00000000 
00041fdb l       .debug_str	00000000 
00042036 l       .debug_str	00000000 
00042091 l       .debug_str	00000000 
000420d9 l       .debug_str	00000000 
0004211d l       .debug_str	00000000 
00042179 l       .debug_str	00000000 
000421c2 l       .debug_str	00000000 
00042207 l       .debug_str	00000000 
00042250 l       .debug_str	00000000 
00042295 l       .debug_str	00000000 
000422f1 l       .debug_str	00000000 
0004233a l       .debug_str	00000000 
0004237f l       .debug_str	00000000 
000423db l       .debug_str	00000000 
00042437 l       .debug_str	00000000 
00042482 l       .debug_str	00000000 
000424c9 l       .debug_str	00000000 
00042527 l       .debug_str	00000000 
00042585 l       .debug_str	00000000 
000425cf l       .debug_str	00000000 
00042615 l       .debug_str	00000000 
00042672 l       .debug_str	00000000 
000426bc l       .debug_str	00000000 
00042702 l       .debug_str	00000000 
0004275f l       .debug_str	00000000 
000427a8 l       .debug_str	00000000 
000427ed l       .debug_str	00000000 
00042849 l       .debug_str	00000000 
00042892 l       .debug_str	00000000 
000428d7 l       .debug_str	00000000 
00042933 l       .debug_str	00000000 
0004297c l       .debug_str	00000000 
000429c1 l       .debug_str	00000000 
00034d4b l       .debug_str	00000000 
00042a1d l       .debug_str	00000000 
00042a5c l       .debug_str	00000000 
00042a91 l       .debug_str	00000000 
00010927 l       .debug_str	00000000 
00002c37 l       .debug_str	00000000 
00002da6 l       .debug_str	00000000 
00042a9b l       .debug_str	00000000 
00005021 l       .debug_str	00000000 
000021fd l       .debug_str	00000000 
00042ad5 l       .debug_str	00000000 
00042b67 l       .debug_str	00000000 
000044ae l       .debug_str	00000000 
00042ba0 l       .debug_str	00000000 
00003972 l       .debug_str	00000000 
00042bc7 l       .debug_str	00000000 
000038be l       .debug_str	00000000 
0000237c l       .debug_str	00000000 
00042c01 l       .debug_str	00000000 
0000349e l       .debug_str	00000000 
00042c27 l       .debug_str	00000000 
0000313b l       .debug_str	00000000 
00042c81 l       .debug_str	00000000 
00003da7 l       .debug_str	00000000 
00042d1b l       .debug_str	00000000 
00002db5 l       .debug_str	00000000 
00042da4 l       .debug_str	00000000 
00042e4b l       .debug_str	00000000 
00042e84 l       .debug_str	00000000 
00042eeb l       .debug_str	00000000 
00042f54 l       .debug_str	00000000 
00042f61 l       .debug_str	00000000 
00042fd6 l       .debug_str	00000000 
00042fff l       .debug_str	00000000 
00011989 l       .debug_str	00000000 
00043034 l       .debug_str	00000000 
00043070 l       .debug_str	00000000 
00043081 l       .debug_str	00000000 
000430ba l       .debug_str	00000000 
000430c7 l       .debug_str	00000000 
000430cc l       .debug_str	00000000 
000430db l       .debug_str	00000000 
0003e68d l       .debug_str	00000000 
00043124 l       .debug_str	00000000 
00043157 l       .debug_str	00000000 
00043164 l       .debug_str	00000000 
00068b87 l       .debug_str	00000000 
000431af l       .debug_str	00000000 
00043207 l       .debug_str	00000000 
0004321c l       .debug_str	00000000 
00043252 l       .debug_str	00000000 
0004325d l       .debug_str	00000000 
000432c2 l       .debug_str	00000000 
00043322 l       .debug_str	00000000 
00043388 l       .debug_str	00000000 
00011a21 l       .debug_str	00000000 
000433e7 l       .debug_str	00000000 
0004345a l       .debug_str	00000000 
000434c1 l       .debug_str	00000000 
000434e1 l       .debug_str	00000000 
00043520 l       .debug_str	00000000 
0004353f l       .debug_str	00000000 
00000ad8 l       .debug_str	00000000 
000435b2 l       .debug_str	00000000 
0004362f l       .debug_str	00000000 
00043694 l       .debug_str	00000000 
000436f4 l       .debug_str	00000000 
00043767 l       .debug_str	00000000 
000437e4 l       .debug_str	00000000 
000051c2 l       .debug_str	00000000 
0004385c l       .debug_str	00000000 
000438d1 l       .debug_str	00000000 
00005c73 l       .debug_str	00000000 
00005c7e l       .debug_str	00000000 
0004394b l       .debug_str	00000000 
00066b6d l       .debug_str	00000000 
00043989 l       .debug_str	00000000 
000439cb l       .debug_str	00000000 
000439f6 l       .debug_str	00000000 
00043a37 l       .debug_str	00000000 
00043a41 l       .debug_str	00000000 
00000c0e l       .debug_str	00000000 
00067a27 l       .debug_str	00000000 
00062317 l       .debug_str	00000000 
00000f06 l       .debug_str	00000000 
00043a9d l       .debug_str	00000000 
00001402 l       .debug_str	00000000 
00043ad9 l       .debug_str	00000000 
000013b3 l       .debug_str	00000000 
00043b20 l       .debug_str	00000000 
00043b7e l       .debug_str	00000000 
00043bd5 l       .debug_str	00000000 
00043c2f l       .debug_str	00000000 
00043c39 l       .debug_str	00000000 
00043c7c l       .debug_str	00000000 
00043c81 l       .debug_str	00000000 
00043c88 l       .debug_str	00000000 
00043cbe l       .debug_str	00000000 
00043cce l       .debug_str	00000000 
00043cdd l       .debug_str	00000000 
00043ce8 l       .debug_str	00000000 
0003b6b0 l       .debug_str	00000000 
00043d22 l       .debug_str	00000000 
00043d6b l       .debug_str	00000000 
00043db2 l       .debug_str	00000000 
00004b4b l       .debug_str	00000000 
00043e16 l       .debug_str	00000000 
00043e8f l       .debug_str	00000000 
0001d2fa l       .debug_str	00000000 
00043f00 l       .debug_str	00000000 
00043f77 l       .debug_str	00000000 
00043f82 l       .debug_str	00000000 
00043fbf l       .debug_str	00000000 
00043fca l       .debug_str	00000000 
00044027 l       .debug_str	00000000 
00044035 l       .debug_str	00000000 
000440b6 l       .debug_str	00000000 
000440fc l       .debug_str	00000000 
00044123 l       .debug_str	00000000 
000441b9 l       .debug_str	00000000 
00044251 l       .debug_str	00000000 
000442c3 l       .debug_str	00000000 
000442eb l       .debug_str	00000000 
000343d9 l       .debug_str	00000000 
000443a1 l       .debug_str	00000000 
00035673 l       .debug_str	00000000 
000443e6 l       .debug_str	00000000 
0004449e l       .debug_str	00000000 
000444e3 l       .debug_str	00000000 
0000ce0f l       .debug_str	00000000 
00044525 l       .debug_str	00000000 
00044580 l       .debug_str	00000000 
00044585 l       .debug_str	00000000 
000445de l       .debug_str	00000000 
00044612 l       .debug_str	00000000 
00044626 l       .debug_str	00000000 
00044661 l       .debug_str	00000000 
000446c2 l       .debug_str	00000000 
000446df l       .debug_str	00000000 
00044721 l       .debug_str	00000000 
00044737 l       .debug_str	00000000 
000447a3 l       .debug_str	00000000 
00005c77 l       .debug_str	00000000 
00005c93 l       .debug_str	00000000 
00005c9e l       .debug_str	00000000 
000447e5 l       .debug_str	00000000 
00044825 l       .debug_str	00000000 
0004487f l       .debug_str	00000000 
000448c1 l       .debug_str	00000000 
0004491c l       .debug_str	00000000 
0004495e l       .debug_str	00000000 
00044969 l       .debug_str	00000000 
000449a9 l       .debug_str	00000000 
000449af l       .debug_str	00000000 
00044a09 l       .debug_str	00000000 
00044a12 l       .debug_str	00000000 
00044a54 l       .debug_str	00000000 
00044aac l       .debug_str	00000000 
00044aee l       .debug_str	00000000 
00044b47 l       .debug_str	00000000 
00044b51 l       .debug_str	00000000 
00044b59 l       .debug_str	00000000 
00044b62 l       .debug_str	00000000 
00044b55 l       .debug_str	00000000 
00044ba4 l       .debug_str	00000000 
00044bf9 l       .debug_str	00000000 
00044c36 l       .debug_str	00000000 
00044c78 l       .debug_str	00000000 
00044ccf l       .debug_str	00000000 
00044d11 l       .debug_str	00000000 
00044d69 l       .debug_str	00000000 
00044da1 l       .debug_str	00000000 
00044dad l       .debug_str	00000000 
00044dea l       .debug_str	00000000 
00044e4c l       .debug_str	00000000 
00044e8d l       .debug_str	00000000 
00044e96 l       .debug_str	00000000 
00044ef4 l       .debug_str	00000000 
00044f2d l       .debug_str	00000000 
00044f3c l       .debug_str	00000000 
00044f7b l       .debug_str	00000000 
00044f90 l       .debug_str	00000000 
00044fd6 l       .debug_str	00000000 
00018d14 l       .debug_str	00000000 
00044fe3 l       .debug_str	00000000 
0004501c l       .debug_str	00000000 
000450a8 l       .debug_str	00000000 
000450e4 l       .debug_str	00000000 
00061f06 l       .debug_str	00000000 
000450f6 l       .debug_str	00000000 
0004512e l       .debug_str	00000000 
0004513a l       .debug_str	00000000 
00045177 l       .debug_str	00000000 
000451d9 l       .debug_str	00000000 
0004521a l       .debug_str	00000000 
00045278 l       .debug_str	00000000 
000452b2 l       .debug_str	00000000 
0004530c l       .debug_str	00000000 
00045355 l       .debug_str	00000000 
00045365 l       .debug_str	00000000 
0004539e l       .debug_str	00000000 
00045420 l       .debug_str	00000000 
0004545a l       .debug_str	00000000 
000454b4 l       .debug_str	00000000 
000454ef l       .debug_str	00000000 
0004554f l       .debug_str	00000000 
0004558a l       .debug_str	00000000 
000455ea l       .debug_str	00000000 
00045628 l       .debug_str	00000000 
00045686 l       .debug_str	00000000 
000456c4 l       .debug_str	00000000 
00045722 l       .debug_str	00000000 
0004576d l       .debug_str	00000000 
00045776 l       .debug_str	00000000 
000457c5 l       .debug_str	00000000 
00000dac l       .debug_str	00000000 
000457d1 l       .debug_str	00000000 
00045802 l       .debug_str	00000000 
0004582d l       .debug_str	00000000 
0004587b l       .debug_str	00000000 
00002d23 l       .debug_str	00000000 
00045882 l       .debug_str	00000000 
000458e7 l       .debug_str	00000000 
000033f4 l       .debug_str	00000000 
00045918 l       .debug_str	00000000 
00045971 l       .debug_str	00000000 
000459c6 l       .debug_str	00000000 
000459e4 l       .debug_str	00000000 
00045a36 l       .debug_str	00000000 
00045a51 l       .debug_str	00000000 
00045a98 l       .debug_str	00000000 
00045ab4 l       .debug_str	00000000 
00045b42 l       .debug_str	00000000 
00045b8e l       .debug_str	00000000 
00045bb3 l       .debug_str	00000000 
00045bd0 l       .debug_str	00000000 
00045bfa l       .debug_str	00000000 
00045c1c l       .debug_str	00000000 
00045c2a l       .debug_str	00000000 
00045c3d l       .debug_str	00000000 
00045c48 l       .debug_str	00000000 
00045c95 l       .debug_str	00000000 
00045cda l       .debug_str	00000000 
00045d19 l       .debug_str	00000000 
00045d65 l       .debug_str	00000000 
00045df4 l       .debug_str	00000000 
00045e41 l       .debug_str	00000000 
00045ec7 l       .debug_str	00000000 
00045efb l       .debug_str	00000000 
00045f04 l       .debug_str	00000000 
00063e00 l       .debug_str	00000000 
00045f33 l       .debug_str	00000000 
00045f69 l       .debug_str	00000000 
00045f72 l       .debug_str	00000000 
00045fe6 l       .debug_str	00000000 
00046002 l       .debug_str	00000000 
00046053 l       .debug_str	00000000 
00046095 l       .debug_str	00000000 
000460bb l       .debug_str	00000000 
00046149 l       .debug_str	00000000 
0004618f l       .debug_str	00000000 
000461d6 l       .debug_str	00000000 
0004621b l       .debug_str	00000000 
0004625a l       .debug_str	00000000 
000462a0 l       .debug_str	00000000 
0004632f l       .debug_str	00000000 
00046376 l       .debug_str	00000000 
000463fc l       .debug_str	00000000 
0004641b l       .debug_str	00000000 
00046457 l       .debug_str	00000000 
00046476 l       .debug_str	00000000 
000464ab l       .debug_str	00000000 
000464b5 l       .debug_str	00000000 
00062e21 l       .debug_str	00000000 
00046520 l       .debug_str	00000000 
00046555 l       .debug_str	00000000 
0004655f l       .debug_str	00000000 
00046593 l       .debug_str	00000000 
000465a5 l       .debug_str	00000000 
0001a168 l       .debug_str	00000000 
000465d8 l       .debug_str	00000000 
00046616 l       .debug_str	00000000 
00046630 l       .debug_str	00000000 
00046656 l       .debug_str	00000000 
00046661 l       .debug_str	00000000 
0004669b l       .debug_str	00000000 
000466b9 l       .debug_str	00000000 
000466df l       .debug_str	00000000 
000466ea l       .debug_str	00000000 
00046713 l       .debug_str	00000000 
00046721 l       .debug_str	00000000 
0004675f l       .debug_str	00000000 
00046791 l       .debug_str	00000000 
000467b7 l       .debug_str	00000000 
000467da l       .debug_str	00000000 
00046814 l       .debug_str	00000000 
0004684a l       .debug_str	00000000 
00046870 l       .debug_str	00000000 
00046893 l       .debug_str	00000000 
000468bc l       .debug_str	00000000 
000468e2 l       .debug_str	00000000 
000468ee l       .debug_str	00000000 
0006959b l       .debug_str	00000000 
00046922 l       .debug_str	00000000 
0004692f l       .debug_str	00000000 
0004696c l       .debug_str	00000000 
0004697b l       .debug_str	00000000 
000469b8 l       .debug_str	00000000 
000469c7 l       .debug_str	00000000 
00034b44 l       .debug_str	00000000 
000469f9 l       .debug_str	00000000 
00046a63 l       .debug_str	00000000 
00046ad3 l       .debug_str	00000000 
00046b3a l       .debug_str	00000000 
00046b57 l       .debug_str	00000000 
00046b96 l       .debug_str	00000000 
00046bb2 l       .debug_str	00000000 
00034b06 l       .debug_str	00000000 
00046be0 l       .debug_str	00000000 
00034be2 l       .debug_str	00000000 
00046c15 l       .debug_str	00000000 
00046c51 l       .debug_str	00000000 
00046c77 l       .debug_str	00000000 
00046cb6 l       .debug_str	00000000 
00046cc6 l       .debug_str	00000000 
00046d2d l       .debug_str	00000000 
00046d39 l       .debug_str	00000000 
00046d9d l       .debug_str	00000000 
00046e04 l       .debug_str	00000000 
00046e26 l       .debug_str	00000000 
00046e5d l       .debug_str	00000000 
00046e73 l       .debug_str	00000000 
00046ec2 l       .debug_str	00000000 
00046ece l       .debug_str	00000000 
00046fa0 l       .debug_str	00000000 
00046f15 l       .debug_str	00000000 
00046f9b l       .debug_str	00000000 
00046fbf l       .debug_str	00000000 
00046ffa l       .debug_str	00000000 
0004700a l       .debug_str	00000000 
000694c3 l       .debug_str	00000000 
0004704b l       .debug_str	00000000 
00047085 l       .debug_str	00000000 
00047094 l       .debug_str	00000000 
000470cd l       .debug_str	00000000 
000470db l       .debug_str	00000000 
00047114 l       .debug_str	00000000 
00047122 l       .debug_str	00000000 
00047172 l       .debug_str	00000000 
0004717f l       .debug_str	00000000 
000471f5 l       .debug_str	00000000 
00047200 l       .debug_str	00000000 
00047212 l       .debug_str	00000000 
0004725e l       .debug_str	00000000 
0004727b l       .debug_str	00000000 
0004730f l       .debug_str	00000000 
000473a5 l       .debug_str	00000000 
00047417 l       .debug_str	00000000 
0004743d l       .debug_str	00000000 
000474dc l       .debug_str	00000000 
0004754d l       .debug_str	00000000 
00002cea l       .debug_str	00000000 
00047592 l       .debug_str	00000000 
000475f5 l       .debug_str	00000000 
00047618 l       .debug_str	00000000 
0004766c l       .debug_str	00000000 
00047683 l       .debug_str	00000000 
00015e02 l       .debug_str	00000000 
000476d0 l       .debug_str	00000000 
000476dd l       .debug_str	00000000 
00047718 l       .debug_str	00000000 
00047740 l       .debug_str	00000000 
000477a2 l       .debug_str	00000000 
00043257 l       .debug_str	00000000 
0004780b l       .debug_str	00000000 
0004a8ce l       .debug_str	00000000 
00002474 l       .debug_str	00000000 
0000247a l       .debug_str	00000000 
00002481 l       .debug_str	00000000 
00047858 l       .debug_str	00000000 
00047869 l       .debug_str	00000000 
00047879 l       .debug_str	00000000 
0000df98 l       .debug_str	00000000 
000478c4 l       .debug_str	00000000 
00047947 l       .debug_str	00000000 
00047977 l       .debug_str	00000000 
000479ff l       .debug_str	00000000 
00047a74 l       .debug_str	00000000 
00047ac7 l       .debug_str	00000000 
00047b53 l       .debug_str	00000000 
00047b8b l       .debug_str	00000000 
00047be0 l       .debug_str	00000000 
00047c11 l       .debug_str	00000000 
00047c63 l       .debug_str	00000000 
00047c91 l       .debug_str	00000000 
00047ce5 l       .debug_str	00000000 
00047d0b l       .debug_str	00000000 
00047d5f l       .debug_str	00000000 
00047d67 l       .debug_str	00000000 
00047d96 l       .debug_str	00000000 
00047da7 l       .debug_str	00000000 
00002cf2 l       .debug_str	00000000 
00047e03 l       .debug_str	00000000 
0000a227 l       .debug_str	00000000 
00047e3a l       .debug_str	00000000 
0000a934 l       .debug_str	00000000 
00047e82 l       .debug_str	00000000 
0000a2db l       .debug_str	00000000 
00047ec0 l       .debug_str	00000000 
00047f04 l       .debug_str	00000000 
00047f57 l       .debug_str	00000000 
000485b0 l       .debug_str	00000000 
00047fcf l       .debug_str	00000000 
0004801e l       .debug_str	00000000 
000480b4 l       .debug_str	00000000 
000480ce l       .debug_str	00000000 
00048107 l       .debug_str	00000000 
00048122 l       .debug_str	00000000 
00048166 l       .debug_str	00000000 
00040b49 l       .debug_str	00000000 
000481de l       .debug_str	00000000 
0004822d l       .debug_str	00000000 
000482c3 l       .debug_str	00000000 
0004830e l       .debug_str	00000000 
0004832a l       .debug_str	00000000 
00048380 l       .debug_str	00000000 
0000a36e l       .debug_str	00000000 
000483f9 l       .debug_str	00000000 
00048449 l       .debug_str	00000000 
000484e0 l       .debug_str	00000000 
00048536 l       .debug_str	00000000 
000485af l       .debug_str	00000000 
000485c7 l       .debug_str	00000000 
00048617 l       .debug_str	00000000 
000486ae l       .debug_str	00000000 
00048745 l       .debug_str	00000000 
0004877e l       .debug_str	00000000 
000489ae l       .debug_str	00000000 
000487c7 l       .debug_str	00000000 
00047006 l       .debug_str	00000000 
00048804 l       .debug_str	00000000 
00048848 l       .debug_str	00000000 
00048893 l       .debug_str	00000000 
000488d3 l       .debug_str	00000000 
000488fd l       .debug_str	00000000 
00048946 l       .debug_str	00000000 
00048955 l       .debug_str	00000000 
000489a6 l       .debug_str	00000000 
000489bd l       .debug_str	00000000 
0005315a l       .debug_str	00000000 
000646b8 l       .debug_str	00000000 
00048a24 l       .debug_str	00000000 
00048a85 l       .debug_str	00000000 
0004402c l       .debug_str	00000000 
00048aa4 l       .debug_str	00000000 
00048ab0 l       .debug_str	00000000 
00006490 l       .debug_str	00000000 
00048ab6 l       .debug_str	00000000 
00048ac0 l       .debug_str	00000000 
00048af2 l       .debug_str	00000000 
00048b02 l       .debug_str	00000000 
00048b8a l       .debug_str	00000000 
00048b93 l       .debug_str	00000000 
0000ba07 l       .debug_str	00000000 
00048c00 l       .debug_str	00000000 
00048c3f l       .debug_str	00000000 
00005734 l       .debug_str	00000000 
00005740 l       .debug_str	00000000 
0000574a l       .debug_str	00000000 
00048c4e l       .debug_str	00000000 
00048cbe l       .debug_str	00000000 
00048ce3 l       .debug_str	00000000 
00048d52 l       .debug_str	00000000 
00048d78 l       .debug_str	00000000 
00048de7 l       .debug_str	00000000 
00048e11 l       .debug_str	00000000 
00048e48 l       .debug_str	00000000 
00048e53 l       .debug_str	00000000 
00048eb4 l       .debug_str	00000000 
00048ebe l       .debug_str	00000000 
00048f15 l       .debug_str	00000000 
00048f51 l       .debug_str	00000000 
00048f70 l       .debug_str	00000000 
00048faa l       .debug_str	00000000 
00048fe5 l       .debug_str	00000000 
0004906b l       .debug_str	00000000 
000490fd l       .debug_str	00000000 
00049125 l       .debug_str	00000000 
00049161 l       .debug_str	00000000 
00015890 l       .debug_str	00000000 
0004917b l       .debug_str	00000000 
000491b7 l       .debug_str	00000000 
000491c4 l       .debug_str	00000000 
0006217d l       .debug_str	00000000 
00049202 l       .debug_str	00000000 
00049248 l       .debug_str	00000000 
000492d0 l       .debug_str	00000000 
000492e9 l       .debug_str	00000000 
00049343 l       .debug_str	00000000 
00049389 l       .debug_str	00000000 
000493a1 l       .debug_str	00000000 
00049421 l       .debug_str	00000000 
000498f5 l       .debug_str	00000000 
00049431 l       .debug_str	00000000 
00049470 l       .debug_str	00000000 
000494b0 l       .debug_str	00000000 
0004953a l       .debug_str	00000000 
00049551 l       .debug_str	00000000 
000495a2 l       .debug_str	00000000 
000495b0 l       .debug_str	00000000 
000495b5 l       .debug_str	00000000 
00049610 l       .debug_str	00000000 
00049fca l       .debug_str	00000000 
00049667 l       .debug_str	00000000 
0004969a l       .debug_str	00000000 
000496e1 l       .debug_str	00000000 
0004971b l       .debug_str	00000000 
0004974a l       .debug_str	00000000 
000497c8 l       .debug_str	00000000 
0004984c l       .debug_str	00000000 
000498d9 l       .debug_str	00000000 
000498ee l       .debug_str	00000000 
000498fe l       .debug_str	00000000 
0004994a l       .debug_str	00000000 
0004998f l       .debug_str	00000000 
00049a26 l       .debug_str	00000000 
00049a42 l       .debug_str	00000000 
00049a7b l       .debug_str	00000000 
00049a9d l       .debug_str	00000000 
00009a15 l       .debug_str	00000000 
00049b1b l       .debug_str	00000000 
00049b62 l       .debug_str	00000000 
00049b90 l       .debug_str	00000000 
00049c10 l       .debug_str	00000000 
00049c4f l       .debug_str	00000000 
00049cd9 l       .debug_str	00000000 
00049d25 l       .debug_str	00000000 
00049d43 l       .debug_str	00000000 
00049d4e l       .debug_str	00000000 
00049db0 l       .debug_str	00000000 
00049e07 l       .debug_str	00000000 
00049e94 l       .debug_str	00000000 
00049ee0 l       .debug_str	00000000 
00049f77 l       .debug_str	00000000 
00049fc1 l       .debug_str	00000000 
00049fdd l       .debug_str	00000000 
0004a037 l       .debug_str	00000000 
0004a040 l       .debug_str	00000000 
0004a09f l       .debug_str	00000000 
0004a0f6 l       .debug_str	00000000 
0004a14f l       .debug_str	00000000 
0004a164 l       .debug_str	00000000 
0004a1af l       .debug_str	00000000 
0004a1c2 l       .debug_str	00000000 
0004a20f l       .debug_str	00000000 
0004a25a l       .debug_str	00000000 
000099c7 l       .debug_str	00000000 
0004a26d l       .debug_str	00000000 
0004a282 l       .debug_str	00000000 
0004a28e l       .debug_str	00000000 
0004a2d3 l       .debug_str	00000000 
0004a32c l       .debug_str	00000000 
0004a341 l       .debug_str	00000000 
0004a38c l       .debug_str	00000000 
0004a39f l       .debug_str	00000000 
0004a3ec l       .debug_str	00000000 
0004a437 l       .debug_str	00000000 
0004a44a l       .debug_str	00000000 
0004a4ae l       .debug_str	00000000 
0004a4e7 l       .debug_str	00000000 
0004a513 l       .debug_str	00000000 
000681e8 l       .debug_str	00000000 
000635af l       .debug_str	00000000 
0004a592 l       .debug_str	00000000 
0004a598 l       .debug_str	00000000 
0004a5a1 l       .debug_str	00000000 
0004a5d9 l       .debug_str	00000000 
0004a5f6 l       .debug_str	00000000 
0004a632 l       .debug_str	00000000 
0004a64f l       .debug_str	00000000 
0004a6ab l       .debug_str	00000000 
0004a6e3 l       .debug_str	00000000 
0004a73f l       .debug_str	00000000 
000123a2 l       .debug_str	00000000 
0004a777 l       .debug_str	00000000 
0004a7b5 l       .debug_str	00000000 
0004a7d1 l       .debug_str	00000000 
0004a827 l       .debug_str	00000000 
0004a88e l       .debug_str	00000000 
0004a8c6 l       .debug_str	00000000 
0004a8d2 l       .debug_str	00000000 
0004a939 l       .debug_str	00000000 
0000adc0 l       .debug_str	00000000 
0004a978 l       .debug_str	00000000 
0004a9b1 l       .debug_str	00000000 
0004a9cc l       .debug_str	00000000 
0004aa40 l       .debug_str	00000000 
0004aa56 l       .debug_str	00000000 
0004aa4f l       .debug_str	00000000 
0004aa5f l       .debug_str	00000000 
0004aa71 l       .debug_str	00000000 
0004aabc l       .debug_str	00000000 
0004aad4 l       .debug_str	00000000 
0004aade l       .debug_str	00000000 
0004aaf5 l       .debug_str	00000000 
0004ab04 l       .debug_str	00000000 
0004ab46 l       .debug_str	00000000 
0004ab5f l       .debug_str	00000000 
0004abde l       .debug_str	00000000 
0004abfd l       .debug_str	00000000 
0004ac61 l       .debug_str	00000000 
0004acbf l       .debug_str	00000000 
0004accf l       .debug_str	00000000 
0004ad08 l       .debug_str	00000000 
0004ad1e l       .debug_str	00000000 
0004ad5e l       .debug_str	00000000 
0004ad69 l       .debug_str	00000000 
00012014 l       .debug_str	00000000 
000592b6 l       .debug_str	00000000 
00062d30 l       .debug_str	00000000 
0004ada5 l       .debug_str	00000000 
0004adba l       .debug_str	00000000 
0004adc4 l       .debug_str	00000000 
0000a0a2 l       .debug_str	00000000 
0004adc9 l       .debug_str	00000000 
0004adfa l       .debug_str	00000000 
0004ae0d l       .debug_str	00000000 
0004ae17 l       .debug_str	00000000 
0004ae34 l       .debug_str	00000000 
0004ae6f l       .debug_str	00000000 
0004aea4 l       .debug_str	00000000 
0004aed5 l       .debug_str	00000000 
0004aee9 l       .debug_str	00000000 
0004aef4 l       .debug_str	00000000 
0004af12 l       .debug_str	00000000 
0004af4d l       .debug_str	00000000 
0004af83 l       .debug_str	00000000 
0004afb4 l       .debug_str	00000000 
0004afc8 l       .debug_str	00000000 
0004b011 l       .debug_str	00000000 
0004b056 l       .debug_str	00000000 
0004b0b2 l       .debug_str	00000000 
0004b0fb l       .debug_str	00000000 
0004b140 l       .debug_str	00000000 
0001aef5 l       .debug_str	00000000 
0004b19c l       .debug_str	00000000 
0004b1ba l       .debug_str	00000000 
0004b1f5 l       .debug_str	00000000 
0004b22b l       .debug_str	00000000 
0004b25c l       .debug_str	00000000 
0004b270 l       .debug_str	00000000 
0004b27b l       .debug_str	00000000 
0004b299 l       .debug_str	00000000 
0004b2d4 l       .debug_str	00000000 
0004b30a l       .debug_str	00000000 
0004b33b l       .debug_str	00000000 
0004fe43 l       .debug_str	00000000 
0004b350 l       .debug_str	00000000 
0004b35c l       .debug_str	00000000 
0004b37b l       .debug_str	00000000 
0004b3b6 l       .debug_str	00000000 
0004b3ed l       .debug_str	00000000 
0004b41e l       .debug_str	00000000 
0004b431 l       .debug_str	00000000 
0004b43b l       .debug_str	00000000 
0004b458 l       .debug_str	00000000 
0004b493 l       .debug_str	00000000 
0004b4c8 l       .debug_str	00000000 
0004b4f9 l       .debug_str	00000000 
0004b50d l       .debug_str	00000000 
0004b518 l       .debug_str	00000000 
0004b536 l       .debug_str	00000000 
0004b571 l       .debug_str	00000000 
0004b5a7 l       .debug_str	00000000 
0004b5d8 l       .debug_str	00000000 
0004b5ec l       .debug_str	00000000 
0004b5f7 l       .debug_str	00000000 
0004b615 l       .debug_str	00000000 
0004b650 l       .debug_str	00000000 
0004b686 l       .debug_str	00000000 
0004b6f5 l       .debug_str	00000000 
0004b730 l       .debug_str	00000000 
0004b761 l       .debug_str	00000000 
0004b775 l       .debug_str	00000000 
0004b780 l       .debug_str	00000000 
0004b79e l       .debug_str	00000000 
0004b7d9 l       .debug_str	00000000 
0004b80f l       .debug_str	00000000 
0004b87e l       .debug_str	00000000 
0004b8b9 l       .debug_str	00000000 
0004b8ea l       .debug_str	00000000 
0004b8ff l       .debug_str	00000000 
0004b904 l       .debug_str	00000000 
0004b910 l       .debug_str	00000000 
0004b92f l       .debug_str	00000000 
0004b96a l       .debug_str	00000000 
0004b9a1 l       .debug_str	00000000 
0004ba10 l       .debug_str	00000000 
0004ba4c l       .debug_str	00000000 
0001cc2a l       .debug_str	00000000 
0004ba95 l       .debug_str	00000000 
0004baeb l       .debug_str	00000000 
0004bb5a l       .debug_str	00000000 
0004bbda l       .debug_str	00000000 
0004bc48 l       .debug_str	00000000 
0004bcd3 l       .debug_str	00000000 
0004bd48 l       .debug_str	00000000 
0004bd88 l       .debug_str	00000000 
0004be0b l       .debug_str	00000000 
0004be4c l       .debug_str	00000000 
00053156 l       .debug_str	00000000 
0004beb1 l       .debug_str	00000000 
0004bf60 l       .debug_str	00000000 
0004bfab l       .debug_str	00000000 
0004bfb6 l       .debug_str	00000000 
0004c011 l       .debug_str	00000000 
0004c01c l       .debug_str	00000000 
0004c063 l       .debug_str	00000000 
0004c06d l       .debug_str	00000000 
0004c0ef l       .debug_str	00000000 
0004c10c l       .debug_str	00000000 
000068a0 l       .debug_str	00000000 
0004c167 l       .debug_str	00000000 
0004c1c1 l       .debug_str	00000000 
0004c1ce l       .debug_str	00000000 
0004c240 l       .debug_str	00000000 
0004c2a4 l       .debug_str	00000000 
0004c2af l       .debug_str	00000000 
0004c328 l       .debug_str	00000000 
0004c334 l       .debug_str	00000000 
0004c3b0 l       .debug_str	00000000 
0004c3b6 l       .debug_str	00000000 
0004c3bd l       .debug_str	00000000 
0004c3f9 l       .debug_str	00000000 
00003b1c l       .debug_str	00000000 
0004c442 l       .debug_str	00000000 
0004c486 l       .debug_str	00000000 
0004c4d1 l       .debug_str	00000000 
0004c510 l       .debug_str	00000000 
0004c535 l       .debug_str	00000000 
0004c590 l       .debug_str	00000000 
0004c5f3 l       .debug_str	00000000 
0004c60e l       .debug_str	00000000 
0004c664 l       .debug_str	00000000 
0004c6d2 l       .debug_str	00000000 
0004c752 l       .debug_str	00000000 
0004c7bf l       .debug_str	00000000 
0004c84a l       .debug_str	00000000 
0004c8be l       .debug_str	00000000 
0004c8fe l       .debug_str	00000000 
0004c97f l       .debug_str	00000000 
0004c9c0 l       .debug_str	00000000 
0004ca24 l       .debug_str	00000000 
0004cad3 l       .debug_str	00000000 
0004cb1d l       .debug_str	00000000 
0004cb7c l       .debug_str	00000000 
0004cbc9 l       .debug_str	00000000 
0004cc0f l       .debug_str	00000000 
0004cc19 l       .debug_str	00000000 
0004cc52 l       .debug_str	00000000 
0004cc81 l       .debug_str	00000000 
0004cce2 l       .debug_str	00000000 
0004cd11 l       .debug_str	00000000 
0004cd4e l       .debug_str	00000000 
0004cddd l       .debug_str	00000000 
0004ce12 l       .debug_str	00000000 
0004ce98 l       .debug_str	00000000 
0004ceec l       .debug_str	00000000 
0004cf75 l       .debug_str	00000000 
000098de l       .debug_str	00000000 
0004cfc3 l       .debug_str	00000000 
0004d051 l       .debug_str	00000000 
0004d0a5 l       .debug_str	00000000 
0004d0e4 l       .debug_str	00000000 
0004d12f l       .debug_str	00000000 
0004d1b1 l       .debug_str	00000000 
0004d1cd l       .debug_str	00000000 
0004d226 l       .debug_str	00000000 
0004d27f l       .debug_str	00000000 
0004d2bc l       .debug_str	00000000 
0004d31d l       .debug_str	00000000 
0004d38e l       .debug_str	00000000 
0004d3be l       .debug_str	00000000 
0004d404 l       .debug_str	00000000 
0004d476 l       .debug_str	00000000 
0004d50a l       .debug_str	00000000 
0004d52e l       .debug_str	00000000 
0004d5aa l       .debug_str	00000000 
0004d5e4 l       .debug_str	00000000 
0004d626 l       .debug_str	00000000 
0004d6d6 l       .debug_str	00000000 
0004d715 l       .debug_str	00000000 
0004d7b8 l       .debug_str	00000000 
0004d814 l       .debug_str	00000000 
0004d871 l       .debug_str	00000000 
0004d91c l       .debug_str	00000000 
0004d955 l       .debug_str	00000000 
0004d9d1 l       .debug_str	00000000 
0004da09 l       .debug_str	00000000 
0004da15 l       .debug_str	00000000 
0004da52 l       .debug_str	00000000 
0004daaa l       .debug_str	00000000 
0004daca l       .debug_str	00000000 
0004db23 l       .debug_str	00000000 
0004db7c l       .debug_str	00000000 
0004dbd5 l       .debug_str	00000000 
0004dc2f l       .debug_str	00000000 
0004dc65 l       .debug_str	00000000 
0004dc75 l       .debug_str	00000000 
0004dc84 l       .debug_str	00000000 
0004dc8d l       .debug_str	00000000 
0004dcc4 l       .debug_str	00000000 
0004dd00 l       .debug_str	00000000 
0004dd10 l       .debug_str	00000000 
0004dd6c l       .debug_str	00000000 
0004ddce l       .debug_str	00000000 
0003ffd5 l       .debug_str	00000000 
0004de18 l       .debug_str	00000000 
0004de53 l       .debug_str	00000000 
0004de78 l       .debug_str	00000000 
0004ded7 l       .debug_str	00000000 
0004df21 l       .debug_str	00000000 
0004df5c l       .debug_str	00000000 
0004df81 l       .debug_str	00000000 
0004dfe0 l       .debug_str	00000000 
0004e049 l       .debug_str	00000000 
0004e052 l       .debug_str	00000000 
0004e089 l       .debug_str	00000000 
0004e0e5 l       .debug_str	00000000 
0004e147 l       .debug_str	00000000 
0004e1a6 l       .debug_str	00000000 
0004e205 l       .debug_str	00000000 
0004e23b l       .debug_str	00000000 
0004e24c l       .debug_str	00000000 
0004e25c l       .debug_str	00000000 
0004e266 l       .debug_str	00000000 
0004e29e l       .debug_str	00000000 
0004e2fb l       .debug_str	00000000 
0004e35e l       .debug_str	00000000 
0004e3a9 l       .debug_str	00000000 
0004e3e4 l       .debug_str	00000000 
0004e40a l       .debug_str	00000000 
0004e46a l       .debug_str	00000000 
0004e4b5 l       .debug_str	00000000 
0004e4f0 l       .debug_str	00000000 
0004e516 l       .debug_str	00000000 
0004e576 l       .debug_str	00000000 
0004e5ac l       .debug_str	00000000 
0004e5bd l       .debug_str	00000000 
0004e5cd l       .debug_str	00000000 
0004e5d7 l       .debug_str	00000000 
0004e60f l       .debug_str	00000000 
0004e66c l       .debug_str	00000000 
0004e6cf l       .debug_str	00000000 
0004e72f l       .debug_str	00000000 
0004e78f l       .debug_str	00000000 
0004e7c5 l       .debug_str	00000000 
0004e7d6 l       .debug_str	00000000 
0004e7e6 l       .debug_str	00000000 
0004e7f0 l       .debug_str	00000000 
0004e828 l       .debug_str	00000000 
0004e885 l       .debug_str	00000000 
0004e8e8 l       .debug_str	00000000 
0004e933 l       .debug_str	00000000 
0004e96e l       .debug_str	00000000 
0004e994 l       .debug_str	00000000 
0004e9f4 l       .debug_str	00000000 
0004ea3f l       .debug_str	00000000 
0004ea7a l       .debug_str	00000000 
0004eaa0 l       .debug_str	00000000 
0004eb00 l       .debug_str	00000000 
0004eb36 l       .debug_str	00000000 
0004eb47 l       .debug_str	00000000 
0004eb57 l       .debug_str	00000000 
0004eb61 l       .debug_str	00000000 
0004eb99 l       .debug_str	00000000 
0004ebf6 l       .debug_str	00000000 
0004ec59 l       .debug_str	00000000 
0004ecb9 l       .debug_str	00000000 
0004ed19 l       .debug_str	00000000 
0004ed4f l       .debug_str	00000000 
00002da0 l       .debug_str	00000000 
0004ed62 l       .debug_str	00000000 
0004ed74 l       .debug_str	00000000 
0004ed80 l       .debug_str	00000000 
0004edbb l       .debug_str	00000000 
0004ee1a l       .debug_str	00000000 
0004ee7f l       .debug_str	00000000 
0004eee1 l       .debug_str	00000000 
0004ef1c l       .debug_str	00000000 
0004ef44 l       .debug_str	00000000 
0004efa6 l       .debug_str	00000000 
0004efdc l       .debug_str	00000000 
0004efef l       .debug_str	00000000 
0004f001 l       .debug_str	00000000 
0004f00d l       .debug_str	00000000 
0004f048 l       .debug_str	00000000 
0004f088 l       .debug_str	00000000 
0004f0a5 l       .debug_str	00000000 
0004f0e9 l       .debug_str	00000000 
0004f10a l       .debug_str	00000000 
0004f14a l       .debug_str	00000000 
0004f167 l       .debug_str	00000000 
0004f1ab l       .debug_str	00000000 
0004f1cc l       .debug_str	00000000 
0004f22e l       .debug_str	00000000 
0004f295 l       .debug_str	00000000 
0004f2d0 l       .debug_str	00000000 
0004f2f3 l       .debug_str	00000000 
0004f359 l       .debug_str	00000000 
0004f394 l       .debug_str	00000000 
0004f3b6 l       .debug_str	00000000 
0004f3f1 l       .debug_str	00000000 
0004f415 l       .debug_str	00000000 
0004f450 l       .debug_str	00000000 
0004f473 l       .debug_str	00000000 
0004f4ae l       .debug_str	00000000 
0004f4d2 l       .debug_str	00000000 
0004f50d l       .debug_str	00000000 
0004f530 l       .debug_str	00000000 
0004f56b l       .debug_str	00000000 
0004f58f l       .debug_str	00000000 
0004f5da l       .debug_str	00000000 
0004f63c l       .debug_str	00000000 
0004f677 l       .debug_str	00000000 
0004f69a l       .debug_str	00000000 
0004f6e5 l       .debug_str	00000000 
0004f720 l       .debug_str	00000000 
0004f746 l       .debug_str	00000000 
0004f781 l       .debug_str	00000000 
0004f7a7 l       .debug_str	00000000 
0004f7f8 l       .debug_str	00000000 
0004f846 l       .debug_str	00000000 
0004f891 l       .debug_str	00000000 
0004f8c4 l       .debug_str	00000000 
0004f8ff l       .debug_str	00000000 
0004f924 l       .debug_str	00000000 
0004f9b0 l       .debug_str	00000000 
0004f9e4 l       .debug_str	00000000 
0004fa60 l       .debug_str	00000000 
0004faa5 l       .debug_str	00000000 
0004faf1 l       .debug_str	00000000 
0004fb54 l       .debug_str	00000000 
0004fb8f l       .debug_str	00000000 
0004fbb3 l       .debug_str	00000000 
0004fbee l       .debug_str	00000000 
0004fc15 l       .debug_str	00000000 
0004fc61 l       .debug_str	00000000 
0004fc9c l       .debug_str	00000000 
0004fcc3 l       .debug_str	00000000 
0004fd0e l       .debug_str	00000000 
0004fd5a l       .debug_str	00000000 
0004fda6 l       .debug_str	00000000 
00016f3c l       .debug_str	00000000 
0004fdf2 l       .debug_str	00000000 
0004fe40 l       .debug_str	00000000 
0004fe48 l       .debug_str	00000000 
0004feaa l       .debug_str	00000000 
0004fec7 l       .debug_str	00000000 
0004ff2f l       .debug_str	00000000 
0004ff4a l       .debug_str	00000000 
0004ffa7 l       .debug_str	00000000 
0005000a l       .debug_str	00000000 
0005006a l       .debug_str	00000000 
000500ca l       .debug_str	00000000 
0000ffd6 l       .debug_str	00000000 
00050118 l       .debug_str	00000000 
00050154 l       .debug_str	00000000 
00050177 l       .debug_str	00000000 
000501e0 l       .debug_str	00000000 
00050219 l       .debug_str	00000000 
0005028c l       .debug_str	00000000 
00050299 l       .debug_str	00000000 
00050317 l       .debug_str	00000000 
00050341 l       .debug_str	00000000 
000503ab l       .debug_str	00000000 
0005041b l       .debug_str	00000000 
00050463 l       .debug_str	00000000 
0005046c l       .debug_str	00000000 
000504cc l       .debug_str	00000000 
000504eb l       .debug_str	00000000 
00050548 l       .debug_str	00000000 
000505ab l       .debug_str	00000000 
0005060b l       .debug_str	00000000 
0005066b l       .debug_str	00000000 
000506cb l       .debug_str	00000000 
000506ea l       .debug_str	00000000 
00050735 l       .debug_str	00000000 
00050791 l       .debug_str	00000000 
000507ef l       .debug_str	00000000 
00050869 l       .debug_str	00000000 
000508ba l       .debug_str	00000000 
00050919 l       .debug_str	00000000 
00050978 l       .debug_str	00000000 
000509c0 l       .debug_str	00000000 
000509ca l       .debug_str	00000000 
00050a38 l       .debug_str	00000000 
00050a80 l       .debug_str	00000000 
00050a89 l       .debug_str	00000000 
00050ad1 l       .debug_str	00000000 
00050aec l       .debug_str	00000000 
00050b51 l       .debug_str	00000000 
00050b73 l       .debug_str	00000000 
00050be5 l       .debug_str	00000000 
00050c32 l       .debug_str	00000000 
00050c95 l       .debug_str	00000000 
00050cf5 l       .debug_str	00000000 
00050d10 l       .debug_str	00000000 
00050d73 l       .debug_str	00000000 
00050d95 l       .debug_str	00000000 
00050e07 l       .debug_str	00000000 
00050eda l       .debug_str	00000000 
00050f22 l       .debug_str	00000000 
00050f7f l       .debug_str	00000000 
00034346 l       .debug_str	00000000 
00050fbd l       .debug_str	00000000 
00035459 l       .debug_str	00000000 
00050ff8 l       .debug_str	00000000 
0005104a l       .debug_str	00000000 
000510b3 l       .debug_str	00000000 
00051143 l       .debug_str	00000000 
0005119b l       .debug_str	00000000 
000511f2 l       .debug_str	00000000 
0005123a l       .debug_str	00000000 
00051254 l       .debug_str	00000000 
000512b9 l       .debug_str	00000000 
00051313 l       .debug_str	00000000 
00051378 l       .debug_str	00000000 
000513d7 l       .debug_str	00000000 
00051437 l       .debug_str	00000000 
00051497 l       .debug_str	00000000 
000514e5 l       .debug_str	00000000 
000514ef l       .debug_str	00000000 
00051537 l       .debug_str	00000000 
00051543 l       .debug_str	00000000 
000515b7 l       .debug_str	00000000 
000515c2 l       .debug_str	00000000 
000515fe l       .debug_str	00000000 
00051625 l       .debug_str	00000000 
00051676 l       .debug_str	00000000 
00051683 l       .debug_str	00000000 
00051691 l       .debug_str	00000000 
000516a4 l       .debug_str	00000000 
000516af l       .debug_str	00000000 
000516f1 l       .debug_str	00000000 
00051706 l       .debug_str	00000000 
00051772 l       .debug_str	00000000 
000517b7 l       .debug_str	00000000 
00051831 l       .debug_str	00000000 
0005187e l       .debug_str	00000000 
000518d8 l       .debug_str	00000000 
00051952 l       .debug_str	00000000 
0005199f l       .debug_str	00000000 
00051a08 l       .debug_str	00000000 
00051a45 l       .debug_str	00000000 
00051a8f l       .debug_str	00000000 
00051af3 l       .debug_str	00000000 
00051b12 l       .debug_str	00000000 
00051b74 l       .debug_str	00000000 
00051bda l       .debug_str	00000000 
00051c5a l       .debug_str	00000000 
00051ca9 l       .debug_str	00000000 
00051d1f l       .debug_str	00000000 
00051d95 l       .debug_str	00000000 
00051e6a l       .debug_str	00000000 
00051ec7 l       .debug_str	00000000 
00051f25 l       .debug_str	00000000 
00051fa5 l       .debug_str	00000000 
00052014 l       .debug_str	00000000 
00052092 l       .debug_str	00000000 
000520e5 l       .debug_str	00000000 
00052152 l       .debug_str	00000000 
0005218d l       .debug_str	00000000 
000521fb l       .debug_str	00000000 
00052293 l       .debug_str	00000000 
00052322 l       .debug_str	00000000 
000523b0 l       .debug_str	00000000 
0005243e l       .debug_str	00000000 
0005254e l       .debug_str	00000000 
000525c2 l       .debug_str	00000000 
00052604 l       .debug_str	00000000 
0005264d l       .debug_str	00000000 
000526a7 l       .debug_str	00000000 
00052720 l       .debug_str	00000000 
0005272d l       .debug_str	00000000 
00052732 l       .debug_str	00000000 
0005279e l       .debug_str	00000000 
000527e5 l       .debug_str	00000000 
0005286f l       .debug_str	00000000 
0005288e l       .debug_str	00000000 
00052918 l       .debug_str	00000000 
0005293c l       .debug_str	00000000 
00052980 l       .debug_str	00000000 
000529e4 l       .debug_str	00000000 
00052a28 l       .debug_str	00000000 
00052a9a l       .debug_str	00000000 
00052b58 l       .debug_str	00000000 
00052bba l       .debug_str	00000000 
00052c52 l       .debug_str	00000000 
00052d01 l       .debug_str	00000000 
00052d97 l       .debug_str	00000000 
00052e2a l       .debug_str	00000000 
00052e6e l       .debug_str	00000000 
00052ec1 l       .debug_str	00000000 
00052f45 l       .debug_str	00000000 
00052fd3 l       .debug_str	00000000 
00053027 l       .debug_str	00000000 
00053038 l       .debug_str	00000000 
000530bd l       .debug_str	00000000 
00053149 l       .debug_str	00000000 
00053152 l       .debug_str	00000000 
0005315f l       .debug_str	00000000 
000531b6 l       .debug_str	00000000 
0005323b l       .debug_str	00000000 
0005328d l       .debug_str	00000000 
0005329c l       .debug_str	00000000 
000532e3 l       .debug_str	00000000 
00053347 l       .debug_str	00000000 
00053368 l       .debug_str	00000000 
000533e8 l       .debug_str	00000000 
00053453 l       .debug_str	00000000 
000534d1 l       .debug_str	00000000 
00053520 l       .debug_str	00000000 
0005357f l       .debug_str	00000000 
000535ec l       .debug_str	00000000 
00053621 l       .debug_str	00000000 
000536b9 l       .debug_str	00000000 
0005375f l       .debug_str	00000000 
000537f5 l       .debug_str	00000000 
0005387f l       .debug_str	00000000 
000538f5 l       .debug_str	00000000 
0005393e l       .debug_str	00000000 
0005399a l       .debug_str	00000000 
00053a15 l       .debug_str	00000000 
00053a81 l       .debug_str	00000000 
00053b0b l       .debug_str	00000000 
00053b4f l       .debug_str	00000000 
00053bb0 l       .debug_str	00000000 
00053bf4 l       .debug_str	00000000 
00053c78 l       .debug_str	00000000 
00053d02 l       .debug_str	00000000 
00053d54 l       .debug_str	00000000 
00053dd2 l       .debug_str	00000000 
00053e57 l       .debug_str	00000000 
00053eae l       .debug_str	00000000 
00053f2f l       .debug_str	00000000 
00053fed l       .debug_str	00000000 
0005404c l       .debug_str	00000000 
000540af l       .debug_str	00000000 
000540d4 l       .debug_str	00000000 
00054138 l       .debug_str	00000000 
00054159 l       .debug_str	00000000 
000541d9 l       .debug_str	00000000 
00054244 l       .debug_str	00000000 
000542c2 l       .debug_str	00000000 
00054311 l       .debug_str	00000000 
00054370 l       .debug_str	00000000 
000543dd l       .debug_str	00000000 
00054412 l       .debug_str	00000000 
000544aa l       .debug_str	00000000 
00054550 l       .debug_str	00000000 
000545e6 l       .debug_str	00000000 
00054670 l       .debug_str	00000000 
000546e6 l       .debug_str	00000000 
0005472f l       .debug_str	00000000 
0005478b l       .debug_str	00000000 
00054806 l       .debug_str	00000000 
00054872 l       .debug_str	00000000 
000548fc l       .debug_str	00000000 
00054940 l       .debug_str	00000000 
000549a1 l       .debug_str	00000000 
000549e5 l       .debug_str	00000000 
00054a69 l       .debug_str	00000000 
00054af3 l       .debug_str	00000000 
00054b71 l       .debug_str	00000000 
00054bf6 l       .debug_str	00000000 
00054c4d l       .debug_str	00000000 
00054cce l       .debug_str	00000000 
00054d8c l       .debug_str	00000000 
00054deb l       .debug_str	00000000 
00054e1e l       .debug_str	00000000 
00054e51 l       .debug_str	00000000 
00054e84 l       .debug_str	00000000 
00054eb7 l       .debug_str	00000000 
00054eea l       .debug_str	00000000 
00054f1d l       .debug_str	00000000 
00054f50 l       .debug_str	00000000 
00054fa4 l       .debug_str	00000000 
00054fd2 l       .debug_str	00000000 
00055026 l       .debug_str	00000000 
00055039 l       .debug_str	00000000 
0006787e l       .debug_str	00000000 
0000225e l       .debug_str	00000000 
000550ab l       .debug_str	00000000 
000550af l       .debug_str	00000000 
000550b3 l       .debug_str	00000000 
000550b7 l       .debug_str	00000000 
000550be l       .debug_str	00000000 
000550c3 l       .debug_str	00000000 
000550f8 l       .debug_str	00000000 
0005514f l       .debug_str	00000000 
00055184 l       .debug_str	00000000 
000551ca l       .debug_str	00000000 
000551ff l       .debug_str	00000000 
00055232 l       .debug_str	00000000 
00055267 l       .debug_str	00000000 
0005529b l       .debug_str	00000000 
000552d0 l       .debug_str	00000000 
0005531b l       .debug_str	00000000 
00055350 l       .debug_str	00000000 
00055369 l       .debug_str	00000000 
0005539e l       .debug_str	00000000 
000553d3 l       .debug_str	00000000 
00055408 l       .debug_str	00000000 
0005542d l       .debug_str	00000000 
00055462 l       .debug_str	00000000 
000554ed l       .debug_str	00000000 
0005552e l       .debug_str	00000000 
0005553b l       .debug_str	00000000 
0005557a l       .debug_str	00000000 
00055585 l       .debug_str	00000000 
000555c1 l       .debug_str	00000000 
000555cf l       .debug_str	00000000 
00055603 l       .debug_str	00000000 
0005563e l       .debug_str	00000000 
0005567c l       .debug_str	00000000 
0005568a l       .debug_str	00000000 
000556c3 l       .debug_str	00000000 
000556cd l       .debug_str	00000000 
00055709 l       .debug_str	00000000 
00055765 l       .debug_str	00000000 
0005576c l       .debug_str	00000000 
000557ca l       .debug_str	00000000 
000557d3 l       .debug_str	00000000 
0005583a l       .debug_str	00000000 
0005584b l       .debug_str	00000000 
000558a8 l       .debug_str	00000000 
00055907 l       .debug_str	00000000 
00055963 l       .debug_str	00000000 
000559c1 l       .debug_str	00000000 
00055a28 l       .debug_str	00000000 
00055a85 l       .debug_str	00000000 
00055ae4 l       .debug_str	00000000 
00055b1d l       .debug_str	00000000 
00055b27 l       .debug_str	00000000 
00055b8f l       .debug_str	00000000 
00055bc2 l       .debug_str	00000000 
00055bcc l       .debug_str	00000000 
00055c02 l       .debug_str	00000000 
00055c0e l       .debug_str	00000000 
00055c45 l       .debug_str	00000000 
00055c52 l       .debug_str	00000000 
00055c96 l       .debug_str	00000000 
00055cb0 l       .debug_str	00000000 
00055d21 l       .debug_str	00000000 
00055d34 l       .debug_str	00000000 
00055da5 l       .debug_str	00000000 
00055de8 l       .debug_str	00000000 
00055df2 l       .debug_str	00000000 
00055e3c l       .debug_str	00000000 
00055e83 l       .debug_str	00000000 
00055ed0 l       .debug_str	00000000 
00055f1a l       .debug_str	00000000 
00055f4c l       .debug_str	00000000 
00055f80 l       .debug_str	00000000 
00055fb9 l       .debug_str	00000000 
00055ff5 l       .debug_str	00000000 
00056007 l       .debug_str	00000000 
00056048 l       .debug_str	00000000 
000560a7 l       .debug_str	00000000 
000560d8 l       .debug_str	00000000 
000560ee l       .debug_str	00000000 
00056123 l       .debug_str	00000000 
00056180 l       .debug_str	00000000 
000561e4 l       .debug_str	00000000 
00056243 l       .debug_str	00000000 
000562a3 l       .debug_str	00000000 
00056301 l       .debug_str	00000000 
0000a51a l       .debug_str	00000000 
00056366 l       .debug_str	00000000 
000563ac l       .debug_str	00000000 
000563ec l       .debug_str	00000000 
00056474 l       .debug_str	00000000 
000642ac l       .debug_str	00000000 
000564fb l       .debug_str	00000000 
0005652e l       .debug_str	00000000 
000565a2 l       .debug_str	00000000 
0005661b l       .debug_str	00000000 
0005668f l       .debug_str	00000000 
000566ee l       .debug_str	00000000 
0005674b l       .debug_str	00000000 
000567a5 l       .debug_str	00000000 
00056801 l       .debug_str	00000000 
0005685e l       .debug_str	00000000 
000568bd l       .debug_str	00000000 
00056925 l       .debug_str	00000000 
0005698f l       .debug_str	00000000 
000569f8 l       .debug_str	00000000 
00056a56 l       .debug_str	00000000 
00056ac8 l       .debug_str	00000000 
00056acc l       .debug_str	00000000 
00056b3f l       .debug_str	00000000 
00056b9d l       .debug_str	00000000 
00056bf9 l       .debug_str	00000000 
00056c6a l       .debug_str	00000000 
00056ce0 l       .debug_str	00000000 
00056d17 l       .debug_str	00000000 
00056d77 l       .debug_str	00000000 
00056dd3 l       .debug_str	00000000 
00056e27 l       .debug_str	00000000 
00056e85 l       .debug_str	00000000 
00056ef1 l       .debug_str	00000000 
00056f46 l       .debug_str	00000000 
00056f79 l       .debug_str	00000000 
00056f87 l       .debug_str	00000000 
00056fbf l       .debug_str	00000000 
00056fd2 l       .debug_str	00000000 
00057007 l       .debug_str	00000000 
0005703d l       .debug_str	00000000 
00057098 l       .debug_str	00000000 
000570cb l       .debug_str	00000000 
000570d2 l       .debug_str	00000000 
00057114 l       .debug_str	00000000 
00057145 l       .debug_str	00000000 
00057176 l       .debug_str	00000000 
000571a9 l       .debug_str	00000000 
000571b0 l       .debug_str	00000000 
000571dd l       .debug_str	00000000 
00057218 l       .debug_str	00000000 
0005722b l       .debug_str	00000000 
0005725c l       .debug_str	00000000 
00057266 l       .debug_str	00000000 
000572c7 l       .debug_str	00000000 
0005732f l       .debug_str	00000000 
0005736c l       .debug_str	00000000 
000573ba l       .debug_str	00000000 
000573f6 l       .debug_str	00000000 
00057432 l       .debug_str	00000000 
0005746b l       .debug_str	00000000 
000574a5 l       .debug_str	00000000 
000574de l       .debug_str	00000000 
00057515 l       .debug_str	00000000 
0005754e l       .debug_str	00000000 
00057588 l       .debug_str	00000000 
000575ce l       .debug_str	00000000 
000575f1 l       .debug_str	00000000 
00057637 l       .debug_str	00000000 
0005765a l       .debug_str	00000000 
000576a3 l       .debug_str	00000000 
000576c9 l       .debug_str	00000000 
00057712 l       .debug_str	00000000 
00057738 l       .debug_str	00000000 
00057782 l       .debug_str	00000000 
000577a9 l       .debug_str	00000000 
000577f3 l       .debug_str	00000000 
0005781a l       .debug_str	00000000 
00057867 l       .debug_str	00000000 
00057891 l       .debug_str	00000000 
000578de l       .debug_str	00000000 
00057908 l       .debug_str	00000000 
0005793b l       .debug_str	00000000 
00057967 l       .debug_str	00000000 
000579bd l       .debug_str	00000000 
000579e8 l       .debug_str	00000000 
00057a40 l       .debug_str	00000000 
00057a96 l       .debug_str	00000000 
00057acf l       .debug_str	00000000 
00057ada l       .debug_str	00000000 
00057b13 l       .debug_str	00000000 
00057b1e l       .debug_str	00000000 
00057b45 l       .debug_str	00000000 
00057b7e l       .debug_str	00000000 
00057bc5 l       .debug_str	00000000 
00057bd2 l       .debug_str	00000000 
00057e21 l       .debug_str	00000000 
00057c01 l       .debug_str	00000000 
00057c41 l       .debug_str	00000000 
00057c55 l       .debug_str	00000000 
00057c97 l       .debug_str	00000000 
00057cc8 l       .debug_str	00000000 
00057cf8 l       .debug_str	00000000 
00057d29 l       .debug_str	00000000 
00057d5a l       .debug_str	00000000 
00057d8f l       .debug_str	00000000 
00057dc6 l       .debug_str	00000000 
00057dd1 l       .debug_str	00000000 
00057e11 l       .debug_str	00000000 
00057e25 l       .debug_str	00000000 
00057e61 l       .debug_str	00000000 
00057e71 l       .debug_str	00000000 
00057ea6 l       .debug_str	00000000 
00057eb0 l       .debug_str	00000000 
00057ee5 l       .debug_str	00000000 
00057eef l       .debug_str	00000000 
00057f44 l       .debug_str	00000000 
00057f8c l       .debug_str	00000000 
00057fd2 l       .debug_str	00000000 
00058019 l       .debug_str	00000000 
00058062 l       .debug_str	00000000 
000580b4 l       .debug_str	00000000 
00058106 l       .debug_str	00000000 
000581a4 l       .debug_str	00000000 
000581d5 l       .debug_str	00000000 
00058207 l       .debug_str	00000000 
00058240 l       .debug_str	00000000 
00058255 l       .debug_str	00000000 
00058290 l       .debug_str	00000000 
000582a7 l       .debug_str	00000000 
000582e5 l       .debug_str	00000000 
000582ff l       .debug_str	00000000 
00058361 l       .debug_str	00000000 
00058386 l       .debug_str	00000000 
000583e1 l       .debug_str	00000000 
000583f0 l       .debug_str	00000000 
00058465 l       .debug_str	00000000 
00058482 l       .debug_str	00000000 
000584bc l       .debug_str	00000000 
000584f9 l       .debug_str	00000000 
00058504 l       .debug_str	00000000 
0005853c l       .debug_str	00000000 
00058543 l       .debug_str	00000000 
000585c2 l       .debug_str	00000000 
00058622 l       .debug_str	00000000 
00058680 l       .debug_str	00000000 
000586de l       .debug_str	00000000 
00058716 l       .debug_str	00000000 
0005874b l       .debug_str	00000000 
00058776 l       .debug_str	00000000 
00058780 l       .debug_str	00000000 
000587b0 l       .debug_str	00000000 
000587be l       .debug_str	00000000 
00058817 l       .debug_str	00000000 
0005886a l       .debug_str	00000000 
000588e6 l       .debug_str	00000000 
0005894a l       .debug_str	00000000 
000589ae l       .debug_str	00000000 
000589e4 l       .debug_str	00000000 
000589f8 l       .debug_str	00000000 
00058a39 l       .debug_str	00000000 
00058a51 l       .debug_str	00000000 
00058b05 l       .debug_str	00000000 
00058b38 l       .debug_str	00000000 
00058b49 l       .debug_str	00000000 
00058b8f l       .debug_str	00000000 
00058b9c l       .debug_str	00000000 
00058bd9 l       .debug_str	00000000 
00058c1d l       .debug_str	00000000 
00058c5e l       .debug_str	00000000 
00058ca0 l       .debug_str	00000000 
00058caa l       .debug_str	00000000 
00058cee l       .debug_str	00000000 
00058cf9 l       .debug_str	00000000 
00058d47 l       .debug_str	00000000 
00058d95 l       .debug_str	00000000 
00058ddb l       .debug_str	00000000 
00058e23 l       .debug_str	00000000 
00058e6b l       .debug_str	00000000 
00002dad l       .debug_str	00000000 
00058ed2 l       .debug_str	00000000 
00058f2b l       .debug_str	00000000 
00058f95 l       .debug_str	00000000 
000069a7 l       .debug_str	00000000 
00058fff l       .debug_str	00000000 
0005907a l       .debug_str	00000000 
000590ef l       .debug_str	00000000 
000590fa l       .debug_str	00000000 
0005916f l       .debug_str	00000000 
0005917a l       .debug_str	00000000 
000591d1 l       .debug_str	00000000 
00059235 l       .debug_str	00000000 
00059241 l       .debug_str	00000000 
00059276 l       .debug_str	00000000 
000592b3 l       .debug_str	00000000 
000592c0 l       .debug_str	00000000 
000592f4 l       .debug_str	00000000 
0005932f l       .debug_str	00000000 
0005938b l       .debug_str	00000000 
000593e5 l       .debug_str	00000000 
00059440 l       .debug_str	00000000 
0005949a l       .debug_str	00000000 
0003e98d l       .debug_str	00000000 
000594e0 l       .debug_str	00000000 
00059546 l       .debug_str	00000000 
0005957d l       .debug_str	00000000 
00059585 l       .debug_str	00000000 
000595bd l       .debug_str	00000000 
000595c6 l       .debug_str	00000000 
000595fe l       .debug_str	00000000 
00059607 l       .debug_str	00000000 
0005963e l       .debug_str	00000000 
00059646 l       .debug_str	00000000 
0005967e l       .debug_str	00000000 
00059687 l       .debug_str	00000000 
000596bf l       .debug_str	00000000 
000596c8 l       .debug_str	00000000 
000596ff l       .debug_str	00000000 
00059707 l       .debug_str	00000000 
00059781 l       .debug_str	00000000 
000597fb l       .debug_str	00000000 
00059875 l       .debug_str	00000000 
000598f1 l       .debug_str	00000000 
0005994f l       .debug_str	00000000 
00059958 l       .debug_str	00000000 
000599b7 l       .debug_str	00000000 
00059a16 l       .debug_str	00000000 
00059a75 l       .debug_str	00000000 
00059ad5 l       .debug_str	00000000 
00059b33 l       .debug_str	00000000 
00059b92 l       .debug_str	00000000 
00059bf1 l       .debug_str	00000000 
00059c50 l       .debug_str	00000000 
00059cb0 l       .debug_str	00000000 
00059d05 l       .debug_str	00000000 
00059d5a l       .debug_str	00000000 
00059db4 l       .debug_str	00000000 
00059e0e l       .debug_str	00000000 
00059e4b l       .debug_str	00000000 
00059e85 l       .debug_str	00000000 
00059e8e l       .debug_str	00000000 
00059ec8 l       .debug_str	00000000 
00059ed1 l       .debug_str	00000000 
00059f0e l       .debug_str	00000000 
0003ffd1 l       .debug_str	00000000 
00059f47 l       .debug_str	00000000 
00059fa8 l       .debug_str	00000000 
0005a006 l       .debug_str	00000000 
0005a047 l       .debug_str	00000000 
0005a085 l       .debug_str	00000000 
0005a0c6 l       .debug_str	00000000 
0005a0ff l       .debug_str	00000000 
0005a13e l       .debug_str	00000000 
0005a17c l       .debug_str	00000000 
0005a1ba l       .debug_str	00000000 
0005a1fb l       .debug_str	00000000 
0005a23f l       .debug_str	00000000 
0005a27c l       .debug_str	00000000 
0005a2e2 l       .debug_str	00000000 
0005a349 l       .debug_str	00000000 
0005a3ac l       .debug_str	00000000 
0005a40e l       .debug_str	00000000 
0005a473 l       .debug_str	00000000 
0005a4dc l       .debug_str	00000000 
0005a542 l       .debug_str	00000000 
0005a5a8 l       .debug_str	00000000 
0005a603 l       .debug_str	00000000 
0005a66a l       .debug_str	00000000 
0005a6d5 l       .debug_str	00000000 
0005a730 l       .debug_str	00000000 
0005a78b l       .debug_str	00000000 
00034441 l       .debug_str	00000000 
0005a7d2 l       .debug_str	00000000 
0005a81a l       .debug_str	00000000 
0005a862 l       .debug_str	00000000 
0005a8aa l       .debug_str	00000000 
0005a8f3 l       .debug_str	00000000 
0005a93d l       .debug_str	00000000 
0005a984 l       .debug_str	00000000 
0005a9d7 l       .debug_str	00000000 
0005a9f2 l       .debug_str	00000000 
0005aa3a l       .debug_str	00000000 
0005aa8e l       .debug_str	00000000 
0005aad6 l       .debug_str	00000000 
0005ab2a l       .debug_str	00000000 
0005ab72 l       .debug_str	00000000 
0005abc6 l       .debug_str	00000000 
0005ac0f l       .debug_str	00000000 
0005ac64 l       .debug_str	00000000 
0005acae l       .debug_str	00000000 
0005ad06 l       .debug_str	00000000 
0005ad68 l       .debug_str	00000000 
0005adc7 l       .debug_str	00000000 
0005ae27 l       .debug_str	00000000 
0005ae87 l       .debug_str	00000000 
0005aee7 l       .debug_str	00000000 
0005af48 l       .debug_str	00000000 
0005afa7 l       .debug_str	00000000 
0005b007 l       .debug_str	00000000 
0005b067 l       .debug_str	00000000 
0005b0c7 l       .debug_str	00000000 
0005b128 l       .debug_str	00000000 
0005b185 l       .debug_str	00000000 
0005b1e0 l       .debug_str	00000000 
0005b236 l       .debug_str	00000000 
0005b294 l       .debug_str	00000000 
0005b2e8 l       .debug_str	00000000 
0005b349 l       .debug_str	00000000 
0005b3af l       .debug_str	00000000 
0005b417 l       .debug_str	00000000 
0005b47e l       .debug_str	00000000 
0005b4da l       .debug_str	00000000 
0005b53b l       .debug_str	00000000 
0005b59c l       .debug_str	00000000 
0005b5f6 l       .debug_str	00000000 
0005b650 l       .debug_str	00000000 
0005b6aa l       .debug_str	00000000 
0005b708 l       .debug_str	00000000 
0005b75c l       .debug_str	00000000 
0005b7d8 l       .debug_str	00000000 
0005b845 l       .debug_str	00000000 
0005b8c1 l       .debug_str	00000000 
0005b92a l       .debug_str	00000000 
0005b9a6 l       .debug_str	00000000 
0005ba0f l       .debug_str	00000000 
0005ba8b l       .debug_str	00000000 
0005bae5 l       .debug_str	00000000 
0005bb3e l       .debug_str	00000000 
0005bb96 l       .debug_str	00000000 
0005bbf5 l       .debug_str	00000000 
0005bc54 l       .debug_str	00000000 
0005bcb3 l       .debug_str	00000000 
0005bd13 l       .debug_str	00000000 
0005bd73 l       .debug_str	00000000 
0005bdd3 l       .debug_str	00000000 
0005be33 l       .debug_str	00000000 
0005be95 l       .debug_str	00000000 
0005bef7 l       .debug_str	00000000 
0005bf58 l       .debug_str	00000000 
0005bfba l       .debug_str	00000000 
0005c01c l       .debug_str	00000000 
0005c07d l       .debug_str	00000000 
0005c0df l       .debug_str	00000000 
0005c141 l       .debug_str	00000000 
00040015 l       .debug_str	00000000 
0005c18a l       .debug_str	00000000 
0005c1d6 l       .debug_str	00000000 
0005c1de l       .debug_str	00000000 
0005c228 l       .debug_str	00000000 
0005c273 l       .debug_str	00000000 
0005c27a l       .debug_str	00000000 
0005c2c5 l       .debug_str	00000000 
0005c310 l       .debug_str	00000000 
0005c35c l       .debug_str	00000000 
0005c3a6 l       .debug_str	00000000 
0005c3f3 l       .debug_str	00000000 
0005c43e l       .debug_str	00000000 
0005c48a l       .debug_str	00000000 
0005c4d6 l       .debug_str	00000000 
0005c522 l       .debug_str	00000000 
0005c56f l       .debug_str	00000000 
0005c5b9 l       .debug_str	00000000 
0005c606 l       .debug_str	00000000 
0005c651 l       .debug_str	00000000 
0005c69d l       .debug_str	00000000 
0005c6e9 l       .debug_str	00000000 
0005c735 l       .debug_str	00000000 
0005c782 l       .debug_str	00000000 
0005c7cc l       .debug_str	00000000 
0005c819 l       .debug_str	00000000 
0005c864 l       .debug_str	00000000 
0005c8b0 l       .debug_str	00000000 
0005c8fc l       .debug_str	00000000 
0005c948 l       .debug_str	00000000 
0005c995 l       .debug_str	00000000 
0005c9e0 l       .debug_str	00000000 
0005ca2e l       .debug_str	00000000 
0005ca7a l       .debug_str	00000000 
0005cac7 l       .debug_str	00000000 
0005cb14 l       .debug_str	00000000 
0005cb61 l       .debug_str	00000000 
0005cbaf l       .debug_str	00000000 
0005cbfa l       .debug_str	00000000 
0005cc45 l       .debug_str	00000000 
0005cc91 l       .debug_str	00000000 
0005ccdd l       .debug_str	00000000 
0005cd2a l       .debug_str	00000000 
0005cd76 l       .debug_str	00000000 
0005cdc3 l       .debug_str	00000000 
0005ce10 l       .debug_str	00000000 
0005ce6f l       .debug_str	00000000 
0005cecc l       .debug_str	00000000 
0005cf28 l       .debug_str	00000000 
0005cf86 l       .debug_str	00000000 
0005cfe3 l       .debug_str	00000000 
0005d041 l       .debug_str	00000000 
0005d09e l       .debug_str	00000000 
0005d0fc l       .debug_str	00000000 
0005d159 l       .debug_str	00000000 
0005d1b8 l       .debug_str	00000000 
0005d216 l       .debug_str	00000000 
0005d277 l       .debug_str	00000000 
0005d2d8 l       .debug_str	00000000 
0005d309 l       .debug_str	00000000 
0005d311 l       .debug_str	00000000 
0005d342 l       .debug_str	00000000 
0005d34a l       .debug_str	00000000 
0005d378 l       .debug_str	00000000 
0005d381 l       .debug_str	00000000 
0005d3e1 l       .debug_str	00000000 
0005d441 l       .debug_str	00000000 
0005d498 l       .debug_str	00000000 
0005d4eb l       .debug_str	00000000 
0005d533 l       .debug_str	00000000 
0005d568 l       .debug_str	00000000 
0005d5b0 l       .debug_str	00000000 
0005d5e9 l       .debug_str	00000000 
0005d631 l       .debug_str	00000000 
0005d63a l       .debug_str	00000000 
0005d682 l       .debug_str	00000000 
0005d6ca l       .debug_str	00000000 
0005d71f l       .debug_str	00000000 
0005d767 l       .debug_str	00000000 
0005d78b l       .debug_str	00000000 
0005d7d3 l       .debug_str	00000000 
0005d809 l       .debug_str	00000000 
0005d851 l       .debug_str	00000000 
0005d889 l       .debug_str	00000000 
0005d8d1 l       .debug_str	00000000 
0005d8e7 l       .debug_str	00000000 
0005d92f l       .debug_str	00000000 
0005d957 l       .debug_str	00000000 
0005d99f l       .debug_str	00000000 
0005d9cc l       .debug_str	00000000 
0005da14 l       .debug_str	00000000 
0005da1e l       .debug_str	00000000 
0005da66 l       .debug_str	00000000 
0005da9b l       .debug_str	00000000 
0000ff3d l       .debug_str	00000000 
0005dae3 l       .debug_str	00000000 
0005db2b l       .debug_str	00000000 
0005db47 l       .debug_str	00000000 
0005db8f l       .debug_str	00000000 
0005dbc4 l       .debug_str	00000000 
0005dc0c l       .debug_str	00000000 
0005dc54 l       .debug_str	00000000 
0005dc9c l       .debug_str	00000000 
0005dcc5 l       .debug_str	00000000 
0005dd0d l       .debug_str	00000000 
0005dd3e l       .debug_str	00000000 
0005dd86 l       .debug_str	00000000 
0005de01 l       .debug_str	00000000 
0005de49 l       .debug_str	00000000 
0005de6b l       .debug_str	00000000 
00006082 l       .debug_str	00000000 
0005deb3 l       .debug_str	00000000 
0005defb l       .debug_str	00000000 
0005df05 l       .debug_str	00000000 
0005df4d l       .debug_str	00000000 
0005df56 l       .debug_str	00000000 
0005df9e l       .debug_str	00000000 
0005dfab l       .debug_str	00000000 
0005dff3 l       .debug_str	00000000 
0005dffd l       .debug_str	00000000 
0005e045 l       .debug_str	00000000 
0005e061 l       .debug_str	00000000 
0005e0a9 l       .debug_str	00000000 
0005e0e6 l       .debug_str	00000000 
000060d3 l       .debug_str	00000000 
0005e12e l       .debug_str	00000000 
0005e176 l       .debug_str	00000000 
0005e1d3 l       .debug_str	00000000 
0005e21b l       .debug_str	00000000 
0005e263 l       .debug_str	00000000 
0005e2ab l       .debug_str	00000000 
0005e2e6 l       .debug_str	00000000 
0005e32e l       .debug_str	00000000 
0005e358 l       .debug_str	00000000 
0005e3a0 l       .debug_str	00000000 
0005e3d1 l       .debug_str	00000000 
0005e419 l       .debug_str	00000000 
0005e454 l       .debug_str	00000000 
0005e49c l       .debug_str	00000000 
0005e594 l       .debug_str	00000000 
0005e5dc l       .debug_str	00000000 
0005e603 l       .debug_str	00000000 
0005e64b l       .debug_str	00000000 
0005e693 l       .debug_str	00000000 
0005e6a2 l       .debug_str	00000000 
0005e6ea l       .debug_str	00000000 
0005e796 l       .debug_str	00000000 
0005e7de l       .debug_str	00000000 
0005e7f9 l       .debug_str	00000000 
0005e841 l       .debug_str	00000000 
0005e869 l       .debug_str	00000000 
00006031 l       .debug_str	00000000 
0005e8b1 l       .debug_str	00000000 
0005e8f9 l       .debug_str	00000000 
0005e904 l       .debug_str	00000000 
0005e94c l       .debug_str	00000000 
0005e954 l       .debug_str	00000000 
0005e99c l       .debug_str	00000000 
0005e9b2 l       .debug_str	00000000 
0005e9fa l       .debug_str	00000000 
0005ea42 l       .debug_str	00000000 
0005ea6a l       .debug_str	00000000 
0005eab2 l       .debug_str	00000000 
0005eacf l       .debug_str	00000000 
0005eb17 l       .debug_str	00000000 
0005eb3f l       .debug_str	00000000 
0005eb87 l       .debug_str	00000000 
0005ebac l       .debug_str	00000000 
0005ebf4 l       .debug_str	00000000 
0005ebfd l       .debug_str	00000000 
0005ec45 l       .debug_str	00000000 
0005ec78 l       .debug_str	00000000 
0005ecc0 l       .debug_str	00000000 
0005ecdd l       .debug_str	00000000 
0005ed25 l       .debug_str	00000000 
0005ed46 l       .debug_str	00000000 
0005ed8e l       .debug_str	00000000 
0005edd6 l       .debug_str	00000000 
0005edf2 l       .debug_str	00000000 
0005ee3a l       .debug_str	00000000 
0005ee58 l       .debug_str	00000000 
0005eea0 l       .debug_str	00000000 
0005eeab l       .debug_str	00000000 
0005eef3 l       .debug_str	00000000 
0005eefc l       .debug_str	00000000 
0005ef44 l       .debug_str	00000000 
0005ef68 l       .debug_str	00000000 
0005efb0 l       .debug_str	00000000 
0005eff8 l       .debug_str	00000000 
0005f05c l       .debug_str	00000000 
0005f0a4 l       .debug_str	00000000 
0005f0ec l       .debug_str	00000000 
0005f163 l       .debug_str	00000000 
0005f1ab l       .debug_str	00000000 
0005f1c8 l       .debug_str	00000000 
0005f210 l       .debug_str	00000000 
0005f287 l       .debug_str	00000000 
0005f2cf l       .debug_str	00000000 
0005f328 l       .debug_str	00000000 
0005f372 l       .debug_str	00000000 
0005f3bc l       .debug_str	00000000 
0005f41b l       .debug_str	00000000 
0005f478 l       .debug_str	00000000 
0005f4d1 l       .debug_str	00000000 
0005f530 l       .debug_str	00000000 
0005f58f l       .debug_str	00000000 
0005f5f0 l       .debug_str	00000000 
0005f653 l       .debug_str	00000000 
0005f6bb l       .debug_str	00000000 
0005f71d l       .debug_str	00000000 
0005f783 l       .debug_str	00000000 
0005f7e5 l       .debug_str	00000000 
0005f84a l       .debug_str	00000000 
0005f8ad l       .debug_str	00000000 
0005f909 l       .debug_str	00000000 
0005f960 l       .debug_str	00000000 
0005f9b9 l       .debug_str	00000000 
0005fa0c l       .debug_str	00000000 
0005fa68 l       .debug_str	00000000 
0005face l       .debug_str	00000000 
0005fb21 l       .debug_str	00000000 
0005fb77 l       .debug_str	00000000 
0005fbd4 l       .debug_str	00000000 
0005fc36 l       .debug_str	00000000 
0005fc8f l       .debug_str	00000000 
0005fcea l       .debug_str	00000000 
0005fd45 l       .debug_str	00000000 
0005fda0 l       .debug_str	00000000 
0005fdfd l       .debug_str	00000000 
0005fe5a l       .debug_str	00000000 
0005fea0 l       .debug_str	00000000 
0005feea l       .debug_str	00000000 
0005ff2a l       .debug_str	00000000 
0005ff67 l       .debug_str	00000000 
0005ffab l       .debug_str	00000000 
0005ffe7 l       .debug_str	00000000 
0006002b l       .debug_str	00000000 
00060074 l       .debug_str	00000000 
0006007d l       .debug_str	00000000 
000600c6 l       .debug_str	00000000 
000600cf l       .debug_str	00000000 
00060138 l       .debug_str	00000000 
00060195 l       .debug_str	00000000 
000601f8 l       .debug_str	00000000 
0006024e l       .debug_str	00000000 
000602a4 l       .debug_str	00000000 
000602fd l       .debug_str	00000000 
00060355 l       .debug_str	00000000 
000603b9 l       .debug_str	00000000 
0006043f l       .debug_str	00000000 
00060445 l       .debug_str	00000000 
000604cb l       .debug_str	00000000 
000604d1 l       .debug_str	00000000 
00060553 l       .debug_str	00000000 
000605d5 l       .debug_str	00000000 
00060658 l       .debug_str	00000000 
0006065f l       .debug_str	00000000 
000606e2 l       .debug_str	00000000 
000606e9 l       .debug_str	00000000 
0006076f l       .debug_str	00000000 
000607f5 l       .debug_str	00000000 
00060878 l       .debug_str	00000000 
000608fb l       .debug_str	00000000 
0006097d l       .debug_str	00000000 
00060a03 l       .debug_str	00000000 
00060a89 l       .debug_str	00000000 
00060b13 l       .debug_str	00000000 
00060b9b l       .debug_str	00000000 
00060c23 l       .debug_str	00000000 
00060c8b l       .debug_str	00000000 
00060cf4 l       .debug_str	00000000 
00060d5e l       .debug_str	00000000 
00060dc9 l       .debug_str	00000000 
00060e27 l       .debug_str	00000000 
00060e85 l       .debug_str	00000000 
00060ee3 l       .debug_str	00000000 
00060f42 l       .debug_str	00000000 
00060fa0 l       .debug_str	00000000 
00060fff l       .debug_str	00000000 
0006105d l       .debug_str	00000000 
000610bc l       .debug_str	00000000 
0006111b l       .debug_str	00000000 
0006117a l       .debug_str	00000000 
000611d8 l       .debug_str	00000000 
00061237 l       .debug_str	00000000 
00061296 l       .debug_str	00000000 
000612f5 l       .debug_str	00000000 
00061354 l       .debug_str	00000000 
000613b3 l       .debug_str	00000000 
00061412 l       .debug_str	00000000 
00061471 l       .debug_str	00000000 
000614d0 l       .debug_str	00000000 
0006152f l       .debug_str	00000000 
0006158e l       .debug_str	00000000 
000615ed l       .debug_str	00000000 
0006164c l       .debug_str	00000000 
000616ab l       .debug_str	00000000 
0006170a l       .debug_str	00000000 
00061769 l       .debug_str	00000000 
000617c8 l       .debug_str	00000000 
00061827 l       .debug_str	00000000 
00061886 l       .debug_str	00000000 
000618e5 l       .debug_str	00000000 
00061945 l       .debug_str	00000000 
000619a4 l       .debug_str	00000000 
00061a03 l       .debug_str	00000000 
00061a62 l       .debug_str	00000000 
00061ac2 l       .debug_str	00000000 
00061b21 l       .debug_str	00000000 
00061b80 l       .debug_str	00000000 
00061bdf l       .debug_str	00000000 
00061c3f l       .debug_str	00000000 
000149e6 l     F .text	00000012 _ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h28b985403c61fed8E
000165a4 l     F .text	0000000a _ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17he57ec37cab302575E
000165ae l     F .text	0000000c _ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17ha4d5af40e4a389ffE
00014fbe l     F .text	0000000a _ZN4core3fmt10ArgumentV110show_usize17h66188139494b9d4cE
0001648c l     F .text	000000e6 _ZN4core3fmt3num3imp7fmt_u3217h19c42a593c756fd4E
00015f38 l     F .text	00000170 _ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hfcb4a8ce4055cd12E
00014eca l     F .text	0000009e _ZN4core3fmt5Write10write_char17hb65abc09113a440eE
00014f68 l     F .text	00000024 _ZN4core3fmt5Write9write_fmt17he5afe79f8ffd6051E
00015454 l     F .text	00000032 _ZN4core3fmt9Formatter12pad_integral12write_prefix17h128bd5e3ca3e5bc3E
00014994 l     F .text	00000002 _ZN4core3ptr18real_drop_in_place17h66642d4248444ac6E
00014996 l     F .text	00000002 _ZN4core3ptr18real_drop_in_place17h70f4fbf921cd1192E
000149f8 l     F .text	00000114 _ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h24e62ae33d04dcb5E
0001efac l     O .text	0000007b _ZN4core7unicode12unicode_data15grapheme_extend17BITSET_CHUNKS_MAP17h6ed806191ee30880E
0001f027 l     O .text	000001f0 _ZN4core7unicode12unicode_data15grapheme_extend19BITSET_INDEX_CHUNKS17h50a3083496da4d24E
0001f218 l     O .text	00000458 _ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h82274b88c2f67256E
0001e570 l     O .text	00000010 _ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h59d4bb37591626e5E
00015d54 l     F .text	000000f2 _ZN4core7unicode9printable5check17hac556c3839dbb898E
00014f92 l     F .text	00000006 _ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hc8a4cdc36790d416E
00014f98 l     F .text	00000026 _ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h6dfcc0cfc5e4394aE
00014f8c l     F .text	00000006 _ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h6344e1076413cfafE
00014998 l     F .text	0000004e _ZN71_$LT$core..ops..range..Range$LT$Idx$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h2ce8d4809e3d47b7E
00000000 l    df *ABS*	00000000 semihosting_console.c
000165bc l     F .text	00000024 __semihost
000165e0 l     F .text	00000010 debugger_connected
000165f0 l     F .text	0000002e semihost_write
000166c4 l     F .text	0000001c semihosting_console_write_ch
20000ea4 l     O .bss	00000004 semihost_mbuf
200000f8 l     O .data	00000001 log_enabled
00000000 l    df *ABS*	00000000 console.c
20000ea8 l     O .bss	00000010 avail_queue
20000eb8 l     O .bss	0000000c console_write_lock
00000000 l    df *ABS*	00000000 console_fmt.c
00000000 l    df *ABS*	00000000 ticks.c
20000ec4 l     O .bss	00000001 do_ticks
00000000 l    df *ABS*	00000000 sysinit.c
00016894 l     F .text	00000006 sysinit_dflt_panic_cb
00000000 l    df *ABS*	00000000 cmsis_nvic.c
00000000 l    df *ABS*	00000000 hal_gpio.c
000168e8 l     F .text	00000050 hal_gpio_irq_handler
00016938 l     F .text	0000002c hal_gpio_irq_setup
00016964 l     F .text	0000001c hal_gpio_find_empty_slot
00016980 l     F .text	00000038 hal_gpio_find_pin
20000ec8 l     O .bss	00000040 hal_gpio_irqs
20000f08 l     O .bss	00000001 irq_setup.8906
00000000 l    df *ABS*	00000000 hal_i2c.c
00016b14 l     F .text	0000007a hal_i2c_delay_us
00016b90 l     F .text	00000024 hal_i2c_resolve
00016bb4 l     F .text	0000001c hal_i2c_convert_status
00016bd0 l     F .text	00000012 read_gpio_inbuffer
00016be2 l     F .text	000000a2 hal_i2c_clear_bus
0001f680 l     O .text	00000008 nrf52_hal_i2cs
00000000 l    df *ABS*	00000000 hal_spi.c
00016f80 l     F .text	0000006e nrf52_irqm_handler
00017008 l     F .text	00000014 hal_spi_stop_transfer
0001701c l     F .text	0000004c hal_spi_config_slave
00017068 l     F .text	000000b8 hal_spi_init_master
00017120 l     F .text	000000e0 hal_spi_config_master
0001f688 l     O .text	0000000c nrf52_hal_spis
00000000 l    df *ABS*	00000000 hal_watchdog.c
00017504 l     F .text	0000000e nrf52_hal_wdt_default_handler
00017514 l     F .text	00000020 nrf52_wdt_irq_handler
00000000 l    df *ABS*	00000000 os_fault.c
00000000 l    df *ABS*	00000000 os.c
0001772c l     F .text	00000016 os_main
20001010 l     O .bss	00004000 g_os_main_stack
20000f10 l     O .bss	00000100 g_idle_task_stack
00000000 l    df *ABS*	00000000 os_callout.c
00000000 l    df *ABS*	00000000 os_cputime.c
00000000 l    df *ABS*	00000000 os_dev.c
00017a3c l     F .text	0000005c os_dev_add
00017a98 l     F .text	00000026 os_dev_initialize
00017abe l     F .text	00000020 os_dev_init
20005010 l     O .bss	00000008 g_os_dev_list
00000000 l    df *ABS*	00000000 os_eventq.c
20005018 l     O .bss	00000010 os_eventq_main
00000000 l    df *ABS*	00000000 os_mbuf.c
00000000 l    df *ABS*	00000000 os_mempool.c
00017fe8 l     F .text	00000078 os_mempool_init_internal
00000000 l    df *ABS*	00000000 os_msys.c
000180fc l     F .text	00000010 os_msys_find_biggest_pool
0001810c l     F .text	0000002c os_msys_find_pool
00018184 l     F .text	00000044 os_msys_init_once
20005028 l     O .bss	00004900 os_msys_1_data
20009928 l     O .bss	0000000c os_msys_1_mbuf_pool
20009934 l     O .bss	0000001c os_msys_1_mempool
20000104 l     O .data	00000008 g_msys_pool_list
00000000 l    df *ABS*	00000000 os_mutex.c
00000000 l    df *ABS*	00000000 os_sanity.c
000183e0 l     F .text	00000020 os_sanity_check_list_lock
00018400 l     F .text	0000001c os_sanity_check_list_unlock
00000000 l    df *ABS*	00000000 os_sched.c
00000000 l    df *ABS*	00000000 os_sem.c
00000000 l    df *ABS*	00000000 os_task.c
00018874 l     F .text	00000018 _clear_stack
00000000 l    df *ABS*	00000000 os_time.c
00018964 l     F .text	0000004c os_deltatime
000189b0 l     F .text	0000005c os_time_tick
20009958 l     O .bss	00000030 basetod
00000000 l    df *ABS*	00000000 os_arch_arm.c
00000000 l    df *ABS*	00000000 HAL_CM4.o
00018ccc l       .text	00000000 SVC_User
00018cea l       .text	00000000 SVC_Done
00000000 l    df *ABS*	00000000 memcmp.c
00018d8c l       .text	00000000 test1
00018d80 l       .text	00000000 loop1
00018d92 l       .text	00000000 res1
00018dae l       .text	00000000 test2
00018db6 l       .text	00000000 done
00018da2 l       .text	00000000 loop2
00000000 l    df *ABS*	00000000 memcpy.c
00018dc2 l       .text	00000000 test1
00018dbe l       .text	00000000 loop1
00018dd0 l       .text	00000000 test2
00018dcc l       .text	00000000 loop2
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 tinyprintf.c
00018e3a l     F .text	000000c0 ui2a
00018efa l     F .text	00000020 i2a
00018f1a l     F .text	00000030 a2d
00018f4a l     F .text	00000036 a2i
00018f80 l     F .text	0000002a putf
00018fac l     F .text	0000011c putchw
000190c8 l     F .text	00000064 intarg
00000000 l    df *ABS*	00000000 vprintf.c
00000000 l    df *ABS*	00000000 memfile.c
00000000 l    df *ABS*	00000000 mynewt.c
0001944c l     F .text	00000004 stdin_read
00019450 l     F .text	00000010 stdout_write
2000011c l     O .data	00000004 _stdin
20000120 l     O .data	00000008 _stdin_methods
00000000 l    df *ABS*	00000000 mynewt_rust.c
00000000 l    df *ABS*	00000000 mem.c
00000000 l    df *ABS*	00000000 nrf52_my_sensor-sysinit-app.c
00000000 l    df *ABS*	00000000 hal_bsp.c
00000000 l    df *ABS*	00000000 hal_flash.c
00019500 l     F .text	00000028 nrf52k_flash_wait_ready
00019528 l     F .text	00000054 nrf52k_flash_erase_sector
0001957c l     F .text	00000004 nrf52k_flash_init
00019580 l     F .text	00000020 nrf52k_flash_sector_info
000195a0 l     F .text	000000d0 nrf52k_flash_write
00019670 l     F .text	0000000e nrf52k_flash_read
0001f840 l     O .text	0000001c nrf52k_flash_funcs
00000000 l    df *ABS*	00000000 hal_os_tick.c
00019680 l     F .text	000000d4 nrf52_timer_handler
00000000 l    df *ABS*	00000000 hal_timer.c
0001988c l     F .text	0000000a nrf_read_timer_cntr
00019898 l     F .text	000000b4 nrf_timer_set_ocmp
0001994c l     F .text	0000000a nrf_timer_disable_ocmp
00019956 l     F .text	0000000a nrf_rtc_disable_ocmp
00019960 l     F .text	00000054 hal_timer_read_bsptimer
000199b4 l     F .text	00000076 hal_timer_chk_queue
00019a2a l     F .text	0000002c hal_timer_irq_handler
0001f85c l     O .text	00000018 nrf52_hal_timers
00000000 l    df *ABS*	00000000 nrf52_periph.c
00019bf0 l     F .text	00000034 nrf52_periph_create_timers
00019c24 l     F .text	00000020 nrf52_periph_create_i2c
00019c44 l     F .text	00000020 nrf52_periph_create_spi
0001f874 l     O .text	0000000c hal_i2c1_cfg
0001f880 l     O .text	00000004 os_bsp_spi0m_cfg
00000000 l    df *ABS*	00000000 sensor_creator.c
00000000 l    df *ABS*	00000000 sensor.c
00019c78 l     F .text	00000028 sensor_mgr_remove
00019ca0 l     F .text	00000060 sensor_mgr_insert
00019d00 l     F .text	0000000a sensor_type_traits_empty
00019d0c l     F .text	0000000c sensor_mgr_evq_set
00019d46 l     F .text	0000005c sensor_read_data_func
00019da4 l     F .text	00000048 sensor_base_ts_update_event
00019dec l     F .text	00000050 sensor_up_timestamp
00019e74 l     F .text	000000a0 sensor_mgr_init
0001a0e0 l     F .text	0000007c sensor_mgr_wakeup_event
00019f3e l     F .text	00000032 sensor_update_nextrun
00019f70 l     F .text	0000001e sensor_calc_nextrun_delta
00019f90 l     F .text	00000024 sensor_find_min_nextrun_sensor
0001a068 l     F .text	0000004a sensor_mgr_poll_bytype
0001a0b2 l     F .text	0000002e sensor_poll_per_type_trait
2000998c l     O .bss	00000078 sensor_notify_evt_area
20009a04 l     O .bss	0000001c sensor_notify_evt_pool
00000000 l    df *ABS*	00000000 sensor_coap.c
20009a20 l     O .bss	00000008 oc_sem
20009a28 l     O .bss	00000001 oc_sensor_coap_ready
00000000 l    df *ABS*	00000000 sensor_network.c
20009a2c l     O .bss	0000000c hw_id
20009a38 l     O .bss	00000004 hw_id_len
20009a40 l     O .bss	00000008 sensor_node_address
20009a48 l     O .bss	00000037 sensor_node_names_buf
20000128 l     O .data	00000014 sensor_node_names
0001f898 l     O .text	0000000c COLLECTOR_NODE_HW_ID
0001f8a4 l     O .text	0000003c SENSOR_NODE_HW_IDS
0001f940 l     O .text	00000028 sensor_node_addresses
00000000 l    df *ABS*	00000000 creator.c
0001a304 l     F .text	00000050 config_device
20009a80 l     O .bss	00000014 adc_1_itf_temp_stub
20009a98 l     O .bss	000000c0 temp_stub_dev
00000000 l    df *ABS*	00000000 temp_stub.c
0001a3b0 l     F .text	00000004 temp_stub_close
0001a3b4 l     F .text	0000001c temp_stub_sensor_get_config
0001a3d0 l     F .text	00000026 temp_stub_open
0001a4ac l     F .text	0000007c temp_stub_sensor_read
0001f984 l     O .text	00000028 g_temp_stub_sensor_driver
00000000 l    df *ABS*	00000000 oc_buffer.c
0001a550 l     F .text	00000030 oc_buffer_tx
0001a580 l     F .text	0000002c oc_buffer_rx
20009b58 l     O .bss	00000018 oc_inq
20009b70 l     O .bss	00000018 oc_outq
00000000 l    df *ABS*	00000000 oc_ri.c
20009b88 l     O .bss	000000c8 oc_client_cb_area
20009c50 l     O .bss	0000001c oc_client_cb_pool
00000000 l    df *ABS*	00000000 adaptor.c
20009c6c l     O .bss	00000004 oc_evq
00000000 l    df *ABS*	00000000 ble_adaptor.c
00000000 l    df *ABS*	00000000 ip4_adaptor.c
00000000 l    df *ABS*	00000000 ip_adaptor.c
00000000 l    df *ABS*	00000000 lora_adaptor.c
00000000 l    df *ABS*	00000000 serial_adaptor.c
00000000 l    df *ABS*	00000000 oc_rep.c
20009c70 l     O .bss	0000001c oc_rep_objects
20009c8c l     O .bss	00000030 oc_rep_objects_area
00000000 l    df *ABS*	00000000 flash_map.c
0001a6d4 l     F .text	00000078 flash_map_read_mfg
20009cbc l     O .bss	00000078 mfg_areas.9056
00000000 l    df *ABS*	00000000 modlog.c
00000000 l    df *ABS*	00000000 mfg.c
0001a828 l     F .text	00000094 mfg_seek_next_aux
0001a8bc l     F .text	00000070 mfg_read_mmr
0001a92c l     F .text	00000054 mfg_read_next_mmr
0001a980 l     F .text	0000003c mfg_open_flash_area
0001a9bc l     F .text	00000044 mfg_read_tlv_body
0001aa88 l     F .text	0000004e mfg_read_mmr_refs
20009d34 l     O .bss	00000001 mfg_initialized
20009d38 l     O .bss	00000018 mfg_mmrs
20009d50 l     O .bss	00000004 mfg_num_mmrs
00000000 l    df *ABS*	00000000 support.c
00000000 l    df *ABS*	00000000 hal_flash.c
0001aaee l     F .text	0000001e hal_flash_check_addr
00000000 l    df *ABS*	00000000 nrf52_hw_id.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 aeabi_memclr.c
00000000 l    df *ABS*	00000000 aeabi_memcpy.c
00000000 l    df *ABS*	00000000 lib_a-aeabi_memset-soft.o
00000000 l    df *ABS*	00000000 nrf52_my_sensor-sysflash.c
00000000 l    df *ABS*	00000000 SVC_Table.S
00000000 l       .svc_table	00000000 SVC_End
0000c312 g     F .text	000000ba _ZN4core6option15Option$LT$T$GT$3map17hb20071b2cd92f1eeE
00008644 g     F .text	000000ba main
00012e1c g     F .text	00000040 _ZN103_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hc882d0d360c765c6E
00017d0c g     F .text	00000040 os_eventq_remove
000132f8 g     F .text	00000056 _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$4push17h754f60661e90a90bE
0000a700 g     F .text	00000006 _ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h9afc0479a1d06b9aE
0000ba5e g     F .text	0000000c _ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h59538b9869cd045bE
00018b58 g     F .text	00000018 os_arch_init
000123ca g     F .text	0000007c _ZN4core4iter6traits8iterator8Iterator3nth17h94e89f04838976dfE
000144e8 g     F .text	00000030 _ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h560ecc478561b89bE
00018d74 g     F .text	00000048 memcmp
000160a8 g     F .text	0000005e _ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u8$GT$3fmt17hd64b71df3db8c08cE
0000bbe4 g     F .text	0000001a _ZN4core6result19Result$LT$T$C$E$GT$6is_err17hf4c96e8793ee7a23E
00015488 g     F .text	000002da _ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E
00014fec g     F .text	0000021c _ZN4core3fmt5write17hbcc7905081934c36E
00013c26 g     F .text	00000012 _ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17h73cdeb4431a0dffdE
0000a706 g     F .text	0000000a _ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h9f70b45087381e01E
00011eb0 g     F .text	00000040 .hidden _ZN4core3str21_$LT$impl$u20$str$GT$5chars17h742b67cfa2d04962E
20009e70 g     O .bss	0000001c nrf52_hal_timer0
00013362 g     F .text	00000014 _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clear17h53693887508266c2E
000163b6 g     F .text	000000d6 _ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$isize$GT$3fmt17h39804a10abd3ccdeE
00019f34 g     F .text	0000000a sensor_unlock
0000dab2 g     F .text	0000006a .hidden _ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u16$GT$3fmt17hfe2fc3eeec662464E
0000b7a6 g     F .text	00000040 _ZN6mynewt4Strn6as_ptr17h94013b9b2737125bE
0001477e g     F .text	00000056 _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$4push17h1141aea5446b44ecE
0000bd88 g     F .text	00000020 _ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hde23250824a46f68E
00011c22 g     F .text	0000002e _ZN73_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hadf269ac769c1fe1E
000141e0 g     F .text	00000016 _ZN75_$LT$core..str..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h2dd188741ca33977E
0000fa9a g     F .text	000003b6 _ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE
0000b5cc g     F .text	00000004 _ZN6mynewt3hal4GPIO3new17heb9fbb7cf70124f8E
0001842c g     F .text	00000024 os_sanity_check_register
0000b076 g     F .text	0000001e _ZN4core3ptr20slice_from_raw_parts17hfaedf907ce179124E
0001a404 g     F .text	0000007c temp_stub_init
0000b172 g     F .text	00000014 _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h907d3987d88ed00aE
000184cc g     F .text	00000054 os_sched_insert
0000f6c2 g     F .text	0000000c _ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf1078bcf3a365169E
00013412 g     F .text	0000002e _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8as_slice17h94be6718d312c771E
20009d54 g     O .bss	00000001 g_silence_console
0000bc56 g     F .text	000000ba _ZN6mynewt6kernel2os9task_init17h6d03a8a1e529263dE
0000e19e g     F .text	00000262 _ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE
00008164  w    F .text	00000002 POWER_CLOCK_IRQHandler
0001ab8c g     F .text	00000034 hal_bsp_hw_id
00008164  w    F .text	00000002 NFCT_IRQHandler
0000a5aa g     F .text	0000001a _ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17hbbdc43338149cfd8E
00012282 g     F .text	0000001e .hidden _ZN4core3num21_$LT$impl$u20$u16$GT$5to_be17hf8daed3a42341b94E
00013e48 g     F .text	00000030 _ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17hf52b7ac7b97083edE
0000acb2 g     F .text	0000001a _ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hebca7f595bbd41c0E
0000c616 g     F .text	0000009e _ZN4core6option15Option$LT$T$GT$9unwrap_or17h14e245f32ab0d6aeE
0000b24c g     F .text	00000010 _ZN6mynewt3hal3SPI3new17h061d50a8162355d0E
0000c2dc g     F .text	00000010 _ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE
0000c50c g     F .text	00000026 _ZN4core6option15Option$LT$T$GT$7is_some17h5981bcdaa77e6156E
00011cf6 g     F .text	00000022 _ZN8heapless3vec16Vec$LT$T$C$N$GT$17extend_from_slice17h03dd1eb3e64396cdE
000141bc g     F .text	0000000e _ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h929a3648e5ff460fE
0000ad1a g     F .text	00000016 _ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h63f28c380e75109dE
000141ca g     F .text	00000016 _ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h29c6a57fea4db82fE
0000b25c g     F .text	00000370 _ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E
00011e7c g     F .text	00000034 .hidden _ZN4core3str21_$LT$impl$u20$str$GT$3len17h967c81645c2e5378E
0000dfaa g     F .text	000000be _ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E
2000010c g     O .data	00000008 g_os_run_list
0001a610 g     F .text	00000020 oc_send_buffer
0001657c g     F .text	0000000a _ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u16$GT$3fmt17hc285ae8ae8f8c6d5E
00014bce g     F .text	00000040 _ZN4core9panicking18panic_bounds_check17h6547e9bb7dcebe69E
00013bea g     F .text	0000002a _ZN8heapless3vec16Vec$LT$T$C$N$GT$4push17h3ed85f9e34339aa3E
00018c00 g     F .text	00000030 os_arch_start
00014c0e g     F .text	00000022 _ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E
0000bdc8 g     F .text	0000002a _ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE
000163b6 g     F .text	000000d6 _ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17hee9878b676dbf1e5E
0000a562 g     F .text	00000016 _ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h89aecf94404c8457E
0001a228 g     F .text	0000001a is_standalone_node
0000ae16 g     F .text	000000c0 _ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E
00017bf8 g     F .text	00000010 os_eventq_init
0000ebfe g     F .text	000000b4 _ZN4core6option15Option$LT$T$GT$3map17h056f7b672e5fe93bE
000145ae g     F .text	0000002e _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$12as_mut_slice17hb644b8a5c9694ef1E
00011d54 g     F .text	00000026 _ZN8heapless3vec16Vec$LT$T$C$N$GT$4push17h7bde6d5f42a64645E
0000d38c g     F .text	0000002c _ZN132_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$embedded_graphics..style..WithStyle$LT$C$GT$$GT$4fill17hf6b439f588e2dd0eE
000141f6 g     F .text	000000c0 _ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9c8db2e9c9694c09E
0000c2ec g     F .text	00000026 .hidden _ZN45_$LT$$LP$$RP$$u20$as$u20$core..fmt..Debug$GT$3fmt17h1ddca375af57cad4E
00014580 g     F .text	0000002e _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$12as_mut_slice17h7a70d44bfd847e68E
0001a15c g     F .text	00000028 init_sensor_coap
00013b60 g     F .text	0000001e _ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$5write17h4246feee8b3787a8E
0001a630 g     F .text	0000004c oc_send_multicast_message
0000d1d6 g     F .text	0000000c .hidden _ZN84_$LT$embedded_graphics..pixelcolor..rgb565..Rgb565$u20$as$u20$core..clone..Clone$GT$5clone17h562ec60a06e1c4f1E
0000c0d2 g     F .text	000000ae _ZN4core6result19Result$LT$T$C$E$GT$7map_err17h1c3ab9f9924f41efE
20009e90 g     O .bss	00000034 sensor_mgr
0000be1c g     F .text	0000002a _ZN4core3fmt10ArgumentV13new17h93c5bc3c3358d946E
00016760 g     F .text	0000002c console_dump
000185f8 g     F .text	00000078 os_sched_wakeup
000148ee g     F .text	0000006e _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17hf03f9c80d20767abE
0001aaec g     F .text	00000002 _fini
00017a30 g     F .text	0000000a os_cputime_get32
0000adee g     F .text	00000028 _ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h1f6404b74c72506bE
0000b7e6 g     F .text	00000152 _ZN6mynewt4Strn8validate17h045d7da2a7d2ba6dE
000162e0 g     F .text	000000d6 _ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$isize$GT$3fmt17h38c81698517e8ba7E
20009d55 g     O .bss	00000001 g_console_input_ignore
00018ae8 g     F .text	00000014 os_arch_ctx_sw
000087f6 g     F .text	0000028e .hidden _ZN3app7display12test_display17h08c9cf64b305749cE
0000a1a2 g     F .text	0000006e _ZN4core10intrinsics8overlaps17h86881d11c0e144f5E
00008be8 g     F .text	00000030 _ZN4core3any6TypeId2of17h2131a0487e936df0E
00012f36 g     F .text	0000003c _ZN94_$LT$core..iter..adapters..Skip$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5dfb2ac71c34bd52E
00012176 g     F .text	00000028 _ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h034cb670fef91178E
00018d36 g     F .text	0000000c SysTick_Handler
00013944 g     F .text	00000038 _ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_u6417h9f0efbcd41c695f4E
0001a19c g     F .text	00000070 get_hardware_id
0000bd48 g     F .text	00000020 _ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h4da3b8105e87aa56E
00008168 g     F .text	00000010 _sbrkInit
00012360 g     F .text	0000001a _ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hbc622ca7bdac324fE
00018e0e g     F .text	0000001c strcmp
20009d88 g     O .bss	00000050 g_idle_task
0001397c g     F .text	00000012 .hidden _ZN10st7735_lcd37_IMPL_NUM_ToPrimitive_FOR_Orientation83_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..Orientation$GT$6to_u6428_$u7b$$u7b$closure$u7d$$u7d$17h9ae575ee4543bc51E
00017be8 g     F .text	00000010 os_dev_reset
0000b9d6 g     F .text	00000088 _ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h56267881aa24c67fE
00018748 g     F .text	00000010 os_sem_init
00009346 g     F .text	0000027a .hidden _ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE
00011c6a g     F .text	0000001a _ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc8240d65537f11c4E
000166e0 g     F .text	00000070 console_printhex
00012048 g     F .text	0000001e _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17hc6674c70ef030218E
0001fa44 g       .text	00000000 __exidx_start
0000a66e g     F .text	00000092 _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hb8f72590c3536eeeE
0001a20c g     F .text	0000001c is_collector_node
0000edda g     F .text	000002be _ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E
00013cc8 g     F .text	00000030 _ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h2ff45d78d4e129a3E
00018dd6 g     F .text	00000038 memset
0001576a g     F .text	00000008 _ZN4core3fmt9Formatter15debug_upper_hex17h16c8a6c8a304dceeE
00008164  w    F .text	00000002 WDT_IRQHandler
0000aac4 g     F .text	00000052 _ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$embedded_graphics..coord..ToUnsigned$GT$11to_unsigned17hf1a2e5ff232b047aE
000104da g     F .text	00000008 .hidden _ZN4core3ptr18real_drop_in_place17h1ee024b34910d0e1E
00016670 g     F .text	00000054 console_buffer
00017c08 g     F .text	0000000a os_eventq_inited
000168a8 g     F .text	0000000c sysinit_end
00008020 g       .text	00000000 __isr_vector_start
00008164  w    F .text	00000002 TIMER3_IRQHandler
00008164  w    F .text	00000002 MWU_IRQHandler
20009f28 g       .bss	00000000 __HeapBase
0000a4e0 g     F .text	0000003e _ZN4core3ptr4read17h55db77819713da8aE
00011cc2 g     F .text	0000001a _ZN78_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h3af65208eee74861E
00016106 g     F .text	0000005e _ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i8$GT$3fmt17h46ba2fad91bd7442E
00011bb0 g     F .text	00000022 _ZN70_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h25529cf37f25b753E
0000d1c4 g     F .text	00000012 .hidden _ZN4core3ptr18real_drop_in_place17he3591a973465b7a1E
0000a9aa g     F .text	00000016 _ZN17embedded_graphics5coord14internal_coord5Coord3new17h9ba2f193635b6338E
0000b186 g     F .text	0000000c _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h012fcf8713dd6308E
0001a78c g     F .text	00000026 flash_area_read
0000ac2a g     F .text	00000016 _ZN17embedded_graphics13unsignedcoord23internal_unsigned_coord13UnsignedCoord3new17he975f5bce17d9507E
0001a6a2 g     F .text	00000002 oc_register_ip4
00013572 g     F .text	00000038 _ZN10num_traits4cast11ToPrimitive5to_u817h633c568fdabc8347E
0001a6a4 g     F .text	00000002 oc_register_ip6
0000842c g     F .text	000001d4 SystemInit
0000a800 g     F .text	0000004a _ZN22piet_embedded_graphics7display15draw_to_display17ha79c713c1ca91064E
0001ab0c g     F .text	00000028 hal_flash_init
00017bb0 g     F .text	00000036 os_dev_close
0000bc0c g     F .text	00000010 _ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE
0001f9dc g     O .text	00000048 sysflash_map_dflt
0000ab16 g     F .text	00000058 _ZN126_$LT$embedded_graphics..fonts..font12x16..Font12x16Conf$u20$as$u20$embedded_graphics..fonts..font_builder..FontBuilderConf$GT$11char_offset17h331db1cf3b02e2f7E
00010244 g     F .text	0000006a _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h03c1b8f1936c1449E
0000c980 g     F .text	0000000a _ZN122_$LT$embedded_graphics..primitives..rectangle..Rectangle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17he5f1ada0d1660827E
000194f4 g     F .text	0000000c hal_bsp_init
00012f72 g     F .text	0000001a _ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h3fb04b13b5ec248cE
0000a130 g     F .text	00000072 _ZN4core10intrinsics23is_aligned_and_not_null17hf0949c1f3432943dE
00013bc8 g     F .text	00000022 _ZN8heapless3vec16Vec$LT$T$C$N$GT$17extend_from_slice17hc38f9607903b3f32E
0000de00 g     F .text	0000003c _ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10write_word17h9425c98edeed7397E
00011d9e g     F .text	0000002c _ZN93_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hde6c4b3aab66bceaE
00008164  w    F .text	00000002 SWI0_EGU0_IRQHandler
0001aee8 g     F .text	00000004 __aeabi_memcpy4
0000db3a g     F .text	0000004a _ZN22piet_embedded_graphics7display15draw_to_display17hde7134b7e3c479b2E
0001734c g     F .text	0000002c hal_spi_set_txrx_cb
0001aee0 g     F .text	00000006 __aeabi_memclr8
000086fe g     F .text	000000f8 rust_begin_unwind
20009d58 g     O .bss	00000004 console_is_midline
0001aee0 g     F .text	00000006 __aeabi_memclr4
000080f8 g       .text	00000000 __isr_vector_end
0000ebc6 g     F .text	00000038 _ZN10st7735_lcd37_IMPL_NUM_ToPrimitive_FOR_Orientation83_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..Orientation$GT$6to_u6417hf5ae6585366f351aE
00016e44 g     F .text	0000013c hal_i2c_master_read
0000a5da g     F .text	00000094 _ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2f0c22a5b5fe2588E
00014978 g     F .text	00000010 .hidden _ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17he06d1fcd7b341624E
000122e8 g     F .text	0000002e .hidden _ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17h67ee851dbf84985eE
0001912c g     F .text	0000025c tfp_format
00011d18 g     F .text	0000001e _ZN8heapless3vec16Vec$LT$T$C$N$GT$3new17h34731c8dc462e1a2E
0000b1d0 g     F .text	0000007c _ZN4core6option15Option$LT$T$GT$9unwrap_or17hc2347d9007cef407E
0001a000 g     F .text	00000068 sensor_read
0000c714 g     F .text	0000026c _ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE
00013482 g     F .text	00000014 _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8capacity17hba5250b1ad301f74E
0001aee8 g     F .text	00000004 __aeabi_memcpy
0001aee8 g     F .text	00000004 __aeabi_memcpy8
000130ec g     F .text	00000068 _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17ha1430f0b0f6ac01fE
20009ec4 g     O .bss	00000020 st_up_osco
00018c30 g     F .text	0000005c os_arch_os_start
00016164 g     F .text	000000be _ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u16$GT$3fmt17h8d8b7b58f92b2a52E
00019fe2 g     F .text	0000001e sensor_init
20000000 g       .bss	00000000 _ram_start
0000d0f8 g     F .text	00000008 .hidden _ZN4core3ptr18real_drop_in_place17h1678ce5edb78514cE
00018a58 g     F .text	00000026 os_time_delay
0000aa32 g     F .text	00000092 _ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E
00008b82 g     F .text	00000030 _ZN31_$LT$dyn$u20$core..any..Any$GT$12downcast_ref17h01e03a6ac4733065E
0001219e g     F .text	000000c2 _ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9833ca70ef8b4c89E
0001a6a0 g     F .text	00000002 oc_register_gatt
0001ab88 g     F .text	00000004 hal_bsp_hw_id_len
000179f0 g     F .text	00000034 os_callout_wakeup_ticks
000159b0 g     F .text	00000044 _ZN4core5slice20slice_index_len_fail17h8346664e6cc144e9E
00017d66 g     F .text	00000026 os_mqueue_get
00016c84 g     F .text	00000098 hal_i2c_init
00015208 g     F .text	0000024c _ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E
00008164  w    F .text	00000002 TIMER4_IRQHandler
00013a9a g     F .text	0000002e .hidden _ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17h1ec8abe4e9cc3871E
000186f8 g     F .text	00000022 os_sched
00008164  w    F .text	00000002 SPIM2_SPIS2_SPI2_IRQHandler
2000fe50 g       *ABS*	000001b0 __StackLimit
0001007c g     F .text	00000050 _ZN22piet_embedded_graphics5batch9to_blocks17h64332cb963ed6cb9E
0000c086 g     F .text	0000004c _ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h3f4d72a8eb60b230E
00013eda g     F .text	00000016 _ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hdb831d5e1fe0a122E
00019d18 g     F .text	0000002e sensor_mgr_match_bytype
0000ed66 g     F .text	00000012 .hidden _ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_u6428_$u7b$$u7b$closure$u7d$$u7d$17h2362b1dfd7549143E
00018234 g     F .text	00000014 os_mutex_init
0000beba g     F .text	0000002e _ZN6mynewt3sys7console6buffer17h5d231792a5c05dc5E
0001482a g     F .text	0000002e _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8as_slice17hfbfd13bfb0e1955bE
0001346e g     F .text	00000014 _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8capacity17h74febb62c2e95899E
20009d60 g     O .bss	00000028 nrf52_hal_spi0
00008614 g     F .text	00000002 _init
00000020 g       *ABS*	00000000 _imghdr_size
00008164  w    F .text	00000002 RTC1_IRQHandler
0000f720 g     F .text	0000001c .hidden _ZN4core3ptr18real_drop_in_place17h3d1f55fb40845f1dE
0000f44e g     F .text	000001c6 _ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E
00008164  w    F .text	00000002 PDM_IRQHandler
00008164  w    F .text	00000002 CCM_AAR_IRQHandler
00014988 g     F .text	0000000c .hidden _ZN4core5clone5impls51_$LT$impl$u20$core..clone..Clone$u20$for$u20$u8$GT$5clone17ha9b310a840f5f5a4E
00008164  w    F .text	00000002 SWI3_EGU3_IRQHandler
2000011c g       .data	00000000 __aeabi_unwind_cpp_pr0
000181d8 g     F .text	00000028 os_msys_get_pkthdr
0001a480 g     F .text	0000002c temp_stub_get_raw_temperature
00018670 g     F .text	0000003c os_sched_os_timer_exp
00011d8c g     F .text	00000012 _ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17hfc6c59a7d142150bE
00015798 g     F .text	000000c8 _ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17h78e97941b68807b1E
00017ae0 g     F .text	00000040 os_dev_create
000102ae g     F .text	0000000c _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17habc49aefb85471bcE
00010508 g     F .text	0000000c _ZN64_$LT$mynewt..result..MynewtError$u20$as$u20$core..fmt..Debug$GT$3fmt17hd546b12d711fd5d8E
00008164  w    F .text	00000002 SWI4_EGU4_IRQHandler
0001841c g     F .text	00000010 os_sanity_check_init
0000eda2 g     F .text	00000038 .hidden _ZN4core3fmt9Arguments6new_v117h17809a6a6cc532d9E
00013eb6 g     F .text	0000000a _ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h87bc43ad826ab7a0E
00008164  w    F .text	00000002 SAADC_IRQHandler
00011ef0 g     F .text	00000024 .hidden _ZN75_$LT$core..str..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h352f4b6bf2822697E
00017a24 g     F .text	0000000c os_cputime_init
00017cf4 g     F .text	00000018 os_eventq_run
0000b0ae g     F .text	0000001a _ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h4da87e0ab10595f1E
00014970 g     F .text	00000004 .hidden _ZN64_$LT$typenum..bit..B0$u20$as$u20$typenum..marker_traits..Bit$GT$5to_u817h83f5bc3d5e19564cE
00018200 g     F .text	00000034 os_msys_init
00018ade g     F .text	0000000a timer_handler
000135ac g     F .text	00000398 _ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E
00013d28 g     F .text	00000030 _ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h7a9c2e0c71a7bcc0E
00008c3c g     F .text	00000028 _ZN119_$LT$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$embedded_graphics..style..WithStyle$LT$C$GT$$GT$4fill17h8f96637f6f0bad54E
0000b730 g     F .text	00000002 _ZN6mynewt3hal5Delay3new17hb3a101f6006940a4E
000080f8 g     F .text	0000005c Reset_Handler
00008020 g       .text	000000d8 __isr_vector
00014b0e g     F .text	00000038 _ZN4core6option13expect_failed17ha956789ed39c5576E
0000bb74 g     F .text	00000028 _ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h51752f763eb6dbcdE
00019388 g     F .text	00000008 vfprintf
00014644 g     F .text	00000068 _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17h9b4cc1eaaf69cbc4E
0000d0da g     F .text	0000001e .hidden _ZN4core3ops8function6FnOnce9call_once17h4a4bbb1195412553E
000141b6 g     F .text	00000006 _ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h54e18c0ae376abfdE
00017e06 g     F .text	00000036 os_mbuf_get_pkthdr
0000f7dc g     F .text	000002be _ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE
00008164  w    F .text	00000002 PWM0_IRQHandler
00000000 g       .svc_table	00000000 SVC_Count
0000db84 g     F .text	00000038 _ZN10num_traits4cast11ToPrimitive5to_u817he21802d3bdadd71bE
00008bb2 g     F .text	00000036 _ZN31_$LT$dyn$u20$core..any..Any$GT$2is17h93e5f8e6e1177df6E
0000a84a g     F .text	0000001a _ZN4core3cmp3Ord3max17h4b764015646cfe72E
0000b192 g     F .text	0000003e _ZN4core6option15Option$LT$T$GT$6unwrap17h2f8655bc50e8a035E
0001210c g     F .text	0000000c _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hed615d24ba34d680E
00018b0e g     F .text	0000000a os_arch_in_critical
00012758 g     F .text	00000050 _ZN22piet_embedded_graphics5batch9to_blocks17h87470b8860c6829eE
000184bc g     F .text	00000010 os_sanity_init
0000d2a2 g     F .text	0000005e _ZN127_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$embedded_graphics..transform..Transform$GT$9translate17h1443ba0fd8ad8bf5E
00013a52 g     F .text	00000048 .hidden _ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17hc8f9824cf921e64fE
0000c3cc g     F .text	0000002a _ZN4core6option15Option$LT$T$GT$6as_ref17h79a8461e0a72edefE
00013e78 g     F .text	0000001a _ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hfdc04c931b4d8a66E
0000ad7a g     F .text	0000003e _ZN4core6option15Option$LT$T$GT$6unwrap17h255bcb8f00b38aa5E
00010226 g     F .text	0000001e _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h73f0c20fb8309e98E
00013376 g     F .text	0000004e _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clone17h332c8b5925589cb8E
000175d0 g     F .text	0000004c __assert_func
00008164  w    F .text	00000002 SWI1_EGU1_IRQHandler
000180a6 g     F .text	0000001e os_memblock_put_from_cb
00018c90 g     F .text	00000014 os_set_env
20009e4c g     O .bss	00000004 g_os_last_ctx_sw_time
00011bd2 g     F .text	00000022 _ZN70_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hca8a7b49119f2322E
00016840 g     F .text	00000048 console_printf
0000a726 g     F .text	0000001a _ZN53_$LT$T$u20$as$u20$core..convert..TryFrom$LT$U$GT$$GT$8try_from17h220b143d0d620a81E
00014b46 g     F .text	0000004a _ZN4core6option18expect_none_failed17h2665e7008169a3baE
00016586 g     F .text	00000014 _ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17hab38770a21c0711cE
0000dbbc g     F .text	000000b8 _ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset17h417af0e2179c30e3E
00009304 g     F .text	00000042 _ZN22piet_embedded_graphics7display15draw_to_display17h0222e512a4ab9d16E
00018ca4 g     F .text	00000006 os_arch_init_task_stack
0001aa78 g     F .text	00000010 mfg_open
0001659a g     F .text	0000000a _ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h76e87fee82ab7b9eE
0001018c g     F .text	00000006 _ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E
0001a5d4 g     F .text	00000030 oc_ri_mem_init
0000b732 g     F .text	0000005a _ZN87_$LT$mynewt..hal..Delay$u20$as$u20$embedded_hal..blocking..delay..DelayMs$LT$u8$GT$$GT$8delay_ms17h6a8836e3001d2629E
000194e4 g     F .text	00000010 hal_bsp_flash_dev
0001a7b4 g     F .text	00000070 flash_map_init
20009e60 g     O .bss	00000004 g_os_time
0000d3b8 g     F .text	0000002c _ZN132_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$embedded_graphics..style..WithStyle$LT$C$GT$$GT$6stroke17h71ea3868a8d4ad98E
00013496 g     F .text	0000006e _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17h0097793e247b2fd6E
000122a0 g     F .text	00000048 .hidden _ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h02a1c8bc393706ceE
0000c98a g     F .text	0000002c _ZN125_$LT$embedded_graphics..primitives..rectangle..Rectangle$LT$C$GT$$u20$as$u20$embedded_graphics..style..WithStyle$LT$C$GT$$GT$4fill17hd11fd98104fc2f64E
00010514 g     F .text	00000a8a _ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE
00013028 g     F .text	0000002e _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$12as_mut_slice17h423181f0fc191f3bE
00018d42 g     F .text	0000001e os_default_irq_asm
0001761c g     F .text	00000098 os_default_irq
200000e4 g     O .data	00000004 SystemCoreClock
000143ea g     F .text	0000006e _ZN4core10intrinsics8overlaps17h7598687d5e04a320E
00017284 g     F .text	00000068 hal_spi_disable
0000c708 g     F .text	0000000c .hidden _ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u16$GT$5clone17h80d7c832b773feaeE
0001300a g     F .text	0000001e _ZN8heapless3vec43_$LT$impl$u20$heapless..i..Vec$LT$A$GT$$GT$3new17hf28c8bb9ce5859bfE
0001a6a6 g     F .text	00000002 oc_register_lora
00017e88 g     F .text	000000a8 os_mbuf_append
0001a354 g     F .text	0000005c temp_stub_create
0001ab34 g     F .text	00000054 hal_flash_read
0000af48 g     F .text	0000006e _ZN4core10intrinsics8overlaps17hdbd43f1750f1eb8aE
00016620 g     F .text	00000048 console_flush
00017870 g     F .text	0000001a os_start
00015a38 g     F .text	0000031c _ZN4core3str16slice_error_fail17hcca866e859bef9ccE
00014b46 g     F .text	0000004a _ZN4core6result13unwrap_failed17he78bd064666b762dE
000146ac g     F .text	000000d2 _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h1f7d0b76fcd4eec8E
00019a68 g     F .text	00000060 hal_timer_init
00019460 g     F .text	00000010 rust_sysinit
0000be46 g     F .text	0000002a _ZN4core3fmt10ArgumentV13new17hd6e40bd932949712E
00008164  w    F .text	00000002 I2S_IRQHandler
00016750 g     F .text	00000010 console_printint
00011f14 g     F .text	00000094 _ZN4core5slice14from_raw_parts17hac284bbd2a634d55E
0001871c g     F .text	0000002c os_sched_resort
0000a366 g     F .text	00000034 _ZN4core3ptr19swap_nonoverlapping17habe759a44b1cb244E
0000dc88 g     F .text	0000000a _ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset28_$u7b$$u7b$closure$u7d$$u7d$17hd3eab0c385045c33E
0001f81c g     O .text	00000008 MemFile_methods
00019434 g     F .text	00000018 fmemopen_w
00012066 g     F .text	00000014 _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hec67cb8a299117cdE
00017200 g     F .text	00000038 hal_spi_config
0000f614 g     F .text	0000005e _ZN22piet_embedded_graphics5batch7to_rows17ha1917c028f38342aE
0001aedc  w    F .text	00000002 .hidden __aeabi_ldiv0
000180ec g     F .text	00000010 os_mempool_module_init
000186ec g     F .text	0000000c os_sched_next_task
00013d88 g     F .text	00000030 _ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h8ee361872c582e57E
000100d8 g     F .text	00000012 .hidden _ZN4core3ptr18real_drop_in_place17h07ec28ccd91f0e6bE
00016a3e g     F .text	00000034 hal_gpio_read
00011c50 g     F .text	0000001a _ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6f8a869eff6f2bb3E
000178c4 g     F .text	0000001a os_callout_init
00014c30 g     F .text	0000015c _ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E
000181c8 g     F .text	00000010 os_msys_reset
0000bbfe g     F .text	0000000e _ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9e096e948ad28d6eE
00012446 g     F .text	0000001a _ZN4core4iter6traits8iterator8Iterator4skip17he38dcab674d2207aE
00019390 g     F .text	00000024 printf
00008156  w    F .text	00000002 HardFault_Handler
0001abe0 g     F .text	00000000 .hidden __aeabi_uldivmod
00018a80 g     F .text	00000038 os_gettimeofday
00012520 g     F .text	0000000c _ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2be0a647423ea656E
000167cc g     F .text	0000001e console_write
00013b94 g     F .text	0000001a _ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h277d208a5f1142a9E
00017750 g     F .text	00000070 os_init_idle_task
00018b70 g     F .text	0000008c os_arch_os_init
0000bd10 g     F .text	00000038 .hidden _ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E
0000b796 g     F .text	00000010 _ZN6mynewt7sysinit17hb099e153a8a301aeE
000177c0 g     F .text	000000b0 os_init
20009e38 g     O .bss	00000008 g_os_mempool_list
000104b8 g     F .text	00000022 _ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h1974a3e150d0d375E
00008184 g     F .text	00000010 hal_debugger_connected
0001015e g     F .text	0000001c .hidden _ZN4core3ptr18real_drop_in_place17hb92333ffd4b39684E
000167c8 g     F .text	00000004 semihosting_console_init
00008c32 g     F .text	0000000a _ZN116_$LT$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfaf6e8aae9dccdb2E
0001334e g     F .text	00000014 _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clear17h08f42ada9e8c2da3E
00012e5c g     F .text	0000000e _ZN90_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hb142eb468439cd19E
0001aa12 g     F .text	0000001a mfg_seek_next_with_type
00018300 g     F .text	000000e0 os_mutex_pend
00010fd8 g     F .text	00000094 _ZN6mynewt3spi25spi_noblock_write_command17h2769e08b4f7b5ba8E
00008164  w    F .text	00000002 COMP_LPCOMP_IRQHandler
00011e7a g     F .text	00000002 _ZN77_$LT$core..marker..PhantomData$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17h4cc5371e08991940E
00016a1c g     F .text	00000022 hal_gpio_write
000124a0 g     F .text	0000001e _ZN4core3ptr24slice_from_raw_parts_mut17h23a5c97e9f46f4a9E
00016222 g     F .text	000000be _ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u16$GT$3fmt17h8ed9465163576d6aE
00008600 g     F .text	00000014 _start
000162e0 g     F .text	000000d6 _ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u32$GT$3fmt17hb614a91ddb658eb3E
0000e458 g     F .text	00000706 _ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E
0001aad8 g     F .text	00000014 __wrap_coap_receive
20009d5c g     O .bss	00000001 sysinit_active
00014ba2 g     F .text	0000002c _ZN4core9panicking5panic17h8da07452522b21beE
00019404 g     F .text	0000002e memfile_write
0001aedc  w    F .text	00000002 .hidden __aeabi_idiv0
000142b6 g     F .text	000000c2 _ZN4core10intrinsics19copy_nonoverlapping17h6c37ccc604552341E
00017744 g     F .text	0000000c os_started
0000bfb4 g     F .text	00000028 _ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h6eebeb2a9c50ab48E
0000bc26 g     F .text	00000014 _ZN6mynewt6kernel2os10eventq_run17h9194563dcf3a5798E
0001a5ac g     F .text	00000028 oc_buffer_init
0000a710 g     F .text	00000016 _ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hd055859231afaea2E
20009e40 g     O .bss	0000000c g_os_sanity_check_mu
00014b0c g     F .text	00000002 _ZN63_$LT$core..ffi..VaListImpl$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2e0046197fcff935E
0000ba88 g     F .text	000000b8 _ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h707b985404f74db1E
00008164  w    F .text	00000002 UARTE0_UART0_IRQHandler
00012fbe g     F .text	00000016 _ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h9c1881d8c7d72ca4E
00014d8c g     F .text	000000e6 _ZN4core3fmt8builders10DebugTuple5field17h0b2f5267a2ac1347E
0000a586 g     F .text	0000000a _ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7de4bdc3a85a3480E
0000d030 g     F .text	00000048 _ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hd2cf853b3d660756E
00008c18 g     F .text	0000001a _ZN54_$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$12downcast_ref17hf0e6773b96628c70E
0001aee0 g     F .text	00000006 __aeabi_memclr
0001aeec g     F .text	0000009a __aeabi_memset4
0000a39a g     F .text	0000004e _ZN4core3ptr23swap_nonoverlapping_one17hf32c6cc1246ccb2eE
0000ad30 g     F .text	0000000c _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h38df1a24a1544322E
0001237a g     F .text	0000001e _ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$5write17hc9dc45cef6ac5c46E
00012158 g     F .text	0000001e _ZN4core5slice87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h5098eed5a9d9f67cE
0000bb40 g     F .text	0000001e _ZN4core3ptr24slice_from_raw_parts_mut17hb2c3a5ddaeb065c8E
0000ad3c g     F .text	0000001e _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h459978f2c2e84b39E
00013c98 g     F .text	00000030 _ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h2210a8a7d93c4d1eE
00016222 g     F .text	000000be _ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i16$GT$3fmt17h41ec04e122043a13E
00018a18 g     F .text	00000040 os_time_advance
000104fe g     F .text	0000000a _ZN83_$LT$mynewt..result..MynewtError$u20$as$u20$core..convert..From$LT$$LP$$RP$$GT$$GT$4from17heb2793981fcdfe68E
00017238 g     F .text	0000004c hal_spi_enable
0001106c g     F .text	0000009e _ZN6mynewt3spi22spi_noblock_write_data17h5f91a9651edf2767E
0001aa40 g     F .text	00000038 mfg_init
0000adc6 g     F .text	00000028 _ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h82016ab240bc76c1E
20009dd8 g     O .bss	00000050 g_os_main_task
000163b6 g     F .text	000000d6 _ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17hde0faf7a053167a3E
0001aeec g     F .text	0000009a __aeabi_memset8
00014b96 g     F .text	00000008 _ZN4core5panic9PanicInfo7payload17h1dcd60ea4ae3e073E
0000ddc2 g     F .text	0000003e _ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10write_data17h49eeae9c2696d77cE
000104ea g     F .text	00000014 _ZN78_$LT$mynewt..result..MynewtError$u20$as$u20$core..convert..From$LT$i32$GT$$GT$4from17h1152819df320558fE
00012f8c g     F .text	00000016 _ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4read17ha30847483b011195E
0001fa5c g       .ARM.exidx	00000000 __exidx_end
00008164  w    F .text	00000002 PWM1_IRQHandler
000144b8 g     F .text	00000030 _ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h3b394a0cab6101e2E
000168b4 g     F .text	00000034 NVIC_Relocate
0001689c g     F .text	0000000c sysinit_start
0000e068 g     F .text	00000136 _ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E
00014974 g     F .text	00000004 .hidden _ZN64_$LT$typenum..bit..B1$u20$as$u20$typenum..marker_traits..Bit$GT$5to_u817h1ff049713abe6e29E
00013226 g     F .text	000000d2 _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17hdd6ea2e2d6dd3eeaE
0001f828 g     O .text	00000018 nrf52k_flash_dev
00019ac8 g     F .text	000000f8 hal_timer_config
000193f0 g     F .text	00000014 vprintf
00016668 g     F .text	00000008 disable_buffer
20009e28 g     O .bss	00000004 g_os_started
2000013c g       .bssnz	00000000 __bssnz_end__
00017b4c g     F .text	00000020 os_dev_lookup
000175ac g     F .text	00000010 hal_watchdog_enable
20009e64 g     O .bss	0000000c g_hal_os_tick
00013de8 g     F .text	00000030 _ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17hc3f12fa243921862E
000102d8 g     F .text	00000048 _ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h85a8102dace1a780E
0001033a g     F .text	0000006a .hidden _ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17hf025f1216eed7986E
00015860 g     F .text	00000150 _ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE
00018b08 g     F .text	00000006 os_arch_restore_sr
0001791c g     F .text	00000078 os_callout_reset
0001aa2c g     F .text	0000000a mfg_read_tlv_flash_area
0000bd68 g     F .text	00000020 _ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha74be5221311de7aE
00010320 g     F .text	0000001a .hidden _ZN4core3cmp5impls53_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u8$GT$2eq17h798287cdaf387aa6E
0000b700 g     F .text	00000018 _ZN74_$LT$mynewt..hal..GPIO$u20$as$u20$embedded_hal..digital..v2..OutputPin$GT$7set_low17h02e71d0e38f23a59E
200001f4 g     O .bss	00000018 _ZN22piet_embedded_graphics7display7DISPLAY17h9e94e3afb1a42414E
0000815a  w    F .text	00000002 BusFault_Handler
0000bb5e g     F .text	00000016 _ZN4core3ptr5write17hb115c52c9adc8ae7E
0000c57e g     F .text	00000098 _ZN4core6option15Option$LT$T$GT$8and_then17h104a7692ca71586eE
00017d54 g     F .text	00000012 os_mqueue_init
00008b3e g     F .text	00000044 _ZN4core6option15Option$LT$T$GT$6unwrap17h17b48f2708c41376E
0000beb0 g     F .text	0000000a _ZN6mynewt3sys7console20get_dispatch_address17h0de14095a4bda617E
0000a5c4 g     F .text	00000016 _ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h7fad1dca5685abbcE
0001a3f6 g     F .text	0000000e temp_stub_default_cfg
0000c9b6 g     F .text	0000008a _ZN126_$LT$$RF$embedded_graphics..primitives..rectangle..Rectangle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd969f481dbd1d97bE
0000a9c0 g     F .text	00000072 _ZN89_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..arith..Add$GT$3add17he82618689c46e7bdE
0001001e g     F .text	0000005e _ZN22piet_embedded_graphics5batch7to_rows17h25c5b99153e6c809E
0000c558 g     F .text	00000026 _ZN4core6option15Option$LT$T$GT$7is_some17hb67f5a76f0918df9E
0000ac40 g     F .text	00000072 _ZN4core10intrinsics23is_aligned_and_not_null17hfbf97934d37ba447E
00008020 g       .imghdr	00000000 __text
000178e0 g     F .text	0000003c os_callout_stop
0000bf8e g     F .text	00000026 _ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h2b593d74deb7b9abE
000081c0 g     F .text	0000004c hal_system_clock_start
00017e50 g     F .text	00000024 os_mbuf_free_chain
0000f098 g     F .text	000003b6 _ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E
00014fc8 g     F .text	00000022 _ZN59_$LT$core..fmt..Arguments$u20$as$u20$core..fmt..Display$GT$3fmt17hbae1f6800a942be8E
000140aa g     F .text	0000008e _ZN4core6option15Option$LT$T$GT$3map17ha55d1d84e69fac8aE
00019470 g     F .text	00000030 mem_init_mbuf_pool
00012118 g     F .text	00000022 _ZN4core5slice77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h938af987543fab79E
0000eb5e g     F .text	00000068 _ZN10st7735_lcd37_IMPL_NUM_ToPrimitive_FOR_Orientation83_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..Orientation$GT$6to_i6417h65f8b25e7b21ad28E
00014b9e g     F .text	00000004 _ZN4core5panic8Location4line17h87c6504a14567921E
0000ad6e g     F .text	0000000c _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hb15824c4ec226a1aE
00012398 g     F .text	0000001c _ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hd3cd0d149a7fdfbaE
00016d1c g     F .text	00000128 hal_i2c_master_write
00008164  w    F .text	00000002 QDEC_IRQHandler
0000c22e g     F .text	000000ae _ZN4core6result19Result$LT$T$C$E$GT$7map_err17hf849df6aea18066fE
00008164  w    F .text	00000002 SWI5_EGU5_IRQHandler
00015762 g     F .text	00000008 _ZN4core3fmt9Formatter15debug_lower_hex17hd5a179b4f32396d1E
00013a0a g     F .text	00000048 .hidden _ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h5de8f7a2703bfbb0E
0000d194 g     F .text	00000012 .hidden _ZN4core3ptr18real_drop_in_place17hcb51ffffa77a350eE
0000a740 g     F .text	000000c0 _ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3fbae9ba036185a9E
00008d16 g     F .text	00000558 _ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E
0000f788 g     F .text	00000012 .hidden _ZN4core3ptr18real_drop_in_place17he529e067b37698d0E
00013154 g     F .text	000000d2 _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h779f12bc5c972a6aE
00017d4c g     F .text	00000008 os_eventq_dflt_get
00019f1c g     F .text	00000018 sensor_lock
000167f4 g     F .text	0000004c console_pkg_init
200000fc g     O .data	00000004 sysinit_panic_cb
00017e74 g     F .text	00000014 os_mbuf_len
00017e3c g     F .text	00000014 os_mbuf_free
00008194 g     F .text	0000002c hal_system_reset
00016164 g     F .text	000000be _ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i16$GT$3fmt17hc369865b6cebf8b5E
000167ea g     F .text	00000008 console_blocking_mode
0000ca40 g     F .text	000005f0 _ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E
0000b718 g     F .text	00000018 _ZN74_$LT$mynewt..hal..GPIO$u20$as$u20$embedded_hal..digital..v2..OutputPin$GT$8set_high17hb29d285365812fbcE
00014b96 g     F .text	00000008 _ZN4core5panic8Location4file17h12b926f8213cef5cE
000104e2 g     F .text	00000008 .hidden _ZN4core3ptr18real_drop_in_place17h9ee06695bb8ca99bE
00011cdc g     F .text	0000001a _ZN78_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hba8c06863fbd064eE
00019c64 g     F .text	00000010 nrf52_periph_create
00018450 g     F .text	0000006c os_sanity_run
000159f4 g     F .text	00000044 _ZN4core5slice22slice_index_order_fail17h87a4944411ec7c0eE
0000be70 g     F .text	00000040 _ZN6mynewt3sys7console5print17h2bc06bd0c362550eE
0000841c g     F .text	00000010 SystemCoreClockUpdate
0000a92e g     F .text	0000002a _ZN4core3fmt10ArgumentV13new17h0800308c03115a53E
000092b6 g     F .text	0000004e _ZN17embedded_graphics10primitives6circle15Circle$LT$C$GT$3new17h7e88a368c23965d0E
0001250a g     F .text	00000016 _ZN4core3ptr5write17hc4f2efad913317d2E
00018060 g     F .text	00000014 os_mempool_init
0001f824 g     O .text	00000004 stdout
00012fd4 g     F .text	0000000e _ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h6facc8ab36e62850E
0000aed6 g     F .text	00000072 _ZN4core10intrinsics23is_aligned_and_not_null17h70462d8365aa8343E
00008616 g     F .text	0000002e _ZN3app12handle_touch17h28605a1a1e29ff74E
00014138 g     F .text	0000007e _ZN4core6option15Option$LT$T$GT$5ok_or17ha6c815d903c44f14E
00017b20 g     F .text	0000002c os_dev_initialize_all
0000bb9c g     F .text	00000048 _ZN4core6result19Result$LT$T$C$E$GT$6expect17hca4739a9a91ec005E
00013e18 g     F .text	00000030 _ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17he59e107f276aaab3E
0001398e g     F .text	0000007c _ZN4core6option15Option$LT$T$GT$9unwrap_or17he29cde0de98952e1E
000162e0 g     F .text	000000d6 _ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17h4c33c41e0b9087bcE
000176b4 g     F .text	00000078 os_idle_task
00016572 g     F .text	0000000a _ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17h4566d0879df4660bE
0001a74c g     F .text	00000040 flash_area_open
00011fa8 g     F .text	00000094 _ZN4core5slice18from_raw_parts_mut17h47a86ba558f64211E
00008164 g     F .text	00000002 Default_Handler
00018138 g     F .text	0000004c os_msys_register
20009950 g     O .bss	00000004 g_os_sanity_check_list
00016106 g     F .text	0000005e _ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$3fmt17h3a0994f99d9fe816E
000102ba g     F .text	0000001e _ZN4core5slice87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17hff816b0e36a79e61E
000172ec g     F .text	00000060 hal_spi_init
00013e92 g     F .text	00000016 _ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h66cfaa3aed13a9dcE
0000bdf2 g     F .text	0000002a _ZN4core3fmt10ArgumentV13new17h5588318b4f536cd0E
00013056 g     F .text	0000002e _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$12as_mut_slice17hd7a3ad965fa56823E
00014458 g     F .text	00000030 _ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h028b6b859f57cf6fE
0000c532 g     F .text	00000026 _ZN4core6option15Option$LT$T$GT$7is_some17h828e6c43309317e1E
00008164  w    F .text	00000002 RNG_IRQHandler
00019e58 g     F .text	00000010 sensor_mgr_unlock
20009f20 g     O .bss	00000004 flash_map_entries
00013b7e g     F .text	00000016 _ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1e9126c9c19580b1E
0000ba6a g     F .text	0000001e _ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h1f4c4c45e5a390deE
000124be g     F .text	0000004c _ZN4core3ptr4read17haf4f0ceffd7a00beE
0001a6a8 g     F .text	00000002 oc_register_serial
0000f7ac g     F .text	0000001e .hidden _ZN4core3ptr18real_drop_in_place17heb4f76ef953c38ccE
00008178 g     F .text	0000000c hal_system_init
00008164  w    F .text	00000002 GPIOTE_IRQHandler
0000d12e g     F .text	0000001c .hidden _ZN4core3ptr18real_drop_in_place17h88dc89cecd06f140E
00008164  w    F .text	00000002 SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler
0001aa00 g     F .text	00000012 mfg_seek_next
00014578 g     F .text	00000004 .hidden _ZN64_$LT$typenum..bit..B0$u20$as$u20$typenum..marker_traits..Bit$GT$5to_u817h9f54ebcf7805587aE
0000b78c g     F .text	0000000a _ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h21b21b5ada625ccdE
20000114 g     O .data	00000008 g_os_sleep_list
00015772 g     F .text	00000026 _ZN4core3fmt9Formatter11debug_tuple17hf6765ecb88050890E
00014488 g     F .text	00000030 _ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h2c117e562d1c7762E
00017dca g     F .text	0000000a os_mbuf_pool_init
00013504 g     F .text	0000006e _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17ha4b1953e89f4ba37E
20009e30 g     O .bss	00000008 g_callout_list
00010478 g     F .text	00000034 .hidden _ZN4core3str21_$LT$impl$u20$str$GT$3len17hb10ade17c01876c3E
00012ea8 g     F .text	00000076 _ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17haa30316eb972f719E
0001855c g     F .text	0000000c os_sched_set_current_task
0000e400 g     F .text	00000058 _ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$3new17h6baf8915c2b60d77E
00011d36 g     F .text	0000001e _ZN8heapless3vec16Vec$LT$T$C$N$GT$3new17h538fc545c007851eE
0000befa g     F .text	0000000a _ZN6mynewt3sys7console5flush17hdc198a9fe895c898E
00014b94 g     F .text	00000002 _ZN4core5panic8Location6caller17h63e50e3e41b8f68eE
00017994 g     F .text	0000005c os_callout_tick
00016586 g     F .text	00000014 _ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$isize$GT$3fmt17hf595b201d13913e3E
000147d4 g     F .text	00000014 _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clear17h724c31e668914486E
00013440 g     F .text	0000002e _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8as_slice17hd2887c0af1cc9236E
00013c38 g     F .text	00000030 _ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h06f40786ef79ca88E
00011dca g     F .text	000000b0 _ZN95_$LT$heapless..vec..IntoIter$LT$T$C$N$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6bac9bf84e5ace24E
20009e54 g     O .bss	00000001 g_task_id
00017534 g     F .text	00000078 hal_watchdog_init
00012482 g     F .text	0000001e _ZN4core3ptr20slice_from_raw_parts17h21ae5ff9721c6ac1E
0000dc92 g     F .text	00000130 _ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE
0000c3f6 g     F .text	00000058 _ZN4core6option15Option$LT$T$GT$6expect17hb4daba08f67c5da8E
000163b6 g     F .text	000000d6 _ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h7bbd75bf0524d563E
0000926e g     F .text	00000048 _ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h656dcccd99c9c578E
00017b6c g     F .text	00000044 os_dev_open
20009e50 g     O .bss	00000004 g_current_task
0001207a g     F .text	00000092 _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf6d26c6ed4aacdc5E
0000a590 g     F .text	0000001a _ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h5512600c5ffe3ca1E
00008c64 g     F .text	000000b2 _ZN120_$LT$$RF$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd46718949ce67527E
0000ecb2 g     F .text	000000b4 _ZN4core6option15Option$LT$T$GT$3map17h58469dc4acfae8f6E
20000140 g       .bss	00000000 __bss_start__
00012460 g     F .text	0000000a _ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17ha6b3afe99a3a0ff5E
0000ed78 g     F .text	0000002a .hidden _ZN58_$LT$core..any..TypeId$u20$as$u20$core..cmp..PartialEq$GT$2eq17h428f46bbd5e42aa0E
0000c4f2 g     F .text	0000001a _ZN4core6option15Option$LT$T$GT$7is_none17hdfc51a5a76806ab8E
0000a52e g     F .text	0000001a _ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hd0429ebf735219dbE
0000b958 g     F .text	0000007e _ZN4core6option15Option$LT$T$GT$5ok_or17h15be47cba4348ad1E
00016ff0 g     F .text	00000018 nrf52_spi0_irq_handler
00013db8 g     F .text	00000030 _ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17hc06e4a52f29c62b5E
00019f14 g     F .text	00000008 sensor_pkg_init
0001a528 g     F .text	00000028 temp_stub_config
00017d8c g     F .text	0000003e os_mqueue_put
0000d1e2 g     F .text	00000062 _ZN106_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hcd27c9e9de4383fcE
0000a548 g     F .text	0000001a _ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h835be22f5bcdca9fE
00017378 g     F .text	000000ac hal_spi_txrx
0000ace6 g     F .text	0000001a _ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hf0edcec69a8db16aE
00008164  w    F .text	00000002 RTC2_IRQHandler
00018550 g     F .text	0000000c os_sched_get_current_task
20000000 g       .vector_relocation	00000000 __vector_tbl_reloc__
0000bc1c g     F .text	0000000a _ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h547b8d3279e16ed9E
0001a824 g     F .text	00000002 modlog_init
00017424 g     F .text	000000e0 hal_spi_txrx_noblock
00011bf4 g     F .text	0000002e _ZN73_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5669767cff00bda9E
00008164  w    F .text	00000002 TEMP_IRQHandler
0000c180 g     F .text	000000ae _ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbdcfea35b5eeeb86E
00018520 g     F .text	00000030 os_sched_ctx_sw_hook
00019fb4 g     F .text	0000002e sensor_mgr_register
00008154  w    F .text	00000002 NMI_Handler
0001110a g     F .text	00000122 _ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E
00011d7a g     F .text	00000012 _ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17h345da7541567fd72E
00017dd4 g     F .text	00000032 os_mbuf_get
20009e58 g     O .bss	00000008 g_os_task_list
00013f2a g     F .text	00000130 _ZN4core3str15next_code_point17h7c77bcb79b5e4a28E
0000ad5a g     F .text	00000014 _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h4a5bc0e612dcb4a6E
000193b4 g     F .text	0000003a vsnprintf
0000b938 g     F .text	00000020 _ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6baa2d6b8acdccabE
00010140 g     F .text	0000001e .hidden _ZN4core3ptr18real_drop_in_place17h807757272e9d64b3E
00018248 g     F .text	000000b8 os_mutex_release
0001246a g     F .text	00000018 _ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7eec27646fdb67fdE
00019e68 g     F .text	0000000c sensor_mgr_evq_get
20009e2c g     O .bss	00000004 g_os_idle_ctr
000169b8 g     F .text	0000002c hal_gpio_init_in
0001213a g     F .text	0000001e _ZN4core5slice77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hb9ee6c104d654751E
00013c14 g     F .text	00000012 _ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17h31e57cb84b87bd6aE
000104ac g     F .text	0000000c .hidden _ZN4core3str21_$LT$impl$u20$str$GT$6as_ptr17h3d3bebd801dbee98E
0000dc7e g     F .text	0000000a _ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset28_$u7b$$u7b$closure$u7d$$u7d$17h9747acb7f72f8cf9E
00014378 g     F .text	00000072 _ZN4core10intrinsics23is_aligned_and_not_null17h092cc9a98ec71aefE
00008164  w    F .text	00000002 TIMER1_IRQHandler
00019c74 g     F .text	00000002 sensor_dev_create
00014880 g     F .text	0000006e _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17h2f43da7fb83d7881E
0000a06e g     F .text	000000c2 _ZN4core10intrinsics19copy_nonoverlapping17h8025c70b7003a716E
00013bae g     F .text	0000001a _ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h88bd69a47c24cc54E
00008164  w    F .text	00000002 TIMER0_IRQHandler
000169e4 g     F .text	00000038 hal_gpio_init_out
0000d1a6 g     F .text	0000001e .hidden _ZN4core3ptr18real_drop_in_place17hdab79d49bcbb0c7bE
000147e8 g     F .text	00000014 _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clear17h8b136725d3404812E
0000a8a8 g     F .text	00000086 _ZN4core3cmp6max_by17h813bf64a4834026bE
0000a578 g     F .text	0000000e _ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17ha9d377e74022418eE
200000d8 g       .data	00000000 __data_start__
00018a0c g     F .text	0000000c os_time_get
00013ea8 g     F .text	0000000e _ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hddf4425cdc540121E
0000c03c g     F .text	0000004a _ZN4core6result19Result$LT$T$C$E$GT$6expect17h76d1a1cb65ecbf07E
0000d078 g     F .text	00000062 _ZN17embedded_graphics10primitives9rectangle18Rectangle$LT$C$GT$3new17h0ad81b0a96d5988aE
000180c4 g     F .text	00000026 os_memblock_put
00018568 g     F .text	00000090 os_sched_sleep
00010122 g     F .text	0000001e .hidden _ZN4core3ptr18real_drop_in_place17h720aacbd88ba3db8E
00019e3c g     F .text	0000001c sensor_mgr_lock
0000bda8 g     F .text	00000020 _ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf3d27a07158f9b69E
0001ac10 g     F .text	000002cc .hidden __udivmoddi4
000197ec g     F .text	000000a0 os_tick_init
0000f672 g     F .text	00000050 _ZN22piet_embedded_graphics5batch9to_blocks17hebd6f683755c37b6E
00008164  w    F .text	00000002 RTC0_IRQHandler
000186ac g     F .text	00000040 os_sched_wakeup_ticks
00019bc0 g     F .text	00000030 hal_timer_read
2000013c g       .data	00000000 __data_end__
00016aec g     F .text	00000028 hal_gpio_irq_enable
0001a604 g     F .text	0000000c oc_evq_set
0001a184 g     F .text	00000018 is_sensor_node
0000b5d0 g     F .text	00000130 _ZN6mynewt3hal4GPIO4init17hdfa14af4722bc4f0E
0001a67c g     F .text	00000024 oc_init
000160a8 g     F .text	0000005e _ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i8$GT$3fmt17hcf02db6b661d0d51E
00010192 g     F .text	00000094 _ZN4core5slice18from_raw_parts_mut17hd2635851eae679a9E
000162e0 g     F .text	000000d6 _ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17h2a11dfdafa4f3e91E
00012fa2 g     F .text	0000001c _ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h7a427e4902d8aacdE
000145dc g     F .text	00000068 _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17h26656857a0566bbcE
0000a22c g     F .text	00000016 _ZN4core3mem4swap17hdfe05e6f709ff36fE
20009ee8 g     O .bss	00000018 sensor_base_ts
0001fa5c g       .ARM.exidx	00000000 __etext
000133c4 g     F .text	0000004e _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clone17hd0a55affb7a814dfE
0000d3e4 g     F .text	00000650 _ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E
000100cc g     F .text	0000000c _ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h7cdb2cd7969bd6b8E
00016888 g     F .text	0000000c console_get_ticks
0000c6fc g     F .text	0000000c .hidden _ZN4core5clone5impls51_$LT$impl$u20$core..clone..Clone$u20$for$u20$u8$GT$5clone17h8d9327329424f87cE
00008164  w    F .text	00000002 SPIM1_SPIS1_TWIM1_TWIS1_SPI1_TWI1_IRQHandler
0000bfdc g     F .text	00000060 _ZN4core6result19Result$LT$T$C$E$GT$6expect17h5ae14e54a9cca8d6E
20000100 g     O .data	00000004 hal_twi_i2c1
0001888c g     F .text	000000d8 os_task_init
0000b0de g     F .text	00000094 _ZN4core5slice14from_raw_parts17h6405d6dfab25f666E
0001040e g     F .text	0000006a .hidden _ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hdac756b7c31413cfE
00014548 g     F .text	00000030 _ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h967898b6b7c42b0dE
00018758 g     F .text	00000064 os_sem_release
0001aeec g     F .text	0000009a __aeabi_memset
00012fec g     F .text	0000001e _ZN8heapless3vec43_$LT$impl$u20$heapless..i..Vec$LT$A$GT$$GT$3new17h04e2eec77c4dd0eaE
00017f30 g     F .text	000000b8 os_mbuf_dup
00011c84 g     F .text	0000003e _ZN78_$LT$heapless..vec..IntoIter$LT$T$C$N$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he92b3e577649ec65E
00018cf0 g     F .text	00000046 PendSV_Handler
0000d14a g     F .text	0000001e .hidden _ZN4core3ptr18real_drop_in_place17h95d35041511b8a18E
00018caa g     F .text	00000046 SVC_Handler
00013cf8 g     F .text	00000030 _ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h5172e26c2722662fE
0000adb8 g     F .text	0000000e _ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb672bbad4eb22d2eE
0000de3c g     F .text	0000016e _ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E
0000dc74 g     F .text	0000000a _ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset28_$u7b$$u7b$closure$u7d$$u7d$17h748eed6b80083f62E
0000ad00 g     F .text	0000001a _ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h4171eb2e9f230fd8E
00018afc g     F .text	0000000c os_arch_save_sr
00008164  w    F .text	00000002 PWM2_IRQHandler
00014518 g     F .text	00000030 _ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h8d0b5f40d3d6b738E
0000bf04 g     F .text	0000005e _ZN79_$LT$embedded_graphics..style..Style$LT$P$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hfe89297384080780E
0000accc g     F .text	0000001a _ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h5915a0d6281f2814E
0000815c  w    F .text	00000002 UsageFault_Handler
00019a58 g     F .text	00000010 nrf52_timer0_irq_handler
00018b18 g     F .text	00000040 os_arch_task_stack_init
0000fe50 g     F .text	000001ce _ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E
0000ab6e g     F .text	00000036 _ZN95_$LT$embedded_graphics..pixelcolor..rgb565..Rgb565$u20$as$u20$core..convert..From$LT$u8$GT$$GT$4from17h36b3c067f0bfa86dE
20009f28 g       .bss	00000000 __bss_end__
0001659a g     F .text	0000000a _ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h56de0a5493c36575E
0000d100 g     F .text	0000001a .hidden _ZN4core3ptr18real_drop_in_place17h32a869986fa832b9E
0000b0c8 g     F .text	00000016 _ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h7f7bbc14858779f2E
00018074 g     F .text	00000032 os_memblock_get
20009f24 g     O .bss	00000004 flash_map
00008164  w    F .text	00000002 RADIO_IRQHandler
00014e72 g     F .text	00000058 _ZN4core3fmt8builders10DebugTuple6finish17heb8e742f7f30d0e3E
0001486c g     F .text	00000014 _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8capacity17hf1256bee4c402771E
0000db1c g     F .text	0000001e _ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbfeb78e9a0dc428cE
00008164  w    F .text	00000002 TIMER2_IRQHandler
000175bc g     F .text	00000014 hal_watchdog_tickle
000126fa g     F .text	0000005e _ZN22piet_embedded_graphics5batch7to_rows17hb83a45ea5841b509E
0001457c g     F .text	00000004 .hidden _ZN64_$LT$typenum..bit..B1$u20$as$u20$typenum..marker_traits..Bit$GT$5to_u817h206eb3d5ce0562b8E
00013d58 g     F .text	00000030 _ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h85ffd7bcac7d566dE
0000bee8 g     F .text	00000012 _ZN6mynewt3sys7console8printint17hb4cf23aeef7705a5E
00017c7a g     F .text	0000007a os_eventq_get
0000c6b4 g     F .text	00000048 _ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h186c6830f1ed9057E
000123b4 g     F .text	00000016 _ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hbefed46fd651323cE
0001abc0 g     F .text	00000020 sprintf
00013084 g     F .text	00000068 _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17h0dd49d59041e1de6E
0000da34 g     F .text	0000007e .hidden _ZN53_$LT$u64$u20$as$u20$num_traits..cast..ToPrimitive$GT$5to_u817he15679f49f6ad4faE
00014b90 g     F .text	00000004 _ZN4core5panic9PanicInfo8location17h6d10e5dd7f0a464cE
00018ab8 g     F .text	00000026 os_time_ms_to_ticks
0001495c g     F .text	00000010 .hidden _ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17h42518d20db38c567E
20009988 g     O .bss	00000004 os_flags
0001a6ac g     F .text	00000028 oc_rep_init
00018dbc g     F .text	0000001a memcpy
000127a8 g     F .text	000002be _ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E
0000d300 g     F .text	0000008c _ZN129_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h6740ba0ca5fad9f2E
000194a0 g     F .text	00000044 sysinit_app
0000c44e g     F .text	00000054 _ZN4core6option15Option$LT$T$GT$6unwrap17h3c579309e0abf051E
00012f1e g     F .text	00000018 _ZN4core4iter8adapters13Skip$LT$I$GT$3new17h49836a358a94eed7E
00008a84 g     F .text	000000ba _ZN4core6option15Option$LT$T$GT$3map17h222644965ed6bb1fE
00013c68 g     F .text	00000030 _ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h1c5a8a075ee325dcE
0001678c g     F .text	0000003c console_out_nolock
20009f00 g     O .bss	00000020 oc_transports
0000f6ce g     F .text	00000052 _ZN4core6result19Result$LT$T$C$E$GT$6expect17h2a1175343ed8bbdfE
00016a74 g     F .text	00000078 hal_gpio_irq_init
00018e2a g     F .text	00000010 strlen
000187bc g     F .text	000000b8 os_sem_pend
000147fc g     F .text	0000002e _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8as_slice17hea35f4eb18510315E
00015e46 g     F .text	000000f2 _ZN4core7unicode9printable12is_printable17hd3cc4e85a138e855E
0000b094 g     F .text	0000001a _ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h19237f4926dcce4bE
00019754 g     F .text	00000098 os_tick_idle
0001252c g     F .text	000001ce _ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E
00012a66 g     F .text	000003b6 _ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E
00008164  w    F .text	00000002 SWI2_EGU2_IRQHandler
0001496c g     F .text	00000004 .hidden _ZN73_$LT$typenum..uint..UTerm$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h594c176a361f806bE
00000000 g       .svc_table	00000000 SVC_Table
0000bc3a g     F .text	0000001c _ZN6mynewt6kernel2os15eventq_dflt_get17h53d678d7b494fb18E
0000aba4 g     F .text	00000086 _ZN123_$LT$embedded_graphics..pixelcolor..rgb565..Rgb565$u20$as$u20$core..convert..From$LT$$LP$u8$C$$u20$u8$C$$u20$u8$RP$$GT$$GT$4from17hef1427cf6cf20becE
2000fe50 g       *ABS*	00000000 __HeapLimit
0000bf62 g     F .text	0000002c _ZN83_$LT$embedded_graphics..style..Style$LT$P$GT$$u20$as$u20$core..default..Default$GT$7default17ha6c30ca12b466235E
0000f74e g     F .text	0000001e .hidden _ZN4core3ptr18real_drop_in_place17h8364e3375035fdecE
0001788c g     F .text	00000038 os_pkg_init
2000013c g       .bssnz	00000000 __bssnz_start__
0000a51e g     F .text	00000010 _ZN4core3ptr5write17hadd2801e9b1590e3E
00014858 g     F .text	00000014 _ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8capacity17hdfd7d7694fef851eE
00008164  w    F .text	00000002 ECB_IRQHandler
00008158  w    F .text	00000002 MemoryManagement_Handler
0000f780 g     F .text	00000008 .hidden _ZN4core3ptr18real_drop_in_place17hb4d4d6f7c6ddca12E
0001203c g     F .text	0000000c _ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h08d74de1a683ec08E
000103a4 g     F .text	0000006a .hidden _ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hae4b9b613621b905E
00017c12 g     F .text	00000068 os_eventq_put
00012e6a g     F .text	0000003e _ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he97719504a72e39cE
20010000 g       .bss	00000000 __StackTop
0000d244 g     F .text	0000005e _ZN127_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$embedded_graphics..fonts..Font$LT$C$GT$$GT$10render_str17hf94c94d2e27ab58cE
0001aa36 g     F .text	0000000a mfg_read_tlv_mmr_ref
0001a244 g     F .text	000000c0 sensor_network_init
0000d17a g     F .text	00000008 .hidden _ZN4core3ptr18real_drop_in_place17hb594abbe78127cbbE
00013ec0 g     F .text	0000001a _ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17hbccadf1346c9eb57E
0000c4a2 g     F .text	00000050 _ZN4core6option15Option$LT$T$GT$6unwrap17h6432083b07afd3f6E
00012fe2 g     F .text	0000000a _ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h62416eeff0482c5eE



Disassembly of section .text:

00008020 <__isr_vector>:
    8020:	20010000 	.word	0x20010000
    8024:	000080f9 	.word	0x000080f9
    8028:	00008155 	.word	0x00008155
    802c:	00008157 	.word	0x00008157
	...
    804c:	00018cab 	.word	0x00018cab
	...
    8058:	00018cf1 	.word	0x00018cf1
    805c:	00018d37 	.word	0x00018d37
    8060:	00008165 	.word	0x00008165
    8064:	00008165 	.word	0x00008165
    8068:	00008165 	.word	0x00008165
    806c:	00008165 	.word	0x00008165
    8070:	00008165 	.word	0x00008165
    8074:	00008165 	.word	0x00008165
    8078:	00008165 	.word	0x00008165
    807c:	00008165 	.word	0x00008165
    8080:	00008165 	.word	0x00008165
    8084:	00008165 	.word	0x00008165
    8088:	00008165 	.word	0x00008165
    808c:	00008165 	.word	0x00008165
    8090:	00008165 	.word	0x00008165
    8094:	00008165 	.word	0x00008165
    8098:	00008165 	.word	0x00008165
    809c:	00008165 	.word	0x00008165
    80a0:	00008165 	.word	0x00008165
    80a4:	00008165 	.word	0x00008165
    80a8:	00008165 	.word	0x00008165
    80ac:	00008165 	.word	0x00008165
    80b0:	00008165 	.word	0x00008165
    80b4:	00008165 	.word	0x00008165
    80b8:	00008165 	.word	0x00008165
    80bc:	00008165 	.word	0x00008165
    80c0:	00008165 	.word	0x00008165
    80c4:	00008165 	.word	0x00008165
    80c8:	00008165 	.word	0x00008165
    80cc:	00008165 	.word	0x00008165
    80d0:	00008165 	.word	0x00008165
    80d4:	00008165 	.word	0x00008165
	...
    80e0:	00008165 	.word	0x00008165
    80e4:	00008165 	.word	0x00008165
    80e8:	00008165 	.word	0x00008165
    80ec:	00008165 	.word	0x00008165
    80f0:	00008165 	.word	0x00008165
    80f4:	00008165 	.word	0x00008165

000080f8 <Reset_Handler>:
    .type    Reset_Handler, %function
Reset_Handler:
    .fnstart

    /* Clear BSS */
    mov     r0, #0
    80f8:	f04f 0000 	mov.w	r0, #0
    ldr     r2, =__bss_start__
    80fc:	4a0c      	ldr	r2, [pc, #48]	; (8130 <.bss_zero_loop+0x30>)
    ldr     r3, =__bss_end__
    80fe:	4b0d      	ldr	r3, [pc, #52]	; (8134 <.bss_zero_loop+0x34>)

00008100 <.bss_zero_loop>:
.bss_zero_loop:
    cmp     r2, r3
    8100:	429a      	cmp	r2, r3
    itt     lt
    8102:	bfbc      	itt	lt
    strlt   r0, [r2], #4
    8104:	f842 0b04 	strlt.w	r0, [r2], #4
    blt    .bss_zero_loop
    8108:	e7fa      	blt.n	8100 <.bss_zero_loop>
 *      of copy from/to are specified by following symbols evaluated in
 *      linker script.
 *      __etext: End of code section, i.e., begin of data sections to copy from.
 *      __data_start__/__data_end__: RAM address range that data should be
 *      copied to. Both must be aligned to 4 bytes boundary.  */
    ldr    r1, =__etext
    810a:	490b      	ldr	r1, [pc, #44]	; (8138 <.bss_zero_loop+0x38>)
    ldr    r2, =__data_start__
    810c:	4a0b      	ldr	r2, [pc, #44]	; (813c <.bss_zero_loop+0x3c>)
    ldr    r3, =__data_end__
    810e:	4b0c      	ldr	r3, [pc, #48]	; (8140 <.bss_zero_loop+0x40>)

    subs    r3, r2
    8110:	1a9b      	subs	r3, r3, r2
    ble     .LC0
    8112:	dd03      	ble.n	811c <.bss_zero_loop+0x1c>

.LC1:
    subs    r3, 4
    8114:	3b04      	subs	r3, #4
    ldr    r0, [r1,r3]
    8116:	58c8      	ldr	r0, [r1, r3]
    str    r0, [r2,r3]
    8118:	50d0      	str	r0, [r2, r3]
    bgt    .LC1
    811a:	dcfb      	bgt.n	8114 <.bss_zero_loop+0x14>

.LC0:

    LDR     R0, =__HeapBase
    811c:	4809      	ldr	r0, [pc, #36]	; (8144 <.bss_zero_loop+0x44>)
    LDR     R1, =__HeapLimit
    811e:	490a      	ldr	r1, [pc, #40]	; (8148 <.bss_zero_loop+0x48>)
    BL      _sbrkInit
    8120:	f000 f822 	bl	8168 <_sbrkInit>

    LDR     R0, =SystemInit
    8124:	4809      	ldr	r0, [pc, #36]	; (814c <.bss_zero_loop+0x4c>)
    BLX     R0
    8126:	4780      	blx	r0

    BL      hal_system_init
    8128:	f000 f826 	bl	8178 <hal_system_init>

    LDR     R0, =_start
    812c:	4808      	ldr	r0, [pc, #32]	; (8150 <.bss_zero_loop+0x50>)
    BX      R0
    812e:	4700      	bx	r0
    ldr     r2, =__bss_start__
    8130:	20000140 	.word	0x20000140
    ldr     r3, =__bss_end__
    8134:	20009f28 	.word	0x20009f28
    ldr    r1, =__etext
    8138:	0001fa5c 	.word	0x0001fa5c
    ldr    r2, =__data_start__
    813c:	200000d8 	.word	0x200000d8
    ldr    r3, =__data_end__
    8140:	2000013c 	.word	0x2000013c
    LDR     R0, =__HeapBase
    8144:	20009f28 	.word	0x20009f28
    LDR     R1, =__HeapLimit
    8148:	2000fe50 	.word	0x2000fe50
    LDR     R0, =SystemInit
    814c:	0000842d 	.word	0x0000842d
    LDR     R0, =_start
    8150:	00008601 	.word	0x00008601

00008154 <NMI_Handler>:
/* Dummy Exception Handlers (infinite loops which can be modified) */

    .weak   NMI_Handler
    .type   NMI_Handler, %function
NMI_Handler:
    B       .
    8154:	e7fe      	b.n	8154 <NMI_Handler>

00008156 <HardFault_Handler>:


    .weak   HardFault_Handler
    .type   HardFault_Handler, %function
HardFault_Handler:
    B       .
    8156:	e7fe      	b.n	8156 <HardFault_Handler>

00008158 <MemoryManagement_Handler>:


    .weak   MemoryManagement_Handler
    .type   MemoryManagement_Handler, %function
MemoryManagement_Handler:
    B       .
    8158:	e7fe      	b.n	8158 <MemoryManagement_Handler>

0000815a <BusFault_Handler>:


    .weak   BusFault_Handler
    .type   BusFault_Handler, %function
BusFault_Handler:
    B       .
    815a:	e7fe      	b.n	815a <BusFault_Handler>

0000815c <UsageFault_Handler>:


    .weak   UsageFault_Handler
    .type   UsageFault_Handler, %function
UsageFault_Handler:
    B       .
    815c:	e7fe      	b.n	815c <UsageFault_Handler>


    .weak   SVC_Handler
    .type   SVC_Handler, %function
SVC_Handler:
    B       .
    815e:	e7fe      	b.n	815e <UsageFault_Handler+0x2>


    .weak   PendSV_Handler
    .type   PendSV_Handler, %function
PendSV_Handler:
    B       .
    8160:	e7fe      	b.n	8160 <UsageFault_Handler+0x4>


    .weak   SysTick_Handler
    .type   SysTick_Handler, %function
SysTick_Handler:
    B       .
    8162:	e7fe      	b.n	8162 <UsageFault_Handler+0x6>

00008164 <Default_Handler>:
/* IRQ Handlers */

    .globl  Default_Handler
    .type   Default_Handler, %function
Default_Handler:
    B       .
    8164:	e7fe      	b.n	8164 <Default_Handler>
    8166:	bf00      	nop

00008168 <_sbrkInit>:
static char *sbrkLimit __attribute__ ((section (".data")));
static char *brk __attribute__ ((section (".data")));

void
_sbrkInit(char *base, char *limit) {
    sbrkBase = base;
    8168:	4b02      	ldr	r3, [pc, #8]	; (8174 <_sbrkInit+0xc>)
    816a:	6018      	str	r0, [r3, #0]
    sbrkLimit = limit;
    816c:	6059      	str	r1, [r3, #4]
    brk = base;
    816e:	6098      	str	r0, [r3, #8]
}
    8170:	4770      	bx	lr
    8172:	bf00      	nop
    8174:	200000d8 	.word	0x200000d8

00008178 <hal_system_init>:
 */
void
hal_system_init(void)
{
#if MYNEWT_VAL(MCU_DCDC_ENABLED)
    NRF_POWER->DCDCEN = 1;
    8178:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    817c:	2201      	movs	r2, #1
    817e:	f8c3 2578 	str.w	r2, [r3, #1400]	; 0x578
#endif
}
    8182:	4770      	bx	lr

00008184 <hal_debugger_connected>:
}

int
hal_debugger_connected(void)
{
    return CoreDebug->DHCSR & CoreDebug_DHCSR_C_DEBUGEN_Msk;
    8184:	4b02      	ldr	r3, [pc, #8]	; (8190 <hal_debugger_connected+0xc>)
    8186:	6818      	ldr	r0, [r3, #0]
}
    8188:	f000 0001 	and.w	r0, r0, #1
    818c:	4770      	bx	lr
    818e:	bf00      	nop
    8190:	e000edf0 	.word	0xe000edf0

00008194 <hal_system_reset>:
{
    8194:	b508      	push	{r3, lr}
        if (hal_debugger_connected()) {
    8196:	f7ff fff5 	bl	8184 <hal_debugger_connected>
    819a:	b100      	cbz	r0, 819e <hal_system_reset+0xa>
            asm("bkpt");
    819c:	be00      	bkpt	0x0000
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
    819e:	f3bf 8f4f 	dsb	sy
__NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
{
  __DSB();                                                          /* Ensure all outstanding memory accesses included
                                                                       buffered write are completed before reset */
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
    81a2:	4905      	ldr	r1, [pc, #20]	; (81b8 <hal_system_reset+0x24>)
    81a4:	68ca      	ldr	r2, [r1, #12]
    81a6:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
    81aa:	4b04      	ldr	r3, [pc, #16]	; (81bc <hal_system_reset+0x28>)
    81ac:	4313      	orrs	r3, r2
    81ae:	60cb      	str	r3, [r1, #12]
    81b0:	f3bf 8f4f 	dsb	sy
                            SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchanged */
  __DSB();                                                          /* Ensure completion of memory access */

  for(;;)                                                           /* wait until reset */
  {
    __NOP();
    81b4:	bf00      	nop
    81b6:	e7fd      	b.n	81b4 <hal_system_reset+0x20>
    81b8:	e000ed00 	.word	0xe000ed00
    81bc:	05fa0004 	.word	0x05fa0004

000081c0 <hal_system_clock_start>:
        }
    }
#endif

    /* Check if this clock source is already running */
    if ((NRF_CLOCK->LFCLKSTAT & regmsk) != regval) {
    81c0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    81c4:	f8d3 2418 	ldr.w	r2, [r3, #1048]	; 0x418
    81c8:	4b0f      	ldr	r3, [pc, #60]	; (8208 <hal_system_clock_start+0x48>)
    81ca:	4013      	ands	r3, r2
    81cc:	f1b3 1f01 	cmp.w	r3, #65537	; 0x10001
    81d0:	d018      	beq.n	8204 <hal_system_clock_start+0x44>
        NRF_CLOCK->TASKS_LFCLKSTOP = 1;
    81d2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    81d6:	2201      	movs	r2, #1
    81d8:	60da      	str	r2, [r3, #12]
        NRF_CLOCK->EVENTS_LFCLKSTARTED = 0;
    81da:	2100      	movs	r1, #0
    81dc:	f8c3 1104 	str.w	r1, [r3, #260]	; 0x104
        NRF_CLOCK->LFCLKSRC = clksrc;
    81e0:	f8c3 2518 	str.w	r2, [r3, #1304]	; 0x518
        NRF_CLOCK->TASKS_LFCLKSTART = 1;
    81e4:	609a      	str	r2, [r3, #8]

        /* Wait here till started! */
        while (1) {
            if (NRF_CLOCK->EVENTS_LFCLKSTARTED) {
    81e6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    81ea:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
    81ee:	2b00      	cmp	r3, #0
    81f0:	d0f9      	beq.n	81e6 <hal_system_clock_start+0x26>
                if ((NRF_CLOCK->LFCLKSTAT & regmsk) == regval) {
    81f2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    81f6:	f8d3 2418 	ldr.w	r2, [r3, #1048]	; 0x418
    81fa:	4b03      	ldr	r3, [pc, #12]	; (8208 <hal_system_clock_start+0x48>)
    81fc:	4013      	ands	r3, r2
    81fe:	f1b3 1f01 	cmp.w	r3, #65537	; 0x10001
    8202:	d1f0      	bne.n	81e6 <hal_system_clock_start+0x26>
                }
            }
        }
    }
#endif
}
    8204:	4770      	bx	lr
    8206:	bf00      	nop
    8208:	00010003 	.word	0x00010003

0000820c <errata_16>:
}

#ifdef NRF52
static bool errata_16(void)
{
    if ((((*(uint32_t *)0xF0000FE0) & 0x000000FF) == 0x6) && (((*(uint32_t *)0xF0000FE4) & 0x0000000F) == 0x0)){
    820c:	4b0b      	ldr	r3, [pc, #44]	; (823c <errata_16+0x30>)
    820e:	781b      	ldrb	r3, [r3, #0]
    8210:	2b06      	cmp	r3, #6
    8212:	d001      	beq.n	8218 <errata_16+0xc>
        if (((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x30){
            return true;
        }
    }

    return false;
    8214:	2000      	movs	r0, #0
    8216:	4770      	bx	lr
    if ((((*(uint32_t *)0xF0000FE0) & 0x000000FF) == 0x6) && (((*(uint32_t *)0xF0000FE4) & 0x0000000F) == 0x0)){
    8218:	4b09      	ldr	r3, [pc, #36]	; (8240 <errata_16+0x34>)
    821a:	681b      	ldr	r3, [r3, #0]
    821c:	f013 0f0f 	tst.w	r3, #15
    8220:	d107      	bne.n	8232 <errata_16+0x26>
        if (((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x30){
    8222:	4b08      	ldr	r3, [pc, #32]	; (8244 <errata_16+0x38>)
    8224:	681b      	ldr	r3, [r3, #0]
    8226:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
    822a:	2b30      	cmp	r3, #48	; 0x30
    822c:	d003      	beq.n	8236 <errata_16+0x2a>
    return false;
    822e:	2000      	movs	r0, #0
    8230:	4770      	bx	lr
    8232:	2000      	movs	r0, #0
    8234:	4770      	bx	lr
            return true;
    8236:	2001      	movs	r0, #1
}
    8238:	4770      	bx	lr
    823a:	bf00      	nop
    823c:	f0000fe0 	.word	0xf0000fe0
    8240:	f0000fe4 	.word	0xf0000fe4
    8244:	f0000fe8 	.word	0xf0000fe8

00008248 <errata_31>:

static bool errata_31(void)
{
    if ((((*(uint32_t *)0xF0000FE0) & 0x000000FF) == 0x6) && (((*(uint32_t *)0xF0000FE4) & 0x0000000F) == 0x0)){
    8248:	4b0f      	ldr	r3, [pc, #60]	; (8288 <errata_31+0x40>)
    824a:	781b      	ldrb	r3, [r3, #0]
    824c:	2b06      	cmp	r3, #6
    824e:	d001      	beq.n	8254 <errata_31+0xc>
        if (((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x50){
            return true;
        }
    }

    return false;
    8250:	2000      	movs	r0, #0
    8252:	4770      	bx	lr
    if ((((*(uint32_t *)0xF0000FE0) & 0x000000FF) == 0x6) && (((*(uint32_t *)0xF0000FE4) & 0x0000000F) == 0x0)){
    8254:	4b0d      	ldr	r3, [pc, #52]	; (828c <errata_31+0x44>)
    8256:	681b      	ldr	r3, [r3, #0]
    8258:	f013 0f0f 	tst.w	r3, #15
    825c:	d10b      	bne.n	8276 <errata_31+0x2e>
        if (((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x30){
    825e:	4b0c      	ldr	r3, [pc, #48]	; (8290 <errata_31+0x48>)
    8260:	681b      	ldr	r3, [r3, #0]
    8262:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
    8266:	2b30      	cmp	r3, #48	; 0x30
    8268:	d007      	beq.n	827a <errata_31+0x32>
        if (((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x40){
    826a:	2b40      	cmp	r3, #64	; 0x40
    826c:	d007      	beq.n	827e <errata_31+0x36>
        if (((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x50){
    826e:	2b50      	cmp	r3, #80	; 0x50
    8270:	d007      	beq.n	8282 <errata_31+0x3a>
    return false;
    8272:	2000      	movs	r0, #0
    8274:	4770      	bx	lr
    8276:	2000      	movs	r0, #0
    8278:	4770      	bx	lr
            return true;
    827a:	2001      	movs	r0, #1
    827c:	4770      	bx	lr
            return true;
    827e:	2001      	movs	r0, #1
    8280:	4770      	bx	lr
            return true;
    8282:	2001      	movs	r0, #1
}
    8284:	4770      	bx	lr
    8286:	bf00      	nop
    8288:	f0000fe0 	.word	0xf0000fe0
    828c:	f0000fe4 	.word	0xf0000fe4
    8290:	f0000fe8 	.word	0xf0000fe8

00008294 <errata_32>:

static bool errata_32(void)
{
    if ((((*(uint32_t *)0xF0000FE0) & 0x000000FF) == 0x6) && (((*(uint32_t *)0xF0000FE4) & 0x0000000F) == 0x0)){
    8294:	4b0b      	ldr	r3, [pc, #44]	; (82c4 <errata_32+0x30>)
    8296:	781b      	ldrb	r3, [r3, #0]
    8298:	2b06      	cmp	r3, #6
    829a:	d001      	beq.n	82a0 <errata_32+0xc>
        if (((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x30){
            return true;
        }
    }

    return false;
    829c:	2000      	movs	r0, #0
    829e:	4770      	bx	lr
    if ((((*(uint32_t *)0xF0000FE0) & 0x000000FF) == 0x6) && (((*(uint32_t *)0xF0000FE4) & 0x0000000F) == 0x0)){
    82a0:	4b09      	ldr	r3, [pc, #36]	; (82c8 <errata_32+0x34>)
    82a2:	681b      	ldr	r3, [r3, #0]
    82a4:	f013 0f0f 	tst.w	r3, #15
    82a8:	d107      	bne.n	82ba <errata_32+0x26>
        if (((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x30){
    82aa:	4b08      	ldr	r3, [pc, #32]	; (82cc <errata_32+0x38>)
    82ac:	681b      	ldr	r3, [r3, #0]
    82ae:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
    82b2:	2b30      	cmp	r3, #48	; 0x30
    82b4:	d003      	beq.n	82be <errata_32+0x2a>
    return false;
    82b6:	2000      	movs	r0, #0
    82b8:	4770      	bx	lr
    82ba:	2000      	movs	r0, #0
    82bc:	4770      	bx	lr
            return true;
    82be:	2001      	movs	r0, #1
}
    82c0:	4770      	bx	lr
    82c2:	bf00      	nop
    82c4:	f0000fe0 	.word	0xf0000fe0
    82c8:	f0000fe4 	.word	0xf0000fe4
    82cc:	f0000fe8 	.word	0xf0000fe8

000082d0 <errata_36>:

static bool errata_36(void)
{
    if ((((*(uint32_t *)0xF0000FE0) & 0x000000FF) == 0x6) && (((*(uint32_t *)0xF0000FE4) & 0x0000000F) == 0x0)){
    82d0:	4b0f      	ldr	r3, [pc, #60]	; (8310 <errata_36+0x40>)
    82d2:	781b      	ldrb	r3, [r3, #0]
    82d4:	2b06      	cmp	r3, #6
    82d6:	d001      	beq.n	82dc <errata_36+0xc>
        if (((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x50){
            return true;
        }
    }

    return false;
    82d8:	2000      	movs	r0, #0
    82da:	4770      	bx	lr
    if ((((*(uint32_t *)0xF0000FE0) & 0x000000FF) == 0x6) && (((*(uint32_t *)0xF0000FE4) & 0x0000000F) == 0x0)){
    82dc:	4b0d      	ldr	r3, [pc, #52]	; (8314 <errata_36+0x44>)
    82de:	681b      	ldr	r3, [r3, #0]
    82e0:	f013 0f0f 	tst.w	r3, #15
    82e4:	d10b      	bne.n	82fe <errata_36+0x2e>
        if (((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x30){
    82e6:	4b0c      	ldr	r3, [pc, #48]	; (8318 <errata_36+0x48>)
    82e8:	681b      	ldr	r3, [r3, #0]
    82ea:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
    82ee:	2b30      	cmp	r3, #48	; 0x30
    82f0:	d007      	beq.n	8302 <errata_36+0x32>
        if (((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x40){
    82f2:	2b40      	cmp	r3, #64	; 0x40
    82f4:	d007      	beq.n	8306 <errata_36+0x36>
        if (((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x50){
    82f6:	2b50      	cmp	r3, #80	; 0x50
    82f8:	d007      	beq.n	830a <errata_36+0x3a>
    return false;
    82fa:	2000      	movs	r0, #0
    82fc:	4770      	bx	lr
    82fe:	2000      	movs	r0, #0
    8300:	4770      	bx	lr
            return true;
    8302:	2001      	movs	r0, #1
    8304:	4770      	bx	lr
            return true;
    8306:	2001      	movs	r0, #1
    8308:	4770      	bx	lr
            return true;
    830a:	2001      	movs	r0, #1
}
    830c:	4770      	bx	lr
    830e:	bf00      	nop
    8310:	f0000fe0 	.word	0xf0000fe0
    8314:	f0000fe4 	.word	0xf0000fe4
    8318:	f0000fe8 	.word	0xf0000fe8

0000831c <errata_37>:

static bool errata_37(void)
{
    if ((((*(uint32_t *)0xF0000FE0) & 0x000000FF) == 0x6) && (((*(uint32_t *)0xF0000FE4) & 0x0000000F) == 0x0)){
    831c:	4b0b      	ldr	r3, [pc, #44]	; (834c <errata_37+0x30>)
    831e:	781b      	ldrb	r3, [r3, #0]
    8320:	2b06      	cmp	r3, #6
    8322:	d001      	beq.n	8328 <errata_37+0xc>
        if (((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x30){
            return true;
        }
    }

    return false;
    8324:	2000      	movs	r0, #0
    8326:	4770      	bx	lr
    if ((((*(uint32_t *)0xF0000FE0) & 0x000000FF) == 0x6) && (((*(uint32_t *)0xF0000FE4) & 0x0000000F) == 0x0)){
    8328:	4b09      	ldr	r3, [pc, #36]	; (8350 <errata_37+0x34>)
    832a:	681b      	ldr	r3, [r3, #0]
    832c:	f013 0f0f 	tst.w	r3, #15
    8330:	d107      	bne.n	8342 <errata_37+0x26>
        if (((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x30){
    8332:	4b08      	ldr	r3, [pc, #32]	; (8354 <errata_37+0x38>)
    8334:	681b      	ldr	r3, [r3, #0]
    8336:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
    833a:	2b30      	cmp	r3, #48	; 0x30
    833c:	d003      	beq.n	8346 <errata_37+0x2a>
    return false;
    833e:	2000      	movs	r0, #0
    8340:	4770      	bx	lr
    8342:	2000      	movs	r0, #0
    8344:	4770      	bx	lr
            return true;
    8346:	2001      	movs	r0, #1
}
    8348:	4770      	bx	lr
    834a:	bf00      	nop
    834c:	f0000fe0 	.word	0xf0000fe0
    8350:	f0000fe4 	.word	0xf0000fe4
    8354:	f0000fe8 	.word	0xf0000fe8

00008358 <errata_57>:

static bool errata_57(void)
{
    if ((((*(uint32_t *)0xF0000FE0) & 0x000000FF) == 0x6) && (((*(uint32_t *)0xF0000FE4) & 0x0000000F) == 0x0)){
    8358:	4b0b      	ldr	r3, [pc, #44]	; (8388 <errata_57+0x30>)
    835a:	781b      	ldrb	r3, [r3, #0]
    835c:	2b06      	cmp	r3, #6
    835e:	d001      	beq.n	8364 <errata_57+0xc>
        if (((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x30){
            return true;
        }
    }

    return false;
    8360:	2000      	movs	r0, #0
    8362:	4770      	bx	lr
    if ((((*(uint32_t *)0xF0000FE0) & 0x000000FF) == 0x6) && (((*(uint32_t *)0xF0000FE4) & 0x0000000F) == 0x0)){
    8364:	4b09      	ldr	r3, [pc, #36]	; (838c <errata_57+0x34>)
    8366:	681b      	ldr	r3, [r3, #0]
    8368:	f013 0f0f 	tst.w	r3, #15
    836c:	d107      	bne.n	837e <errata_57+0x26>
        if (((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x30){
    836e:	4b08      	ldr	r3, [pc, #32]	; (8390 <errata_57+0x38>)
    8370:	681b      	ldr	r3, [r3, #0]
    8372:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
    8376:	2b30      	cmp	r3, #48	; 0x30
    8378:	d003      	beq.n	8382 <errata_57+0x2a>
    return false;
    837a:	2000      	movs	r0, #0
    837c:	4770      	bx	lr
    837e:	2000      	movs	r0, #0
    8380:	4770      	bx	lr
            return true;
    8382:	2001      	movs	r0, #1
}
    8384:	4770      	bx	lr
    8386:	bf00      	nop
    8388:	f0000fe0 	.word	0xf0000fe0
    838c:	f0000fe4 	.word	0xf0000fe4
    8390:	f0000fe8 	.word	0xf0000fe8

00008394 <errata_66>:

static bool errata_66(void)
{
    if ((((*(uint32_t *)0xF0000FE0) & 0x000000FF) == 0x6) && (((*(uint32_t *)0xF0000FE4) & 0x0000000F) == 0x0)){
    8394:	4b0b      	ldr	r3, [pc, #44]	; (83c4 <errata_66+0x30>)
    8396:	781b      	ldrb	r3, [r3, #0]
    8398:	2b06      	cmp	r3, #6
    839a:	d001      	beq.n	83a0 <errata_66+0xc>
        if (((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x50){
            return true;
        }
    }

    return false;
    839c:	2000      	movs	r0, #0
    839e:	4770      	bx	lr
    if ((((*(uint32_t *)0xF0000FE0) & 0x000000FF) == 0x6) && (((*(uint32_t *)0xF0000FE4) & 0x0000000F) == 0x0)){
    83a0:	4b09      	ldr	r3, [pc, #36]	; (83c8 <errata_66+0x34>)
    83a2:	681b      	ldr	r3, [r3, #0]
    83a4:	f013 0f0f 	tst.w	r3, #15
    83a8:	d107      	bne.n	83ba <errata_66+0x26>
        if (((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x50){
    83aa:	4b08      	ldr	r3, [pc, #32]	; (83cc <errata_66+0x38>)
    83ac:	681b      	ldr	r3, [r3, #0]
    83ae:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
    83b2:	2b50      	cmp	r3, #80	; 0x50
    83b4:	d003      	beq.n	83be <errata_66+0x2a>
    return false;
    83b6:	2000      	movs	r0, #0
    83b8:	4770      	bx	lr
    83ba:	2000      	movs	r0, #0
    83bc:	4770      	bx	lr
            return true;
    83be:	2001      	movs	r0, #1
}
    83c0:	4770      	bx	lr
    83c2:	bf00      	nop
    83c4:	f0000fe0 	.word	0xf0000fe0
    83c8:	f0000fe4 	.word	0xf0000fe4
    83cc:	f0000fe8 	.word	0xf0000fe8

000083d0 <errata_108>:


static bool errata_108(void)
{
    if ((((*(uint32_t *)0xF0000FE0) & 0x000000FF) == 0x6) && (((*(uint32_t *)0xF0000FE4) & 0x0000000F) == 0x0)){
    83d0:	4b0f      	ldr	r3, [pc, #60]	; (8410 <errata_108+0x40>)
    83d2:	781b      	ldrb	r3, [r3, #0]
    83d4:	2b06      	cmp	r3, #6
    83d6:	d001      	beq.n	83dc <errata_108+0xc>
        if (((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x50){
            return true;
        }
    }

    return false;
    83d8:	2000      	movs	r0, #0
    83da:	4770      	bx	lr
    if ((((*(uint32_t *)0xF0000FE0) & 0x000000FF) == 0x6) && (((*(uint32_t *)0xF0000FE4) & 0x0000000F) == 0x0)){
    83dc:	4b0d      	ldr	r3, [pc, #52]	; (8414 <errata_108+0x44>)
    83de:	681b      	ldr	r3, [r3, #0]
    83e0:	f013 0f0f 	tst.w	r3, #15
    83e4:	d10b      	bne.n	83fe <errata_108+0x2e>
        if (((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x30){
    83e6:	4b0c      	ldr	r3, [pc, #48]	; (8418 <errata_108+0x48>)
    83e8:	681b      	ldr	r3, [r3, #0]
    83ea:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
    83ee:	2b30      	cmp	r3, #48	; 0x30
    83f0:	d007      	beq.n	8402 <errata_108+0x32>
        if (((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x40){
    83f2:	2b40      	cmp	r3, #64	; 0x40
    83f4:	d007      	beq.n	8406 <errata_108+0x36>
        if (((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x50){
    83f6:	2b50      	cmp	r3, #80	; 0x50
    83f8:	d007      	beq.n	840a <errata_108+0x3a>
    return false;
    83fa:	2000      	movs	r0, #0
    83fc:	4770      	bx	lr
    83fe:	2000      	movs	r0, #0
    8400:	4770      	bx	lr
            return true;
    8402:	2001      	movs	r0, #1
    8404:	4770      	bx	lr
            return true;
    8406:	2001      	movs	r0, #1
    8408:	4770      	bx	lr
            return true;
    840a:	2001      	movs	r0, #1
}
    840c:	4770      	bx	lr
    840e:	bf00      	nop
    8410:	f0000fe0 	.word	0xf0000fe0
    8414:	f0000fe4 	.word	0xf0000fe4
    8418:	f0000fe8 	.word	0xf0000fe8

0000841c <SystemCoreClockUpdate>:
    SystemCoreClock = __SYSTEM_CLOCK_64M;
    841c:	4b01      	ldr	r3, [pc, #4]	; (8424 <SystemCoreClockUpdate+0x8>)
    841e:	4a02      	ldr	r2, [pc, #8]	; (8428 <SystemCoreClockUpdate+0xc>)
    8420:	601a      	str	r2, [r3, #0]
}
    8422:	4770      	bx	lr
    8424:	200000e4 	.word	0x200000e4
    8428:	03d09000 	.word	0x03d09000

0000842c <SystemInit>:
{
    842c:	b508      	push	{r3, lr}
    if (errata_16()){
    842e:	f7ff feed 	bl	820c <errata_16>
    8432:	b110      	cbz	r0, 843a <SystemInit+0xe>
        *(volatile uint32_t *)0x4007C074 = 3131961357ul;
    8434:	4b65      	ldr	r3, [pc, #404]	; (85cc <SystemInit+0x1a0>)
    8436:	4a66      	ldr	r2, [pc, #408]	; (85d0 <SystemInit+0x1a4>)
    8438:	601a      	str	r2, [r3, #0]
    if (errata_31()){
    843a:	f7ff ff05 	bl	8248 <errata_31>
    843e:	b128      	cbz	r0, 844c <SystemInit+0x20>
        *(volatile uint32_t *)0x4000053C = ((*(volatile uint32_t *)0x10000244) & 0x0000E000) >> 13;
    8440:	4b64      	ldr	r3, [pc, #400]	; (85d4 <SystemInit+0x1a8>)
    8442:	681b      	ldr	r3, [r3, #0]
    8444:	f3c3 3342 	ubfx	r3, r3, #13, #3
    8448:	4a63      	ldr	r2, [pc, #396]	; (85d8 <SystemInit+0x1ac>)
    844a:	6013      	str	r3, [r2, #0]
    if (errata_32()){
    844c:	f7ff ff22 	bl	8294 <errata_32>
    8450:	b120      	cbz	r0, 845c <SystemInit+0x30>
        CoreDebug->DEMCR &= ~CoreDebug_DEMCR_TRCENA_Msk;
    8452:	4a62      	ldr	r2, [pc, #392]	; (85dc <SystemInit+0x1b0>)
    8454:	68d3      	ldr	r3, [r2, #12]
    8456:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    845a:	60d3      	str	r3, [r2, #12]
    if (errata_36()){
    845c:	f7ff ff38 	bl	82d0 <errata_36>
    8460:	b140      	cbz	r0, 8474 <SystemInit+0x48>
        NRF_CLOCK->EVENTS_DONE = 0;
    8462:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    8466:	2200      	movs	r2, #0
    8468:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
        NRF_CLOCK->EVENTS_CTTO = 0;
    846c:	f8c3 2110 	str.w	r2, [r3, #272]	; 0x110
        NRF_CLOCK->CTIV = 0;
    8470:	f8c3 2538 	str.w	r2, [r3, #1336]	; 0x538
    if (errata_37()){
    8474:	f7ff ff52 	bl	831c <errata_37>
    8478:	b110      	cbz	r0, 8480 <SystemInit+0x54>
        *(volatile uint32_t *)0x400005A0 = 0x3;
    847a:	4b59      	ldr	r3, [pc, #356]	; (85e0 <SystemInit+0x1b4>)
    847c:	2203      	movs	r2, #3
    847e:	601a      	str	r2, [r3, #0]
    if (errata_57()){
    8480:	f7ff ff6a 	bl	8358 <errata_57>
    8484:	b158      	cbz	r0, 849e <SystemInit+0x72>
        *(volatile uint32_t *)0x40005610 = 0x00000005;
    8486:	4b57      	ldr	r3, [pc, #348]	; (85e4 <SystemInit+0x1b8>)
    8488:	2205      	movs	r2, #5
    848a:	601a      	str	r2, [r3, #0]
        *(volatile uint32_t *)0x40005688 = 0x00000001;
    848c:	3378      	adds	r3, #120	; 0x78
    848e:	2201      	movs	r2, #1
    8490:	601a      	str	r2, [r3, #0]
        *(volatile uint32_t *)0x40005618 = 0x00000000;
    8492:	3b70      	subs	r3, #112	; 0x70
    8494:	2200      	movs	r2, #0
    8496:	601a      	str	r2, [r3, #0]
        *(volatile uint32_t *)0x40005614 = 0x0000003F;
    8498:	3b04      	subs	r3, #4
    849a:	223f      	movs	r2, #63	; 0x3f
    849c:	601a      	str	r2, [r3, #0]
    if (errata_66()){
    849e:	f7ff ff79 	bl	8394 <errata_66>
    84a2:	2800      	cmp	r0, #0
    84a4:	d046      	beq.n	8534 <SystemInit+0x108>
        NRF_TEMP->A0 = NRF_FICR->TEMP.A0;
    84a6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    84aa:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
    84ae:	4b4e      	ldr	r3, [pc, #312]	; (85e8 <SystemInit+0x1bc>)
    84b0:	f8c3 1520 	str.w	r1, [r3, #1312]	; 0x520
        NRF_TEMP->A1 = NRF_FICR->TEMP.A1;
    84b4:	f8d2 1408 	ldr.w	r1, [r2, #1032]	; 0x408
    84b8:	f8c3 1524 	str.w	r1, [r3, #1316]	; 0x524
        NRF_TEMP->A2 = NRF_FICR->TEMP.A2;
    84bc:	f8d2 140c 	ldr.w	r1, [r2, #1036]	; 0x40c
    84c0:	f8c3 1528 	str.w	r1, [r3, #1320]	; 0x528
        NRF_TEMP->A3 = NRF_FICR->TEMP.A3;
    84c4:	f8d2 1410 	ldr.w	r1, [r2, #1040]	; 0x410
    84c8:	f8c3 152c 	str.w	r1, [r3, #1324]	; 0x52c
        NRF_TEMP->A4 = NRF_FICR->TEMP.A4;
    84cc:	f8d2 1414 	ldr.w	r1, [r2, #1044]	; 0x414
    84d0:	f8c3 1530 	str.w	r1, [r3, #1328]	; 0x530
        NRF_TEMP->A5 = NRF_FICR->TEMP.A5;
    84d4:	f8d2 1418 	ldr.w	r1, [r2, #1048]	; 0x418
    84d8:	f8c3 1534 	str.w	r1, [r3, #1332]	; 0x534
        NRF_TEMP->B0 = NRF_FICR->TEMP.B0;
    84dc:	f8d2 141c 	ldr.w	r1, [r2, #1052]	; 0x41c
    84e0:	f8c3 1540 	str.w	r1, [r3, #1344]	; 0x540
        NRF_TEMP->B1 = NRF_FICR->TEMP.B1;
    84e4:	f8d2 1420 	ldr.w	r1, [r2, #1056]	; 0x420
    84e8:	f8c3 1544 	str.w	r1, [r3, #1348]	; 0x544
        NRF_TEMP->B2 = NRF_FICR->TEMP.B2;
    84ec:	f8d2 1424 	ldr.w	r1, [r2, #1060]	; 0x424
    84f0:	f8c3 1548 	str.w	r1, [r3, #1352]	; 0x548
        NRF_TEMP->B3 = NRF_FICR->TEMP.B3;
    84f4:	f8d2 1428 	ldr.w	r1, [r2, #1064]	; 0x428
    84f8:	f8c3 154c 	str.w	r1, [r3, #1356]	; 0x54c
        NRF_TEMP->B4 = NRF_FICR->TEMP.B4;
    84fc:	f8d2 142c 	ldr.w	r1, [r2, #1068]	; 0x42c
    8500:	f8c3 1550 	str.w	r1, [r3, #1360]	; 0x550
        NRF_TEMP->B5 = NRF_FICR->TEMP.B5;
    8504:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
    8508:	f8c3 1554 	str.w	r1, [r3, #1364]	; 0x554
        NRF_TEMP->T0 = NRF_FICR->TEMP.T0;
    850c:	f8d2 1434 	ldr.w	r1, [r2, #1076]	; 0x434
    8510:	f8c3 1560 	str.w	r1, [r3, #1376]	; 0x560
        NRF_TEMP->T1 = NRF_FICR->TEMP.T1;
    8514:	f8d2 1438 	ldr.w	r1, [r2, #1080]	; 0x438
    8518:	f8c3 1564 	str.w	r1, [r3, #1380]	; 0x564
        NRF_TEMP->T2 = NRF_FICR->TEMP.T2;
    851c:	f8d2 143c 	ldr.w	r1, [r2, #1084]	; 0x43c
    8520:	f8c3 1568 	str.w	r1, [r3, #1384]	; 0x568
        NRF_TEMP->T3 = NRF_FICR->TEMP.T3;
    8524:	f8d2 1440 	ldr.w	r1, [r2, #1088]	; 0x440
    8528:	f8c3 156c 	str.w	r1, [r3, #1388]	; 0x56c
        NRF_TEMP->T4 = NRF_FICR->TEMP.T4;
    852c:	f8d2 2444 	ldr.w	r2, [r2, #1092]	; 0x444
    8530:	f8c3 2570 	str.w	r2, [r3, #1392]	; 0x570
    if (errata_108()){
    8534:	f7ff ff4c 	bl	83d0 <errata_108>
    8538:	b128      	cbz	r0, 8546 <SystemInit+0x11a>
        *(volatile uint32_t *)0x40000EE4 = *(volatile uint32_t *)0x10000258 & 0x0000004F;
    853a:	4b2c      	ldr	r3, [pc, #176]	; (85ec <SystemInit+0x1c0>)
    853c:	681b      	ldr	r3, [r3, #0]
    853e:	f003 034f 	and.w	r3, r3, #79	; 0x4f
    8542:	4a2b      	ldr	r2, [pc, #172]	; (85f0 <SystemInit+0x1c4>)
    8544:	6013      	str	r3, [r2, #0]
        SCB->CPACR |= (3UL << 20) | (3UL << 22);
    8546:	4a2b      	ldr	r2, [pc, #172]	; (85f4 <SystemInit+0x1c8>)
    8548:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
    854c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
    8550:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
    8554:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
    8558:	f3bf 8f6f 	isb	sy
        if ((NRF_UICR->NFCPINS & UICR_NFCPINS_PROTECT_Msk) == (UICR_NFCPINS_PROTECT_NFC << UICR_NFCPINS_PROTECT_Pos)){
    855c:	f04f 2310 	mov.w	r3, #268439552	; 0x10001000
    8560:	f8d3 320c 	ldr.w	r3, [r3, #524]	; 0x20c
    8564:	f013 0f01 	tst.w	r3, #1
    8568:	d104      	bne.n	8574 <SystemInit+0x148>
    SystemCoreClockUpdate();
    856a:	f7ff ff57 	bl	841c <SystemCoreClockUpdate>
    NVIC_Relocate();
    856e:	f00e f9a1 	bl	168b4 <NVIC_Relocate>
}
    8572:	bd08      	pop	{r3, pc}
            NRF_NVMC->CONFIG = NVMC_CONFIG_WEN_Wen << NVMC_CONFIG_WEN_Pos;
    8574:	4b20      	ldr	r3, [pc, #128]	; (85f8 <SystemInit+0x1cc>)
    8576:	2201      	movs	r2, #1
    8578:	f8c3 2504 	str.w	r2, [r3, #1284]	; 0x504
            while (NRF_NVMC->READY == NVMC_READY_READY_Busy){}
    857c:	4b1e      	ldr	r3, [pc, #120]	; (85f8 <SystemInit+0x1cc>)
    857e:	f8d3 3400 	ldr.w	r3, [r3, #1024]	; 0x400
    8582:	2b00      	cmp	r3, #0
    8584:	d0fa      	beq.n	857c <SystemInit+0x150>
            NRF_UICR->NFCPINS &= ~UICR_NFCPINS_PROTECT_Msk;
    8586:	f04f 2210 	mov.w	r2, #268439552	; 0x10001000
    858a:	f8d2 320c 	ldr.w	r3, [r2, #524]	; 0x20c
    858e:	f023 0301 	bic.w	r3, r3, #1
    8592:	f8c2 320c 	str.w	r3, [r2, #524]	; 0x20c
            while (NRF_NVMC->READY == NVMC_READY_READY_Busy){}
    8596:	4b18      	ldr	r3, [pc, #96]	; (85f8 <SystemInit+0x1cc>)
    8598:	f8d3 3400 	ldr.w	r3, [r3, #1024]	; 0x400
    859c:	2b00      	cmp	r3, #0
    859e:	d0fa      	beq.n	8596 <SystemInit+0x16a>
            NRF_NVMC->CONFIG = NVMC_CONFIG_WEN_Ren << NVMC_CONFIG_WEN_Pos;
    85a0:	4b15      	ldr	r3, [pc, #84]	; (85f8 <SystemInit+0x1cc>)
    85a2:	2200      	movs	r2, #0
    85a4:	f8c3 2504 	str.w	r2, [r3, #1284]	; 0x504
            while (NRF_NVMC->READY == NVMC_READY_READY_Busy){}
    85a8:	4b13      	ldr	r3, [pc, #76]	; (85f8 <SystemInit+0x1cc>)
    85aa:	f8d3 3400 	ldr.w	r3, [r3, #1024]	; 0x400
    85ae:	2b00      	cmp	r3, #0
    85b0:	d0fa      	beq.n	85a8 <SystemInit+0x17c>
  __ASM volatile ("dsb 0xF":::"memory");
    85b2:	f3bf 8f4f 	dsb	sy
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
    85b6:	490f      	ldr	r1, [pc, #60]	; (85f4 <SystemInit+0x1c8>)
    85b8:	68ca      	ldr	r2, [r1, #12]
    85ba:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
    85be:	4b0f      	ldr	r3, [pc, #60]	; (85fc <SystemInit+0x1d0>)
    85c0:	4313      	orrs	r3, r2
    85c2:	60cb      	str	r3, [r1, #12]
    85c4:	f3bf 8f4f 	dsb	sy
    __NOP();
    85c8:	bf00      	nop
    85ca:	e7fd      	b.n	85c8 <SystemInit+0x19c>
    85cc:	4007c074 	.word	0x4007c074
    85d0:	baadf00d 	.word	0xbaadf00d
    85d4:	10000244 	.word	0x10000244
    85d8:	4000053c 	.word	0x4000053c
    85dc:	e000edf0 	.word	0xe000edf0
    85e0:	400005a0 	.word	0x400005a0
    85e4:	40005610 	.word	0x40005610
    85e8:	4000c000 	.word	0x4000c000
    85ec:	10000258 	.word	0x10000258
    85f0:	40000ee4 	.word	0x40000ee4
    85f4:	e000ed00 	.word	0xe000ed00
    85f8:	4001e000 	.word	0x4001e000
    85fc:	05fa0004 	.word	0x05fa0004

00008600 <_start>:

/*
 * Rudimentary startup function.
 */
void _start(void)
{
    8600:	b508      	push	{r3, lr}
    int rc;

    rc = main(0, NULL);
    exit(rc);
#else
    os_init(main);
    8602:	4803      	ldr	r0, [pc, #12]	; (8610 <_start+0x10>)
    8604:	f00f f8dc 	bl	177c0 <os_init>
    os_start();
    8608:	f00f f932 	bl	17870 <os_start>
#endif
}
    860c:	bd08      	pop	{r3, pc}
    860e:	bf00      	nop
    8610:	00008645 	.word	0x00008645

00008614 <_init>:

void
_init(void)
{
}
    8614:	4770      	bx	lr

00008616 <_ZN3app12handle_touch17h28605a1a1e29ff74E>:

#[cfg(feature = "visual_app")]  //  If Visual Rust app is enabled...
use visual::handle_touch;       //  Use the touch handler from the Visual Rust app

#[cfg(not(any(feature = "ui_app", feature = "visual_app")))]  //  If neither druid UI app nor Visual Rust app are enabled...
pub fn handle_touch(_x: u16, _y: u16) { console::print("touch not handled\n"); console::flush(); }  //  Define a touch handler that does nothing
    8616:	b580      	push	{r7, lr}
    8618:	b084      	sub	sp, #16
    861a:	460a      	mov	r2, r1
    861c:	4603      	mov	r3, r0
    861e:	f8ad 000c 	strh.w	r0, [sp, #12]
    8622:	f8ad 100e 	strh.w	r1, [sp, #14]
    8626:	f64a 7086 	movw	r0, #44934	; 0xaf86
    862a:	f2c0 0001 	movt	r0, #1
    862e:	2112      	movs	r1, #18
    8630:	9202      	str	r2, [sp, #8]
    8632:	9301      	str	r3, [sp, #4]
    8634:	f003 fc1c 	bl	be70 <_ZN6mynewt3sys7console5print17h2bc06bd0c362550eE>
    8638:	e7ff      	b.n	863a <_ZN3app12handle_touch17h28605a1a1e29ff74E+0x24>
    863a:	f003 fc5e 	bl	befa <_ZN6mynewt3sys7console5flush17hdc198a9fe895c898E>
    863e:	e7ff      	b.n	8640 <_ZN3app12handle_touch17h28605a1a1e29ff74E+0x2a>
    8640:	b004      	add	sp, #16
    8642:	bd80      	pop	{r7, pc}

00008644 <main>:

///  Main program that initialises the sensor, network driver and starts reading and sending sensor data in the background.
///  main() will be called at Mynewt startup. It replaces the C version of the main() function.
#[no_mangle]                 //  Don't mangle the name "main"
extern "C" fn main() -> ! {  //  Declare extern "C" because it will be called by Mynewt
    8644:	b088      	sub	sp, #32
    //  Initialise the Mynewt packages and internal temperature sensor driver. Any startup
    //  functions defined in pkg.yml of our custom drivers and libraries will be called by 
    //  sysinit().  Here are the startup functions consolidated by Mynewt:
    //  bin/targets/nrf52_my_sensor/generated/src/nrf52_my_sensor-sysinit-app.c
    mynewt::sysinit();
    8646:	f003 f8a6 	bl	b796 <_ZN6mynewt7sysinit17hb099e153a8a301aeE>
    864a:	e7ff      	b.n	864c <main+0x8>
    //  extern { fn start_ble() -> i32; }
    //  let rc = unsafe { start_ble() };
    //  assert!(rc == 0, "BLE fail");

    //  Start the display
    druid::start_display()
    864c:	f004 f862 	bl	c714 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE>
    8650:	9005      	str	r0, [sp, #20]
    8652:	e7ff      	b.n	8654 <main+0x10>
    8654:	f64a 7198 	movw	r1, #44952	; 0xaf98
    8658:	f2c0 0101 	movt	r1, #1
    865c:	f64a 73cc 	movw	r3, #45004	; 0xafcc
    8660:	f2c0 0301 	movt	r3, #1
    8664:	2208      	movs	r2, #8
    8666:	9805      	ldr	r0, [sp, #20]
    8668:	f003 fa98 	bl	bb9c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hca4739a9a91ec005E>
    866c:	e7ff      	b.n	866e <main+0x2a>
        .expect("DSP fail");

    //  Test the display
    #[cfg(feature = "display_app")]  //  If graphics display app is enabled...
    display::test_display()
    866e:	f000 f8c2 	bl	87f6 <_ZN3app7display12test_display17h08c9cf64b305749cE>
    8672:	9004      	str	r0, [sp, #16]
    8674:	e7ff      	b.n	8676 <main+0x32>
    8676:	f64a 71dc 	movw	r1, #45020	; 0xafdc
    867a:	f2c0 0101 	movt	r1, #1
    867e:	f64a 73ec 	movw	r3, #45036	; 0xafec
    8682:	f2c0 0301 	movt	r3, #1
    8686:	220d      	movs	r2, #13
    8688:	9804      	ldr	r0, [sp, #16]
    868a:	f003 fa87 	bl	bb9c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hca4739a9a91ec005E>
    868e:	e7ff      	b.n	8690 <main+0x4c>
        .expect("DSP test fail");

    //  Start the touch sensor
    touch_sensor::start_touch_sensor()
    8690:	f000 fe59 	bl	9346 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE>
    8694:	9003      	str	r0, [sp, #12]
    8696:	e7ff      	b.n	8698 <main+0x54>
    8698:	f64a 71a0 	movw	r1, #44960	; 0xafa0
    869c:	f2c0 0101 	movt	r1, #1
    86a0:	f64a 73fc 	movw	r3, #45052	; 0xaffc
    86a4:	f2c0 0301 	movt	r3, #1
    86a8:	2208      	movs	r2, #8
    86aa:	9803      	ldr	r0, [sp, #12]
    86ac:	f003 fa76 	bl	bb9c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hca4739a9a91ec005E>
    86b0:	e7ff      	b.n	86b2 <main+0x6e>
    #[cfg(feature = "visual_app")]  //  If Visual Rust app is enabled...
    visual::on_start()
        .expect("VIS fail");
    
    //  Main event loop
    loop {                            //  Loop forever...
    86b2:	e7ff      	b.n	86b4 <main+0x70>
    86b4:	a806      	add	r0, sp, #24
        os::eventq_run(               //  Processing events...
            os::eventq_dflt_get()     //  From default event queue.
    86b6:	f003 fac0 	bl	bc3a <_ZN6mynewt6kernel2os15eventq_dflt_get17h53d678d7b494fb18E>
    86ba:	e7ff      	b.n	86bc <main+0x78>
    86bc:	f64a 71a8 	movw	r1, #44968	; 0xafa8
    86c0:	f2c0 0101 	movt	r1, #1
    86c4:	f24b 030c 	movw	r3, #45068	; 0xb00c
    86c8:	f2c0 0301 	movt	r3, #1
    86cc:	a806      	add	r0, sp, #24
    86ce:	2208      	movs	r2, #8
    86d0:	f006 fffd 	bl	f6ce <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h2a1175343ed8bbdfE>
    86d4:	9002      	str	r0, [sp, #8]
    86d6:	e7ff      	b.n	86d8 <main+0x94>
        os::eventq_run(               //  Processing events...
    86d8:	9802      	ldr	r0, [sp, #8]
    86da:	f003 faa4 	bl	bc26 <_ZN6mynewt6kernel2os10eventq_run17h9194563dcf3a5798E>
    86de:	9001      	str	r0, [sp, #4]
    86e0:	e7ff      	b.n	86e2 <main+0x9e>
    86e2:	f64a 71b0 	movw	r1, #44976	; 0xafb0
    86e6:	f2c0 0101 	movt	r1, #1
    86ea:	f24b 031c 	movw	r3, #45084	; 0xb01c
    86ee:	f2c0 0301 	movt	r3, #1
    86f2:	2208      	movs	r2, #8
    86f4:	9801      	ldr	r0, [sp, #4]
    86f6:	f003 fa51 	bl	bb9c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hca4739a9a91ec005E>
    86fa:	e7ff      	b.n	86fc <main+0xb8>
    loop {                            //  Loop forever...
    86fc:	e7da      	b.n	86b4 <main+0x70>

000086fe <rust_begin_unwind>:
    //  Never comes here
}

///  This function is called on panic, like an assertion failure. We display the filename and line number and pause in the debugger. From https://os.phil-opp.com/freestanding-rust-binary/
#[panic_handler]
fn panic(info: &PanicInfo) -> ! {
    86fe:	b08a      	sub	sp, #40	; 0x28
    8700:	9004      	str	r0, [sp, #16]
    //  Display the filename and line number to the Semihosting Console.
    console::print("panic ");
    8702:	f24b 002c 	movw	r0, #45100	; 0xb02c
    8706:	f2c0 0001 	movt	r0, #1
    870a:	2106      	movs	r1, #6
    870c:	f003 fbb0 	bl	be70 <_ZN6mynewt3sys7console5print17h2bc06bd0c362550eE>
    8710:	e7ff      	b.n	8712 <rust_begin_unwind+0x14>
    if let Some(location) = info.location() {
    8712:	9804      	ldr	r0, [sp, #16]
    8714:	f00c fa3c 	bl	14b90 <_ZN4core5panic9PanicInfo8location17h6d10e5dd7f0a464cE>
    8718:	9005      	str	r0, [sp, #20]
    871a:	e7ff      	b.n	871c <rust_begin_unwind+0x1e>
    871c:	9805      	ldr	r0, [sp, #20]
    871e:	2800      	cmp	r0, #0
    8720:	d108      	bne.n	8734 <rust_begin_unwind+0x36>
    8722:	e7ff      	b.n	8724 <rust_begin_unwind+0x26>
        let line = location.line();
        console::print("at ");       console::buffer(&file);
        console::print(" line ");    console::printint(line as i32);
        console::print("\n");        console::flush();
    } else {
        console::print("no loc\n");  console::flush();
    8724:	f24b 0032 	movw	r0, #45106	; 0xb032
    8728:	f2c0 0001 	movt	r0, #1
    872c:	2107      	movs	r1, #7
    872e:	f003 fb9f 	bl	be70 <_ZN6mynewt3sys7console5print17h2bc06bd0c362550eE>
    8732:	e031      	b.n	8798 <rust_begin_unwind+0x9a>
    if let Some(location) = info.location() {
    8734:	9805      	ldr	r0, [sp, #20]
    8736:	9006      	str	r0, [sp, #24]
        let file = location.file();
    8738:	9806      	ldr	r0, [sp, #24]
    873a:	f00c fa2c 	bl	14b96 <_ZN4core5panic8Location4file17h12b926f8213cef5cE>
    873e:	9108      	str	r1, [sp, #32]
    8740:	9007      	str	r0, [sp, #28]
    8742:	e7ff      	b.n	8744 <rust_begin_unwind+0x46>
        let line = location.line();
    8744:	9806      	ldr	r0, [sp, #24]
    8746:	f00c fa2a 	bl	14b9e <_ZN4core5panic8Location4line17h87c6504a14567921E>
    874a:	9009      	str	r0, [sp, #36]	; 0x24
    874c:	e7ff      	b.n	874e <rust_begin_unwind+0x50>
        console::print("at ");       console::buffer(&file);
    874e:	f24b 0039 	movw	r0, #45113	; 0xb039
    8752:	f2c0 0001 	movt	r0, #1
    8756:	2103      	movs	r1, #3
    8758:	f003 fb8a 	bl	be70 <_ZN6mynewt3sys7console5print17h2bc06bd0c362550eE>
    875c:	e7ff      	b.n	875e <rust_begin_unwind+0x60>
    875e:	9807      	ldr	r0, [sp, #28]
    8760:	9908      	ldr	r1, [sp, #32]
    8762:	f003 fbaa 	bl	beba <_ZN6mynewt3sys7console6buffer17h5d231792a5c05dc5E>
    8766:	e7ff      	b.n	8768 <rust_begin_unwind+0x6a>
        console::print(" line ");    console::printint(line as i32);
    8768:	f24b 003c 	movw	r0, #45116	; 0xb03c
    876c:	f2c0 0001 	movt	r0, #1
    8770:	2106      	movs	r1, #6
    8772:	f003 fb7d 	bl	be70 <_ZN6mynewt3sys7console5print17h2bc06bd0c362550eE>
    8776:	e7ff      	b.n	8778 <rust_begin_unwind+0x7a>
    8778:	9809      	ldr	r0, [sp, #36]	; 0x24
    877a:	f003 fbb5 	bl	bee8 <_ZN6mynewt3sys7console8printint17hb4cf23aeef7705a5E>
    877e:	e7ff      	b.n	8780 <rust_begin_unwind+0x82>
        console::print("\n");        console::flush();
    8780:	f24b 0042 	movw	r0, #45122	; 0xb042
    8784:	f2c0 0001 	movt	r0, #1
    8788:	2101      	movs	r1, #1
    878a:	f003 fb71 	bl	be70 <_ZN6mynewt3sys7console5print17h2bc06bd0c362550eE>
    878e:	e7ff      	b.n	8790 <rust_begin_unwind+0x92>
    8790:	f003 fbb3 	bl	befa <_ZN6mynewt3sys7console5flush17hdc198a9fe895c898E>
    8794:	e7ff      	b.n	8796 <rust_begin_unwind+0x98>
    if let Some(location) = info.location() {
    8796:	e003      	b.n	87a0 <rust_begin_unwind+0xa2>
        console::print("no loc\n");  console::flush();
    8798:	f003 fbaf 	bl	befa <_ZN6mynewt3sys7console5flush17hdc198a9fe895c898E>
    879c:	e7ff      	b.n	879e <rust_begin_unwind+0xa0>
    if let Some(location) = info.location() {
    879e:	e7ff      	b.n	87a0 <rust_begin_unwind+0xa2>
/// exception.
#[inline(always)]
pub fn bkpt() {
    match () {
        #[cfg(all(cortex_m, feature = "inline-asm"))]
        () => unsafe { asm!("bkpt" :::: "volatile") },
    87a0:	be00      	bkpt	0x0000
    }
    //  Pause in the debugger.
    bkpt();
    87a2:	e7ff      	b.n	87a4 <rust_begin_unwind+0xa6>
    //  Display the payload.
    console::print(info.payload().downcast_ref::<&str>().unwrap());
    87a4:	9804      	ldr	r0, [sp, #16]
    87a6:	f00c f9f6 	bl	14b96 <_ZN4core5panic8Location4file17h12b926f8213cef5cE>
    87aa:	9003      	str	r0, [sp, #12]
    87ac:	9102      	str	r1, [sp, #8]
    87ae:	e7ff      	b.n	87b0 <rust_begin_unwind+0xb2>
    87b0:	9803      	ldr	r0, [sp, #12]
    87b2:	9902      	ldr	r1, [sp, #8]
    87b4:	f000 fa30 	bl	8c18 <_ZN54_$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$12downcast_ref17hf0e6773b96628c70E>
    87b8:	9001      	str	r0, [sp, #4]
    87ba:	e7ff      	b.n	87bc <rust_begin_unwind+0xbe>
    87bc:	f24b 0144 	movw	r1, #45124	; 0xb044
    87c0:	f2c0 0101 	movt	r1, #1
    87c4:	9801      	ldr	r0, [sp, #4]
    87c6:	f000 f9ba 	bl	8b3e <_ZN4core6option15Option$LT$T$GT$6unwrap17h17b48f2708c41376E>
    87ca:	9000      	str	r0, [sp, #0]
    87cc:	e7ff      	b.n	87ce <rust_begin_unwind+0xd0>
    87ce:	9800      	ldr	r0, [sp, #0]
    87d0:	6800      	ldr	r0, [r0, #0]
    87d2:	9900      	ldr	r1, [sp, #0]
    87d4:	6849      	ldr	r1, [r1, #4]
    87d6:	f003 fb4b 	bl	be70 <_ZN6mynewt3sys7console5print17h2bc06bd0c362550eE>
    87da:	e7ff      	b.n	87dc <rust_begin_unwind+0xde>
    console::print("\n");  console::flush();
    87dc:	f24b 0042 	movw	r0, #45122	; 0xb042
    87e0:	f2c0 0001 	movt	r0, #1
    87e4:	2101      	movs	r1, #1
    87e6:	f003 fb43 	bl	be70 <_ZN6mynewt3sys7console5print17h2bc06bd0c362550eE>
    87ea:	e7ff      	b.n	87ec <rust_begin_unwind+0xee>
    87ec:	f003 fb85 	bl	befa <_ZN6mynewt3sys7console5flush17hdc198a9fe895c898E>
    87f0:	e7ff      	b.n	87f2 <rust_begin_unwind+0xf4>
    //  Loop forever so that device won't restart.
    loop {}
    87f2:	e7ff      	b.n	87f4 <rust_begin_unwind+0xf6>
    87f4:	e7fe      	b.n	87f4 <rust_begin_unwind+0xf6>

000087f6 <_ZN3app7display12test_display17h08c9cf64b305749cE>:
    result::*,
    sys::console,
};

/// Render some graphics and text to the PineTime display. `start_display()` must have been called earlier.
pub fn test_display() -> MynewtResult<()> {
    87f6:	b570      	push	{r4, r5, r6, lr}
    87f8:	f5ad 7d00 	sub.w	sp, sp, #512	; 0x200
    console::print("Rust test display\n"); console::flush();
    87fc:	f24b 0054 	movw	r0, #45140	; 0xb054
    8800:	f2c0 0001 	movt	r0, #1
    8804:	2112      	movs	r1, #18
    8806:	f003 fb33 	bl	be70 <_ZN6mynewt3sys7console5print17h2bc06bd0c362550eE>
    880a:	e7ff      	b.n	880c <_ZN3app7display12test_display17h08c9cf64b305749cE+0x16>
    880c:	f003 fb75 	bl	befa <_ZN6mynewt3sys7console5flush17hdc198a9fe895c898E>
    8810:	e7ff      	b.n	8812 <_ZN3app7display12test_display17h08c9cf64b305749cE+0x1c>
    8812:	2000      	movs	r0, #0
    
    //  Create black background
    let background = Rectangle::<Rgb565>
        ::new( Coord::new( 0, 0 ), Coord::new( 239, 239 ) )   //  Rectangle coordinates
    8814:	9016      	str	r0, [sp, #88]	; 0x58
    8816:	9916      	ldr	r1, [sp, #88]	; 0x58
    8818:	f002 f8c7 	bl	a9aa <_ZN17embedded_graphics5coord14internal_coord5Coord3new17h9ba2f193635b6338E>
    881c:	9015      	str	r0, [sp, #84]	; 0x54
    881e:	9114      	str	r1, [sp, #80]	; 0x50
    8820:	e7ff      	b.n	8822 <_ZN3app7display12test_display17h08c9cf64b305749cE+0x2c>
    8822:	20ef      	movs	r0, #239	; 0xef
    8824:	9013      	str	r0, [sp, #76]	; 0x4c
    8826:	9913      	ldr	r1, [sp, #76]	; 0x4c
    8828:	f002 f8bf 	bl	a9aa <_ZN17embedded_graphics5coord14internal_coord5Coord3new17h9ba2f193635b6338E>
    882c:	9012      	str	r0, [sp, #72]	; 0x48
    882e:	9111      	str	r1, [sp, #68]	; 0x44
    8830:	e7ff      	b.n	8832 <_ZN3app7display12test_display17h08c9cf64b305749cE+0x3c>
    let background = Rectangle::<Rgb565>
    8832:	4668      	mov	r0, sp
    8834:	9911      	ldr	r1, [sp, #68]	; 0x44
    8836:	6001      	str	r1, [r0, #0]
    8838:	a81e      	add	r0, sp, #120	; 0x78
    883a:	9915      	ldr	r1, [sp, #84]	; 0x54
    883c:	9a14      	ldr	r2, [sp, #80]	; 0x50
    883e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    8840:	f004 fc1a 	bl	d078 <_ZN17embedded_graphics10primitives9rectangle18Rectangle$LT$C$GT$3new17h0ad81b0a96d5988aE>
    8844:	e7ff      	b.n	8846 <_ZN3app7display12test_display17h08c9cf64b305749cE+0x50>
    8846:	2000      	movs	r0, #0
        .fill( Some( Rgb565::from(( 0x00, 0x00, 0x00 )) ) );  //  Black
    8848:	f88d 0098 	strb.w	r0, [sp, #152]	; 0x98
    884c:	f88d 0099 	strb.w	r0, [sp, #153]	; 0x99
    8850:	f88d 009a 	strb.w	r0, [sp, #154]	; 0x9a
    8854:	f89d 009a 	ldrb.w	r0, [sp, #154]	; 0x9a
    8858:	f8bd 1098 	ldrh.w	r1, [sp, #152]	; 0x98
    885c:	ea41 4000 	orr.w	r0, r1, r0, lsl #16
    8860:	f002 f9a0 	bl	aba4 <_ZN123_$LT$embedded_graphics..pixelcolor..rgb565..Rgb565$u20$as$u20$core..convert..From$LT$$LP$u8$C$$u20$u8$C$$u20$u8$RP$$GT$$GT$4from17hef1427cf6cf20becE>
    8864:	9010      	str	r0, [sp, #64]	; 0x40
    8866:	e7ff      	b.n	8868 <_ZN3app7display12test_display17h08c9cf64b305749cE+0x72>
    8868:	9810      	ldr	r0, [sp, #64]	; 0x40
    886a:	f8ad 0096 	strh.w	r0, [sp, #150]	; 0x96
    886e:	2101      	movs	r1, #1
    8870:	f8ad 1094 	strh.w	r1, [sp, #148]	; 0x94
    let background = Rectangle::<Rgb565>
    8874:	f8bd 3096 	ldrh.w	r3, [sp, #150]	; 0x96
    8878:	f8bd 2094 	ldrh.w	r2, [sp, #148]	; 0x94
    887c:	a817      	add	r0, sp, #92	; 0x5c
    887e:	a91e      	add	r1, sp, #120	; 0x78
    8880:	f004 f883 	bl	c98a <_ZN125_$LT$embedded_graphics..primitives..rectangle..Rectangle$LT$C$GT$$u20$as$u20$embedded_graphics..style..WithStyle$LT$C$GT$$GT$4fill17hd11fd98104fc2f64E>
    8884:	e7ff      	b.n	8886 <_ZN3app7display12test_display17h08c9cf64b305749cE+0x90>
    8886:	2028      	movs	r0, #40	; 0x28

    //  Create circle
    let circle = Circle::<Rgb565>
        ::new( Coord::new( 40, 40 ), 40 )                     //  Circle centre and radius
    8888:	900f      	str	r0, [sp, #60]	; 0x3c
    888a:	990f      	ldr	r1, [sp, #60]	; 0x3c
    888c:	f002 f88d 	bl	a9aa <_ZN17embedded_graphics5coord14internal_coord5Coord3new17h9ba2f193635b6338E>
    8890:	900e      	str	r0, [sp, #56]	; 0x38
    8892:	910d      	str	r1, [sp, #52]	; 0x34
    8894:	e7ff      	b.n	8896 <_ZN3app7display12test_display17h08c9cf64b305749cE+0xa0>
    8896:	a82d      	add	r0, sp, #180	; 0xb4
    8898:	2328      	movs	r3, #40	; 0x28
    let circle = Circle::<Rgb565>
    889a:	990e      	ldr	r1, [sp, #56]	; 0x38
    889c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    889e:	f000 fd0a 	bl	92b6 <_ZN17embedded_graphics10primitives6circle15Circle$LT$C$GT$3new17h7e88a368c23965d0E>
    88a2:	e7ff      	b.n	88a4 <_ZN3app7display12test_display17h08c9cf64b305749cE+0xae>
    88a4:	20ff      	movs	r0, #255	; 0xff
        .fill( Some( Rgb565::from(( 0xff, 0x00, 0xff )) ) );  //  Magenta
    88a6:	f88d 00d0 	strb.w	r0, [sp, #208]	; 0xd0
    88aa:	2100      	movs	r1, #0
    88ac:	f88d 10d1 	strb.w	r1, [sp, #209]	; 0xd1
    88b0:	f88d 00d2 	strb.w	r0, [sp, #210]	; 0xd2
    88b4:	f89d 00d2 	ldrb.w	r0, [sp, #210]	; 0xd2
    88b8:	f8bd 10d0 	ldrh.w	r1, [sp, #208]	; 0xd0
    88bc:	ea41 4000 	orr.w	r0, r1, r0, lsl #16
    88c0:	f002 f970 	bl	aba4 <_ZN123_$LT$embedded_graphics..pixelcolor..rgb565..Rgb565$u20$as$u20$core..convert..From$LT$$LP$u8$C$$u20$u8$C$$u20$u8$RP$$GT$$GT$4from17hef1427cf6cf20becE>
    88c4:	900c      	str	r0, [sp, #48]	; 0x30
    88c6:	e7ff      	b.n	88c8 <_ZN3app7display12test_display17h08c9cf64b305749cE+0xd2>
    88c8:	980c      	ldr	r0, [sp, #48]	; 0x30
    88ca:	f8ad 00ce 	strh.w	r0, [sp, #206]	; 0xce
    88ce:	2101      	movs	r1, #1
    88d0:	f8ad 10cc 	strh.w	r1, [sp, #204]	; 0xcc
    let circle = Circle::<Rgb565>
    88d4:	f8bd 30ce 	ldrh.w	r3, [sp, #206]	; 0xce
    88d8:	f8bd 20cc 	ldrh.w	r2, [sp, #204]	; 0xcc
    88dc:	a827      	add	r0, sp, #156	; 0x9c
    88de:	a92d      	add	r1, sp, #180	; 0xb4
    88e0:	f000 f9ac 	bl	8c3c <_ZN119_$LT$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$embedded_graphics..style..WithStyle$LT$C$GT$$GT$4fill17h8f96637f6f0bad54E>
    88e4:	e7ff      	b.n	88e6 <_ZN3app7display12test_display17h08c9cf64b305749cE+0xf0>
    88e6:	203c      	movs	r0, #60	; 0x3c

    //  Create square
    let square = Rectangle::<Rgb565>
        ::new( Coord::new( 60, 60 ), Coord::new( 150, 150 ) ) //  Square coordinates
    88e8:	900b      	str	r0, [sp, #44]	; 0x2c
    88ea:	990b      	ldr	r1, [sp, #44]	; 0x2c
    88ec:	f002 f85d 	bl	a9aa <_ZN17embedded_graphics5coord14internal_coord5Coord3new17h9ba2f193635b6338E>
    88f0:	900a      	str	r0, [sp, #40]	; 0x28
    88f2:	9109      	str	r1, [sp, #36]	; 0x24
    88f4:	e7ff      	b.n	88f6 <_ZN3app7display12test_display17h08c9cf64b305749cE+0x100>
    88f6:	2096      	movs	r0, #150	; 0x96
    88f8:	9008      	str	r0, [sp, #32]
    88fa:	9908      	ldr	r1, [sp, #32]
    88fc:	f002 f855 	bl	a9aa <_ZN17embedded_graphics5coord14internal_coord5Coord3new17h9ba2f193635b6338E>
    8900:	9007      	str	r0, [sp, #28]
    8902:	9106      	str	r1, [sp, #24]
    8904:	e7ff      	b.n	8906 <_ZN3app7display12test_display17h08c9cf64b305749cE+0x110>
    let square = Rectangle::<Rgb565>
    8906:	4668      	mov	r0, sp
    8908:	9906      	ldr	r1, [sp, #24]
    890a:	6001      	str	r1, [r0, #0]
    890c:	a83c      	add	r0, sp, #240	; 0xf0
    890e:	990a      	ldr	r1, [sp, #40]	; 0x28
    8910:	9a09      	ldr	r2, [sp, #36]	; 0x24
    8912:	9b07      	ldr	r3, [sp, #28]
    8914:	f004 fbb0 	bl	d078 <_ZN17embedded_graphics10primitives9rectangle18Rectangle$LT$C$GT$3new17h0ad81b0a96d5988aE>
    8918:	e7ff      	b.n	891a <_ZN3app7display12test_display17h08c9cf64b305749cE+0x124>
    891a:	2000      	movs	r0, #0
        .fill( Some( Rgb565::from(( 0x00, 0x00, 0xff )) ) );  //  Blue
    891c:	f88d 0110 	strb.w	r0, [sp, #272]	; 0x110
    8920:	f88d 0111 	strb.w	r0, [sp, #273]	; 0x111
    8924:	20ff      	movs	r0, #255	; 0xff
    8926:	f88d 0112 	strb.w	r0, [sp, #274]	; 0x112
    892a:	f89d 0112 	ldrb.w	r0, [sp, #274]	; 0x112
    892e:	f8bd 1110 	ldrh.w	r1, [sp, #272]	; 0x110
    8932:	ea41 4000 	orr.w	r0, r1, r0, lsl #16
    8936:	f002 f935 	bl	aba4 <_ZN123_$LT$embedded_graphics..pixelcolor..rgb565..Rgb565$u20$as$u20$core..convert..From$LT$$LP$u8$C$$u20$u8$C$$u20$u8$RP$$GT$$GT$4from17hef1427cf6cf20becE>
    893a:	9005      	str	r0, [sp, #20]
    893c:	e7ff      	b.n	893e <_ZN3app7display12test_display17h08c9cf64b305749cE+0x148>
    893e:	9805      	ldr	r0, [sp, #20]
    8940:	f8ad 010e 	strh.w	r0, [sp, #270]	; 0x10e
    8944:	2101      	movs	r1, #1
    8946:	f8ad 110c 	strh.w	r1, [sp, #268]	; 0x10c
    let square = Rectangle::<Rgb565>
    894a:	f8bd 310e 	ldrh.w	r3, [sp, #270]	; 0x10e
    894e:	f8bd 210c 	ldrh.w	r2, [sp, #268]	; 0x10c
    8952:	a835      	add	r0, sp, #212	; 0xd4
    8954:	a93c      	add	r1, sp, #240	; 0xf0
    8956:	f004 f818 	bl	c98a <_ZN125_$LT$embedded_graphics..primitives..rectangle..Rectangle$LT$C$GT$$u20$as$u20$embedded_graphics..style..WithStyle$LT$C$GT$$GT$4fill17hd11fd98104fc2f64E>
    895a:	e7ff      	b.n	895c <_ZN3app7display12test_display17h08c9cf64b305749cE+0x166>

    //  Create text
    let text = fonts::Font12x16::<Rgb565>
    895c:	f24b 0166 	movw	r1, #45158	; 0xb066
    8960:	f2c0 0101 	movt	r1, #1
    8964:	a85a      	add	r0, sp, #360	; 0x168
    8966:	220d      	movs	r2, #13
    8968:	f004 fc6c 	bl	d244 <_ZN127_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$embedded_graphics..fonts..Font$LT$C$GT$$GT$10render_str17hf94c94d2e27ab58cE>
    896c:	e7ff      	b.n	896e <_ZN3app7display12test_display17h08c9cf64b305749cE+0x178>
    896e:	2000      	movs	r0, #0
        ::render_str("I AM PINETIME")                          //  Text to be rendered
        .stroke( Some( Rgb565::from(( 0x00, 0x00, 0x00 )) ) )  //  Black text
    8970:	f88d 0188 	strb.w	r0, [sp, #392]	; 0x188
    8974:	f88d 0189 	strb.w	r0, [sp, #393]	; 0x189
    8978:	f88d 018a 	strb.w	r0, [sp, #394]	; 0x18a
    897c:	f89d 018a 	ldrb.w	r0, [sp, #394]	; 0x18a
    8980:	f8bd 1188 	ldrh.w	r1, [sp, #392]	; 0x188
    8984:	ea41 4000 	orr.w	r0, r1, r0, lsl #16
    8988:	f002 f90c 	bl	aba4 <_ZN123_$LT$embedded_graphics..pixelcolor..rgb565..Rgb565$u20$as$u20$core..convert..From$LT$$LP$u8$C$$u20$u8$C$$u20$u8$RP$$GT$$GT$4from17hef1427cf6cf20becE>
    898c:	9004      	str	r0, [sp, #16]
    898e:	e7ff      	b.n	8990 <_ZN3app7display12test_display17h08c9cf64b305749cE+0x19a>
    8990:	9804      	ldr	r0, [sp, #16]
    8992:	f8ad 0186 	strh.w	r0, [sp, #390]	; 0x186
    8996:	2101      	movs	r1, #1
    8998:	f8ad 1184 	strh.w	r1, [sp, #388]	; 0x184
    let text = fonts::Font12x16::<Rgb565>
    899c:	f8bd 3186 	ldrh.w	r3, [sp, #390]	; 0x186
    89a0:	f8bd 2184 	ldrh.w	r2, [sp, #388]	; 0x184
    89a4:	a853      	add	r0, sp, #332	; 0x14c
    89a6:	a95a      	add	r1, sp, #360	; 0x168
    89a8:	f004 fd06 	bl	d3b8 <_ZN132_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$embedded_graphics..style..WithStyle$LT$C$GT$$GT$6stroke17h71ea3868a8d4ad98E>
    89ac:	e7ff      	b.n	89ae <_ZN3app7display12test_display17h08c9cf64b305749cE+0x1b8>
    89ae:	20ff      	movs	r0, #255	; 0xff
        .fill(   Some( Rgb565::from(( 0xff, 0xff, 0x00 )) ) )  //  Yellow background
    89b0:	f88d 0190 	strb.w	r0, [sp, #400]	; 0x190
    89b4:	f88d 0191 	strb.w	r0, [sp, #401]	; 0x191
    89b8:	2000      	movs	r0, #0
    89ba:	f88d 0192 	strb.w	r0, [sp, #402]	; 0x192
    89be:	f89d 0192 	ldrb.w	r0, [sp, #402]	; 0x192
    89c2:	f8bd 1190 	ldrh.w	r1, [sp, #400]	; 0x190
    89c6:	ea41 4000 	orr.w	r0, r1, r0, lsl #16
    89ca:	f002 f8eb 	bl	aba4 <_ZN123_$LT$embedded_graphics..pixelcolor..rgb565..Rgb565$u20$as$u20$core..convert..From$LT$$LP$u8$C$$u20$u8$C$$u20$u8$RP$$GT$$GT$4from17hef1427cf6cf20becE>
    89ce:	9003      	str	r0, [sp, #12]
    89d0:	e7ff      	b.n	89d2 <_ZN3app7display12test_display17h08c9cf64b305749cE+0x1dc>
    89d2:	9803      	ldr	r0, [sp, #12]
    89d4:	f8ad 018e 	strh.w	r0, [sp, #398]	; 0x18e
    89d8:	2101      	movs	r1, #1
    89da:	f8ad 118c 	strh.w	r1, [sp, #396]	; 0x18c
    let text = fonts::Font12x16::<Rgb565>
    89de:	f8bd 318e 	ldrh.w	r3, [sp, #398]	; 0x18e
    89e2:	f8bd 218c 	ldrh.w	r2, [sp, #396]	; 0x18c
    89e6:	a84c      	add	r0, sp, #304	; 0x130
    89e8:	a953      	add	r1, sp, #332	; 0x14c
    89ea:	f004 fccf 	bl	d38c <_ZN132_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$embedded_graphics..style..WithStyle$LT$C$GT$$GT$4fill17hf6b439f588e2dd0eE>
    89ee:	e7ff      	b.n	89f0 <_ZN3app7display12test_display17h08c9cf64b305749cE+0x1fa>
    89f0:	2014      	movs	r0, #20
    89f2:	2110      	movs	r1, #16
        .translate( Coord::new( 20, 16 ));                     //  Shift the text
    89f4:	f001 ffd9 	bl	a9aa <_ZN17embedded_graphics5coord14internal_coord5Coord3new17h9ba2f193635b6338E>
    89f8:	9002      	str	r0, [sp, #8]
    89fa:	9101      	str	r1, [sp, #4]
    89fc:	e7ff      	b.n	89fe <_ZN3app7display12test_display17h08c9cf64b305749cE+0x208>
    89fe:	a845      	add	r0, sp, #276	; 0x114
    8a00:	a94c      	add	r1, sp, #304	; 0x130
    let text = fonts::Font12x16::<Rgb565>
    8a02:	9a02      	ldr	r2, [sp, #8]
    8a04:	9b01      	ldr	r3, [sp, #4]
    8a06:	f004 fc4c 	bl	d2a2 <_ZN127_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$embedded_graphics..transform..Transform$GT$9translate17h1443ba0fd8ad8bf5E>
    8a0a:	e7ff      	b.n	8a0c <_ZN3app7display12test_display17h08c9cf64b305749cE+0x216>
    8a0c:	a817      	add	r0, sp, #92	; 0x5c
    8a0e:	a965      	add	r1, sp, #404	; 0x194

    //  Render background, circle, square and text to display
    druid::draw_to_display(background);
    8a10:	460a      	mov	r2, r1
    8a12:	e8b0 5008 	ldmia.w	r0!, {r3, ip, lr}
    8a16:	e8a2 5008 	stmia.w	r2!, {r3, ip, lr}
    8a1a:	e890 5018 	ldmia.w	r0, {r3, r4, ip, lr}
    8a1e:	e882 5018 	stmia.w	r2, {r3, r4, ip, lr}
    8a22:	4608      	mov	r0, r1
    8a24:	f005 f889 	bl	db3a <_ZN22piet_embedded_graphics7display15draw_to_display17hde7134b7e3c479b2E>
    8a28:	e7ff      	b.n	8a2a <_ZN3app7display12test_display17h08c9cf64b305749cE+0x234>
    8a2a:	a827      	add	r0, sp, #156	; 0x9c
    8a2c:	a96c      	add	r1, sp, #432	; 0x1b0
    druid::draw_to_display(circle);
    8a2e:	460a      	mov	r2, r1
    8a30:	e890 5078 	ldmia.w	r0, {r3, r4, r5, r6, ip, lr}
    8a34:	e882 5078 	stmia.w	r2, {r3, r4, r5, r6, ip, lr}
    8a38:	4608      	mov	r0, r1
    8a3a:	f000 fc63 	bl	9304 <_ZN22piet_embedded_graphics7display15draw_to_display17h0222e512a4ab9d16E>
    8a3e:	e7ff      	b.n	8a40 <_ZN3app7display12test_display17h08c9cf64b305749cE+0x24a>
    8a40:	a835      	add	r0, sp, #212	; 0xd4
    8a42:	a972      	add	r1, sp, #456	; 0x1c8
    druid::draw_to_display(square);
    8a44:	460a      	mov	r2, r1
    8a46:	e8b0 5008 	ldmia.w	r0!, {r3, ip, lr}
    8a4a:	e8a2 5008 	stmia.w	r2!, {r3, ip, lr}
    8a4e:	e890 5018 	ldmia.w	r0, {r3, r4, ip, lr}
    8a52:	e882 5018 	stmia.w	r2, {r3, r4, ip, lr}
    8a56:	4608      	mov	r0, r1
    8a58:	f005 f86f 	bl	db3a <_ZN22piet_embedded_graphics7display15draw_to_display17hde7134b7e3c479b2E>
    8a5c:	e7ff      	b.n	8a5e <_ZN3app7display12test_display17h08c9cf64b305749cE+0x268>
    8a5e:	a845      	add	r0, sp, #276	; 0x114
    8a60:	a979      	add	r1, sp, #484	; 0x1e4
    druid::draw_to_display(text);    
    8a62:	460a      	mov	r2, r1
    8a64:	e8b0 5008 	ldmia.w	r0!, {r3, ip, lr}
    8a68:	e8a2 5008 	stmia.w	r2!, {r3, ip, lr}
    8a6c:	e890 5018 	ldmia.w	r0, {r3, r4, ip, lr}
    8a70:	e882 5018 	stmia.w	r2, {r3, r4, ip, lr}
    8a74:	4608      	mov	r0, r1
    8a76:	f001 fec3 	bl	a800 <_ZN22piet_embedded_graphics7display15draw_to_display17ha79c713c1ca91064E>
    8a7a:	e7ff      	b.n	8a7c <_ZN3app7display12test_display17h08c9cf64b305749cE+0x286>
    8a7c:	2001      	movs	r0, #1
/*
    8a7e:	f50d 7d00 	add.w	sp, sp, #512	; 0x200
    8a82:	bd70      	pop	{r4, r5, r6, pc}

00008a84 <_ZN4core6option15Option$LT$T$GT$3map17h222644965ed6bb1fE>:
    8a84:	b580      	push	{r7, lr}
    8a86:	b090      	sub	sp, #64	; 0x40
    8a88:	2200      	movs	r2, #0
    8a8a:	f88d 203e 	strb.w	r2, [sp, #62]	; 0x3e
    8a8e:	f88d 203f 	strb.w	r2, [sp, #63]	; 0x3f
    8a92:	2201      	movs	r2, #1
    8a94:	f88d 203f 	strb.w	r2, [sp, #63]	; 0x3f
    8a98:	f88d 203e 	strb.w	r2, [sp, #62]	; 0x3e
    8a9c:	680a      	ldr	r2, [r1, #0]
    8a9e:	2a00      	cmp	r2, #0
    8aa0:	9101      	str	r1, [sp, #4]
    8aa2:	9000      	str	r0, [sp, #0]
    8aa4:	d001      	beq.n	8aaa <_ZN4core6option15Option$LT$T$GT$3map17h222644965ed6bb1fE+0x26>
    8aa6:	e7ff      	b.n	8aa8 <_ZN4core6option15Option$LT$T$GT$3map17h222644965ed6bb1fE+0x24>
    8aa8:	e004      	b.n	8ab4 <_ZN4core6option15Option$LT$T$GT$3map17h222644965ed6bb1fE+0x30>
    8aaa:	2000      	movs	r0, #0
    8aac:	9900      	ldr	r1, [sp, #0]
    8aae:	6008      	str	r0, [r1, #0]
    8ab0:	e032      	b.n	8b18 <_ZN4core6option15Option$LT$T$GT$3map17h222644965ed6bb1fE+0x94>
    8ab2:	defe      	udf	#254	; 0xfe
    8ab4:	2000      	movs	r0, #0
    8ab6:	f88d 003f 	strb.w	r0, [sp, #63]	; 0x3f
    8aba:	9901      	ldr	r1, [sp, #4]
    8abc:	684a      	ldr	r2, [r1, #4]
    8abe:	688b      	ldr	r3, [r1, #8]
    8ac0:	f8d1 c00c 	ldr.w	ip, [r1, #12]
    8ac4:	f8cd c014 	str.w	ip, [sp, #20]
    8ac8:	9304      	str	r3, [sp, #16]
    8aca:	9203      	str	r2, [sp, #12]
    8acc:	f88d 003e 	strb.w	r0, [sp, #62]	; 0x3e
    8ad0:	9803      	ldr	r0, [sp, #12]
    8ad2:	9a04      	ldr	r2, [sp, #16]
    8ad4:	9b05      	ldr	r3, [sp, #20]
    8ad6:	930e      	str	r3, [sp, #56]	; 0x38
    8ad8:	920d      	str	r2, [sp, #52]	; 0x34
    8ada:	900c      	str	r0, [sp, #48]	; 0x30
    8adc:	980c      	ldr	r0, [sp, #48]	; 0x30
    8ade:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    8ae0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    8ae2:	930b      	str	r3, [sp, #44]	; 0x2c
    8ae4:	920a      	str	r2, [sp, #40]	; 0x28
    8ae6:	9009      	str	r0, [sp, #36]	; 0x24
    8ae8:	a806      	add	r0, sp, #24
    8aea:	a909      	add	r1, sp, #36	; 0x24
    8aec:	f000 fbbf 	bl	926e <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h656dcccd99c9c578E>
    8af0:	e7ff      	b.n	8af2 <_ZN4core6option15Option$LT$T$GT$3map17h222644965ed6bb1fE+0x6e>
    8af2:	9806      	ldr	r0, [sp, #24]
    8af4:	9907      	ldr	r1, [sp, #28]
    8af6:	9a08      	ldr	r2, [sp, #32]
    8af8:	9b00      	ldr	r3, [sp, #0]
    8afa:	60da      	str	r2, [r3, #12]
    8afc:	6099      	str	r1, [r3, #8]
    8afe:	6058      	str	r0, [r3, #4]
    8b00:	2001      	movs	r0, #1
    8b02:	6018      	str	r0, [r3, #0]
    8b04:	e008      	b.n	8b18 <_ZN4core6option15Option$LT$T$GT$3map17h222644965ed6bb1fE+0x94>
    8b06:	9801      	ldr	r0, [sp, #4]
    8b08:	6801      	ldr	r1, [r0, #0]
    8b0a:	2901      	cmp	r1, #1
    8b0c:	d00c      	beq.n	8b28 <_ZN4core6option15Option$LT$T$GT$3map17h222644965ed6bb1fE+0xa4>
    8b0e:	e015      	b.n	8b3c <_ZN4core6option15Option$LT$T$GT$3map17h222644965ed6bb1fE+0xb8>
    8b10:	2000      	movs	r0, #0
    8b12:	f88d 003e 	strb.w	r0, [sp, #62]	; 0x3e
    8b16:	e7f6      	b.n	8b06 <_ZN4core6option15Option$LT$T$GT$3map17h222644965ed6bb1fE+0x82>
    8b18:	f89d 003e 	ldrb.w	r0, [sp, #62]	; 0x3e
    8b1c:	07c0      	lsls	r0, r0, #31
    8b1e:	2800      	cmp	r0, #0
    8b20:	d1f6      	bne.n	8b10 <_ZN4core6option15Option$LT$T$GT$3map17h222644965ed6bb1fE+0x8c>
    8b22:	e7f0      	b.n	8b06 <_ZN4core6option15Option$LT$T$GT$3map17h222644965ed6bb1fE+0x82>
    8b24:	b010      	add	sp, #64	; 0x40
    8b26:	bd80      	pop	{r7, pc}
    8b28:	f89d 003f 	ldrb.w	r0, [sp, #63]	; 0x3f
    8b2c:	07c0      	lsls	r0, r0, #31
    8b2e:	2800      	cmp	r0, #0
    8b30:	d0f8      	beq.n	8b24 <_ZN4core6option15Option$LT$T$GT$3map17h222644965ed6bb1fE+0xa0>
    8b32:	e7ff      	b.n	8b34 <_ZN4core6option15Option$LT$T$GT$3map17h222644965ed6bb1fE+0xb0>
    8b34:	2000      	movs	r0, #0
    8b36:	f88d 003f 	strb.w	r0, [sp, #63]	; 0x3f
    8b3a:	e7f3      	b.n	8b24 <_ZN4core6option15Option$LT$T$GT$3map17h222644965ed6bb1fE+0xa0>
    8b3c:	e7f2      	b.n	8b24 <_ZN4core6option15Option$LT$T$GT$3map17h222644965ed6bb1fE+0xa0>

00008b3e <_ZN4core6option15Option$LT$T$GT$6unwrap17h17b48f2708c41376E>:
    8b3e:	b084      	sub	sp, #16
    8b40:	9002      	str	r0, [sp, #8]
    8b42:	9802      	ldr	r0, [sp, #8]
    8b44:	2800      	cmp	r0, #0
    8b46:	4602      	mov	r2, r0
    8b48:	bf18      	it	ne
    8b4a:	2201      	movne	r2, #1
    8b4c:	2800      	cmp	r0, #0
    8b4e:	9101      	str	r1, [sp, #4]
    8b50:	d001      	beq.n	8b56 <_ZN4core6option15Option$LT$T$GT$6unwrap17h17b48f2708c41376E+0x18>
    8b52:	e7ff      	b.n	8b54 <_ZN4core6option15Option$LT$T$GT$6unwrap17h17b48f2708c41376E+0x16>
    8b54:	e009      	b.n	8b6a <_ZN4core6option15Option$LT$T$GT$6unwrap17h17b48f2708c41376E+0x2c>
    8b56:	f24b 0073 	movw	r0, #45171	; 0xb073
    8b5a:	f2c0 0001 	movt	r0, #1
    8b5e:	212b      	movs	r1, #43	; 0x2b
    8b60:	9a01      	ldr	r2, [sp, #4]
    8b62:	f00c f81e 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    8b66:	defe      	udf	#254	; 0xfe
    8b68:	defe      	udf	#254	; 0xfe
    8b6a:	9802      	ldr	r0, [sp, #8]
    8b6c:	9003      	str	r0, [sp, #12]
    8b6e:	9803      	ldr	r0, [sp, #12]
    8b70:	9902      	ldr	r1, [sp, #8]
    8b72:	2900      	cmp	r1, #0
    8b74:	9000      	str	r0, [sp, #0]
    8b76:	d003      	beq.n	8b80 <_ZN4core6option15Option$LT$T$GT$6unwrap17h17b48f2708c41376E+0x42>
    8b78:	e7ff      	b.n	8b7a <_ZN4core6option15Option$LT$T$GT$6unwrap17h17b48f2708c41376E+0x3c>
    8b7a:	9800      	ldr	r0, [sp, #0]
    8b7c:	b004      	add	sp, #16
    8b7e:	4770      	bx	lr
    8b80:	e7fb      	b.n	8b7a <_ZN4core6option15Option$LT$T$GT$6unwrap17h17b48f2708c41376E+0x3c>

00008b82 <_ZN31_$LT$dyn$u20$core..any..Any$GT$12downcast_ref17h01e03a6ac4733065E>:
    8b82:	b580      	push	{r7, lr}
    8b84:	b084      	sub	sp, #16
    8b86:	9001      	str	r0, [sp, #4]
    8b88:	9102      	str	r1, [sp, #8]
    8b8a:	9801      	ldr	r0, [sp, #4]
    8b8c:	9902      	ldr	r1, [sp, #8]
    8b8e:	f000 f810 	bl	8bb2 <_ZN31_$LT$dyn$u20$core..any..Any$GT$2is17h93e5f8e6e1177df6E>
    8b92:	9000      	str	r0, [sp, #0]
    8b94:	e7ff      	b.n	8b96 <_ZN31_$LT$dyn$u20$core..any..Any$GT$12downcast_ref17h01e03a6ac4733065E+0x14>
    8b96:	9800      	ldr	r0, [sp, #0]
    8b98:	07c1      	lsls	r1, r0, #31
    8b9a:	2900      	cmp	r1, #0
    8b9c:	d103      	bne.n	8ba6 <_ZN31_$LT$dyn$u20$core..any..Any$GT$12downcast_ref17h01e03a6ac4733065E+0x24>
    8b9e:	e7ff      	b.n	8ba0 <_ZN31_$LT$dyn$u20$core..any..Any$GT$12downcast_ref17h01e03a6ac4733065E+0x1e>
    8ba0:	2000      	movs	r0, #0
    8ba2:	9003      	str	r0, [sp, #12]
    8ba4:	e002      	b.n	8bac <_ZN31_$LT$dyn$u20$core..any..Any$GT$12downcast_ref17h01e03a6ac4733065E+0x2a>
    8ba6:	9801      	ldr	r0, [sp, #4]
    8ba8:	9003      	str	r0, [sp, #12]
    8baa:	e7ff      	b.n	8bac <_ZN31_$LT$dyn$u20$core..any..Any$GT$12downcast_ref17h01e03a6ac4733065E+0x2a>
    8bac:	9803      	ldr	r0, [sp, #12]
    8bae:	b004      	add	sp, #16
    8bb0:	bd80      	pop	{r7, pc}

00008bb2 <_ZN31_$LT$dyn$u20$core..any..Any$GT$2is17h93e5f8e6e1177df6E>:
    8bb2:	b580      	push	{r7, lr}
    8bb4:	b088      	sub	sp, #32
    8bb6:	9002      	str	r0, [sp, #8]
    8bb8:	9103      	str	r1, [sp, #12]
    8bba:	f000 f815 	bl	8be8 <_ZN4core3any6TypeId2of17h2131a0487e936df0E>
    8bbe:	9105      	str	r1, [sp, #20]
    8bc0:	9004      	str	r0, [sp, #16]
    8bc2:	e7ff      	b.n	8bc4 <_ZN31_$LT$dyn$u20$core..any..Any$GT$2is17h93e5f8e6e1177df6E+0x12>
    8bc4:	9802      	ldr	r0, [sp, #8]
    8bc6:	9903      	ldr	r1, [sp, #12]
    8bc8:	68c9      	ldr	r1, [r1, #12]
    8bca:	4788      	blx	r1
    8bcc:	9107      	str	r1, [sp, #28]
    8bce:	9006      	str	r0, [sp, #24]
    8bd0:	e7ff      	b.n	8bd2 <_ZN31_$LT$dyn$u20$core..any..Any$GT$2is17h93e5f8e6e1177df6E+0x20>
    8bd2:	a804      	add	r0, sp, #16
    8bd4:	a906      	add	r1, sp, #24
    8bd6:	f006 f8cf 	bl	ed78 <_ZN58_$LT$core..any..TypeId$u20$as$u20$core..cmp..PartialEq$GT$2eq17h428f46bbd5e42aa0E>
    8bda:	9001      	str	r0, [sp, #4]
    8bdc:	e7ff      	b.n	8bde <_ZN31_$LT$dyn$u20$core..any..Any$GT$2is17h93e5f8e6e1177df6E+0x2c>
    8bde:	9801      	ldr	r0, [sp, #4]
    8be0:	f000 0001 	and.w	r0, r0, #1
    8be4:	b008      	add	sp, #32
    8be6:	bd80      	pop	{r7, pc}

00008be8 <_ZN4core3any6TypeId2of17h2131a0487e936df0E>:
    8be8:	b086      	sub	sp, #24
    8bea:	f249 40d9 	movw	r0, #38105	; 0x94d9
    8bee:	f2c1 1010 	movt	r0, #4368	; 0x1110
    8bf2:	9005      	str	r0, [sp, #20]
    8bf4:	f249 7064 	movw	r0, #38756	; 0x9764
    8bf8:	f2c7 00b0 	movt	r0, #28848	; 0x70b0
    8bfc:	9004      	str	r0, [sp, #16]
    8bfe:	9804      	ldr	r0, [sp, #16]
    8c00:	9905      	ldr	r1, [sp, #20]
    8c02:	9001      	str	r0, [sp, #4]
    8c04:	9100      	str	r1, [sp, #0]
    8c06:	e7ff      	b.n	8c08 <_ZN4core3any6TypeId2of17h2131a0487e936df0E+0x20>
    8c08:	9801      	ldr	r0, [sp, #4]
    8c0a:	9002      	str	r0, [sp, #8]
    8c0c:	9900      	ldr	r1, [sp, #0]
    8c0e:	9103      	str	r1, [sp, #12]
    8c10:	9802      	ldr	r0, [sp, #8]
    8c12:	9903      	ldr	r1, [sp, #12]
    8c14:	b006      	add	sp, #24
    8c16:	4770      	bx	lr

00008c18 <_ZN54_$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$12downcast_ref17hf0e6773b96628c70E>:
    8c18:	b580      	push	{r7, lr}
    8c1a:	b084      	sub	sp, #16
    8c1c:	9002      	str	r0, [sp, #8]
    8c1e:	9103      	str	r1, [sp, #12]
    8c20:	9802      	ldr	r0, [sp, #8]
    8c22:	9903      	ldr	r1, [sp, #12]
    8c24:	f7ff ffad 	bl	8b82 <_ZN31_$LT$dyn$u20$core..any..Any$GT$12downcast_ref17h01e03a6ac4733065E>
    8c28:	9001      	str	r0, [sp, #4]
    8c2a:	e7ff      	b.n	8c2c <_ZN54_$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$12downcast_ref17hf0e6773b96628c70E+0x14>
    8c2c:	9801      	ldr	r0, [sp, #4]
    8c2e:	b004      	add	sp, #16
    8c30:	bd80      	pop	{r7, pc}

00008c32 <_ZN116_$LT$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfaf6e8aae9dccdb2E>:
    C: PixelColor,
{
    type Item = Pixel<C>;
    type IntoIter = CircleIterator<C>;

    fn into_iter(self) -> Self::IntoIter {
    8c32:	b580      	push	{r7, lr}
        (&self).into_iter()
    8c34:	f000 f816 	bl	8c64 <_ZN120_$LT$$RF$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd46718949ce67527E>
    8c38:	e7ff      	b.n	8c3a <_ZN116_$LT$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfaf6e8aae9dccdb2E+0x8>
    }
    8c3a:	bd80      	pop	{r7, pc}

00008c3c <_ZN119_$LT$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$embedded_graphics..style..WithStyle$LT$C$GT$$GT$4fill17h8f96637f6f0bad54E>:
    fn fill(mut self, color: Option<C>) -> Self {
    8c3c:	b5f0      	push	{r4, r5, r6, r7, lr}
    8c3e:	b081      	sub	sp, #4
    8c40:	469c      	mov	ip, r3
    8c42:	4696      	mov	lr, r2
    8c44:	f8ad 2000 	strh.w	r2, [sp]
    8c48:	f8ad 3002 	strh.w	r3, [sp, #2]
        self.style.fill_color = color;
    8c4c:	f8bd 2000 	ldrh.w	r2, [sp]
    8c50:	f8bd 3002 	ldrh.w	r3, [sp, #2]
    8c54:	818a      	strh	r2, [r1, #12]
    8c56:	81cb      	strh	r3, [r1, #14]
        self
    8c58:	e891 00fc 	ldmia.w	r1, {r2, r3, r4, r5, r6, r7}
    8c5c:	e880 00fc 	stmia.w	r0, {r2, r3, r4, r5, r6, r7}
    }
    8c60:	b001      	add	sp, #4
    8c62:	bdf0      	pop	{r4, r5, r6, r7, pc}

00008c64 <_ZN120_$LT$$RF$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd46718949ce67527E>:
    C: PixelColor,
{
    type Item = Pixel<C>;
    type IntoIter = CircleIterator<C>;

    fn into_iter(self) -> Self::IntoIter {
    8c64:	b5b0      	push	{r4, r5, r7, lr}
    8c66:	b08c      	sub	sp, #48	; 0x30
    8c68:	9108      	str	r1, [sp, #32]
        CircleIterator {
            center: self.center,
    8c6a:	9908      	ldr	r1, [sp, #32]
    8c6c:	680a      	ldr	r2, [r1, #0]
    8c6e:	684b      	ldr	r3, [r1, #4]
            radius: self.radius,
    8c70:	f8d1 c008 	ldr.w	ip, [r1, #8]
            style: self.style,
    8c74:	f8b1 e014 	ldrh.w	lr, [r1, #20]
    8c78:	f8ad e02c 	strh.w	lr, [sp, #44]	; 0x2c
    8c7c:	f8d1 e00c 	ldr.w	lr, [r1, #12]
    8c80:	6909      	ldr	r1, [r1, #16]
    8c82:	910a      	str	r1, [sp, #40]	; 0x28
    8c84:	f8cd e024 	str.w	lr, [sp, #36]	; 0x24
            x: -(self.radius as i32),
    8c88:	9908      	ldr	r1, [sp, #32]
    8c8a:	6889      	ldr	r1, [r1, #8]
    8c8c:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
    8c90:	9007      	str	r0, [sp, #28]
    8c92:	9206      	str	r2, [sp, #24]
    8c94:	9305      	str	r3, [sp, #20]
    8c96:	f8cd c010 	str.w	ip, [sp, #16]
    8c9a:	9103      	str	r1, [sp, #12]
    8c9c:	d023      	beq.n	8ce6 <_ZN120_$LT$$RF$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd46718949ce67527E+0x82>
    8c9e:	e7ff      	b.n	8ca0 <_ZN120_$LT$$RF$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd46718949ce67527E+0x3c>
    8ca0:	9803      	ldr	r0, [sp, #12]
    8ca2:	4241      	negs	r1, r0
            y: -(self.radius as i32),
    8ca4:	9a08      	ldr	r2, [sp, #32]
    8ca6:	6892      	ldr	r2, [r2, #8]
    8ca8:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
    8cac:	9102      	str	r1, [sp, #8]
    8cae:	9201      	str	r2, [sp, #4]
    8cb0:	d025      	beq.n	8cfe <_ZN120_$LT$$RF$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd46718949ce67527E+0x9a>
    8cb2:	e7ff      	b.n	8cb4 <_ZN120_$LT$$RF$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd46718949ce67527E+0x50>
    8cb4:	9801      	ldr	r0, [sp, #4]
    8cb6:	4241      	negs	r1, r0
        CircleIterator {
    8cb8:	9a06      	ldr	r2, [sp, #24]
    8cba:	9b07      	ldr	r3, [sp, #28]
    8cbc:	601a      	str	r2, [r3, #0]
    8cbe:	f8dd c014 	ldr.w	ip, [sp, #20]
    8cc2:	f8c3 c004 	str.w	ip, [r3, #4]
    8cc6:	f8dd e010 	ldr.w	lr, [sp, #16]
    8cca:	f8c3 e008 	str.w	lr, [r3, #8]
    8cce:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
    8cd2:	839c      	strh	r4, [r3, #28]
    8cd4:	9c09      	ldr	r4, [sp, #36]	; 0x24
    8cd6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    8cd8:	619d      	str	r5, [r3, #24]
    8cda:	615c      	str	r4, [r3, #20]
    8cdc:	9c02      	ldr	r4, [sp, #8]
    8cde:	60dc      	str	r4, [r3, #12]
    8ce0:	6119      	str	r1, [r3, #16]
        }
    }
    8ce2:	b00c      	add	sp, #48	; 0x30
    8ce4:	bdb0      	pop	{r4, r5, r7, pc}
            x: -(self.radius as i32),
    8ce6:	f24b 1020 	movw	r0, #45344	; 0xb120
    8cea:	f2c0 0001 	movt	r0, #1
    8cee:	f24b 120c 	movw	r2, #45324	; 0xb10c
    8cf2:	f2c0 0201 	movt	r2, #1
    8cf6:	211f      	movs	r1, #31
    8cf8:	f00b ff53 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    8cfc:	defe      	udf	#254	; 0xfe
            y: -(self.radius as i32),
    8cfe:	f24b 1020 	movw	r0, #45344	; 0xb120
    8d02:	f2c0 0001 	movt	r0, #1
    8d06:	f24b 1240 	movw	r2, #45376	; 0xb140
    8d0a:	f2c0 0201 	movt	r2, #1
    8d0e:	211f      	movs	r1, #31
    8d10:	f00b ff47 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    8d14:	defe      	udf	#254	; 0xfe

00008d16 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E>:
    C: PixelColor,
{
    type Item = Pixel<C>;

    // https://stackoverflow.com/questions/1201200/fast-algorithm-for-drawing-filled-circles
    fn next(&mut self) -> Option<Self::Item> {
    8d16:	b580      	push	{r7, lr}
    8d18:	b0c2      	sub	sp, #264	; 0x108
    8d1a:	911d      	str	r1, [sp, #116]	; 0x74
        // If border or stroke colour is `None`, treat entire object as transparent and exit early
        if self.style.stroke_color.is_none() && self.style.fill_color.is_none() {
    8d1c:	991d      	ldr	r1, [sp, #116]	; 0x74
    8d1e:	3118      	adds	r1, #24
    8d20:	901c      	str	r0, [sp, #112]	; 0x70
    8d22:	4608      	mov	r0, r1
    8d24:	f003 fbe5 	bl	c4f2 <_ZN4core6option15Option$LT$T$GT$7is_none17hdfc51a5a76806ab8E>
    8d28:	901b      	str	r0, [sp, #108]	; 0x6c
    8d2a:	e013      	b.n	8d54 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x3e>
    8d2c:	2001      	movs	r0, #1
    8d2e:	f88d 007b 	strb.w	r0, [sp, #123]	; 0x7b
    8d32:	e009      	b.n	8d48 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x32>
    8d34:	2000      	movs	r0, #0
    8d36:	f88d 007b 	strb.w	r0, [sp, #123]	; 0x7b
    8d3a:	e005      	b.n	8d48 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x32>
    8d3c:	981d      	ldr	r0, [sp, #116]	; 0x74
    8d3e:	3014      	adds	r0, #20
    8d40:	f003 fbd7 	bl	c4f2 <_ZN4core6option15Option$LT$T$GT$7is_none17hdfc51a5a76806ab8E>
    8d44:	901a      	str	r0, [sp, #104]	; 0x68
    8d46:	e00a      	b.n	8d5e <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x48>
    8d48:	f89d 007b 	ldrb.w	r0, [sp, #123]	; 0x7b
    8d4c:	07c0      	lsls	r0, r0, #31
    8d4e:	2800      	cmp	r0, #0
    8d50:	d110      	bne.n	8d74 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x5e>
    8d52:	e009      	b.n	8d68 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x52>
    8d54:	981b      	ldr	r0, [sp, #108]	; 0x6c
    8d56:	07c1      	lsls	r1, r0, #31
    8d58:	2900      	cmp	r1, #0
    8d5a:	d1ef      	bne.n	8d3c <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x26>
    8d5c:	e7ea      	b.n	8d34 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x1e>
    8d5e:	981a      	ldr	r0, [sp, #104]	; 0x68
    8d60:	07c1      	lsls	r1, r0, #31
    8d62:	2900      	cmp	r1, #0
    8d64:	d1e2      	bne.n	8d2c <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x16>
    8d66:	e7e5      	b.n	8d34 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x1e>
            return None;
        }

        let cx = self.center[0];
    8d68:	981d      	ldr	r0, [sp, #116]	; 0x74
    8d6a:	2100      	movs	r1, #0
    8d6c:	f001 fe61 	bl	aa32 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E>
    8d70:	9019      	str	r0, [sp, #100]	; 0x64
    8d72:	e005      	b.n	8d80 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x6a>
    8d74:	2000      	movs	r0, #0
            return None;
    8d76:	991c      	ldr	r1, [sp, #112]	; 0x70
    8d78:	6008      	str	r0, [r1, #0]
    8d7a:	e7ff      	b.n	8d7c <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x66>
                }
            }
        };

        item.map(|(x, y, c)| Pixel(Coord::new(x, y).to_unsigned(), c))
    }
    8d7c:	b042      	add	sp, #264	; 0x108
    8d7e:	bd80      	pop	{r7, pc}
        let cx = self.center[0];
    8d80:	9819      	ldr	r0, [sp, #100]	; 0x64
    8d82:	6801      	ldr	r1, [r0, #0]
    8d84:	911f      	str	r1, [sp, #124]	; 0x7c
        let cy = self.center[1];
    8d86:	981d      	ldr	r0, [sp, #116]	; 0x74
    8d88:	2101      	movs	r1, #1
    8d8a:	f001 fe52 	bl	aa32 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E>
    8d8e:	9018      	str	r0, [sp, #96]	; 0x60
    8d90:	e7ff      	b.n	8d92 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x7c>
    8d92:	9818      	ldr	r0, [sp, #96]	; 0x60
    8d94:	6801      	ldr	r1, [r0, #0]
    8d96:	9120      	str	r1, [sp, #128]	; 0x80
        let radius = self.radius as i32 - self.style.stroke_width as i32 + 1;
    8d98:	991d      	ldr	r1, [sp, #116]	; 0x74
    8d9a:	688a      	ldr	r2, [r1, #8]
    8d9c:	7f09      	ldrb	r1, [r1, #28]
    8d9e:	1a53      	subs	r3, r2, r1
    8da0:	428a      	cmp	r2, r1
    8da2:	9317      	str	r3, [sp, #92]	; 0x5c
    8da4:	f180 81a3 	bvs.w	90ee <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x3d8>
    8da8:	e7ff      	b.n	8daa <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x94>
    8daa:	9817      	ldr	r0, [sp, #92]	; 0x5c
    8dac:	1c41      	adds	r1, r0, #1
    8dae:	460a      	mov	r2, r1
    8db0:	4281      	cmp	r1, r0
    8db2:	9216      	str	r2, [sp, #88]	; 0x58
    8db4:	f180 81a7 	bvs.w	9106 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x3f0>
    8db8:	e7ff      	b.n	8dba <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0xa4>
    8dba:	9816      	ldr	r0, [sp, #88]	; 0x58
    8dbc:	9021      	str	r0, [sp, #132]	; 0x84
        let outer_radius = self.radius as i32;
    8dbe:	991d      	ldr	r1, [sp, #116]	; 0x74
    8dc0:	6889      	ldr	r1, [r1, #8]
    8dc2:	9122      	str	r1, [sp, #136]	; 0x88
        let radius_sq = radius * radius;
    8dc4:	9921      	ldr	r1, [sp, #132]	; 0x84
    8dc6:	fb01 f201 	mul.w	r2, r1, r1
    8dca:	fb81 1301 	smull	r1, r3, r1, r1
    8dce:	ebb3 7fe1 	cmp.w	r3, r1, asr #31
    8dd2:	9215      	str	r2, [sp, #84]	; 0x54
    8dd4:	f040 81a3 	bne.w	911e <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x408>
    8dd8:	e7ff      	b.n	8dda <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0xc4>
    8dda:	9815      	ldr	r0, [sp, #84]	; 0x54
    8ddc:	9023      	str	r0, [sp, #140]	; 0x8c
        let outer_radius_sq = outer_radius * outer_radius;
    8dde:	9922      	ldr	r1, [sp, #136]	; 0x88
    8de0:	fb01 f201 	mul.w	r2, r1, r1
    8de4:	fb81 1301 	smull	r1, r3, r1, r1
    8de8:	ebb3 7fe1 	cmp.w	r3, r1, asr #31
    8dec:	9214      	str	r2, [sp, #80]	; 0x50
    8dee:	f040 81a2 	bne.w	9136 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x420>
    8df2:	e7ff      	b.n	8df4 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0xde>
    8df4:	9814      	ldr	r0, [sp, #80]	; 0x50
    8df6:	9024      	str	r0, [sp, #144]	; 0x90
        let item = loop {
    8df8:	e7ff      	b.n	8dfa <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0xe4>
            let tx = self.x;
    8dfa:	981d      	ldr	r0, [sp, #116]	; 0x74
    8dfc:	68c0      	ldr	r0, [r0, #12]
    8dfe:	9029      	str	r0, [sp, #164]	; 0xa4
            let ty = self.y;
    8e00:	981d      	ldr	r0, [sp, #116]	; 0x74
    8e02:	6900      	ldr	r0, [r0, #16]
    8e04:	902a      	str	r0, [sp, #168]	; 0xa8
            let len = tx * tx + ty * ty;
    8e06:	9829      	ldr	r0, [sp, #164]	; 0xa4
    8e08:	fb00 f100 	mul.w	r1, r0, r0
    8e0c:	fb80 0200 	smull	r0, r2, r0, r0
    8e10:	ebb2 7fe0 	cmp.w	r2, r0, asr #31
    8e14:	9113      	str	r1, [sp, #76]	; 0x4c
    8e16:	f040 819a 	bne.w	914e <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x438>
    8e1a:	e7ff      	b.n	8e1c <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x106>
    8e1c:	982a      	ldr	r0, [sp, #168]	; 0xa8
    8e1e:	fb00 f100 	mul.w	r1, r0, r0
    8e22:	fb80 0200 	smull	r0, r2, r0, r0
    8e26:	ebb2 7fe0 	cmp.w	r2, r0, asr #31
    8e2a:	9112      	str	r1, [sp, #72]	; 0x48
    8e2c:	f040 819b 	bne.w	9166 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x450>
    8e30:	e7ff      	b.n	8e32 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x11c>
    8e32:	9813      	ldr	r0, [sp, #76]	; 0x4c
    8e34:	9912      	ldr	r1, [sp, #72]	; 0x48
    8e36:	1842      	adds	r2, r0, r1
    8e38:	4613      	mov	r3, r2
    8e3a:	4282      	cmp	r2, r0
    8e3c:	9311      	str	r3, [sp, #68]	; 0x44
    8e3e:	f180 819e 	bvs.w	917e <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x468>
    8e42:	e7ff      	b.n	8e44 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x12e>
    8e44:	9811      	ldr	r0, [sp, #68]	; 0x44
    8e46:	902b      	str	r0, [sp, #172]	; 0xac
            let is_border = len > radius_sq - radius && len < outer_radius_sq + radius;
    8e48:	992b      	ldr	r1, [sp, #172]	; 0xac
    8e4a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    8e4c:	9b21      	ldr	r3, [sp, #132]	; 0x84
    8e4e:	eba2 0c03 	sub.w	ip, r2, r3
    8e52:	429a      	cmp	r2, r3
    8e54:	9110      	str	r1, [sp, #64]	; 0x40
    8e56:	f8cd c03c 	str.w	ip, [sp, #60]	; 0x3c
    8e5a:	f180 819c 	bvs.w	9196 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x480>
    8e5e:	e021      	b.n	8ea4 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x18e>
    8e60:	2001      	movs	r0, #1
    8e62:	f88d 00b2 	strb.w	r0, [sp, #178]	; 0xb2
    8e66:	e00e      	b.n	8e86 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x170>
    8e68:	2000      	movs	r0, #0
    8e6a:	f88d 00b2 	strb.w	r0, [sp, #178]	; 0xb2
    8e6e:	e00a      	b.n	8e86 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x170>
    8e70:	982b      	ldr	r0, [sp, #172]	; 0xac
    8e72:	9924      	ldr	r1, [sp, #144]	; 0x90
    8e74:	9a21      	ldr	r2, [sp, #132]	; 0x84
    8e76:	440a      	add	r2, r1
    8e78:	4613      	mov	r3, r2
    8e7a:	428a      	cmp	r2, r1
    8e7c:	900e      	str	r0, [sp, #56]	; 0x38
    8e7e:	930d      	str	r3, [sp, #52]	; 0x34
    8e80:	f180 8195 	bvs.w	91ae <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x498>
    8e84:	e013      	b.n	8eae <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x198>
            let is_fill = len <= outer_radius_sq;
    8e86:	982b      	ldr	r0, [sp, #172]	; 0xac
    8e88:	9924      	ldr	r1, [sp, #144]	; 0x90
    8e8a:	2200      	movs	r2, #0
    8e8c:	4288      	cmp	r0, r1
    8e8e:	bfd8      	it	le
    8e90:	2201      	movle	r2, #1
    8e92:	f88d 20b3 	strb.w	r2, [sp, #179]	; 0xb3
            let item = if is_border && self.style.stroke_color.is_some() {
    8e96:	f89d 00b2 	ldrb.w	r0, [sp, #178]	; 0xb2
    8e9a:	ea4f 70c0 	mov.w	r0, r0, lsl #31
    8e9e:	2800      	cmp	r0, #0
    8ea0:	d112      	bne.n	8ec8 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x1b2>
    8ea2:	e00d      	b.n	8ec0 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x1aa>
            let is_border = len > radius_sq - radius && len < outer_radius_sq + radius;
    8ea4:	9810      	ldr	r0, [sp, #64]	; 0x40
    8ea6:	990f      	ldr	r1, [sp, #60]	; 0x3c
    8ea8:	4288      	cmp	r0, r1
    8eaa:	dce1      	bgt.n	8e70 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x15a>
    8eac:	e7dc      	b.n	8e68 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x152>
    8eae:	980e      	ldr	r0, [sp, #56]	; 0x38
    8eb0:	990d      	ldr	r1, [sp, #52]	; 0x34
    8eb2:	4288      	cmp	r0, r1
    8eb4:	dbd4      	blt.n	8e60 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x14a>
    8eb6:	e7d7      	b.n	8e68 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x152>
    8eb8:	2001      	movs	r0, #1
            let item = if is_border && self.style.stroke_color.is_some() {
    8eba:	f88d 00c7 	strb.w	r0, [sp, #199]	; 0xc7
    8ebe:	e009      	b.n	8ed4 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x1be>
    8ec0:	2000      	movs	r0, #0
    8ec2:	f88d 00c7 	strb.w	r0, [sp, #199]	; 0xc7
    8ec6:	e005      	b.n	8ed4 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x1be>
    8ec8:	981d      	ldr	r0, [sp, #116]	; 0x74
    8eca:	3018      	adds	r0, #24
    8ecc:	f003 fb44 	bl	c558 <_ZN4core6option15Option$LT$T$GT$7is_some17hb67f5a76f0918df9E>
    8ed0:	900c      	str	r0, [sp, #48]	; 0x30
    8ed2:	e005      	b.n	8ee0 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x1ca>
    8ed4:	f89d 00c7 	ldrb.w	r0, [sp, #199]	; 0xc7
    8ed8:	07c0      	lsls	r0, r0, #31
    8eda:	2800      	cmp	r0, #0
    8edc:	d10b      	bne.n	8ef6 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x1e0>
    8ede:	e004      	b.n	8eea <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x1d4>
    8ee0:	980c      	ldr	r0, [sp, #48]	; 0x30
    8ee2:	07c1      	lsls	r1, r0, #31
    8ee4:	2900      	cmp	r1, #0
    8ee6:	d1e7      	bne.n	8eb8 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x1a2>
    8ee8:	e7ea      	b.n	8ec0 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x1aa>
            } else if is_fill && self.style.fill_color.is_some() {
    8eea:	f89d 00b3 	ldrb.w	r0, [sp, #179]	; 0xb3
    8eee:	07c0      	lsls	r0, r0, #31
    8ef0:	2800      	cmp	r0, #0
    8ef2:	d140      	bne.n	8f76 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x260>
    8ef4:	e03b      	b.n	8f6e <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x258>
                    cx + tx,
    8ef6:	981f      	ldr	r0, [sp, #124]	; 0x7c
    8ef8:	9929      	ldr	r1, [sp, #164]	; 0xa4
    8efa:	4401      	add	r1, r0
    8efc:	460a      	mov	r2, r1
    8efe:	4281      	cmp	r1, r0
    8f00:	920b      	str	r2, [sp, #44]	; 0x2c
    8f02:	f180 8160 	bvs.w	91c6 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x4b0>
    8f06:	e7ff      	b.n	8f08 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x1f2>
                    cy + ty,
    8f08:	9820      	ldr	r0, [sp, #128]	; 0x80
    8f0a:	992a      	ldr	r1, [sp, #168]	; 0xa8
    8f0c:	4401      	add	r1, r0
    8f0e:	460a      	mov	r2, r1
    8f10:	4281      	cmp	r1, r0
    8f12:	920a      	str	r2, [sp, #40]	; 0x28
    8f14:	f180 8163 	bvs.w	91de <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x4c8>
    8f18:	e7ff      	b.n	8f1a <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x204>
                    self.style.stroke_color.expect("Border color not defined"),
    8f1a:	981d      	ldr	r0, [sp, #116]	; 0x74
    8f1c:	8b41      	ldrh	r1, [r0, #26]
    8f1e:	8b00      	ldrh	r0, [r0, #24]
    8f20:	f24b 226c 	movw	r2, #45676	; 0xb26c
    8f24:	f2c0 0201 	movt	r2, #1
    8f28:	466b      	mov	r3, sp
    8f2a:	601a      	str	r2, [r3, #0]
    8f2c:	f24b 2254 	movw	r2, #45652	; 0xb254
    8f30:	f2c0 0201 	movt	r2, #1
    8f34:	2318      	movs	r3, #24
    8f36:	f003 fa5e 	bl	c3f6 <_ZN4core6option15Option$LT$T$GT$6expect17hb4daba08f67c5da8E>
    8f3a:	9009      	str	r0, [sp, #36]	; 0x24
    8f3c:	e7ff      	b.n	8f3e <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x228>
                Some((
    8f3e:	980b      	ldr	r0, [sp, #44]	; 0x2c
    8f40:	9032      	str	r0, [sp, #200]	; 0xc8
    8f42:	990a      	ldr	r1, [sp, #40]	; 0x28
    8f44:	9133      	str	r1, [sp, #204]	; 0xcc
    8f46:	9a09      	ldr	r2, [sp, #36]	; 0x24
    8f48:	f8ad 20d0 	strh.w	r2, [sp, #208]	; 0xd0
    8f4c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
    8f4e:	f8dd c0cc 	ldr.w	ip, [sp, #204]	; 0xcc
    8f52:	f8dd e0d0 	ldr.w	lr, [sp, #208]	; 0xd0
    8f56:	f8cd e0c0 	str.w	lr, [sp, #192]	; 0xc0
    8f5a:	f8cd c0bc 	str.w	ip, [sp, #188]	; 0xbc
    8f5e:	932e      	str	r3, [sp, #184]	; 0xb8
    8f60:	2301      	movs	r3, #1
    8f62:	932d      	str	r3, [sp, #180]	; 0xb4
            let item = if is_border && self.style.stroke_color.is_some() {
    8f64:	e054      	b.n	9010 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x2fa>
    8f66:	2001      	movs	r0, #1
            } else if is_fill && self.style.fill_color.is_some() {
    8f68:	f88d 00d7 	strb.w	r0, [sp, #215]	; 0xd7
    8f6c:	e009      	b.n	8f82 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x26c>
    8f6e:	2000      	movs	r0, #0
    8f70:	f88d 00d7 	strb.w	r0, [sp, #215]	; 0xd7
    8f74:	e005      	b.n	8f82 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x26c>
    8f76:	981d      	ldr	r0, [sp, #116]	; 0x74
    8f78:	3014      	adds	r0, #20
    8f7a:	f003 faed 	bl	c558 <_ZN4core6option15Option$LT$T$GT$7is_some17hb67f5a76f0918df9E>
    8f7e:	9008      	str	r0, [sp, #32]
    8f80:	e005      	b.n	8f8e <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x278>
    8f82:	f89d 00d7 	ldrb.w	r0, [sp, #215]	; 0xd7
    8f86:	07c0      	lsls	r0, r0, #31
    8f88:	2800      	cmp	r0, #0
    8f8a:	d108      	bne.n	8f9e <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x288>
    8f8c:	e004      	b.n	8f98 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x282>
    8f8e:	9808      	ldr	r0, [sp, #32]
    8f90:	07c1      	lsls	r1, r0, #31
    8f92:	2900      	cmp	r1, #0
    8f94:	d1e7      	bne.n	8f66 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x250>
    8f96:	e7ea      	b.n	8f6e <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x258>
    8f98:	2000      	movs	r0, #0
                None
    8f9a:	902d      	str	r0, [sp, #180]	; 0xb4
            } else if is_fill && self.style.fill_color.is_some() {
    8f9c:	e037      	b.n	900e <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x2f8>
                    cx + tx,
    8f9e:	981f      	ldr	r0, [sp, #124]	; 0x7c
    8fa0:	9929      	ldr	r1, [sp, #164]	; 0xa4
    8fa2:	4401      	add	r1, r0
    8fa4:	460a      	mov	r2, r1
    8fa6:	4281      	cmp	r1, r0
    8fa8:	9207      	str	r2, [sp, #28]
    8faa:	f180 8124 	bvs.w	91f6 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x4e0>
    8fae:	e7ff      	b.n	8fb0 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x29a>
                    cy + ty,
    8fb0:	9820      	ldr	r0, [sp, #128]	; 0x80
    8fb2:	992a      	ldr	r1, [sp, #168]	; 0xa8
    8fb4:	4401      	add	r1, r0
    8fb6:	460a      	mov	r2, r1
    8fb8:	4281      	cmp	r1, r0
    8fba:	9206      	str	r2, [sp, #24]
    8fbc:	f180 8127 	bvs.w	920e <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x4f8>
    8fc0:	e7ff      	b.n	8fc2 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x2ac>
                    self.style.fill_color.expect("Fill color not defined"),
    8fc2:	981d      	ldr	r0, [sp, #116]	; 0x74
    8fc4:	8ac1      	ldrh	r1, [r0, #22]
    8fc6:	8a80      	ldrh	r0, [r0, #20]
    8fc8:	f24b 22b4 	movw	r2, #45748	; 0xb2b4
    8fcc:	f2c0 0201 	movt	r2, #1
    8fd0:	466b      	mov	r3, sp
    8fd2:	601a      	str	r2, [r3, #0]
    8fd4:	f24b 229c 	movw	r2, #45724	; 0xb29c
    8fd8:	f2c0 0201 	movt	r2, #1
    8fdc:	2316      	movs	r3, #22
    8fde:	f003 fa0a 	bl	c3f6 <_ZN4core6option15Option$LT$T$GT$6expect17hb4daba08f67c5da8E>
    8fe2:	9005      	str	r0, [sp, #20]
    8fe4:	e7ff      	b.n	8fe6 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x2d0>
                Some((
    8fe6:	9807      	ldr	r0, [sp, #28]
    8fe8:	9036      	str	r0, [sp, #216]	; 0xd8
    8fea:	9906      	ldr	r1, [sp, #24]
    8fec:	9137      	str	r1, [sp, #220]	; 0xdc
    8fee:	9a05      	ldr	r2, [sp, #20]
    8ff0:	f8ad 20e0 	strh.w	r2, [sp, #224]	; 0xe0
    8ff4:	9b36      	ldr	r3, [sp, #216]	; 0xd8
    8ff6:	f8dd c0dc 	ldr.w	ip, [sp, #220]	; 0xdc
    8ffa:	f8dd e0e0 	ldr.w	lr, [sp, #224]	; 0xe0
    8ffe:	f8cd e0c0 	str.w	lr, [sp, #192]	; 0xc0
    9002:	f8cd c0bc 	str.w	ip, [sp, #188]	; 0xbc
    9006:	932e      	str	r3, [sp, #184]	; 0xb8
    9008:	2301      	movs	r3, #1
    900a:	932d      	str	r3, [sp, #180]	; 0xb4
            } else if is_fill && self.style.fill_color.is_some() {
    900c:	e7ff      	b.n	900e <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x2f8>
            let item = if is_border && self.style.stroke_color.is_some() {
    900e:	e7ff      	b.n	9010 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x2fa>
            self.x += 1;
    9010:	981d      	ldr	r0, [sp, #116]	; 0x74
    9012:	68c0      	ldr	r0, [r0, #12]
    9014:	1c41      	adds	r1, r0, #1
    9016:	460a      	mov	r2, r1
    9018:	4281      	cmp	r1, r0
    901a:	9204      	str	r2, [sp, #16]
    901c:	f180 8103 	bvs.w	9226 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x510>
    9020:	e7ff      	b.n	9022 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x30c>
    9022:	981d      	ldr	r0, [sp, #116]	; 0x74
    9024:	9904      	ldr	r1, [sp, #16]
    9026:	60c1      	str	r1, [r0, #12]
            if self.x > self.radius as i32 {
    9028:	981d      	ldr	r0, [sp, #116]	; 0x74
    902a:	6882      	ldr	r2, [r0, #8]
    902c:	68c0      	ldr	r0, [r0, #12]
    902e:	4290      	cmp	r0, r2
    9030:	dd19      	ble.n	9066 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x350>
    9032:	e7ff      	b.n	9034 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x31e>
                self.x = -(self.radius as i32);
    9034:	981d      	ldr	r0, [sp, #116]	; 0x74
    9036:	6880      	ldr	r0, [r0, #8]
    9038:	f1b0 4f00 	cmp.w	r0, #2147483648	; 0x80000000
    903c:	9003      	str	r0, [sp, #12]
    903e:	f000 80fe 	beq.w	923e <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x528>
    9042:	e7ff      	b.n	9044 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x32e>
    9044:	981d      	ldr	r0, [sp, #116]	; 0x74
    9046:	9903      	ldr	r1, [sp, #12]
    9048:	424a      	negs	r2, r1
    904a:	60c2      	str	r2, [r0, #12]
                self.y += 1;
    904c:	981d      	ldr	r0, [sp, #116]	; 0x74
    904e:	6900      	ldr	r0, [r0, #16]
    9050:	1c42      	adds	r2, r0, #1
    9052:	4613      	mov	r3, r2
    9054:	4282      	cmp	r2, r0
    9056:	9302      	str	r3, [sp, #8]
    9058:	f180 80fd 	bvs.w	9256 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x540>
    905c:	e7ff      	b.n	905e <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x348>
    905e:	981d      	ldr	r0, [sp, #116]	; 0x74
    9060:	9902      	ldr	r1, [sp, #8]
    9062:	6101      	str	r1, [r0, #16]
            if self.x > self.radius as i32 {
    9064:	e7ff      	b.n	9066 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x350>
            if self.y > self.radius as i32 {
    9066:	981d      	ldr	r0, [sp, #116]	; 0x74
    9068:	6881      	ldr	r1, [r0, #8]
    906a:	6900      	ldr	r0, [r0, #16]
    906c:	4288      	cmp	r0, r1
    906e:	dc04      	bgt.n	907a <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x364>
    9070:	e7ff      	b.n	9072 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x35c>
            if let Some(i) = item {
    9072:	982d      	ldr	r0, [sp, #180]	; 0xb4
    9074:	2801      	cmp	r0, #1
    9076:	d010      	beq.n	909a <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x384>
    9078:	e037      	b.n	90ea <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x3d4>
    907a:	2000      	movs	r0, #0
                break None;
    907c:	9025      	str	r0, [sp, #148]	; 0x94
    907e:	e7ff      	b.n	9080 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x36a>
        item.map(|(x, y, c)| Pixel(Coord::new(x, y).to_unsigned(), c))
    9080:	9825      	ldr	r0, [sp, #148]	; 0x94
    9082:	9926      	ldr	r1, [sp, #152]	; 0x98
    9084:	9a27      	ldr	r2, [sp, #156]	; 0x9c
    9086:	9b28      	ldr	r3, [sp, #160]	; 0xa0
    9088:	9340      	str	r3, [sp, #256]	; 0x100
    908a:	923f      	str	r2, [sp, #252]	; 0xfc
    908c:	913e      	str	r1, [sp, #248]	; 0xf8
    908e:	903d      	str	r0, [sp, #244]	; 0xf4
    9090:	a93d      	add	r1, sp, #244	; 0xf4
    9092:	981c      	ldr	r0, [sp, #112]	; 0x70
    9094:	f7ff fcf6 	bl	8a84 <_ZN4core6option15Option$LT$T$GT$3map17h222644965ed6bb1fE>
    9098:	e028      	b.n	90ec <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x3d6>
            if let Some(i) = item {
    909a:	982e      	ldr	r0, [sp, #184]	; 0xb8
    909c:	992f      	ldr	r1, [sp, #188]	; 0xbc
    909e:	9a30      	ldr	r2, [sp, #192]	; 0xc0
    90a0:	923b      	str	r2, [sp, #236]	; 0xec
    90a2:	913a      	str	r1, [sp, #232]	; 0xe8
    90a4:	9039      	str	r0, [sp, #228]	; 0xe4
                if i.0 >= 0 && i.1 >= 0 {
    90a6:	9839      	ldr	r0, [sp, #228]	; 0xe4
    90a8:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
    90ac:	dc08      	bgt.n	90c0 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x3aa>
    90ae:	e003      	b.n	90b8 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x3a2>
    90b0:	2001      	movs	r0, #1
    90b2:	f88d 00f3 	strb.w	r0, [sp, #243]	; 0xf3
    90b6:	e008      	b.n	90ca <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x3b4>
    90b8:	2000      	movs	r0, #0
    90ba:	f88d 00f3 	strb.w	r0, [sp, #243]	; 0xf3
    90be:	e004      	b.n	90ca <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x3b4>
    90c0:	983a      	ldr	r0, [sp, #232]	; 0xe8
    90c2:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
    90c6:	dcf3      	bgt.n	90b0 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x39a>
    90c8:	e7f6      	b.n	90b8 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x3a2>
    90ca:	f89d 00f3 	ldrb.w	r0, [sp, #243]	; 0xf3
    90ce:	07c0      	lsls	r0, r0, #31
    90d0:	2800      	cmp	r0, #0
    90d2:	d101      	bne.n	90d8 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x3c2>
    90d4:	e7ff      	b.n	90d6 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x3c0>
            if let Some(i) = item {
    90d6:	e008      	b.n	90ea <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x3d4>
                    break item;
    90d8:	982d      	ldr	r0, [sp, #180]	; 0xb4
    90da:	992e      	ldr	r1, [sp, #184]	; 0xb8
    90dc:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
    90de:	9b30      	ldr	r3, [sp, #192]	; 0xc0
    90e0:	9328      	str	r3, [sp, #160]	; 0xa0
    90e2:	9227      	str	r2, [sp, #156]	; 0x9c
    90e4:	9126      	str	r1, [sp, #152]	; 0x98
    90e6:	9025      	str	r0, [sp, #148]	; 0x94
    90e8:	e7ca      	b.n	9080 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x36a>
        let item = loop {
    90ea:	e686      	b.n	8dfa <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0xe4>
    }
    90ec:	e646      	b.n	8d7c <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E+0x66>
        let radius = self.radius as i32 - self.style.stroke_width as i32 + 1;
    90ee:	f24b 1060 	movw	r0, #45408	; 0xb160
    90f2:	f2c0 0001 	movt	r0, #1
    90f6:	f24b 1250 	movw	r2, #45392	; 0xb150
    90fa:	f2c0 0201 	movt	r2, #1
    90fe:	2121      	movs	r1, #33	; 0x21
    9100:	f00b fd4f 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9104:	defe      	udf	#254	; 0xfe
    9106:	f24b 1090 	movw	r0, #45456	; 0xb190
    910a:	f2c0 0001 	movt	r0, #1
    910e:	f24b 1250 	movw	r2, #45392	; 0xb150
    9112:	f2c0 0201 	movt	r2, #1
    9116:	211c      	movs	r1, #28
    9118:	f00b fd43 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    911c:	defe      	udf	#254	; 0xfe
        let radius_sq = radius * radius;
    911e:	f24b 10c0 	movw	r0, #45504	; 0xb1c0
    9122:	f2c0 0001 	movt	r0, #1
    9126:	f24b 12ac 	movw	r2, #45484	; 0xb1ac
    912a:	f2c0 0201 	movt	r2, #1
    912e:	2121      	movs	r1, #33	; 0x21
    9130:	f00b fd37 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9134:	defe      	udf	#254	; 0xfe
        let outer_radius_sq = outer_radius * outer_radius;
    9136:	f24b 10c0 	movw	r0, #45504	; 0xb1c0
    913a:	f2c0 0001 	movt	r0, #1
    913e:	f24b 12e4 	movw	r2, #45540	; 0xb1e4
    9142:	f2c0 0201 	movt	r2, #1
    9146:	2121      	movs	r1, #33	; 0x21
    9148:	f00b fd2b 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    914c:	defe      	udf	#254	; 0xfe
            let len = tx * tx + ty * ty;
    914e:	f24b 10c0 	movw	r0, #45504	; 0xb1c0
    9152:	f2c0 0001 	movt	r0, #1
    9156:	f24b 12f4 	movw	r2, #45556	; 0xb1f4
    915a:	f2c0 0201 	movt	r2, #1
    915e:	2121      	movs	r1, #33	; 0x21
    9160:	f00b fd1f 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9164:	defe      	udf	#254	; 0xfe
    9166:	f24b 10c0 	movw	r0, #45504	; 0xb1c0
    916a:	f2c0 0001 	movt	r0, #1
    916e:	f24b 2204 	movw	r2, #45572	; 0xb204
    9172:	f2c0 0201 	movt	r2, #1
    9176:	2121      	movs	r1, #33	; 0x21
    9178:	f00b fd13 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    917c:	defe      	udf	#254	; 0xfe
    917e:	f24b 1090 	movw	r0, #45456	; 0xb190
    9182:	f2c0 0001 	movt	r0, #1
    9186:	f24b 12f4 	movw	r2, #45556	; 0xb1f4
    918a:	f2c0 0201 	movt	r2, #1
    918e:	211c      	movs	r1, #28
    9190:	f00b fd07 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9194:	defe      	udf	#254	; 0xfe
            let is_border = len > radius_sq - radius && len < outer_radius_sq + radius;
    9196:	f24b 1060 	movw	r0, #45408	; 0xb160
    919a:	f2c0 0001 	movt	r0, #1
    919e:	f24b 2214 	movw	r2, #45588	; 0xb214
    91a2:	f2c0 0201 	movt	r2, #1
    91a6:	2121      	movs	r1, #33	; 0x21
    91a8:	f00b fcfb 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    91ac:	defe      	udf	#254	; 0xfe
    91ae:	f24b 1090 	movw	r0, #45456	; 0xb190
    91b2:	f2c0 0001 	movt	r0, #1
    91b6:	f24b 2224 	movw	r2, #45604	; 0xb224
    91ba:	f2c0 0201 	movt	r2, #1
    91be:	211c      	movs	r1, #28
    91c0:	f00b fcef 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    91c4:	defe      	udf	#254	; 0xfe
                    cx + tx,
    91c6:	f24b 1090 	movw	r0, #45456	; 0xb190
    91ca:	f2c0 0001 	movt	r0, #1
    91ce:	f24b 2234 	movw	r2, #45620	; 0xb234
    91d2:	f2c0 0201 	movt	r2, #1
    91d6:	211c      	movs	r1, #28
    91d8:	f00b fce3 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    91dc:	defe      	udf	#254	; 0xfe
                    cy + ty,
    91de:	f24b 1090 	movw	r0, #45456	; 0xb190
    91e2:	f2c0 0001 	movt	r0, #1
    91e6:	f24b 2244 	movw	r2, #45636	; 0xb244
    91ea:	f2c0 0201 	movt	r2, #1
    91ee:	211c      	movs	r1, #28
    91f0:	f00b fcd7 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    91f4:	defe      	udf	#254	; 0xfe
                    cx + tx,
    91f6:	f24b 1090 	movw	r0, #45456	; 0xb190
    91fa:	f2c0 0001 	movt	r0, #1
    91fe:	f24b 227c 	movw	r2, #45692	; 0xb27c
    9202:	f2c0 0201 	movt	r2, #1
    9206:	211c      	movs	r1, #28
    9208:	f00b fccb 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    920c:	defe      	udf	#254	; 0xfe
                    cy + ty,
    920e:	f24b 1090 	movw	r0, #45456	; 0xb190
    9212:	f2c0 0001 	movt	r0, #1
    9216:	f24b 228c 	movw	r2, #45708	; 0xb28c
    921a:	f2c0 0201 	movt	r2, #1
    921e:	211c      	movs	r1, #28
    9220:	f00b fcbf 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9224:	defe      	udf	#254	; 0xfe
            self.x += 1;
    9226:	f24b 1090 	movw	r0, #45456	; 0xb190
    922a:	f2c0 0001 	movt	r0, #1
    922e:	f24b 22c4 	movw	r2, #45764	; 0xb2c4
    9232:	f2c0 0201 	movt	r2, #1
    9236:	211c      	movs	r1, #28
    9238:	f00b fcb3 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    923c:	defe      	udf	#254	; 0xfe
                self.x = -(self.radius as i32);
    923e:	f24b 1020 	movw	r0, #45344	; 0xb120
    9242:	f2c0 0001 	movt	r0, #1
    9246:	f24b 22d4 	movw	r2, #45780	; 0xb2d4
    924a:	f2c0 0201 	movt	r2, #1
    924e:	211f      	movs	r1, #31
    9250:	f00b fca7 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9254:	defe      	udf	#254	; 0xfe
                self.y += 1;
    9256:	f24b 1090 	movw	r0, #45456	; 0xb190
    925a:	f2c0 0001 	movt	r0, #1
    925e:	f24b 22e4 	movw	r2, #45796	; 0xb2e4
    9262:	f2c0 0201 	movt	r2, #1
    9266:	211c      	movs	r1, #28
    9268:	f00b fc9b 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    926c:	defe      	udf	#254	; 0xfe

0000926e <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h656dcccd99c9c578E>:
        item.map(|(x, y, c)| Pixel(Coord::new(x, y).to_unsigned(), c))
    926e:	b580      	push	{r7, lr}
    9270:	b08a      	sub	sp, #40	; 0x28
    9272:	680a      	ldr	r2, [r1, #0]
    9274:	9207      	str	r2, [sp, #28]
    9276:	684a      	ldr	r2, [r1, #4]
    9278:	9208      	str	r2, [sp, #32]
    927a:	8909      	ldrh	r1, [r1, #8]
    927c:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
    9280:	9907      	ldr	r1, [sp, #28]
    9282:	9a08      	ldr	r2, [sp, #32]
    9284:	9005      	str	r0, [sp, #20]
    9286:	4608      	mov	r0, r1
    9288:	4611      	mov	r1, r2
    928a:	f001 fb8e 	bl	a9aa <_ZN17embedded_graphics5coord14internal_coord5Coord3new17h9ba2f193635b6338E>
    928e:	9004      	str	r0, [sp, #16]
    9290:	9103      	str	r1, [sp, #12]
    9292:	e7ff      	b.n	9294 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h656dcccd99c9c578E+0x26>
    9294:	9804      	ldr	r0, [sp, #16]
    9296:	9903      	ldr	r1, [sp, #12]
    9298:	f001 fc14 	bl	aac4 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$embedded_graphics..coord..ToUnsigned$GT$11to_unsigned17hf1a2e5ff232b047aE>
    929c:	9002      	str	r0, [sp, #8]
    929e:	9101      	str	r1, [sp, #4]
    92a0:	e7ff      	b.n	92a2 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h656dcccd99c9c578E+0x34>
    92a2:	f8bd 0026 	ldrh.w	r0, [sp, #38]	; 0x26
    92a6:	9902      	ldr	r1, [sp, #8]
    92a8:	9a05      	ldr	r2, [sp, #20]
    92aa:	6011      	str	r1, [r2, #0]
    92ac:	9b01      	ldr	r3, [sp, #4]
    92ae:	6053      	str	r3, [r2, #4]
    92b0:	8110      	strh	r0, [r2, #8]
    92b2:	b00a      	add	sp, #40	; 0x28
    92b4:	bd80      	pop	{r7, pc}

000092b6 <_ZN17embedded_graphics10primitives6circle15Circle$LT$C$GT$3new17h7e88a368c23965d0E>:
    pub fn new(center: Coord, radius: u32) -> Self {
    92b6:	b580      	push	{r7, lr}
    92b8:	b08a      	sub	sp, #40	; 0x28
    92ba:	9104      	str	r1, [sp, #16]
    92bc:	9205      	str	r2, [sp, #20]
    92be:	9306      	str	r3, [sp, #24]
            center,
    92c0:	9904      	ldr	r1, [sp, #16]
    92c2:	9a05      	ldr	r2, [sp, #20]
            radius,
    92c4:	9b06      	ldr	r3, [sp, #24]
    92c6:	f10d 0c1c 	add.w	ip, sp, #28
            style: Style::default(),
    92ca:	9003      	str	r0, [sp, #12]
    92cc:	4660      	mov	r0, ip
    92ce:	9102      	str	r1, [sp, #8]
    92d0:	9201      	str	r2, [sp, #4]
    92d2:	9300      	str	r3, [sp, #0]
    92d4:	f002 fe45 	bl	bf62 <_ZN83_$LT$embedded_graphics..style..Style$LT$P$GT$$u20$as$u20$core..default..Default$GT$7default17ha6c30ca12b466235E>
    92d8:	e7ff      	b.n	92da <_ZN17embedded_graphics10primitives6circle15Circle$LT$C$GT$3new17h7e88a368c23965d0E+0x24>
        Circle {
    92da:	9802      	ldr	r0, [sp, #8]
    92dc:	9903      	ldr	r1, [sp, #12]
    92de:	6008      	str	r0, [r1, #0]
    92e0:	9a01      	ldr	r2, [sp, #4]
    92e2:	604a      	str	r2, [r1, #4]
    92e4:	9b00      	ldr	r3, [sp, #0]
    92e6:	608b      	str	r3, [r1, #8]
    92e8:	f8bd c024 	ldrh.w	ip, [sp, #36]	; 0x24
    92ec:	f8a1 c014 	strh.w	ip, [r1, #20]
    92f0:	f8dd c01c 	ldr.w	ip, [sp, #28]
    92f4:	f8dd e020 	ldr.w	lr, [sp, #32]
    92f8:	f8c1 e010 	str.w	lr, [r1, #16]
    92fc:	f8c1 c00c 	str.w	ip, [r1, #12]
    }
    9300:	b00a      	add	sp, #40	; 0x28
    9302:	bd80      	pop	{r7, pc}

00009304 <_ZN22piet_embedded_graphics7display15draw_to_display17h0222e512a4ab9d16E>:
    }
    Ok(())
}

/// Draw the item to the display
pub fn draw_to_display<T>(item: T)
    9304:	b570      	push	{r4, r5, r6, lr}
    9306:	b088      	sub	sp, #32
    9308:	a902      	add	r1, sp, #8
    unsafe { DISPLAY.draw(item) };        //  Draw text or graphics the usual slow way

    #[cfg(feature = "noblock_spi")]       //  If batching is enabled...
    super::batch::draw_blocks(            //  Draw text or graphics the new faster way, as pixel blocks
        unsafe { &mut DISPLAY },
        item
    930a:	460a      	mov	r2, r1
    930c:	e890 5078 	ldmia.w	r0, {r3, r4, r5, r6, ip, lr}
    9310:	e882 5078 	stmia.w	r2, {r3, r4, r5, r6, ip, lr}
    super::batch::draw_blocks(            //  Draw text or graphics the new faster way, as pixel blocks
    9314:	f240 10f4 	movw	r0, #500	; 0x1f4
    9318:	f2c2 0000 	movt	r0, #8192	; 0x2000
    931c:	f006 f897 	bl	f44e <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E>
    9320:	9001      	str	r0, [sp, #4]
    9322:	e7ff      	b.n	9324 <_ZN22piet_embedded_graphics7display15draw_to_display17h0222e512a4ab9d16E+0x20>
    9324:	9801      	ldr	r0, [sp, #4]
    9326:	f000 0001 	and.w	r0, r0, #1
    932a:	f24b 21f4 	movw	r1, #45812	; 0xb2f4
    932e:	f2c0 0101 	movt	r1, #1
    9332:	f24b 3368 	movw	r3, #45928	; 0xb368
    9336:	f2c0 0301 	movt	r3, #1
    933a:	2210      	movs	r2, #16
    933c:	f002 fe7e 	bl	c03c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h76d1a1cb65ecbf07E>
    9340:	e7ff      	b.n	9342 <_ZN22piet_embedded_graphics7display15draw_to_display17h0222e512a4ab9d16E+0x3e>
    ).expect("draw blocks fail");
}
    9342:	b008      	add	sp, #32
    9344:	bd70      	pop	{r4, r5, r6, pc}

00009346 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE>:
/// ```rust
/// let peripherals = nrf52::Peripherals::take().unwrap();
/// let nfcpins = peripherals.UICR.nfcpins.read().bits();
/// console::print("nfcpins = "); console::printhex(nfcpins as u8); console::print("\n");
/// ```
pub fn start_touch_sensor() -> MynewtResult<()> {
    9346:	b5b0      	push	{r4, r5, r7, lr}
    9348:	b0bc      	sub	sp, #240	; 0xf0
    console::print("Rust touch sensor\n");
    934a:	f24b 3078 	movw	r0, #45944	; 0xb378
    934e:	f2c0 0001 	movt	r0, #1
    9352:	2112      	movs	r1, #18
    9354:	f002 fd8c 	bl	be70 <_ZN6mynewt3sys7console5print17h2bc06bd0c362550eE>
    9358:	e7ff      	b.n	935a <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x14>

    //  Init GPIO for the Reset Pin
    unsafe { TOUCH_RESET.init(TOUCH_RESET_PIN) ? };
    935a:	f240 1040 	movw	r0, #320	; 0x140
    935e:	f2c2 0000 	movt	r0, #8192	; 0x2000
    9362:	210a      	movs	r1, #10
    9364:	f002 f934 	bl	b5d0 <_ZN6mynewt3hal4GPIO4init17hdfa14af4722bc4f0E>
    9368:	9010      	str	r0, [sp, #64]	; 0x40
    936a:	e7ff      	b.n	936c <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x26>
    936c:	9810      	ldr	r0, [sp, #64]	; 0x40
    936e:	f002 fc55 	bl	bc1c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h547b8d3279e16ed9E>
    9372:	9012      	str	r0, [sp, #72]	; 0x48
    9374:	e7ff      	b.n	9376 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x30>
    9376:	9812      	ldr	r0, [sp, #72]	; 0x48
    9378:	1e41      	subs	r1, r0, #1
    937a:	bf18      	it	ne
    937c:	2101      	movne	r1, #1
    937e:	2801      	cmp	r0, #1
    9380:	d012      	beq.n	93a8 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x62>
    9382:	e7ff      	b.n	9384 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x3e>
    9384:	e000      	b.n	9388 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x42>
    9386:	defe      	udf	#254	; 0xfe
    9388:	9812      	ldr	r0, [sp, #72]	; 0x48
    938a:	9013      	str	r0, [sp, #76]	; 0x4c
    938c:	9813      	ldr	r0, [sp, #76]	; 0x4c
    938e:	f002 f9fd 	bl	b78c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h21b21b5ada625ccdE>
    9392:	900f      	str	r0, [sp, #60]	; 0x3c
    9394:	e002      	b.n	939c <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x56>
    assert_eq!(rc, 0, "IRQ init fail");

    //  Start monitoring for touch controller interrupts
    unsafe { hal::hal_gpio_irq_enable(TOUCH_INTERRUPT_PIN) };
    Ok(())
}
    9396:	9811      	ldr	r0, [sp, #68]	; 0x44
    9398:	b03c      	add	sp, #240	; 0xf0
    939a:	bdb0      	pop	{r4, r5, r7, pc}
    unsafe { TOUCH_RESET.init(TOUCH_RESET_PIN) ? };
    939c:	980f      	ldr	r0, [sp, #60]	; 0x3c
    939e:	f002 fc2e 	bl	bbfe <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9e096e948ad28d6eE>
    93a2:	9011      	str	r0, [sp, #68]	; 0x44
    93a4:	e7ff      	b.n	93a6 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x60>
    93a6:	e7f6      	b.n	9396 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x50>
        TOUCH_RESET.set_low() ? ;
    93a8:	f240 1040 	movw	r0, #320	; 0x140
    93ac:	f2c2 0000 	movt	r0, #8192	; 0x2000
    93b0:	f002 f9a6 	bl	b700 <_ZN74_$LT$mynewt..hal..GPIO$u20$as$u20$embedded_hal..digital..v2..OutputPin$GT$7set_low17h02e71d0e38f23a59E>
    93b4:	900e      	str	r0, [sp, #56]	; 0x38
    93b6:	e7ff      	b.n	93b8 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x72>
    93b8:	980e      	ldr	r0, [sp, #56]	; 0x38
    93ba:	f002 fc2f 	bl	bc1c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h547b8d3279e16ed9E>
    93be:	9015      	str	r0, [sp, #84]	; 0x54
    93c0:	e7ff      	b.n	93c2 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x7c>
    93c2:	9815      	ldr	r0, [sp, #84]	; 0x54
    93c4:	1e41      	subs	r1, r0, #1
    93c6:	bf18      	it	ne
    93c8:	2101      	movne	r1, #1
    93ca:	2801      	cmp	r0, #1
    93cc:	d010      	beq.n	93f0 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0xaa>
    93ce:	e7ff      	b.n	93d0 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x8a>
    93d0:	e000      	b.n	93d4 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x8e>
    93d2:	defe      	udf	#254	; 0xfe
    93d4:	9815      	ldr	r0, [sp, #84]	; 0x54
    93d6:	9016      	str	r0, [sp, #88]	; 0x58
    93d8:	9816      	ldr	r0, [sp, #88]	; 0x58
    93da:	f002 f9d7 	bl	b78c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h21b21b5ada625ccdE>
    93de:	900d      	str	r0, [sp, #52]	; 0x34
    93e0:	e7ff      	b.n	93e2 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x9c>
    93e2:	980d      	ldr	r0, [sp, #52]	; 0x34
    93e4:	f002 fc0b 	bl	bbfe <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9e096e948ad28d6eE>
    93e8:	9011      	str	r0, [sp, #68]	; 0x44
    93ea:	e7ff      	b.n	93ec <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0xa6>
    93ec:	e7ff      	b.n	93ee <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0xa8>
    93ee:	e7d2      	b.n	9396 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x50>
        TOUCH_DELAY.delay_ms(20);
    93f0:	f240 1044 	movw	r0, #324	; 0x144
    93f4:	f2c2 0000 	movt	r0, #8192	; 0x2000
    93f8:	2114      	movs	r1, #20
    93fa:	f002 f99a 	bl	b732 <_ZN87_$LT$mynewt..hal..Delay$u20$as$u20$embedded_hal..blocking..delay..DelayMs$LT$u8$GT$$GT$8delay_ms17h6a8836e3001d2629E>
    93fe:	e7ff      	b.n	9400 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0xba>
        TOUCH_RESET.set_high() ? ;
    9400:	f240 1040 	movw	r0, #320	; 0x140
    9404:	f2c2 0000 	movt	r0, #8192	; 0x2000
    9408:	f002 f986 	bl	b718 <_ZN74_$LT$mynewt..hal..GPIO$u20$as$u20$embedded_hal..digital..v2..OutputPin$GT$8set_high17hb29d285365812fbcE>
    940c:	900c      	str	r0, [sp, #48]	; 0x30
    940e:	e7ff      	b.n	9410 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0xca>
    9410:	980c      	ldr	r0, [sp, #48]	; 0x30
    9412:	f002 fc03 	bl	bc1c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h547b8d3279e16ed9E>
    9416:	9018      	str	r0, [sp, #96]	; 0x60
    9418:	e7ff      	b.n	941a <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0xd4>
    941a:	9818      	ldr	r0, [sp, #96]	; 0x60
    941c:	1e41      	subs	r1, r0, #1
    941e:	bf18      	it	ne
    9420:	2101      	movne	r1, #1
    9422:	2801      	cmp	r0, #1
    9424:	d00f      	beq.n	9446 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x100>
    9426:	e7ff      	b.n	9428 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0xe2>
    9428:	e000      	b.n	942c <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0xe6>
    942a:	defe      	udf	#254	; 0xfe
    942c:	9818      	ldr	r0, [sp, #96]	; 0x60
    942e:	9019      	str	r0, [sp, #100]	; 0x64
    9430:	9819      	ldr	r0, [sp, #100]	; 0x64
    9432:	f002 f9ab 	bl	b78c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h21b21b5ada625ccdE>
    9436:	900b      	str	r0, [sp, #44]	; 0x2c
    9438:	e7ff      	b.n	943a <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0xf4>
    943a:	980b      	ldr	r0, [sp, #44]	; 0x2c
    943c:	f002 fbdf 	bl	bbfe <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9e096e948ad28d6eE>
    9440:	9011      	str	r0, [sp, #68]	; 0x44
    9442:	e7ff      	b.n	9444 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0xfe>
    9444:	e7d3      	b.n	93ee <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0xa8>
        TOUCH_DELAY.delay_ms(200); TOUCH_DELAY.delay_ms(200);    
    9446:	f240 1044 	movw	r0, #324	; 0x144
    944a:	f2c2 0000 	movt	r0, #8192	; 0x2000
    944e:	21c8      	movs	r1, #200	; 0xc8
    9450:	f002 f96f 	bl	b732 <_ZN87_$LT$mynewt..hal..Delay$u20$as$u20$embedded_hal..blocking..delay..DelayMs$LT$u8$GT$$GT$8delay_ms17h6a8836e3001d2629E>
    9454:	e7ff      	b.n	9456 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x110>
    9456:	f240 1044 	movw	r0, #324	; 0x144
    945a:	f2c2 0000 	movt	r0, #8192	; 0x2000
    945e:	21c8      	movs	r1, #200	; 0xc8
    9460:	f002 f967 	bl	b732 <_ZN87_$LT$mynewt..hal..Delay$u20$as$u20$embedded_hal..blocking..delay..DelayMs$LT$u8$GT$$GT$8delay_ms17h6a8836e3001d2629E>
    9464:	e7ff      	b.n	9466 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x120>
    unsafe { TOUCH_EVENT.ev_cb = Some( touch_event_callback ) };
    9466:	f249 600b 	movw	r0, #38411	; 0x960b
    946a:	f2c0 0000 	movt	r0, #0
    946e:	901b      	str	r0, [sp, #108]	; 0x6c
    9470:	981b      	ldr	r0, [sp, #108]	; 0x6c
    9472:	f240 11d8 	movw	r1, #472	; 0x1d8
    9476:	f2c2 0100 	movt	r1, #8192	; 0x2000
    947a:	6048      	str	r0, [r1, #4]
        Some( touch_interrupt_handler ),  //  Call `touch_interrupt_handler()` upon detecting interrupt
    947c:	f249 50c1 	movw	r0, #38337	; 0x95c1
    9480:	f2c0 0000 	movt	r0, #0
    9484:	901d      	str	r0, [sp, #116]	; 0x74
        core::ptr::null_mut(),            //  No arguments for `touch_interrupt_handler()`
    9486:	e7ff      	b.n	9488 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x142>
    let rc = unsafe { hal::hal_gpio_irq_init(
    9488:	991d      	ldr	r1, [sp, #116]	; 0x74
    948a:	4668      	mov	r0, sp
    948c:	2201      	movs	r2, #1
    948e:	6002      	str	r2, [r0, #0]
    9490:	201c      	movs	r0, #28
    9492:	2200      	movs	r2, #0
    9494:	2302      	movs	r3, #2
    9496:	f00d faed 	bl	16a74 <hal_gpio_irq_init>
    949a:	901c      	str	r0, [sp, #112]	; 0x70
    949c:	e7ff      	b.n	949e <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x158>
    assert_eq!(rc, 0, "IRQ init fail");
    949e:	f24b 3090 	movw	r0, #45968	; 0xb390
    94a2:	f2c0 0001 	movt	r0, #1
    94a6:	6800      	ldr	r0, [r0, #0]
    94a8:	a91c      	add	r1, sp, #112	; 0x70
    94aa:	911e      	str	r1, [sp, #120]	; 0x78
    94ac:	901f      	str	r0, [sp, #124]	; 0x7c
    94ae:	981e      	ldr	r0, [sp, #120]	; 0x78
    94b0:	9020      	str	r0, [sp, #128]	; 0x80
    94b2:	981f      	ldr	r0, [sp, #124]	; 0x7c
    94b4:	9021      	str	r0, [sp, #132]	; 0x84
    94b6:	9820      	ldr	r0, [sp, #128]	; 0x80
    94b8:	6800      	ldr	r0, [r0, #0]
    94ba:	9921      	ldr	r1, [sp, #132]	; 0x84
    94bc:	6809      	ldr	r1, [r1, #0]
    94be:	4288      	cmp	r0, r1
    94c0:	d104      	bne.n	94cc <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x186>
    94c2:	e7ff      	b.n	94c4 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x17e>
    94c4:	201c      	movs	r0, #28
    unsafe { hal::hal_gpio_irq_enable(TOUCH_INTERRUPT_PIN) };
    94c6:	f00d fb11 	bl	16aec <hal_gpio_irq_enable>
    94ca:	e074      	b.n	95b6 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x270>
    assert_eq!(rc, 0, "IRQ init fail");
    94cc:	f24b 30e8 	movw	r0, #46056	; 0xb3e8
    94d0:	f2c0 0001 	movt	r0, #1
    94d4:	6801      	ldr	r1, [r0, #0]
    94d6:	9820      	ldr	r0, [sp, #128]	; 0x80
    94d8:	9031      	str	r0, [sp, #196]	; 0xc4
    94da:	9821      	ldr	r0, [sp, #132]	; 0x84
    94dc:	9032      	str	r0, [sp, #200]	; 0xc8
    94de:	f24b 4004 	movw	r0, #46084	; 0xb404
    94e2:	f2c0 0001 	movt	r0, #1
    94e6:	6800      	ldr	r0, [r0, #0]
    94e8:	f24b 4208 	movw	r2, #46088	; 0xb408
    94ec:	f2c0 0201 	movt	r2, #1
    94f0:	6813      	ldr	r3, [r2, #0]
    94f2:	466a      	mov	r2, sp
    94f4:	f04f 0c00 	mov.w	ip, #0
    94f8:	f8c2 c000 	str.w	ip, [r2]
    94fc:	aa33      	add	r2, sp, #204	; 0xcc
    94fe:	f04f 0c01 	mov.w	ip, #1
    9502:	900a      	str	r0, [sp, #40]	; 0x28
    9504:	4610      	mov	r0, r2
    9506:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    9508:	9109      	str	r1, [sp, #36]	; 0x24
    950a:	4611      	mov	r1, r2
    950c:	4662      	mov	r2, ip
    950e:	f005 fc48 	bl	eda2 <_ZN4core3fmt9Arguments6new_v117h17809a6a6cc532d9E>
    9512:	e7ff      	b.n	9514 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x1ce>
    9514:	a831      	add	r0, sp, #196	; 0xc4
    9516:	902e      	str	r0, [sp, #184]	; 0xb8
    9518:	a832      	add	r0, sp, #200	; 0xc8
    951a:	902f      	str	r0, [sp, #188]	; 0xbc
    951c:	a833      	add	r0, sp, #204	; 0xcc
    951e:	9030      	str	r0, [sp, #192]	; 0xc0
    9520:	982e      	ldr	r0, [sp, #184]	; 0xb8
    9522:	9039      	str	r0, [sp, #228]	; 0xe4
    9524:	982f      	ldr	r0, [sp, #188]	; 0xbc
    9526:	903a      	str	r0, [sp, #232]	; 0xe8
    9528:	9830      	ldr	r0, [sp, #192]	; 0xc0
    952a:	903b      	str	r0, [sp, #236]	; 0xec
    952c:	9839      	ldr	r0, [sp, #228]	; 0xe4
    952e:	f64b 5189 	movw	r1, #48521	; 0xbd89
    9532:	f2c0 0100 	movt	r1, #0
    9536:	f002 fc47 	bl	bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>
    953a:	9008      	str	r0, [sp, #32]
    953c:	9107      	str	r1, [sp, #28]
    953e:	e7ff      	b.n	9540 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x1fa>
    9540:	983a      	ldr	r0, [sp, #232]	; 0xe8
    9542:	f64b 5189 	movw	r1, #48521	; 0xbd89
    9546:	f2c0 0100 	movt	r1, #0
    954a:	f002 fc3d 	bl	bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>
    954e:	9006      	str	r0, [sp, #24]
    9550:	9105      	str	r1, [sp, #20]
    9552:	e7ff      	b.n	9554 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x20e>
    9554:	983b      	ldr	r0, [sp, #236]	; 0xec
    9556:	f644 71c9 	movw	r1, #20425	; 0x4fc9
    955a:	f2c0 0101 	movt	r1, #1
    955e:	f002 fc72 	bl	be46 <_ZN4core3fmt10ArgumentV13new17hd6e40bd932949712E>
    9562:	9004      	str	r0, [sp, #16]
    9564:	9103      	str	r1, [sp, #12]
    9566:	e7ff      	b.n	9568 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x222>
    9568:	9808      	ldr	r0, [sp, #32]
    956a:	9028      	str	r0, [sp, #160]	; 0xa0
    956c:	9907      	ldr	r1, [sp, #28]
    956e:	9129      	str	r1, [sp, #164]	; 0xa4
    9570:	9a06      	ldr	r2, [sp, #24]
    9572:	922a      	str	r2, [sp, #168]	; 0xa8
    9574:	9b05      	ldr	r3, [sp, #20]
    9576:	932b      	str	r3, [sp, #172]	; 0xac
    9578:	f8dd c010 	ldr.w	ip, [sp, #16]
    957c:	f8cd c0b0 	str.w	ip, [sp, #176]	; 0xb0
    9580:	f8dd e00c 	ldr.w	lr, [sp, #12]
    9584:	f8cd e0b4 	str.w	lr, [sp, #180]	; 0xb4
    9588:	466c      	mov	r4, sp
    958a:	2503      	movs	r5, #3
    958c:	6025      	str	r5, [r4, #0]
    958e:	a822      	add	r0, sp, #136	; 0x88
    9590:	ab28      	add	r3, sp, #160	; 0xa0
    9592:	9909      	ldr	r1, [sp, #36]	; 0x24
    9594:	462a      	mov	r2, r5
    9596:	f005 fc04 	bl	eda2 <_ZN4core3fmt9Arguments6new_v117h17809a6a6cc532d9E>
    959a:	e7ff      	b.n	959c <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x256>
    959c:	f24b 4028 	movw	r0, #46120	; 0xb428
    95a0:	f2c0 0001 	movt	r0, #1
    95a4:	f00b faf6 	bl	14b94 <_ZN4core5panic8Location6caller17h63e50e3e41b8f68eE>
    95a8:	9002      	str	r0, [sp, #8]
    95aa:	e7ff      	b.n	95ac <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x266>
    95ac:	a822      	add	r0, sp, #136	; 0x88
    95ae:	9902      	ldr	r1, [sp, #8]
    95b0:	f00b fb2d 	bl	14c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>
    95b4:	defe      	udf	#254	; 0xfe
    95b6:	2000      	movs	r0, #0
    Ok(())
    95b8:	9011      	str	r0, [sp, #68]	; 0x44
    95ba:	2001      	movs	r0, #1
    95bc:	9011      	str	r0, [sp, #68]	; 0x44
}
    95be:	e6ea      	b.n	9396 <_ZN3app12touch_sensor18start_touch_sensor17h71fdfabbaf874cceE+0x50>

000095c0 <_ZN3app12touch_sensor23touch_interrupt_handler17h62f0ff10632577e9E>:

/// Interrupt handler for the touch controller, triggered when a touch is detected
extern "C" fn touch_interrupt_handler(arg: *mut core::ffi::c_void) {
    95c0:	b580      	push	{r7, lr}
    95c2:	b084      	sub	sp, #16
    95c4:	9000      	str	r0, [sp, #0]
    //  We forward a touch event to the Default Event Queue for deferred processing.  Don't do any processing here.
    unsafe { TOUCH_EVENT.ev_arg = arg };
    95c6:	9800      	ldr	r0, [sp, #0]
    95c8:	f240 11d8 	movw	r1, #472	; 0x1d8
    95cc:	f2c2 0100 	movt	r1, #8192	; 0x2000
    95d0:	6088      	str	r0, [r1, #8]
    95d2:	a802      	add	r0, sp, #8
    //  Fetch the Default Event Queue. TODO: Use dedicated Event Queue for higher priority processing.
    let queue = os::eventq_dflt_get()
    95d4:	f002 fb31 	bl	bc3a <_ZN6mynewt6kernel2os15eventq_dflt_get17h53d678d7b494fb18E>
    95d8:	e7ff      	b.n	95da <_ZN3app12touch_sensor23touch_interrupt_handler17h62f0ff10632577e9E+0x1a>
    95da:	f64a 71a8 	movw	r1, #44968	; 0xafa8
    95de:	f2c0 0101 	movt	r1, #1
    95e2:	f24b 4340 	movw	r3, #46144	; 0xb440
    95e6:	f2c0 0301 	movt	r3, #1
    95ea:	a802      	add	r0, sp, #8
    95ec:	2208      	movs	r2, #8
    95ee:	f006 f86e 	bl	f6ce <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h2a1175343ed8bbdfE>
    95f2:	9001      	str	r0, [sp, #4]
    95f4:	e7ff      	b.n	95f6 <_ZN3app12touch_sensor23touch_interrupt_handler17h62f0ff10632577e9E+0x36>
        .expect("GET fail");
    unsafe { os::os_eventq_put(queue, &mut TOUCH_EVENT) };  //  Trigger the callback function `touch_event_callback()`
    95f6:	9801      	ldr	r0, [sp, #4]
    95f8:	f240 11d8 	movw	r1, #472	; 0x1d8
    95fc:	f2c2 0100 	movt	r1, #8192	; 0x2000
    9600:	f00e fb07 	bl	17c12 <os_eventq_put>
    9604:	e7ff      	b.n	9606 <_ZN3app12touch_sensor23touch_interrupt_handler17h62f0ff10632577e9E+0x46>
    //console::print("touch\n"); ////
}
    9606:	b004      	add	sp, #16
    9608:	bd80      	pop	{r7, pc}

0000960a <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E>:

/// Callback for the touch event that is triggered when a touch is detected
extern "C" fn touch_event_callback(_event: *mut os_event) {
    960a:	b580      	push	{r7, lr}
    960c:	b090      	sub	sp, #64	; 0x40
    960e:	9004      	str	r0, [sp, #16]
    //  console::printhex(unsafe { os::os_time_get() } as u8); console::print(" touch\n");
    unsafe { 
        //  Fetch the touch data from the touch controller
        read_touchdata(&mut TOUCH_DATA)
    9610:	f240 1044 	movw	r0, #324	; 0x144
    9614:	f2c2 0000 	movt	r0, #8192	; 0x2000
    9618:	f000 f892 	bl	9740 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E>
    961c:	9003      	str	r0, [sp, #12]
    961e:	e7ff      	b.n	9620 <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0x16>
    9620:	f24b 4150 	movw	r1, #46160	; 0xb450
    9624:	f2c0 0101 	movt	r1, #1
    9628:	f24b 4360 	movw	r3, #46176	; 0xb460
    962c:	f2c0 0301 	movt	r3, #1
    9630:	220e      	movs	r2, #14
    9632:	9803      	ldr	r0, [sp, #12]
    9634:	f002 fab2 	bl	bb9c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hca4739a9a91ec005E>
    9638:	e7ff      	b.n	963a <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0x30>
            .expect("touchdata fail");
        //  Handle each touch data info
        for i in 0..TOUCH_DATA.count as usize {
    963a:	f240 1044 	movw	r0, #324	; 0x144
    963e:	f2c2 0000 	movt	r0, #8192	; 0x2000
    9642:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
    9646:	2100      	movs	r1, #0
    9648:	9105      	str	r1, [sp, #20]
    964a:	9006      	str	r0, [sp, #24]
    964c:	9805      	ldr	r0, [sp, #20]
    964e:	9906      	ldr	r1, [sp, #24]
    9650:	f001 fbb2 	bl	adb8 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb672bbad4eb22d2eE>
    9654:	9002      	str	r0, [sp, #8]
    9656:	9101      	str	r1, [sp, #4]
    9658:	e7ff      	b.n	965a <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0x50>
    965a:	9802      	ldr	r0, [sp, #8]
    965c:	9007      	str	r0, [sp, #28]
    965e:	9901      	ldr	r1, [sp, #4]
    9660:	9108      	str	r1, [sp, #32]
    9662:	e7ff      	b.n	9664 <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0x5a>
    9664:	a807      	add	r0, sp, #28
    9666:	f000 ffb8 	bl	a5da <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2f0c22a5b5fe2588E>
    966a:	910b      	str	r1, [sp, #44]	; 0x2c
    966c:	900a      	str	r0, [sp, #40]	; 0x28
    966e:	e7ff      	b.n	9670 <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0x66>
    9670:	980a      	ldr	r0, [sp, #40]	; 0x28
    9672:	2800      	cmp	r0, #0
    9674:	d001      	beq.n	967a <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0x70>
    9676:	e7ff      	b.n	9678 <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0x6e>
    9678:	e002      	b.n	9680 <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0x76>
            console::print(", x: "); console::printint(x as i32); 
            console::print(", y: "); console::printint(y as i32); console::print("\n");
        }
        console::flush();   
    } */
}
    967a:	b010      	add	sp, #64	; 0x40
    967c:	bd80      	pop	{r7, pc}
        for i in 0..TOUCH_DATA.count as usize {
    967e:	defe      	udf	#254	; 0xfe
    9680:	980b      	ldr	r0, [sp, #44]	; 0x2c
    9682:	900c      	str	r0, [sp, #48]	; 0x30
    9684:	980c      	ldr	r0, [sp, #48]	; 0x30
    9686:	9009      	str	r0, [sp, #36]	; 0x24
    9688:	9809      	ldr	r0, [sp, #36]	; 0x24
    968a:	900d      	str	r0, [sp, #52]	; 0x34
            let TouchInfo{ x, y, action, .. } = TOUCH_DATA.touches[i];
    968c:	980d      	ldr	r0, [sp, #52]	; 0x34
    968e:	2809      	cmp	r0, #9
    9690:	9000      	str	r0, [sp, #0]
    9692:	d84c      	bhi.n	972e <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0x124>
    9694:	e7ff      	b.n	9696 <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0x8c>
    9696:	f240 1044 	movw	r0, #324	; 0x144
    969a:	f2c2 0000 	movt	r0, #8192	; 0x2000
    969e:	9900      	ldr	r1, [sp, #0]
    96a0:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
    96a4:	f830 0031 	ldrh.w	r0, [r0, r1, lsl #3]
    96a8:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
    96ac:	8850      	ldrh	r0, [r2, #2]
    96ae:	f8ad 003a 	strh.w	r0, [sp, #58]	; 0x3a
    96b2:	7910      	ldrb	r0, [r2, #4]
    96b4:	f88d 003d 	strb.w	r0, [sp, #61]	; 0x3d
            if x == 0 && y == 0 { continue; }
    96b8:	f8bd 0038 	ldrh.w	r0, [sp, #56]	; 0x38
    96bc:	2800      	cmp	r0, #0
    96be:	d008      	beq.n	96d2 <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0xc8>
    96c0:	e003      	b.n	96ca <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0xc0>
    96c2:	2001      	movs	r0, #1
    96c4:	f88d 003e 	strb.w	r0, [sp, #62]	; 0x3e
    96c8:	e008      	b.n	96dc <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0xd2>
    96ca:	2000      	movs	r0, #0
    96cc:	f88d 003e 	strb.w	r0, [sp, #62]	; 0x3e
    96d0:	e004      	b.n	96dc <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0xd2>
    96d2:	f8bd 003a 	ldrh.w	r0, [sp, #58]	; 0x3a
    96d6:	2800      	cmp	r0, #0
    96d8:	d0f3      	beq.n	96c2 <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0xb8>
    96da:	e7f6      	b.n	96ca <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0xc0>
    96dc:	f89d 003e 	ldrb.w	r0, [sp, #62]	; 0x3e
    96e0:	07c0      	lsls	r0, r0, #31
    96e2:	2800      	cmp	r0, #0
    96e4:	d105      	bne.n	96f2 <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0xe8>
    96e6:	e7ff      	b.n	96e8 <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0xde>
            if action != 0 && action != 2 { continue; }
    96e8:	f89d 003d 	ldrb.w	r0, [sp, #61]	; 0x3d
    96ec:	2800      	cmp	r0, #0
    96ee:	d10a      	bne.n	9706 <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0xfc>
    96f0:	e005      	b.n	96fe <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0xf4>
            if x == 0 && y == 0 { continue; }
    96f2:	e7ff      	b.n	96f4 <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0xea>
    96f4:	e7b6      	b.n	9664 <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0x5a>
    96f6:	2001      	movs	r0, #1
            if action != 0 && action != 2 { continue; }
    96f8:	f88d 003f 	strb.w	r0, [sp, #63]	; 0x3f
    96fc:	e008      	b.n	9710 <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0x106>
    96fe:	2000      	movs	r0, #0
    9700:	f88d 003f 	strb.w	r0, [sp, #63]	; 0x3f
    9704:	e004      	b.n	9710 <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0x106>
    9706:	f89d 003d 	ldrb.w	r0, [sp, #61]	; 0x3d
    970a:	2802      	cmp	r0, #2
    970c:	d1f3      	bne.n	96f6 <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0xec>
    970e:	e7f6      	b.n	96fe <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0xf4>
    9710:	f89d 003f 	ldrb.w	r0, [sp, #63]	; 0x3f
    9714:	07c0      	lsls	r0, r0, #31
    9716:	2800      	cmp	r0, #0
    9718:	d107      	bne.n	972a <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0x120>
    971a:	e7ff      	b.n	971c <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0x112>
            super::handle_touch(x, y);
    971c:	f8bd 103a 	ldrh.w	r1, [sp, #58]	; 0x3a
    9720:	f8bd 0038 	ldrh.w	r0, [sp, #56]	; 0x38
    9724:	f7fe ff77 	bl	8616 <_ZN3app12handle_touch17h28605a1a1e29ff74E>
    9728:	e000      	b.n	972c <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0x122>
            if action != 0 && action != 2 { continue; }
    972a:	e7e3      	b.n	96f4 <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0xea>
        for i in 0..TOUCH_DATA.count as usize {
    972c:	e79a      	b.n	9664 <_ZN3app12touch_sensor20touch_event_callback17ha10c97f5ec279552E+0x5a>
            let TouchInfo{ x, y, action, .. } = TOUCH_DATA.touches[i];
    972e:	f24b 4070 	movw	r0, #46192	; 0xb470
    9732:	f2c0 0001 	movt	r0, #1
    9736:	220a      	movs	r2, #10
    9738:	9900      	ldr	r1, [sp, #0]
    973a:	f00b fa48 	bl	14bce <_ZN4core9panicking18panic_bounds_check17h6547e9bb7dcebe69E>
    973e:	defe      	udf	#254	; 0xfe

00009740 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E>:
/// Touch data will be populated here
static mut TOUCH_DATA: TouchEventInfo = fill_zero!(TouchEventInfo);

/// Read touch controller data. This only works when the screen has been tapped and the touch controller wakes up.
/// Ported from https://github.com/lupyuen/hynitron_i2c_cst0xxse/blob/master/cst0xx_core.c#L407-L466
fn read_touchdata(data: &mut TouchEventInfo) -> MynewtResult<()> {
    9740:	b580      	push	{r7, lr}
    9742:	b0e2      	sub	sp, #392	; 0x188
    9744:	902c      	str	r0, [sp, #176]	; 0xb0
    read_register_range(           //  Read the range of I2C registers...
    9746:	4668      	mov	r0, sp
    9748:	213f      	movs	r1, #63	; 0x3f
    974a:	6001      	str	r1, [r0, #0]
    974c:	f240 1396 	movw	r3, #406	; 0x196
    9750:	f2c2 0300 	movt	r3, #8192	; 0x2000
    9754:	2015      	movs	r0, #21
    9756:	2200      	movs	r2, #0
    9758:	912b      	str	r1, [sp, #172]	; 0xac
    975a:	4611      	mov	r1, r2
    975c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
    975e:	f000 fba2 	bl	9ea6 <_ZN3app12touch_sensor19read_register_range17h84615e3b234f6933E>
    9762:	902a      	str	r0, [sp, #168]	; 0xa8
    9764:	e7ff      	b.n	9766 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x26>
    9766:	f24b 4180 	movw	r1, #46208	; 0xb480
    976a:	f2c0 0101 	movt	r1, #1
    976e:	f24b 4394 	movw	r3, #46228	; 0xb494
    9772:	f2c0 0301 	movt	r3, #1
    9776:	2213      	movs	r2, #19
    9778:	982a      	ldr	r0, [sp, #168]	; 0xa8
    977a:	f002 fa0f 	bl	bb9c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hca4739a9a91ec005E>
    977e:	e7ff      	b.n	9780 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x40>
    9780:	f50d 7083 	add.w	r0, sp, #262	; 0x106
    9784:	2152      	movs	r1, #82	; 0x52
        TOUCH_CONTROLLER_ADDRESS,  //  From the touch controller
        0,                         //  Starting from register 0
        POINT_READ_BUF as u8,      //  Number of registers to read
        unsafe { &mut BUF }        //  Save the read data into `buf`
    ).expect("read touchdata fail");
    *data = fill_zero!(TouchEventInfo);
    9786:	9029      	str	r0, [sp, #164]	; 0xa4
    9788:	9128      	str	r1, [sp, #160]	; 0xa0
    978a:	f011 fba9 	bl	1aee0 <__aeabi_memclr>
    978e:	a82d      	add	r0, sp, #180	; 0xb4
    9790:	9929      	ldr	r1, [sp, #164]	; 0xa4
    9792:	9a28      	ldr	r2, [sp, #160]	; 0xa0
    9794:	f011 fba8 	bl	1aee8 <__aeabi_memcpy>
    9798:	e7ff      	b.n	979a <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x5a>
    979a:	982c      	ldr	r0, [sp, #176]	; 0xb0
    979c:	a92d      	add	r1, sp, #180	; 0xb4
    979e:	2252      	movs	r2, #82	; 0x52
    97a0:	f011 fba2 	bl	1aee8 <__aeabi_memcpy>
    data.point_num = unsafe { BUF[FT_TOUCH_POINT_NUM] & 0x0F };
    97a4:	f240 1196 	movw	r1, #406	; 0x196
    97a8:	f2c2 0100 	movt	r1, #8192	; 0x2000
    97ac:	7889      	ldrb	r1, [r1, #2]
    97ae:	f001 010f 	and.w	r1, r1, #15
    97b2:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
    97b4:	f882 1051 	strb.w	r1, [r2, #81]	; 0x51
    data.count     = 0;
    97b8:	992c      	ldr	r1, [sp, #176]	; 0xb0
    97ba:	2200      	movs	r2, #0
    97bc:	f881 2050 	strb.w	r2, [r1, #80]	; 0x50

    //  Populate the first 5 touch points
    for i in 0..CFG_MAX_TOUCH_POINTS {
    97c0:	9256      	str	r2, [sp, #344]	; 0x158
    97c2:	2105      	movs	r1, #5
    97c4:	9157      	str	r1, [sp, #348]	; 0x15c
    97c6:	9956      	ldr	r1, [sp, #344]	; 0x158
    97c8:	9a57      	ldr	r2, [sp, #348]	; 0x15c
    97ca:	9027      	str	r0, [sp, #156]	; 0x9c
    97cc:	4608      	mov	r0, r1
    97ce:	4611      	mov	r1, r2
    97d0:	f001 faf2 	bl	adb8 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb672bbad4eb22d2eE>
    97d4:	9026      	str	r0, [sp, #152]	; 0x98
    97d6:	9125      	str	r1, [sp, #148]	; 0x94
    97d8:	e7ff      	b.n	97da <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x9a>
    97da:	9826      	ldr	r0, [sp, #152]	; 0x98
    97dc:	9058      	str	r0, [sp, #352]	; 0x160
    97de:	9925      	ldr	r1, [sp, #148]	; 0x94
    97e0:	9159      	str	r1, [sp, #356]	; 0x164
    97e2:	e7ff      	b.n	97e4 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0xa4>
    97e4:	a858      	add	r0, sp, #352	; 0x160
    97e6:	f000 fef8 	bl	a5da <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2f0c22a5b5fe2588E>
    97ea:	915c      	str	r1, [sp, #368]	; 0x170
    97ec:	905b      	str	r0, [sp, #364]	; 0x16c
    97ee:	e7ff      	b.n	97f0 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0xb0>
    97f0:	985b      	ldr	r0, [sp, #364]	; 0x16c
    97f2:	2800      	cmp	r0, #0
    97f4:	d001      	beq.n	97fa <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0xba>
    97f6:	e7ff      	b.n	97f8 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0xb8>
    97f8:	e001      	b.n	97fe <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0xbe>
    97fa:	e00f      	b.n	981c <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0xdc>
    97fc:	defe      	udf	#254	; 0xfe
    97fe:	985c      	ldr	r0, [sp, #368]	; 0x170
    9800:	905d      	str	r0, [sp, #372]	; 0x174
    9802:	985d      	ldr	r0, [sp, #372]	; 0x174
    9804:	905a      	str	r0, [sp, #360]	; 0x168
    9806:	985a      	ldr	r0, [sp, #360]	; 0x168
    9808:	905e      	str	r0, [sp, #376]	; 0x178
        let pointid = unsafe { BUF[HYN_TOUCH_ID_POS + HYN_TOUCH_STEP * i] } >> 4;
    980a:	985e      	ldr	r0, [sp, #376]	; 0x178
    980c:	2106      	movs	r1, #6
    980e:	fba1 0100 	umull	r0, r1, r1, r0
    9812:	2900      	cmp	r1, #0
    9814:	9024      	str	r0, [sp, #144]	; 0x90
    9816:	f040 81c9 	bne.w	9bac <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x46c>
    981a:	e002      	b.n	9822 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0xe2>
    981c:	2001      	movs	r0, #1
            && (data.point_num == 0) {
            break;
        }
    }
    Ok(())
}
    981e:	b062      	add	sp, #392	; 0x188
    9820:	bd80      	pop	{r7, pc}
        let pointid = unsafe { BUF[HYN_TOUCH_ID_POS + HYN_TOUCH_STEP * i] } >> 4;
    9822:	9824      	ldr	r0, [sp, #144]	; 0x90
    9824:	1d41      	adds	r1, r0, #5
    9826:	460a      	mov	r2, r1
    9828:	4281      	cmp	r1, r0
    982a:	9223      	str	r2, [sp, #140]	; 0x8c
    982c:	f0c0 81ca 	bcc.w	9bc4 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x484>
    9830:	e7ff      	b.n	9832 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0xf2>
    9832:	9823      	ldr	r0, [sp, #140]	; 0x8c
    9834:	283e      	cmp	r0, #62	; 0x3e
    9836:	f200 81d1 	bhi.w	9bdc <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x49c>
    983a:	e7ff      	b.n	983c <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0xfc>
    983c:	f240 1096 	movw	r0, #406	; 0x196
    9840:	f2c2 0000 	movt	r0, #8192	; 0x2000
    9844:	9923      	ldr	r1, [sp, #140]	; 0x8c
    9846:	5c40      	ldrb	r0, [r0, r1]
    9848:	0900      	lsrs	r0, r0, #4
    984a:	9022      	str	r0, [sp, #136]	; 0x88
    984c:	e7ff      	b.n	984e <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x10e>
    984e:	9822      	ldr	r0, [sp, #136]	; 0x88
    9850:	f88d 017d 	strb.w	r0, [sp, #381]	; 0x17d
        if pointid >= HYN_MAX_ID { break; }
    9854:	f89d 117d 	ldrb.w	r1, [sp, #381]	; 0x17d
    9858:	290e      	cmp	r1, #14
    985a:	d80b      	bhi.n	9874 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x134>
    985c:	e7ff      	b.n	985e <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x11e>
        data.count += 1;
    985e:	982c      	ldr	r0, [sp, #176]	; 0xb0
    9860:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
    9864:	3001      	adds	r0, #1
    9866:	b2c1      	uxtb	r1, r0
    9868:	4602      	mov	r2, r0
    986a:	4281      	cmp	r1, r0
    986c:	9221      	str	r2, [sp, #132]	; 0x84
    986e:	f040 81be 	bne.w	9bee <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x4ae>
    9872:	e001      	b.n	9878 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x138>
        if pointid >= HYN_MAX_ID { break; }
    9874:	e7ff      	b.n	9876 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x136>
    9876:	e7d1      	b.n	981c <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0xdc>
        data.count += 1;
    9878:	982c      	ldr	r0, [sp, #176]	; 0xb0
    987a:	9921      	ldr	r1, [sp, #132]	; 0x84
    987c:	f880 1050 	strb.w	r1, [r0, #80]	; 0x50
        let x_high = unsafe { BUF[HYN_TOUCH_X_H_POS + HYN_TOUCH_STEP * i] & 0x0F } as u16;
    9880:	985e      	ldr	r0, [sp, #376]	; 0x178
    9882:	2206      	movs	r2, #6
    9884:	fba2 0200 	umull	r0, r2, r2, r0
    9888:	2a00      	cmp	r2, #0
    988a:	9020      	str	r0, [sp, #128]	; 0x80
    988c:	f040 81bb 	bne.w	9c06 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x4c6>
    9890:	e7ff      	b.n	9892 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x152>
    9892:	9820      	ldr	r0, [sp, #128]	; 0x80
    9894:	1cc1      	adds	r1, r0, #3
    9896:	460a      	mov	r2, r1
    9898:	4281      	cmp	r1, r0
    989a:	921f      	str	r2, [sp, #124]	; 0x7c
    989c:	f0c0 81bf 	bcc.w	9c1e <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x4de>
    98a0:	e7ff      	b.n	98a2 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x162>
    98a2:	981f      	ldr	r0, [sp, #124]	; 0x7c
    98a4:	283e      	cmp	r0, #62	; 0x3e
    98a6:	f200 81c6 	bhi.w	9c36 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x4f6>
    98aa:	e7ff      	b.n	98ac <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x16c>
    98ac:	f240 1096 	movw	r0, #406	; 0x196
    98b0:	f2c2 0000 	movt	r0, #8192	; 0x2000
    98b4:	991f      	ldr	r1, [sp, #124]	; 0x7c
    98b6:	5c40      	ldrb	r0, [r0, r1]
    98b8:	f000 000f 	and.w	r0, r0, #15
    98bc:	f8ad 017e 	strh.w	r0, [sp, #382]	; 0x17e
        let x_low  = unsafe { BUF[HYN_TOUCH_X_L_POS + HYN_TOUCH_STEP * i] } as u16;
    98c0:	985e      	ldr	r0, [sp, #376]	; 0x178
    98c2:	2206      	movs	r2, #6
    98c4:	fba2 0200 	umull	r0, r2, r2, r0
    98c8:	2a00      	cmp	r2, #0
    98ca:	901e      	str	r0, [sp, #120]	; 0x78
    98cc:	f040 81bc 	bne.w	9c48 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x508>
    98d0:	e7ff      	b.n	98d2 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x192>
    98d2:	981e      	ldr	r0, [sp, #120]	; 0x78
    98d4:	1d01      	adds	r1, r0, #4
    98d6:	460a      	mov	r2, r1
    98d8:	4281      	cmp	r1, r0
    98da:	921d      	str	r2, [sp, #116]	; 0x74
    98dc:	f0c0 81c0 	bcc.w	9c60 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x520>
    98e0:	e7ff      	b.n	98e2 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x1a2>
    98e2:	981d      	ldr	r0, [sp, #116]	; 0x74
    98e4:	283e      	cmp	r0, #62	; 0x3e
    98e6:	f200 81c7 	bhi.w	9c78 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x538>
    98ea:	e7ff      	b.n	98ec <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x1ac>
    98ec:	f240 1096 	movw	r0, #406	; 0x196
    98f0:	f2c2 0000 	movt	r0, #8192	; 0x2000
    98f4:	991d      	ldr	r1, [sp, #116]	; 0x74
    98f6:	5c40      	ldrb	r0, [r0, r1]
    98f8:	f8ad 0180 	strh.w	r0, [sp, #384]	; 0x180
        data.touches[i].x  = (x_high << 8) | x_low;
    98fc:	f8bd 017e 	ldrh.w	r0, [sp, #382]	; 0x17e
    9900:	0200      	lsls	r0, r0, #8
    9902:	901c      	str	r0, [sp, #112]	; 0x70
    9904:	e7ff      	b.n	9906 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x1c6>
    9906:	f8bd 0180 	ldrh.w	r0, [sp, #384]	; 0x180
    990a:	995e      	ldr	r1, [sp, #376]	; 0x178
    990c:	2909      	cmp	r1, #9
    990e:	901b      	str	r0, [sp, #108]	; 0x6c
    9910:	911a      	str	r1, [sp, #104]	; 0x68
    9912:	f200 81ba 	bhi.w	9c8a <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x54a>
    9916:	e7ff      	b.n	9918 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x1d8>
    9918:	982c      	ldr	r0, [sp, #176]	; 0xb0
    991a:	991c      	ldr	r1, [sp, #112]	; 0x70
    991c:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    991e:	ea41 0302 	orr.w	r3, r1, r2
    9922:	f8dd c068 	ldr.w	ip, [sp, #104]	; 0x68
    9926:	f820 303c 	strh.w	r3, [r0, ip, lsl #3]
        let y_high = unsafe { BUF[HYN_TOUCH_Y_H_POS + HYN_TOUCH_STEP * i] & 0x0F } as u16;
    992a:	985e      	ldr	r0, [sp, #376]	; 0x178
    992c:	2306      	movs	r3, #6
    992e:	fba3 0300 	umull	r0, r3, r3, r0
    9932:	2b00      	cmp	r3, #0
    9934:	9019      	str	r0, [sp, #100]	; 0x64
    9936:	f040 81b1 	bne.w	9c9c <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x55c>
    993a:	e7ff      	b.n	993c <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x1fc>
    993c:	9819      	ldr	r0, [sp, #100]	; 0x64
    993e:	1d41      	adds	r1, r0, #5
    9940:	460a      	mov	r2, r1
    9942:	4281      	cmp	r1, r0
    9944:	9218      	str	r2, [sp, #96]	; 0x60
    9946:	f0c0 81b5 	bcc.w	9cb4 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x574>
    994a:	e7ff      	b.n	994c <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x20c>
    994c:	9818      	ldr	r0, [sp, #96]	; 0x60
    994e:	283e      	cmp	r0, #62	; 0x3e
    9950:	f200 81bc 	bhi.w	9ccc <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x58c>
    9954:	e7ff      	b.n	9956 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x216>
    9956:	f240 1096 	movw	r0, #406	; 0x196
    995a:	f2c2 0000 	movt	r0, #8192	; 0x2000
    995e:	9918      	ldr	r1, [sp, #96]	; 0x60
    9960:	5c40      	ldrb	r0, [r0, r1]
    9962:	f000 000f 	and.w	r0, r0, #15
    9966:	f8ad 0182 	strh.w	r0, [sp, #386]	; 0x182
        let y_low  = unsafe { BUF[HYN_TOUCH_Y_L_POS + HYN_TOUCH_STEP * i] } as u16;
    996a:	985e      	ldr	r0, [sp, #376]	; 0x178
    996c:	2206      	movs	r2, #6
    996e:	fba2 0200 	umull	r0, r2, r2, r0
    9972:	2a00      	cmp	r2, #0
    9974:	9017      	str	r0, [sp, #92]	; 0x5c
    9976:	f040 81b2 	bne.w	9cde <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x59e>
    997a:	e7ff      	b.n	997c <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x23c>
    997c:	9817      	ldr	r0, [sp, #92]	; 0x5c
    997e:	1d81      	adds	r1, r0, #6
    9980:	460a      	mov	r2, r1
    9982:	4281      	cmp	r1, r0
    9984:	9216      	str	r2, [sp, #88]	; 0x58
    9986:	f0c0 81b6 	bcc.w	9cf6 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x5b6>
    998a:	e7ff      	b.n	998c <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x24c>
    998c:	9816      	ldr	r0, [sp, #88]	; 0x58
    998e:	283e      	cmp	r0, #62	; 0x3e
    9990:	f200 81bd 	bhi.w	9d0e <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x5ce>
    9994:	e7ff      	b.n	9996 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x256>
    9996:	f240 1096 	movw	r0, #406	; 0x196
    999a:	f2c2 0000 	movt	r0, #8192	; 0x2000
    999e:	9916      	ldr	r1, [sp, #88]	; 0x58
    99a0:	5c40      	ldrb	r0, [r0, r1]
    99a2:	f8ad 0184 	strh.w	r0, [sp, #388]	; 0x184
        data.touches[i].y  = (y_high << 8) | y_low;
    99a6:	f8bd 0182 	ldrh.w	r0, [sp, #386]	; 0x182
    99aa:	0200      	lsls	r0, r0, #8
    99ac:	9015      	str	r0, [sp, #84]	; 0x54
    99ae:	e7ff      	b.n	99b0 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x270>
    99b0:	f8bd 0184 	ldrh.w	r0, [sp, #388]	; 0x184
    99b4:	995e      	ldr	r1, [sp, #376]	; 0x178
    99b6:	2909      	cmp	r1, #9
    99b8:	9014      	str	r0, [sp, #80]	; 0x50
    99ba:	9113      	str	r1, [sp, #76]	; 0x4c
    99bc:	f200 81b0 	bhi.w	9d20 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x5e0>
    99c0:	e7ff      	b.n	99c2 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x282>
    99c2:	982c      	ldr	r0, [sp, #176]	; 0xb0
    99c4:	9913      	ldr	r1, [sp, #76]	; 0x4c
    99c6:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
    99ca:	9a15      	ldr	r2, [sp, #84]	; 0x54
    99cc:	9b14      	ldr	r3, [sp, #80]	; 0x50
    99ce:	ea42 0c03 	orr.w	ip, r2, r3
    99d2:	f8a0 c002 	strh.w	ip, [r0, #2]
            unsafe { BUF[HYN_TOUCH_EVENT_POS + HYN_TOUCH_STEP * i] } >> 6;
    99d6:	985e      	ldr	r0, [sp, #376]	; 0x178
    99d8:	f04f 0c06 	mov.w	ip, #6
    99dc:	fbac 0c00 	umull	r0, ip, ip, r0
    99e0:	f1bc 0f00 	cmp.w	ip, #0
    99e4:	9012      	str	r0, [sp, #72]	; 0x48
    99e6:	f040 81a4 	bne.w	9d32 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x5f2>
    99ea:	e7ff      	b.n	99ec <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x2ac>
    99ec:	9812      	ldr	r0, [sp, #72]	; 0x48
    99ee:	1cc1      	adds	r1, r0, #3
    99f0:	460a      	mov	r2, r1
    99f2:	4281      	cmp	r1, r0
    99f4:	9211      	str	r2, [sp, #68]	; 0x44
    99f6:	f0c0 81a8 	bcc.w	9d4a <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x60a>
    99fa:	e7ff      	b.n	99fc <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x2bc>
    99fc:	9811      	ldr	r0, [sp, #68]	; 0x44
    99fe:	283e      	cmp	r0, #62	; 0x3e
    9a00:	f200 81af 	bhi.w	9d62 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x622>
    9a04:	e7ff      	b.n	9a06 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x2c6>
    9a06:	f240 1096 	movw	r0, #406	; 0x196
    9a0a:	f2c2 0000 	movt	r0, #8192	; 0x2000
    9a0e:	9911      	ldr	r1, [sp, #68]	; 0x44
    9a10:	5c40      	ldrb	r0, [r0, r1]
    9a12:	0980      	lsrs	r0, r0, #6
    9a14:	9010      	str	r0, [sp, #64]	; 0x40
    9a16:	e7ff      	b.n	9a18 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x2d8>
        data.touches[i].action =
    9a18:	985e      	ldr	r0, [sp, #376]	; 0x178
    9a1a:	2809      	cmp	r0, #9
    9a1c:	900f      	str	r0, [sp, #60]	; 0x3c
    9a1e:	f200 81a9 	bhi.w	9d74 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x634>
    9a22:	e7ff      	b.n	9a24 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x2e4>
    9a24:	982c      	ldr	r0, [sp, #176]	; 0xb0
    9a26:	990f      	ldr	r1, [sp, #60]	; 0x3c
    9a28:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
    9a2c:	9a10      	ldr	r2, [sp, #64]	; 0x40
    9a2e:	7102      	strb	r2, [r0, #4]
            unsafe { BUF[HYN_TOUCH_ID_POS    + HYN_TOUCH_STEP * i] } >> 4;
    9a30:	985e      	ldr	r0, [sp, #376]	; 0x178
    9a32:	2306      	movs	r3, #6
    9a34:	fba3 0300 	umull	r0, r3, r3, r0
    9a38:	2b00      	cmp	r3, #0
    9a3a:	900e      	str	r0, [sp, #56]	; 0x38
    9a3c:	f040 81a3 	bne.w	9d86 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x646>
    9a40:	e7ff      	b.n	9a42 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x302>
    9a42:	980e      	ldr	r0, [sp, #56]	; 0x38
    9a44:	1d41      	adds	r1, r0, #5
    9a46:	460a      	mov	r2, r1
    9a48:	4281      	cmp	r1, r0
    9a4a:	920d      	str	r2, [sp, #52]	; 0x34
    9a4c:	f0c0 81a7 	bcc.w	9d9e <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x65e>
    9a50:	e7ff      	b.n	9a52 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x312>
    9a52:	980d      	ldr	r0, [sp, #52]	; 0x34
    9a54:	283e      	cmp	r0, #62	; 0x3e
    9a56:	f200 81ae 	bhi.w	9db6 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x676>
    9a5a:	e7ff      	b.n	9a5c <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x31c>
    9a5c:	f240 1096 	movw	r0, #406	; 0x196
    9a60:	f2c2 0000 	movt	r0, #8192	; 0x2000
    9a64:	990d      	ldr	r1, [sp, #52]	; 0x34
    9a66:	5c40      	ldrb	r0, [r0, r1]
    9a68:	0900      	lsrs	r0, r0, #4
    9a6a:	900c      	str	r0, [sp, #48]	; 0x30
    9a6c:	e7ff      	b.n	9a6e <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x32e>
        data.touches[i].finger =
    9a6e:	985e      	ldr	r0, [sp, #376]	; 0x178
    9a70:	2809      	cmp	r0, #9
    9a72:	900b      	str	r0, [sp, #44]	; 0x2c
    9a74:	f200 81a8 	bhi.w	9dc8 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x688>
    9a78:	e7ff      	b.n	9a7a <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x33a>
    9a7a:	982c      	ldr	r0, [sp, #176]	; 0xb0
    9a7c:	990b      	ldr	r1, [sp, #44]	; 0x2c
    9a7e:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
    9a82:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    9a84:	7142      	strb	r2, [r0, #5]
            unsafe { BUF[HYN_TOUCH_XY_POS + HYN_TOUCH_STEP * i] };  //  Can't be constant value
    9a86:	985e      	ldr	r0, [sp, #376]	; 0x178
    9a88:	2306      	movs	r3, #6
    9a8a:	fba3 0300 	umull	r0, r3, r3, r0
    9a8e:	2b00      	cmp	r3, #0
    9a90:	900a      	str	r0, [sp, #40]	; 0x28
    9a92:	f040 81a2 	bne.w	9dda <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x69a>
    9a96:	e7ff      	b.n	9a98 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x358>
    9a98:	980a      	ldr	r0, [sp, #40]	; 0x28
    9a9a:	1dc1      	adds	r1, r0, #7
    9a9c:	460a      	mov	r2, r1
    9a9e:	4281      	cmp	r1, r0
    9aa0:	9209      	str	r2, [sp, #36]	; 0x24
    9aa2:	f0c0 81a6 	bcc.w	9df2 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x6b2>
    9aa6:	e7ff      	b.n	9aa8 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x368>
    9aa8:	9809      	ldr	r0, [sp, #36]	; 0x24
    9aaa:	283e      	cmp	r0, #62	; 0x3e
    9aac:	f200 81ad 	bhi.w	9e0a <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x6ca>
    9ab0:	e7ff      	b.n	9ab2 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x372>
    9ab2:	f240 1096 	movw	r0, #406	; 0x196
    9ab6:	f2c2 0000 	movt	r0, #8192	; 0x2000
    9aba:	9909      	ldr	r1, [sp, #36]	; 0x24
    9abc:	5c40      	ldrb	r0, [r0, r1]
        data.touches[i].pressure =
    9abe:	9a5e      	ldr	r2, [sp, #376]	; 0x178
    9ac0:	2a09      	cmp	r2, #9
    9ac2:	9008      	str	r0, [sp, #32]
    9ac4:	9207      	str	r2, [sp, #28]
    9ac6:	f200 81a9 	bhi.w	9e1c <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x6dc>
    9aca:	e7ff      	b.n	9acc <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x38c>
    9acc:	982c      	ldr	r0, [sp, #176]	; 0xb0
    9ace:	9907      	ldr	r1, [sp, #28]
    9ad0:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
    9ad4:	9a08      	ldr	r2, [sp, #32]
    9ad6:	7182      	strb	r2, [r0, #6]
            unsafe { BUF[HYN_TOUCH_MISC   + HYN_TOUCH_STEP * i] } >> 4;
    9ad8:	985e      	ldr	r0, [sp, #376]	; 0x178
    9ada:	2306      	movs	r3, #6
    9adc:	fba3 0300 	umull	r0, r3, r3, r0
    9ae0:	2b00      	cmp	r3, #0
    9ae2:	9006      	str	r0, [sp, #24]
    9ae4:	f040 81a3 	bne.w	9e2e <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x6ee>
    9ae8:	e7ff      	b.n	9aea <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x3aa>
    9aea:	9806      	ldr	r0, [sp, #24]
    9aec:	f100 0108 	add.w	r1, r0, #8
    9af0:	460a      	mov	r2, r1
    9af2:	4281      	cmp	r1, r0
    9af4:	9205      	str	r2, [sp, #20]
    9af6:	f0c0 81a6 	bcc.w	9e46 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x706>
    9afa:	e7ff      	b.n	9afc <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x3bc>
    9afc:	9805      	ldr	r0, [sp, #20]
    9afe:	283e      	cmp	r0, #62	; 0x3e
    9b00:	f200 81ad 	bhi.w	9e5e <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x71e>
    9b04:	e7ff      	b.n	9b06 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x3c6>
    9b06:	f240 1096 	movw	r0, #406	; 0x196
    9b0a:	f2c2 0000 	movt	r0, #8192	; 0x2000
    9b0e:	9905      	ldr	r1, [sp, #20]
    9b10:	5c40      	ldrb	r0, [r0, r1]
    9b12:	0900      	lsrs	r0, r0, #4
    9b14:	9004      	str	r0, [sp, #16]
    9b16:	e7ff      	b.n	9b18 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x3d8>
        data.touches[i].area =
    9b18:	985e      	ldr	r0, [sp, #376]	; 0x178
    9b1a:	2809      	cmp	r0, #9
    9b1c:	9003      	str	r0, [sp, #12]
    9b1e:	f200 81a7 	bhi.w	9e70 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x730>
    9b22:	e7ff      	b.n	9b24 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x3e4>
    9b24:	982c      	ldr	r0, [sp, #176]	; 0xb0
    9b26:	9903      	ldr	r1, [sp, #12]
    9b28:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
    9b2c:	9a04      	ldr	r2, [sp, #16]
    9b2e:	71c2      	strb	r2, [r0, #7]
        if (data.touches[i].action == 0 || data.touches[i].action == 2)  //  If touch is down or contact
    9b30:	985e      	ldr	r0, [sp, #376]	; 0x178
    9b32:	280a      	cmp	r0, #10
    9b34:	9002      	str	r0, [sp, #8]
    9b36:	d327      	bcc.n	9b88 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x448>
    9b38:	e1a3      	b.n	9e82 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x742>
    9b3a:	2001      	movs	r0, #1
    9b3c:	f88d 0186 	strb.w	r0, [sp, #390]	; 0x186
    9b40:	e009      	b.n	9b56 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x416>
    9b42:	2000      	movs	r0, #0
    9b44:	f88d 0186 	strb.w	r0, [sp, #390]	; 0x186
    9b48:	e005      	b.n	9b56 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x416>
            && (data.point_num == 0) {
    9b4a:	982c      	ldr	r0, [sp, #176]	; 0xb0
    9b4c:	f890 0051 	ldrb.w	r0, [r0, #81]	; 0x51
        if (data.touches[i].action == 0 || data.touches[i].action == 2)  //  If touch is down or contact
    9b50:	2800      	cmp	r0, #0
    9b52:	d0f2      	beq.n	9b3a <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x3fa>
    9b54:	e7f5      	b.n	9b42 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x402>
    9b56:	f89d 0186 	ldrb.w	r0, [sp, #390]	; 0x186
    9b5a:	07c0      	lsls	r0, r0, #31
    9b5c:	2800      	cmp	r0, #0
    9b5e:	d124      	bne.n	9baa <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x46a>
    9b60:	e022      	b.n	9ba8 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x468>
    9b62:	2001      	movs	r0, #1
    9b64:	f88d 0187 	strb.w	r0, [sp, #391]	; 0x187
    9b68:	e008      	b.n	9b7c <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x43c>
    9b6a:	2000      	movs	r0, #0
    9b6c:	f88d 0187 	strb.w	r0, [sp, #391]	; 0x187
    9b70:	e004      	b.n	9b7c <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x43c>
    9b72:	985e      	ldr	r0, [sp, #376]	; 0x178
    9b74:	280a      	cmp	r0, #10
    9b76:	9001      	str	r0, [sp, #4]
    9b78:	d30e      	bcc.n	9b98 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x458>
    9b7a:	e18b      	b.n	9e94 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x754>
    9b7c:	f89d 0187 	ldrb.w	r0, [sp, #391]	; 0x187
    9b80:	07c0      	lsls	r0, r0, #31
    9b82:	2800      	cmp	r0, #0
    9b84:	d1e1      	bne.n	9b4a <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x40a>
    9b86:	e7dc      	b.n	9b42 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x402>
    9b88:	982c      	ldr	r0, [sp, #176]	; 0xb0
    9b8a:	9902      	ldr	r1, [sp, #8]
    9b8c:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
    9b90:	7900      	ldrb	r0, [r0, #4]
    9b92:	2800      	cmp	r0, #0
    9b94:	d0e5      	beq.n	9b62 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x422>
    9b96:	e7ec      	b.n	9b72 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x432>
    9b98:	982c      	ldr	r0, [sp, #176]	; 0xb0
    9b9a:	9901      	ldr	r1, [sp, #4]
    9b9c:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
    9ba0:	7900      	ldrb	r0, [r0, #4]
    9ba2:	2802      	cmp	r0, #2
    9ba4:	d0dd      	beq.n	9b62 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x422>
    9ba6:	e7e0      	b.n	9b6a <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x42a>
    for i in 0..CFG_MAX_TOUCH_POINTS {
    9ba8:	e61c      	b.n	97e4 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0xa4>
            break;
    9baa:	e664      	b.n	9876 <_ZN3app12touch_sensor14read_touchdata17h5804152ea5dfef31E+0x136>
        let pointid = unsafe { BUF[HYN_TOUCH_ID_POS + HYN_TOUCH_STEP * i] } >> 4;
    9bac:	f24b 40c0 	movw	r0, #46272	; 0xb4c0
    9bb0:	f2c0 0001 	movt	r0, #1
    9bb4:	f24b 42a4 	movw	r2, #46244	; 0xb4a4
    9bb8:	f2c0 0201 	movt	r2, #1
    9bbc:	2121      	movs	r1, #33	; 0x21
    9bbe:	f00a fff0 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9bc2:	defe      	udf	#254	; 0xfe
    9bc4:	f24b 5000 	movw	r0, #46336	; 0xb500
    9bc8:	f2c0 0001 	movt	r0, #1
    9bcc:	f24b 42e4 	movw	r2, #46308	; 0xb4e4
    9bd0:	f2c0 0201 	movt	r2, #1
    9bd4:	211c      	movs	r1, #28
    9bd6:	f00a ffe4 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9bda:	defe      	udf	#254	; 0xfe
    9bdc:	f24b 501c 	movw	r0, #46364	; 0xb51c
    9be0:	f2c0 0001 	movt	r0, #1
    9be4:	223f      	movs	r2, #63	; 0x3f
    9be6:	9923      	ldr	r1, [sp, #140]	; 0x8c
    9be8:	f00a fff1 	bl	14bce <_ZN4core9panicking18panic_bounds_check17h6547e9bb7dcebe69E>
    9bec:	defe      	udf	#254	; 0xfe
        data.count += 1;
    9bee:	f24b 5000 	movw	r0, #46336	; 0xb500
    9bf2:	f2c0 0001 	movt	r0, #1
    9bf6:	f24b 522c 	movw	r2, #46380	; 0xb52c
    9bfa:	f2c0 0201 	movt	r2, #1
    9bfe:	211c      	movs	r1, #28
    9c00:	f00a ffcf 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9c04:	defe      	udf	#254	; 0xfe
        let x_high = unsafe { BUF[HYN_TOUCH_X_H_POS + HYN_TOUCH_STEP * i] & 0x0F } as u16;
    9c06:	f24b 40c0 	movw	r0, #46272	; 0xb4c0
    9c0a:	f2c0 0001 	movt	r0, #1
    9c0e:	f24b 523c 	movw	r2, #46396	; 0xb53c
    9c12:	f2c0 0201 	movt	r2, #1
    9c16:	2121      	movs	r1, #33	; 0x21
    9c18:	f00a ffc3 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9c1c:	defe      	udf	#254	; 0xfe
    9c1e:	f24b 5000 	movw	r0, #46336	; 0xb500
    9c22:	f2c0 0001 	movt	r0, #1
    9c26:	f24b 524c 	movw	r2, #46412	; 0xb54c
    9c2a:	f2c0 0201 	movt	r2, #1
    9c2e:	211c      	movs	r1, #28
    9c30:	f00a ffb7 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9c34:	defe      	udf	#254	; 0xfe
    9c36:	f24b 505c 	movw	r0, #46428	; 0xb55c
    9c3a:	f2c0 0001 	movt	r0, #1
    9c3e:	223f      	movs	r2, #63	; 0x3f
    9c40:	991f      	ldr	r1, [sp, #124]	; 0x7c
    9c42:	f00a ffc4 	bl	14bce <_ZN4core9panicking18panic_bounds_check17h6547e9bb7dcebe69E>
    9c46:	defe      	udf	#254	; 0xfe
        let x_low  = unsafe { BUF[HYN_TOUCH_X_L_POS + HYN_TOUCH_STEP * i] } as u16;
    9c48:	f24b 40c0 	movw	r0, #46272	; 0xb4c0
    9c4c:	f2c0 0001 	movt	r0, #1
    9c50:	f24b 526c 	movw	r2, #46444	; 0xb56c
    9c54:	f2c0 0201 	movt	r2, #1
    9c58:	2121      	movs	r1, #33	; 0x21
    9c5a:	f00a ffa2 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9c5e:	defe      	udf	#254	; 0xfe
    9c60:	f24b 5000 	movw	r0, #46336	; 0xb500
    9c64:	f2c0 0001 	movt	r0, #1
    9c68:	f24b 527c 	movw	r2, #46460	; 0xb57c
    9c6c:	f2c0 0201 	movt	r2, #1
    9c70:	211c      	movs	r1, #28
    9c72:	f00a ff96 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9c76:	defe      	udf	#254	; 0xfe
    9c78:	f24b 508c 	movw	r0, #46476	; 0xb58c
    9c7c:	f2c0 0001 	movt	r0, #1
    9c80:	223f      	movs	r2, #63	; 0x3f
    9c82:	991d      	ldr	r1, [sp, #116]	; 0x74
    9c84:	f00a ffa3 	bl	14bce <_ZN4core9panicking18panic_bounds_check17h6547e9bb7dcebe69E>
    9c88:	defe      	udf	#254	; 0xfe
        data.touches[i].x  = (x_high << 8) | x_low;
    9c8a:	f24b 509c 	movw	r0, #46492	; 0xb59c
    9c8e:	f2c0 0001 	movt	r0, #1
    9c92:	220a      	movs	r2, #10
    9c94:	991a      	ldr	r1, [sp, #104]	; 0x68
    9c96:	f00a ff9a 	bl	14bce <_ZN4core9panicking18panic_bounds_check17h6547e9bb7dcebe69E>
    9c9a:	defe      	udf	#254	; 0xfe
        let y_high = unsafe { BUF[HYN_TOUCH_Y_H_POS + HYN_TOUCH_STEP * i] & 0x0F } as u16;
    9c9c:	f24b 40c0 	movw	r0, #46272	; 0xb4c0
    9ca0:	f2c0 0001 	movt	r0, #1
    9ca4:	f24b 52ac 	movw	r2, #46508	; 0xb5ac
    9ca8:	f2c0 0201 	movt	r2, #1
    9cac:	2121      	movs	r1, #33	; 0x21
    9cae:	f00a ff78 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9cb2:	defe      	udf	#254	; 0xfe
    9cb4:	f24b 5000 	movw	r0, #46336	; 0xb500
    9cb8:	f2c0 0001 	movt	r0, #1
    9cbc:	f24b 52bc 	movw	r2, #46524	; 0xb5bc
    9cc0:	f2c0 0201 	movt	r2, #1
    9cc4:	211c      	movs	r1, #28
    9cc6:	f00a ff6c 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9cca:	defe      	udf	#254	; 0xfe
    9ccc:	f24b 50cc 	movw	r0, #46540	; 0xb5cc
    9cd0:	f2c0 0001 	movt	r0, #1
    9cd4:	223f      	movs	r2, #63	; 0x3f
    9cd6:	9918      	ldr	r1, [sp, #96]	; 0x60
    9cd8:	f00a ff79 	bl	14bce <_ZN4core9panicking18panic_bounds_check17h6547e9bb7dcebe69E>
    9cdc:	defe      	udf	#254	; 0xfe
        let y_low  = unsafe { BUF[HYN_TOUCH_Y_L_POS + HYN_TOUCH_STEP * i] } as u16;
    9cde:	f24b 40c0 	movw	r0, #46272	; 0xb4c0
    9ce2:	f2c0 0001 	movt	r0, #1
    9ce6:	f24b 52dc 	movw	r2, #46556	; 0xb5dc
    9cea:	f2c0 0201 	movt	r2, #1
    9cee:	2121      	movs	r1, #33	; 0x21
    9cf0:	f00a ff57 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9cf4:	defe      	udf	#254	; 0xfe
    9cf6:	f24b 5000 	movw	r0, #46336	; 0xb500
    9cfa:	f2c0 0001 	movt	r0, #1
    9cfe:	f24b 52ec 	movw	r2, #46572	; 0xb5ec
    9d02:	f2c0 0201 	movt	r2, #1
    9d06:	211c      	movs	r1, #28
    9d08:	f00a ff4b 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9d0c:	defe      	udf	#254	; 0xfe
    9d0e:	f24b 50fc 	movw	r0, #46588	; 0xb5fc
    9d12:	f2c0 0001 	movt	r0, #1
    9d16:	223f      	movs	r2, #63	; 0x3f
    9d18:	9916      	ldr	r1, [sp, #88]	; 0x58
    9d1a:	f00a ff58 	bl	14bce <_ZN4core9panicking18panic_bounds_check17h6547e9bb7dcebe69E>
    9d1e:	defe      	udf	#254	; 0xfe
        data.touches[i].y  = (y_high << 8) | y_low;
    9d20:	f24b 600c 	movw	r0, #46604	; 0xb60c
    9d24:	f2c0 0001 	movt	r0, #1
    9d28:	220a      	movs	r2, #10
    9d2a:	9913      	ldr	r1, [sp, #76]	; 0x4c
    9d2c:	f00a ff4f 	bl	14bce <_ZN4core9panicking18panic_bounds_check17h6547e9bb7dcebe69E>
    9d30:	defe      	udf	#254	; 0xfe
            unsafe { BUF[HYN_TOUCH_EVENT_POS + HYN_TOUCH_STEP * i] } >> 6;
    9d32:	f24b 40c0 	movw	r0, #46272	; 0xb4c0
    9d36:	f2c0 0001 	movt	r0, #1
    9d3a:	f24b 621c 	movw	r2, #46620	; 0xb61c
    9d3e:	f2c0 0201 	movt	r2, #1
    9d42:	2121      	movs	r1, #33	; 0x21
    9d44:	f00a ff2d 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9d48:	defe      	udf	#254	; 0xfe
    9d4a:	f24b 5000 	movw	r0, #46336	; 0xb500
    9d4e:	f2c0 0001 	movt	r0, #1
    9d52:	f24b 622c 	movw	r2, #46636	; 0xb62c
    9d56:	f2c0 0201 	movt	r2, #1
    9d5a:	211c      	movs	r1, #28
    9d5c:	f00a ff21 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9d60:	defe      	udf	#254	; 0xfe
    9d62:	f24b 603c 	movw	r0, #46652	; 0xb63c
    9d66:	f2c0 0001 	movt	r0, #1
    9d6a:	223f      	movs	r2, #63	; 0x3f
    9d6c:	9911      	ldr	r1, [sp, #68]	; 0x44
    9d6e:	f00a ff2e 	bl	14bce <_ZN4core9panicking18panic_bounds_check17h6547e9bb7dcebe69E>
    9d72:	defe      	udf	#254	; 0xfe
        data.touches[i].action =
    9d74:	f24b 604c 	movw	r0, #46668	; 0xb64c
    9d78:	f2c0 0001 	movt	r0, #1
    9d7c:	220a      	movs	r2, #10
    9d7e:	990f      	ldr	r1, [sp, #60]	; 0x3c
    9d80:	f00a ff25 	bl	14bce <_ZN4core9panicking18panic_bounds_check17h6547e9bb7dcebe69E>
    9d84:	defe      	udf	#254	; 0xfe
            unsafe { BUF[HYN_TOUCH_ID_POS    + HYN_TOUCH_STEP * i] } >> 4;
    9d86:	f24b 40c0 	movw	r0, #46272	; 0xb4c0
    9d8a:	f2c0 0001 	movt	r0, #1
    9d8e:	f24b 625c 	movw	r2, #46684	; 0xb65c
    9d92:	f2c0 0201 	movt	r2, #1
    9d96:	2121      	movs	r1, #33	; 0x21
    9d98:	f00a ff03 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9d9c:	defe      	udf	#254	; 0xfe
    9d9e:	f24b 5000 	movw	r0, #46336	; 0xb500
    9da2:	f2c0 0001 	movt	r0, #1
    9da6:	f24b 626c 	movw	r2, #46700	; 0xb66c
    9daa:	f2c0 0201 	movt	r2, #1
    9dae:	211c      	movs	r1, #28
    9db0:	f00a fef7 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9db4:	defe      	udf	#254	; 0xfe
    9db6:	f24b 607c 	movw	r0, #46716	; 0xb67c
    9dba:	f2c0 0001 	movt	r0, #1
    9dbe:	223f      	movs	r2, #63	; 0x3f
    9dc0:	990d      	ldr	r1, [sp, #52]	; 0x34
    9dc2:	f00a ff04 	bl	14bce <_ZN4core9panicking18panic_bounds_check17h6547e9bb7dcebe69E>
    9dc6:	defe      	udf	#254	; 0xfe
        data.touches[i].finger =
    9dc8:	f24b 608c 	movw	r0, #46732	; 0xb68c
    9dcc:	f2c0 0001 	movt	r0, #1
    9dd0:	220a      	movs	r2, #10
    9dd2:	990b      	ldr	r1, [sp, #44]	; 0x2c
    9dd4:	f00a fefb 	bl	14bce <_ZN4core9panicking18panic_bounds_check17h6547e9bb7dcebe69E>
    9dd8:	defe      	udf	#254	; 0xfe
            unsafe { BUF[HYN_TOUCH_XY_POS + HYN_TOUCH_STEP * i] };  //  Can't be constant value
    9dda:	f24b 40c0 	movw	r0, #46272	; 0xb4c0
    9dde:	f2c0 0001 	movt	r0, #1
    9de2:	f24b 629c 	movw	r2, #46748	; 0xb69c
    9de6:	f2c0 0201 	movt	r2, #1
    9dea:	2121      	movs	r1, #33	; 0x21
    9dec:	f00a fed9 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9df0:	defe      	udf	#254	; 0xfe
    9df2:	f24b 5000 	movw	r0, #46336	; 0xb500
    9df6:	f2c0 0001 	movt	r0, #1
    9dfa:	f24b 62ac 	movw	r2, #46764	; 0xb6ac
    9dfe:	f2c0 0201 	movt	r2, #1
    9e02:	211c      	movs	r1, #28
    9e04:	f00a fecd 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9e08:	defe      	udf	#254	; 0xfe
    9e0a:	f24b 60bc 	movw	r0, #46780	; 0xb6bc
    9e0e:	f2c0 0001 	movt	r0, #1
    9e12:	223f      	movs	r2, #63	; 0x3f
    9e14:	9909      	ldr	r1, [sp, #36]	; 0x24
    9e16:	f00a feda 	bl	14bce <_ZN4core9panicking18panic_bounds_check17h6547e9bb7dcebe69E>
    9e1a:	defe      	udf	#254	; 0xfe
        data.touches[i].pressure =
    9e1c:	f24b 60cc 	movw	r0, #46796	; 0xb6cc
    9e20:	f2c0 0001 	movt	r0, #1
    9e24:	220a      	movs	r2, #10
    9e26:	9907      	ldr	r1, [sp, #28]
    9e28:	f00a fed1 	bl	14bce <_ZN4core9panicking18panic_bounds_check17h6547e9bb7dcebe69E>
    9e2c:	defe      	udf	#254	; 0xfe
            unsafe { BUF[HYN_TOUCH_MISC   + HYN_TOUCH_STEP * i] } >> 4;
    9e2e:	f24b 40c0 	movw	r0, #46272	; 0xb4c0
    9e32:	f2c0 0001 	movt	r0, #1
    9e36:	f24b 62dc 	movw	r2, #46812	; 0xb6dc
    9e3a:	f2c0 0201 	movt	r2, #1
    9e3e:	2121      	movs	r1, #33	; 0x21
    9e40:	f00a feaf 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9e44:	defe      	udf	#254	; 0xfe
    9e46:	f24b 5000 	movw	r0, #46336	; 0xb500
    9e4a:	f2c0 0001 	movt	r0, #1
    9e4e:	f24b 62ec 	movw	r2, #46828	; 0xb6ec
    9e52:	f2c0 0201 	movt	r2, #1
    9e56:	211c      	movs	r1, #28
    9e58:	f00a fea3 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9e5c:	defe      	udf	#254	; 0xfe
    9e5e:	f24b 60fc 	movw	r0, #46844	; 0xb6fc
    9e62:	f2c0 0001 	movt	r0, #1
    9e66:	223f      	movs	r2, #63	; 0x3f
    9e68:	9905      	ldr	r1, [sp, #20]
    9e6a:	f00a feb0 	bl	14bce <_ZN4core9panicking18panic_bounds_check17h6547e9bb7dcebe69E>
    9e6e:	defe      	udf	#254	; 0xfe
        data.touches[i].area =
    9e70:	f24b 700c 	movw	r0, #46860	; 0xb70c
    9e74:	f2c0 0001 	movt	r0, #1
    9e78:	220a      	movs	r2, #10
    9e7a:	9903      	ldr	r1, [sp, #12]
    9e7c:	f00a fea7 	bl	14bce <_ZN4core9panicking18panic_bounds_check17h6547e9bb7dcebe69E>
    9e80:	defe      	udf	#254	; 0xfe
        if (data.touches[i].action == 0 || data.touches[i].action == 2)  //  If touch is down or contact
    9e82:	f24b 701c 	movw	r0, #46876	; 0xb71c
    9e86:	f2c0 0001 	movt	r0, #1
    9e8a:	220a      	movs	r2, #10
    9e8c:	9902      	ldr	r1, [sp, #8]
    9e8e:	f00a fe9e 	bl	14bce <_ZN4core9panicking18panic_bounds_check17h6547e9bb7dcebe69E>
    9e92:	defe      	udf	#254	; 0xfe
    9e94:	f24b 702c 	movw	r0, #46892	; 0xb72c
    9e98:	f2c0 0001 	movt	r0, #1
    9e9c:	220a      	movs	r2, #10
    9e9e:	9901      	ldr	r1, [sp, #4]
    9ea0:	f00a fe95 	bl	14bce <_ZN4core9panicking18panic_bounds_check17h6547e9bb7dcebe69E>
    9ea4:	defe      	udf	#254	; 0xfe

00009ea6 <_ZN3app12touch_sensor19read_register_range17h84615e3b234f6933E>:

/// Event that will be forwarded to the Event Queue when a touch interrupt is triggered
static mut TOUCH_EVENT: os_event = fill_zero!(os_event);  //  Init all fields to 0 or NULL

/// Read a range of I2C registers from the I2C address `addr` (7-bit address), starting at `start_register` for count `num_registers`. Save into `buffer`.
fn read_register_range(addr: u8, start_register: u8, num_registers: u8, buffer: &mut[u8]) -> MynewtResult<()> {
    9ea6:	b5b0      	push	{r4, r5, r7, lr}
    9ea8:	b092      	sub	sp, #72	; 0x48
    9eaa:	f8dd c058 	ldr.w	ip, [sp, #88]	; 0x58
    9eae:	4696      	mov	lr, r2
    9eb0:	460c      	mov	r4, r1
    9eb2:	4605      	mov	r5, r0
    9eb4:	f88d 0031 	strb.w	r0, [sp, #49]	; 0x31
    9eb8:	f88d 1032 	strb.w	r1, [sp, #50]	; 0x32
    9ebc:	f88d 2033 	strb.w	r2, [sp, #51]	; 0x33
    9ec0:	930d      	str	r3, [sp, #52]	; 0x34
    9ec2:	f8cd c038 	str.w	ip, [sp, #56]	; 0x38
    assert!(buffer.len() >= num_registers as usize, "i2c buf");  //  Buffer too small
    9ec6:	980d      	ldr	r0, [sp, #52]	; 0x34
    9ec8:	990e      	ldr	r1, [sp, #56]	; 0x38
    9eca:	f8cd e02c 	str.w	lr, [sp, #44]	; 0x2c
    9ece:	940a      	str	r4, [sp, #40]	; 0x28
    9ed0:	9509      	str	r5, [sp, #36]	; 0x24
    9ed2:	f000 ff42 	bl	ad5a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h4a5bc0e612dcb4a6E>
    9ed6:	9008      	str	r0, [sp, #32]
    9ed8:	e7ff      	b.n	9eda <_ZN3app12touch_sensor19read_register_range17h84615e3b234f6933E+0x34>
    9eda:	f89d 0033 	ldrb.w	r0, [sp, #51]	; 0x33
    9ede:	9908      	ldr	r1, [sp, #32]
    9ee0:	4281      	cmp	r1, r0
    9ee2:	d30c      	bcc.n	9efe <_ZN3app12touch_sensor19read_register_range17h84615e3b234f6933E+0x58>
    9ee4:	e7ff      	b.n	9ee6 <_ZN3app12touch_sensor19read_register_range17h84615e3b234f6933E+0x40>
    assert!(start_register + num_registers < 128, "i2c addr");   //  Not 7-bit address
    9ee6:	f89d 0032 	ldrb.w	r0, [sp, #50]	; 0x32
    9eea:	f89d 1033 	ldrb.w	r1, [sp, #51]	; 0x33
    9eee:	4408      	add	r0, r1
    9ef0:	b2c1      	uxtb	r1, r0
    9ef2:	4602      	mov	r2, r0
    9ef4:	4281      	cmp	r1, r0
    9ef6:	9207      	str	r2, [sp, #28]
    9ef8:	f040 8096 	bne.w	a028 <_ZN3app12touch_sensor19read_register_range17h84615e3b234f6933E+0x182>
    9efc:	e00b      	b.n	9f16 <_ZN3app12touch_sensor19read_register_range17h84615e3b234f6933E+0x70>
    assert!(buffer.len() >= num_registers as usize, "i2c buf");  //  Buffer too small
    9efe:	f24b 703c 	movw	r0, #46908	; 0xb73c
    9f02:	f2c0 0001 	movt	r0, #1
    9f06:	f24b 7244 	movw	r2, #46916	; 0xb744
    9f0a:	f2c0 0201 	movt	r2, #1
    9f0e:	2107      	movs	r1, #7
    9f10:	f00a fe47 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9f14:	defe      	udf	#254	; 0xfe
    assert!(start_register + num_registers < 128, "i2c addr");   //  Not 7-bit address
    9f16:	9807      	ldr	r0, [sp, #28]
    9f18:	b241      	sxtb	r1, r0
    9f1a:	2900      	cmp	r1, #0
    9f1c:	d416      	bmi.n	9f4c <_ZN3app12touch_sensor19read_register_range17h84615e3b234f6933E+0xa6>
    9f1e:	e7ff      	b.n	9f20 <_ZN3app12touch_sensor19read_register_range17h84615e3b234f6933E+0x7a>
    //    Send the Start Condition (High to Low SDA Transition)...
    //    Followed by I2C Address (7 bits)...
    //    Followed by Write Mode (1 bit, value 0)...
    //    Followed by starting Register Number (8 bits)
    unsafe { 
        I2C_BUFFER[0] = start_register;  //  I2C Packet buffer contains starting Register Number (1 byte)
    9f20:	f89d 0032 	ldrb.w	r0, [sp, #50]	; 0x32
    9f24:	f240 11f0 	movw	r1, #496	; 0x1f0
    9f28:	f2c2 0100 	movt	r1, #8192	; 0x2000
    9f2c:	7008      	strb	r0, [r1, #0]
        I2C_DATA.address = addr;         //  I2C Packet address (7 bits)
    9f2e:	f89d 0031 	ldrb.w	r0, [sp, #49]	; 0x31
    9f32:	f240 12e8 	movw	r2, #488	; 0x1e8
    9f36:	f2c2 0200 	movt	r2, #8192	; 0x2000
    9f3a:	7010      	strb	r0, [r2, #0]
    9f3c:	2001      	movs	r0, #1
        I2C_DATA.len = I2C_BUFFER.len() as u16;     //  I2C Packet data size is 1 byte
    9f3e:	9006      	str	r0, [sp, #24]
    9f40:	4608      	mov	r0, r1
    9f42:	9906      	ldr	r1, [sp, #24]
    9f44:	f000 ff09 	bl	ad5a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h4a5bc0e612dcb4a6E>
    9f48:	9005      	str	r0, [sp, #20]
    9f4a:	e00b      	b.n	9f64 <_ZN3app12touch_sensor19read_register_range17h84615e3b234f6933E+0xbe>
    assert!(start_register + num_registers < 128, "i2c addr");   //  Not 7-bit address
    9f4c:	f24b 4038 	movw	r0, #46136	; 0xb438
    9f50:	f2c0 0001 	movt	r0, #1
    9f54:	f24b 7264 	movw	r2, #46948	; 0xb764
    9f58:	f2c0 0201 	movt	r2, #1
    9f5c:	2108      	movs	r1, #8
    9f5e:	f00a fe20 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    9f62:	defe      	udf	#254	; 0xfe
        I2C_DATA.len = I2C_BUFFER.len() as u16;     //  I2C Packet data size is 1 byte
    9f64:	f240 10e8 	movw	r0, #488	; 0x1e8
    9f68:	f2c2 0000 	movt	r0, #8192	; 0x2000
    9f6c:	9905      	ldr	r1, [sp, #20]
    9f6e:	8041      	strh	r1, [r0, #2]
        I2C_DATA.buffer = I2C_BUFFER.as_mut_ptr();  //  I2C Packet data points to packet buffer
    9f70:	f240 10f0 	movw	r0, #496	; 0x1f0
    9f74:	f2c2 0000 	movt	r0, #8192	; 0x2000
    9f78:	2101      	movs	r1, #1
    9f7a:	f000 fed9 	bl	ad30 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h38df1a24a1544322E>
    9f7e:	9004      	str	r0, [sp, #16]
    9f80:	e7ff      	b.n	9f82 <_ZN3app12touch_sensor19read_register_range17h84615e3b234f6933E+0xdc>
    9f82:	f240 10e8 	movw	r0, #488	; 0x1e8
    9f86:	f2c2 0000 	movt	r0, #8192	; 0x2000
    9f8a:	9904      	ldr	r1, [sp, #16]
    9f8c:	6041      	str	r1, [r0, #4]
    9f8e:	2201      	movs	r2, #1
    9f90:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    9f94:	f04f 0c00 	mov.w	ip, #0
    };
    let _rc1 = unsafe { hal::hal_i2c_master_write(1, &mut I2C_DATA, 1000, 0) };  //  No stop yet, must continue even if we hit an error
    9f98:	9003      	str	r0, [sp, #12]
    9f9a:	4610      	mov	r0, r2
    9f9c:	9903      	ldr	r1, [sp, #12]
    9f9e:	461a      	mov	r2, r3
    9fa0:	4663      	mov	r3, ip
    9fa2:	f00c febb 	bl	16d1c <hal_i2c_master_write>
    9fa6:	9010      	str	r0, [sp, #64]	; 0x40
    9fa8:	e7ff      	b.n	9faa <_ZN3app12touch_sensor19read_register_range17h84615e3b234f6933E+0x104>
    //  Step 3: Prepare to receive the stream of I2C Device Register values...
    //    Send the Start Condition (High to Low SDA Transition)...
    //    Followed by I2C Address (7 bits)...
    //    Followed by Read Mode (1 bit, value 1)
    unsafe { 
        I2C_BUFFER[0] = 0x00;     //  I2C Packet buffer should be empty (provided by caller)
    9faa:	f240 10f0 	movw	r0, #496	; 0x1f0
    9fae:	f2c2 0000 	movt	r0, #8192	; 0x2000
    9fb2:	2100      	movs	r1, #0
    9fb4:	7001      	strb	r1, [r0, #0]
        I2C_DATA.address = addr;  //  I2C Packet address (7 bits)
    9fb6:	f89d 0031 	ldrb.w	r0, [sp, #49]	; 0x31
    9fba:	f240 11e8 	movw	r1, #488	; 0x1e8
    9fbe:	f2c2 0100 	movt	r1, #8192	; 0x2000
    9fc2:	7008      	strb	r0, [r1, #0]
        I2C_DATA.len = num_registers as u16;    //  I2C Packet data size is number of Registers to read
    9fc4:	f89d 0033 	ldrb.w	r0, [sp, #51]	; 0x33
    9fc8:	8048      	strh	r0, [r1, #2]
        I2C_DATA.buffer = buffer.as_mut_ptr();  //  I2C Packet data points to packet buffer
    9fca:	980d      	ldr	r0, [sp, #52]	; 0x34
    9fcc:	990e      	ldr	r1, [sp, #56]	; 0x38
    9fce:	f000 feaf 	bl	ad30 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h38df1a24a1544322E>
    9fd2:	9002      	str	r0, [sp, #8]
    9fd4:	e7ff      	b.n	9fd6 <_ZN3app12touch_sensor19read_register_range17h84615e3b234f6933E+0x130>
    9fd6:	f240 10e8 	movw	r0, #488	; 0x1e8
    9fda:	f2c2 0000 	movt	r0, #8192	; 0x2000
    9fde:	9902      	ldr	r1, [sp, #8]
    9fe0:	6041      	str	r1, [r0, #4]
    9fe2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    9fe6:	2301      	movs	r3, #1
    };
    //  Step 4: Receive the requested number of Register values from I2C Device (1 byte per register)
    //  Step 5: Send the Stop Condition (Low to High SDA Transition)
    let rc2 = unsafe { hal::hal_i2c_master_read(1, &mut I2C_DATA, 1000, 1) };
    9fe8:	9001      	str	r0, [sp, #4]
    9fea:	4618      	mov	r0, r3
    9fec:	9901      	ldr	r1, [sp, #4]
    9fee:	f00c ff29 	bl	16e44 <hal_i2c_master_read>
    9ff2:	9011      	str	r0, [sp, #68]	; 0x44
    9ff4:	e7ff      	b.n	9ff6 <_ZN3app12touch_sensor19read_register_range17h84615e3b234f6933E+0x150>
    if rc2 == hal::HAL_I2C_ERR_ADDR_NACK as i32 {
    9ff6:	9811      	ldr	r0, [sp, #68]	; 0x44
    9ff8:	2804      	cmp	r0, #4
    9ffa:	d005      	beq.n	a008 <_ZN3app12touch_sensor19read_register_range17h84615e3b234f6933E+0x162>
    9ffc:	e7ff      	b.n	9ffe <_ZN3app12touch_sensor19read_register_range17h84615e3b234f6933E+0x158>
    9ffe:	2000      	movs	r0, #0
        ////assert!(false, "i2c fail");  //  I2C read failed
        console::print("i2c fail\n"); ////
        return Ok(());               //  TODO: Return an error
    }
    Ok(())
    a000:	900f      	str	r0, [sp, #60]	; 0x3c
    a002:	2001      	movs	r0, #1
    a004:	900f      	str	r0, [sp, #60]	; 0x3c
}
    a006:	e00c      	b.n	a022 <_ZN3app12touch_sensor19read_register_range17h84615e3b234f6933E+0x17c>
        console::print("i2c fail\n"); ////
    a008:	f24b 7074 	movw	r0, #46964	; 0xb774
    a00c:	f2c0 0001 	movt	r0, #1
    a010:	2109      	movs	r1, #9
    a012:	f001 ff2d 	bl	be70 <_ZN6mynewt3sys7console5print17h2bc06bd0c362550eE>
    a016:	e7ff      	b.n	a018 <_ZN3app12touch_sensor19read_register_range17h84615e3b234f6933E+0x172>
    a018:	2000      	movs	r0, #0
        return Ok(());               //  TODO: Return an error
    a01a:	900f      	str	r0, [sp, #60]	; 0x3c
    a01c:	2001      	movs	r0, #1
    a01e:	900f      	str	r0, [sp, #60]	; 0x3c
    a020:	e7ff      	b.n	a022 <_ZN3app12touch_sensor19read_register_range17h84615e3b234f6933E+0x17c>
}
    a022:	980f      	ldr	r0, [sp, #60]	; 0x3c
    a024:	b012      	add	sp, #72	; 0x48
    a026:	bdb0      	pop	{r4, r5, r7, pc}
    assert!(start_register + num_registers < 128, "i2c addr");   //  Not 7-bit address
    a028:	f24b 5000 	movw	r0, #46336	; 0xb500
    a02c:	f2c0 0001 	movt	r0, #1
    a030:	f24b 7254 	movw	r2, #46932	; 0xb754
    a034:	f2c0 0201 	movt	r2, #1
    a038:	211c      	movs	r1, #28
    a03a:	f00a fdb2 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    a03e:	defe      	udf	#254	; 0xfe

0000a040 <_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$9add_usize17h4dc5739e759482d3E>:
    a040:	b580      	push	{r7, lr}
    a042:	b086      	sub	sp, #24
    a044:	9002      	str	r0, [sp, #8]
    a046:	9103      	str	r1, [sp, #12]
    a048:	9803      	ldr	r0, [sp, #12]
    a04a:	f000 fb6c 	bl	a726 <_ZN53_$LT$T$u20$as$u20$core..convert..TryFrom$LT$U$GT$$GT$8try_from17h220b143d0d620a81E>
    a04e:	9004      	str	r0, [sp, #16]
    a050:	e7ff      	b.n	a052 <_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$9add_usize17h4dc5739e759482d3E+0x12>
    a052:	9804      	ldr	r0, [sp, #16]
    a054:	9005      	str	r0, [sp, #20]
    a056:	9802      	ldr	r0, [sp, #8]
    a058:	6800      	ldr	r0, [r0, #0]
    a05a:	9905      	ldr	r1, [sp, #20]
    a05c:	f000 f8f1 	bl	a242 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17hb4588df65d5763e7E>
    a060:	9001      	str	r0, [sp, #4]
    a062:	9100      	str	r1, [sp, #0]
    a064:	e7ff      	b.n	a066 <_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$9add_usize17h4dc5739e759482d3E+0x26>
    a066:	9801      	ldr	r0, [sp, #4]
    a068:	9900      	ldr	r1, [sp, #0]
    a06a:	b006      	add	sp, #24
    a06c:	bd80      	pop	{r7, pc}

0000a06e <_ZN4core10intrinsics19copy_nonoverlapping17h8025c70b7003a716E>:
    a06e:	b580      	push	{r7, lr}
    a070:	b086      	sub	sp, #24
    a072:	9003      	str	r0, [sp, #12]
    a074:	9104      	str	r1, [sp, #16]
    a076:	9205      	str	r2, [sp, #20]
    a078:	2001      	movs	r0, #1
    a07a:	2800      	cmp	r0, #0
    a07c:	d117      	bne.n	a0ae <_ZN4core10intrinsics19copy_nonoverlapping17h8025c70b7003a716E+0x40>
    a07e:	e7ff      	b.n	a080 <_ZN4core10intrinsics19copy_nonoverlapping17h8025c70b7003a716E+0x12>
    a080:	9803      	ldr	r0, [sp, #12]
    a082:	f000 f855 	bl	a130 <_ZN4core10intrinsics23is_aligned_and_not_null17hf0949c1f3432943dE>
    a086:	9002      	str	r0, [sp, #8]
    a088:	e7ff      	b.n	a08a <_ZN4core10intrinsics19copy_nonoverlapping17h8025c70b7003a716E+0x1c>
    a08a:	9802      	ldr	r0, [sp, #8]
    a08c:	07c1      	lsls	r1, r0, #31
    a08e:	2900      	cmp	r1, #0
    a090:	d001      	beq.n	a096 <_ZN4core10intrinsics19copy_nonoverlapping17h8025c70b7003a716E+0x28>
    a092:	e7ff      	b.n	a094 <_ZN4core10intrinsics19copy_nonoverlapping17h8025c70b7003a716E+0x26>
    a094:	e00b      	b.n	a0ae <_ZN4core10intrinsics19copy_nonoverlapping17h8025c70b7003a716E+0x40>
    a096:	f24b 707d 	movw	r0, #46973	; 0xb77d
    a09a:	f2c0 0001 	movt	r0, #1
    a09e:	f24b 72f4 	movw	r2, #47092	; 0xb7f4
    a0a2:	f2c0 0201 	movt	r2, #1
    a0a6:	212e      	movs	r1, #46	; 0x2e
    a0a8:	f00a fd7b 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    a0ac:	defe      	udf	#254	; 0xfe
    a0ae:	2001      	movs	r0, #1
    a0b0:	2800      	cmp	r0, #0
    a0b2:	d117      	bne.n	a0e4 <_ZN4core10intrinsics19copy_nonoverlapping17h8025c70b7003a716E+0x76>
    a0b4:	e7ff      	b.n	a0b6 <_ZN4core10intrinsics19copy_nonoverlapping17h8025c70b7003a716E+0x48>
    a0b6:	9804      	ldr	r0, [sp, #16]
    a0b8:	f000 f83a 	bl	a130 <_ZN4core10intrinsics23is_aligned_and_not_null17hf0949c1f3432943dE>
    a0bc:	9001      	str	r0, [sp, #4]
    a0be:	e7ff      	b.n	a0c0 <_ZN4core10intrinsics19copy_nonoverlapping17h8025c70b7003a716E+0x52>
    a0c0:	9801      	ldr	r0, [sp, #4]
    a0c2:	07c1      	lsls	r1, r0, #31
    a0c4:	2900      	cmp	r1, #0
    a0c6:	d001      	beq.n	a0cc <_ZN4core10intrinsics19copy_nonoverlapping17h8025c70b7003a716E+0x5e>
    a0c8:	e7ff      	b.n	a0ca <_ZN4core10intrinsics19copy_nonoverlapping17h8025c70b7003a716E+0x5c>
    a0ca:	e00b      	b.n	a0e4 <_ZN4core10intrinsics19copy_nonoverlapping17h8025c70b7003a716E+0x76>
    a0cc:	f64b 0004 	movw	r0, #47108	; 0xb804
    a0d0:	f2c0 0001 	movt	r0, #1
    a0d4:	f24b 72f4 	movw	r2, #47092	; 0xb7f4
    a0d8:	f2c0 0201 	movt	r2, #1
    a0dc:	212c      	movs	r1, #44	; 0x2c
    a0de:	f00a fd60 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    a0e2:	defe      	udf	#254	; 0xfe
    a0e4:	2001      	movs	r0, #1
    a0e6:	2800      	cmp	r0, #0
    a0e8:	d119      	bne.n	a11e <_ZN4core10intrinsics19copy_nonoverlapping17h8025c70b7003a716E+0xb0>
    a0ea:	e7ff      	b.n	a0ec <_ZN4core10intrinsics19copy_nonoverlapping17h8025c70b7003a716E+0x7e>
    a0ec:	9803      	ldr	r0, [sp, #12]
    a0ee:	9904      	ldr	r1, [sp, #16]
    a0f0:	9a05      	ldr	r2, [sp, #20]
    a0f2:	f000 f856 	bl	a1a2 <_ZN4core10intrinsics8overlaps17h86881d11c0e144f5E>
    a0f6:	9000      	str	r0, [sp, #0]
    a0f8:	e7ff      	b.n	a0fa <_ZN4core10intrinsics19copy_nonoverlapping17h8025c70b7003a716E+0x8c>
    a0fa:	9800      	ldr	r0, [sp, #0]
    a0fc:	07c1      	lsls	r1, r0, #31
    a0fe:	2900      	cmp	r1, #0
    a100:	d101      	bne.n	a106 <_ZN4core10intrinsics19copy_nonoverlapping17h8025c70b7003a716E+0x98>
    a102:	e7ff      	b.n	a104 <_ZN4core10intrinsics19copy_nonoverlapping17h8025c70b7003a716E+0x96>
    a104:	e00b      	b.n	a11e <_ZN4core10intrinsics19copy_nonoverlapping17h8025c70b7003a716E+0xb0>
    a106:	f64b 0030 	movw	r0, #47152	; 0xb830
    a10a:	f2c0 0001 	movt	r0, #1
    a10e:	f24b 72f4 	movw	r2, #47092	; 0xb7f4
    a112:	f2c0 0201 	movt	r2, #1
    a116:	2125      	movs	r1, #37	; 0x25
    a118:	f00a fd43 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    a11c:	defe      	udf	#254	; 0xfe
    a11e:	9903      	ldr	r1, [sp, #12]
    a120:	9804      	ldr	r0, [sp, #16]
    a122:	9a05      	ldr	r2, [sp, #20]
    a124:	0092      	lsls	r2, r2, #2
    a126:	f010 fedf 	bl	1aee8 <__aeabi_memcpy>
    a12a:	e7ff      	b.n	a12c <_ZN4core10intrinsics19copy_nonoverlapping17h8025c70b7003a716E+0xbe>
    a12c:	b006      	add	sp, #24
    a12e:	bd80      	pop	{r7, pc}

0000a130 <_ZN4core10intrinsics23is_aligned_and_not_null17hf0949c1f3432943dE>:
    a130:	b580      	push	{r7, lr}
    a132:	b086      	sub	sp, #24
    a134:	9003      	str	r0, [sp, #12]
    a136:	9803      	ldr	r0, [sp, #12]
    a138:	f000 fa44 	bl	a5c4 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h7fad1dca5685abbcE>
    a13c:	9002      	str	r0, [sp, #8]
    a13e:	e012      	b.n	a166 <_ZN4core10intrinsics23is_aligned_and_not_null17hf0949c1f3432943dE+0x36>
    a140:	2001      	movs	r0, #1
    a142:	f88d 0013 	strb.w	r0, [sp, #19]
    a146:	e00a      	b.n	a15e <_ZN4core10intrinsics23is_aligned_and_not_null17hf0949c1f3432943dE+0x2e>
    a148:	2000      	movs	r0, #0
    a14a:	f88d 0013 	strb.w	r0, [sp, #19]
    a14e:	e006      	b.n	a15e <_ZN4core10intrinsics23is_aligned_and_not_null17hf0949c1f3432943dE+0x2e>
    a150:	9803      	ldr	r0, [sp, #12]
    a152:	2104      	movs	r1, #4
    a154:	9105      	str	r1, [sp, #20]
    a156:	9905      	ldr	r1, [sp, #20]
    a158:	9001      	str	r0, [sp, #4]
    a15a:	9100      	str	r1, [sp, #0]
    a15c:	e008      	b.n	a170 <_ZN4core10intrinsics23is_aligned_and_not_null17hf0949c1f3432943dE+0x40>
    a15e:	f89d 0013 	ldrb.w	r0, [sp, #19]
    a162:	b006      	add	sp, #24
    a164:	bd80      	pop	{r7, pc}
    a166:	9802      	ldr	r0, [sp, #8]
    a168:	07c1      	lsls	r1, r0, #31
    a16a:	2900      	cmp	r1, #0
    a16c:	d0f0      	beq.n	a150 <_ZN4core10intrinsics23is_aligned_and_not_null17hf0949c1f3432943dE+0x20>
    a16e:	e7eb      	b.n	a148 <_ZN4core10intrinsics23is_aligned_and_not_null17hf0949c1f3432943dE+0x18>
    a170:	9800      	ldr	r0, [sp, #0]
    a172:	2800      	cmp	r0, #0
    a174:	d009      	beq.n	a18a <_ZN4core10intrinsics23is_aligned_and_not_null17hf0949c1f3432943dE+0x5a>
    a176:	e7ff      	b.n	a178 <_ZN4core10intrinsics23is_aligned_and_not_null17hf0949c1f3432943dE+0x48>
    a178:	9801      	ldr	r0, [sp, #4]
    a17a:	9900      	ldr	r1, [sp, #0]
    a17c:	fbb0 f2f1 	udiv	r2, r0, r1
    a180:	fb02 0211 	mls	r2, r2, r1, r0
    a184:	2a00      	cmp	r2, #0
    a186:	d0db      	beq.n	a140 <_ZN4core10intrinsics23is_aligned_and_not_null17hf0949c1f3432943dE+0x10>
    a188:	e7de      	b.n	a148 <_ZN4core10intrinsics23is_aligned_and_not_null17hf0949c1f3432943dE+0x18>
    a18a:	f64b 00b0 	movw	r0, #47280	; 0xb8b0
    a18e:	f2c0 0001 	movt	r0, #1
    a192:	f64b 02a0 	movw	r2, #47264	; 0xb8a0
    a196:	f2c0 0201 	movt	r2, #1
    a19a:	2139      	movs	r1, #57	; 0x39
    a19c:	f00a fd01 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    a1a0:	defe      	udf	#254	; 0xfe

0000a1a2 <_ZN4core10intrinsics8overlaps17h86881d11c0e144f5E>:
    a1a2:	b580      	push	{r7, lr}
    a1a4:	b08c      	sub	sp, #48	; 0x30
    a1a6:	9004      	str	r0, [sp, #16]
    a1a8:	9105      	str	r1, [sp, #20]
    a1aa:	9206      	str	r2, [sp, #24]
    a1ac:	9804      	ldr	r0, [sp, #16]
    a1ae:	9007      	str	r0, [sp, #28]
    a1b0:	9805      	ldr	r0, [sp, #20]
    a1b2:	9008      	str	r0, [sp, #32]
    a1b4:	2004      	movs	r0, #4
    a1b6:	900b      	str	r0, [sp, #44]	; 0x2c
    a1b8:	980b      	ldr	r0, [sp, #44]	; 0x2c
    a1ba:	9003      	str	r0, [sp, #12]
    a1bc:	e7ff      	b.n	a1be <_ZN4core10intrinsics8overlaps17h86881d11c0e144f5E+0x1c>
    a1be:	9906      	ldr	r1, [sp, #24]
    a1c0:	9803      	ldr	r0, [sp, #12]
    a1c2:	f000 f862 	bl	a28a <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hac7667fcdb859cc9E>
    a1c6:	9002      	str	r0, [sp, #8]
    a1c8:	9101      	str	r1, [sp, #4]
    a1ca:	e7ff      	b.n	a1cc <_ZN4core10intrinsics8overlaps17h86881d11c0e144f5E+0x2a>
    a1cc:	f64b 02ec 	movw	r2, #47340	; 0xb8ec
    a1d0:	f2c0 0201 	movt	r2, #1
    a1d4:	9802      	ldr	r0, [sp, #8]
    a1d6:	9901      	ldr	r1, [sp, #4]
    a1d8:	f000 ffdb 	bl	b192 <_ZN4core6option15Option$LT$T$GT$6unwrap17h2f8655bc50e8a035E>
    a1dc:	9009      	str	r0, [sp, #36]	; 0x24
    a1de:	e7ff      	b.n	a1e0 <_ZN4core10intrinsics8overlaps17h86881d11c0e144f5E+0x3e>
    a1e0:	9807      	ldr	r0, [sp, #28]
    a1e2:	9908      	ldr	r1, [sp, #32]
    a1e4:	4288      	cmp	r0, r1
    a1e6:	d805      	bhi.n	a1f4 <_ZN4core10intrinsics8overlaps17h86881d11c0e144f5E+0x52>
    a1e8:	e7ff      	b.n	a1ea <_ZN4core10intrinsics8overlaps17h86881d11c0e144f5E+0x48>
    a1ea:	9808      	ldr	r0, [sp, #32]
    a1ec:	9907      	ldr	r1, [sp, #28]
    a1ee:	1a40      	subs	r0, r0, r1
    a1f0:	900a      	str	r0, [sp, #40]	; 0x28
    a1f2:	e004      	b.n	a1fe <_ZN4core10intrinsics8overlaps17h86881d11c0e144f5E+0x5c>
    a1f4:	9807      	ldr	r0, [sp, #28]
    a1f6:	9908      	ldr	r1, [sp, #32]
    a1f8:	1a40      	subs	r0, r0, r1
    a1fa:	900a      	str	r0, [sp, #40]	; 0x28
    a1fc:	e7ff      	b.n	a1fe <_ZN4core10intrinsics8overlaps17h86881d11c0e144f5E+0x5c>
    a1fe:	9809      	ldr	r0, [sp, #36]	; 0x24
    a200:	990a      	ldr	r1, [sp, #40]	; 0x28
    a202:	2200      	movs	r2, #0
    a204:	4288      	cmp	r0, r1
    a206:	bf88      	it	hi
    a208:	2201      	movhi	r2, #1
    a20a:	4610      	mov	r0, r2
    a20c:	b00c      	add	sp, #48	; 0x30
    a20e:	bd80      	pop	{r7, pc}

0000a210 <_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h3e96443342d0c3c4E>:
    a210:	b082      	sub	sp, #8
    a212:	9000      	str	r0, [sp, #0]
    a214:	9101      	str	r1, [sp, #4]
    a216:	9800      	ldr	r0, [sp, #0]
    a218:	6800      	ldr	r0, [r0, #0]
    a21a:	9901      	ldr	r1, [sp, #4]
    a21c:	6809      	ldr	r1, [r1, #0]
    a21e:	2200      	movs	r2, #0
    a220:	4288      	cmp	r0, r1
    a222:	bf38      	it	cc
    a224:	2201      	movcc	r2, #1
    a226:	4610      	mov	r0, r2
    a228:	b002      	add	sp, #8
    a22a:	4770      	bx	lr

0000a22c <_ZN4core3mem4swap17hdfe05e6f709ff36fE>:
    a22c:	b580      	push	{r7, lr}
    a22e:	b082      	sub	sp, #8
    a230:	9000      	str	r0, [sp, #0]
    a232:	9101      	str	r1, [sp, #4]
    a234:	9800      	ldr	r0, [sp, #0]
    a236:	9901      	ldr	r1, [sp, #4]
    a238:	f000 f8af 	bl	a39a <_ZN4core3ptr23swap_nonoverlapping_one17hf32c6cc1246ccb2eE>
    a23c:	e7ff      	b.n	a23e <_ZN4core3mem4swap17hdfe05e6f709ff36fE+0x12>
    a23e:	b002      	add	sp, #8
    a240:	bd80      	pop	{r7, pc}

0000a242 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17hb4588df65d5763e7E>:
    a242:	b580      	push	{r7, lr}
    a244:	b088      	sub	sp, #32
    a246:	9002      	str	r0, [sp, #8]
    a248:	9103      	str	r1, [sp, #12]
    a24a:	9802      	ldr	r0, [sp, #8]
    a24c:	9903      	ldr	r1, [sp, #12]
    a24e:	f000 f840 	bl	a2d2 <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17hcef50a31e19b04c5E>
    a252:	9001      	str	r0, [sp, #4]
    a254:	9100      	str	r1, [sp, #0]
    a256:	e7ff      	b.n	a258 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17hb4588df65d5763e7E+0x16>
    a258:	9801      	ldr	r0, [sp, #4]
    a25a:	9006      	str	r0, [sp, #24]
    a25c:	9900      	ldr	r1, [sp, #0]
    a25e:	f001 0201 	and.w	r2, r1, #1
    a262:	f88d 201f 	strb.w	r2, [sp, #31]
    a266:	f89d 201f 	ldrb.w	r2, [sp, #31]
    a26a:	07d2      	lsls	r2, r2, #31
    a26c:	2a00      	cmp	r2, #0
    a26e:	d105      	bne.n	a27c <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17hb4588df65d5763e7E+0x3a>
    a270:	e7ff      	b.n	a272 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17hb4588df65d5763e7E+0x30>
    a272:	9806      	ldr	r0, [sp, #24]
    a274:	9005      	str	r0, [sp, #20]
    a276:	2001      	movs	r0, #1
    a278:	9004      	str	r0, [sp, #16]
    a27a:	e002      	b.n	a282 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17hb4588df65d5763e7E+0x40>
    a27c:	2000      	movs	r0, #0
    a27e:	9004      	str	r0, [sp, #16]
    a280:	e7ff      	b.n	a282 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17hb4588df65d5763e7E+0x40>
    a282:	9804      	ldr	r0, [sp, #16]
    a284:	9905      	ldr	r1, [sp, #20]
    a286:	b008      	add	sp, #32
    a288:	bd80      	pop	{r7, pc}

0000a28a <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hac7667fcdb859cc9E>:
    a28a:	b580      	push	{r7, lr}
    a28c:	b088      	sub	sp, #32
    a28e:	9002      	str	r0, [sp, #8]
    a290:	9103      	str	r1, [sp, #12]
    a292:	9802      	ldr	r0, [sp, #8]
    a294:	9903      	ldr	r1, [sp, #12]
    a296:	f000 f841 	bl	a31c <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h46163c3ee8e044f0E>
    a29a:	9001      	str	r0, [sp, #4]
    a29c:	9100      	str	r1, [sp, #0]
    a29e:	e7ff      	b.n	a2a0 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hac7667fcdb859cc9E+0x16>
    a2a0:	9801      	ldr	r0, [sp, #4]
    a2a2:	9006      	str	r0, [sp, #24]
    a2a4:	9900      	ldr	r1, [sp, #0]
    a2a6:	f001 0201 	and.w	r2, r1, #1
    a2aa:	f88d 201f 	strb.w	r2, [sp, #31]
    a2ae:	f89d 201f 	ldrb.w	r2, [sp, #31]
    a2b2:	07d2      	lsls	r2, r2, #31
    a2b4:	2a00      	cmp	r2, #0
    a2b6:	d105      	bne.n	a2c4 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hac7667fcdb859cc9E+0x3a>
    a2b8:	e7ff      	b.n	a2ba <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hac7667fcdb859cc9E+0x30>
    a2ba:	9806      	ldr	r0, [sp, #24]
    a2bc:	9005      	str	r0, [sp, #20]
    a2be:	2001      	movs	r0, #1
    a2c0:	9004      	str	r0, [sp, #16]
    a2c2:	e002      	b.n	a2ca <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hac7667fcdb859cc9E+0x40>
    a2c4:	2000      	movs	r0, #0
    a2c6:	9004      	str	r0, [sp, #16]
    a2c8:	e7ff      	b.n	a2ca <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hac7667fcdb859cc9E+0x40>
    a2ca:	9804      	ldr	r0, [sp, #16]
    a2cc:	9905      	ldr	r1, [sp, #20]
    a2ce:	b008      	add	sp, #32
    a2d0:	bd80      	pop	{r7, pc}

0000a2d2 <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17hcef50a31e19b04c5E>:
    a2d2:	b08a      	sub	sp, #40	; 0x28
    a2d4:	9002      	str	r0, [sp, #8]
    a2d6:	9103      	str	r1, [sp, #12]
    a2d8:	9802      	ldr	r0, [sp, #8]
    a2da:	9903      	ldr	r1, [sp, #12]
    a2dc:	1840      	adds	r0, r0, r1
    a2de:	f04f 0100 	mov.w	r1, #0
    a2e2:	f141 0100 	adc.w	r1, r1, #0
    a2e6:	9008      	str	r0, [sp, #32]
    a2e8:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
    a2ec:	9808      	ldr	r0, [sp, #32]
    a2ee:	f89d 1024 	ldrb.w	r1, [sp, #36]	; 0x24
    a2f2:	9001      	str	r0, [sp, #4]
    a2f4:	9100      	str	r1, [sp, #0]
    a2f6:	e7ff      	b.n	a2f8 <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17hcef50a31e19b04c5E+0x26>
    a2f8:	9801      	ldr	r0, [sp, #4]
    a2fa:	9006      	str	r0, [sp, #24]
    a2fc:	9900      	ldr	r1, [sp, #0]
    a2fe:	f001 0201 	and.w	r2, r1, #1
    a302:	f88d 201f 	strb.w	r2, [sp, #31]
    a306:	9a06      	ldr	r2, [sp, #24]
    a308:	f89d 301f 	ldrb.w	r3, [sp, #31]
    a30c:	9204      	str	r2, [sp, #16]
    a30e:	f88d 3014 	strb.w	r3, [sp, #20]
    a312:	9804      	ldr	r0, [sp, #16]
    a314:	f89d 1014 	ldrb.w	r1, [sp, #20]
    a318:	b00a      	add	sp, #40	; 0x28
    a31a:	4770      	bx	lr

0000a31c <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h46163c3ee8e044f0E>:
    a31c:	b08a      	sub	sp, #40	; 0x28
    a31e:	9002      	str	r0, [sp, #8]
    a320:	9103      	str	r1, [sp, #12]
    a322:	9802      	ldr	r0, [sp, #8]
    a324:	9903      	ldr	r1, [sp, #12]
    a326:	fba0 0101 	umull	r0, r1, r0, r1
    a32a:	2900      	cmp	r1, #0
    a32c:	bf18      	it	ne
    a32e:	2101      	movne	r1, #1
    a330:	9008      	str	r0, [sp, #32]
    a332:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
    a336:	9808      	ldr	r0, [sp, #32]
    a338:	f89d 1024 	ldrb.w	r1, [sp, #36]	; 0x24
    a33c:	9001      	str	r0, [sp, #4]
    a33e:	9100      	str	r1, [sp, #0]
    a340:	e7ff      	b.n	a342 <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h46163c3ee8e044f0E+0x26>
    a342:	9801      	ldr	r0, [sp, #4]
    a344:	9006      	str	r0, [sp, #24]
    a346:	9900      	ldr	r1, [sp, #0]
    a348:	f001 0201 	and.w	r2, r1, #1
    a34c:	f88d 201f 	strb.w	r2, [sp, #31]
    a350:	9a06      	ldr	r2, [sp, #24]
    a352:	f89d 301f 	ldrb.w	r3, [sp, #31]
    a356:	9204      	str	r2, [sp, #16]
    a358:	f88d 3014 	strb.w	r3, [sp, #20]
    a35c:	9804      	ldr	r0, [sp, #16]
    a35e:	f89d 1014 	ldrb.w	r1, [sp, #20]
    a362:	b00a      	add	sp, #40	; 0x28
    a364:	4770      	bx	lr

0000a366 <_ZN4core3ptr19swap_nonoverlapping17habe759a44b1cb244E>:
    a366:	b580      	push	{r7, lr}
    a368:	b088      	sub	sp, #32
    a36a:	9001      	str	r0, [sp, #4]
    a36c:	9102      	str	r1, [sp, #8]
    a36e:	9203      	str	r2, [sp, #12]
    a370:	9801      	ldr	r0, [sp, #4]
    a372:	9004      	str	r0, [sp, #16]
    a374:	9802      	ldr	r0, [sp, #8]
    a376:	9005      	str	r0, [sp, #20]
    a378:	2004      	movs	r0, #4
    a37a:	9007      	str	r0, [sp, #28]
    a37c:	9807      	ldr	r0, [sp, #28]
    a37e:	9000      	str	r0, [sp, #0]
    a380:	e7ff      	b.n	a382 <_ZN4core3ptr19swap_nonoverlapping17habe759a44b1cb244E+0x1c>
    a382:	9803      	ldr	r0, [sp, #12]
    a384:	9900      	ldr	r1, [sp, #0]
    a386:	4348      	muls	r0, r1
    a388:	9006      	str	r0, [sp, #24]
    a38a:	9804      	ldr	r0, [sp, #16]
    a38c:	9905      	ldr	r1, [sp, #20]
    a38e:	9a06      	ldr	r2, [sp, #24]
    a390:	f000 f82a 	bl	a3e8 <_ZN4core3ptr25swap_nonoverlapping_bytes17hb65fda32277fae74E>
    a394:	e7ff      	b.n	a396 <_ZN4core3ptr19swap_nonoverlapping17habe759a44b1cb244E+0x30>
    a396:	b008      	add	sp, #32
    a398:	bd80      	pop	{r7, pc}

0000a39a <_ZN4core3ptr23swap_nonoverlapping_one17hf32c6cc1246ccb2eE>:
    a39a:	b580      	push	{r7, lr}
    a39c:	b086      	sub	sp, #24
    a39e:	9002      	str	r0, [sp, #8]
    a3a0:	9103      	str	r1, [sp, #12]
    a3a2:	2004      	movs	r0, #4
    a3a4:	9005      	str	r0, [sp, #20]
    a3a6:	9805      	ldr	r0, [sp, #20]
    a3a8:	9001      	str	r0, [sp, #4]
    a3aa:	e7ff      	b.n	a3ac <_ZN4core3ptr23swap_nonoverlapping_one17hf32c6cc1246ccb2eE+0x12>
    a3ac:	9801      	ldr	r0, [sp, #4]
    a3ae:	2820      	cmp	r0, #32
    a3b0:	d306      	bcc.n	a3c0 <_ZN4core3ptr23swap_nonoverlapping_one17hf32c6cc1246ccb2eE+0x26>
    a3b2:	e7ff      	b.n	a3b4 <_ZN4core3ptr23swap_nonoverlapping_one17hf32c6cc1246ccb2eE+0x1a>
    a3b4:	9802      	ldr	r0, [sp, #8]
    a3b6:	9903      	ldr	r1, [sp, #12]
    a3b8:	2201      	movs	r2, #1
    a3ba:	f7ff ffd4 	bl	a366 <_ZN4core3ptr19swap_nonoverlapping17habe759a44b1cb244E>
    a3be:	e010      	b.n	a3e2 <_ZN4core3ptr23swap_nonoverlapping_one17hf32c6cc1246ccb2eE+0x48>
    a3c0:	9802      	ldr	r0, [sp, #8]
    a3c2:	f000 f88d 	bl	a4e0 <_ZN4core3ptr4read17h55db77819713da8aE>
    a3c6:	9004      	str	r0, [sp, #16]
    a3c8:	e7ff      	b.n	a3ca <_ZN4core3ptr23swap_nonoverlapping_one17hf32c6cc1246ccb2eE+0x30>
    a3ca:	9803      	ldr	r0, [sp, #12]
    a3cc:	9902      	ldr	r1, [sp, #8]
    a3ce:	2201      	movs	r2, #1
    a3d0:	f7ff fe4d 	bl	a06e <_ZN4core10intrinsics19copy_nonoverlapping17h8025c70b7003a716E>
    a3d4:	e7ff      	b.n	a3d6 <_ZN4core3ptr23swap_nonoverlapping_one17hf32c6cc1246ccb2eE+0x3c>
    a3d6:	9803      	ldr	r0, [sp, #12]
    a3d8:	9904      	ldr	r1, [sp, #16]
    a3da:	f000 f8a0 	bl	a51e <_ZN4core3ptr5write17hadd2801e9b1590e3E>
    a3de:	e7ff      	b.n	a3e0 <_ZN4core3ptr23swap_nonoverlapping_one17hf32c6cc1246ccb2eE+0x46>
    a3e0:	e000      	b.n	a3e4 <_ZN4core3ptr23swap_nonoverlapping_one17hf32c6cc1246ccb2eE+0x4a>
    a3e2:	e7ff      	b.n	a3e4 <_ZN4core3ptr23swap_nonoverlapping_one17hf32c6cc1246ccb2eE+0x4a>
    a3e4:	b006      	add	sp, #24
    a3e6:	bd80      	pop	{r7, pc}

0000a3e8 <_ZN4core3ptr25swap_nonoverlapping_bytes17hb65fda32277fae74E>:
    a3e8:	b5d0      	push	{r4, r6, r7, lr}
    a3ea:	af02      	add	r7, sp, #8
    a3ec:	b0ac      	sub	sp, #176	; 0xb0
    a3ee:	466c      	mov	r4, sp
    a3f0:	f36f 0404 	bfc	r4, #0, #5
    a3f4:	46a5      	mov	sp, r4
    a3f6:	9003      	str	r0, [sp, #12]
    a3f8:	9104      	str	r1, [sp, #16]
    a3fa:	9205      	str	r2, [sp, #20]
    a3fc:	2020      	movs	r0, #32
    a3fe:	9027      	str	r0, [sp, #156]	; 0x9c
    a400:	9827      	ldr	r0, [sp, #156]	; 0x9c
    a402:	9006      	str	r0, [sp, #24]
    a404:	e7ff      	b.n	a406 <_ZN4core3ptr25swap_nonoverlapping_bytes17hb65fda32277fae74E+0x1e>
    a406:	2000      	movs	r0, #0
    a408:	9007      	str	r0, [sp, #28]
    a40a:	e7ff      	b.n	a40c <_ZN4core3ptr25swap_nonoverlapping_bytes17hb65fda32277fae74E+0x24>
    a40c:	9807      	ldr	r0, [sp, #28]
    a40e:	9906      	ldr	r1, [sp, #24]
    a410:	4408      	add	r0, r1
    a412:	9905      	ldr	r1, [sp, #20]
    a414:	4288      	cmp	r0, r1
    a416:	d905      	bls.n	a424 <_ZN4core3ptr25swap_nonoverlapping_bytes17hb65fda32277fae74E+0x3c>
    a418:	e7ff      	b.n	a41a <_ZN4core3ptr25swap_nonoverlapping_bytes17hb65fda32277fae74E+0x32>
    a41a:	9807      	ldr	r0, [sp, #28]
    a41c:	9905      	ldr	r1, [sp, #20]
    a41e:	4288      	cmp	r0, r1
    a420:	d32d      	bcc.n	a47e <_ZN4core3ptr25swap_nonoverlapping_bytes17hb65fda32277fae74E+0x96>
    a422:	e059      	b.n	a4d8 <_ZN4core3ptr25swap_nonoverlapping_bytes17hb65fda32277fae74E+0xf0>
    a424:	e7ff      	b.n	a426 <_ZN4core3ptr25swap_nonoverlapping_bytes17hb65fda32277fae74E+0x3e>
    a426:	a808      	add	r0, sp, #32
    a428:	9028      	str	r0, [sp, #160]	; 0xa0
    a42a:	9828      	ldr	r0, [sp, #160]	; 0xa0
    a42c:	9029      	str	r0, [sp, #164]	; 0xa4
    a42e:	9829      	ldr	r0, [sp, #164]	; 0xa4
    a430:	9002      	str	r0, [sp, #8]
    a432:	e7ff      	b.n	a434 <_ZN4core3ptr25swap_nonoverlapping_bytes17hb65fda32277fae74E+0x4c>
    a434:	9802      	ldr	r0, [sp, #8]
    a436:	9017      	str	r0, [sp, #92]	; 0x5c
    a438:	9803      	ldr	r0, [sp, #12]
    a43a:	9907      	ldr	r1, [sp, #28]
    a43c:	f000 f877 	bl	a52e <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hd0429ebf735219dbE>
    a440:	9018      	str	r0, [sp, #96]	; 0x60
    a442:	e7ff      	b.n	a444 <_ZN4core3ptr25swap_nonoverlapping_bytes17hb65fda32277fae74E+0x5c>
    a444:	9804      	ldr	r0, [sp, #16]
    a446:	9907      	ldr	r1, [sp, #28]
    a448:	f000 f871 	bl	a52e <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hd0429ebf735219dbE>
    a44c:	9019      	str	r0, [sp, #100]	; 0x64
    a44e:	e7ff      	b.n	a450 <_ZN4core3ptr25swap_nonoverlapping_bytes17hb65fda32277fae74E+0x68>
    a450:	9818      	ldr	r0, [sp, #96]	; 0x60
    a452:	9917      	ldr	r1, [sp, #92]	; 0x5c
    a454:	9a06      	ldr	r2, [sp, #24]
    a456:	f000 fcde 	bl	ae16 <_ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E>
    a45a:	e7ff      	b.n	a45c <_ZN4core3ptr25swap_nonoverlapping_bytes17hb65fda32277fae74E+0x74>
    a45c:	9819      	ldr	r0, [sp, #100]	; 0x64
    a45e:	9918      	ldr	r1, [sp, #96]	; 0x60
    a460:	9a06      	ldr	r2, [sp, #24]
    a462:	f000 fcd8 	bl	ae16 <_ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E>
    a466:	e7ff      	b.n	a468 <_ZN4core3ptr25swap_nonoverlapping_bytes17hb65fda32277fae74E+0x80>
    a468:	9817      	ldr	r0, [sp, #92]	; 0x5c
    a46a:	9919      	ldr	r1, [sp, #100]	; 0x64
    a46c:	9a06      	ldr	r2, [sp, #24]
    a46e:	f000 fcd2 	bl	ae16 <_ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E>
    a472:	e7ff      	b.n	a474 <_ZN4core3ptr25swap_nonoverlapping_bytes17hb65fda32277fae74E+0x8c>
    a474:	9806      	ldr	r0, [sp, #24]
    a476:	9907      	ldr	r1, [sp, #28]
    a478:	4408      	add	r0, r1
    a47a:	9007      	str	r0, [sp, #28]
    a47c:	e7c6      	b.n	a40c <_ZN4core3ptr25swap_nonoverlapping_bytes17hb65fda32277fae74E+0x24>
    a47e:	e7ff      	b.n	a480 <_ZN4core3ptr25swap_nonoverlapping_bytes17hb65fda32277fae74E+0x98>
    a480:	9805      	ldr	r0, [sp, #20]
    a482:	9907      	ldr	r1, [sp, #28]
    a484:	1a40      	subs	r0, r0, r1
    a486:	9023      	str	r0, [sp, #140]	; 0x8c
    a488:	a81a      	add	r0, sp, #104	; 0x68
    a48a:	902a      	str	r0, [sp, #168]	; 0xa8
    a48c:	982a      	ldr	r0, [sp, #168]	; 0xa8
    a48e:	902b      	str	r0, [sp, #172]	; 0xac
    a490:	982b      	ldr	r0, [sp, #172]	; 0xac
    a492:	9001      	str	r0, [sp, #4]
    a494:	e7ff      	b.n	a496 <_ZN4core3ptr25swap_nonoverlapping_bytes17hb65fda32277fae74E+0xae>
    a496:	9801      	ldr	r0, [sp, #4]
    a498:	9024      	str	r0, [sp, #144]	; 0x90
    a49a:	9803      	ldr	r0, [sp, #12]
    a49c:	9907      	ldr	r1, [sp, #28]
    a49e:	f000 f846 	bl	a52e <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hd0429ebf735219dbE>
    a4a2:	9025      	str	r0, [sp, #148]	; 0x94
    a4a4:	e7ff      	b.n	a4a6 <_ZN4core3ptr25swap_nonoverlapping_bytes17hb65fda32277fae74E+0xbe>
    a4a6:	9804      	ldr	r0, [sp, #16]
    a4a8:	9907      	ldr	r1, [sp, #28]
    a4aa:	f000 f840 	bl	a52e <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hd0429ebf735219dbE>
    a4ae:	9026      	str	r0, [sp, #152]	; 0x98
    a4b0:	e7ff      	b.n	a4b2 <_ZN4core3ptr25swap_nonoverlapping_bytes17hb65fda32277fae74E+0xca>
    a4b2:	9825      	ldr	r0, [sp, #148]	; 0x94
    a4b4:	9924      	ldr	r1, [sp, #144]	; 0x90
    a4b6:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    a4b8:	f000 fcad 	bl	ae16 <_ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E>
    a4bc:	e7ff      	b.n	a4be <_ZN4core3ptr25swap_nonoverlapping_bytes17hb65fda32277fae74E+0xd6>
    a4be:	9826      	ldr	r0, [sp, #152]	; 0x98
    a4c0:	9925      	ldr	r1, [sp, #148]	; 0x94
    a4c2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    a4c4:	f000 fca7 	bl	ae16 <_ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E>
    a4c8:	e7ff      	b.n	a4ca <_ZN4core3ptr25swap_nonoverlapping_bytes17hb65fda32277fae74E+0xe2>
    a4ca:	9824      	ldr	r0, [sp, #144]	; 0x90
    a4cc:	9926      	ldr	r1, [sp, #152]	; 0x98
    a4ce:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    a4d0:	f000 fca1 	bl	ae16 <_ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E>
    a4d4:	e7ff      	b.n	a4d6 <_ZN4core3ptr25swap_nonoverlapping_bytes17hb65fda32277fae74E+0xee>
    a4d6:	e7ff      	b.n	a4d8 <_ZN4core3ptr25swap_nonoverlapping_bytes17hb65fda32277fae74E+0xf0>
    a4d8:	f1a7 0408 	sub.w	r4, r7, #8
    a4dc:	46a5      	mov	sp, r4
    a4de:	bdd0      	pop	{r4, r6, r7, pc}

0000a4e0 <_ZN4core3ptr4read17h55db77819713da8aE>:
    a4e0:	b580      	push	{r7, lr}
    a4e2:	b08a      	sub	sp, #40	; 0x28
    a4e4:	9003      	str	r0, [sp, #12]
    a4e6:	9805      	ldr	r0, [sp, #20]
    a4e8:	9004      	str	r0, [sp, #16]
    a4ea:	e7ff      	b.n	a4ec <_ZN4core3ptr4read17h55db77819713da8aE+0xc>
    a4ec:	9803      	ldr	r0, [sp, #12]
    a4ee:	a904      	add	r1, sp, #16
    a4f0:	9108      	str	r1, [sp, #32]
    a4f2:	9908      	ldr	r1, [sp, #32]
    a4f4:	9109      	str	r1, [sp, #36]	; 0x24
    a4f6:	9909      	ldr	r1, [sp, #36]	; 0x24
    a4f8:	9002      	str	r0, [sp, #8]
    a4fa:	9101      	str	r1, [sp, #4]
    a4fc:	e7ff      	b.n	a4fe <_ZN4core3ptr4read17h55db77819713da8aE+0x1e>
    a4fe:	2201      	movs	r2, #1
    a500:	9802      	ldr	r0, [sp, #8]
    a502:	9901      	ldr	r1, [sp, #4]
    a504:	f7ff fdb3 	bl	a06e <_ZN4core10intrinsics19copy_nonoverlapping17h8025c70b7003a716E>
    a508:	e7ff      	b.n	a50a <_ZN4core3ptr4read17h55db77819713da8aE+0x2a>
    a50a:	9804      	ldr	r0, [sp, #16]
    a50c:	9006      	str	r0, [sp, #24]
    a50e:	9806      	ldr	r0, [sp, #24]
    a510:	9007      	str	r0, [sp, #28]
    a512:	9807      	ldr	r0, [sp, #28]
    a514:	9000      	str	r0, [sp, #0]
    a516:	e7ff      	b.n	a518 <_ZN4core3ptr4read17h55db77819713da8aE+0x38>
    a518:	9800      	ldr	r0, [sp, #0]
    a51a:	b00a      	add	sp, #40	; 0x28
    a51c:	bd80      	pop	{r7, pc}

0000a51e <_ZN4core3ptr5write17hadd2801e9b1590e3E>:
    a51e:	b082      	sub	sp, #8
    a520:	9000      	str	r0, [sp, #0]
    a522:	9101      	str	r1, [sp, #4]
    a524:	9800      	ldr	r0, [sp, #0]
    a526:	9901      	ldr	r1, [sp, #4]
    a528:	6001      	str	r1, [r0, #0]
    a52a:	b002      	add	sp, #8
    a52c:	4770      	bx	lr

0000a52e <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hd0429ebf735219dbE>:
    a52e:	b580      	push	{r7, lr}
    a530:	b084      	sub	sp, #16
    a532:	9002      	str	r0, [sp, #8]
    a534:	9103      	str	r1, [sp, #12]
    a536:	9802      	ldr	r0, [sp, #8]
    a538:	9903      	ldr	r1, [sp, #12]
    a53a:	f000 f805 	bl	a548 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h835be22f5bcdca9fE>
    a53e:	9001      	str	r0, [sp, #4]
    a540:	e7ff      	b.n	a542 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hd0429ebf735219dbE+0x14>
    a542:	9801      	ldr	r0, [sp, #4]
    a544:	b004      	add	sp, #16
    a546:	bd80      	pop	{r7, pc}

0000a548 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h835be22f5bcdca9fE>:
    a548:	b084      	sub	sp, #16
    a54a:	9001      	str	r0, [sp, #4]
    a54c:	9102      	str	r1, [sp, #8]
    a54e:	9801      	ldr	r0, [sp, #4]
    a550:	9902      	ldr	r1, [sp, #8]
    a552:	4408      	add	r0, r1
    a554:	9003      	str	r0, [sp, #12]
    a556:	9803      	ldr	r0, [sp, #12]
    a558:	9000      	str	r0, [sp, #0]
    a55a:	e7ff      	b.n	a55c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h835be22f5bcdca9fE+0x14>
    a55c:	9800      	ldr	r0, [sp, #0]
    a55e:	b004      	add	sp, #16
    a560:	4770      	bx	lr

0000a562 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h89aecf94404c8457E>:
    a562:	b082      	sub	sp, #8
    a564:	9001      	str	r0, [sp, #4]
    a566:	9801      	ldr	r0, [sp, #4]
    a568:	9000      	str	r0, [sp, #0]
    a56a:	e7ff      	b.n	a56c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h89aecf94404c8457E+0xa>
    a56c:	9800      	ldr	r0, [sp, #0]
    a56e:	fab0 f180 	clz	r1, r0
    a572:	0948      	lsrs	r0, r1, #5
    a574:	b002      	add	sp, #8
    a576:	4770      	bx	lr

0000a578 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17ha9d377e74022418eE>:
    a578:	b082      	sub	sp, #8
    a57a:	9000      	str	r0, [sp, #0]
    a57c:	9800      	ldr	r0, [sp, #0]
    a57e:	9001      	str	r0, [sp, #4]
    a580:	9801      	ldr	r0, [sp, #4]
    a582:	b002      	add	sp, #8
    a584:	4770      	bx	lr

0000a586 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7de4bdc3a85a3480E>:
    a586:	b081      	sub	sp, #4
    a588:	9000      	str	r0, [sp, #0]
    a58a:	9800      	ldr	r0, [sp, #0]
    a58c:	b001      	add	sp, #4
    a58e:	4770      	bx	lr

0000a590 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h5512600c5ffe3ca1E>:
    a590:	b580      	push	{r7, lr}
    a592:	b084      	sub	sp, #16
    a594:	9002      	str	r0, [sp, #8]
    a596:	9103      	str	r1, [sp, #12]
    a598:	9802      	ldr	r0, [sp, #8]
    a59a:	9903      	ldr	r1, [sp, #12]
    a59c:	f000 f805 	bl	a5aa <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17hbbdc43338149cfd8E>
    a5a0:	9001      	str	r0, [sp, #4]
    a5a2:	e7ff      	b.n	a5a4 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h5512600c5ffe3ca1E+0x14>
    a5a4:	9801      	ldr	r0, [sp, #4]
    a5a6:	b004      	add	sp, #16
    a5a8:	bd80      	pop	{r7, pc}

0000a5aa <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17hbbdc43338149cfd8E>:
    a5aa:	b084      	sub	sp, #16
    a5ac:	9001      	str	r0, [sp, #4]
    a5ae:	9102      	str	r1, [sp, #8]
    a5b0:	9801      	ldr	r0, [sp, #4]
    a5b2:	9902      	ldr	r1, [sp, #8]
    a5b4:	4408      	add	r0, r1
    a5b6:	9003      	str	r0, [sp, #12]
    a5b8:	9803      	ldr	r0, [sp, #12]
    a5ba:	9000      	str	r0, [sp, #0]
    a5bc:	e7ff      	b.n	a5be <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17hbbdc43338149cfd8E+0x14>
    a5be:	9800      	ldr	r0, [sp, #0]
    a5c0:	b004      	add	sp, #16
    a5c2:	4770      	bx	lr

0000a5c4 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h7fad1dca5685abbcE>:
    a5c4:	b082      	sub	sp, #8
    a5c6:	9001      	str	r0, [sp, #4]
    a5c8:	9801      	ldr	r0, [sp, #4]
    a5ca:	9000      	str	r0, [sp, #0]
    a5cc:	e7ff      	b.n	a5ce <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h7fad1dca5685abbcE+0xa>
    a5ce:	9800      	ldr	r0, [sp, #0]
    a5d0:	fab0 f180 	clz	r1, r0
    a5d4:	0948      	lsrs	r0, r1, #5
    a5d6:	b002      	add	sp, #8
    a5d8:	4770      	bx	lr

0000a5da <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2f0c22a5b5fe2588E>:
    a5da:	b580      	push	{r7, lr}
    a5dc:	b088      	sub	sp, #32
    a5de:	9001      	str	r0, [sp, #4]
    a5e0:	2000      	movs	r0, #0
    a5e2:	f88d 001f 	strb.w	r0, [sp, #31]
    a5e6:	9801      	ldr	r0, [sp, #4]
    a5e8:	1d01      	adds	r1, r0, #4
    a5ea:	f7ff fe11 	bl	a210 <_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h3e96443342d0c3c4E>
    a5ee:	9000      	str	r0, [sp, #0]
    a5f0:	e7ff      	b.n	a5f2 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2f0c22a5b5fe2588E+0x18>
    a5f2:	9800      	ldr	r0, [sp, #0]
    a5f4:	07c1      	lsls	r1, r0, #31
    a5f6:	2900      	cmp	r1, #0
    a5f8:	d103      	bne.n	a602 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2f0c22a5b5fe2588E+0x28>
    a5fa:	e7ff      	b.n	a5fc <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2f0c22a5b5fe2588E+0x22>
    a5fc:	2000      	movs	r0, #0
    a5fe:	9002      	str	r0, [sp, #8]
    a600:	e01e      	b.n	a640 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2f0c22a5b5fe2588E+0x66>
    a602:	9801      	ldr	r0, [sp, #4]
    a604:	2101      	movs	r1, #1
    a606:	f88d 101f 	strb.w	r1, [sp, #31]
    a60a:	f7ff fd19 	bl	a040 <_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$9add_usize17h4dc5739e759482d3E>
    a60e:	9105      	str	r1, [sp, #20]
    a610:	9004      	str	r0, [sp, #16]
    a612:	e7ff      	b.n	a614 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2f0c22a5b5fe2588E+0x3a>
    a614:	9804      	ldr	r0, [sp, #16]
    a616:	2801      	cmp	r0, #1
    a618:	d003      	beq.n	a622 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2f0c22a5b5fe2588E+0x48>
    a61a:	e7ff      	b.n	a61c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2f0c22a5b5fe2588E+0x42>
    a61c:	2000      	movs	r0, #0
    a61e:	9002      	str	r0, [sp, #8]
    a620:	e021      	b.n	a666 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2f0c22a5b5fe2588E+0x8c>
    a622:	2000      	movs	r0, #0
    a624:	f88d 001f 	strb.w	r0, [sp, #31]
    a628:	9805      	ldr	r0, [sp, #20]
    a62a:	9006      	str	r0, [sp, #24]
    a62c:	9901      	ldr	r1, [sp, #4]
    a62e:	a806      	add	r0, sp, #24
    a630:	f7ff fdfc 	bl	a22c <_ZN4core3mem4swap17hdfe05e6f709ff36fE>
    a634:	e7ff      	b.n	a636 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2f0c22a5b5fe2588E+0x5c>
    a636:	9806      	ldr	r0, [sp, #24]
    a638:	9003      	str	r0, [sp, #12]
    a63a:	2001      	movs	r0, #1
    a63c:	9002      	str	r0, [sp, #8]
    a63e:	e012      	b.n	a666 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2f0c22a5b5fe2588E+0x8c>
    a640:	9802      	ldr	r0, [sp, #8]
    a642:	9903      	ldr	r1, [sp, #12]
    a644:	b008      	add	sp, #32
    a646:	bd80      	pop	{r7, pc}
    a648:	2000      	movs	r0, #0
    a64a:	f88d 001f 	strb.w	r0, [sp, #31]
    a64e:	e7f7      	b.n	a640 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2f0c22a5b5fe2588E+0x66>
    a650:	f89d 001f 	ldrb.w	r0, [sp, #31]
    a654:	07c0      	lsls	r0, r0, #31
    a656:	2800      	cmp	r0, #0
    a658:	d0f6      	beq.n	a648 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2f0c22a5b5fe2588E+0x6e>
    a65a:	e7ff      	b.n	a65c <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2f0c22a5b5fe2588E+0x82>
    a65c:	2000      	movs	r0, #0
    a65e:	f88d 001f 	strb.w	r0, [sp, #31]
    a662:	e7f1      	b.n	a648 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2f0c22a5b5fe2588E+0x6e>
    a664:	e7f0      	b.n	a648 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2f0c22a5b5fe2588E+0x6e>
    a666:	9804      	ldr	r0, [sp, #16]
    a668:	2801      	cmp	r0, #1
    a66a:	d0f1      	beq.n	a650 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2f0c22a5b5fe2588E+0x76>
    a66c:	e7fa      	b.n	a664 <_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h2f0c22a5b5fe2588E+0x8a>

0000a66e <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hb8f72590c3536eeeE>:
    a66e:	b580      	push	{r7, lr}
    a670:	b090      	sub	sp, #64	; 0x40
    a672:	9008      	str	r0, [sp, #32]
    a674:	9109      	str	r1, [sp, #36]	; 0x24
    a676:	9808      	ldr	r0, [sp, #32]
    a678:	9909      	ldr	r1, [sp, #36]	; 0x24
    a67a:	f000 fd84 	bl	b186 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h012fcf8713dd6308E>
    a67e:	900c      	str	r0, [sp, #48]	; 0x30
    a680:	e7ff      	b.n	a682 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hb8f72590c3536eeeE+0x14>
    a682:	980c      	ldr	r0, [sp, #48]	; 0x30
    a684:	f000 fd20 	bl	b0c8 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h7f7bbc14858779f2E>
    a688:	e7ff      	b.n	a68a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hb8f72590c3536eeeE+0x1c>
    a68a:	e7ff      	b.n	a68c <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hb8f72590c3536eeeE+0x1e>
    a68c:	2001      	movs	r0, #1
    a68e:	900f      	str	r0, [sp, #60]	; 0x3c
    a690:	980f      	ldr	r0, [sp, #60]	; 0x3c
    a692:	9007      	str	r0, [sp, #28]
    a694:	e7ff      	b.n	a696 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hb8f72590c3536eeeE+0x28>
    a696:	9807      	ldr	r0, [sp, #28]
    a698:	2800      	cmp	r0, #0
    a69a:	d00a      	beq.n	a6b2 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hb8f72590c3536eeeE+0x44>
    a69c:	e7ff      	b.n	a69e <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hb8f72590c3536eeeE+0x30>
    a69e:	980c      	ldr	r0, [sp, #48]	; 0x30
    a6a0:	9908      	ldr	r1, [sp, #32]
    a6a2:	9a09      	ldr	r2, [sp, #36]	; 0x24
    a6a4:	9006      	str	r0, [sp, #24]
    a6a6:	4608      	mov	r0, r1
    a6a8:	4611      	mov	r1, r2
    a6aa:	f000 fd62 	bl	b172 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h907d3987d88ed00aE>
    a6ae:	9005      	str	r0, [sp, #20]
    a6b0:	e012      	b.n	a6d8 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hb8f72590c3536eeeE+0x6a>
    a6b2:	980c      	ldr	r0, [sp, #48]	; 0x30
    a6b4:	9908      	ldr	r1, [sp, #32]
    a6b6:	9a09      	ldr	r2, [sp, #36]	; 0x24
    a6b8:	9004      	str	r0, [sp, #16]
    a6ba:	4608      	mov	r0, r1
    a6bc:	4611      	mov	r1, r2
    a6be:	f000 fd58 	bl	b172 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h907d3987d88ed00aE>
    a6c2:	9003      	str	r0, [sp, #12]
    a6c4:	e7ff      	b.n	a6c6 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hb8f72590c3536eeeE+0x58>
    a6c6:	9804      	ldr	r0, [sp, #16]
    a6c8:	9903      	ldr	r1, [sp, #12]
    a6ca:	f7ff ff61 	bl	a590 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h5512600c5ffe3ca1E>
    a6ce:	9002      	str	r0, [sp, #8]
    a6d0:	e7ff      	b.n	a6d2 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hb8f72590c3536eeeE+0x64>
    a6d2:	9802      	ldr	r0, [sp, #8]
    a6d4:	900d      	str	r0, [sp, #52]	; 0x34
    a6d6:	e006      	b.n	a6e6 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hb8f72590c3536eeeE+0x78>
    a6d8:	9806      	ldr	r0, [sp, #24]
    a6da:	9905      	ldr	r1, [sp, #20]
    a6dc:	f000 fcda 	bl	b094 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h19237f4926dcce4bE>
    a6e0:	900d      	str	r0, [sp, #52]	; 0x34
    a6e2:	e7ff      	b.n	a6e4 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hb8f72590c3536eeeE+0x76>
    a6e4:	e7ff      	b.n	a6e6 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hb8f72590c3536eeeE+0x78>
    a6e6:	980c      	ldr	r0, [sp, #48]	; 0x30
    a6e8:	f7ff ff46 	bl	a578 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17ha9d377e74022418eE>
    a6ec:	9001      	str	r0, [sp, #4]
    a6ee:	e7ff      	b.n	a6f0 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hb8f72590c3536eeeE+0x82>
    a6f0:	980d      	ldr	r0, [sp, #52]	; 0x34
    a6f2:	9901      	ldr	r1, [sp, #4]
    a6f4:	910a      	str	r1, [sp, #40]	; 0x28
    a6f6:	900b      	str	r0, [sp, #44]	; 0x2c
    a6f8:	980a      	ldr	r0, [sp, #40]	; 0x28
    a6fa:	990b      	ldr	r1, [sp, #44]	; 0x2c
    a6fc:	b010      	add	sp, #64	; 0x40
    a6fe:	bd80      	pop	{r7, pc}

0000a700 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h9afc0479a1d06b9aE>:
    a700:	b081      	sub	sp, #4
    a702:	b001      	add	sp, #4
    a704:	4770      	bx	lr

0000a706 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h9f70b45087381e01E>:
    a706:	b081      	sub	sp, #4
    a708:	9000      	str	r0, [sp, #0]
    a70a:	9800      	ldr	r0, [sp, #0]
    a70c:	b001      	add	sp, #4
    a70e:	4770      	bx	lr

0000a710 <_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hd055859231afaea2E>:
    a710:	b580      	push	{r7, lr}
    a712:	b082      	sub	sp, #8
    a714:	9001      	str	r0, [sp, #4]
    a716:	9801      	ldr	r0, [sp, #4]
    a718:	f7ff fff5 	bl	a706 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h9f70b45087381e01E>
    a71c:	9000      	str	r0, [sp, #0]
    a71e:	e7ff      	b.n	a720 <_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hd055859231afaea2E+0x10>
    a720:	9800      	ldr	r0, [sp, #0]
    a722:	b002      	add	sp, #8
    a724:	bd80      	pop	{r7, pc}

0000a726 <_ZN53_$LT$T$u20$as$u20$core..convert..TryFrom$LT$U$GT$$GT$8try_from17h220b143d0d620a81E>:
    a726:	b580      	push	{r7, lr}
    a728:	b084      	sub	sp, #16
    a72a:	9002      	str	r0, [sp, #8]
    a72c:	9802      	ldr	r0, [sp, #8]
    a72e:	f7ff ffef 	bl	a710 <_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hd055859231afaea2E>
    a732:	9001      	str	r0, [sp, #4]
    a734:	e7ff      	b.n	a736 <_ZN53_$LT$T$u20$as$u20$core..convert..TryFrom$LT$U$GT$$GT$8try_from17h220b143d0d620a81E+0x10>
    a736:	9801      	ldr	r0, [sp, #4]
    a738:	9003      	str	r0, [sp, #12]
    a73a:	9803      	ldr	r0, [sp, #12]
    a73c:	b004      	add	sp, #16
    a73e:	bd80      	pop	{r7, pc}

0000a740 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3fbae9ba036185a9E>:
    a740:	b580      	push	{r7, lr}
    a742:	b08c      	sub	sp, #48	; 0x30
    a744:	9004      	str	r0, [sp, #16]
    a746:	9804      	ldr	r0, [sp, #16]
    a748:	6800      	ldr	r0, [r0, #0]
    a74a:	f7ff ff1c 	bl	a586 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7de4bdc3a85a3480E>
    a74e:	9003      	str	r0, [sp, #12]
    a750:	e7ff      	b.n	a752 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3fbae9ba036185a9E+0x12>
    a752:	9803      	ldr	r0, [sp, #12]
    a754:	f7ff ff05 	bl	a562 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h89aecf94404c8457E>
    a758:	e7ff      	b.n	a75a <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3fbae9ba036185a9E+0x1a>
    a75a:	e7ff      	b.n	a75c <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3fbae9ba036185a9E+0x1c>
    a75c:	2001      	movs	r0, #1
    a75e:	9006      	str	r0, [sp, #24]
    a760:	9806      	ldr	r0, [sp, #24]
    a762:	9002      	str	r0, [sp, #8]
    a764:	e7ff      	b.n	a766 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3fbae9ba036185a9E+0x26>
    a766:	9802      	ldr	r0, [sp, #8]
    a768:	2800      	cmp	r0, #0
    a76a:	d007      	beq.n	a77c <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3fbae9ba036185a9E+0x3c>
    a76c:	e7ff      	b.n	a76e <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3fbae9ba036185a9E+0x2e>
    a76e:	9804      	ldr	r0, [sp, #16]
    a770:	6840      	ldr	r0, [r0, #4]
    a772:	f000 fca9 	bl	b0c8 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h7f7bbc14858779f2E>
    a776:	e7ff      	b.n	a778 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3fbae9ba036185a9E+0x38>
    a778:	e7ff      	b.n	a77a <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3fbae9ba036185a9E+0x3a>
    a77a:	e7ff      	b.n	a77c <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3fbae9ba036185a9E+0x3c>
    a77c:	9804      	ldr	r0, [sp, #16]
    a77e:	6800      	ldr	r0, [r0, #0]
    a780:	f7ff ff01 	bl	a586 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7de4bdc3a85a3480E>
    a784:	9001      	str	r0, [sp, #4]
    a786:	e7ff      	b.n	a788 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3fbae9ba036185a9E+0x48>
    a788:	9804      	ldr	r0, [sp, #16]
    a78a:	6840      	ldr	r0, [r0, #4]
    a78c:	9901      	ldr	r1, [sp, #4]
    a78e:	4281      	cmp	r1, r0
    a790:	d02d      	beq.n	a7ee <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3fbae9ba036185a9E+0xae>
    a792:	e7ff      	b.n	a794 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3fbae9ba036185a9E+0x54>
    a794:	9804      	ldr	r0, [sp, #16]
    a796:	9007      	str	r0, [sp, #28]
    a798:	2001      	movs	r0, #1
    a79a:	9008      	str	r0, [sp, #32]
    a79c:	900b      	str	r0, [sp, #44]	; 0x2c
    a79e:	980b      	ldr	r0, [sp, #44]	; 0x2c
    a7a0:	2800      	cmp	r0, #0
    a7a2:	d013      	beq.n	a7cc <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3fbae9ba036185a9E+0x8c>
    a7a4:	e7ff      	b.n	a7a6 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3fbae9ba036185a9E+0x66>
    a7a6:	9807      	ldr	r0, [sp, #28]
    a7a8:	6800      	ldr	r0, [r0, #0]
    a7aa:	f7ff feec 	bl	a586 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7de4bdc3a85a3480E>
    a7ae:	900a      	str	r0, [sp, #40]	; 0x28
    a7b0:	9807      	ldr	r0, [sp, #28]
    a7b2:	6800      	ldr	r0, [r0, #0]
    a7b4:	f7ff fee7 	bl	a586 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7de4bdc3a85a3480E>
    a7b8:	9908      	ldr	r1, [sp, #32]
    a7ba:	f7ff fec5 	bl	a548 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h835be22f5bcdca9fE>
    a7be:	f7ff fedb 	bl	a578 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17ha9d377e74022418eE>
    a7c2:	9907      	ldr	r1, [sp, #28]
    a7c4:	6008      	str	r0, [r1, #0]
    a7c6:	980a      	ldr	r0, [sp, #40]	; 0x28
    a7c8:	9009      	str	r0, [sp, #36]	; 0x24
    a7ca:	e00d      	b.n	a7e8 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3fbae9ba036185a9E+0xa8>
    a7cc:	9807      	ldr	r0, [sp, #28]
    a7ce:	6840      	ldr	r0, [r0, #4]
    a7d0:	9908      	ldr	r1, [sp, #32]
    a7d2:	4249      	negs	r1, r1
    a7d4:	f7ff fee9 	bl	a5aa <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17hbbdc43338149cfd8E>
    a7d8:	9907      	ldr	r1, [sp, #28]
    a7da:	6048      	str	r0, [r1, #4]
    a7dc:	9807      	ldr	r0, [sp, #28]
    a7de:	6800      	ldr	r0, [r0, #0]
    a7e0:	f7ff fed1 	bl	a586 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7de4bdc3a85a3480E>
    a7e4:	9009      	str	r0, [sp, #36]	; 0x24
    a7e6:	e7ff      	b.n	a7e8 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3fbae9ba036185a9E+0xa8>
    a7e8:	9809      	ldr	r0, [sp, #36]	; 0x24
    a7ea:	9000      	str	r0, [sp, #0]
    a7ec:	e002      	b.n	a7f4 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3fbae9ba036185a9E+0xb4>
    a7ee:	2000      	movs	r0, #0
    a7f0:	9005      	str	r0, [sp, #20]
    a7f2:	e002      	b.n	a7fa <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3fbae9ba036185a9E+0xba>
    a7f4:	9800      	ldr	r0, [sp, #0]
    a7f6:	9005      	str	r0, [sp, #20]
    a7f8:	e7ff      	b.n	a7fa <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3fbae9ba036185a9E+0xba>
    a7fa:	9805      	ldr	r0, [sp, #20]
    a7fc:	b00c      	add	sp, #48	; 0x30
    a7fe:	bd80      	pop	{r7, pc}

0000a800 <_ZN22piet_embedded_graphics7display15draw_to_display17ha79c713c1ca91064E>:
pub fn draw_to_display<T>(item: T)
    a800:	b510      	push	{r4, lr}
    a802:	b088      	sub	sp, #32
    a804:	a901      	add	r1, sp, #4
        item
    a806:	460a      	mov	r2, r1
    a808:	e8b0 5008 	ldmia.w	r0!, {r3, ip, lr}
    a80c:	e8a2 5008 	stmia.w	r2!, {r3, ip, lr}
    a810:	e890 5018 	ldmia.w	r0, {r3, r4, ip, lr}
    a814:	e882 5018 	stmia.w	r2, {r3, r4, ip, lr}
    super::batch::draw_blocks(            //  Draw text or graphics the new faster way, as pixel blocks
    a818:	f240 10f4 	movw	r0, #500	; 0x1f4
    a81c:	f2c2 0000 	movt	r0, #8192	; 0x2000
    a820:	f005 fb16 	bl	fe50 <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E>
    a824:	9000      	str	r0, [sp, #0]
    a826:	e7ff      	b.n	a828 <_ZN22piet_embedded_graphics7display15draw_to_display17ha79c713c1ca91064E+0x28>
    a828:	9800      	ldr	r0, [sp, #0]
    a82a:	f000 0001 	and.w	r0, r0, #1
    a82e:	f24b 21f4 	movw	r1, #45812	; 0xb2f4
    a832:	f2c0 0101 	movt	r1, #1
    a836:	f64b 1360 	movw	r3, #47456	; 0xb960
    a83a:	f2c0 0301 	movt	r3, #1
    a83e:	2210      	movs	r2, #16
    a840:	f001 fbfc 	bl	c03c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h76d1a1cb65ecbf07E>
    a844:	e7ff      	b.n	a846 <_ZN22piet_embedded_graphics7display15draw_to_display17ha79c713c1ca91064E+0x46>
}
    a846:	b008      	add	sp, #32
    a848:	bd10      	pop	{r4, pc}

0000a84a <_ZN4core3cmp3Ord3max17h4b764015646cfe72E>:
    a84a:	b580      	push	{r7, lr}
    a84c:	b084      	sub	sp, #16
    a84e:	9002      	str	r0, [sp, #8]
    a850:	9103      	str	r1, [sp, #12]
    a852:	9802      	ldr	r0, [sp, #8]
    a854:	9903      	ldr	r1, [sp, #12]
    a856:	f000 f827 	bl	a8a8 <_ZN4core3cmp6max_by17h813bf64a4834026bE>
    a85a:	9001      	str	r0, [sp, #4]
    a85c:	e7ff      	b.n	a85e <_ZN4core3cmp3Ord3max17h4b764015646cfe72E+0x14>
    a85e:	9801      	ldr	r0, [sp, #4]
    a860:	b004      	add	sp, #16
    a862:	bd80      	pop	{r7, pc}

0000a864 <_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$i32$GT$3cmp17hca032127d60ba8a6E>:
    a864:	b083      	sub	sp, #12
    a866:	9000      	str	r0, [sp, #0]
    a868:	9101      	str	r1, [sp, #4]
    a86a:	9800      	ldr	r0, [sp, #0]
    a86c:	6800      	ldr	r0, [r0, #0]
    a86e:	9901      	ldr	r1, [sp, #4]
    a870:	6809      	ldr	r1, [r1, #0]
    a872:	4288      	cmp	r0, r1
    a874:	db07      	blt.n	a886 <_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$i32$GT$3cmp17hca032127d60ba8a6E+0x22>
    a876:	e7ff      	b.n	a878 <_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$i32$GT$3cmp17hca032127d60ba8a6E+0x14>
    a878:	9800      	ldr	r0, [sp, #0]
    a87a:	6800      	ldr	r0, [r0, #0]
    a87c:	9901      	ldr	r1, [sp, #4]
    a87e:	6809      	ldr	r1, [r1, #0]
    a880:	4288      	cmp	r0, r1
    a882:	d008      	beq.n	a896 <_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$i32$GT$3cmp17hca032127d60ba8a6E+0x32>
    a884:	e003      	b.n	a88e <_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$i32$GT$3cmp17hca032127d60ba8a6E+0x2a>
    a886:	20ff      	movs	r0, #255	; 0xff
    a888:	f88d 000b 	strb.w	r0, [sp, #11]
    a88c:	e008      	b.n	a8a0 <_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$i32$GT$3cmp17hca032127d60ba8a6E+0x3c>
    a88e:	2001      	movs	r0, #1
    a890:	f88d 000b 	strb.w	r0, [sp, #11]
    a894:	e003      	b.n	a89e <_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$i32$GT$3cmp17hca032127d60ba8a6E+0x3a>
    a896:	2000      	movs	r0, #0
    a898:	f88d 000b 	strb.w	r0, [sp, #11]
    a89c:	e7ff      	b.n	a89e <_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$i32$GT$3cmp17hca032127d60ba8a6E+0x3a>
    a89e:	e7ff      	b.n	a8a0 <_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$i32$GT$3cmp17hca032127d60ba8a6E+0x3c>
    a8a0:	f89d 000b 	ldrb.w	r0, [sp, #11]
    a8a4:	b003      	add	sp, #12
    a8a6:	4770      	bx	lr

0000a8a8 <_ZN4core3cmp6max_by17h813bf64a4834026bE>:
    a8a8:	b580      	push	{r7, lr}
    a8aa:	b088      	sub	sp, #32
    a8ac:	9000      	str	r0, [sp, #0]
    a8ae:	9101      	str	r1, [sp, #4]
    a8b0:	2000      	movs	r0, #0
    a8b2:	f88d 001f 	strb.w	r0, [sp, #31]
    a8b6:	f88d 001e 	strb.w	r0, [sp, #30]
    a8ba:	2001      	movs	r0, #1
    a8bc:	f88d 001f 	strb.w	r0, [sp, #31]
    a8c0:	f88d 001e 	strb.w	r0, [sp, #30]
    a8c4:	4668      	mov	r0, sp
    a8c6:	9005      	str	r0, [sp, #20]
    a8c8:	a801      	add	r0, sp, #4
    a8ca:	9006      	str	r0, [sp, #24]
    a8cc:	9805      	ldr	r0, [sp, #20]
    a8ce:	9906      	ldr	r1, [sp, #24]
    a8d0:	f000 f85e 	bl	a990 <_ZN4core3ops8function6FnOnce9call_once17h3bc69fc6db4dc474E>
    a8d4:	f88d 0013 	strb.w	r0, [sp, #19]
    a8d8:	e7ff      	b.n	a8da <_ZN4core3cmp6max_by17h813bf64a4834026bE+0x32>
    a8da:	f99d 0013 	ldrsb.w	r0, [sp, #19]
    a8de:	1c41      	adds	r1, r0, #1
    a8e0:	2902      	cmp	r1, #2
    a8e2:	d307      	bcc.n	a8f4 <_ZN4core3cmp6max_by17h813bf64a4834026bE+0x4c>
    a8e4:	e7ff      	b.n	a8e6 <_ZN4core3cmp6max_by17h813bf64a4834026bE+0x3e>
    a8e6:	2000      	movs	r0, #0
    a8e8:	f88d 001f 	strb.w	r0, [sp, #31]
    a8ec:	9800      	ldr	r0, [sp, #0]
    a8ee:	9003      	str	r0, [sp, #12]
    a8f0:	e006      	b.n	a900 <_ZN4core3cmp6max_by17h813bf64a4834026bE+0x58>
    a8f2:	defe      	udf	#254	; 0xfe
    a8f4:	2000      	movs	r0, #0
    a8f6:	f88d 001e 	strb.w	r0, [sp, #30]
    a8fa:	9801      	ldr	r0, [sp, #4]
    a8fc:	9003      	str	r0, [sp, #12]
    a8fe:	e7ff      	b.n	a900 <_ZN4core3cmp6max_by17h813bf64a4834026bE+0x58>
    a900:	f89d 001e 	ldrb.w	r0, [sp, #30]
    a904:	07c0      	lsls	r0, r0, #31
    a906:	2800      	cmp	r0, #0
    a908:	d109      	bne.n	a91e <_ZN4core3cmp6max_by17h813bf64a4834026bE+0x76>
    a90a:	e7ff      	b.n	a90c <_ZN4core3cmp6max_by17h813bf64a4834026bE+0x64>
    a90c:	f89d 001f 	ldrb.w	r0, [sp, #31]
    a910:	07c0      	lsls	r0, r0, #31
    a912:	2800      	cmp	r0, #0
    a914:	d107      	bne.n	a926 <_ZN4core3cmp6max_by17h813bf64a4834026bE+0x7e>
    a916:	e7ff      	b.n	a918 <_ZN4core3cmp6max_by17h813bf64a4834026bE+0x70>
    a918:	9803      	ldr	r0, [sp, #12]
    a91a:	b008      	add	sp, #32
    a91c:	bd80      	pop	{r7, pc}
    a91e:	2000      	movs	r0, #0
    a920:	f88d 001e 	strb.w	r0, [sp, #30]
    a924:	e7f2      	b.n	a90c <_ZN4core3cmp6max_by17h813bf64a4834026bE+0x64>
    a926:	2000      	movs	r0, #0
    a928:	f88d 001f 	strb.w	r0, [sp, #31]
    a92c:	e7f4      	b.n	a918 <_ZN4core3cmp6max_by17h813bf64a4834026bE+0x70>

0000a92e <_ZN4core3fmt10ArgumentV13new17h0800308c03115a53E>:
    a92e:	b088      	sub	sp, #32
    a930:	9002      	str	r0, [sp, #8]
    a932:	9103      	str	r1, [sp, #12]
    a934:	9803      	ldr	r0, [sp, #12]
    a936:	9006      	str	r0, [sp, #24]
    a938:	9806      	ldr	r0, [sp, #24]
    a93a:	9001      	str	r0, [sp, #4]
    a93c:	e7ff      	b.n	a93e <_ZN4core3fmt10ArgumentV13new17h0800308c03115a53E+0x10>
    a93e:	9802      	ldr	r0, [sp, #8]
    a940:	9007      	str	r0, [sp, #28]
    a942:	9807      	ldr	r0, [sp, #28]
    a944:	9000      	str	r0, [sp, #0]
    a946:	e7ff      	b.n	a948 <_ZN4core3fmt10ArgumentV13new17h0800308c03115a53E+0x1a>
    a948:	9800      	ldr	r0, [sp, #0]
    a94a:	9004      	str	r0, [sp, #16]
    a94c:	9901      	ldr	r1, [sp, #4]
    a94e:	9105      	str	r1, [sp, #20]
    a950:	9804      	ldr	r0, [sp, #16]
    a952:	9905      	ldr	r1, [sp, #20]
    a954:	b008      	add	sp, #32
    a956:	4770      	bx	lr

0000a958 <_ZN4core3fmt9Arguments6new_v117h5508566f218d4fc1E>:
    a958:	b086      	sub	sp, #24
    a95a:	f8dd c018 	ldr.w	ip, [sp, #24]
    a95e:	9100      	str	r1, [sp, #0]
    a960:	9201      	str	r2, [sp, #4]
    a962:	9302      	str	r3, [sp, #8]
    a964:	f8cd c00c 	str.w	ip, [sp, #12]
    a968:	9900      	ldr	r1, [sp, #0]
    a96a:	9a01      	ldr	r2, [sp, #4]
    a96c:	2300      	movs	r3, #0
    a96e:	9305      	str	r3, [sp, #20]
    a970:	9304      	str	r3, [sp, #16]
    a972:	9304      	str	r3, [sp, #16]
    a974:	9b02      	ldr	r3, [sp, #8]
    a976:	f8dd c00c 	ldr.w	ip, [sp, #12]
    a97a:	6001      	str	r1, [r0, #0]
    a97c:	6042      	str	r2, [r0, #4]
    a97e:	9904      	ldr	r1, [sp, #16]
    a980:	9a05      	ldr	r2, [sp, #20]
    a982:	6081      	str	r1, [r0, #8]
    a984:	60c2      	str	r2, [r0, #12]
    a986:	6103      	str	r3, [r0, #16]
    a988:	f8c0 c014 	str.w	ip, [r0, #20]
    a98c:	b006      	add	sp, #24
    a98e:	4770      	bx	lr

0000a990 <_ZN4core3ops8function6FnOnce9call_once17h3bc69fc6db4dc474E>:
    a990:	b580      	push	{r7, lr}
    a992:	b084      	sub	sp, #16
    a994:	9002      	str	r0, [sp, #8]
    a996:	9103      	str	r1, [sp, #12]
    a998:	9802      	ldr	r0, [sp, #8]
    a99a:	9903      	ldr	r1, [sp, #12]
    a99c:	f7ff ff62 	bl	a864 <_ZN4core3cmp5impls48_$LT$impl$u20$core..cmp..Ord$u20$for$u20$i32$GT$3cmp17hca032127d60ba8a6E>
    a9a0:	9000      	str	r0, [sp, #0]
    a9a2:	e7ff      	b.n	a9a4 <_ZN4core3ops8function6FnOnce9call_once17h3bc69fc6db4dc474E+0x14>
    a9a4:	9800      	ldr	r0, [sp, #0]
    a9a6:	b004      	add	sp, #16
    a9a8:	bd80      	pop	{r7, pc}

0000a9aa <_ZN17embedded_graphics5coord14internal_coord5Coord3new17h9ba2f193635b6338E>:
    #[derive(Debug, Copy, Clone, Eq, PartialEq)]
    pub struct Coord(pub CoordPart, pub CoordPart);

    impl Coord {
        /// Create a new coordinate with X and Y values
        pub fn new(x: CoordPart, y: CoordPart) -> Self {
    a9aa:	b084      	sub	sp, #16
    a9ac:	9000      	str	r0, [sp, #0]
    a9ae:	9101      	str	r1, [sp, #4]
            Coord(x, y)
    a9b0:	9800      	ldr	r0, [sp, #0]
    a9b2:	9901      	ldr	r1, [sp, #4]
    a9b4:	9002      	str	r0, [sp, #8]
    a9b6:	9103      	str	r1, [sp, #12]
        }
    a9b8:	9802      	ldr	r0, [sp, #8]
    a9ba:	9903      	ldr	r1, [sp, #12]
    a9bc:	b004      	add	sp, #16
    a9be:	4770      	bx	lr

0000a9c0 <_ZN89_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..arith..Add$GT$3add17he82618689c46e7bdE>:
    }

    impl Add for Coord {
        type Output = Coord;

        fn add(self, other: Coord) -> Coord {
    a9c0:	b580      	push	{r7, lr}
    a9c2:	b088      	sub	sp, #32
    a9c4:	9004      	str	r0, [sp, #16]
    a9c6:	9105      	str	r1, [sp, #20]
    a9c8:	9206      	str	r2, [sp, #24]
    a9ca:	9307      	str	r3, [sp, #28]
            Coord::new(self.0 + other.0, self.1 + other.1)
    a9cc:	9804      	ldr	r0, [sp, #16]
    a9ce:	9906      	ldr	r1, [sp, #24]
    a9d0:	4401      	add	r1, r0
    a9d2:	460a      	mov	r2, r1
    a9d4:	4281      	cmp	r1, r0
    a9d6:	9203      	str	r2, [sp, #12]
    a9d8:	d613      	bvs.n	aa02 <_ZN89_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..arith..Add$GT$3add17he82618689c46e7bdE+0x42>
    a9da:	e7ff      	b.n	a9dc <_ZN89_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..arith..Add$GT$3add17he82618689c46e7bdE+0x1c>
    a9dc:	9805      	ldr	r0, [sp, #20]
    a9de:	9907      	ldr	r1, [sp, #28]
    a9e0:	4401      	add	r1, r0
    a9e2:	460a      	mov	r2, r1
    a9e4:	4281      	cmp	r1, r0
    a9e6:	9202      	str	r2, [sp, #8]
    a9e8:	d617      	bvs.n	aa1a <_ZN89_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..arith..Add$GT$3add17he82618689c46e7bdE+0x5a>
    a9ea:	e7ff      	b.n	a9ec <_ZN89_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..arith..Add$GT$3add17he82618689c46e7bdE+0x2c>
    a9ec:	9803      	ldr	r0, [sp, #12]
    a9ee:	9902      	ldr	r1, [sp, #8]
    a9f0:	f7ff ffdb 	bl	a9aa <_ZN17embedded_graphics5coord14internal_coord5Coord3new17h9ba2f193635b6338E>
    a9f4:	9001      	str	r0, [sp, #4]
    a9f6:	9100      	str	r1, [sp, #0]
    a9f8:	e7ff      	b.n	a9fa <_ZN89_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..arith..Add$GT$3add17he82618689c46e7bdE+0x3a>
        }
    a9fa:	9801      	ldr	r0, [sp, #4]
    a9fc:	9900      	ldr	r1, [sp, #0]
    a9fe:	b008      	add	sp, #32
    aa00:	bd80      	pop	{r7, pc}
            Coord::new(self.0 + other.0, self.1 + other.1)
    aa02:	f64b 10f0 	movw	r0, #47600	; 0xb9f0
    aa06:	f2c0 0001 	movt	r0, #1
    aa0a:	f64b 12d4 	movw	r2, #47572	; 0xb9d4
    aa0e:	f2c0 0201 	movt	r2, #1
    aa12:	211c      	movs	r1, #28
    aa14:	f00a f8c5 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    aa18:	defe      	udf	#254	; 0xfe
    aa1a:	f64b 10f0 	movw	r0, #47600	; 0xb9f0
    aa1e:	f2c0 0001 	movt	r0, #1
    aa22:	f64b 220c 	movw	r2, #47628	; 0xba0c
    aa26:	f2c0 0201 	movt	r2, #1
    aa2a:	211c      	movs	r1, #28
    aa2c:	f00a f8b9 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    aa30:	defe      	udf	#254	; 0xfe

0000aa32 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E>:
    }

    impl Index<usize> for Coord {
        type Output = CoordPart;

        fn index(&self, idx: usize) -> &CoordPart {
    aa32:	b580      	push	{r7, lr}
    aa34:	b094      	sub	sp, #80	; 0x50
    aa36:	9007      	str	r0, [sp, #28]
    aa38:	9108      	str	r1, [sp, #32]
            match idx {
                0 => &self.0,
    aa3a:	9808      	ldr	r0, [sp, #32]
    aa3c:	2800      	cmp	r0, #0
    aa3e:	9006      	str	r0, [sp, #24]
    aa40:	d019      	beq.n	aa76 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E+0x44>
    aa42:	e7ff      	b.n	aa44 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E+0x12>
    aa44:	9806      	ldr	r0, [sp, #24]
    aa46:	2801      	cmp	r0, #1
    aa48:	d018      	beq.n	aa7c <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E+0x4a>
    aa4a:	e7ff      	b.n	aa4c <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E+0x1a>
                1 => &self.1,
                _ => panic!("Unreachable index {}", idx),
    aa4c:	f64b 205c 	movw	r0, #47708	; 0xba5c
    aa50:	f2c0 0001 	movt	r0, #1
    aa54:	6801      	ldr	r1, [r0, #0]
    aa56:	a808      	add	r0, sp, #32
    aa58:	9012      	str	r0, [sp, #72]	; 0x48
    aa5a:	9812      	ldr	r0, [sp, #72]	; 0x48
    aa5c:	9013      	str	r0, [sp, #76]	; 0x4c
    aa5e:	9813      	ldr	r0, [sp, #76]	; 0x4c
    aa60:	f246 529b 	movw	r2, #26011	; 0x659b
    aa64:	f2c0 0201 	movt	r2, #1
    aa68:	9105      	str	r1, [sp, #20]
    aa6a:	4611      	mov	r1, r2
    aa6c:	f7ff ff5f 	bl	a92e <_ZN4core3fmt10ArgumentV13new17h0800308c03115a53E>
    aa70:	9004      	str	r0, [sp, #16]
    aa72:	9103      	str	r1, [sp, #12]
    aa74:	e006      	b.n	aa84 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E+0x52>
                0 => &self.0,
    aa76:	9807      	ldr	r0, [sp, #28]
    aa78:	9009      	str	r0, [sp, #36]	; 0x24
            match idx {
    aa7a:	e020      	b.n	aabe <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E+0x8c>
                1 => &self.1,
    aa7c:	9807      	ldr	r0, [sp, #28]
    aa7e:	3004      	adds	r0, #4
    aa80:	9009      	str	r0, [sp, #36]	; 0x24
            match idx {
    aa82:	e01c      	b.n	aabe <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E+0x8c>
                _ => panic!("Unreachable index {}", idx),
    aa84:	9804      	ldr	r0, [sp, #16]
    aa86:	9010      	str	r0, [sp, #64]	; 0x40
    aa88:	9903      	ldr	r1, [sp, #12]
    aa8a:	9111      	str	r1, [sp, #68]	; 0x44
    aa8c:	466a      	mov	r2, sp
    aa8e:	2301      	movs	r3, #1
    aa90:	6013      	str	r3, [r2, #0]
    aa92:	a80a      	add	r0, sp, #40	; 0x28
    aa94:	aa10      	add	r2, sp, #64	; 0x40
    aa96:	9905      	ldr	r1, [sp, #20]
    aa98:	9202      	str	r2, [sp, #8]
    aa9a:	461a      	mov	r2, r3
    aa9c:	9b02      	ldr	r3, [sp, #8]
    aa9e:	f7ff ff5b 	bl	a958 <_ZN4core3fmt9Arguments6new_v117h5508566f218d4fc1E>
    aaa2:	e7ff      	b.n	aaa4 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E+0x72>
    aaa4:	f64b 2060 	movw	r0, #47712	; 0xba60
    aaa8:	f2c0 0001 	movt	r0, #1
    aaac:	f00a f872 	bl	14b94 <_ZN4core5panic8Location6caller17h63e50e3e41b8f68eE>
    aab0:	9001      	str	r0, [sp, #4]
    aab2:	e7ff      	b.n	aab4 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E+0x82>
    aab4:	a80a      	add	r0, sp, #40	; 0x28
    aab6:	9901      	ldr	r1, [sp, #4]
    aab8:	f00a f8a9 	bl	14c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>
    aabc:	defe      	udf	#254	; 0xfe
            match idx {
    aabe:	9809      	ldr	r0, [sp, #36]	; 0x24
            }
        }
    aac0:	b014      	add	sp, #80	; 0x50
    aac2:	bd80      	pop	{r7, pc}

0000aac4 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$embedded_graphics..coord..ToUnsigned$GT$11to_unsigned17hf1a2e5ff232b047aE>:
    /// #
    /// let coord = Coord::new(-5, 10);
    ///
    /// assert_eq!(coord.to_unsigned(), UnsignedCoord::new(0, 10));
    /// ```
    fn to_unsigned(self) -> UnsignedCoord {
    aac4:	b580      	push	{r7, lr}
    aac6:	b088      	sub	sp, #32
    aac8:	9006      	str	r0, [sp, #24]
    aaca:	9107      	str	r1, [sp, #28]
    aacc:	a806      	add	r0, sp, #24
    aace:	2100      	movs	r1, #0
        UnsignedCoord::new(self[0].max(0) as u32, self[1].max(0) as u32)
    aad0:	f7ff ffaf 	bl	aa32 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E>
    aad4:	9005      	str	r0, [sp, #20]
    aad6:	e7ff      	b.n	aad8 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$embedded_graphics..coord..ToUnsigned$GT$11to_unsigned17hf1a2e5ff232b047aE+0x14>
    aad8:	9805      	ldr	r0, [sp, #20]
    aada:	6800      	ldr	r0, [r0, #0]
    aadc:	2100      	movs	r1, #0
    aade:	f7ff feb4 	bl	a84a <_ZN4core3cmp3Ord3max17h4b764015646cfe72E>
    aae2:	9004      	str	r0, [sp, #16]
    aae4:	e7ff      	b.n	aae6 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$embedded_graphics..coord..ToUnsigned$GT$11to_unsigned17hf1a2e5ff232b047aE+0x22>
    aae6:	a806      	add	r0, sp, #24
    aae8:	2101      	movs	r1, #1
    aaea:	f7ff ffa2 	bl	aa32 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E>
    aaee:	9003      	str	r0, [sp, #12]
    aaf0:	e7ff      	b.n	aaf2 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$embedded_graphics..coord..ToUnsigned$GT$11to_unsigned17hf1a2e5ff232b047aE+0x2e>
    aaf2:	9803      	ldr	r0, [sp, #12]
    aaf4:	6800      	ldr	r0, [r0, #0]
    aaf6:	2100      	movs	r1, #0
    aaf8:	f7ff fea7 	bl	a84a <_ZN4core3cmp3Ord3max17h4b764015646cfe72E>
    aafc:	9002      	str	r0, [sp, #8]
    aafe:	e7ff      	b.n	ab00 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$embedded_graphics..coord..ToUnsigned$GT$11to_unsigned17hf1a2e5ff232b047aE+0x3c>
    ab00:	9804      	ldr	r0, [sp, #16]
    ab02:	9902      	ldr	r1, [sp, #8]
    ab04:	f000 f891 	bl	ac2a <_ZN17embedded_graphics13unsignedcoord23internal_unsigned_coord13UnsignedCoord3new17he975f5bce17d9507E>
    ab08:	9001      	str	r0, [sp, #4]
    ab0a:	9100      	str	r1, [sp, #0]
    ab0c:	e7ff      	b.n	ab0e <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$embedded_graphics..coord..ToUnsigned$GT$11to_unsigned17hf1a2e5ff232b047aE+0x4a>
    }
    ab0e:	9801      	ldr	r0, [sp, #4]
    ab10:	9900      	ldr	r1, [sp, #0]
    ab12:	b008      	add	sp, #32
    ab14:	bd80      	pop	{r7, pc}

0000ab16 <_ZN126_$LT$embedded_graphics..fonts..font12x16..Font12x16Conf$u20$as$u20$embedded_graphics..fonts..font_builder..FontBuilderConf$GT$11char_offset17h331db1cf3b02e2f7E>:
impl FontBuilderConf for Font12x16Conf {
    const FONT_IMAGE: &'static [u8] = include_bytes!("../../data/font12x16_1bpp.raw");
    const CHAR_HEIGHT: u32 = 16;
    const CHAR_WIDTH: u32 = 12;
    const FONT_IMAGE_WIDTH: u32 = 480;
    fn char_offset(c: char) -> u32 {
    ab16:	b084      	sub	sp, #16
    ab18:	9001      	str	r0, [sp, #4]
    ab1a:	201f      	movs	r0, #31
        let fallback = '?' as u32 - ' ' as u32;
    ab1c:	9003      	str	r0, [sp, #12]
        if c < ' ' {
    ab1e:	9801      	ldr	r0, [sp, #4]
    ab20:	2820      	cmp	r0, #32
    ab22:	d304      	bcc.n	ab2e <_ZN126_$LT$embedded_graphics..fonts..font12x16..Font12x16Conf$u20$as$u20$embedded_graphics..fonts..font_builder..FontBuilderConf$GT$11char_offset17h331db1cf3b02e2f7E+0x18>
    ab24:	e7ff      	b.n	ab26 <_ZN126_$LT$embedded_graphics..fonts..font12x16..Font12x16Conf$u20$as$u20$embedded_graphics..fonts..font_builder..FontBuilderConf$GT$11char_offset17h331db1cf3b02e2f7E+0x10>
            return fallback;
        }
        if c <= '~' {
    ab26:	9801      	ldr	r0, [sp, #4]
    ab28:	287f      	cmp	r0, #127	; 0x7f
    ab2a:	d30a      	bcc.n	ab42 <_ZN126_$LT$embedded_graphics..fonts..font12x16..Font12x16Conf$u20$as$u20$embedded_graphics..fonts..font_builder..FontBuilderConf$GT$11char_offset17h331db1cf3b02e2f7E+0x2c>
    ab2c:	e006      	b.n	ab3c <_ZN126_$LT$embedded_graphics..fonts..font12x16..Font12x16Conf$u20$as$u20$embedded_graphics..fonts..font_builder..FontBuilderConf$GT$11char_offset17h331db1cf3b02e2f7E+0x26>
            return fallback;
    ab2e:	9803      	ldr	r0, [sp, #12]
    ab30:	9002      	str	r0, [sp, #8]
    ab32:	e002      	b.n	ab3a <_ZN126_$LT$embedded_graphics..fonts..font12x16..Font12x16Conf$u20$as$u20$embedded_graphics..fonts..font_builder..FontBuilderConf$GT$11char_offset17h331db1cf3b02e2f7E+0x24>
            return c as u32 - ' ' as u32;
        }
        fallback
    }
    ab34:	9802      	ldr	r0, [sp, #8]
    ab36:	b004      	add	sp, #16
    ab38:	4770      	bx	lr
            return fallback;
    ab3a:	e7fb      	b.n	ab34 <_ZN126_$LT$embedded_graphics..fonts..font12x16..Font12x16Conf$u20$as$u20$embedded_graphics..fonts..font_builder..FontBuilderConf$GT$11char_offset17h331db1cf3b02e2f7E+0x1e>
        fallback
    ab3c:	9803      	ldr	r0, [sp, #12]
    ab3e:	9002      	str	r0, [sp, #8]
    }
    ab40:	e7f8      	b.n	ab34 <_ZN126_$LT$embedded_graphics..fonts..font12x16..Font12x16Conf$u20$as$u20$embedded_graphics..fonts..font_builder..FontBuilderConf$GT$11char_offset17h331db1cf3b02e2f7E+0x1e>
            return c as u32 - ' ' as u32;
    ab42:	9801      	ldr	r0, [sp, #4]
    ab44:	f1a0 0120 	sub.w	r1, r0, #32
    ab48:	2820      	cmp	r0, #32
    ab4a:	9100      	str	r1, [sp, #0]
    ab4c:	d303      	bcc.n	ab56 <_ZN126_$LT$embedded_graphics..fonts..font12x16..Font12x16Conf$u20$as$u20$embedded_graphics..fonts..font_builder..FontBuilderConf$GT$11char_offset17h331db1cf3b02e2f7E+0x40>
    ab4e:	e7ff      	b.n	ab50 <_ZN126_$LT$embedded_graphics..fonts..font12x16..Font12x16Conf$u20$as$u20$embedded_graphics..fonts..font_builder..FontBuilderConf$GT$11char_offset17h331db1cf3b02e2f7E+0x3a>
    ab50:	9800      	ldr	r0, [sp, #0]
    ab52:	9002      	str	r0, [sp, #8]
    ab54:	e7f1      	b.n	ab3a <_ZN126_$LT$embedded_graphics..fonts..font12x16..Font12x16Conf$u20$as$u20$embedded_graphics..fonts..font_builder..FontBuilderConf$GT$11char_offset17h331db1cf3b02e2f7E+0x24>
    ab56:	f64b 2020 	movw	r0, #47648	; 0xba20
    ab5a:	f2c0 0001 	movt	r0, #1
    ab5e:	f64b 22dc 	movw	r2, #47836	; 0xbadc
    ab62:	f2c0 0201 	movt	r2, #1
    ab66:	2121      	movs	r1, #33	; 0x21
    ab68:	f00a f81b 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    ab6c:	defe      	udf	#254	; 0xfe

0000ab6e <_ZN95_$LT$embedded_graphics..pixelcolor..rgb565..Rgb565$u20$as$u20$core..convert..From$LT$u8$GT$$GT$4from17h36b3c067f0bfa86dE>:
///
/// The 5 (or 6 for the green channel) most significant bits are taken from the input and assigned
/// to the three colour channels see <http://www.barth-dev.de/online/rgb565-color-picker/> for a
/// more in depth explanation.
impl From<u8> for Rgb565 {
    fn from(other: u8) -> Self {
    ab6e:	b580      	push	{r7, lr}
    ab70:	b084      	sub	sp, #16
    ab72:	4601      	mov	r1, r0
    ab74:	f88d 000b 	strb.w	r0, [sp, #11]
        Self::from((other, other, other))
    ab78:	f89d 000b 	ldrb.w	r0, [sp, #11]
    ab7c:	f88d 000c 	strb.w	r0, [sp, #12]
    ab80:	f88d 000d 	strb.w	r0, [sp, #13]
    ab84:	f88d 000e 	strb.w	r0, [sp, #14]
    ab88:	f89d 000e 	ldrb.w	r0, [sp, #14]
    ab8c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
    ab90:	ea42 4000 	orr.w	r0, r2, r0, lsl #16
    ab94:	9101      	str	r1, [sp, #4]
    ab96:	f000 f805 	bl	aba4 <_ZN123_$LT$embedded_graphics..pixelcolor..rgb565..Rgb565$u20$as$u20$core..convert..From$LT$$LP$u8$C$$u20$u8$C$$u20$u8$RP$$GT$$GT$4from17hef1427cf6cf20becE>
    ab9a:	9000      	str	r0, [sp, #0]
    ab9c:	e7ff      	b.n	ab9e <_ZN95_$LT$embedded_graphics..pixelcolor..rgb565..Rgb565$u20$as$u20$core..convert..From$LT$u8$GT$$GT$4from17h36b3c067f0bfa86dE+0x30>
    }
    ab9e:	9800      	ldr	r0, [sp, #0]
    aba0:	b004      	add	sp, #16
    aba2:	bd80      	pop	{r7, pc}

0000aba4 <_ZN123_$LT$embedded_graphics..pixelcolor..rgb565..Rgb565$u20$as$u20$core..convert..From$LT$$LP$u8$C$$u20$u8$C$$u20$u8$RP$$GT$$GT$4from17hef1427cf6cf20becE>:
/// Take a tuple of 8 bit `(red, green, blue)` color values and convert them to a single 16 bit
/// color
///
/// The 2 or 3 (for the green channel) least significant bits are discarded
impl From<(u8, u8, u8)> for Rgb565 {
    fn from((r, g, b): (u8, u8, u8)) -> Self {
    aba4:	b089      	sub	sp, #36	; 0x24
    aba6:	4601      	mov	r1, r0
    aba8:	f8ad 0018 	strh.w	r0, [sp, #24]
    abac:	0c00      	lsrs	r0, r0, #16
    abae:	f88d 001a 	strb.w	r0, [sp, #26]
    abb2:	f89d 001a 	ldrb.w	r0, [sp, #26]
    abb6:	f88d 0016 	strb.w	r0, [sp, #22]
    abba:	f8bd 0018 	ldrh.w	r0, [sp, #24]
    abbe:	f8ad 0014 	strh.w	r0, [sp, #20]
    abc2:	f89d 0014 	ldrb.w	r0, [sp, #20]
    abc6:	f88d 001f 	strb.w	r0, [sp, #31]
    abca:	f89d 0015 	ldrb.w	r0, [sp, #21]
    abce:	f88d 0020 	strb.w	r0, [sp, #32]
    abd2:	f89d 0016 	ldrb.w	r0, [sp, #22]
    abd6:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
        let value =
        // Red
        (((r as u16) << 8) & RED_MASK)
    abda:	f89d 001f 	ldrb.w	r0, [sp, #31]
    abde:	0200      	lsls	r0, r0, #8
    abe0:	9004      	str	r0, [sp, #16]
    abe2:	e7ff      	b.n	abe4 <_ZN123_$LT$embedded_graphics..pixelcolor..rgb565..Rgb565$u20$as$u20$core..convert..From$LT$$LP$u8$C$$u20$u8$C$$u20$u8$RP$$GT$$GT$4from17hef1427cf6cf20becE+0x40>
    abe4:	9804      	ldr	r0, [sp, #16]
    abe6:	f400 4178 	and.w	r1, r0, #63488	; 0xf800
        // Green
        | (((g as u16) << 3) & GREEN_MASK)
    abea:	f89d 2020 	ldrb.w	r2, [sp, #32]
    abee:	00d2      	lsls	r2, r2, #3
    abf0:	9103      	str	r1, [sp, #12]
    abf2:	9202      	str	r2, [sp, #8]
    abf4:	e7ff      	b.n	abf6 <_ZN123_$LT$embedded_graphics..pixelcolor..rgb565..Rgb565$u20$as$u20$core..convert..From$LT$$LP$u8$C$$u20$u8$C$$u20$u8$RP$$GT$$GT$4from17hef1427cf6cf20becE+0x52>
    abf6:	9802      	ldr	r0, [sp, #8]
    abf8:	f400 61fc 	and.w	r1, r0, #2016	; 0x7e0
        (((r as u16) << 8) & RED_MASK)
    abfc:	9a03      	ldr	r2, [sp, #12]
    abfe:	4311      	orrs	r1, r2
        // Blue
        | ((b as u16) >> 3 & BLUE_MASK);
    ac00:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
    ac04:	08db      	lsrs	r3, r3, #3
    ac06:	9101      	str	r1, [sp, #4]
    ac08:	9300      	str	r3, [sp, #0]
    ac0a:	e7ff      	b.n	ac0c <_ZN123_$LT$embedded_graphics..pixelcolor..rgb565..Rgb565$u20$as$u20$core..convert..From$LT$$LP$u8$C$$u20$u8$C$$u20$u8$RP$$GT$$GT$4from17hef1427cf6cf20becE+0x68>
    ac0c:	9800      	ldr	r0, [sp, #0]
    ac0e:	f000 011f 	and.w	r1, r0, #31
        (((r as u16) << 8) & RED_MASK)
    ac12:	9a01      	ldr	r2, [sp, #4]
    ac14:	4311      	orrs	r1, r2
    ac16:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22

        Self(value)
    ac1a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
    ac1e:	f8ad 101c 	strh.w	r1, [sp, #28]
    }
    ac22:	f8bd 001c 	ldrh.w	r0, [sp, #28]
    ac26:	b009      	add	sp, #36	; 0x24
    ac28:	4770      	bx	lr

0000ac2a <_ZN17embedded_graphics13unsignedcoord23internal_unsigned_coord13UnsignedCoord3new17he975f5bce17d9507E>:
    #[derive(Debug, Copy, Clone, Eq, PartialEq)]
    pub struct UnsignedCoord(pub UnsignedCoordPart, pub UnsignedCoordPart);

    impl UnsignedCoord {
        /// Create a new coordinate with X and Y values
        pub fn new(x: UnsignedCoordPart, y: UnsignedCoordPart) -> Self {
    ac2a:	b084      	sub	sp, #16
    ac2c:	9000      	str	r0, [sp, #0]
    ac2e:	9101      	str	r1, [sp, #4]
            UnsignedCoord(x, y)
    ac30:	9800      	ldr	r0, [sp, #0]
    ac32:	9901      	ldr	r1, [sp, #4]
    ac34:	9002      	str	r0, [sp, #8]
    ac36:	9103      	str	r1, [sp, #12]
        }
    ac38:	9802      	ldr	r0, [sp, #8]
    ac3a:	9903      	ldr	r1, [sp, #12]
    ac3c:	b004      	add	sp, #16
    ac3e:	4770      	bx	lr

0000ac40 <_ZN4core10intrinsics23is_aligned_and_not_null17hfbf97934d37ba447E>:
    ac40:	b580      	push	{r7, lr}
    ac42:	b086      	sub	sp, #24
    ac44:	9003      	str	r0, [sp, #12]
    ac46:	9803      	ldr	r0, [sp, #12]
    ac48:	f000 f867 	bl	ad1a <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h63f28c380e75109dE>
    ac4c:	9002      	str	r0, [sp, #8]
    ac4e:	e012      	b.n	ac76 <_ZN4core10intrinsics23is_aligned_and_not_null17hfbf97934d37ba447E+0x36>
    ac50:	2001      	movs	r0, #1
    ac52:	f88d 0013 	strb.w	r0, [sp, #19]
    ac56:	e00a      	b.n	ac6e <_ZN4core10intrinsics23is_aligned_and_not_null17hfbf97934d37ba447E+0x2e>
    ac58:	2000      	movs	r0, #0
    ac5a:	f88d 0013 	strb.w	r0, [sp, #19]
    ac5e:	e006      	b.n	ac6e <_ZN4core10intrinsics23is_aligned_and_not_null17hfbf97934d37ba447E+0x2e>
    ac60:	9803      	ldr	r0, [sp, #12]
    ac62:	2101      	movs	r1, #1
    ac64:	9105      	str	r1, [sp, #20]
    ac66:	9905      	ldr	r1, [sp, #20]
    ac68:	9001      	str	r0, [sp, #4]
    ac6a:	9100      	str	r1, [sp, #0]
    ac6c:	e008      	b.n	ac80 <_ZN4core10intrinsics23is_aligned_and_not_null17hfbf97934d37ba447E+0x40>
    ac6e:	f89d 0013 	ldrb.w	r0, [sp, #19]
    ac72:	b006      	add	sp, #24
    ac74:	bd80      	pop	{r7, pc}
    ac76:	9802      	ldr	r0, [sp, #8]
    ac78:	07c1      	lsls	r1, r0, #31
    ac7a:	2900      	cmp	r1, #0
    ac7c:	d0f0      	beq.n	ac60 <_ZN4core10intrinsics23is_aligned_and_not_null17hfbf97934d37ba447E+0x20>
    ac7e:	e7eb      	b.n	ac58 <_ZN4core10intrinsics23is_aligned_and_not_null17hfbf97934d37ba447E+0x18>
    ac80:	9800      	ldr	r0, [sp, #0]
    ac82:	2800      	cmp	r0, #0
    ac84:	d009      	beq.n	ac9a <_ZN4core10intrinsics23is_aligned_and_not_null17hfbf97934d37ba447E+0x5a>
    ac86:	e7ff      	b.n	ac88 <_ZN4core10intrinsics23is_aligned_and_not_null17hfbf97934d37ba447E+0x48>
    ac88:	9801      	ldr	r0, [sp, #4]
    ac8a:	9900      	ldr	r1, [sp, #0]
    ac8c:	fbb0 f2f1 	udiv	r2, r0, r1
    ac90:	fb02 0211 	mls	r2, r2, r1, r0
    ac94:	2a00      	cmp	r2, #0
    ac96:	d0db      	beq.n	ac50 <_ZN4core10intrinsics23is_aligned_and_not_null17hfbf97934d37ba447E+0x10>
    ac98:	e7de      	b.n	ac58 <_ZN4core10intrinsics23is_aligned_and_not_null17hfbf97934d37ba447E+0x18>
    ac9a:	f64b 3050 	movw	r0, #47952	; 0xbb50
    ac9e:	f2c0 0001 	movt	r0, #1
    aca2:	f64b 3238 	movw	r2, #47928	; 0xbb38
    aca6:	f2c0 0201 	movt	r2, #1
    acaa:	2139      	movs	r1, #57	; 0x39
    acac:	f009 ff79 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    acb0:	defe      	udf	#254	; 0xfe

0000acb2 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hebca7f595bbd41c0E>:
    acb2:	b580      	push	{r7, lr}
    acb4:	b084      	sub	sp, #16
    acb6:	9002      	str	r0, [sp, #8]
    acb8:	9103      	str	r1, [sp, #12]
    acba:	9802      	ldr	r0, [sp, #8]
    acbc:	9903      	ldr	r1, [sp, #12]
    acbe:	f000 f805 	bl	accc <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h5915a0d6281f2814E>
    acc2:	9001      	str	r0, [sp, #4]
    acc4:	e7ff      	b.n	acc6 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hebca7f595bbd41c0E+0x14>
    acc6:	9801      	ldr	r0, [sp, #4]
    acc8:	b004      	add	sp, #16
    acca:	bd80      	pop	{r7, pc}

0000accc <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h5915a0d6281f2814E>:
    accc:	b084      	sub	sp, #16
    acce:	9001      	str	r0, [sp, #4]
    acd0:	9102      	str	r1, [sp, #8]
    acd2:	9801      	ldr	r0, [sp, #4]
    acd4:	9902      	ldr	r1, [sp, #8]
    acd6:	4408      	add	r0, r1
    acd8:	9003      	str	r0, [sp, #12]
    acda:	9803      	ldr	r0, [sp, #12]
    acdc:	9000      	str	r0, [sp, #0]
    acde:	e7ff      	b.n	ace0 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h5915a0d6281f2814E+0x14>
    ace0:	9800      	ldr	r0, [sp, #0]
    ace2:	b004      	add	sp, #16
    ace4:	4770      	bx	lr

0000ace6 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hf0edcec69a8db16aE>:
    ace6:	b580      	push	{r7, lr}
    ace8:	b084      	sub	sp, #16
    acea:	9002      	str	r0, [sp, #8]
    acec:	9103      	str	r1, [sp, #12]
    acee:	9802      	ldr	r0, [sp, #8]
    acf0:	9903      	ldr	r1, [sp, #12]
    acf2:	f000 f805 	bl	ad00 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h4171eb2e9f230fd8E>
    acf6:	9001      	str	r0, [sp, #4]
    acf8:	e7ff      	b.n	acfa <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hf0edcec69a8db16aE+0x14>
    acfa:	9801      	ldr	r0, [sp, #4]
    acfc:	b004      	add	sp, #16
    acfe:	bd80      	pop	{r7, pc}

0000ad00 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h4171eb2e9f230fd8E>:
    ad00:	b084      	sub	sp, #16
    ad02:	9001      	str	r0, [sp, #4]
    ad04:	9102      	str	r1, [sp, #8]
    ad06:	9801      	ldr	r0, [sp, #4]
    ad08:	9902      	ldr	r1, [sp, #8]
    ad0a:	4408      	add	r0, r1
    ad0c:	9003      	str	r0, [sp, #12]
    ad0e:	9803      	ldr	r0, [sp, #12]
    ad10:	9000      	str	r0, [sp, #0]
    ad12:	e7ff      	b.n	ad14 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h4171eb2e9f230fd8E+0x14>
    ad14:	9800      	ldr	r0, [sp, #0]
    ad16:	b004      	add	sp, #16
    ad18:	4770      	bx	lr

0000ad1a <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h63f28c380e75109dE>:
    ad1a:	b082      	sub	sp, #8
    ad1c:	9001      	str	r0, [sp, #4]
    ad1e:	9801      	ldr	r0, [sp, #4]
    ad20:	9000      	str	r0, [sp, #0]
    ad22:	e7ff      	b.n	ad24 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h63f28c380e75109dE+0xa>
    ad24:	9800      	ldr	r0, [sp, #0]
    ad26:	fab0 f180 	clz	r1, r0
    ad2a:	0948      	lsrs	r0, r1, #5
    ad2c:	b002      	add	sp, #8
    ad2e:	4770      	bx	lr

0000ad30 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h38df1a24a1544322E>:
    ad30:	b082      	sub	sp, #8
    ad32:	9000      	str	r0, [sp, #0]
    ad34:	9101      	str	r1, [sp, #4]
    ad36:	9800      	ldr	r0, [sp, #0]
    ad38:	b002      	add	sp, #8
    ad3a:	4770      	bx	lr

0000ad3c <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h459978f2c2e84b39E>:
    ad3c:	b580      	push	{r7, lr}
    ad3e:	b084      	sub	sp, #16
    ad40:	9001      	str	r0, [sp, #4]
    ad42:	9102      	str	r1, [sp, #8]
    ad44:	9203      	str	r2, [sp, #12]
    ad46:	9803      	ldr	r0, [sp, #12]
    ad48:	9901      	ldr	r1, [sp, #4]
    ad4a:	9a02      	ldr	r2, [sp, #8]
    ad4c:	f000 f84f 	bl	adee <_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h1f6404b74c72506bE>
    ad50:	9000      	str	r0, [sp, #0]
    ad52:	e7ff      	b.n	ad54 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h459978f2c2e84b39E+0x18>
    ad54:	9800      	ldr	r0, [sp, #0]
    ad56:	b004      	add	sp, #16
    ad58:	bd80      	pop	{r7, pc}

0000ad5a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h4a5bc0e612dcb4a6E>:
    ad5a:	b084      	sub	sp, #16
    ad5c:	9000      	str	r0, [sp, #0]
    ad5e:	9101      	str	r1, [sp, #4]
    ad60:	9800      	ldr	r0, [sp, #0]
    ad62:	9901      	ldr	r1, [sp, #4]
    ad64:	9002      	str	r0, [sp, #8]
    ad66:	9103      	str	r1, [sp, #12]
    ad68:	9803      	ldr	r0, [sp, #12]
    ad6a:	b004      	add	sp, #16
    ad6c:	4770      	bx	lr

0000ad6e <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hb15824c4ec226a1aE>:
    ad6e:	b082      	sub	sp, #8
    ad70:	9000      	str	r0, [sp, #0]
    ad72:	9101      	str	r1, [sp, #4]
    ad74:	9800      	ldr	r0, [sp, #0]
    ad76:	b002      	add	sp, #8
    ad78:	4770      	bx	lr

0000ad7a <_ZN4core6option15Option$LT$T$GT$6unwrap17h255bcb8f00b38aa5E>:
    ad7a:	b086      	sub	sp, #24
    ad7c:	9003      	str	r0, [sp, #12]
    ad7e:	9104      	str	r1, [sp, #16]
    ad80:	9803      	ldr	r0, [sp, #12]
    ad82:	2800      	cmp	r0, #0
    ad84:	9202      	str	r2, [sp, #8]
    ad86:	d001      	beq.n	ad8c <_ZN4core6option15Option$LT$T$GT$6unwrap17h255bcb8f00b38aa5E+0x12>
    ad88:	e7ff      	b.n	ad8a <_ZN4core6option15Option$LT$T$GT$6unwrap17h255bcb8f00b38aa5E+0x10>
    ad8a:	e009      	b.n	ada0 <_ZN4core6option15Option$LT$T$GT$6unwrap17h255bcb8f00b38aa5E+0x26>
    ad8c:	f64b 3089 	movw	r0, #48009	; 0xbb89
    ad90:	f2c0 0001 	movt	r0, #1
    ad94:	212b      	movs	r1, #43	; 0x2b
    ad96:	9a02      	ldr	r2, [sp, #8]
    ad98:	f009 ff03 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    ad9c:	defe      	udf	#254	; 0xfe
    ad9e:	defe      	udf	#254	; 0xfe
    ada0:	9804      	ldr	r0, [sp, #16]
    ada2:	9005      	str	r0, [sp, #20]
    ada4:	9805      	ldr	r0, [sp, #20]
    ada6:	9903      	ldr	r1, [sp, #12]
    ada8:	2901      	cmp	r1, #1
    adaa:	9001      	str	r0, [sp, #4]
    adac:	d103      	bne.n	adb6 <_ZN4core6option15Option$LT$T$GT$6unwrap17h255bcb8f00b38aa5E+0x3c>
    adae:	e7ff      	b.n	adb0 <_ZN4core6option15Option$LT$T$GT$6unwrap17h255bcb8f00b38aa5E+0x36>
    adb0:	9801      	ldr	r0, [sp, #4]
    adb2:	b006      	add	sp, #24
    adb4:	4770      	bx	lr
    adb6:	e7fb      	b.n	adb0 <_ZN4core6option15Option$LT$T$GT$6unwrap17h255bcb8f00b38aa5E+0x36>

0000adb8 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb672bbad4eb22d2eE>:
    adb8:	b082      	sub	sp, #8
    adba:	9000      	str	r0, [sp, #0]
    adbc:	9101      	str	r1, [sp, #4]
    adbe:	9800      	ldr	r0, [sp, #0]
    adc0:	9901      	ldr	r1, [sp, #4]
    adc2:	b002      	add	sp, #8
    adc4:	4770      	bx	lr

0000adc6 <_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h82016ab240bc76c1E>:
    adc6:	b580      	push	{r7, lr}
    adc8:	b086      	sub	sp, #24
    adca:	9003      	str	r0, [sp, #12]
    adcc:	9104      	str	r1, [sp, #16]
    adce:	9205      	str	r2, [sp, #20]
    add0:	9804      	ldr	r0, [sp, #16]
    add2:	9905      	ldr	r1, [sp, #20]
    add4:	f7ff ffcb 	bl	ad6e <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hb15824c4ec226a1aE>
    add8:	9002      	str	r0, [sp, #8]
    adda:	e7ff      	b.n	addc <_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h82016ab240bc76c1E+0x16>
    addc:	9903      	ldr	r1, [sp, #12]
    adde:	9802      	ldr	r0, [sp, #8]
    ade0:	f7ff ff81 	bl	ace6 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hf0edcec69a8db16aE>
    ade4:	9001      	str	r0, [sp, #4]
    ade6:	e7ff      	b.n	ade8 <_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h82016ab240bc76c1E+0x22>
    ade8:	9801      	ldr	r0, [sp, #4]
    adea:	b006      	add	sp, #24
    adec:	bd80      	pop	{r7, pc}

0000adee <_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h1f6404b74c72506bE>:
    adee:	b580      	push	{r7, lr}
    adf0:	b086      	sub	sp, #24
    adf2:	9003      	str	r0, [sp, #12]
    adf4:	9104      	str	r1, [sp, #16]
    adf6:	9205      	str	r2, [sp, #20]
    adf8:	9804      	ldr	r0, [sp, #16]
    adfa:	9905      	ldr	r1, [sp, #20]
    adfc:	f7ff ff98 	bl	ad30 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h38df1a24a1544322E>
    ae00:	9002      	str	r0, [sp, #8]
    ae02:	e7ff      	b.n	ae04 <_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h1f6404b74c72506bE+0x16>
    ae04:	9903      	ldr	r1, [sp, #12]
    ae06:	9802      	ldr	r0, [sp, #8]
    ae08:	f7ff ff53 	bl	acb2 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hebca7f595bbd41c0E>
    ae0c:	9001      	str	r0, [sp, #4]
    ae0e:	e7ff      	b.n	ae10 <_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h1f6404b74c72506bE+0x22>
    ae10:	9801      	ldr	r0, [sp, #4]
    ae12:	b006      	add	sp, #24
    ae14:	bd80      	pop	{r7, pc}

0000ae16 <_ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E>:
    ae16:	b580      	push	{r7, lr}
    ae18:	b086      	sub	sp, #24
    ae1a:	9003      	str	r0, [sp, #12]
    ae1c:	9104      	str	r1, [sp, #16]
    ae1e:	9205      	str	r2, [sp, #20]
    ae20:	2001      	movs	r0, #1
    ae22:	2800      	cmp	r0, #0
    ae24:	d117      	bne.n	ae56 <_ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E+0x40>
    ae26:	e7ff      	b.n	ae28 <_ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E+0x12>
    ae28:	9803      	ldr	r0, [sp, #12]
    ae2a:	f000 f854 	bl	aed6 <_ZN4core10intrinsics23is_aligned_and_not_null17h70462d8365aa8343E>
    ae2e:	9002      	str	r0, [sp, #8]
    ae30:	e7ff      	b.n	ae32 <_ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E+0x1c>
    ae32:	9802      	ldr	r0, [sp, #8]
    ae34:	07c1      	lsls	r1, r0, #31
    ae36:	2900      	cmp	r1, #0
    ae38:	d001      	beq.n	ae3e <_ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E+0x28>
    ae3a:	e7ff      	b.n	ae3c <_ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E+0x26>
    ae3c:	e00b      	b.n	ae56 <_ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E+0x40>
    ae3e:	f64b 30b4 	movw	r0, #48052	; 0xbbb4
    ae42:	f2c0 0001 	movt	r0, #1
    ae46:	f64b 422c 	movw	r2, #48172	; 0xbc2c
    ae4a:	f2c0 0201 	movt	r2, #1
    ae4e:	212e      	movs	r1, #46	; 0x2e
    ae50:	f009 fea7 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    ae54:	defe      	udf	#254	; 0xfe
    ae56:	2001      	movs	r0, #1
    ae58:	2800      	cmp	r0, #0
    ae5a:	d117      	bne.n	ae8c <_ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E+0x76>
    ae5c:	e7ff      	b.n	ae5e <_ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E+0x48>
    ae5e:	9804      	ldr	r0, [sp, #16]
    ae60:	f000 f839 	bl	aed6 <_ZN4core10intrinsics23is_aligned_and_not_null17h70462d8365aa8343E>
    ae64:	9001      	str	r0, [sp, #4]
    ae66:	e7ff      	b.n	ae68 <_ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E+0x52>
    ae68:	9801      	ldr	r0, [sp, #4]
    ae6a:	07c1      	lsls	r1, r0, #31
    ae6c:	2900      	cmp	r1, #0
    ae6e:	d001      	beq.n	ae74 <_ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E+0x5e>
    ae70:	e7ff      	b.n	ae72 <_ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E+0x5c>
    ae72:	e00b      	b.n	ae8c <_ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E+0x76>
    ae74:	f64b 403c 	movw	r0, #48188	; 0xbc3c
    ae78:	f2c0 0001 	movt	r0, #1
    ae7c:	f64b 422c 	movw	r2, #48172	; 0xbc2c
    ae80:	f2c0 0201 	movt	r2, #1
    ae84:	212c      	movs	r1, #44	; 0x2c
    ae86:	f009 fe8c 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    ae8a:	defe      	udf	#254	; 0xfe
    ae8c:	2001      	movs	r0, #1
    ae8e:	2800      	cmp	r0, #0
    ae90:	d119      	bne.n	aec6 <_ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E+0xb0>
    ae92:	e7ff      	b.n	ae94 <_ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E+0x7e>
    ae94:	9803      	ldr	r0, [sp, #12]
    ae96:	9904      	ldr	r1, [sp, #16]
    ae98:	9a05      	ldr	r2, [sp, #20]
    ae9a:	f000 f855 	bl	af48 <_ZN4core10intrinsics8overlaps17hdbd43f1750f1eb8aE>
    ae9e:	9000      	str	r0, [sp, #0]
    aea0:	e7ff      	b.n	aea2 <_ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E+0x8c>
    aea2:	9800      	ldr	r0, [sp, #0]
    aea4:	07c1      	lsls	r1, r0, #31
    aea6:	2900      	cmp	r1, #0
    aea8:	d101      	bne.n	aeae <_ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E+0x98>
    aeaa:	e7ff      	b.n	aeac <_ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E+0x96>
    aeac:	e00b      	b.n	aec6 <_ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E+0xb0>
    aeae:	f64b 4068 	movw	r0, #48232	; 0xbc68
    aeb2:	f2c0 0001 	movt	r0, #1
    aeb6:	f64b 422c 	movw	r2, #48172	; 0xbc2c
    aeba:	f2c0 0201 	movt	r2, #1
    aebe:	2125      	movs	r1, #37	; 0x25
    aec0:	f009 fe6f 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    aec4:	defe      	udf	#254	; 0xfe
    aec6:	9903      	ldr	r1, [sp, #12]
    aec8:	9804      	ldr	r0, [sp, #16]
    aeca:	9a05      	ldr	r2, [sp, #20]
    aecc:	f010 f80c 	bl	1aee8 <__aeabi_memcpy>
    aed0:	e7ff      	b.n	aed2 <_ZN4core10intrinsics19copy_nonoverlapping17hcae0bfcc388bb1d6E+0xbc>
    aed2:	b006      	add	sp, #24
    aed4:	bd80      	pop	{r7, pc}

0000aed6 <_ZN4core10intrinsics23is_aligned_and_not_null17h70462d8365aa8343E>:
    aed6:	b580      	push	{r7, lr}
    aed8:	b086      	sub	sp, #24
    aeda:	9003      	str	r0, [sp, #12]
    aedc:	9803      	ldr	r0, [sp, #12]
    aede:	f000 f8f3 	bl	b0c8 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h7f7bbc14858779f2E>
    aee2:	9002      	str	r0, [sp, #8]
    aee4:	e012      	b.n	af0c <_ZN4core10intrinsics23is_aligned_and_not_null17h70462d8365aa8343E+0x36>
    aee6:	2001      	movs	r0, #1
    aee8:	f88d 0013 	strb.w	r0, [sp, #19]
    aeec:	e00a      	b.n	af04 <_ZN4core10intrinsics23is_aligned_and_not_null17h70462d8365aa8343E+0x2e>
    aeee:	2000      	movs	r0, #0
    aef0:	f88d 0013 	strb.w	r0, [sp, #19]
    aef4:	e006      	b.n	af04 <_ZN4core10intrinsics23is_aligned_and_not_null17h70462d8365aa8343E+0x2e>
    aef6:	9803      	ldr	r0, [sp, #12]
    aef8:	2101      	movs	r1, #1
    aefa:	9105      	str	r1, [sp, #20]
    aefc:	9905      	ldr	r1, [sp, #20]
    aefe:	9001      	str	r0, [sp, #4]
    af00:	9100      	str	r1, [sp, #0]
    af02:	e008      	b.n	af16 <_ZN4core10intrinsics23is_aligned_and_not_null17h70462d8365aa8343E+0x40>
    af04:	f89d 0013 	ldrb.w	r0, [sp, #19]
    af08:	b006      	add	sp, #24
    af0a:	bd80      	pop	{r7, pc}
    af0c:	9802      	ldr	r0, [sp, #8]
    af0e:	07c1      	lsls	r1, r0, #31
    af10:	2900      	cmp	r1, #0
    af12:	d0f0      	beq.n	aef6 <_ZN4core10intrinsics23is_aligned_and_not_null17h70462d8365aa8343E+0x20>
    af14:	e7eb      	b.n	aeee <_ZN4core10intrinsics23is_aligned_and_not_null17h70462d8365aa8343E+0x18>
    af16:	9800      	ldr	r0, [sp, #0]
    af18:	2800      	cmp	r0, #0
    af1a:	d009      	beq.n	af30 <_ZN4core10intrinsics23is_aligned_and_not_null17h70462d8365aa8343E+0x5a>
    af1c:	e7ff      	b.n	af1e <_ZN4core10intrinsics23is_aligned_and_not_null17h70462d8365aa8343E+0x48>
    af1e:	9801      	ldr	r0, [sp, #4]
    af20:	9900      	ldr	r1, [sp, #0]
    af22:	fbb0 f2f1 	udiv	r2, r0, r1
    af26:	fb02 0211 	mls	r2, r2, r1, r0
    af2a:	2a00      	cmp	r2, #0
    af2c:	d0db      	beq.n	aee6 <_ZN4core10intrinsics23is_aligned_and_not_null17h70462d8365aa8343E+0x10>
    af2e:	e7de      	b.n	aeee <_ZN4core10intrinsics23is_aligned_and_not_null17h70462d8365aa8343E+0x18>
    af30:	f64b 40f0 	movw	r0, #48368	; 0xbcf0
    af34:	f2c0 0001 	movt	r0, #1
    af38:	f64b 42d8 	movw	r2, #48344	; 0xbcd8
    af3c:	f2c0 0201 	movt	r2, #1
    af40:	2139      	movs	r1, #57	; 0x39
    af42:	f009 fe2e 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    af46:	defe      	udf	#254	; 0xfe

0000af48 <_ZN4core10intrinsics8overlaps17hdbd43f1750f1eb8aE>:
    af48:	b580      	push	{r7, lr}
    af4a:	b08c      	sub	sp, #48	; 0x30
    af4c:	9004      	str	r0, [sp, #16]
    af4e:	9105      	str	r1, [sp, #20]
    af50:	9206      	str	r2, [sp, #24]
    af52:	9804      	ldr	r0, [sp, #16]
    af54:	9007      	str	r0, [sp, #28]
    af56:	9805      	ldr	r0, [sp, #20]
    af58:	9008      	str	r0, [sp, #32]
    af5a:	2001      	movs	r0, #1
    af5c:	900b      	str	r0, [sp, #44]	; 0x2c
    af5e:	980b      	ldr	r0, [sp, #44]	; 0x2c
    af60:	9003      	str	r0, [sp, #12]
    af62:	e7ff      	b.n	af64 <_ZN4core10intrinsics8overlaps17hdbd43f1750f1eb8aE+0x1c>
    af64:	9906      	ldr	r1, [sp, #24]
    af66:	9803      	ldr	r0, [sp, #12]
    af68:	f000 f825 	bl	afb6 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hb9815a64ffd59df2E>
    af6c:	9002      	str	r0, [sp, #8]
    af6e:	9101      	str	r1, [sp, #4]
    af70:	e7ff      	b.n	af72 <_ZN4core10intrinsics8overlaps17hdbd43f1750f1eb8aE+0x2a>
    af72:	f64b 522c 	movw	r2, #48428	; 0xbd2c
    af76:	f2c0 0201 	movt	r2, #1
    af7a:	9802      	ldr	r0, [sp, #8]
    af7c:	9901      	ldr	r1, [sp, #4]
    af7e:	f000 f908 	bl	b192 <_ZN4core6option15Option$LT$T$GT$6unwrap17h2f8655bc50e8a035E>
    af82:	9009      	str	r0, [sp, #36]	; 0x24
    af84:	e7ff      	b.n	af86 <_ZN4core10intrinsics8overlaps17hdbd43f1750f1eb8aE+0x3e>
    af86:	9807      	ldr	r0, [sp, #28]
    af88:	9908      	ldr	r1, [sp, #32]
    af8a:	4288      	cmp	r0, r1
    af8c:	d805      	bhi.n	af9a <_ZN4core10intrinsics8overlaps17hdbd43f1750f1eb8aE+0x52>
    af8e:	e7ff      	b.n	af90 <_ZN4core10intrinsics8overlaps17hdbd43f1750f1eb8aE+0x48>
    af90:	9808      	ldr	r0, [sp, #32]
    af92:	9907      	ldr	r1, [sp, #28]
    af94:	1a40      	subs	r0, r0, r1
    af96:	900a      	str	r0, [sp, #40]	; 0x28
    af98:	e004      	b.n	afa4 <_ZN4core10intrinsics8overlaps17hdbd43f1750f1eb8aE+0x5c>
    af9a:	9807      	ldr	r0, [sp, #28]
    af9c:	9908      	ldr	r1, [sp, #32]
    af9e:	1a40      	subs	r0, r0, r1
    afa0:	900a      	str	r0, [sp, #40]	; 0x28
    afa2:	e7ff      	b.n	afa4 <_ZN4core10intrinsics8overlaps17hdbd43f1750f1eb8aE+0x5c>
    afa4:	9809      	ldr	r0, [sp, #36]	; 0x24
    afa6:	990a      	ldr	r1, [sp, #40]	; 0x28
    afa8:	2200      	movs	r2, #0
    afaa:	4288      	cmp	r0, r1
    afac:	bf88      	it	hi
    afae:	2201      	movhi	r2, #1
    afb0:	4610      	mov	r0, r2
    afb2:	b00c      	add	sp, #48	; 0x30
    afb4:	bd80      	pop	{r7, pc}

0000afb6 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hb9815a64ffd59df2E>:
    afb6:	b580      	push	{r7, lr}
    afb8:	b088      	sub	sp, #32
    afba:	9002      	str	r0, [sp, #8]
    afbc:	9103      	str	r1, [sp, #12]
    afbe:	9802      	ldr	r0, [sp, #8]
    afc0:	9903      	ldr	r1, [sp, #12]
    afc2:	f000 f833 	bl	b02c <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17hf5fe5fe53f40a0a3E>
    afc6:	9001      	str	r0, [sp, #4]
    afc8:	9100      	str	r1, [sp, #0]
    afca:	e7ff      	b.n	afcc <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hb9815a64ffd59df2E+0x16>
    afcc:	9801      	ldr	r0, [sp, #4]
    afce:	9006      	str	r0, [sp, #24]
    afd0:	9900      	ldr	r1, [sp, #0]
    afd2:	f001 0201 	and.w	r2, r1, #1
    afd6:	f88d 201f 	strb.w	r2, [sp, #31]
    afda:	f89d 201f 	ldrb.w	r2, [sp, #31]
    afde:	07d2      	lsls	r2, r2, #31
    afe0:	2a00      	cmp	r2, #0
    afe2:	d105      	bne.n	aff0 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hb9815a64ffd59df2E+0x3a>
    afe4:	e7ff      	b.n	afe6 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hb9815a64ffd59df2E+0x30>
    afe6:	9806      	ldr	r0, [sp, #24]
    afe8:	9005      	str	r0, [sp, #20]
    afea:	2001      	movs	r0, #1
    afec:	9004      	str	r0, [sp, #16]
    afee:	e002      	b.n	aff6 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hb9815a64ffd59df2E+0x40>
    aff0:	2000      	movs	r0, #0
    aff2:	9004      	str	r0, [sp, #16]
    aff4:	e7ff      	b.n	aff6 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hb9815a64ffd59df2E+0x40>
    aff6:	9804      	ldr	r0, [sp, #16]
    aff8:	9905      	ldr	r1, [sp, #20]
    affa:	b008      	add	sp, #32
    affc:	bd80      	pop	{r7, pc}

0000affe <_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17haf166df4609a463eE>:
    affe:	b580      	push	{r7, lr}
    b000:	b086      	sub	sp, #24
    b002:	9004      	str	r0, [sp, #16]
    b004:	9105      	str	r1, [sp, #20]
    b006:	9804      	ldr	r0, [sp, #16]
    b008:	9905      	ldr	r1, [sp, #20]
    b00a:	f7ff ffd4 	bl	afb6 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hb9815a64ffd59df2E>
    b00e:	9003      	str	r0, [sp, #12]
    b010:	9102      	str	r1, [sp, #8]
    b012:	e7ff      	b.n	b014 <_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17haf166df4609a463eE+0x16>
    b014:	e7ff      	b.n	b016 <_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17haf166df4609a463eE+0x18>
    b016:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    b01a:	9803      	ldr	r0, [sp, #12]
    b01c:	9902      	ldr	r1, [sp, #8]
    b01e:	f000 f8d7 	bl	b1d0 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17hc2347d9007cef407E>
    b022:	9001      	str	r0, [sp, #4]
    b024:	e7ff      	b.n	b026 <_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17haf166df4609a463eE+0x28>
    b026:	9801      	ldr	r0, [sp, #4]
    b028:	b006      	add	sp, #24
    b02a:	bd80      	pop	{r7, pc}

0000b02c <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17hf5fe5fe53f40a0a3E>:
    b02c:	b08a      	sub	sp, #40	; 0x28
    b02e:	9002      	str	r0, [sp, #8]
    b030:	9103      	str	r1, [sp, #12]
    b032:	9802      	ldr	r0, [sp, #8]
    b034:	9903      	ldr	r1, [sp, #12]
    b036:	fba0 0101 	umull	r0, r1, r0, r1
    b03a:	2900      	cmp	r1, #0
    b03c:	bf18      	it	ne
    b03e:	2101      	movne	r1, #1
    b040:	9008      	str	r0, [sp, #32]
    b042:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
    b046:	9808      	ldr	r0, [sp, #32]
    b048:	f89d 1024 	ldrb.w	r1, [sp, #36]	; 0x24
    b04c:	9001      	str	r0, [sp, #4]
    b04e:	9100      	str	r1, [sp, #0]
    b050:	e7ff      	b.n	b052 <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17hf5fe5fe53f40a0a3E+0x26>
    b052:	9801      	ldr	r0, [sp, #4]
    b054:	9006      	str	r0, [sp, #24]
    b056:	9900      	ldr	r1, [sp, #0]
    b058:	f001 0201 	and.w	r2, r1, #1
    b05c:	f88d 201f 	strb.w	r2, [sp, #31]
    b060:	9a06      	ldr	r2, [sp, #24]
    b062:	f89d 301f 	ldrb.w	r3, [sp, #31]
    b066:	9204      	str	r2, [sp, #16]
    b068:	f88d 3014 	strb.w	r3, [sp, #20]
    b06c:	9804      	ldr	r0, [sp, #16]
    b06e:	f89d 1014 	ldrb.w	r1, [sp, #20]
    b072:	b00a      	add	sp, #40	; 0x28
    b074:	4770      	bx	lr

0000b076 <_ZN4core3ptr20slice_from_raw_parts17hfaedf907ce179124E>:
    b076:	b086      	sub	sp, #24
    b078:	9000      	str	r0, [sp, #0]
    b07a:	9101      	str	r1, [sp, #4]
    b07c:	9800      	ldr	r0, [sp, #0]
    b07e:	9901      	ldr	r1, [sp, #4]
    b080:	9004      	str	r0, [sp, #16]
    b082:	9105      	str	r1, [sp, #20]
    b084:	9804      	ldr	r0, [sp, #16]
    b086:	9905      	ldr	r1, [sp, #20]
    b088:	9002      	str	r0, [sp, #8]
    b08a:	9103      	str	r1, [sp, #12]
    b08c:	9802      	ldr	r0, [sp, #8]
    b08e:	9903      	ldr	r1, [sp, #12]
    b090:	b006      	add	sp, #24
    b092:	4770      	bx	lr

0000b094 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h19237f4926dcce4bE>:
    b094:	b580      	push	{r7, lr}
    b096:	b084      	sub	sp, #16
    b098:	9002      	str	r0, [sp, #8]
    b09a:	9103      	str	r1, [sp, #12]
    b09c:	9802      	ldr	r0, [sp, #8]
    b09e:	9903      	ldr	r1, [sp, #12]
    b0a0:	f000 f805 	bl	b0ae <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h4da87e0ab10595f1E>
    b0a4:	9001      	str	r0, [sp, #4]
    b0a6:	e7ff      	b.n	b0a8 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h19237f4926dcce4bE+0x14>
    b0a8:	9801      	ldr	r0, [sp, #4]
    b0aa:	b004      	add	sp, #16
    b0ac:	bd80      	pop	{r7, pc}

0000b0ae <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h4da87e0ab10595f1E>:
    b0ae:	b084      	sub	sp, #16
    b0b0:	9001      	str	r0, [sp, #4]
    b0b2:	9102      	str	r1, [sp, #8]
    b0b4:	9801      	ldr	r0, [sp, #4]
    b0b6:	9902      	ldr	r1, [sp, #8]
    b0b8:	4408      	add	r0, r1
    b0ba:	9003      	str	r0, [sp, #12]
    b0bc:	9803      	ldr	r0, [sp, #12]
    b0be:	9000      	str	r0, [sp, #0]
    b0c0:	e7ff      	b.n	b0c2 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h4da87e0ab10595f1E+0x14>
    b0c2:	9800      	ldr	r0, [sp, #0]
    b0c4:	b004      	add	sp, #16
    b0c6:	4770      	bx	lr

0000b0c8 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h7f7bbc14858779f2E>:
    b0c8:	b082      	sub	sp, #8
    b0ca:	9001      	str	r0, [sp, #4]
    b0cc:	9801      	ldr	r0, [sp, #4]
    b0ce:	9000      	str	r0, [sp, #0]
    b0d0:	e7ff      	b.n	b0d2 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h7f7bbc14858779f2E+0xa>
    b0d2:	9800      	ldr	r0, [sp, #0]
    b0d4:	fab0 f180 	clz	r1, r0
    b0d8:	0948      	lsrs	r0, r1, #5
    b0da:	b002      	add	sp, #8
    b0dc:	4770      	bx	lr

0000b0de <_ZN4core5slice14from_raw_parts17h6405d6dfab25f666E>:
    b0de:	b580      	push	{r7, lr}
    b0e0:	b088      	sub	sp, #32
    b0e2:	9005      	str	r0, [sp, #20]
    b0e4:	9106      	str	r1, [sp, #24]
    b0e6:	2001      	movs	r0, #1
    b0e8:	2800      	cmp	r0, #0
    b0ea:	d117      	bne.n	b11c <_ZN4core5slice14from_raw_parts17h6405d6dfab25f666E+0x3e>
    b0ec:	e7ff      	b.n	b0ee <_ZN4core5slice14from_raw_parts17h6405d6dfab25f666E+0x10>
    b0ee:	9805      	ldr	r0, [sp, #20]
    b0f0:	f7ff fef1 	bl	aed6 <_ZN4core10intrinsics23is_aligned_and_not_null17h70462d8365aa8343E>
    b0f4:	9004      	str	r0, [sp, #16]
    b0f6:	e7ff      	b.n	b0f8 <_ZN4core5slice14from_raw_parts17h6405d6dfab25f666E+0x1a>
    b0f8:	9804      	ldr	r0, [sp, #16]
    b0fa:	07c1      	lsls	r1, r0, #31
    b0fc:	2900      	cmp	r1, #0
    b0fe:	d001      	beq.n	b104 <_ZN4core5slice14from_raw_parts17h6405d6dfab25f666E+0x26>
    b100:	e7ff      	b.n	b102 <_ZN4core5slice14from_raw_parts17h6405d6dfab25f666E+0x24>
    b102:	e00b      	b.n	b11c <_ZN4core5slice14from_raw_parts17h6405d6dfab25f666E+0x3e>
    b104:	f64b 503c 	movw	r0, #48444	; 0xbd3c
    b108:	f2c0 0001 	movt	r0, #1
    b10c:	f64b 422c 	movw	r2, #48172	; 0xbc2c
    b110:	f2c0 0201 	movt	r2, #1
    b114:	2129      	movs	r1, #41	; 0x29
    b116:	f009 fd44 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    b11a:	defe      	udf	#254	; 0xfe
    b11c:	2001      	movs	r0, #1
    b11e:	2800      	cmp	r0, #0
    b120:	d11c      	bne.n	b15c <_ZN4core5slice14from_raw_parts17h6405d6dfab25f666E+0x7e>
    b122:	e7ff      	b.n	b124 <_ZN4core5slice14from_raw_parts17h6405d6dfab25f666E+0x46>
    b124:	2001      	movs	r0, #1
    b126:	9007      	str	r0, [sp, #28]
    b128:	9807      	ldr	r0, [sp, #28]
    b12a:	9003      	str	r0, [sp, #12]
    b12c:	e7ff      	b.n	b12e <_ZN4core5slice14from_raw_parts17h6405d6dfab25f666E+0x50>
    b12e:	9906      	ldr	r1, [sp, #24]
    b130:	9803      	ldr	r0, [sp, #12]
    b132:	f7ff ff64 	bl	affe <_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17haf166df4609a463eE>
    b136:	9002      	str	r0, [sp, #8]
    b138:	e7ff      	b.n	b13a <_ZN4core5slice14from_raw_parts17h6405d6dfab25f666E+0x5c>
    b13a:	9802      	ldr	r0, [sp, #8]
    b13c:	2800      	cmp	r0, #0
    b13e:	d401      	bmi.n	b144 <_ZN4core5slice14from_raw_parts17h6405d6dfab25f666E+0x66>
    b140:	e7ff      	b.n	b142 <_ZN4core5slice14from_raw_parts17h6405d6dfab25f666E+0x64>
    b142:	e00b      	b.n	b15c <_ZN4core5slice14from_raw_parts17h6405d6dfab25f666E+0x7e>
    b144:	f64b 5065 	movw	r0, #48485	; 0xbd65
    b148:	f2c0 0001 	movt	r0, #1
    b14c:	f64b 422c 	movw	r2, #48172	; 0xbc2c
    b150:	f2c0 0201 	movt	r2, #1
    b154:	2140      	movs	r1, #64	; 0x40
    b156:	f009 fd24 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    b15a:	defe      	udf	#254	; 0xfe
    b15c:	9805      	ldr	r0, [sp, #20]
    b15e:	9906      	ldr	r1, [sp, #24]
    b160:	f7ff ff89 	bl	b076 <_ZN4core3ptr20slice_from_raw_parts17hfaedf907ce179124E>
    b164:	9001      	str	r0, [sp, #4]
    b166:	9100      	str	r1, [sp, #0]
    b168:	e7ff      	b.n	b16a <_ZN4core5slice14from_raw_parts17h6405d6dfab25f666E+0x8c>
    b16a:	9801      	ldr	r0, [sp, #4]
    b16c:	9900      	ldr	r1, [sp, #0]
    b16e:	b008      	add	sp, #32
    b170:	bd80      	pop	{r7, pc}

0000b172 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h907d3987d88ed00aE>:
    b172:	b084      	sub	sp, #16
    b174:	9000      	str	r0, [sp, #0]
    b176:	9101      	str	r1, [sp, #4]
    b178:	9800      	ldr	r0, [sp, #0]
    b17a:	9901      	ldr	r1, [sp, #4]
    b17c:	9002      	str	r0, [sp, #8]
    b17e:	9103      	str	r1, [sp, #12]
    b180:	9803      	ldr	r0, [sp, #12]
    b182:	b004      	add	sp, #16
    b184:	4770      	bx	lr

0000b186 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h012fcf8713dd6308E>:
    b186:	b082      	sub	sp, #8
    b188:	9000      	str	r0, [sp, #0]
    b18a:	9101      	str	r1, [sp, #4]
    b18c:	9800      	ldr	r0, [sp, #0]
    b18e:	b002      	add	sp, #8
    b190:	4770      	bx	lr

0000b192 <_ZN4core6option15Option$LT$T$GT$6unwrap17h2f8655bc50e8a035E>:
    b192:	b086      	sub	sp, #24
    b194:	9003      	str	r0, [sp, #12]
    b196:	9104      	str	r1, [sp, #16]
    b198:	9803      	ldr	r0, [sp, #12]
    b19a:	2800      	cmp	r0, #0
    b19c:	9202      	str	r2, [sp, #8]
    b19e:	d001      	beq.n	b1a4 <_ZN4core6option15Option$LT$T$GT$6unwrap17h2f8655bc50e8a035E+0x12>
    b1a0:	e7ff      	b.n	b1a2 <_ZN4core6option15Option$LT$T$GT$6unwrap17h2f8655bc50e8a035E+0x10>
    b1a2:	e009      	b.n	b1b8 <_ZN4core6option15Option$LT$T$GT$6unwrap17h2f8655bc50e8a035E+0x26>
    b1a4:	f64b 50a5 	movw	r0, #48549	; 0xbda5
    b1a8:	f2c0 0001 	movt	r0, #1
    b1ac:	212b      	movs	r1, #43	; 0x2b
    b1ae:	9a02      	ldr	r2, [sp, #8]
    b1b0:	f009 fcf7 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    b1b4:	defe      	udf	#254	; 0xfe
    b1b6:	defe      	udf	#254	; 0xfe
    b1b8:	9804      	ldr	r0, [sp, #16]
    b1ba:	9005      	str	r0, [sp, #20]
    b1bc:	9805      	ldr	r0, [sp, #20]
    b1be:	9903      	ldr	r1, [sp, #12]
    b1c0:	2901      	cmp	r1, #1
    b1c2:	9001      	str	r0, [sp, #4]
    b1c4:	d103      	bne.n	b1ce <_ZN4core6option15Option$LT$T$GT$6unwrap17h2f8655bc50e8a035E+0x3c>
    b1c6:	e7ff      	b.n	b1c8 <_ZN4core6option15Option$LT$T$GT$6unwrap17h2f8655bc50e8a035E+0x36>
    b1c8:	9801      	ldr	r0, [sp, #4]
    b1ca:	b006      	add	sp, #24
    b1cc:	4770      	bx	lr
    b1ce:	e7fb      	b.n	b1c8 <_ZN4core6option15Option$LT$T$GT$6unwrap17h2f8655bc50e8a035E+0x36>

0000b1d0 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17hc2347d9007cef407E>:
    b1d0:	b086      	sub	sp, #24
    b1d2:	9000      	str	r0, [sp, #0]
    b1d4:	9101      	str	r1, [sp, #4]
    b1d6:	9202      	str	r2, [sp, #8]
    b1d8:	2000      	movs	r0, #0
    b1da:	f88d 0016 	strb.w	r0, [sp, #22]
    b1de:	f88d 0017 	strb.w	r0, [sp, #23]
    b1e2:	2001      	movs	r0, #1
    b1e4:	f88d 0017 	strb.w	r0, [sp, #23]
    b1e8:	f88d 0016 	strb.w	r0, [sp, #22]
    b1ec:	9800      	ldr	r0, [sp, #0]
    b1ee:	2800      	cmp	r0, #0
    b1f0:	d001      	beq.n	b1f6 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17hc2347d9007cef407E+0x26>
    b1f2:	e7ff      	b.n	b1f4 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17hc2347d9007cef407E+0x24>
    b1f4:	e006      	b.n	b204 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17hc2347d9007cef407E+0x34>
    b1f6:	2000      	movs	r0, #0
    b1f8:	f88d 0016 	strb.w	r0, [sp, #22]
    b1fc:	9802      	ldr	r0, [sp, #8]
    b1fe:	9003      	str	r0, [sp, #12]
    b200:	e010      	b.n	b224 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17hc2347d9007cef407E+0x54>
    b202:	defe      	udf	#254	; 0xfe
    b204:	2000      	movs	r0, #0
    b206:	f88d 0017 	strb.w	r0, [sp, #23]
    b20a:	9801      	ldr	r0, [sp, #4]
    b20c:	9004      	str	r0, [sp, #16]
    b20e:	9804      	ldr	r0, [sp, #16]
    b210:	9003      	str	r0, [sp, #12]
    b212:	e007      	b.n	b224 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17hc2347d9007cef407E+0x54>
    b214:	9800      	ldr	r0, [sp, #0]
    b216:	2801      	cmp	r0, #1
    b218:	d00d      	beq.n	b236 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17hc2347d9007cef407E+0x66>
    b21a:	e016      	b.n	b24a <_ZN4core6option15Option$LT$T$GT$9unwrap_or17hc2347d9007cef407E+0x7a>
    b21c:	2000      	movs	r0, #0
    b21e:	f88d 0016 	strb.w	r0, [sp, #22]
    b222:	e7f7      	b.n	b214 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17hc2347d9007cef407E+0x44>
    b224:	f89d 0016 	ldrb.w	r0, [sp, #22]
    b228:	07c0      	lsls	r0, r0, #31
    b22a:	2800      	cmp	r0, #0
    b22c:	d1f6      	bne.n	b21c <_ZN4core6option15Option$LT$T$GT$9unwrap_or17hc2347d9007cef407E+0x4c>
    b22e:	e7f1      	b.n	b214 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17hc2347d9007cef407E+0x44>
    b230:	9803      	ldr	r0, [sp, #12]
    b232:	b006      	add	sp, #24
    b234:	4770      	bx	lr
    b236:	f89d 0017 	ldrb.w	r0, [sp, #23]
    b23a:	07c0      	lsls	r0, r0, #31
    b23c:	2800      	cmp	r0, #0
    b23e:	d0f7      	beq.n	b230 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17hc2347d9007cef407E+0x60>
    b240:	e7ff      	b.n	b242 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17hc2347d9007cef407E+0x72>
    b242:	2000      	movs	r0, #0
    b244:	f88d 0017 	strb.w	r0, [sp, #23]
    b248:	e7f2      	b.n	b230 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17hc2347d9007cef407E+0x60>
    b24a:	e7f1      	b.n	b230 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17hc2347d9007cef407E+0x60>

0000b24c <_ZN6mynewt3hal3SPI3new17h061d50a8162355d0E>:
};

/// Rust Embedded HAL interface for Mynewt SPI
impl SPI {
    /// Create a new SPI port
    pub fn new() -> Self {
    b24c:	b082      	sub	sp, #8
    b24e:	2000      	movs	r0, #0
        SPI {
    b250:	9000      	str	r0, [sp, #0]
    b252:	9001      	str	r0, [sp, #4]
            spi_num: 0,
            cs_pin:  0,
        }
    }
    b254:	9800      	ldr	r0, [sp, #0]
    b256:	9901      	ldr	r1, [sp, #4]
    b258:	b002      	add	sp, #8
    b25a:	4770      	bx	lr

0000b25c <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E>:

    /// Initiaise the SPI port
    pub fn init(&mut self, spi_num: i32, cs_pin: i32, spi_settings: *mut hal::hal_spi_settings) 
    b25c:	b5b0      	push	{r4, r5, r7, lr}
    b25e:	b0fe      	sub	sp, #504	; 0x1f8
    b260:	901d      	str	r0, [sp, #116]	; 0x74
    b262:	911e      	str	r1, [sp, #120]	; 0x78
    b264:	921f      	str	r2, [sp, #124]	; 0x7c
    b266:	9320      	str	r3, [sp, #128]	; 0x80
        -> MynewtResult<()> {
        let rc = unsafe { hal::hal_spi_config(spi_num, spi_settings) };
    b268:	981e      	ldr	r0, [sp, #120]	; 0x78
    b26a:	9920      	ldr	r1, [sp, #128]	; 0x80
    b26c:	f00b ffc8 	bl	17200 <hal_spi_config>
    b270:	9021      	str	r0, [sp, #132]	; 0x84
    b272:	e7ff      	b.n	b274 <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0x18>
        assert_eq!(rc, 0, "spi config fail");
    b274:	f64b 50d0 	movw	r0, #48592	; 0xbdd0
    b278:	f2c0 0001 	movt	r0, #1
    b27c:	6800      	ldr	r0, [r0, #0]
    b27e:	a921      	add	r1, sp, #132	; 0x84
    b280:	9122      	str	r1, [sp, #136]	; 0x88
    b282:	9023      	str	r0, [sp, #140]	; 0x8c
    b284:	9822      	ldr	r0, [sp, #136]	; 0x88
    b286:	9024      	str	r0, [sp, #144]	; 0x90
    b288:	9823      	ldr	r0, [sp, #140]	; 0x8c
    b28a:	9025      	str	r0, [sp, #148]	; 0x94
    b28c:	9824      	ldr	r0, [sp, #144]	; 0x90
    b28e:	6800      	ldr	r0, [r0, #0]
    b290:	9925      	ldr	r1, [sp, #148]	; 0x94
    b292:	6809      	ldr	r1, [r1, #0]
    b294:	4288      	cmp	r0, r1
    b296:	d105      	bne.n	b2a4 <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0x48>
    b298:	e7ff      	b.n	b29a <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0x3e>

        let rc = unsafe { hal::hal_spi_enable(spi_num) };
    b29a:	981e      	ldr	r0, [sp, #120]	; 0x78
    b29c:	f00b ffcc 	bl	17238 <hal_spi_enable>
    b2a0:	9040      	str	r0, [sp, #256]	; 0x100
    b2a2:	e074      	b.n	b38e <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0x132>
        assert_eq!(rc, 0, "spi config fail");
    b2a4:	f64b 6028 	movw	r0, #48680	; 0xbe28
    b2a8:	f2c0 0001 	movt	r0, #1
    b2ac:	6801      	ldr	r1, [r0, #0]
    b2ae:	9824      	ldr	r0, [sp, #144]	; 0x90
    b2b0:	9035      	str	r0, [sp, #212]	; 0xd4
    b2b2:	9825      	ldr	r0, [sp, #148]	; 0x94
    b2b4:	9036      	str	r0, [sp, #216]	; 0xd8
    b2b6:	f64b 6044 	movw	r0, #48708	; 0xbe44
    b2ba:	f2c0 0001 	movt	r0, #1
    b2be:	6800      	ldr	r0, [r0, #0]
    b2c0:	f64b 6248 	movw	r2, #48712	; 0xbe48
    b2c4:	f2c0 0201 	movt	r2, #1
    b2c8:	6813      	ldr	r3, [r2, #0]
    b2ca:	466a      	mov	r2, sp
    b2cc:	f04f 0c00 	mov.w	ip, #0
    b2d0:	f8c2 c000 	str.w	ip, [r2]
    b2d4:	aa37      	add	r2, sp, #220	; 0xdc
    b2d6:	f04f 0c01 	mov.w	ip, #1
    b2da:	901c      	str	r0, [sp, #112]	; 0x70
    b2dc:	4610      	mov	r0, r2
    b2de:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    b2e0:	911b      	str	r1, [sp, #108]	; 0x6c
    b2e2:	4611      	mov	r1, r2
    b2e4:	4662      	mov	r2, ip
    b2e6:	f000 fd13 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
    b2ea:	e7ff      	b.n	b2ec <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0x90>
    b2ec:	a835      	add	r0, sp, #212	; 0xd4
    b2ee:	9032      	str	r0, [sp, #200]	; 0xc8
    b2f0:	a836      	add	r0, sp, #216	; 0xd8
    b2f2:	9033      	str	r0, [sp, #204]	; 0xcc
    b2f4:	a837      	add	r0, sp, #220	; 0xdc
    b2f6:	9034      	str	r0, [sp, #208]	; 0xd0
    b2f8:	9832      	ldr	r0, [sp, #200]	; 0xc8
    b2fa:	903d      	str	r0, [sp, #244]	; 0xf4
    b2fc:	9833      	ldr	r0, [sp, #204]	; 0xcc
    b2fe:	903e      	str	r0, [sp, #248]	; 0xf8
    b300:	9834      	ldr	r0, [sp, #208]	; 0xd0
    b302:	903f      	str	r0, [sp, #252]	; 0xfc
    b304:	983d      	ldr	r0, [sp, #244]	; 0xf4
    b306:	f64b 5189 	movw	r1, #48521	; 0xbd89
    b30a:	f2c0 0100 	movt	r1, #0
    b30e:	f000 fd5b 	bl	bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>
    b312:	901a      	str	r0, [sp, #104]	; 0x68
    b314:	9119      	str	r1, [sp, #100]	; 0x64
    b316:	e7ff      	b.n	b318 <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0xbc>
    b318:	983e      	ldr	r0, [sp, #248]	; 0xf8
    b31a:	f64b 5189 	movw	r1, #48521	; 0xbd89
    b31e:	f2c0 0100 	movt	r1, #0
    b322:	f000 fd51 	bl	bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>
    b326:	9018      	str	r0, [sp, #96]	; 0x60
    b328:	9117      	str	r1, [sp, #92]	; 0x5c
    b32a:	e7ff      	b.n	b32c <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0xd0>
    b32c:	983f      	ldr	r0, [sp, #252]	; 0xfc
    b32e:	f644 71c9 	movw	r1, #20425	; 0x4fc9
    b332:	f2c0 0101 	movt	r1, #1
    b336:	f000 fd86 	bl	be46 <_ZN4core3fmt10ArgumentV13new17hd6e40bd932949712E>
    b33a:	9016      	str	r0, [sp, #88]	; 0x58
    b33c:	9115      	str	r1, [sp, #84]	; 0x54
    b33e:	e7ff      	b.n	b340 <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0xe4>
    b340:	981a      	ldr	r0, [sp, #104]	; 0x68
    b342:	902c      	str	r0, [sp, #176]	; 0xb0
    b344:	9919      	ldr	r1, [sp, #100]	; 0x64
    b346:	912d      	str	r1, [sp, #180]	; 0xb4
    b348:	9a18      	ldr	r2, [sp, #96]	; 0x60
    b34a:	922e      	str	r2, [sp, #184]	; 0xb8
    b34c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    b34e:	932f      	str	r3, [sp, #188]	; 0xbc
    b350:	f8dd c058 	ldr.w	ip, [sp, #88]	; 0x58
    b354:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
    b358:	f8dd e054 	ldr.w	lr, [sp, #84]	; 0x54
    b35c:	f8cd e0c4 	str.w	lr, [sp, #196]	; 0xc4
    b360:	466c      	mov	r4, sp
    b362:	2503      	movs	r5, #3
    b364:	6025      	str	r5, [r4, #0]
    b366:	a826      	add	r0, sp, #152	; 0x98
    b368:	ab2c      	add	r3, sp, #176	; 0xb0
    b36a:	991b      	ldr	r1, [sp, #108]	; 0x6c
    b36c:	462a      	mov	r2, r5
    b36e:	f000 fccf 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
    b372:	e7ff      	b.n	b374 <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0x118>
    b374:	f64b 6064 	movw	r0, #48740	; 0xbe64
    b378:	f2c0 0001 	movt	r0, #1
    b37c:	f009 fc0a 	bl	14b94 <_ZN4core5panic8Location6caller17h63e50e3e41b8f68eE>
    b380:	9014      	str	r0, [sp, #80]	; 0x50
    b382:	e7ff      	b.n	b384 <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0x128>
    b384:	a826      	add	r0, sp, #152	; 0x98
    b386:	9914      	ldr	r1, [sp, #80]	; 0x50
    b388:	f009 fc41 	bl	14c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>
    b38c:	defe      	udf	#254	; 0xfe
        assert_eq!(rc, 0, "spi enable fail");
    b38e:	f64b 50d0 	movw	r0, #48592	; 0xbdd0
    b392:	f2c0 0001 	movt	r0, #1
    b396:	6800      	ldr	r0, [r0, #0]
    b398:	a940      	add	r1, sp, #256	; 0x100
    b39a:	9141      	str	r1, [sp, #260]	; 0x104
    b39c:	9042      	str	r0, [sp, #264]	; 0x108
    b39e:	9841      	ldr	r0, [sp, #260]	; 0x104
    b3a0:	9043      	str	r0, [sp, #268]	; 0x10c
    b3a2:	9842      	ldr	r0, [sp, #264]	; 0x108
    b3a4:	9044      	str	r0, [sp, #272]	; 0x110
    b3a6:	9843      	ldr	r0, [sp, #268]	; 0x10c
    b3a8:	6800      	ldr	r0, [r0, #0]
    b3aa:	9944      	ldr	r1, [sp, #272]	; 0x110
    b3ac:	6809      	ldr	r1, [r1, #0]
    b3ae:	4288      	cmp	r0, r1
    b3b0:	d106      	bne.n	b3c0 <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0x164>
    b3b2:	e7ff      	b.n	b3b4 <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0x158>

        let rc = unsafe { hal::hal_gpio_init_out(cs_pin, 1) };
    b3b4:	981f      	ldr	r0, [sp, #124]	; 0x7c
    b3b6:	2101      	movs	r1, #1
    b3b8:	f00b fb14 	bl	169e4 <hal_gpio_init_out>
    b3bc:	905f      	str	r0, [sp, #380]	; 0x17c
    b3be:	e074      	b.n	b4aa <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0x24e>
        assert_eq!(rc, 0, "spi enable fail");
    b3c0:	f64b 6028 	movw	r0, #48680	; 0xbe28
    b3c4:	f2c0 0001 	movt	r0, #1
    b3c8:	6801      	ldr	r1, [r0, #0]
    b3ca:	9843      	ldr	r0, [sp, #268]	; 0x10c
    b3cc:	9054      	str	r0, [sp, #336]	; 0x150
    b3ce:	9844      	ldr	r0, [sp, #272]	; 0x110
    b3d0:	9055      	str	r0, [sp, #340]	; 0x154
    b3d2:	f64b 608c 	movw	r0, #48780	; 0xbe8c
    b3d6:	f2c0 0001 	movt	r0, #1
    b3da:	6800      	ldr	r0, [r0, #0]
    b3dc:	f64b 6248 	movw	r2, #48712	; 0xbe48
    b3e0:	f2c0 0201 	movt	r2, #1
    b3e4:	6813      	ldr	r3, [r2, #0]
    b3e6:	466a      	mov	r2, sp
    b3e8:	f04f 0c00 	mov.w	ip, #0
    b3ec:	f8c2 c000 	str.w	ip, [r2]
    b3f0:	aa56      	add	r2, sp, #344	; 0x158
    b3f2:	f04f 0c01 	mov.w	ip, #1
    b3f6:	9013      	str	r0, [sp, #76]	; 0x4c
    b3f8:	4610      	mov	r0, r2
    b3fa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    b3fc:	9112      	str	r1, [sp, #72]	; 0x48
    b3fe:	4611      	mov	r1, r2
    b400:	4662      	mov	r2, ip
    b402:	f000 fc85 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
    b406:	e7ff      	b.n	b408 <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0x1ac>
    b408:	a854      	add	r0, sp, #336	; 0x150
    b40a:	9051      	str	r0, [sp, #324]	; 0x144
    b40c:	a855      	add	r0, sp, #340	; 0x154
    b40e:	9052      	str	r0, [sp, #328]	; 0x148
    b410:	a856      	add	r0, sp, #344	; 0x158
    b412:	9053      	str	r0, [sp, #332]	; 0x14c
    b414:	9851      	ldr	r0, [sp, #324]	; 0x144
    b416:	905c      	str	r0, [sp, #368]	; 0x170
    b418:	9852      	ldr	r0, [sp, #328]	; 0x148
    b41a:	905d      	str	r0, [sp, #372]	; 0x174
    b41c:	9853      	ldr	r0, [sp, #332]	; 0x14c
    b41e:	905e      	str	r0, [sp, #376]	; 0x178
    b420:	985c      	ldr	r0, [sp, #368]	; 0x170
    b422:	f64b 5189 	movw	r1, #48521	; 0xbd89
    b426:	f2c0 0100 	movt	r1, #0
    b42a:	f000 fccd 	bl	bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>
    b42e:	9011      	str	r0, [sp, #68]	; 0x44
    b430:	9110      	str	r1, [sp, #64]	; 0x40
    b432:	e7ff      	b.n	b434 <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0x1d8>
    b434:	985d      	ldr	r0, [sp, #372]	; 0x174
    b436:	f64b 5189 	movw	r1, #48521	; 0xbd89
    b43a:	f2c0 0100 	movt	r1, #0
    b43e:	f000 fcc3 	bl	bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>
    b442:	900f      	str	r0, [sp, #60]	; 0x3c
    b444:	910e      	str	r1, [sp, #56]	; 0x38
    b446:	e7ff      	b.n	b448 <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0x1ec>
    b448:	985e      	ldr	r0, [sp, #376]	; 0x178
    b44a:	f644 71c9 	movw	r1, #20425	; 0x4fc9
    b44e:	f2c0 0101 	movt	r1, #1
    b452:	f000 fcf8 	bl	be46 <_ZN4core3fmt10ArgumentV13new17hd6e40bd932949712E>
    b456:	900d      	str	r0, [sp, #52]	; 0x34
    b458:	910c      	str	r1, [sp, #48]	; 0x30
    b45a:	e7ff      	b.n	b45c <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0x200>
    b45c:	9811      	ldr	r0, [sp, #68]	; 0x44
    b45e:	904b      	str	r0, [sp, #300]	; 0x12c
    b460:	9910      	ldr	r1, [sp, #64]	; 0x40
    b462:	914c      	str	r1, [sp, #304]	; 0x130
    b464:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    b466:	924d      	str	r2, [sp, #308]	; 0x134
    b468:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    b46a:	934e      	str	r3, [sp, #312]	; 0x138
    b46c:	f8dd c034 	ldr.w	ip, [sp, #52]	; 0x34
    b470:	f8cd c13c 	str.w	ip, [sp, #316]	; 0x13c
    b474:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
    b478:	f8cd e140 	str.w	lr, [sp, #320]	; 0x140
    b47c:	466c      	mov	r4, sp
    b47e:	2503      	movs	r5, #3
    b480:	6025      	str	r5, [r4, #0]
    b482:	a845      	add	r0, sp, #276	; 0x114
    b484:	ab4b      	add	r3, sp, #300	; 0x12c
    b486:	9912      	ldr	r1, [sp, #72]	; 0x48
    b488:	462a      	mov	r2, r5
    b48a:	f000 fc41 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
    b48e:	e7ff      	b.n	b490 <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0x234>
    b490:	f64b 6090 	movw	r0, #48784	; 0xbe90
    b494:	f2c0 0001 	movt	r0, #1
    b498:	f009 fb7c 	bl	14b94 <_ZN4core5panic8Location6caller17h63e50e3e41b8f68eE>
    b49c:	900b      	str	r0, [sp, #44]	; 0x2c
    b49e:	e7ff      	b.n	b4a0 <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0x244>
    b4a0:	a845      	add	r0, sp, #276	; 0x114
    b4a2:	990b      	ldr	r1, [sp, #44]	; 0x2c
    b4a4:	f009 fbb3 	bl	14c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>
    b4a8:	defe      	udf	#254	; 0xfe
        assert_eq!(rc, 0, "spi init fail");
    b4aa:	f64b 50d0 	movw	r0, #48592	; 0xbdd0
    b4ae:	f2c0 0001 	movt	r0, #1
    b4b2:	6800      	ldr	r0, [r0, #0]
    b4b4:	a95f      	add	r1, sp, #380	; 0x17c
    b4b6:	9160      	str	r1, [sp, #384]	; 0x180
    b4b8:	9061      	str	r0, [sp, #388]	; 0x184
    b4ba:	9860      	ldr	r0, [sp, #384]	; 0x180
    b4bc:	9062      	str	r0, [sp, #392]	; 0x188
    b4be:	9861      	ldr	r0, [sp, #388]	; 0x184
    b4c0:	9063      	str	r0, [sp, #396]	; 0x18c
    b4c2:	9862      	ldr	r0, [sp, #392]	; 0x188
    b4c4:	6800      	ldr	r0, [r0, #0]
    b4c6:	9963      	ldr	r1, [sp, #396]	; 0x18c
    b4c8:	6809      	ldr	r1, [r1, #0]
    b4ca:	4288      	cmp	r0, r1
    b4cc:	d109      	bne.n	b4e2 <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0x286>
    b4ce:	e7ff      	b.n	b4d0 <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0x274>
        self.spi_num = spi_num;
    b4d0:	981e      	ldr	r0, [sp, #120]	; 0x78
    b4d2:	991d      	ldr	r1, [sp, #116]	; 0x74
    b4d4:	6008      	str	r0, [r1, #0]
        self.cs_pin  = cs_pin;
    b4d6:	981f      	ldr	r0, [sp, #124]	; 0x7c
    b4d8:	991d      	ldr	r1, [sp, #116]	; 0x74
    b4da:	6048      	str	r0, [r1, #4]
    b4dc:	2001      	movs	r0, #1
        Ok(())
    }
    b4de:	b07e      	add	sp, #504	; 0x1f8
    b4e0:	bdb0      	pop	{r4, r5, r7, pc}
        assert_eq!(rc, 0, "spi init fail");
    b4e2:	f64b 6028 	movw	r0, #48680	; 0xbe28
    b4e6:	f2c0 0001 	movt	r0, #1
    b4ea:	6801      	ldr	r1, [r0, #0]
    b4ec:	9862      	ldr	r0, [sp, #392]	; 0x188
    b4ee:	9073      	str	r0, [sp, #460]	; 0x1cc
    b4f0:	9863      	ldr	r0, [sp, #396]	; 0x18c
    b4f2:	9074      	str	r0, [sp, #464]	; 0x1d0
    b4f4:	f64b 60b8 	movw	r0, #48824	; 0xbeb8
    b4f8:	f2c0 0001 	movt	r0, #1
    b4fc:	6800      	ldr	r0, [r0, #0]
    b4fe:	f64b 6248 	movw	r2, #48712	; 0xbe48
    b502:	f2c0 0201 	movt	r2, #1
    b506:	6813      	ldr	r3, [r2, #0]
    b508:	466a      	mov	r2, sp
    b50a:	f04f 0c00 	mov.w	ip, #0
    b50e:	f8c2 c000 	str.w	ip, [r2]
    b512:	aa75      	add	r2, sp, #468	; 0x1d4
    b514:	f04f 0c01 	mov.w	ip, #1
    b518:	900a      	str	r0, [sp, #40]	; 0x28
    b51a:	4610      	mov	r0, r2
    b51c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    b51e:	9109      	str	r1, [sp, #36]	; 0x24
    b520:	4611      	mov	r1, r2
    b522:	4662      	mov	r2, ip
    b524:	f000 fbf4 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
    b528:	e7ff      	b.n	b52a <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0x2ce>
    b52a:	a873      	add	r0, sp, #460	; 0x1cc
    b52c:	9070      	str	r0, [sp, #448]	; 0x1c0
    b52e:	a874      	add	r0, sp, #464	; 0x1d0
    b530:	9071      	str	r0, [sp, #452]	; 0x1c4
    b532:	a875      	add	r0, sp, #468	; 0x1d4
    b534:	9072      	str	r0, [sp, #456]	; 0x1c8
    b536:	9870      	ldr	r0, [sp, #448]	; 0x1c0
    b538:	907b      	str	r0, [sp, #492]	; 0x1ec
    b53a:	9871      	ldr	r0, [sp, #452]	; 0x1c4
    b53c:	907c      	str	r0, [sp, #496]	; 0x1f0
    b53e:	9872      	ldr	r0, [sp, #456]	; 0x1c8
    b540:	907d      	str	r0, [sp, #500]	; 0x1f4
    b542:	987b      	ldr	r0, [sp, #492]	; 0x1ec
    b544:	f64b 5189 	movw	r1, #48521	; 0xbd89
    b548:	f2c0 0100 	movt	r1, #0
    b54c:	f000 fc3c 	bl	bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>
    b550:	9008      	str	r0, [sp, #32]
    b552:	9107      	str	r1, [sp, #28]
    b554:	e7ff      	b.n	b556 <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0x2fa>
    b556:	987c      	ldr	r0, [sp, #496]	; 0x1f0
    b558:	f64b 5189 	movw	r1, #48521	; 0xbd89
    b55c:	f2c0 0100 	movt	r1, #0
    b560:	f000 fc32 	bl	bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>
    b564:	9006      	str	r0, [sp, #24]
    b566:	9105      	str	r1, [sp, #20]
    b568:	e7ff      	b.n	b56a <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0x30e>
    b56a:	987d      	ldr	r0, [sp, #500]	; 0x1f4
    b56c:	f644 71c9 	movw	r1, #20425	; 0x4fc9
    b570:	f2c0 0101 	movt	r1, #1
    b574:	f000 fc67 	bl	be46 <_ZN4core3fmt10ArgumentV13new17hd6e40bd932949712E>
    b578:	9004      	str	r0, [sp, #16]
    b57a:	9103      	str	r1, [sp, #12]
    b57c:	e7ff      	b.n	b57e <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0x322>
    b57e:	9808      	ldr	r0, [sp, #32]
    b580:	906a      	str	r0, [sp, #424]	; 0x1a8
    b582:	9907      	ldr	r1, [sp, #28]
    b584:	916b      	str	r1, [sp, #428]	; 0x1ac
    b586:	9a06      	ldr	r2, [sp, #24]
    b588:	926c      	str	r2, [sp, #432]	; 0x1b0
    b58a:	9b05      	ldr	r3, [sp, #20]
    b58c:	936d      	str	r3, [sp, #436]	; 0x1b4
    b58e:	f8dd c010 	ldr.w	ip, [sp, #16]
    b592:	f8cd c1b8 	str.w	ip, [sp, #440]	; 0x1b8
    b596:	f8dd e00c 	ldr.w	lr, [sp, #12]
    b59a:	f8cd e1bc 	str.w	lr, [sp, #444]	; 0x1bc
    b59e:	466c      	mov	r4, sp
    b5a0:	2503      	movs	r5, #3
    b5a2:	6025      	str	r5, [r4, #0]
    b5a4:	a864      	add	r0, sp, #400	; 0x190
    b5a6:	ab6a      	add	r3, sp, #424	; 0x1a8
    b5a8:	9909      	ldr	r1, [sp, #36]	; 0x24
    b5aa:	462a      	mov	r2, r5
    b5ac:	f000 fbb0 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
    b5b0:	e7ff      	b.n	b5b2 <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0x356>
    b5b2:	f64b 60bc 	movw	r0, #48828	; 0xbebc
    b5b6:	f2c0 0001 	movt	r0, #1
    b5ba:	f009 faeb 	bl	14b94 <_ZN4core5panic8Location6caller17h63e50e3e41b8f68eE>
    b5be:	9002      	str	r0, [sp, #8]
    b5c0:	e7ff      	b.n	b5c2 <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E+0x366>
    b5c2:	a864      	add	r0, sp, #400	; 0x190
    b5c4:	9902      	ldr	r1, [sp, #8]
    b5c6:	f009 fb22 	bl	14c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>
    b5ca:	defe      	udf	#254	; 0xfe

0000b5cc <_ZN6mynewt3hal4GPIO3new17heb9fbb7cf70124f8E>:
}

/// Rust Embedded HAL interface for Mynewt GPIO
impl GPIO {
    /// Create a new output GPIO pin
    pub fn new() -> Self {
    b5cc:	2000      	movs	r0, #0
        GPIO {
            pin: 0,
        }
    }
    b5ce:	4770      	bx	lr

0000b5d0 <_ZN6mynewt3hal4GPIO4init17hdfa14af4722bc4f0E>:

    /// Initialise the output GPIO pin
    pub fn init(&mut self, pin: i32) -> MynewtResult<()> {
    b5d0:	b5b0      	push	{r4, r5, r7, lr}
    b5d2:	b0ac      	sub	sp, #176	; 0xb0
    b5d4:	900b      	str	r0, [sp, #44]	; 0x2c
    b5d6:	910c      	str	r1, [sp, #48]	; 0x30
        //  TODO: let dc = pins.d0.into_push_pull_output(&mut pins.port);
        //  TODO: let rst = pins.d1.into_push_pull_output(&mut pins.port);
        let rc = unsafe { hal::hal_gpio_init_out(pin, 0) };
    b5d8:	980c      	ldr	r0, [sp, #48]	; 0x30
    b5da:	2100      	movs	r1, #0
    b5dc:	f00b fa02 	bl	169e4 <hal_gpio_init_out>
    b5e0:	900d      	str	r0, [sp, #52]	; 0x34
    b5e2:	e7ff      	b.n	b5e4 <_ZN6mynewt3hal4GPIO4init17hdfa14af4722bc4f0E+0x14>
        assert_eq!(rc, 0, "gpio fail");
    b5e4:	f64b 50d0 	movw	r0, #48592	; 0xbdd0
    b5e8:	f2c0 0001 	movt	r0, #1
    b5ec:	6800      	ldr	r0, [r0, #0]
    b5ee:	a90d      	add	r1, sp, #52	; 0x34
    b5f0:	910e      	str	r1, [sp, #56]	; 0x38
    b5f2:	900f      	str	r0, [sp, #60]	; 0x3c
    b5f4:	980e      	ldr	r0, [sp, #56]	; 0x38
    b5f6:	9010      	str	r0, [sp, #64]	; 0x40
    b5f8:	980f      	ldr	r0, [sp, #60]	; 0x3c
    b5fa:	9011      	str	r0, [sp, #68]	; 0x44
    b5fc:	9810      	ldr	r0, [sp, #64]	; 0x40
    b5fe:	6800      	ldr	r0, [r0, #0]
    b600:	9911      	ldr	r1, [sp, #68]	; 0x44
    b602:	6809      	ldr	r1, [r1, #0]
    b604:	4288      	cmp	r0, r1
    b606:	d106      	bne.n	b616 <_ZN6mynewt3hal4GPIO4init17hdfa14af4722bc4f0E+0x46>
    b608:	e7ff      	b.n	b60a <_ZN6mynewt3hal4GPIO4init17hdfa14af4722bc4f0E+0x3a>
        self.pin = pin;
    b60a:	980c      	ldr	r0, [sp, #48]	; 0x30
    b60c:	990b      	ldr	r1, [sp, #44]	; 0x2c
    b60e:	6008      	str	r0, [r1, #0]
    b610:	2001      	movs	r0, #1
        Ok(())
    }
    b612:	b02c      	add	sp, #176	; 0xb0
    b614:	bdb0      	pop	{r4, r5, r7, pc}
        assert_eq!(rc, 0, "gpio fail");
    b616:	f64b 6028 	movw	r0, #48680	; 0xbe28
    b61a:	f2c0 0001 	movt	r0, #1
    b61e:	6801      	ldr	r1, [r0, #0]
    b620:	9810      	ldr	r0, [sp, #64]	; 0x40
    b622:	9021      	str	r0, [sp, #132]	; 0x84
    b624:	9811      	ldr	r0, [sp, #68]	; 0x44
    b626:	9022      	str	r0, [sp, #136]	; 0x88
    b628:	f64b 60e0 	movw	r0, #48864	; 0xbee0
    b62c:	f2c0 0001 	movt	r0, #1
    b630:	6800      	ldr	r0, [r0, #0]
    b632:	f64b 6248 	movw	r2, #48712	; 0xbe48
    b636:	f2c0 0201 	movt	r2, #1
    b63a:	6813      	ldr	r3, [r2, #0]
    b63c:	466a      	mov	r2, sp
    b63e:	f04f 0c00 	mov.w	ip, #0
    b642:	f8c2 c000 	str.w	ip, [r2]
    b646:	aa23      	add	r2, sp, #140	; 0x8c
    b648:	f04f 0c01 	mov.w	ip, #1
    b64c:	900a      	str	r0, [sp, #40]	; 0x28
    b64e:	4610      	mov	r0, r2
    b650:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    b652:	9109      	str	r1, [sp, #36]	; 0x24
    b654:	4611      	mov	r1, r2
    b656:	4662      	mov	r2, ip
    b658:	f000 fb5a 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
    b65c:	e7ff      	b.n	b65e <_ZN6mynewt3hal4GPIO4init17hdfa14af4722bc4f0E+0x8e>
    b65e:	a821      	add	r0, sp, #132	; 0x84
    b660:	901e      	str	r0, [sp, #120]	; 0x78
    b662:	a822      	add	r0, sp, #136	; 0x88
    b664:	901f      	str	r0, [sp, #124]	; 0x7c
    b666:	a823      	add	r0, sp, #140	; 0x8c
    b668:	9020      	str	r0, [sp, #128]	; 0x80
    b66a:	981e      	ldr	r0, [sp, #120]	; 0x78
    b66c:	9029      	str	r0, [sp, #164]	; 0xa4
    b66e:	981f      	ldr	r0, [sp, #124]	; 0x7c
    b670:	902a      	str	r0, [sp, #168]	; 0xa8
    b672:	9820      	ldr	r0, [sp, #128]	; 0x80
    b674:	902b      	str	r0, [sp, #172]	; 0xac
    b676:	9829      	ldr	r0, [sp, #164]	; 0xa4
    b678:	f64b 5189 	movw	r1, #48521	; 0xbd89
    b67c:	f2c0 0100 	movt	r1, #0
    b680:	f000 fba2 	bl	bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>
    b684:	9008      	str	r0, [sp, #32]
    b686:	9107      	str	r1, [sp, #28]
    b688:	e7ff      	b.n	b68a <_ZN6mynewt3hal4GPIO4init17hdfa14af4722bc4f0E+0xba>
    b68a:	982a      	ldr	r0, [sp, #168]	; 0xa8
    b68c:	f64b 5189 	movw	r1, #48521	; 0xbd89
    b690:	f2c0 0100 	movt	r1, #0
    b694:	f000 fb98 	bl	bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>
    b698:	9006      	str	r0, [sp, #24]
    b69a:	9105      	str	r1, [sp, #20]
    b69c:	e7ff      	b.n	b69e <_ZN6mynewt3hal4GPIO4init17hdfa14af4722bc4f0E+0xce>
    b69e:	982b      	ldr	r0, [sp, #172]	; 0xac
    b6a0:	f644 71c9 	movw	r1, #20425	; 0x4fc9
    b6a4:	f2c0 0101 	movt	r1, #1
    b6a8:	f000 fbcd 	bl	be46 <_ZN4core3fmt10ArgumentV13new17hd6e40bd932949712E>
    b6ac:	9004      	str	r0, [sp, #16]
    b6ae:	9103      	str	r1, [sp, #12]
    b6b0:	e7ff      	b.n	b6b2 <_ZN6mynewt3hal4GPIO4init17hdfa14af4722bc4f0E+0xe2>
    b6b2:	9808      	ldr	r0, [sp, #32]
    b6b4:	9018      	str	r0, [sp, #96]	; 0x60
    b6b6:	9907      	ldr	r1, [sp, #28]
    b6b8:	9119      	str	r1, [sp, #100]	; 0x64
    b6ba:	9a06      	ldr	r2, [sp, #24]
    b6bc:	921a      	str	r2, [sp, #104]	; 0x68
    b6be:	9b05      	ldr	r3, [sp, #20]
    b6c0:	931b      	str	r3, [sp, #108]	; 0x6c
    b6c2:	f8dd c010 	ldr.w	ip, [sp, #16]
    b6c6:	f8cd c070 	str.w	ip, [sp, #112]	; 0x70
    b6ca:	f8dd e00c 	ldr.w	lr, [sp, #12]
    b6ce:	f8cd e074 	str.w	lr, [sp, #116]	; 0x74
    b6d2:	466c      	mov	r4, sp
    b6d4:	2503      	movs	r5, #3
    b6d6:	6025      	str	r5, [r4, #0]
    b6d8:	a812      	add	r0, sp, #72	; 0x48
    b6da:	ab18      	add	r3, sp, #96	; 0x60
    b6dc:	9909      	ldr	r1, [sp, #36]	; 0x24
    b6de:	462a      	mov	r2, r5
    b6e0:	f000 fb16 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
    b6e4:	e7ff      	b.n	b6e6 <_ZN6mynewt3hal4GPIO4init17hdfa14af4722bc4f0E+0x116>
    b6e6:	f64b 60e4 	movw	r0, #48868	; 0xbee4
    b6ea:	f2c0 0001 	movt	r0, #1
    b6ee:	f009 fa51 	bl	14b94 <_ZN4core5panic8Location6caller17h63e50e3e41b8f68eE>
    b6f2:	9002      	str	r0, [sp, #8]
    b6f4:	e7ff      	b.n	b6f6 <_ZN6mynewt3hal4GPIO4init17hdfa14af4722bc4f0E+0x126>
    b6f6:	a812      	add	r0, sp, #72	; 0x48
    b6f8:	9902      	ldr	r1, [sp, #8]
    b6fa:	f009 fa88 	bl	14c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>
    b6fe:	defe      	udf	#254	; 0xfe

0000b700 <_ZN74_$LT$mynewt..hal..GPIO$u20$as$u20$embedded_hal..digital..v2..OutputPin$GT$7set_low17h02e71d0e38f23a59E>:
}

/// Rust Embedded HAL interface for Mynewt GPIO
impl embedded_hal::digital::v2::OutputPin for GPIO {
    /// Set the GPIO pin to low
    fn set_low(&mut self) -> Result<(), Self::Error> {
    b700:	b580      	push	{r7, lr}
    b702:	b082      	sub	sp, #8
    b704:	9001      	str	r0, [sp, #4]
        unsafe { hal::hal_gpio_write(self.pin, 0) };
    b706:	9801      	ldr	r0, [sp, #4]
    b708:	6800      	ldr	r0, [r0, #0]
    b70a:	2100      	movs	r1, #0
    b70c:	f00b f986 	bl	16a1c <hal_gpio_write>
    b710:	e7ff      	b.n	b712 <_ZN74_$LT$mynewt..hal..GPIO$u20$as$u20$embedded_hal..digital..v2..OutputPin$GT$7set_low17h02e71d0e38f23a59E+0x12>
    b712:	2001      	movs	r0, #1
        Ok(())
    }
    b714:	b002      	add	sp, #8
    b716:	bd80      	pop	{r7, pc}

0000b718 <_ZN74_$LT$mynewt..hal..GPIO$u20$as$u20$embedded_hal..digital..v2..OutputPin$GT$8set_high17hb29d285365812fbcE>:

    /// Set the GPIO pin to high
    fn set_high(&mut self) -> Result<(), Self::Error> {
    b718:	b580      	push	{r7, lr}
    b71a:	b082      	sub	sp, #8
    b71c:	9001      	str	r0, [sp, #4]
        unsafe { hal::hal_gpio_write(self.pin, 1) };
    b71e:	9801      	ldr	r0, [sp, #4]
    b720:	6800      	ldr	r0, [r0, #0]
    b722:	2101      	movs	r1, #1
    b724:	f00b f97a 	bl	16a1c <hal_gpio_write>
    b728:	e7ff      	b.n	b72a <_ZN74_$LT$mynewt..hal..GPIO$u20$as$u20$embedded_hal..digital..v2..OutputPin$GT$8set_high17hb29d285365812fbcE+0x12>
    b72a:	2001      	movs	r0, #1
        Ok(())
    }
    b72c:	b002      	add	sp, #8
    b72e:	bd80      	pop	{r7, pc}

0000b730 <_ZN6mynewt3hal5Delay3new17hb3a101f6006940a4E>:
impl Delay {
    /// Create a new delay
    pub fn new() -> Self {
        Delay {
        }
    }
    b730:	4770      	bx	lr

0000b732 <_ZN87_$LT$mynewt..hal..Delay$u20$as$u20$embedded_hal..blocking..delay..DelayMs$LT$u8$GT$$GT$8delay_ms17h6a8836e3001d2629E>:
}

/// Rust Embedded HAL interface for Mynewt Delay
impl embedded_hal::blocking::delay::DelayMs<u8> for Delay {
    /// Sleep for the specified number of milliseconds
    fn delay_ms(&mut self, ms: u8) {
    b732:	b580      	push	{r7, lr}
    b734:	b086      	sub	sp, #24
    b736:	460a      	mov	r2, r1
    b738:	9003      	str	r0, [sp, #12]
    b73a:	f88d 1013 	strb.w	r1, [sp, #19]
        //  TODO: Get this constant from Mynewt
        const OS_TICKS_PER_SEC: u32 = 1000;
        let delay_ticks = (ms as u32) * OS_TICKS_PER_SEC / 1000;
    b73e:	f89d 0013 	ldrb.w	r0, [sp, #19]
    b742:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
    b746:	fba0 0101 	umull	r0, r1, r0, r1
    b74a:	2900      	cmp	r1, #0
    b74c:	9002      	str	r0, [sp, #8]
    b74e:	d111      	bne.n	b774 <_ZN87_$LT$mynewt..hal..Delay$u20$as$u20$embedded_hal..blocking..delay..DelayMs$LT$u8$GT$$GT$8delay_ms17h6a8836e3001d2629E+0x42>
    b750:	e7ff      	b.n	b752 <_ZN87_$LT$mynewt..hal..Delay$u20$as$u20$embedded_hal..blocking..delay..DelayMs$LT$u8$GT$$GT$8delay_ms17h6a8836e3001d2629E+0x20>
    b752:	f644 50d3 	movw	r0, #19923	; 0x4dd3
    b756:	f2c1 0062 	movt	r0, #4194	; 0x1062
    b75a:	9902      	ldr	r1, [sp, #8]
    b75c:	fba1 0200 	umull	r0, r2, r1, r0
    b760:	0992      	lsrs	r2, r2, #6
    b762:	9205      	str	r2, [sp, #20]
        unsafe { os::os_time_delay(delay_ticks) };
    b764:	9a05      	ldr	r2, [sp, #20]
    b766:	9001      	str	r0, [sp, #4]
    b768:	4610      	mov	r0, r2
    b76a:	f00d f975 	bl	18a58 <os_time_delay>
    b76e:	e7ff      	b.n	b770 <_ZN87_$LT$mynewt..hal..Delay$u20$as$u20$embedded_hal..blocking..delay..DelayMs$LT$u8$GT$$GT$8delay_ms17h6a8836e3001d2629E+0x3e>
    }
    b770:	b006      	add	sp, #24
    b772:	bd80      	pop	{r7, pc}
        let delay_ticks = (ms as u32) * OS_TICKS_PER_SEC / 1000;
    b774:	f64b 7010 	movw	r0, #48912	; 0xbf10
    b778:	f2c0 0001 	movt	r0, #1
    b77c:	f64b 62f4 	movw	r2, #48884	; 0xbef4
    b780:	f2c0 0201 	movt	r2, #1
    b784:	2121      	movs	r1, #33	; 0x21
    b786:	f009 fa0c 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    b78a:	defe      	udf	#254	; 0xfe

0000b78c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h21b21b5ada625ccdE>:
    b78c:	b081      	sub	sp, #4
    b78e:	9000      	str	r0, [sp, #0]
    b790:	9800      	ldr	r0, [sp, #0]
    b792:	b001      	add	sp, #4
    b794:	4770      	bx	lr

0000b796 <_ZN6mynewt7sysinit17hb099e153a8a301aeE>:
pub use hal::{ Delay, GPIO, SPI };  //  Export `hal` types GPIO and SPI

pub mod spi;  //  Export Non-Blocking SPI API

///  Initialise the Mynewt system.  Start the Mynewt drivers and libraries.  Equivalent to `sysinit()` macro in C.
pub fn sysinit() {
    b796:	b580      	push	{r7, lr}
    unsafe { rust_sysinit(); }
    b798:	f00d fe62 	bl	19460 <rust_sysinit>
    b79c:	e7ff      	b.n	b79e <_ZN6mynewt7sysinit17hb099e153a8a301aeE+0x8>
    sys::console::flush();
    b79e:	f000 fbac 	bl	befa <_ZN6mynewt3sys7console5flush17hdc198a9fe895c898E>
    b7a2:	e7ff      	b.n	b7a4 <_ZN6mynewt7sysinit17hb099e153a8a301aeE+0xe>
}
    b7a4:	bd80      	pop	{r7, pc}

0000b7a6 <_ZN6mynewt4Strn6as_ptr17h94013b9b2737125bE>:
            rep: StrnRep::CStr(cstr)
        }
    }

    /// Return a pointer to the string
    pub fn as_ptr(&self) -> *const u8 {
    b7a6:	b580      	push	{r7, lr}
    b7a8:	b086      	sub	sp, #24
    b7aa:	9001      	str	r0, [sp, #4]
        match self.rep {
            StrnRep::ByteStr(bs) => { bs.as_ptr() }
    b7ac:	9801      	ldr	r0, [sp, #4]
    b7ae:	7800      	ldrb	r0, [r0, #0]
    b7b0:	07c1      	lsls	r1, r0, #31
    b7b2:	2900      	cmp	r1, #0
    b7b4:	d002      	beq.n	b7bc <_ZN6mynewt4Strn6as_ptr17h94013b9b2737125bE+0x16>
    b7b6:	e7ff      	b.n	b7b8 <_ZN6mynewt4Strn6as_ptr17h94013b9b2737125bE+0x12>
    b7b8:	e00c      	b.n	b7d4 <_ZN6mynewt4Strn6as_ptr17h94013b9b2737125bE+0x2e>
        match self.rep {
    b7ba:	defe      	udf	#254	; 0xfe
            StrnRep::ByteStr(bs) => { bs.as_ptr() }
    b7bc:	9801      	ldr	r0, [sp, #4]
    b7be:	6841      	ldr	r1, [r0, #4]
    b7c0:	6880      	ldr	r0, [r0, #8]
    b7c2:	9103      	str	r1, [sp, #12]
    b7c4:	9004      	str	r0, [sp, #16]
    b7c6:	9803      	ldr	r0, [sp, #12]
    b7c8:	9904      	ldr	r1, [sp, #16]
    b7ca:	f7ff fad0 	bl	ad6e <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hb15824c4ec226a1aE>
    b7ce:	9002      	str	r0, [sp, #8]
    b7d0:	e7ff      	b.n	b7d2 <_ZN6mynewt4Strn6as_ptr17h94013b9b2737125bE+0x2c>
        match self.rep {
    b7d2:	e005      	b.n	b7e0 <_ZN6mynewt4Strn6as_ptr17h94013b9b2737125bE+0x3a>
            StrnRep::CStr(cstr)  => { cstr }
    b7d4:	9801      	ldr	r0, [sp, #4]
    b7d6:	6840      	ldr	r0, [r0, #4]
    b7d8:	9005      	str	r0, [sp, #20]
    b7da:	9805      	ldr	r0, [sp, #20]
    b7dc:	9002      	str	r0, [sp, #8]
        match self.rep {
    b7de:	e7ff      	b.n	b7e0 <_ZN6mynewt4Strn6as_ptr17h94013b9b2737125bE+0x3a>
        }
    }
    b7e0:	9802      	ldr	r0, [sp, #8]
    b7e2:	b006      	add	sp, #24
    b7e4:	bd80      	pop	{r7, pc}

0000b7e6 <_ZN6mynewt4Strn8validate17h045d7da2a7d2ba6dE>:
            }
        }
    }

    /// Fail if the last byte is not zero.
    pub fn validate(&self) {
    b7e6:	b5b0      	push	{r4, r5, r7, lr}
    b7e8:	b0ae      	sub	sp, #184	; 0xb8
    b7ea:	900b      	str	r0, [sp, #44]	; 0x2c
        match self.rep {
            StrnRep::ByteStr(bs) => {         
    b7ec:	980b      	ldr	r0, [sp, #44]	; 0x2c
    b7ee:	7800      	ldrb	r0, [r0, #0]
    b7f0:	07c1      	lsls	r1, r0, #31
    b7f2:	2900      	cmp	r1, #0
    b7f4:	d002      	beq.n	b7fc <_ZN6mynewt4Strn8validate17h045d7da2a7d2ba6dE+0x16>
    b7f6:	e7ff      	b.n	b7f8 <_ZN6mynewt4Strn8validate17h045d7da2a7d2ba6dE+0x12>
    b7f8:	e098      	b.n	b92c <_ZN6mynewt4Strn8validate17h045d7da2a7d2ba6dE+0x146>
        match self.rep {
    b7fa:	defe      	udf	#254	; 0xfe
            StrnRep::ByteStr(bs) => {         
    b7fc:	980b      	ldr	r0, [sp, #44]	; 0x2c
    b7fe:	6841      	ldr	r1, [r0, #4]
    b800:	6880      	ldr	r0, [r0, #8]
    b802:	910c      	str	r1, [sp, #48]	; 0x30
    b804:	900d      	str	r0, [sp, #52]	; 0x34
                assert_eq!(bs.last(), Some(&0u8), "no null");  //  Last byte must be 0.
    b806:	980c      	ldr	r0, [sp, #48]	; 0x30
    b808:	990d      	ldr	r1, [sp, #52]	; 0x34
    b80a:	f004 fd1b 	bl	10244 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h03c1b8f1936c1449E>
    b80e:	9010      	str	r0, [sp, #64]	; 0x40
    b810:	e7ff      	b.n	b812 <_ZN6mynewt4Strn8validate17h045d7da2a7d2ba6dE+0x2c>
    b812:	f64b 7038 	movw	r0, #48952	; 0xbf38
    b816:	f2c0 0001 	movt	r0, #1
    b81a:	6800      	ldr	r0, [r0, #0]
    b81c:	a910      	add	r1, sp, #64	; 0x40
    b81e:	910e      	str	r1, [sp, #56]	; 0x38
    b820:	900f      	str	r0, [sp, #60]	; 0x3c
    b822:	980e      	ldr	r0, [sp, #56]	; 0x38
    b824:	9011      	str	r0, [sp, #68]	; 0x44
    b826:	980f      	ldr	r0, [sp, #60]	; 0x3c
    b828:	9012      	str	r0, [sp, #72]	; 0x48
    b82a:	9811      	ldr	r0, [sp, #68]	; 0x44
    b82c:	9912      	ldr	r1, [sp, #72]	; 0x48
    b82e:	f000 f92b 	bl	ba88 <_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h707b985404f74db1E>
    b832:	900a      	str	r0, [sp, #40]	; 0x28
    b834:	e7ff      	b.n	b836 <_ZN6mynewt4Strn8validate17h045d7da2a7d2ba6dE+0x50>
    b836:	980a      	ldr	r0, [sp, #40]	; 0x28
    b838:	07c1      	lsls	r1, r0, #31
    b83a:	2900      	cmp	r1, #0
    b83c:	d001      	beq.n	b842 <_ZN6mynewt4Strn8validate17h045d7da2a7d2ba6dE+0x5c>
    b83e:	e7ff      	b.n	b840 <_ZN6mynewt4Strn8validate17h045d7da2a7d2ba6dE+0x5a>
        match self.rep {
    b840:	e078      	b.n	b934 <_ZN6mynewt4Strn8validate17h045d7da2a7d2ba6dE+0x14e>
                assert_eq!(bs.last(), Some(&0u8), "no null");  //  Last byte must be 0.
    b842:	f64b 7090 	movw	r0, #49040	; 0xbf90
    b846:	f2c0 0001 	movt	r0, #1
    b84a:	6801      	ldr	r1, [r0, #0]
    b84c:	9811      	ldr	r0, [sp, #68]	; 0x44
    b84e:	9022      	str	r0, [sp, #136]	; 0x88
    b850:	9812      	ldr	r0, [sp, #72]	; 0x48
    b852:	9023      	str	r0, [sp, #140]	; 0x8c
    b854:	f64b 70a4 	movw	r0, #49060	; 0xbfa4
    b858:	f2c0 0001 	movt	r0, #1
    b85c:	6800      	ldr	r0, [r0, #0]
    b85e:	f64b 72a8 	movw	r2, #49064	; 0xbfa8
    b862:	f2c0 0201 	movt	r2, #1
    b866:	6813      	ldr	r3, [r2, #0]
    b868:	466a      	mov	r2, sp
    b86a:	f04f 0c00 	mov.w	ip, #0
    b86e:	f8c2 c000 	str.w	ip, [r2]
    b872:	aa24      	add	r2, sp, #144	; 0x90
    b874:	f04f 0c01 	mov.w	ip, #1
    b878:	9009      	str	r0, [sp, #36]	; 0x24
    b87a:	4610      	mov	r0, r2
    b87c:	9a09      	ldr	r2, [sp, #36]	; 0x24
    b87e:	9108      	str	r1, [sp, #32]
    b880:	4611      	mov	r1, r2
    b882:	4662      	mov	r2, ip
    b884:	f000 fa44 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
    b888:	e7ff      	b.n	b88a <_ZN6mynewt4Strn8validate17h045d7da2a7d2ba6dE+0xa4>
    b88a:	a822      	add	r0, sp, #136	; 0x88
    b88c:	901f      	str	r0, [sp, #124]	; 0x7c
    b88e:	a823      	add	r0, sp, #140	; 0x8c
    b890:	9020      	str	r0, [sp, #128]	; 0x80
    b892:	a824      	add	r0, sp, #144	; 0x90
    b894:	9021      	str	r0, [sp, #132]	; 0x84
    b896:	981f      	ldr	r0, [sp, #124]	; 0x7c
    b898:	902a      	str	r0, [sp, #168]	; 0xa8
    b89a:	9820      	ldr	r0, [sp, #128]	; 0x80
    b89c:	902b      	str	r0, [sp, #172]	; 0xac
    b89e:	9821      	ldr	r0, [sp, #132]	; 0x84
    b8a0:	902c      	str	r0, [sp, #176]	; 0xb0
    b8a2:	982a      	ldr	r0, [sp, #168]	; 0xa8
    b8a4:	f64b 1139 	movw	r1, #47417	; 0xb939
    b8a8:	f2c0 0100 	movt	r1, #0
    b8ac:	f000 faa1 	bl	bdf2 <_ZN4core3fmt10ArgumentV13new17h5588318b4f536cd0E>
    b8b0:	9007      	str	r0, [sp, #28]
    b8b2:	9106      	str	r1, [sp, #24]
    b8b4:	e7ff      	b.n	b8b6 <_ZN6mynewt4Strn8validate17h045d7da2a7d2ba6dE+0xd0>
    b8b6:	982b      	ldr	r0, [sp, #172]	; 0xac
    b8b8:	f64b 1139 	movw	r1, #47417	; 0xb939
    b8bc:	f2c0 0100 	movt	r1, #0
    b8c0:	f000 fa97 	bl	bdf2 <_ZN4core3fmt10ArgumentV13new17h5588318b4f536cd0E>
    b8c4:	9005      	str	r0, [sp, #20]
    b8c6:	9104      	str	r1, [sp, #16]
    b8c8:	e7ff      	b.n	b8ca <_ZN6mynewt4Strn8validate17h045d7da2a7d2ba6dE+0xe4>
    b8ca:	982c      	ldr	r0, [sp, #176]	; 0xb0
    b8cc:	f644 71c9 	movw	r1, #20425	; 0x4fc9
    b8d0:	f2c0 0101 	movt	r1, #1
    b8d4:	f000 fab7 	bl	be46 <_ZN4core3fmt10ArgumentV13new17hd6e40bd932949712E>
    b8d8:	9003      	str	r0, [sp, #12]
    b8da:	9102      	str	r1, [sp, #8]
    b8dc:	e7ff      	b.n	b8de <_ZN6mynewt4Strn8validate17h045d7da2a7d2ba6dE+0xf8>
    b8de:	9807      	ldr	r0, [sp, #28]
    b8e0:	9019      	str	r0, [sp, #100]	; 0x64
    b8e2:	9906      	ldr	r1, [sp, #24]
    b8e4:	911a      	str	r1, [sp, #104]	; 0x68
    b8e6:	9a05      	ldr	r2, [sp, #20]
    b8e8:	921b      	str	r2, [sp, #108]	; 0x6c
    b8ea:	9b04      	ldr	r3, [sp, #16]
    b8ec:	931c      	str	r3, [sp, #112]	; 0x70
    b8ee:	f8dd c00c 	ldr.w	ip, [sp, #12]
    b8f2:	f8cd c074 	str.w	ip, [sp, #116]	; 0x74
    b8f6:	f8dd e008 	ldr.w	lr, [sp, #8]
    b8fa:	f8cd e078 	str.w	lr, [sp, #120]	; 0x78
    b8fe:	466c      	mov	r4, sp
    b900:	2503      	movs	r5, #3
    b902:	6025      	str	r5, [r4, #0]
    b904:	a813      	add	r0, sp, #76	; 0x4c
    b906:	ab19      	add	r3, sp, #100	; 0x64
    b908:	9908      	ldr	r1, [sp, #32]
    b90a:	462a      	mov	r2, r5
    b90c:	f000 fa00 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
    b910:	e7ff      	b.n	b912 <_ZN6mynewt4Strn8validate17h045d7da2a7d2ba6dE+0x12c>
    b912:	f64b 70c4 	movw	r0, #49092	; 0xbfc4
    b916:	f2c0 0001 	movt	r0, #1
    b91a:	f009 f93b 	bl	14b94 <_ZN4core5panic8Location6caller17h63e50e3e41b8f68eE>
    b91e:	9001      	str	r0, [sp, #4]
    b920:	e7ff      	b.n	b922 <_ZN6mynewt4Strn8validate17h045d7da2a7d2ba6dE+0x13c>
    b922:	a813      	add	r0, sp, #76	; 0x4c
    b924:	9901      	ldr	r1, [sp, #4]
    b926:	f009 f972 	bl	14c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>
    b92a:	defe      	udf	#254	; 0xfe
            }
            StrnRep::CStr(_cstr)  => {}
    b92c:	980b      	ldr	r0, [sp, #44]	; 0x2c
    b92e:	6840      	ldr	r0, [r0, #4]
    b930:	902d      	str	r0, [sp, #180]	; 0xb4
        match self.rep {
    b932:	e7ff      	b.n	b934 <_ZN6mynewt4Strn8validate17h045d7da2a7d2ba6dE+0x14e>
        }
    }
    b934:	b02e      	add	sp, #184	; 0xb8
    b936:	bdb0      	pop	{r4, r5, r7, pc}

0000b938 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6baa2d6b8acdccabE>:
    b938:	b580      	push	{r7, lr}
    b93a:	b084      	sub	sp, #16
    b93c:	9002      	str	r0, [sp, #8]
    b93e:	9103      	str	r1, [sp, #12]
    b940:	9802      	ldr	r0, [sp, #8]
    b942:	6800      	ldr	r0, [r0, #0]
    b944:	9903      	ldr	r1, [sp, #12]
    b946:	f000 f846 	bl	b9d6 <_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h56267881aa24c67fE>
    b94a:	9001      	str	r0, [sp, #4]
    b94c:	e7ff      	b.n	b94e <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h6baa2d6b8acdccabE+0x16>
    b94e:	9801      	ldr	r0, [sp, #4]
    b950:	f000 0001 	and.w	r0, r0, #1
    b954:	b004      	add	sp, #16
    b956:	bd80      	pop	{r7, pc}

0000b958 <_ZN4core6option15Option$LT$T$GT$5ok_or17h15be47cba4348ad1E>:
    b958:	b087      	sub	sp, #28
    b95a:	9000      	str	r0, [sp, #0]
    b95c:	9101      	str	r1, [sp, #4]
    b95e:	2000      	movs	r0, #0
    b960:	f88d 001b 	strb.w	r0, [sp, #27]
    b964:	f88d 001a 	strb.w	r0, [sp, #26]
    b968:	2001      	movs	r0, #1
    b96a:	f88d 001b 	strb.w	r0, [sp, #27]
    b96e:	f88d 001a 	strb.w	r0, [sp, #26]
    b972:	9800      	ldr	r0, [sp, #0]
    b974:	2800      	cmp	r0, #0
    b976:	d001      	beq.n	b97c <_ZN4core6option15Option$LT$T$GT$5ok_or17h15be47cba4348ad1E+0x24>
    b978:	e7ff      	b.n	b97a <_ZN4core6option15Option$LT$T$GT$5ok_or17h15be47cba4348ad1E+0x22>
    b97a:	e006      	b.n	b98a <_ZN4core6option15Option$LT$T$GT$5ok_or17h15be47cba4348ad1E+0x32>
    b97c:	2000      	movs	r0, #0
    b97e:	f88d 001a 	strb.w	r0, [sp, #26]
    b982:	2001      	movs	r0, #1
    b984:	9003      	str	r0, [sp, #12]
    b986:	e009      	b.n	b99c <_ZN4core6option15Option$LT$T$GT$5ok_or17h15be47cba4348ad1E+0x44>
    b988:	defe      	udf	#254	; 0xfe
    b98a:	2000      	movs	r0, #0
    b98c:	f88d 001b 	strb.w	r0, [sp, #27]
    b990:	9901      	ldr	r1, [sp, #4]
    b992:	9105      	str	r1, [sp, #20]
    b994:	9905      	ldr	r1, [sp, #20]
    b996:	9104      	str	r1, [sp, #16]
    b998:	9003      	str	r0, [sp, #12]
    b99a:	e7ff      	b.n	b99c <_ZN4core6option15Option$LT$T$GT$5ok_or17h15be47cba4348ad1E+0x44>
    b99c:	f89d 001a 	ldrb.w	r0, [sp, #26]
    b9a0:	07c0      	lsls	r0, r0, #31
    b9a2:	2800      	cmp	r0, #0
    b9a4:	d104      	bne.n	b9b0 <_ZN4core6option15Option$LT$T$GT$5ok_or17h15be47cba4348ad1E+0x58>
    b9a6:	e7ff      	b.n	b9a8 <_ZN4core6option15Option$LT$T$GT$5ok_or17h15be47cba4348ad1E+0x50>
    b9a8:	9800      	ldr	r0, [sp, #0]
    b9aa:	2801      	cmp	r0, #1
    b9ac:	d008      	beq.n	b9c0 <_ZN4core6option15Option$LT$T$GT$5ok_or17h15be47cba4348ad1E+0x68>
    b9ae:	e011      	b.n	b9d4 <_ZN4core6option15Option$LT$T$GT$5ok_or17h15be47cba4348ad1E+0x7c>
    b9b0:	2000      	movs	r0, #0
    b9b2:	f88d 001a 	strb.w	r0, [sp, #26]
    b9b6:	e7f7      	b.n	b9a8 <_ZN4core6option15Option$LT$T$GT$5ok_or17h15be47cba4348ad1E+0x50>
    b9b8:	9803      	ldr	r0, [sp, #12]
    b9ba:	9904      	ldr	r1, [sp, #16]
    b9bc:	b007      	add	sp, #28
    b9be:	4770      	bx	lr
    b9c0:	f89d 001b 	ldrb.w	r0, [sp, #27]
    b9c4:	07c0      	lsls	r0, r0, #31
    b9c6:	2800      	cmp	r0, #0
    b9c8:	d0f6      	beq.n	b9b8 <_ZN4core6option15Option$LT$T$GT$5ok_or17h15be47cba4348ad1E+0x60>
    b9ca:	e7ff      	b.n	b9cc <_ZN4core6option15Option$LT$T$GT$5ok_or17h15be47cba4348ad1E+0x74>
    b9cc:	2000      	movs	r0, #0
    b9ce:	f88d 001b 	strb.w	r0, [sp, #27]
    b9d2:	e7f1      	b.n	b9b8 <_ZN4core6option15Option$LT$T$GT$5ok_or17h15be47cba4348ad1E+0x60>
    b9d4:	e7f0      	b.n	b9b8 <_ZN4core6option15Option$LT$T$GT$5ok_or17h15be47cba4348ad1E+0x60>

0000b9d6 <_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h56267881aa24c67fE>:
    b9d6:	b580      	push	{r7, lr}
    b9d8:	b08c      	sub	sp, #48	; 0x30
    b9da:	9000      	str	r0, [sp, #0]
    b9dc:	9101      	str	r1, [sp, #4]
    b9de:	9800      	ldr	r0, [sp, #0]
    b9e0:	9003      	str	r0, [sp, #12]
    b9e2:	9803      	ldr	r0, [sp, #12]
    b9e4:	6800      	ldr	r0, [r0, #0]
    b9e6:	2800      	cmp	r0, #0
    b9e8:	4601      	mov	r1, r0
    b9ea:	bf18      	it	ne
    b9ec:	2101      	movne	r1, #1
    b9ee:	2800      	cmp	r0, #0
    b9f0:	d002      	beq.n	b9f8 <_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h56267881aa24c67fE+0x22>
    b9f2:	e7ff      	b.n	b9f4 <_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h56267881aa24c67fE+0x1e>
    b9f4:	e011      	b.n	ba1a <_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h56267881aa24c67fE+0x44>
    b9f6:	defe      	udf	#254	; 0xfe
    b9f8:	9901      	ldr	r1, [sp, #4]
    b9fa:	f64b 72d8 	movw	r2, #49112	; 0xbfd8
    b9fe:	f2c0 0201 	movt	r2, #1
    ba02:	a804      	add	r0, sp, #16
    ba04:	2304      	movs	r3, #4
    ba06:	f009 feb4 	bl	15772 <_ZN4core3fmt9Formatter11debug_tuple17hf6765ecb88050890E>
    ba0a:	e7ff      	b.n	ba0c <_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h56267881aa24c67fE+0x36>
    ba0c:	a804      	add	r0, sp, #16
    ba0e:	f009 fa30 	bl	14e72 <_ZN4core3fmt8builders10DebugTuple6finish17heb8e742f7f30d0e3E>
    ba12:	f88d 000b 	strb.w	r0, [sp, #11]
    ba16:	e7ff      	b.n	ba18 <_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h56267881aa24c67fE+0x42>
    ba18:	e01d      	b.n	ba56 <_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h56267881aa24c67fE+0x80>
    ba1a:	9803      	ldr	r0, [sp, #12]
    ba1c:	9007      	str	r0, [sp, #28]
    ba1e:	9901      	ldr	r1, [sp, #4]
    ba20:	f64b 72d4 	movw	r2, #49108	; 0xbfd4
    ba24:	f2c0 0201 	movt	r2, #1
    ba28:	a808      	add	r0, sp, #32
    ba2a:	2304      	movs	r3, #4
    ba2c:	f009 fea1 	bl	15772 <_ZN4core3fmt9Formatter11debug_tuple17hf6765ecb88050890E>
    ba30:	e7ff      	b.n	ba32 <_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h56267881aa24c67fE+0x5c>
    ba32:	9807      	ldr	r0, [sp, #28]
    ba34:	900b      	str	r0, [sp, #44]	; 0x2c
    ba36:	f64b 72dc 	movw	r2, #49116	; 0xbfdc
    ba3a:	f2c0 0201 	movt	r2, #1
    ba3e:	a808      	add	r0, sp, #32
    ba40:	a90b      	add	r1, sp, #44	; 0x2c
    ba42:	f009 f9a3 	bl	14d8c <_ZN4core3fmt8builders10DebugTuple5field17h0b2f5267a2ac1347E>
    ba46:	e7ff      	b.n	ba48 <_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h56267881aa24c67fE+0x72>
    ba48:	a808      	add	r0, sp, #32
    ba4a:	f009 fa12 	bl	14e72 <_ZN4core3fmt8builders10DebugTuple6finish17heb8e742f7f30d0e3E>
    ba4e:	f88d 000b 	strb.w	r0, [sp, #11]
    ba52:	e7ff      	b.n	ba54 <_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h56267881aa24c67fE+0x7e>
    ba54:	e7ff      	b.n	ba56 <_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h56267881aa24c67fE+0x80>
    ba56:	f89d 000b 	ldrb.w	r0, [sp, #11]
    ba5a:	b00c      	add	sp, #48	; 0x30
    ba5c:	bd80      	pop	{r7, pc}

0000ba5e <_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h59538b9869cd045bE>:
    ba5e:	b082      	sub	sp, #8
    ba60:	2000      	movs	r0, #0
    ba62:	9001      	str	r0, [sp, #4]
    ba64:	9801      	ldr	r0, [sp, #4]
    ba66:	b002      	add	sp, #8
    ba68:	4770      	bx	lr

0000ba6a <_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h1f4c4c45e5a390deE>:
    ba6a:	b580      	push	{r7, lr}
    ba6c:	b086      	sub	sp, #24
    ba6e:	9003      	str	r0, [sp, #12]
    ba70:	9104      	str	r1, [sp, #16]
    ba72:	9803      	ldr	r0, [sp, #12]
    ba74:	9904      	ldr	r1, [sp, #16]
    ba76:	f7ff ff6f 	bl	b958 <_ZN4core6option15Option$LT$T$GT$5ok_or17h15be47cba4348ad1E>
    ba7a:	9002      	str	r0, [sp, #8]
    ba7c:	9101      	str	r1, [sp, #4]
    ba7e:	e7ff      	b.n	ba80 <_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h1f4c4c45e5a390deE+0x16>
    ba80:	9802      	ldr	r0, [sp, #8]
    ba82:	9901      	ldr	r1, [sp, #4]
    ba84:	b006      	add	sp, #24
    ba86:	bd80      	pop	{r7, pc}

0000ba88 <_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h707b985404f74db1E>:
    ba88:	b580      	push	{r7, lr}
    ba8a:	b090      	sub	sp, #64	; 0x40
    ba8c:	9002      	str	r0, [sp, #8]
    ba8e:	9103      	str	r1, [sp, #12]
    ba90:	9802      	ldr	r0, [sp, #8]
    ba92:	6800      	ldr	r0, [r0, #0]
    ba94:	2800      	cmp	r0, #0
    ba96:	bf18      	it	ne
    ba98:	2001      	movne	r0, #1
    ba9a:	f04f 0100 	mov.w	r1, #0
    ba9e:	910d      	str	r1, [sp, #52]	; 0x34
    baa0:	900c      	str	r0, [sp, #48]	; 0x30
    baa2:	980c      	ldr	r0, [sp, #48]	; 0x30
    baa4:	990d      	ldr	r1, [sp, #52]	; 0x34
    baa6:	9001      	str	r0, [sp, #4]
    baa8:	e7ff      	b.n	baaa <_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h707b985404f74db1E+0x22>
    baaa:	9801      	ldr	r0, [sp, #4]
    baac:	9005      	str	r0, [sp, #20]
    baae:	9903      	ldr	r1, [sp, #12]
    bab0:	6809      	ldr	r1, [r1, #0]
    bab2:	2900      	cmp	r1, #0
    bab4:	bf18      	it	ne
    bab6:	2101      	movne	r1, #1
    bab8:	f04f 0200 	mov.w	r2, #0
    babc:	920f      	str	r2, [sp, #60]	; 0x3c
    babe:	910e      	str	r1, [sp, #56]	; 0x38
    bac0:	990e      	ldr	r1, [sp, #56]	; 0x38
    bac2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    bac4:	9100      	str	r1, [sp, #0]
    bac6:	e7ff      	b.n	bac8 <_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h707b985404f74db1E+0x40>
    bac8:	9800      	ldr	r0, [sp, #0]
    baca:	9006      	str	r0, [sp, #24]
    bacc:	9905      	ldr	r1, [sp, #20]
    bace:	9a06      	ldr	r2, [sp, #24]
    bad0:	4291      	cmp	r1, r2
    bad2:	d104      	bne.n	bade <_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h707b985404f74db1E+0x56>
    bad4:	e7ff      	b.n	bad6 <_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h707b985404f74db1E+0x4e>
    bad6:	2001      	movs	r0, #1
    bad8:	f88d 001f 	strb.w	r0, [sp, #31]
    badc:	e003      	b.n	bae6 <_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h707b985404f74db1E+0x5e>
    bade:	2000      	movs	r0, #0
    bae0:	f88d 001f 	strb.w	r0, [sp, #31]
    bae4:	e7ff      	b.n	bae6 <_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h707b985404f74db1E+0x5e>
    bae6:	f89d 001f 	ldrb.w	r0, [sp, #31]
    baea:	07c0      	lsls	r0, r0, #31
    baec:	2800      	cmp	r0, #0
    baee:	d104      	bne.n	bafa <_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h707b985404f74db1E+0x72>
    baf0:	e7ff      	b.n	baf2 <_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h707b985404f74db1E+0x6a>
    baf2:	2000      	movs	r0, #0
    baf4:	f88d 0013 	strb.w	r0, [sp, #19]
    baf8:	e01e      	b.n	bb38 <_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h707b985404f74db1E+0xb0>
    bafa:	9802      	ldr	r0, [sp, #8]
    bafc:	9903      	ldr	r1, [sp, #12]
    bafe:	9008      	str	r0, [sp, #32]
    bb00:	9109      	str	r1, [sp, #36]	; 0x24
    bb02:	9808      	ldr	r0, [sp, #32]
    bb04:	6800      	ldr	r0, [r0, #0]
    bb06:	2800      	cmp	r0, #0
    bb08:	d10f      	bne.n	bb2a <_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h707b985404f74db1E+0xa2>
    bb0a:	e00a      	b.n	bb22 <_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h707b985404f74db1E+0x9a>
    bb0c:	9808      	ldr	r0, [sp, #32]
    bb0e:	900a      	str	r0, [sp, #40]	; 0x28
    bb10:	9809      	ldr	r0, [sp, #36]	; 0x24
    bb12:	900b      	str	r0, [sp, #44]	; 0x2c
    bb14:	980a      	ldr	r0, [sp, #40]	; 0x28
    bb16:	990b      	ldr	r1, [sp, #44]	; 0x2c
    bb18:	f004 fcce 	bl	104b8 <_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h1974a3e150d0d375E>
    bb1c:	f88d 0013 	strb.w	r0, [sp, #19]
    bb20:	e008      	b.n	bb34 <_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h707b985404f74db1E+0xac>
    bb22:	2001      	movs	r0, #1
    bb24:	f88d 0013 	strb.w	r0, [sp, #19]
    bb28:	e005      	b.n	bb36 <_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h707b985404f74db1E+0xae>
    bb2a:	9809      	ldr	r0, [sp, #36]	; 0x24
    bb2c:	6800      	ldr	r0, [r0, #0]
    bb2e:	2800      	cmp	r0, #0
    bb30:	d1ec      	bne.n	bb0c <_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h707b985404f74db1E+0x84>
    bb32:	e7f6      	b.n	bb22 <_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h707b985404f74db1E+0x9a>
    bb34:	e7ff      	b.n	bb36 <_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h707b985404f74db1E+0xae>
    bb36:	e7ff      	b.n	bb38 <_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h707b985404f74db1E+0xb0>
    bb38:	f89d 0013 	ldrb.w	r0, [sp, #19]
    bb3c:	b010      	add	sp, #64	; 0x40
    bb3e:	bd80      	pop	{r7, pc}

0000bb40 <_ZN4core3ptr24slice_from_raw_parts_mut17hb2c3a5ddaeb065c8E>:
    bb40:	b086      	sub	sp, #24
    bb42:	9000      	str	r0, [sp, #0]
    bb44:	9101      	str	r1, [sp, #4]
    bb46:	9800      	ldr	r0, [sp, #0]
    bb48:	9901      	ldr	r1, [sp, #4]
    bb4a:	9004      	str	r0, [sp, #16]
    bb4c:	9105      	str	r1, [sp, #20]
    bb4e:	9804      	ldr	r0, [sp, #16]
    bb50:	9905      	ldr	r1, [sp, #20]
    bb52:	9002      	str	r0, [sp, #8]
    bb54:	9103      	str	r1, [sp, #12]
    bb56:	9802      	ldr	r0, [sp, #8]
    bb58:	9903      	ldr	r1, [sp, #12]
    bb5a:	b006      	add	sp, #24
    bb5c:	4770      	bx	lr

0000bb5e <_ZN4core3ptr5write17hb115c52c9adc8ae7E>:
    bb5e:	b082      	sub	sp, #8
    bb60:	460a      	mov	r2, r1
    bb62:	9000      	str	r0, [sp, #0]
    bb64:	f88d 1007 	strb.w	r1, [sp, #7]
    bb68:	9800      	ldr	r0, [sp, #0]
    bb6a:	f89d 1007 	ldrb.w	r1, [sp, #7]
    bb6e:	7001      	strb	r1, [r0, #0]
    bb70:	b002      	add	sp, #8
    bb72:	4770      	bx	lr

0000bb74 <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h51752f763eb6dbcdE>:
    bb74:	b082      	sub	sp, #8
    bb76:	9000      	str	r0, [sp, #0]
    bb78:	9800      	ldr	r0, [sp, #0]
    bb7a:	7800      	ldrb	r0, [r0, #0]
    bb7c:	07c0      	lsls	r0, r0, #31
    bb7e:	2800      	cmp	r0, #0
    bb80:	d004      	beq.n	bb8c <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h51752f763eb6dbcdE+0x18>
    bb82:	e7ff      	b.n	bb84 <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h51752f763eb6dbcdE+0x10>
    bb84:	2000      	movs	r0, #0
    bb86:	f88d 0007 	strb.w	r0, [sp, #7]
    bb8a:	e003      	b.n	bb94 <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h51752f763eb6dbcdE+0x20>
    bb8c:	2001      	movs	r0, #1
    bb8e:	f88d 0007 	strb.w	r0, [sp, #7]
    bb92:	e7ff      	b.n	bb94 <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h51752f763eb6dbcdE+0x20>
    bb94:	f89d 0007 	ldrb.w	r0, [sp, #7]
    bb98:	b002      	add	sp, #8
    bb9a:	4770      	bx	lr

0000bb9c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hca4739a9a91ec005E>:
    bb9c:	b088      	sub	sp, #32
    bb9e:	9003      	str	r0, [sp, #12]
    bba0:	9104      	str	r1, [sp, #16]
    bba2:	9205      	str	r2, [sp, #20]
    bba4:	9803      	ldr	r0, [sp, #12]
    bba6:	1e41      	subs	r1, r0, #1
    bba8:	bf18      	it	ne
    bbaa:	2101      	movne	r1, #1
    bbac:	2801      	cmp	r0, #1
    bbae:	9302      	str	r3, [sp, #8]
    bbb0:	d002      	beq.n	bbb8 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hca4739a9a91ec005E+0x1c>
    bbb2:	e7ff      	b.n	bbb4 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hca4739a9a91ec005E+0x18>
    bbb4:	e004      	b.n	bbc0 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hca4739a9a91ec005E+0x24>
    bbb6:	defe      	udf	#254	; 0xfe
    bbb8:	9803      	ldr	r0, [sp, #12]
    bbba:	2801      	cmp	r0, #1
    bbbc:	d00f      	beq.n	bbde <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hca4739a9a91ec005E+0x42>
    bbbe:	e010      	b.n	bbe2 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hca4739a9a91ec005E+0x46>
    bbc0:	9803      	ldr	r0, [sp, #12]
    bbc2:	9007      	str	r0, [sp, #28]
    bbc4:	9804      	ldr	r0, [sp, #16]
    bbc6:	9905      	ldr	r1, [sp, #20]
    bbc8:	466a      	mov	r2, sp
    bbca:	9b02      	ldr	r3, [sp, #8]
    bbcc:	6013      	str	r3, [r2, #0]
    bbce:	f64b 73ec 	movw	r3, #49132	; 0xbfec
    bbd2:	f2c0 0301 	movt	r3, #1
    bbd6:	aa07      	add	r2, sp, #28
    bbd8:	f008 ffb5 	bl	14b46 <_ZN4core6option18expect_none_failed17h2665e7008169a3baE>
    bbdc:	defe      	udf	#254	; 0xfe
    bbde:	b008      	add	sp, #32
    bbe0:	4770      	bx	lr
    bbe2:	e7fc      	b.n	bbde <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hca4739a9a91ec005E+0x42>

0000bbe4 <_ZN4core6result19Result$LT$T$C$E$GT$6is_err17hf4c96e8793ee7a23E>:
    bbe4:	b580      	push	{r7, lr}
    bbe6:	b082      	sub	sp, #8
    bbe8:	9001      	str	r0, [sp, #4]
    bbea:	9801      	ldr	r0, [sp, #4]
    bbec:	f7ff ffc2 	bl	bb74 <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h51752f763eb6dbcdE>
    bbf0:	9000      	str	r0, [sp, #0]
    bbf2:	e7ff      	b.n	bbf4 <_ZN4core6result19Result$LT$T$C$E$GT$6is_err17hf4c96e8793ee7a23E+0x10>
    bbf4:	2001      	movs	r0, #1
    bbf6:	9900      	ldr	r1, [sp, #0]
    bbf8:	4388      	bics	r0, r1
    bbfa:	b002      	add	sp, #8
    bbfc:	bd80      	pop	{r7, pc}

0000bbfe <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9e096e948ad28d6eE>:
    bbfe:	b082      	sub	sp, #8
    bc00:	9000      	str	r0, [sp, #0]
    bc02:	9800      	ldr	r0, [sp, #0]
    bc04:	9001      	str	r0, [sp, #4]
    bc06:	9801      	ldr	r0, [sp, #4]
    bc08:	b002      	add	sp, #8
    bc0a:	4770      	bx	lr

0000bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>:
    bc0c:	b081      	sub	sp, #4
    bc0e:	4601      	mov	r1, r0
    bc10:	f88d 0003 	strb.w	r0, [sp, #3]
    bc14:	f89d 0003 	ldrb.w	r0, [sp, #3]
    bc18:	b001      	add	sp, #4
    bc1a:	4770      	bx	lr

0000bc1c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h547b8d3279e16ed9E>:
    bc1c:	b081      	sub	sp, #4
    bc1e:	9000      	str	r0, [sp, #0]
    bc20:	9800      	ldr	r0, [sp, #0]
    bc22:	b001      	add	sp, #4
    bc24:	4770      	bx	lr

0000bc26 <_ZN6mynewt6kernel2os10eventq_run17h9194563dcf3a5798E>:
    #[doc = " - __`evq`__: The event queue to pull an event from"]
    #[doc = ""]
    #[doc = " Return: The event from the queue"]
    pub fn os_eventq_get(arg1: *mut os_eventq) -> *mut os_event;
}
#[mynewt_macros::safe_wrap(attr)] extern "C" {
    bc26:	b580      	push	{r7, lr}
    bc28:	b082      	sub	sp, #8
    bc2a:	9001      	str	r0, [sp, #4]
    bc2c:	9801      	ldr	r0, [sp, #4]
    bc2e:	f00c f861 	bl	17cf4 <os_eventq_run>
    bc32:	e7ff      	b.n	bc34 <_ZN6mynewt6kernel2os10eventq_run17h9194563dcf3a5798E+0xe>
    bc34:	2001      	movs	r0, #1
    bc36:	b002      	add	sp, #8
    bc38:	bd80      	pop	{r7, pc}

0000bc3a <_ZN6mynewt6kernel2os15eventq_dflt_get17h53d678d7b494fb18E>:
    #[doc = ""]
    #[doc = " - __`evq`__: The event queue to remove the event from"]
    #[doc = " - __`ev`__:  The event to remove from the queue"]
    pub fn os_eventq_remove(arg1: *mut os_eventq, arg2: *mut os_event);
}
#[mynewt_macros::safe_wrap(attr)] extern "C" {
    bc3a:	b580      	push	{r7, lr}
    bc3c:	b082      	sub	sp, #8
    bc3e:	9000      	str	r0, [sp, #0]
    bc40:	f00c f884 	bl	17d4c <os_eventq_dflt_get>
    bc44:	9001      	str	r0, [sp, #4]
    bc46:	e7ff      	b.n	bc48 <_ZN6mynewt6kernel2os15eventq_dflt_get17h53d678d7b494fb18E+0xe>
    bc48:	9801      	ldr	r0, [sp, #4]
    bc4a:	9900      	ldr	r1, [sp, #0]
    bc4c:	6048      	str	r0, [r1, #4]
    bc4e:	2000      	movs	r0, #0
    bc50:	6008      	str	r0, [r1, #0]
    bc52:	b002      	add	sp, #8
    bc54:	bd80      	pop	{r7, pc}

0000bc56 <_ZN6mynewt6kernel2os9task_init17h6d03a8a1e529263dE>:
impl Default for os_task_stailq {
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
#[mynewt_macros::safe_wrap(attr)] extern "C" {
    bc56:	b570      	push	{r4, r5, r6, lr}
    bc58:	b098      	sub	sp, #96	; 0x60
    bc5a:	f8dd c080 	ldr.w	ip, [sp, #128]	; 0x80
    bc5e:	f8dd e07c 	ldr.w	lr, [sp, #124]	; 0x7c
    bc62:	9c1e      	ldr	r4, [sp, #120]	; 0x78
    bc64:	9d1d      	ldr	r5, [sp, #116]	; 0x74
    bc66:	9e1c      	ldr	r6, [sp, #112]	; 0x70
    bc68:	900e      	str	r0, [sp, #56]	; 0x38
    bc6a:	910f      	str	r1, [sp, #60]	; 0x3c
    bc6c:	9210      	str	r2, [sp, #64]	; 0x40
    bc6e:	9311      	str	r3, [sp, #68]	; 0x44
    bc70:	f88d 604b 	strb.w	r6, [sp, #75]	; 0x4b
    bc74:	9413      	str	r4, [sp, #76]	; 0x4c
    bc76:	f8cd e050 	str.w	lr, [sp, #80]	; 0x50
    bc7a:	f8ad c056 	strh.w	ip, [sp, #86]	; 0x56
    bc7e:	980f      	ldr	r0, [sp, #60]	; 0x3c
    bc80:	950d      	str	r5, [sp, #52]	; 0x34
    bc82:	f7ff fdb0 	bl	b7e6 <_ZN6mynewt4Strn8validate17h045d7da2a7d2ba6dE>
    bc86:	e7ff      	b.n	bc88 <_ZN6mynewt6kernel2os9task_init17h6d03a8a1e529263dE+0x32>
    bc88:	980e      	ldr	r0, [sp, #56]	; 0x38
    bc8a:	990f      	ldr	r1, [sp, #60]	; 0x3c
    bc8c:	900c      	str	r0, [sp, #48]	; 0x30
    bc8e:	4608      	mov	r0, r1
    bc90:	f7ff fd89 	bl	b7a6 <_ZN6mynewt4Strn6as_ptr17h94013b9b2737125bE>
    bc94:	900b      	str	r0, [sp, #44]	; 0x2c
    bc96:	e7ff      	b.n	bc98 <_ZN6mynewt6kernel2os9task_init17h6d03a8a1e529263dE+0x42>
    bc98:	9a10      	ldr	r2, [sp, #64]	; 0x40
    bc9a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    bc9c:	f89d 004b 	ldrb.w	r0, [sp, #75]	; 0x4b
    bca0:	991d      	ldr	r1, [sp, #116]	; 0x74
    bca2:	f8dd c04c 	ldr.w	ip, [sp, #76]	; 0x4c
    bca6:	f8dd e050 	ldr.w	lr, [sp, #80]	; 0x50
    bcaa:	900a      	str	r0, [sp, #40]	; 0x28
    bcac:	4660      	mov	r0, ip
    bcae:	9109      	str	r1, [sp, #36]	; 0x24
    bcb0:	4671      	mov	r1, lr
    bcb2:	9208      	str	r2, [sp, #32]
    bcb4:	9307      	str	r3, [sp, #28]
    bcb6:	f004 fafa 	bl	102ae <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17habc49aefb85471bcE>
    bcba:	9006      	str	r0, [sp, #24]
    bcbc:	e7ff      	b.n	bcbe <_ZN6mynewt6kernel2os9task_init17h6d03a8a1e529263dE+0x68>
    bcbe:	f8bd 0056 	ldrh.w	r0, [sp, #86]	; 0x56
    bcc2:	4669      	mov	r1, sp
    bcc4:	60c8      	str	r0, [r1, #12]
    bcc6:	9806      	ldr	r0, [sp, #24]
    bcc8:	6088      	str	r0, [r1, #8]
    bcca:	9a09      	ldr	r2, [sp, #36]	; 0x24
    bccc:	604a      	str	r2, [r1, #4]
    bcce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    bcd0:	fa5f fc83 	uxtb.w	ip, r3
    bcd4:	f8c1 c000 	str.w	ip, [r1]
    bcd8:	980c      	ldr	r0, [sp, #48]	; 0x30
    bcda:	990b      	ldr	r1, [sp, #44]	; 0x2c
    bcdc:	9a08      	ldr	r2, [sp, #32]
    bcde:	9b07      	ldr	r3, [sp, #28]
    bce0:	f00c fdd4 	bl	1888c <os_task_init>
    bce4:	9017      	str	r0, [sp, #92]	; 0x5c
    bce6:	e7ff      	b.n	bce8 <_ZN6mynewt6kernel2os9task_init17h6d03a8a1e529263dE+0x92>
    bce8:	9817      	ldr	r0, [sp, #92]	; 0x5c
    bcea:	2800      	cmp	r0, #0
    bcec:	d005      	beq.n	bcfa <_ZN6mynewt6kernel2os9task_init17h6d03a8a1e529263dE+0xa4>
    bcee:	e7ff      	b.n	bcf0 <_ZN6mynewt6kernel2os9task_init17h6d03a8a1e529263dE+0x9a>
    bcf0:	9817      	ldr	r0, [sp, #92]	; 0x5c
    bcf2:	f004 fbfa 	bl	104ea <_ZN78_$LT$mynewt..result..MynewtError$u20$as$u20$core..convert..From$LT$i32$GT$$GT$4from17h1152819df320558fE>
    bcf6:	9005      	str	r0, [sp, #20]
    bcf8:	e004      	b.n	bd04 <_ZN6mynewt6kernel2os9task_init17h6d03a8a1e529263dE+0xae>
    bcfa:	2000      	movs	r0, #0
    bcfc:	9016      	str	r0, [sp, #88]	; 0x58
    bcfe:	2001      	movs	r0, #1
    bd00:	9016      	str	r0, [sp, #88]	; 0x58
    bd02:	e002      	b.n	bd0a <_ZN6mynewt6kernel2os9task_init17h6d03a8a1e529263dE+0xb4>
    bd04:	9805      	ldr	r0, [sp, #20]
    bd06:	9016      	str	r0, [sp, #88]	; 0x58
    bd08:	e7ff      	b.n	bd0a <_ZN6mynewt6kernel2os9task_init17h6d03a8a1e529263dE+0xb4>
    bd0a:	9816      	ldr	r0, [sp, #88]	; 0x58
    bd0c:	b018      	add	sp, #96	; 0x60
    bd0e:	bd70      	pop	{r4, r5, r6, pc}

0000bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>:
    bd10:	b086      	sub	sp, #24
    bd12:	f8dd c018 	ldr.w	ip, [sp, #24]
    bd16:	9100      	str	r1, [sp, #0]
    bd18:	9201      	str	r2, [sp, #4]
    bd1a:	9302      	str	r3, [sp, #8]
    bd1c:	f8cd c00c 	str.w	ip, [sp, #12]
    bd20:	9900      	ldr	r1, [sp, #0]
    bd22:	9a01      	ldr	r2, [sp, #4]
    bd24:	2300      	movs	r3, #0
    bd26:	9305      	str	r3, [sp, #20]
    bd28:	9304      	str	r3, [sp, #16]
    bd2a:	9304      	str	r3, [sp, #16]
    bd2c:	9b02      	ldr	r3, [sp, #8]
    bd2e:	f8dd c00c 	ldr.w	ip, [sp, #12]
    bd32:	6001      	str	r1, [r0, #0]
    bd34:	6042      	str	r2, [r0, #4]
    bd36:	9904      	ldr	r1, [sp, #16]
    bd38:	9a05      	ldr	r2, [sp, #20]
    bd3a:	6081      	str	r1, [r0, #8]
    bd3c:	60c2      	str	r2, [r0, #12]
    bd3e:	6103      	str	r3, [r0, #16]
    bd40:	f8c0 c014 	str.w	ip, [r0, #20]
    bd44:	b006      	add	sp, #24
    bd46:	4770      	bx	lr

0000bd48 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h4da3b8105e87aa56E>:
    bd48:	b580      	push	{r7, lr}
    bd4a:	b084      	sub	sp, #16
    bd4c:	9002      	str	r0, [sp, #8]
    bd4e:	9103      	str	r1, [sp, #12]
    bd50:	9802      	ldr	r0, [sp, #8]
    bd52:	6800      	ldr	r0, [r0, #0]
    bd54:	9903      	ldr	r1, [sp, #12]
    bd56:	f000 f827 	bl	bda8 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf3d27a07158f9b69E>
    bd5a:	9001      	str	r0, [sp, #4]
    bd5c:	e7ff      	b.n	bd5e <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h4da3b8105e87aa56E+0x16>
    bd5e:	9801      	ldr	r0, [sp, #4]
    bd60:	f000 0001 	and.w	r0, r0, #1
    bd64:	b004      	add	sp, #16
    bd66:	bd80      	pop	{r7, pc}

0000bd68 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha74be5221311de7aE>:
    bd68:	b580      	push	{r7, lr}
    bd6a:	b084      	sub	sp, #16
    bd6c:	9002      	str	r0, [sp, #8]
    bd6e:	9103      	str	r1, [sp, #12]
    bd70:	9802      	ldr	r0, [sp, #8]
    bd72:	6800      	ldr	r0, [r0, #0]
    bd74:	9903      	ldr	r1, [sp, #12]
    bd76:	f004 fb4a 	bl	1040e <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hdac756b7c31413cfE>
    bd7a:	9001      	str	r0, [sp, #4]
    bd7c:	e7ff      	b.n	bd7e <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha74be5221311de7aE+0x16>
    bd7e:	9801      	ldr	r0, [sp, #4]
    bd80:	f000 0001 	and.w	r0, r0, #1
    bd84:	b004      	add	sp, #16
    bd86:	bd80      	pop	{r7, pc}

0000bd88 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hde23250824a46f68E>:
    bd88:	b580      	push	{r7, lr}
    bd8a:	b084      	sub	sp, #16
    bd8c:	9002      	str	r0, [sp, #8]
    bd8e:	9103      	str	r1, [sp, #12]
    bd90:	9802      	ldr	r0, [sp, #8]
    bd92:	6800      	ldr	r0, [r0, #0]
    bd94:	9903      	ldr	r1, [sp, #12]
    bd96:	f004 fb05 	bl	103a4 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hae4b9b613621b905E>
    bd9a:	9001      	str	r0, [sp, #4]
    bd9c:	e7ff      	b.n	bd9e <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hde23250824a46f68E+0x16>
    bd9e:	9801      	ldr	r0, [sp, #4]
    bda0:	f000 0001 	and.w	r0, r0, #1
    bda4:	b004      	add	sp, #16
    bda6:	bd80      	pop	{r7, pc}

0000bda8 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf3d27a07158f9b69E>:
    bda8:	b580      	push	{r7, lr}
    bdaa:	b084      	sub	sp, #16
    bdac:	9002      	str	r0, [sp, #8]
    bdae:	9103      	str	r1, [sp, #12]
    bdb0:	9802      	ldr	r0, [sp, #8]
    bdb2:	6800      	ldr	r0, [r0, #0]
    bdb4:	9903      	ldr	r1, [sp, #12]
    bdb6:	f004 fac0 	bl	1033a <_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17hf025f1216eed7986E>
    bdba:	9001      	str	r0, [sp, #4]
    bdbc:	e7ff      	b.n	bdbe <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf3d27a07158f9b69E+0x16>
    bdbe:	9801      	ldr	r0, [sp, #4]
    bdc0:	f000 0001 	and.w	r0, r0, #1
    bdc4:	b004      	add	sp, #16
    bdc6:	bd80      	pop	{r7, pc}

0000bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>:
    bdc8:	b088      	sub	sp, #32
    bdca:	9002      	str	r0, [sp, #8]
    bdcc:	9103      	str	r1, [sp, #12]
    bdce:	9803      	ldr	r0, [sp, #12]
    bdd0:	9006      	str	r0, [sp, #24]
    bdd2:	9806      	ldr	r0, [sp, #24]
    bdd4:	9001      	str	r0, [sp, #4]
    bdd6:	e7ff      	b.n	bdd8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE+0x10>
    bdd8:	9802      	ldr	r0, [sp, #8]
    bdda:	9007      	str	r0, [sp, #28]
    bddc:	9807      	ldr	r0, [sp, #28]
    bdde:	9000      	str	r0, [sp, #0]
    bde0:	e7ff      	b.n	bde2 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE+0x1a>
    bde2:	9800      	ldr	r0, [sp, #0]
    bde4:	9004      	str	r0, [sp, #16]
    bde6:	9901      	ldr	r1, [sp, #4]
    bde8:	9105      	str	r1, [sp, #20]
    bdea:	9804      	ldr	r0, [sp, #16]
    bdec:	9905      	ldr	r1, [sp, #20]
    bdee:	b008      	add	sp, #32
    bdf0:	4770      	bx	lr

0000bdf2 <_ZN4core3fmt10ArgumentV13new17h5588318b4f536cd0E>:
    bdf2:	b088      	sub	sp, #32
    bdf4:	9002      	str	r0, [sp, #8]
    bdf6:	9103      	str	r1, [sp, #12]
    bdf8:	9803      	ldr	r0, [sp, #12]
    bdfa:	9006      	str	r0, [sp, #24]
    bdfc:	9806      	ldr	r0, [sp, #24]
    bdfe:	9001      	str	r0, [sp, #4]
    be00:	e7ff      	b.n	be02 <_ZN4core3fmt10ArgumentV13new17h5588318b4f536cd0E+0x10>
    be02:	9802      	ldr	r0, [sp, #8]
    be04:	9007      	str	r0, [sp, #28]
    be06:	9807      	ldr	r0, [sp, #28]
    be08:	9000      	str	r0, [sp, #0]
    be0a:	e7ff      	b.n	be0c <_ZN4core3fmt10ArgumentV13new17h5588318b4f536cd0E+0x1a>
    be0c:	9800      	ldr	r0, [sp, #0]
    be0e:	9004      	str	r0, [sp, #16]
    be10:	9901      	ldr	r1, [sp, #4]
    be12:	9105      	str	r1, [sp, #20]
    be14:	9804      	ldr	r0, [sp, #16]
    be16:	9905      	ldr	r1, [sp, #20]
    be18:	b008      	add	sp, #32
    be1a:	4770      	bx	lr

0000be1c <_ZN4core3fmt10ArgumentV13new17h93c5bc3c3358d946E>:
    be1c:	b088      	sub	sp, #32
    be1e:	9002      	str	r0, [sp, #8]
    be20:	9103      	str	r1, [sp, #12]
    be22:	9803      	ldr	r0, [sp, #12]
    be24:	9006      	str	r0, [sp, #24]
    be26:	9806      	ldr	r0, [sp, #24]
    be28:	9001      	str	r0, [sp, #4]
    be2a:	e7ff      	b.n	be2c <_ZN4core3fmt10ArgumentV13new17h93c5bc3c3358d946E+0x10>
    be2c:	9802      	ldr	r0, [sp, #8]
    be2e:	9007      	str	r0, [sp, #28]
    be30:	9807      	ldr	r0, [sp, #28]
    be32:	9000      	str	r0, [sp, #0]
    be34:	e7ff      	b.n	be36 <_ZN4core3fmt10ArgumentV13new17h93c5bc3c3358d946E+0x1a>
    be36:	9800      	ldr	r0, [sp, #0]
    be38:	9004      	str	r0, [sp, #16]
    be3a:	9901      	ldr	r1, [sp, #4]
    be3c:	9105      	str	r1, [sp, #20]
    be3e:	9804      	ldr	r0, [sp, #16]
    be40:	9905      	ldr	r1, [sp, #20]
    be42:	b008      	add	sp, #32
    be44:	4770      	bx	lr

0000be46 <_ZN4core3fmt10ArgumentV13new17hd6e40bd932949712E>:
    be46:	b088      	sub	sp, #32
    be48:	9002      	str	r0, [sp, #8]
    be4a:	9103      	str	r1, [sp, #12]
    be4c:	9803      	ldr	r0, [sp, #12]
    be4e:	9006      	str	r0, [sp, #24]
    be50:	9806      	ldr	r0, [sp, #24]
    be52:	9001      	str	r0, [sp, #4]
    be54:	e7ff      	b.n	be56 <_ZN4core3fmt10ArgumentV13new17hd6e40bd932949712E+0x10>
    be56:	9802      	ldr	r0, [sp, #8]
    be58:	9007      	str	r0, [sp, #28]
    be5a:	9807      	ldr	r0, [sp, #28]
    be5c:	9000      	str	r0, [sp, #0]
    be5e:	e7ff      	b.n	be60 <_ZN4core3fmt10ArgumentV13new17hd6e40bd932949712E+0x1a>
    be60:	9800      	ldr	r0, [sp, #0]
    be62:	9004      	str	r0, [sp, #16]
    be64:	9901      	ldr	r1, [sp, #4]
    be66:	9105      	str	r1, [sp, #20]
    be68:	9804      	ldr	r0, [sp, #16]
    be6a:	9905      	ldr	r1, [sp, #20]
    be6c:	b008      	add	sp, #32
    be6e:	4770      	bx	lr

0000be70 <_ZN6mynewt3sys7console5print17h2bc06bd0c362550eE>:
//! Display messages on Arm Semihosting Console (via OpenOCD)

///  Display message `msg` on the Arm Semihosting console (via OpenOCD).
#[cfg(feature = "dispatch")]  //  With dispatch...
pub fn print(msg: &str) {
    be70:	b580      	push	{r7, lr}
    be72:	b088      	sub	sp, #32
    be74:	9002      	str	r0, [sp, #8]
    be76:	9103      	str	r1, [sp, #12]
    //  Call the Semihosting Console API, which is unsafe.
    let buf = msg.as_ptr();
    be78:	9802      	ldr	r0, [sp, #8]
    be7a:	9903      	ldr	r1, [sp, #12]
    be7c:	f004 fb16 	bl	104ac <_ZN4core3str21_$LT$impl$u20$str$GT$6as_ptr17h3d3bebd801dbee98E>
    be80:	9004      	str	r0, [sp, #16]
    be82:	e7ff      	b.n	be84 <_ZN6mynewt3sys7console5print17h2bc06bd0c362550eE+0x14>
    let len = msg.len() as u32;
    be84:	9802      	ldr	r0, [sp, #8]
    be86:	9903      	ldr	r1, [sp, #12]
    be88:	f004 faf6 	bl	10478 <_ZN4core3str21_$LT$impl$u20$str$GT$3len17hb10ade17c01876c3E>
    be8c:	9001      	str	r0, [sp, #4]
    be8e:	e7ff      	b.n	be90 <_ZN6mynewt3sys7console5print17h2bc06bd0c362550eE+0x20>
    be90:	9801      	ldr	r0, [sp, #4]
    be92:	9005      	str	r0, [sp, #20]
    be94:	2100      	movs	r1, #0

    //  TODO: Dispatch the Mynewt C function `console_buffer`.
    //  TODO: Use a procedural macro to compute the hash of function name `console_buffer`.
    let hash = 0;  //  TODO
    be96:	9106      	str	r1, [sp, #24]
    //  TODO: Lookup the dispatch address of `console_buffer`.
    let _addr = get_dispatch_address(hash);
    be98:	9806      	ldr	r0, [sp, #24]
    be9a:	f000 f809 	bl	beb0 <_ZN6mynewt3sys7console20get_dispatch_address17h0de14095a4bda617E>
    be9e:	9007      	str	r0, [sp, #28]
    bea0:	e7ff      	b.n	bea2 <_ZN6mynewt3sys7console5print17h2bc06bd0c362550eE+0x32>
    //  TODO: Call the `console_buffer` function using the dispatch address.
    unsafe { console_buffer(buf, len); }
    bea2:	9804      	ldr	r0, [sp, #16]
    bea4:	9905      	ldr	r1, [sp, #20]
    bea6:	f00a fbe3 	bl	16670 <console_buffer>
    beaa:	e7ff      	b.n	beac <_ZN6mynewt3sys7console5print17h2bc06bd0c362550eE+0x3c>
}
    beac:	b008      	add	sp, #32
    beae:	bd80      	pop	{r7, pc}

0000beb0 <_ZN6mynewt3sys7console20get_dispatch_address17h0de14095a4bda617E>:

/// Return the Dispatch Address for the OS function whose function name hashed is `hash`
#[cfg(feature = "dispatch")]  //  With dispatch...
pub fn get_dispatch_address(_hash: u32) -> u32 {
    beb0:	b081      	sub	sp, #4
    beb2:	9000      	str	r0, [sp, #0]
    beb4:	2000      	movs	r0, #0
    //  TODO: Lookup the Dispatch Table for the hash of function name
    0
}
    beb6:	b001      	add	sp, #4
    beb8:	4770      	bx	lr

0000beba <_ZN6mynewt3sys7console6buffer17h5d231792a5c05dc5E>:
    //  Call the Semihosting Console API, which is unsafe.
    unsafe { console_buffer(msg.as_ptr(), msg.len() as u32); }
}

///  Add the string to the output buffer.
pub fn buffer(msg: &str) {
    beba:	b580      	push	{r7, lr}
    bebc:	b084      	sub	sp, #16
    bebe:	9002      	str	r0, [sp, #8]
    bec0:	9103      	str	r1, [sp, #12]
    //  Call the Semihosting Console API, which is unsafe.
    unsafe { console_buffer(msg.as_ptr(), msg.len() as u32); }
    bec2:	9802      	ldr	r0, [sp, #8]
    bec4:	9903      	ldr	r1, [sp, #12]
    bec6:	f004 faf1 	bl	104ac <_ZN4core3str21_$LT$impl$u20$str$GT$6as_ptr17h3d3bebd801dbee98E>
    beca:	9001      	str	r0, [sp, #4]
    becc:	e7ff      	b.n	bece <_ZN6mynewt3sys7console6buffer17h5d231792a5c05dc5E+0x14>
    bece:	9802      	ldr	r0, [sp, #8]
    bed0:	9903      	ldr	r1, [sp, #12]
    bed2:	f004 fad1 	bl	10478 <_ZN4core3str21_$LT$impl$u20$str$GT$3len17hb10ade17c01876c3E>
    bed6:	9000      	str	r0, [sp, #0]
    bed8:	e7ff      	b.n	beda <_ZN6mynewt3sys7console6buffer17h5d231792a5c05dc5E+0x20>
    beda:	9801      	ldr	r0, [sp, #4]
    bedc:	9900      	ldr	r1, [sp, #0]
    bede:	f00a fbc7 	bl	16670 <console_buffer>
    bee2:	e7ff      	b.n	bee4 <_ZN6mynewt3sys7console6buffer17h5d231792a5c05dc5E+0x2a>
}
    bee4:	b004      	add	sp, #16
    bee6:	bd80      	pop	{r7, pc}

0000bee8 <_ZN6mynewt3sys7console8printint17hb4cf23aeef7705a5E>:
    unsafe { console_printhex(v); }
}

///  Write an int to the output buffer.
///  C API: `void console_printint(int i)`
pub fn printint(v: i32) {
    bee8:	b580      	push	{r7, lr}
    beea:	b082      	sub	sp, #8
    beec:	9001      	str	r0, [sp, #4]
    unsafe { console_printint(v); }
    beee:	9801      	ldr	r0, [sp, #4]
    bef0:	f00a fc2e 	bl	16750 <console_printint>
    bef4:	e7ff      	b.n	bef6 <_ZN6mynewt3sys7console8printint17hb4cf23aeef7705a5E+0xe>
}
    bef6:	b002      	add	sp, #8
    bef8:	bd80      	pop	{r7, pc}

0000befa <_ZN6mynewt3sys7console5flush17hdc198a9fe895c898E>:
pub fn dump(buffer: *const u8, len: u32) {
    unsafe { console_dump(buffer, len); }
}

///  Flush the output buffer to the console.
pub fn flush() {
    befa:	b580      	push	{r7, lr}
    unsafe { console_flush(); }
    befc:	f00a fb90 	bl	16620 <console_flush>
    bf00:	e7ff      	b.n	bf02 <_ZN6mynewt3sys7console5flush17hdc198a9fe895c898E+0x8>
}
    bf02:	bd80      	pop	{r7, pc}

0000bf04 <_ZN79_$LT$embedded_graphics..style..Style$LT$P$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hfe89297384080780E>:
//! Styling struct to customise the look of objects.

use crate::pixelcolor::PixelColor;

/// Style properties for an object
#[derive(Debug, Copy, Clone)]
    bf04:	b580      	push	{r7, lr}
    bf06:	b08a      	sub	sp, #40	; 0x28
    bf08:	9106      	str	r1, [sp, #24]
pub struct Style<P: PixelColor> {
    /// Fill colour of the object
    ///
    /// For fonts, this is the background colour of the text
    pub fill_color: Option<P>,
    bf0a:	9906      	ldr	r1, [sp, #24]
    bf0c:	9107      	str	r1, [sp, #28]

    /// Stroke (border/line) color of the object
    ///
    /// For fonts, this is the foreground colour of the text
    pub stroke_color: Option<P>,
    bf0e:	9906      	ldr	r1, [sp, #24]
    bf10:	3104      	adds	r1, #4
    bf12:	9108      	str	r1, [sp, #32]

    /// Stroke width
    ///
    /// Set the stroke width for an object. Has no effect on fonts.
    pub stroke_width: u8,
    bf14:	9906      	ldr	r1, [sp, #24]
    bf16:	3108      	adds	r1, #8
    bf18:	9109      	str	r1, [sp, #36]	; 0x24
    pub fill_color: Option<P>,
    bf1a:	9907      	ldr	r1, [sp, #28]
    bf1c:	9005      	str	r0, [sp, #20]
    bf1e:	4608      	mov	r0, r1
    bf20:	f000 fbc8 	bl	c6b4 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h186c6830f1ed9057E>
    bf24:	9004      	str	r0, [sp, #16]
    bf26:	9103      	str	r1, [sp, #12]
    bf28:	e7ff      	b.n	bf2a <_ZN79_$LT$embedded_graphics..style..Style$LT$P$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hfe89297384080780E+0x26>
    pub stroke_color: Option<P>,
    bf2a:	9808      	ldr	r0, [sp, #32]
    bf2c:	f000 fbc2 	bl	c6b4 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h186c6830f1ed9057E>
    bf30:	9002      	str	r0, [sp, #8]
    bf32:	9101      	str	r1, [sp, #4]
    bf34:	e7ff      	b.n	bf36 <_ZN79_$LT$embedded_graphics..style..Style$LT$P$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hfe89297384080780E+0x32>
    pub stroke_width: u8,
    bf36:	9809      	ldr	r0, [sp, #36]	; 0x24
    bf38:	f000 fbe0 	bl	c6fc <_ZN4core5clone5impls51_$LT$impl$u20$core..clone..Clone$u20$for$u20$u8$GT$5clone17h8d9327329424f87cE>
    bf3c:	9000      	str	r0, [sp, #0]
    bf3e:	e7ff      	b.n	bf40 <_ZN79_$LT$embedded_graphics..style..Style$LT$P$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hfe89297384080780E+0x3c>
#[derive(Debug, Copy, Clone)]
    bf40:	9804      	ldr	r0, [sp, #16]
    bf42:	9905      	ldr	r1, [sp, #20]
    bf44:	8008      	strh	r0, [r1, #0]
    bf46:	9a03      	ldr	r2, [sp, #12]
    bf48:	804a      	strh	r2, [r1, #2]
    bf4a:	9b02      	ldr	r3, [sp, #8]
    bf4c:	808b      	strh	r3, [r1, #4]
    bf4e:	f8dd c004 	ldr.w	ip, [sp, #4]
    bf52:	f8a1 c006 	strh.w	ip, [r1, #6]
    bf56:	f8dd e000 	ldr.w	lr, [sp]
    bf5a:	f881 e008 	strb.w	lr, [r1, #8]
    bf5e:	b00a      	add	sp, #40	; 0x28
    bf60:	bd80      	pop	{r7, pc}

0000bf62 <_ZN83_$LT$embedded_graphics..style..Style$LT$P$GT$$u20$as$u20$core..default..Default$GT$7default17ha6c30ca12b466235E>:

impl<P> Default for Style<P>
where
    P: PixelColor,
{
    fn default() -> Self {
    bf62:	b082      	sub	sp, #8
    bf64:	2100      	movs	r1, #0
        Self {
            fill_color: None,
    bf66:	f8ad 1000 	strh.w	r1, [sp]
            stroke_color: None,
    bf6a:	f8ad 1004 	strh.w	r1, [sp, #4]
        Self {
    bf6e:	f8bd 1000 	ldrh.w	r1, [sp]
    bf72:	f8bd 2002 	ldrh.w	r2, [sp, #2]
    bf76:	8001      	strh	r1, [r0, #0]
    bf78:	8042      	strh	r2, [r0, #2]
    bf7a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
    bf7e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
    bf82:	8081      	strh	r1, [r0, #4]
    bf84:	80c2      	strh	r2, [r0, #6]
    bf86:	2101      	movs	r1, #1
    bf88:	7201      	strb	r1, [r0, #8]
            stroke_width: 1,
        }
    }
    bf8a:	b002      	add	sp, #8
    bf8c:	4770      	bx	lr

0000bf8e <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h2b593d74deb7b9abE>:
    bf8e:	b082      	sub	sp, #8
    bf90:	9000      	str	r0, [sp, #0]
    bf92:	9800      	ldr	r0, [sp, #0]
    bf94:	8800      	ldrh	r0, [r0, #0]
    bf96:	2800      	cmp	r0, #0
    bf98:	d004      	beq.n	bfa4 <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h2b593d74deb7b9abE+0x16>
    bf9a:	e7ff      	b.n	bf9c <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h2b593d74deb7b9abE+0xe>
    bf9c:	2000      	movs	r0, #0
    bf9e:	f88d 0007 	strb.w	r0, [sp, #7]
    bfa2:	e003      	b.n	bfac <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h2b593d74deb7b9abE+0x1e>
    bfa4:	2001      	movs	r0, #1
    bfa6:	f88d 0007 	strb.w	r0, [sp, #7]
    bfaa:	e7ff      	b.n	bfac <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h2b593d74deb7b9abE+0x1e>
    bfac:	f89d 0007 	ldrb.w	r0, [sp, #7]
    bfb0:	b002      	add	sp, #8
    bfb2:	4770      	bx	lr

0000bfb4 <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h6eebeb2a9c50ab48E>:
    bfb4:	b082      	sub	sp, #8
    bfb6:	9000      	str	r0, [sp, #0]
    bfb8:	9800      	ldr	r0, [sp, #0]
    bfba:	7800      	ldrb	r0, [r0, #0]
    bfbc:	07c0      	lsls	r0, r0, #31
    bfbe:	2800      	cmp	r0, #0
    bfc0:	d004      	beq.n	bfcc <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h6eebeb2a9c50ab48E+0x18>
    bfc2:	e7ff      	b.n	bfc4 <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h6eebeb2a9c50ab48E+0x10>
    bfc4:	2000      	movs	r0, #0
    bfc6:	f88d 0007 	strb.w	r0, [sp, #7]
    bfca:	e003      	b.n	bfd4 <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h6eebeb2a9c50ab48E+0x20>
    bfcc:	2001      	movs	r0, #1
    bfce:	f88d 0007 	strb.w	r0, [sp, #7]
    bfd2:	e7ff      	b.n	bfd4 <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h6eebeb2a9c50ab48E+0x20>
    bfd4:	f89d 0007 	ldrb.w	r0, [sp, #7]
    bfd8:	b002      	add	sp, #8
    bfda:	4770      	bx	lr

0000bfdc <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h5ae14e54a9cca8d6E>:
    bfdc:	b510      	push	{r4, lr}
    bfde:	b086      	sub	sp, #24
    bfe0:	f8dd c020 	ldr.w	ip, [sp, #32]
    bfe4:	468e      	mov	lr, r1
    bfe6:	4604      	mov	r4, r0
    bfe8:	f8ad 0008 	strh.w	r0, [sp, #8]
    bfec:	f8ad 100a 	strh.w	r1, [sp, #10]
    bff0:	9203      	str	r2, [sp, #12]
    bff2:	9304      	str	r3, [sp, #16]
    bff4:	f8bd 0008 	ldrh.w	r0, [sp, #8]
    bff8:	4601      	mov	r1, r0
    bffa:	2800      	cmp	r0, #0
    bffc:	f8cd c004 	str.w	ip, [sp, #4]
    c000:	d002      	beq.n	c008 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h5ae14e54a9cca8d6E+0x2c>
    c002:	e7ff      	b.n	c004 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h5ae14e54a9cca8d6E+0x28>
    c004:	e005      	b.n	c012 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h5ae14e54a9cca8d6E+0x36>
    c006:	defe      	udf	#254	; 0xfe
    c008:	f8bd 0008 	ldrh.w	r0, [sp, #8]
    c00c:	2800      	cmp	r0, #0
    c00e:	d012      	beq.n	c036 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h5ae14e54a9cca8d6E+0x5a>
    c010:	e013      	b.n	c03a <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h5ae14e54a9cca8d6E+0x5e>
    c012:	f8bd 000a 	ldrh.w	r0, [sp, #10]
    c016:	f8ad 0016 	strh.w	r0, [sp, #22]
    c01a:	9803      	ldr	r0, [sp, #12]
    c01c:	9904      	ldr	r1, [sp, #16]
    c01e:	466a      	mov	r2, sp
    c020:	9b01      	ldr	r3, [sp, #4]
    c022:	6013      	str	r3, [r2, #0]
    c024:	f64b 73fc 	movw	r3, #49148	; 0xbffc
    c028:	f2c0 0301 	movt	r3, #1
    c02c:	f10d 0216 	add.w	r2, sp, #22
    c030:	f008 fd89 	bl	14b46 <_ZN4core6option18expect_none_failed17h2665e7008169a3baE>
    c034:	defe      	udf	#254	; 0xfe
    c036:	b006      	add	sp, #24
    c038:	bd10      	pop	{r4, pc}
    c03a:	e7fc      	b.n	c036 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h5ae14e54a9cca8d6E+0x5a>

0000c03c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h76d1a1cb65ecbf07E>:
    c03c:	b088      	sub	sp, #32
    c03e:	4684      	mov	ip, r0
    c040:	f88d 000f 	strb.w	r0, [sp, #15]
    c044:	9104      	str	r1, [sp, #16]
    c046:	9205      	str	r2, [sp, #20]
    c048:	f89d 000f 	ldrb.w	r0, [sp, #15]
    c04c:	07c1      	lsls	r1, r0, #31
    c04e:	2900      	cmp	r1, #0
    c050:	9302      	str	r3, [sp, #8]
    c052:	d002      	beq.n	c05a <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h76d1a1cb65ecbf07E+0x1e>
    c054:	e7ff      	b.n	c056 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h76d1a1cb65ecbf07E+0x1a>
    c056:	e006      	b.n	c066 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h76d1a1cb65ecbf07E+0x2a>
    c058:	defe      	udf	#254	; 0xfe
    c05a:	f89d 000f 	ldrb.w	r0, [sp, #15]
    c05e:	07c0      	lsls	r0, r0, #31
    c060:	2800      	cmp	r0, #0
    c062:	d00d      	beq.n	c080 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h76d1a1cb65ecbf07E+0x44>
    c064:	e00e      	b.n	c084 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h76d1a1cb65ecbf07E+0x48>
    c066:	9804      	ldr	r0, [sp, #16]
    c068:	9905      	ldr	r1, [sp, #20]
    c06a:	466a      	mov	r2, sp
    c06c:	9b02      	ldr	r3, [sp, #8]
    c06e:	6013      	str	r3, [r2, #0]
    c070:	f24c 030c 	movw	r3, #49164	; 0xc00c
    c074:	f2c0 0301 	movt	r3, #1
    c078:	aa07      	add	r2, sp, #28
    c07a:	f008 fd64 	bl	14b46 <_ZN4core6option18expect_none_failed17h2665e7008169a3baE>
    c07e:	defe      	udf	#254	; 0xfe
    c080:	b008      	add	sp, #32
    c082:	4770      	bx	lr
    c084:	e7fc      	b.n	c080 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h76d1a1cb65ecbf07E+0x44>

0000c086 <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h3f4d72a8eb60b230E>:
    c086:	b086      	sub	sp, #24
    c088:	4602      	mov	r2, r0
    c08a:	f88d 000f 	strb.w	r0, [sp, #15]
    c08e:	f89d 000f 	ldrb.w	r0, [sp, #15]
    c092:	07c3      	lsls	r3, r0, #31
    c094:	2b00      	cmp	r3, #0
    c096:	9102      	str	r1, [sp, #8]
    c098:	d002      	beq.n	c0a0 <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h3f4d72a8eb60b230E+0x1a>
    c09a:	e7ff      	b.n	c09c <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h3f4d72a8eb60b230E+0x16>
    c09c:	e006      	b.n	c0ac <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h3f4d72a8eb60b230E+0x26>
    c09e:	defe      	udf	#254	; 0xfe
    c0a0:	f89d 000f 	ldrb.w	r0, [sp, #15]
    c0a4:	07c0      	lsls	r0, r0, #31
    c0a6:	2800      	cmp	r0, #0
    c0a8:	d010      	beq.n	c0cc <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h3f4d72a8eb60b230E+0x46>
    c0aa:	e011      	b.n	c0d0 <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h3f4d72a8eb60b230E+0x4a>
    c0ac:	4668      	mov	r0, sp
    c0ae:	9902      	ldr	r1, [sp, #8]
    c0b0:	6001      	str	r1, [r0, #0]
    c0b2:	f24c 001c 	movw	r0, #49180	; 0xc01c
    c0b6:	f2c0 0001 	movt	r0, #1
    c0ba:	f24c 030c 	movw	r3, #49164	; 0xc00c
    c0be:	f2c0 0301 	movt	r3, #1
    c0c2:	212b      	movs	r1, #43	; 0x2b
    c0c4:	aa05      	add	r2, sp, #20
    c0c6:	f008 fd3e 	bl	14b46 <_ZN4core6option18expect_none_failed17h2665e7008169a3baE>
    c0ca:	defe      	udf	#254	; 0xfe
    c0cc:	b006      	add	sp, #24
    c0ce:	4770      	bx	lr
    c0d0:	e7fc      	b.n	c0cc <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h3f4d72a8eb60b230E+0x46>

0000c0d2 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h1c3ab9f9924f41efE>:
    c0d2:	b580      	push	{r7, lr}
    c0d4:	b086      	sub	sp, #24
    c0d6:	9000      	str	r0, [sp, #0]
    c0d8:	2000      	movs	r0, #0
    c0da:	f88d 0017 	strb.w	r0, [sp, #23]
    c0de:	f88d 0015 	strb.w	r0, [sp, #21]
    c0e2:	f88d 0016 	strb.w	r0, [sp, #22]
    c0e6:	2001      	movs	r0, #1
    c0e8:	f88d 0016 	strb.w	r0, [sp, #22]
    c0ec:	f88d 0017 	strb.w	r0, [sp, #23]
    c0f0:	f88d 0015 	strb.w	r0, [sp, #21]
    c0f4:	9800      	ldr	r0, [sp, #0]
    c0f6:	1e41      	subs	r1, r0, #1
    c0f8:	bf18      	it	ne
    c0fa:	2101      	movne	r1, #1
    c0fc:	2801      	cmp	r0, #1
    c0fe:	d002      	beq.n	c106 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h1c3ab9f9924f41efE+0x34>
    c100:	e7ff      	b.n	c102 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h1c3ab9f9924f41efE+0x30>
    c102:	e006      	b.n	c112 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h1c3ab9f9924f41efE+0x40>
    c104:	defe      	udf	#254	; 0xfe
    c106:	2000      	movs	r0, #0
    c108:	f88d 0017 	strb.w	r0, [sp, #23]
    c10c:	f88d 0007 	strb.w	r0, [sp, #7]
    c110:	e010      	b.n	c134 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h1c3ab9f9924f41efE+0x62>
    c112:	2000      	movs	r0, #0
    c114:	f88d 0016 	strb.w	r0, [sp, #22]
    c118:	9900      	ldr	r1, [sp, #0]
    c11a:	9103      	str	r1, [sp, #12]
    c11c:	f88d 0015 	strb.w	r0, [sp, #21]
    c120:	9803      	ldr	r0, [sp, #12]
    c122:	9004      	str	r0, [sp, #16]
    c124:	9804      	ldr	r0, [sp, #16]
    c126:	f001 fda5 	bl	dc74 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset28_$u7b$$u7b$closure$u7d$$u7d$17h748eed6b80083f62E>
    c12a:	e7ff      	b.n	c12c <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h1c3ab9f9924f41efE+0x5a>
    c12c:	2001      	movs	r0, #1
    c12e:	f88d 0007 	strb.w	r0, [sp, #7]
    c132:	e7ff      	b.n	c134 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h1c3ab9f9924f41efE+0x62>
    c134:	f89d 0015 	ldrb.w	r0, [sp, #21]
    c138:	07c0      	lsls	r0, r0, #31
    c13a:	2800      	cmp	r0, #0
    c13c:	d104      	bne.n	c148 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h1c3ab9f9924f41efE+0x76>
    c13e:	e7ff      	b.n	c140 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h1c3ab9f9924f41efE+0x6e>
    c140:	9800      	ldr	r0, [sp, #0]
    c142:	2801      	cmp	r0, #1
    c144:	d008      	beq.n	c158 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h1c3ab9f9924f41efE+0x86>
    c146:	e011      	b.n	c16c <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h1c3ab9f9924f41efE+0x9a>
    c148:	2000      	movs	r0, #0
    c14a:	f88d 0015 	strb.w	r0, [sp, #21]
    c14e:	e7f7      	b.n	c140 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h1c3ab9f9924f41efE+0x6e>
    c150:	f89d 0007 	ldrb.w	r0, [sp, #7]
    c154:	b006      	add	sp, #24
    c156:	bd80      	pop	{r7, pc}
    c158:	f89d 0017 	ldrb.w	r0, [sp, #23]
    c15c:	07c0      	lsls	r0, r0, #31
    c15e:	2800      	cmp	r0, #0
    c160:	d0f6      	beq.n	c150 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h1c3ab9f9924f41efE+0x7e>
    c162:	e7ff      	b.n	c164 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h1c3ab9f9924f41efE+0x92>
    c164:	2000      	movs	r0, #0
    c166:	f88d 0017 	strb.w	r0, [sp, #23]
    c16a:	e7f1      	b.n	c150 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h1c3ab9f9924f41efE+0x7e>
    c16c:	f89d 0016 	ldrb.w	r0, [sp, #22]
    c170:	07c0      	lsls	r0, r0, #31
    c172:	2800      	cmp	r0, #0
    c174:	d0ec      	beq.n	c150 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h1c3ab9f9924f41efE+0x7e>
    c176:	e7ff      	b.n	c178 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h1c3ab9f9924f41efE+0xa6>
    c178:	2000      	movs	r0, #0
    c17a:	f88d 0016 	strb.w	r0, [sp, #22]
    c17e:	e7e7      	b.n	c150 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h1c3ab9f9924f41efE+0x7e>

0000c180 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbdcfea35b5eeeb86E>:
    c180:	b580      	push	{r7, lr}
    c182:	b086      	sub	sp, #24
    c184:	9000      	str	r0, [sp, #0]
    c186:	2000      	movs	r0, #0
    c188:	f88d 0017 	strb.w	r0, [sp, #23]
    c18c:	f88d 0015 	strb.w	r0, [sp, #21]
    c190:	f88d 0016 	strb.w	r0, [sp, #22]
    c194:	2001      	movs	r0, #1
    c196:	f88d 0016 	strb.w	r0, [sp, #22]
    c19a:	f88d 0017 	strb.w	r0, [sp, #23]
    c19e:	f88d 0015 	strb.w	r0, [sp, #21]
    c1a2:	9800      	ldr	r0, [sp, #0]
    c1a4:	1e41      	subs	r1, r0, #1
    c1a6:	bf18      	it	ne
    c1a8:	2101      	movne	r1, #1
    c1aa:	2801      	cmp	r0, #1
    c1ac:	d002      	beq.n	c1b4 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbdcfea35b5eeeb86E+0x34>
    c1ae:	e7ff      	b.n	c1b0 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbdcfea35b5eeeb86E+0x30>
    c1b0:	e006      	b.n	c1c0 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbdcfea35b5eeeb86E+0x40>
    c1b2:	defe      	udf	#254	; 0xfe
    c1b4:	2000      	movs	r0, #0
    c1b6:	f88d 0017 	strb.w	r0, [sp, #23]
    c1ba:	f88d 0007 	strb.w	r0, [sp, #7]
    c1be:	e010      	b.n	c1e2 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbdcfea35b5eeeb86E+0x62>
    c1c0:	2000      	movs	r0, #0
    c1c2:	f88d 0016 	strb.w	r0, [sp, #22]
    c1c6:	9900      	ldr	r1, [sp, #0]
    c1c8:	9103      	str	r1, [sp, #12]
    c1ca:	f88d 0015 	strb.w	r0, [sp, #21]
    c1ce:	9803      	ldr	r0, [sp, #12]
    c1d0:	9004      	str	r0, [sp, #16]
    c1d2:	9804      	ldr	r0, [sp, #16]
    c1d4:	f001 fd53 	bl	dc7e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset28_$u7b$$u7b$closure$u7d$$u7d$17h9747acb7f72f8cf9E>
    c1d8:	e7ff      	b.n	c1da <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbdcfea35b5eeeb86E+0x5a>
    c1da:	2001      	movs	r0, #1
    c1dc:	f88d 0007 	strb.w	r0, [sp, #7]
    c1e0:	e7ff      	b.n	c1e2 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbdcfea35b5eeeb86E+0x62>
    c1e2:	f89d 0015 	ldrb.w	r0, [sp, #21]
    c1e6:	07c0      	lsls	r0, r0, #31
    c1e8:	2800      	cmp	r0, #0
    c1ea:	d104      	bne.n	c1f6 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbdcfea35b5eeeb86E+0x76>
    c1ec:	e7ff      	b.n	c1ee <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbdcfea35b5eeeb86E+0x6e>
    c1ee:	9800      	ldr	r0, [sp, #0]
    c1f0:	2801      	cmp	r0, #1
    c1f2:	d008      	beq.n	c206 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbdcfea35b5eeeb86E+0x86>
    c1f4:	e011      	b.n	c21a <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbdcfea35b5eeeb86E+0x9a>
    c1f6:	2000      	movs	r0, #0
    c1f8:	f88d 0015 	strb.w	r0, [sp, #21]
    c1fc:	e7f7      	b.n	c1ee <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbdcfea35b5eeeb86E+0x6e>
    c1fe:	f89d 0007 	ldrb.w	r0, [sp, #7]
    c202:	b006      	add	sp, #24
    c204:	bd80      	pop	{r7, pc}
    c206:	f89d 0017 	ldrb.w	r0, [sp, #23]
    c20a:	07c0      	lsls	r0, r0, #31
    c20c:	2800      	cmp	r0, #0
    c20e:	d0f6      	beq.n	c1fe <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbdcfea35b5eeeb86E+0x7e>
    c210:	e7ff      	b.n	c212 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbdcfea35b5eeeb86E+0x92>
    c212:	2000      	movs	r0, #0
    c214:	f88d 0017 	strb.w	r0, [sp, #23]
    c218:	e7f1      	b.n	c1fe <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbdcfea35b5eeeb86E+0x7e>
    c21a:	f89d 0016 	ldrb.w	r0, [sp, #22]
    c21e:	07c0      	lsls	r0, r0, #31
    c220:	2800      	cmp	r0, #0
    c222:	d0ec      	beq.n	c1fe <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbdcfea35b5eeeb86E+0x7e>
    c224:	e7ff      	b.n	c226 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbdcfea35b5eeeb86E+0xa6>
    c226:	2000      	movs	r0, #0
    c228:	f88d 0016 	strb.w	r0, [sp, #22]
    c22c:	e7e7      	b.n	c1fe <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbdcfea35b5eeeb86E+0x7e>

0000c22e <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hf849df6aea18066fE>:
    c22e:	b580      	push	{r7, lr}
    c230:	b086      	sub	sp, #24
    c232:	9000      	str	r0, [sp, #0]
    c234:	2000      	movs	r0, #0
    c236:	f88d 0017 	strb.w	r0, [sp, #23]
    c23a:	f88d 0015 	strb.w	r0, [sp, #21]
    c23e:	f88d 0016 	strb.w	r0, [sp, #22]
    c242:	2001      	movs	r0, #1
    c244:	f88d 0016 	strb.w	r0, [sp, #22]
    c248:	f88d 0017 	strb.w	r0, [sp, #23]
    c24c:	f88d 0015 	strb.w	r0, [sp, #21]
    c250:	9800      	ldr	r0, [sp, #0]
    c252:	1e41      	subs	r1, r0, #1
    c254:	bf18      	it	ne
    c256:	2101      	movne	r1, #1
    c258:	2801      	cmp	r0, #1
    c25a:	d002      	beq.n	c262 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hf849df6aea18066fE+0x34>
    c25c:	e7ff      	b.n	c25e <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hf849df6aea18066fE+0x30>
    c25e:	e006      	b.n	c26e <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hf849df6aea18066fE+0x40>
    c260:	defe      	udf	#254	; 0xfe
    c262:	2000      	movs	r0, #0
    c264:	f88d 0017 	strb.w	r0, [sp, #23]
    c268:	f88d 0007 	strb.w	r0, [sp, #7]
    c26c:	e010      	b.n	c290 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hf849df6aea18066fE+0x62>
    c26e:	2000      	movs	r0, #0
    c270:	f88d 0016 	strb.w	r0, [sp, #22]
    c274:	9900      	ldr	r1, [sp, #0]
    c276:	9103      	str	r1, [sp, #12]
    c278:	f88d 0015 	strb.w	r0, [sp, #21]
    c27c:	9803      	ldr	r0, [sp, #12]
    c27e:	9004      	str	r0, [sp, #16]
    c280:	9804      	ldr	r0, [sp, #16]
    c282:	f001 fd01 	bl	dc88 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset28_$u7b$$u7b$closure$u7d$$u7d$17hd3eab0c385045c33E>
    c286:	e7ff      	b.n	c288 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hf849df6aea18066fE+0x5a>
    c288:	2001      	movs	r0, #1
    c28a:	f88d 0007 	strb.w	r0, [sp, #7]
    c28e:	e7ff      	b.n	c290 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hf849df6aea18066fE+0x62>
    c290:	f89d 0015 	ldrb.w	r0, [sp, #21]
    c294:	07c0      	lsls	r0, r0, #31
    c296:	2800      	cmp	r0, #0
    c298:	d104      	bne.n	c2a4 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hf849df6aea18066fE+0x76>
    c29a:	e7ff      	b.n	c29c <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hf849df6aea18066fE+0x6e>
    c29c:	9800      	ldr	r0, [sp, #0]
    c29e:	2801      	cmp	r0, #1
    c2a0:	d008      	beq.n	c2b4 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hf849df6aea18066fE+0x86>
    c2a2:	e011      	b.n	c2c8 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hf849df6aea18066fE+0x9a>
    c2a4:	2000      	movs	r0, #0
    c2a6:	f88d 0015 	strb.w	r0, [sp, #21]
    c2aa:	e7f7      	b.n	c29c <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hf849df6aea18066fE+0x6e>
    c2ac:	f89d 0007 	ldrb.w	r0, [sp, #7]
    c2b0:	b006      	add	sp, #24
    c2b2:	bd80      	pop	{r7, pc}
    c2b4:	f89d 0017 	ldrb.w	r0, [sp, #23]
    c2b8:	07c0      	lsls	r0, r0, #31
    c2ba:	2800      	cmp	r0, #0
    c2bc:	d0f6      	beq.n	c2ac <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hf849df6aea18066fE+0x7e>
    c2be:	e7ff      	b.n	c2c0 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hf849df6aea18066fE+0x92>
    c2c0:	2000      	movs	r0, #0
    c2c2:	f88d 0017 	strb.w	r0, [sp, #23]
    c2c6:	e7f1      	b.n	c2ac <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hf849df6aea18066fE+0x7e>
    c2c8:	f89d 0016 	ldrb.w	r0, [sp, #22]
    c2cc:	07c0      	lsls	r0, r0, #31
    c2ce:	2800      	cmp	r0, #0
    c2d0:	d0ec      	beq.n	c2ac <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hf849df6aea18066fE+0x7e>
    c2d2:	e7ff      	b.n	c2d4 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hf849df6aea18066fE+0xa6>
    c2d4:	2000      	movs	r0, #0
    c2d6:	f88d 0016 	strb.w	r0, [sp, #22]
    c2da:	e7e7      	b.n	c2ac <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hf849df6aea18066fE+0x7e>

0000c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>:
    c2dc:	b081      	sub	sp, #4
    c2de:	2001      	movs	r0, #1
    c2e0:	f88d 0003 	strb.w	r0, [sp, #3]
    c2e4:	f89d 0003 	ldrb.w	r0, [sp, #3]
    c2e8:	b001      	add	sp, #4
    c2ea:	4770      	bx	lr

0000c2ec <_ZN45_$LT$$LP$$RP$$u20$as$u20$core..fmt..Debug$GT$3fmt17h1ddca375af57cad4E>:
    c2ec:	b580      	push	{r7, lr}
    c2ee:	b084      	sub	sp, #16
    c2f0:	9002      	str	r0, [sp, #8]
    c2f2:	9103      	str	r1, [sp, #12]
    c2f4:	9803      	ldr	r0, [sp, #12]
    c2f6:	f24c 0147 	movw	r1, #49223	; 0xc047
    c2fa:	f2c0 0101 	movt	r1, #1
    c2fe:	2202      	movs	r2, #2
    c300:	f009 f8c2 	bl	15488 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E>
    c304:	9001      	str	r0, [sp, #4]
    c306:	e7ff      	b.n	c308 <_ZN45_$LT$$LP$$RP$$u20$as$u20$core..fmt..Debug$GT$3fmt17h1ddca375af57cad4E+0x1c>
    c308:	9801      	ldr	r0, [sp, #4]
    c30a:	f000 0001 	and.w	r0, r0, #1
    c30e:	b004      	add	sp, #16
    c310:	bd80      	pop	{r7, pc}

0000c312 <_ZN4core6option15Option$LT$T$GT$3map17hb20071b2cd92f1eeE>:
    c312:	b580      	push	{r7, lr}
    c314:	b090      	sub	sp, #64	; 0x40
    c316:	2200      	movs	r2, #0
    c318:	f88d 203e 	strb.w	r2, [sp, #62]	; 0x3e
    c31c:	f88d 203f 	strb.w	r2, [sp, #63]	; 0x3f
    c320:	2201      	movs	r2, #1
    c322:	f88d 203f 	strb.w	r2, [sp, #63]	; 0x3f
    c326:	f88d 203e 	strb.w	r2, [sp, #62]	; 0x3e
    c32a:	680a      	ldr	r2, [r1, #0]
    c32c:	2a00      	cmp	r2, #0
    c32e:	9101      	str	r1, [sp, #4]
    c330:	9000      	str	r0, [sp, #0]
    c332:	d001      	beq.n	c338 <_ZN4core6option15Option$LT$T$GT$3map17hb20071b2cd92f1eeE+0x26>
    c334:	e7ff      	b.n	c336 <_ZN4core6option15Option$LT$T$GT$3map17hb20071b2cd92f1eeE+0x24>
    c336:	e004      	b.n	c342 <_ZN4core6option15Option$LT$T$GT$3map17hb20071b2cd92f1eeE+0x30>
    c338:	2000      	movs	r0, #0
    c33a:	9900      	ldr	r1, [sp, #0]
    c33c:	6008      	str	r0, [r1, #0]
    c33e:	e032      	b.n	c3a6 <_ZN4core6option15Option$LT$T$GT$3map17hb20071b2cd92f1eeE+0x94>
    c340:	defe      	udf	#254	; 0xfe
    c342:	2000      	movs	r0, #0
    c344:	f88d 003f 	strb.w	r0, [sp, #63]	; 0x3f
    c348:	9901      	ldr	r1, [sp, #4]
    c34a:	684a      	ldr	r2, [r1, #4]
    c34c:	688b      	ldr	r3, [r1, #8]
    c34e:	f8d1 c00c 	ldr.w	ip, [r1, #12]
    c352:	f8cd c014 	str.w	ip, [sp, #20]
    c356:	9304      	str	r3, [sp, #16]
    c358:	9203      	str	r2, [sp, #12]
    c35a:	f88d 003e 	strb.w	r0, [sp, #62]	; 0x3e
    c35e:	9803      	ldr	r0, [sp, #12]
    c360:	9a04      	ldr	r2, [sp, #16]
    c362:	9b05      	ldr	r3, [sp, #20]
    c364:	930e      	str	r3, [sp, #56]	; 0x38
    c366:	920d      	str	r2, [sp, #52]	; 0x34
    c368:	900c      	str	r0, [sp, #48]	; 0x30
    c36a:	980c      	ldr	r0, [sp, #48]	; 0x30
    c36c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    c36e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    c370:	930b      	str	r3, [sp, #44]	; 0x2c
    c372:	920a      	str	r2, [sp, #40]	; 0x28
    c374:	9009      	str	r0, [sp, #36]	; 0x24
    c376:	a806      	add	r0, sp, #24
    c378:	a909      	add	r1, sp, #36	; 0x24
    c37a:	f000 fe59 	bl	d030 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hd2cf853b3d660756E>
    c37e:	e7ff      	b.n	c380 <_ZN4core6option15Option$LT$T$GT$3map17hb20071b2cd92f1eeE+0x6e>
    c380:	9806      	ldr	r0, [sp, #24]
    c382:	9907      	ldr	r1, [sp, #28]
    c384:	9a08      	ldr	r2, [sp, #32]
    c386:	9b00      	ldr	r3, [sp, #0]
    c388:	60da      	str	r2, [r3, #12]
    c38a:	6099      	str	r1, [r3, #8]
    c38c:	6058      	str	r0, [r3, #4]
    c38e:	2001      	movs	r0, #1
    c390:	6018      	str	r0, [r3, #0]
    c392:	e008      	b.n	c3a6 <_ZN4core6option15Option$LT$T$GT$3map17hb20071b2cd92f1eeE+0x94>
    c394:	9801      	ldr	r0, [sp, #4]
    c396:	6801      	ldr	r1, [r0, #0]
    c398:	2901      	cmp	r1, #1
    c39a:	d00c      	beq.n	c3b6 <_ZN4core6option15Option$LT$T$GT$3map17hb20071b2cd92f1eeE+0xa4>
    c39c:	e015      	b.n	c3ca <_ZN4core6option15Option$LT$T$GT$3map17hb20071b2cd92f1eeE+0xb8>
    c39e:	2000      	movs	r0, #0
    c3a0:	f88d 003e 	strb.w	r0, [sp, #62]	; 0x3e
    c3a4:	e7f6      	b.n	c394 <_ZN4core6option15Option$LT$T$GT$3map17hb20071b2cd92f1eeE+0x82>
    c3a6:	f89d 003e 	ldrb.w	r0, [sp, #62]	; 0x3e
    c3aa:	07c0      	lsls	r0, r0, #31
    c3ac:	2800      	cmp	r0, #0
    c3ae:	d1f6      	bne.n	c39e <_ZN4core6option15Option$LT$T$GT$3map17hb20071b2cd92f1eeE+0x8c>
    c3b0:	e7f0      	b.n	c394 <_ZN4core6option15Option$LT$T$GT$3map17hb20071b2cd92f1eeE+0x82>
    c3b2:	b010      	add	sp, #64	; 0x40
    c3b4:	bd80      	pop	{r7, pc}
    c3b6:	f89d 003f 	ldrb.w	r0, [sp, #63]	; 0x3f
    c3ba:	07c0      	lsls	r0, r0, #31
    c3bc:	2800      	cmp	r0, #0
    c3be:	d0f8      	beq.n	c3b2 <_ZN4core6option15Option$LT$T$GT$3map17hb20071b2cd92f1eeE+0xa0>
    c3c0:	e7ff      	b.n	c3c2 <_ZN4core6option15Option$LT$T$GT$3map17hb20071b2cd92f1eeE+0xb0>
    c3c2:	2000      	movs	r0, #0
    c3c4:	f88d 003f 	strb.w	r0, [sp, #63]	; 0x3f
    c3c8:	e7f3      	b.n	c3b2 <_ZN4core6option15Option$LT$T$GT$3map17hb20071b2cd92f1eeE+0xa0>
    c3ca:	e7f2      	b.n	c3b2 <_ZN4core6option15Option$LT$T$GT$3map17hb20071b2cd92f1eeE+0xa0>

0000c3cc <_ZN4core6option15Option$LT$T$GT$6as_ref17h79a8461e0a72edefE>:
    c3cc:	b083      	sub	sp, #12
    c3ce:	9000      	str	r0, [sp, #0]
    c3d0:	9800      	ldr	r0, [sp, #0]
    c3d2:	6800      	ldr	r0, [r0, #0]
    c3d4:	2800      	cmp	r0, #0
    c3d6:	d001      	beq.n	c3dc <_ZN4core6option15Option$LT$T$GT$6as_ref17h79a8461e0a72edefE+0x10>
    c3d8:	e7ff      	b.n	c3da <_ZN4core6option15Option$LT$T$GT$6as_ref17h79a8461e0a72edefE+0xe>
    c3da:	e003      	b.n	c3e4 <_ZN4core6option15Option$LT$T$GT$6as_ref17h79a8461e0a72edefE+0x18>
    c3dc:	2000      	movs	r0, #0
    c3de:	9001      	str	r0, [sp, #4]
    c3e0:	e006      	b.n	c3f0 <_ZN4core6option15Option$LT$T$GT$6as_ref17h79a8461e0a72edefE+0x24>
    c3e2:	defe      	udf	#254	; 0xfe
    c3e4:	9800      	ldr	r0, [sp, #0]
    c3e6:	3008      	adds	r0, #8
    c3e8:	9002      	str	r0, [sp, #8]
    c3ea:	9802      	ldr	r0, [sp, #8]
    c3ec:	9001      	str	r0, [sp, #4]
    c3ee:	e7ff      	b.n	c3f0 <_ZN4core6option15Option$LT$T$GT$6as_ref17h79a8461e0a72edefE+0x24>
    c3f0:	9801      	ldr	r0, [sp, #4]
    c3f2:	b003      	add	sp, #12
    c3f4:	4770      	bx	lr

0000c3f6 <_ZN4core6option15Option$LT$T$GT$6expect17hb4daba08f67c5da8E>:
    c3f6:	b510      	push	{r4, lr}
    c3f8:	b086      	sub	sp, #24
    c3fa:	f8dd c020 	ldr.w	ip, [sp, #32]
    c3fe:	468e      	mov	lr, r1
    c400:	4604      	mov	r4, r0
    c402:	f8ad 0008 	strh.w	r0, [sp, #8]
    c406:	f8ad 100a 	strh.w	r1, [sp, #10]
    c40a:	9203      	str	r2, [sp, #12]
    c40c:	9304      	str	r3, [sp, #16]
    c40e:	f8bd 0008 	ldrh.w	r0, [sp, #8]
    c412:	4601      	mov	r1, r0
    c414:	2800      	cmp	r0, #0
    c416:	f8cd c004 	str.w	ip, [sp, #4]
    c41a:	d001      	beq.n	c420 <_ZN4core6option15Option$LT$T$GT$6expect17hb4daba08f67c5da8E+0x2a>
    c41c:	e7ff      	b.n	c41e <_ZN4core6option15Option$LT$T$GT$6expect17hb4daba08f67c5da8E+0x28>
    c41e:	e006      	b.n	c42e <_ZN4core6option15Option$LT$T$GT$6expect17hb4daba08f67c5da8E+0x38>
    c420:	9803      	ldr	r0, [sp, #12]
    c422:	9904      	ldr	r1, [sp, #16]
    c424:	9a01      	ldr	r2, [sp, #4]
    c426:	f008 fb72 	bl	14b0e <_ZN4core6option13expect_failed17ha956789ed39c5576E>
    c42a:	defe      	udf	#254	; 0xfe
    c42c:	defe      	udf	#254	; 0xfe
    c42e:	f8bd 000a 	ldrh.w	r0, [sp, #10]
    c432:	f8ad 0016 	strh.w	r0, [sp, #22]
    c436:	f8bd 0016 	ldrh.w	r0, [sp, #22]
    c43a:	f8bd 1008 	ldrh.w	r1, [sp, #8]
    c43e:	2901      	cmp	r1, #1
    c440:	9000      	str	r0, [sp, #0]
    c442:	d103      	bne.n	c44c <_ZN4core6option15Option$LT$T$GT$6expect17hb4daba08f67c5da8E+0x56>
    c444:	e7ff      	b.n	c446 <_ZN4core6option15Option$LT$T$GT$6expect17hb4daba08f67c5da8E+0x50>
    c446:	9800      	ldr	r0, [sp, #0]
    c448:	b006      	add	sp, #24
    c44a:	bd10      	pop	{r4, pc}
    c44c:	e7fb      	b.n	c446 <_ZN4core6option15Option$LT$T$GT$6expect17hb4daba08f67c5da8E+0x50>

0000c44e <_ZN4core6option15Option$LT$T$GT$6unwrap17h3c579309e0abf051E>:
    c44e:	b084      	sub	sp, #16
    c450:	460b      	mov	r3, r1
    c452:	4684      	mov	ip, r0
    c454:	f88d 000c 	strb.w	r0, [sp, #12]
    c458:	f88d 100d 	strb.w	r1, [sp, #13]
    c45c:	f89d 000c 	ldrb.w	r0, [sp, #12]
    c460:	07c1      	lsls	r1, r0, #31
    c462:	2900      	cmp	r1, #0
    c464:	9202      	str	r2, [sp, #8]
    c466:	d001      	beq.n	c46c <_ZN4core6option15Option$LT$T$GT$6unwrap17h3c579309e0abf051E+0x1e>
    c468:	e7ff      	b.n	c46a <_ZN4core6option15Option$LT$T$GT$6unwrap17h3c579309e0abf051E+0x1c>
    c46a:	e009      	b.n	c480 <_ZN4core6option15Option$LT$T$GT$6unwrap17h3c579309e0abf051E+0x32>
    c46c:	f24c 0049 	movw	r0, #49225	; 0xc049
    c470:	f2c0 0001 	movt	r0, #1
    c474:	212b      	movs	r1, #43	; 0x2b
    c476:	9a02      	ldr	r2, [sp, #8]
    c478:	f008 fb93 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    c47c:	defe      	udf	#254	; 0xfe
    c47e:	defe      	udf	#254	; 0xfe
    c480:	f89d 000d 	ldrb.w	r0, [sp, #13]
    c484:	f88d 000f 	strb.w	r0, [sp, #15]
    c488:	f89d 000f 	ldrb.w	r0, [sp, #15]
    c48c:	f89d 100c 	ldrb.w	r1, [sp, #12]
    c490:	07c9      	lsls	r1, r1, #31
    c492:	2900      	cmp	r1, #0
    c494:	9001      	str	r0, [sp, #4]
    c496:	d003      	beq.n	c4a0 <_ZN4core6option15Option$LT$T$GT$6unwrap17h3c579309e0abf051E+0x52>
    c498:	e7ff      	b.n	c49a <_ZN4core6option15Option$LT$T$GT$6unwrap17h3c579309e0abf051E+0x4c>
    c49a:	9801      	ldr	r0, [sp, #4]
    c49c:	b004      	add	sp, #16
    c49e:	4770      	bx	lr
    c4a0:	e7fb      	b.n	c49a <_ZN4core6option15Option$LT$T$GT$6unwrap17h3c579309e0abf051E+0x4c>

0000c4a2 <_ZN4core6option15Option$LT$T$GT$6unwrap17h6432083b07afd3f6E>:
    c4a2:	b088      	sub	sp, #32
    c4a4:	9004      	str	r0, [sp, #16]
    c4a6:	9105      	str	r1, [sp, #20]
    c4a8:	9804      	ldr	r0, [sp, #16]
    c4aa:	2800      	cmp	r0, #0
    c4ac:	4601      	mov	r1, r0
    c4ae:	bf18      	it	ne
    c4b0:	2101      	movne	r1, #1
    c4b2:	2800      	cmp	r0, #0
    c4b4:	9203      	str	r2, [sp, #12]
    c4b6:	d001      	beq.n	c4bc <_ZN4core6option15Option$LT$T$GT$6unwrap17h6432083b07afd3f6E+0x1a>
    c4b8:	e7ff      	b.n	c4ba <_ZN4core6option15Option$LT$T$GT$6unwrap17h6432083b07afd3f6E+0x18>
    c4ba:	e009      	b.n	c4d0 <_ZN4core6option15Option$LT$T$GT$6unwrap17h6432083b07afd3f6E+0x2e>
    c4bc:	f24c 0049 	movw	r0, #49225	; 0xc049
    c4c0:	f2c0 0001 	movt	r0, #1
    c4c4:	212b      	movs	r1, #43	; 0x2b
    c4c6:	9a03      	ldr	r2, [sp, #12]
    c4c8:	f008 fb6b 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    c4cc:	defe      	udf	#254	; 0xfe
    c4ce:	defe      	udf	#254	; 0xfe
    c4d0:	9804      	ldr	r0, [sp, #16]
    c4d2:	9905      	ldr	r1, [sp, #20]
    c4d4:	9006      	str	r0, [sp, #24]
    c4d6:	9107      	str	r1, [sp, #28]
    c4d8:	9806      	ldr	r0, [sp, #24]
    c4da:	9907      	ldr	r1, [sp, #28]
    c4dc:	9a04      	ldr	r2, [sp, #16]
    c4de:	2a00      	cmp	r2, #0
    c4e0:	9002      	str	r0, [sp, #8]
    c4e2:	9101      	str	r1, [sp, #4]
    c4e4:	d004      	beq.n	c4f0 <_ZN4core6option15Option$LT$T$GT$6unwrap17h6432083b07afd3f6E+0x4e>
    c4e6:	e7ff      	b.n	c4e8 <_ZN4core6option15Option$LT$T$GT$6unwrap17h6432083b07afd3f6E+0x46>
    c4e8:	9802      	ldr	r0, [sp, #8]
    c4ea:	9901      	ldr	r1, [sp, #4]
    c4ec:	b008      	add	sp, #32
    c4ee:	4770      	bx	lr
    c4f0:	e7fa      	b.n	c4e8 <_ZN4core6option15Option$LT$T$GT$6unwrap17h6432083b07afd3f6E+0x46>

0000c4f2 <_ZN4core6option15Option$LT$T$GT$7is_none17hdfc51a5a76806ab8E>:
    c4f2:	b580      	push	{r7, lr}
    c4f4:	b082      	sub	sp, #8
    c4f6:	9001      	str	r0, [sp, #4]
    c4f8:	9801      	ldr	r0, [sp, #4]
    c4fa:	f000 f82d 	bl	c558 <_ZN4core6option15Option$LT$T$GT$7is_some17hb67f5a76f0918df9E>
    c4fe:	9000      	str	r0, [sp, #0]
    c500:	e7ff      	b.n	c502 <_ZN4core6option15Option$LT$T$GT$7is_none17hdfc51a5a76806ab8E+0x10>
    c502:	2001      	movs	r0, #1
    c504:	9900      	ldr	r1, [sp, #0]
    c506:	4388      	bics	r0, r1
    c508:	b002      	add	sp, #8
    c50a:	bd80      	pop	{r7, pc}

0000c50c <_ZN4core6option15Option$LT$T$GT$7is_some17h5981bcdaa77e6156E>:
    c50c:	b082      	sub	sp, #8
    c50e:	9000      	str	r0, [sp, #0]
    c510:	9800      	ldr	r0, [sp, #0]
    c512:	6800      	ldr	r0, [r0, #0]
    c514:	2800      	cmp	r0, #0
    c516:	d104      	bne.n	c522 <_ZN4core6option15Option$LT$T$GT$7is_some17h5981bcdaa77e6156E+0x16>
    c518:	e7ff      	b.n	c51a <_ZN4core6option15Option$LT$T$GT$7is_some17h5981bcdaa77e6156E+0xe>
    c51a:	2000      	movs	r0, #0
    c51c:	f88d 0007 	strb.w	r0, [sp, #7]
    c520:	e003      	b.n	c52a <_ZN4core6option15Option$LT$T$GT$7is_some17h5981bcdaa77e6156E+0x1e>
    c522:	2001      	movs	r0, #1
    c524:	f88d 0007 	strb.w	r0, [sp, #7]
    c528:	e7ff      	b.n	c52a <_ZN4core6option15Option$LT$T$GT$7is_some17h5981bcdaa77e6156E+0x1e>
    c52a:	f89d 0007 	ldrb.w	r0, [sp, #7]
    c52e:	b002      	add	sp, #8
    c530:	4770      	bx	lr

0000c532 <_ZN4core6option15Option$LT$T$GT$7is_some17h828e6c43309317e1E>:
    c532:	b082      	sub	sp, #8
    c534:	9000      	str	r0, [sp, #0]
    c536:	9800      	ldr	r0, [sp, #0]
    c538:	6800      	ldr	r0, [r0, #0]
    c53a:	2801      	cmp	r0, #1
    c53c:	d004      	beq.n	c548 <_ZN4core6option15Option$LT$T$GT$7is_some17h828e6c43309317e1E+0x16>
    c53e:	e7ff      	b.n	c540 <_ZN4core6option15Option$LT$T$GT$7is_some17h828e6c43309317e1E+0xe>
    c540:	2000      	movs	r0, #0
    c542:	f88d 0007 	strb.w	r0, [sp, #7]
    c546:	e003      	b.n	c550 <_ZN4core6option15Option$LT$T$GT$7is_some17h828e6c43309317e1E+0x1e>
    c548:	2001      	movs	r0, #1
    c54a:	f88d 0007 	strb.w	r0, [sp, #7]
    c54e:	e7ff      	b.n	c550 <_ZN4core6option15Option$LT$T$GT$7is_some17h828e6c43309317e1E+0x1e>
    c550:	f89d 0007 	ldrb.w	r0, [sp, #7]
    c554:	b002      	add	sp, #8
    c556:	4770      	bx	lr

0000c558 <_ZN4core6option15Option$LT$T$GT$7is_some17hb67f5a76f0918df9E>:
    c558:	b082      	sub	sp, #8
    c55a:	9000      	str	r0, [sp, #0]
    c55c:	9800      	ldr	r0, [sp, #0]
    c55e:	8800      	ldrh	r0, [r0, #0]
    c560:	2801      	cmp	r0, #1
    c562:	d004      	beq.n	c56e <_ZN4core6option15Option$LT$T$GT$7is_some17hb67f5a76f0918df9E+0x16>
    c564:	e7ff      	b.n	c566 <_ZN4core6option15Option$LT$T$GT$7is_some17hb67f5a76f0918df9E+0xe>
    c566:	2000      	movs	r0, #0
    c568:	f88d 0007 	strb.w	r0, [sp, #7]
    c56c:	e003      	b.n	c576 <_ZN4core6option15Option$LT$T$GT$7is_some17hb67f5a76f0918df9E+0x1e>
    c56e:	2001      	movs	r0, #1
    c570:	f88d 0007 	strb.w	r0, [sp, #7]
    c574:	e7ff      	b.n	c576 <_ZN4core6option15Option$LT$T$GT$7is_some17hb67f5a76f0918df9E+0x1e>
    c576:	f89d 0007 	ldrb.w	r0, [sp, #7]
    c57a:	b002      	add	sp, #8
    c57c:	4770      	bx	lr

0000c57e <_ZN4core6option15Option$LT$T$GT$8and_then17h104a7692ca71586eE>:
    c57e:	b580      	push	{r7, lr}
    c580:	b086      	sub	sp, #24
    c582:	9000      	str	r0, [sp, #0]
    c584:	2000      	movs	r0, #0
    c586:	f88d 0017 	strb.w	r0, [sp, #23]
    c58a:	f88d 0016 	strb.w	r0, [sp, #22]
    c58e:	2001      	movs	r0, #1
    c590:	f88d 0017 	strb.w	r0, [sp, #23]
    c594:	f88d 0016 	strb.w	r0, [sp, #22]
    c598:	9800      	ldr	r0, [sp, #0]
    c59a:	2800      	cmp	r0, #0
    c59c:	4601      	mov	r1, r0
    c59e:	bf18      	it	ne
    c5a0:	2101      	movne	r1, #1
    c5a2:	2800      	cmp	r0, #0
    c5a4:	d001      	beq.n	c5aa <_ZN4core6option15Option$LT$T$GT$8and_then17h104a7692ca71586eE+0x2c>
    c5a6:	e7ff      	b.n	c5a8 <_ZN4core6option15Option$LT$T$GT$8and_then17h104a7692ca71586eE+0x2a>
    c5a8:	e004      	b.n	c5b4 <_ZN4core6option15Option$LT$T$GT$8and_then17h104a7692ca71586eE+0x36>
    c5aa:	2000      	movs	r0, #0
    c5ac:	f88d 0008 	strb.w	r0, [sp, #8]
    c5b0:	e01a      	b.n	c5e8 <_ZN4core6option15Option$LT$T$GT$8and_then17h104a7692ca71586eE+0x6a>
    c5b2:	defe      	udf	#254	; 0xfe
    c5b4:	2000      	movs	r0, #0
    c5b6:	f88d 0017 	strb.w	r0, [sp, #23]
    c5ba:	9900      	ldr	r1, [sp, #0]
    c5bc:	9103      	str	r1, [sp, #12]
    c5be:	f88d 0016 	strb.w	r0, [sp, #22]
    c5c2:	9803      	ldr	r0, [sp, #12]
    c5c4:	9004      	str	r0, [sp, #16]
    c5c6:	9804      	ldr	r0, [sp, #16]
    c5c8:	f000 fd87 	bl	d0da <_ZN4core3ops8function6FnOnce9call_once17h4a4bbb1195412553E>
    c5cc:	f88d 1009 	strb.w	r1, [sp, #9]
    c5d0:	f88d 0008 	strb.w	r0, [sp, #8]
    c5d4:	e7ff      	b.n	c5d6 <_ZN4core6option15Option$LT$T$GT$8and_then17h104a7692ca71586eE+0x58>
    c5d6:	e007      	b.n	c5e8 <_ZN4core6option15Option$LT$T$GT$8and_then17h104a7692ca71586eE+0x6a>
    c5d8:	9800      	ldr	r0, [sp, #0]
    c5da:	2800      	cmp	r0, #0
    c5dc:	d110      	bne.n	c600 <_ZN4core6option15Option$LT$T$GT$8and_then17h104a7692ca71586eE+0x82>
    c5de:	e019      	b.n	c614 <_ZN4core6option15Option$LT$T$GT$8and_then17h104a7692ca71586eE+0x96>
    c5e0:	2000      	movs	r0, #0
    c5e2:	f88d 0016 	strb.w	r0, [sp, #22]
    c5e6:	e7f7      	b.n	c5d8 <_ZN4core6option15Option$LT$T$GT$8and_then17h104a7692ca71586eE+0x5a>
    c5e8:	f89d 0016 	ldrb.w	r0, [sp, #22]
    c5ec:	07c0      	lsls	r0, r0, #31
    c5ee:	2800      	cmp	r0, #0
    c5f0:	d1f6      	bne.n	c5e0 <_ZN4core6option15Option$LT$T$GT$8and_then17h104a7692ca71586eE+0x62>
    c5f2:	e7f1      	b.n	c5d8 <_ZN4core6option15Option$LT$T$GT$8and_then17h104a7692ca71586eE+0x5a>
    c5f4:	f89d 0008 	ldrb.w	r0, [sp, #8]
    c5f8:	f89d 1009 	ldrb.w	r1, [sp, #9]
    c5fc:	b006      	add	sp, #24
    c5fe:	bd80      	pop	{r7, pc}
    c600:	f89d 0017 	ldrb.w	r0, [sp, #23]
    c604:	07c0      	lsls	r0, r0, #31
    c606:	2800      	cmp	r0, #0
    c608:	d0f4      	beq.n	c5f4 <_ZN4core6option15Option$LT$T$GT$8and_then17h104a7692ca71586eE+0x76>
    c60a:	e7ff      	b.n	c60c <_ZN4core6option15Option$LT$T$GT$8and_then17h104a7692ca71586eE+0x8e>
    c60c:	2000      	movs	r0, #0
    c60e:	f88d 0017 	strb.w	r0, [sp, #23]
    c612:	e7ef      	b.n	c5f4 <_ZN4core6option15Option$LT$T$GT$8and_then17h104a7692ca71586eE+0x76>
    c614:	e7ee      	b.n	c5f4 <_ZN4core6option15Option$LT$T$GT$8and_then17h104a7692ca71586eE+0x76>

0000c616 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17h14e245f32ab0d6aeE>:
    c616:	b580      	push	{r7, lr}
    c618:	b083      	sub	sp, #12
    c61a:	4613      	mov	r3, r2
    c61c:	468c      	mov	ip, r1
    c61e:	4686      	mov	lr, r0
    c620:	f8ad 0000 	strh.w	r0, [sp]
    c624:	f8ad 1002 	strh.w	r1, [sp, #2]
    c628:	f8ad 2004 	strh.w	r2, [sp, #4]
    c62c:	2000      	movs	r0, #0
    c62e:	f88d 000a 	strb.w	r0, [sp, #10]
    c632:	f88d 000b 	strb.w	r0, [sp, #11]
    c636:	2001      	movs	r0, #1
    c638:	f88d 000b 	strb.w	r0, [sp, #11]
    c63c:	f88d 000a 	strb.w	r0, [sp, #10]
    c640:	f8bd 0000 	ldrh.w	r0, [sp]
    c644:	4601      	mov	r1, r0
    c646:	2800      	cmp	r0, #0
    c648:	d001      	beq.n	c64e <_ZN4core6option15Option$LT$T$GT$9unwrap_or17h14e245f32ab0d6aeE+0x38>
    c64a:	e7ff      	b.n	c64c <_ZN4core6option15Option$LT$T$GT$9unwrap_or17h14e245f32ab0d6aeE+0x36>
    c64c:	e008      	b.n	c660 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17h14e245f32ab0d6aeE+0x4a>
    c64e:	2000      	movs	r0, #0
    c650:	f88d 000a 	strb.w	r0, [sp, #10]
    c654:	f8bd 0004 	ldrh.w	r0, [sp, #4]
    c658:	f8ad 0006 	strh.w	r0, [sp, #6]
    c65c:	e015      	b.n	c68a <_ZN4core6option15Option$LT$T$GT$9unwrap_or17h14e245f32ab0d6aeE+0x74>
    c65e:	defe      	udf	#254	; 0xfe
    c660:	2000      	movs	r0, #0
    c662:	f88d 000b 	strb.w	r0, [sp, #11]
    c666:	f8bd 0002 	ldrh.w	r0, [sp, #2]
    c66a:	f8ad 0008 	strh.w	r0, [sp, #8]
    c66e:	f8bd 0008 	ldrh.w	r0, [sp, #8]
    c672:	f8ad 0006 	strh.w	r0, [sp, #6]
    c676:	e008      	b.n	c68a <_ZN4core6option15Option$LT$T$GT$9unwrap_or17h14e245f32ab0d6aeE+0x74>
    c678:	f8bd 0000 	ldrh.w	r0, [sp]
    c67c:	2801      	cmp	r0, #1
    c67e:	d00e      	beq.n	c69e <_ZN4core6option15Option$LT$T$GT$9unwrap_or17h14e245f32ab0d6aeE+0x88>
    c680:	e017      	b.n	c6b2 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17h14e245f32ab0d6aeE+0x9c>
    c682:	2000      	movs	r0, #0
    c684:	f88d 000a 	strb.w	r0, [sp, #10]
    c688:	e7f6      	b.n	c678 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17h14e245f32ab0d6aeE+0x62>
    c68a:	f89d 000a 	ldrb.w	r0, [sp, #10]
    c68e:	07c0      	lsls	r0, r0, #31
    c690:	2800      	cmp	r0, #0
    c692:	d1f6      	bne.n	c682 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17h14e245f32ab0d6aeE+0x6c>
    c694:	e7f0      	b.n	c678 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17h14e245f32ab0d6aeE+0x62>
    c696:	f8bd 0006 	ldrh.w	r0, [sp, #6]
    c69a:	b003      	add	sp, #12
    c69c:	bd80      	pop	{r7, pc}
    c69e:	f89d 000b 	ldrb.w	r0, [sp, #11]
    c6a2:	07c0      	lsls	r0, r0, #31
    c6a4:	2800      	cmp	r0, #0
    c6a6:	d0f6      	beq.n	c696 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17h14e245f32ab0d6aeE+0x80>
    c6a8:	e7ff      	b.n	c6aa <_ZN4core6option15Option$LT$T$GT$9unwrap_or17h14e245f32ab0d6aeE+0x94>
    c6aa:	2000      	movs	r0, #0
    c6ac:	f88d 000b 	strb.w	r0, [sp, #11]
    c6b0:	e7f1      	b.n	c696 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17h14e245f32ab0d6aeE+0x80>
    c6b2:	e7f0      	b.n	c696 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17h14e245f32ab0d6aeE+0x80>

0000c6b4 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h186c6830f1ed9057E>:
    c6b4:	b580      	push	{r7, lr}
    c6b6:	b084      	sub	sp, #16
    c6b8:	9001      	str	r0, [sp, #4]
    c6ba:	9801      	ldr	r0, [sp, #4]
    c6bc:	8800      	ldrh	r0, [r0, #0]
    c6be:	4601      	mov	r1, r0
    c6c0:	2800      	cmp	r0, #0
    c6c2:	d001      	beq.n	c6c8 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h186c6830f1ed9057E+0x14>
    c6c4:	e7ff      	b.n	c6c6 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h186c6830f1ed9057E+0x12>
    c6c6:	e004      	b.n	c6d2 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h186c6830f1ed9057E+0x1e>
    c6c8:	2000      	movs	r0, #0
    c6ca:	f8ad 0008 	strh.w	r0, [sp, #8]
    c6ce:	e00f      	b.n	c6f0 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h186c6830f1ed9057E+0x3c>
    c6d0:	defe      	udf	#254	; 0xfe
    c6d2:	9801      	ldr	r0, [sp, #4]
    c6d4:	3002      	adds	r0, #2
    c6d6:	9003      	str	r0, [sp, #12]
    c6d8:	9803      	ldr	r0, [sp, #12]
    c6da:	f000 fd7c 	bl	d1d6 <_ZN84_$LT$embedded_graphics..pixelcolor..rgb565..Rgb565$u20$as$u20$core..clone..Clone$GT$5clone17h562ec60a06e1c4f1E>
    c6de:	9000      	str	r0, [sp, #0]
    c6e0:	e7ff      	b.n	c6e2 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h186c6830f1ed9057E+0x2e>
    c6e2:	9800      	ldr	r0, [sp, #0]
    c6e4:	f8ad 000a 	strh.w	r0, [sp, #10]
    c6e8:	2101      	movs	r1, #1
    c6ea:	f8ad 1008 	strh.w	r1, [sp, #8]
    c6ee:	e7ff      	b.n	c6f0 <_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h186c6830f1ed9057E+0x3c>
    c6f0:	f8bd 0008 	ldrh.w	r0, [sp, #8]
    c6f4:	f8bd 100a 	ldrh.w	r1, [sp, #10]
    c6f8:	b004      	add	sp, #16
    c6fa:	bd80      	pop	{r7, pc}

0000c6fc <_ZN4core5clone5impls51_$LT$impl$u20$core..clone..Clone$u20$for$u20$u8$GT$5clone17h8d9327329424f87cE>:
    c6fc:	b081      	sub	sp, #4
    c6fe:	9000      	str	r0, [sp, #0]
    c700:	9800      	ldr	r0, [sp, #0]
    c702:	7800      	ldrb	r0, [r0, #0]
    c704:	b001      	add	sp, #4
    c706:	4770      	bx	lr

0000c708 <_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u16$GT$5clone17h80d7c832b773feaeE>:
    c708:	b081      	sub	sp, #4
    c70a:	9000      	str	r0, [sp, #0]
    c70c:	9800      	ldr	r0, [sp, #0]
    c70e:	8800      	ldrh	r0, [r0, #0]
    c710:	b001      	add	sp, #4
    c712:	4770      	bx	lr

0000c714 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE>:
pub fn start_display() -> MynewtResult<()> {
    c714:	b5b0      	push	{r4, r5, r7, lr}
    c716:	b0b2      	sub	sp, #200	; 0xc8
    let mut spi_port = mynewt::SPI::new();
    c718:	f7fe fd98 	bl	b24c <_ZN6mynewt3hal3SPI3new17h061d50a8162355d0E>
    c71c:	9115      	str	r1, [sp, #84]	; 0x54
    c71e:	9014      	str	r0, [sp, #80]	; 0x50
    c720:	e7ff      	b.n	c722 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0xe>
    let mut dc_gpio =  mynewt::GPIO::new();
    c722:	f7fe ff53 	bl	b5cc <_ZN6mynewt3hal4GPIO3new17heb9fbb7cf70124f8E>
    c726:	9016      	str	r0, [sp, #88]	; 0x58
    c728:	e7ff      	b.n	c72a <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x16>
    let mut rst_gpio = mynewt::GPIO::new();
    c72a:	f7fe ff4f 	bl	b5cc <_ZN6mynewt3hal4GPIO3new17heb9fbb7cf70124f8E>
    c72e:	9017      	str	r0, [sp, #92]	; 0x5c
    c730:	e7ff      	b.n	c732 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x1e>
    spi_port.init(
    c732:	f240 03e8 	movw	r3, #232	; 0xe8
    c736:	f2c2 0300 	movt	r3, #8192	; 0x2000
    c73a:	a814      	add	r0, sp, #80	; 0x50
    c73c:	2100      	movs	r1, #0
    c73e:	2219      	movs	r2, #25
    c740:	f7fe fd8c 	bl	b25c <_ZN6mynewt3hal3SPI4init17h3efb4974cd4a5fe6E>
    c744:	9012      	str	r0, [sp, #72]	; 0x48
    c746:	e7ff      	b.n	c748 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x34>
    c748:	9812      	ldr	r0, [sp, #72]	; 0x48
    c74a:	f7ff fa67 	bl	bc1c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h547b8d3279e16ed9E>
    c74e:	9018      	str	r0, [sp, #96]	; 0x60
    c750:	e7ff      	b.n	c752 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x3e>
    ) ? ;
    c752:	9818      	ldr	r0, [sp, #96]	; 0x60
    c754:	1e41      	subs	r1, r0, #1
    c756:	bf18      	it	ne
    c758:	2101      	movne	r1, #1
    c75a:	2801      	cmp	r0, #1
    c75c:	d013      	beq.n	c786 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x72>
    c75e:	e7ff      	b.n	c760 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x4c>
    c760:	e000      	b.n	c764 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x50>
    spi_port.init(
    c762:	defe      	udf	#254	; 0xfe
    ) ? ;
    c764:	9818      	ldr	r0, [sp, #96]	; 0x60
    c766:	9019      	str	r0, [sp, #100]	; 0x64
    c768:	9819      	ldr	r0, [sp, #100]	; 0x64
    c76a:	f7ff f80f 	bl	b78c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h21b21b5ada625ccdE>
    c76e:	9011      	str	r0, [sp, #68]	; 0x44
    c770:	e002      	b.n	c778 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x64>
}
    c772:	9813      	ldr	r0, [sp, #76]	; 0x4c
    c774:	b032      	add	sp, #200	; 0xc8
    c776:	bdb0      	pop	{r4, r5, r7, pc}
    ) ? ;
    c778:	9811      	ldr	r0, [sp, #68]	; 0x44
    c77a:	f7ff fa40 	bl	bbfe <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9e096e948ad28d6eE>
    c77e:	9013      	str	r0, [sp, #76]	; 0x4c
    c780:	e7ff      	b.n	c782 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x6e>
    c782:	e7ff      	b.n	c784 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x70>
    c784:	e7f5      	b.n	c772 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x5e>
    c786:	a816      	add	r0, sp, #88	; 0x58
    c788:	2112      	movs	r1, #18
    dc_gpio.init(DISPLAY_DC) ? ;    //  LCD_RS (P0.18): Clock/data pin (CD)
    c78a:	f7fe ff21 	bl	b5d0 <_ZN6mynewt3hal4GPIO4init17hdfa14af4722bc4f0E>
    c78e:	9010      	str	r0, [sp, #64]	; 0x40
    c790:	e7ff      	b.n	c792 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x7e>
    c792:	9810      	ldr	r0, [sp, #64]	; 0x40
    c794:	f7ff fa42 	bl	bc1c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h547b8d3279e16ed9E>
    c798:	901b      	str	r0, [sp, #108]	; 0x6c
    c79a:	e7ff      	b.n	c79c <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x88>
    c79c:	981b      	ldr	r0, [sp, #108]	; 0x6c
    c79e:	1e41      	subs	r1, r0, #1
    c7a0:	bf18      	it	ne
    c7a2:	2101      	movne	r1, #1
    c7a4:	2801      	cmp	r0, #1
    c7a6:	d00f      	beq.n	c7c8 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0xb4>
    c7a8:	e7ff      	b.n	c7aa <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x96>
    c7aa:	e000      	b.n	c7ae <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x9a>
    c7ac:	defe      	udf	#254	; 0xfe
    c7ae:	981b      	ldr	r0, [sp, #108]	; 0x6c
    c7b0:	901c      	str	r0, [sp, #112]	; 0x70
    c7b2:	981c      	ldr	r0, [sp, #112]	; 0x70
    c7b4:	f7fe ffea 	bl	b78c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h21b21b5ada625ccdE>
    c7b8:	900f      	str	r0, [sp, #60]	; 0x3c
    c7ba:	e7ff      	b.n	c7bc <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0xa8>
    c7bc:	980f      	ldr	r0, [sp, #60]	; 0x3c
    c7be:	f7ff fa1e 	bl	bbfe <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9e096e948ad28d6eE>
    c7c2:	9013      	str	r0, [sp, #76]	; 0x4c
    c7c4:	e7ff      	b.n	c7c6 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0xb2>
    c7c6:	e7dd      	b.n	c784 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x70>
    c7c8:	a817      	add	r0, sp, #92	; 0x5c
    c7ca:	211a      	movs	r1, #26
    rst_gpio.init(DISPLAY_RST) ? ;  //  LCD_RESET (P0.26): Display reset
    c7cc:	f7fe ff00 	bl	b5d0 <_ZN6mynewt3hal4GPIO4init17hdfa14af4722bc4f0E>
    c7d0:	900e      	str	r0, [sp, #56]	; 0x38
    c7d2:	e7ff      	b.n	c7d4 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0xc0>
    c7d4:	980e      	ldr	r0, [sp, #56]	; 0x38
    c7d6:	f7ff fa21 	bl	bc1c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h547b8d3279e16ed9E>
    c7da:	901e      	str	r0, [sp, #120]	; 0x78
    c7dc:	e7ff      	b.n	c7de <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0xca>
    c7de:	981e      	ldr	r0, [sp, #120]	; 0x78
    c7e0:	1e41      	subs	r1, r0, #1
    c7e2:	bf18      	it	ne
    c7e4:	2101      	movne	r1, #1
    c7e6:	2801      	cmp	r0, #1
    c7e8:	d00f      	beq.n	c80a <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0xf6>
    c7ea:	e7ff      	b.n	c7ec <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0xd8>
    c7ec:	e000      	b.n	c7f0 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0xdc>
    c7ee:	defe      	udf	#254	; 0xfe
    c7f0:	981e      	ldr	r0, [sp, #120]	; 0x78
    c7f2:	901f      	str	r0, [sp, #124]	; 0x7c
    c7f4:	981f      	ldr	r0, [sp, #124]	; 0x7c
    c7f6:	f7fe ffc9 	bl	b78c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h21b21b5ada625ccdE>
    c7fa:	900d      	str	r0, [sp, #52]	; 0x34
    c7fc:	e7ff      	b.n	c7fe <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0xea>
    c7fe:	980d      	ldr	r0, [sp, #52]	; 0x34
    c800:	f7ff f9fd 	bl	bbfe <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9e096e948ad28d6eE>
    c804:	9013      	str	r0, [sp, #76]	; 0x4c
    c806:	e7ff      	b.n	c808 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0xf4>
    c808:	e7bc      	b.n	c784 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x70>
        BACKLIGHT_HIGH = mynewt::GPIO::new();
    c80a:	f7fe fedf 	bl	b5cc <_ZN6mynewt3hal4GPIO3new17heb9fbb7cf70124f8E>
    c80e:	900c      	str	r0, [sp, #48]	; 0x30
    c810:	e7ff      	b.n	c812 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0xfe>
    c812:	f240 200c 	movw	r0, #524	; 0x20c
    c816:	f2c2 0000 	movt	r0, #8192	; 0x2000
    c81a:	990c      	ldr	r1, [sp, #48]	; 0x30
    c81c:	6001      	str	r1, [r0, #0]
    c81e:	2117      	movs	r1, #23
        BACKLIGHT_HIGH.init(DISPLAY_HIGH) ? ;  //  LCD_BACKLIGHT_{LOW,MID,HIGH} (P0.14, 22, 23): Backlight (active low)
    c820:	f7fe fed6 	bl	b5d0 <_ZN6mynewt3hal4GPIO4init17hdfa14af4722bc4f0E>
    c824:	900b      	str	r0, [sp, #44]	; 0x2c
    c826:	e7ff      	b.n	c828 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x114>
    c828:	980b      	ldr	r0, [sp, #44]	; 0x2c
    c82a:	f7ff f9f7 	bl	bc1c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h547b8d3279e16ed9E>
    c82e:	9021      	str	r0, [sp, #132]	; 0x84
    c830:	e7ff      	b.n	c832 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x11e>
    c832:	9821      	ldr	r0, [sp, #132]	; 0x84
    c834:	1e41      	subs	r1, r0, #1
    c836:	bf18      	it	ne
    c838:	2101      	movne	r1, #1
    c83a:	2801      	cmp	r0, #1
    c83c:	d010      	beq.n	c860 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x14c>
    c83e:	e7ff      	b.n	c840 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x12c>
    c840:	e000      	b.n	c844 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x130>
    c842:	defe      	udf	#254	; 0xfe
    c844:	9821      	ldr	r0, [sp, #132]	; 0x84
    c846:	9022      	str	r0, [sp, #136]	; 0x88
    c848:	9822      	ldr	r0, [sp, #136]	; 0x88
    c84a:	f7fe ff9f 	bl	b78c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h21b21b5ada625ccdE>
    c84e:	900a      	str	r0, [sp, #40]	; 0x28
    c850:	e7ff      	b.n	c852 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x13e>
    c852:	980a      	ldr	r0, [sp, #40]	; 0x28
    c854:	f7ff f9d3 	bl	bbfe <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9e096e948ad28d6eE>
    c858:	9013      	str	r0, [sp, #76]	; 0x4c
    c85a:	e7ff      	b.n	c85c <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x148>
    c85c:	e7ff      	b.n	c85e <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x14a>
    c85e:	e791      	b.n	c784 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x70>
        BACKLIGHT_HIGH.set_low() ? ;    
    c860:	f240 200c 	movw	r0, #524	; 0x20c
    c864:	f2c2 0000 	movt	r0, #8192	; 0x2000
    c868:	f7fe ff4a 	bl	b700 <_ZN74_$LT$mynewt..hal..GPIO$u20$as$u20$embedded_hal..digital..v2..OutputPin$GT$7set_low17h02e71d0e38f23a59E>
    c86c:	9009      	str	r0, [sp, #36]	; 0x24
    c86e:	e7ff      	b.n	c870 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x15c>
    c870:	9809      	ldr	r0, [sp, #36]	; 0x24
    c872:	f7ff f9d3 	bl	bc1c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h547b8d3279e16ed9E>
    c876:	9024      	str	r0, [sp, #144]	; 0x90
    c878:	e7ff      	b.n	c87a <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x166>
    c87a:	9824      	ldr	r0, [sp, #144]	; 0x90
    c87c:	1e41      	subs	r1, r0, #1
    c87e:	bf18      	it	ne
    c880:	2101      	movne	r1, #1
    c882:	2801      	cmp	r0, #1
    c884:	d00f      	beq.n	c8a6 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x192>
    c886:	e7ff      	b.n	c888 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x174>
    c888:	e000      	b.n	c88c <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x178>
    c88a:	defe      	udf	#254	; 0xfe
    c88c:	9824      	ldr	r0, [sp, #144]	; 0x90
    c88e:	9025      	str	r0, [sp, #148]	; 0x94
    c890:	9825      	ldr	r0, [sp, #148]	; 0x94
    c892:	f7fe ff7b 	bl	b78c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h21b21b5ada625ccdE>
    c896:	9008      	str	r0, [sp, #32]
    c898:	e7ff      	b.n	c89a <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x186>
    c89a:	9808      	ldr	r0, [sp, #32]
    c89c:	f7ff f9af 	bl	bbfe <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9e096e948ad28d6eE>
    c8a0:	9013      	str	r0, [sp, #76]	; 0x4c
    c8a2:	e7ff      	b.n	c8a4 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x190>
    c8a4:	e7db      	b.n	c85e <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x14a>
        spi_port,    //  SPI Port
    c8a6:	9914      	ldr	r1, [sp, #80]	; 0x50
    c8a8:	9a15      	ldr	r2, [sp, #84]	; 0x54
        dc_gpio,     //  GPIO Pin for DC
    c8aa:	9b16      	ldr	r3, [sp, #88]	; 0x58
        rst_gpio,    //  GPIO Pin for RST
    c8ac:	9817      	ldr	r0, [sp, #92]	; 0x5c
    unsafe { DISPLAY = st7735_lcd::ST7735::new(
    c8ae:	46ec      	mov	ip, sp
    c8b0:	f04f 0e01 	mov.w	lr, #1
    c8b4:	f8cc e008 	str.w	lr, [ip, #8]
    c8b8:	f8cc e004 	str.w	lr, [ip, #4]
    c8bc:	f8cc 0000 	str.w	r0, [ip]
    c8c0:	a827      	add	r0, sp, #156	; 0x9c
    c8c2:	f001 fd9d 	bl	e400 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$3new17h6baf8915c2b60d77E>
    c8c6:	e7ff      	b.n	c8c8 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x1b4>
    c8c8:	f240 10f4 	movw	r0, #500	; 0x1f4
    c8cc:	f2c2 0000 	movt	r0, #8192	; 0x2000
    c8d0:	a927      	add	r1, sp, #156	; 0x9c
    c8d2:	e891 503c 	ldmia.w	r1, {r2, r3, r4, r5, ip, lr}
    c8d6:	e880 503c 	stmia.w	r0, {r2, r3, r4, r5, ip, lr}
    let mut delay = mynewt::Delay::new();
    c8da:	f7fe ff29 	bl	b730 <_ZN6mynewt3hal5Delay3new17hb3a101f6006940a4E>
    c8de:	e7ff      	b.n	c8e0 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x1cc>
        DISPLAY.init(&mut delay) ? ;
    c8e0:	f240 10f4 	movw	r0, #500	; 0x1f4
    c8e4:	f2c2 0000 	movt	r0, #8192	; 0x2000
    c8e8:	a92d      	add	r1, sp, #180	; 0xb4
    c8ea:	f001 fdb5 	bl	e458 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E>
    c8ee:	9007      	str	r0, [sp, #28]
    c8f0:	e7ff      	b.n	c8f2 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x1de>
    c8f2:	9807      	ldr	r0, [sp, #28]
    c8f4:	f000 0001 	and.w	r0, r0, #1
    c8f8:	f7ff f988 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    c8fc:	f88d 00b7 	strb.w	r0, [sp, #183]	; 0xb7
    c900:	e7ff      	b.n	c902 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x1ee>
    c902:	f89d 00b7 	ldrb.w	r0, [sp, #183]	; 0xb7
    c906:	07c1      	lsls	r1, r0, #31
    c908:	2900      	cmp	r1, #0
    c90a:	d00d      	beq.n	c928 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x214>
    c90c:	e7ff      	b.n	c90e <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x1fa>
    c90e:	e000      	b.n	c912 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x1fe>
    c910:	defe      	udf	#254	; 0xfe
    c912:	f003 fdf4 	bl	104fe <_ZN83_$LT$mynewt..result..MynewtError$u20$as$u20$core..convert..From$LT$$LP$$RP$$GT$$GT$4from17heb2793981fcdfe68E>
    c916:	9006      	str	r0, [sp, #24]
    c918:	e7ff      	b.n	c91a <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x206>
    c91a:	9806      	ldr	r0, [sp, #24]
    c91c:	f7ff f96f 	bl	bbfe <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9e096e948ad28d6eE>
    c920:	9013      	str	r0, [sp, #76]	; 0x4c
    c922:	e7ff      	b.n	c924 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x210>
    c924:	e7ff      	b.n	c926 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x212>
    c926:	e72d      	b.n	c784 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x70>
        DISPLAY.set_orientation(&Orientation::Landscape) ? ;
    c928:	f24c 0078 	movw	r0, #49272	; 0xc078
    c92c:	f2c0 0001 	movt	r0, #1
    c930:	6801      	ldr	r1, [r0, #0]
    c932:	f240 10f4 	movw	r0, #500	; 0x1f4
    c936:	f2c2 0000 	movt	r0, #8192	; 0x2000
    c93a:	f001 fb95 	bl	e068 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E>
    c93e:	9005      	str	r0, [sp, #20]
    c940:	e7ff      	b.n	c942 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x22e>
    c942:	9805      	ldr	r0, [sp, #20]
    c944:	f000 0001 	and.w	r0, r0, #1
    c948:	f7ff f960 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    c94c:	f88d 00bf 	strb.w	r0, [sp, #191]	; 0xbf
    c950:	e7ff      	b.n	c952 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x23e>
    c952:	f89d 00bf 	ldrb.w	r0, [sp, #191]	; 0xbf
    c956:	07c1      	lsls	r1, r0, #31
    c958:	2900      	cmp	r1, #0
    c95a:	d00c      	beq.n	c976 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x262>
    c95c:	e7ff      	b.n	c95e <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x24a>
    c95e:	e000      	b.n	c962 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x24e>
    c960:	defe      	udf	#254	; 0xfe
    c962:	f003 fdcc 	bl	104fe <_ZN83_$LT$mynewt..result..MynewtError$u20$as$u20$core..convert..From$LT$$LP$$RP$$GT$$GT$4from17heb2793981fcdfe68E>
    c966:	9004      	str	r0, [sp, #16]
    c968:	e7ff      	b.n	c96a <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x256>
    c96a:	9804      	ldr	r0, [sp, #16]
    c96c:	f7ff f947 	bl	bbfe <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9e096e948ad28d6eE>
    c970:	9013      	str	r0, [sp, #76]	; 0x4c
    c972:	e7ff      	b.n	c974 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x260>
    c974:	e7d7      	b.n	c926 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x212>
    c976:	2000      	movs	r0, #0
    Ok(())
    c978:	9013      	str	r0, [sp, #76]	; 0x4c
    c97a:	2001      	movs	r0, #1
    c97c:	9013      	str	r0, [sp, #76]	; 0x4c
}
    c97e:	e6f8      	b.n	c772 <_ZN22piet_embedded_graphics7display13start_display17h3d413caacbc6385fE+0x5e>

0000c980 <_ZN122_$LT$embedded_graphics..primitives..rectangle..Rectangle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17he5f1ada0d1660827E>:
    C: PixelColor,
{
    type Item = Pixel<C>;
    type IntoIter = RectangleIterator<C>;

    fn into_iter(self) -> Self::IntoIter {
    c980:	b580      	push	{r7, lr}
        (&self).into_iter()
    c982:	f000 f818 	bl	c9b6 <_ZN126_$LT$$RF$embedded_graphics..primitives..rectangle..Rectangle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd969f481dbd1d97bE>
    c986:	e7ff      	b.n	c988 <_ZN122_$LT$embedded_graphics..primitives..rectangle..Rectangle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17he5f1ada0d1660827E+0x8>
    }
    c988:	bd80      	pop	{r7, pc}

0000c98a <_ZN125_$LT$embedded_graphics..primitives..rectangle..Rectangle$LT$C$GT$$u20$as$u20$embedded_graphics..style..WithStyle$LT$C$GT$$GT$4fill17hd11fd98104fc2f64E>:
    fn fill(mut self, color: Option<C>) -> Self {
    c98a:	b5b0      	push	{r4, r5, r7, lr}
    c98c:	b081      	sub	sp, #4
    c98e:	469c      	mov	ip, r3
    c990:	4696      	mov	lr, r2
    c992:	f8ad 2000 	strh.w	r2, [sp]
    c996:	f8ad 3002 	strh.w	r3, [sp, #2]
        self.style.fill_color = color;
    c99a:	f8bd 2000 	ldrh.w	r2, [sp]
    c99e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
    c9a2:	820a      	strh	r2, [r1, #16]
    c9a4:	824b      	strh	r3, [r1, #18]
        self
    c9a6:	c91c      	ldmia	r1!, {r2, r3, r4}
    c9a8:	c01c      	stmia	r0!, {r2, r3, r4}
    c9aa:	e891 003c 	ldmia.w	r1, {r2, r3, r4, r5}
    c9ae:	e880 003c 	stmia.w	r0, {r2, r3, r4, r5}
    }
    c9b2:	b001      	add	sp, #4
    c9b4:	bdb0      	pop	{r4, r5, r7, pc}

0000c9b6 <_ZN126_$LT$$RF$embedded_graphics..primitives..rectangle..Rectangle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd969f481dbd1d97bE>:
    C: PixelColor,
{
    type Item = Pixel<C>;
    type IntoIter = RectangleIterator<C>;

    fn into_iter(self) -> Self::IntoIter {
    c9b6:	b570      	push	{r4, r5, r6, lr}
    c9b8:	b08c      	sub	sp, #48	; 0x30
    c9ba:	9108      	str	r1, [sp, #32]
        RectangleIterator {
            top_left: self.top_left,
    c9bc:	9908      	ldr	r1, [sp, #32]
    c9be:	680a      	ldr	r2, [r1, #0]
    c9c0:	684b      	ldr	r3, [r1, #4]
            bottom_right: self.bottom_right,
    c9c2:	f8d1 c008 	ldr.w	ip, [r1, #8]
    c9c6:	f8d1 e00c 	ldr.w	lr, [r1, #12]
            style: self.style,
    c9ca:	8b0c      	ldrh	r4, [r1, #24]
    c9cc:	f8ad 402c 	strh.w	r4, [sp, #44]	; 0x2c
    c9d0:	690c      	ldr	r4, [r1, #16]
    c9d2:	6949      	ldr	r1, [r1, #20]
    c9d4:	910a      	str	r1, [sp, #40]	; 0x28
    c9d6:	9409      	str	r4, [sp, #36]	; 0x24
            x: self.top_left[0],
    c9d8:	9908      	ldr	r1, [sp, #32]
    c9da:	2400      	movs	r4, #0
    c9dc:	9007      	str	r0, [sp, #28]
    c9de:	4608      	mov	r0, r1
    c9e0:	4621      	mov	r1, r4
    c9e2:	9206      	str	r2, [sp, #24]
    c9e4:	9305      	str	r3, [sp, #20]
    c9e6:	f8cd c010 	str.w	ip, [sp, #16]
    c9ea:	f8cd e00c 	str.w	lr, [sp, #12]
    c9ee:	f7fe f820 	bl	aa32 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E>
    c9f2:	9002      	str	r0, [sp, #8]
    c9f4:	e7ff      	b.n	c9f6 <_ZN126_$LT$$RF$embedded_graphics..primitives..rectangle..Rectangle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd969f481dbd1d97bE+0x40>
    c9f6:	9802      	ldr	r0, [sp, #8]
    c9f8:	6801      	ldr	r1, [r0, #0]
            y: self.top_left[1],
    c9fa:	9808      	ldr	r0, [sp, #32]
    c9fc:	2201      	movs	r2, #1
    c9fe:	9101      	str	r1, [sp, #4]
    ca00:	4611      	mov	r1, r2
    ca02:	f7fe f816 	bl	aa32 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E>
    ca06:	9000      	str	r0, [sp, #0]
    ca08:	e7ff      	b.n	ca0a <_ZN126_$LT$$RF$embedded_graphics..primitives..rectangle..Rectangle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hd969f481dbd1d97bE+0x54>
    ca0a:	9800      	ldr	r0, [sp, #0]
    ca0c:	6801      	ldr	r1, [r0, #0]
        RectangleIterator {
    ca0e:	9a06      	ldr	r2, [sp, #24]
    ca10:	9b07      	ldr	r3, [sp, #28]
    ca12:	601a      	str	r2, [r3, #0]
    ca14:	f8dd c014 	ldr.w	ip, [sp, #20]
    ca18:	f8c3 c004 	str.w	ip, [r3, #4]
    ca1c:	f8dd e010 	ldr.w	lr, [sp, #16]
    ca20:	f8c3 e008 	str.w	lr, [r3, #8]
    ca24:	9c03      	ldr	r4, [sp, #12]
    ca26:	60dc      	str	r4, [r3, #12]
    ca28:	f8bd 502c 	ldrh.w	r5, [sp, #44]	; 0x2c
    ca2c:	841d      	strh	r5, [r3, #32]
    ca2e:	9d09      	ldr	r5, [sp, #36]	; 0x24
    ca30:	9e0a      	ldr	r6, [sp, #40]	; 0x28
    ca32:	61de      	str	r6, [r3, #28]
    ca34:	619d      	str	r5, [r3, #24]
    ca36:	9d01      	ldr	r5, [sp, #4]
    ca38:	611d      	str	r5, [r3, #16]
    ca3a:	6159      	str	r1, [r3, #20]
        }
    }
    ca3c:	b00c      	add	sp, #48	; 0x30
    ca3e:	bd70      	pop	{r4, r5, r6, pc}

0000ca40 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E>:
where
    C: PixelColor,
{
    type Item = Pixel<C>;

    fn next(&mut self) -> Option<Self::Item> {
    ca40:	b510      	push	{r4, lr}
    ca42:	b0d0      	sub	sp, #320	; 0x140
    ca44:	9129      	str	r1, [sp, #164]	; 0xa4
        // If entire object is off the top left of the screen or has no border or fill colour,
        // don't render anything
        if (self.top_left[0] < 0 || self.top_left[1] < 0)
    ca46:	9929      	ldr	r1, [sp, #164]	; 0xa4
    ca48:	2200      	movs	r2, #0
    ca4a:	9028      	str	r0, [sp, #160]	; 0xa0
    ca4c:	4608      	mov	r0, r1
    ca4e:	4611      	mov	r1, r2
    ca50:	f7fd ffef 	bl	aa32 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E>
    ca54:	9027      	str	r0, [sp, #156]	; 0x9c
    ca56:	e03c      	b.n	cad2 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x92>
    ca58:	2001      	movs	r0, #1
    ca5a:	f88d 00ab 	strb.w	r0, [sp, #171]	; 0xab
    ca5e:	e009      	b.n	ca74 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x34>
    ca60:	2000      	movs	r0, #0
    ca62:	f88d 00ab 	strb.w	r0, [sp, #171]	; 0xab
    ca66:	e005      	b.n	ca74 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x34>
            && (self.bottom_right[0] < 0 || self.bottom_right[1] < 0)
            || (self.style.stroke_color.is_none() && self.style.fill_color.is_none())
    ca68:	9829      	ldr	r0, [sp, #164]	; 0xa4
    ca6a:	301c      	adds	r0, #28
    ca6c:	f7ff fd41 	bl	c4f2 <_ZN4core6option15Option$LT$T$GT$7is_none17hdfc51a5a76806ab8E>
    ca70:	9026      	str	r0, [sp, #152]	; 0x98
    ca72:	e06c      	b.n	cb4e <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x10e>
        if (self.top_left[0] < 0 || self.top_left[1] < 0)
    ca74:	f89d 00ab 	ldrb.w	r0, [sp, #171]	; 0xab
    ca78:	07c0      	lsls	r0, r0, #31
    ca7a:	2800      	cmp	r0, #0
    ca7c:	d172      	bne.n	cb64 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x124>
    ca7e:	e070      	b.n	cb62 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x122>
    ca80:	2001      	movs	r0, #1
    ca82:	f88d 00ac 	strb.w	r0, [sp, #172]	; 0xac
    ca86:	e00a      	b.n	ca9e <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x5e>
    ca88:	2000      	movs	r0, #0
    ca8a:	f88d 00ac 	strb.w	r0, [sp, #172]	; 0xac
    ca8e:	e006      	b.n	ca9e <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x5e>
            && (self.bottom_right[0] < 0 || self.bottom_right[1] < 0)
    ca90:	9829      	ldr	r0, [sp, #164]	; 0xa4
    ca92:	3008      	adds	r0, #8
    ca94:	2100      	movs	r1, #0
    ca96:	f7fd ffcc 	bl	aa32 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E>
    ca9a:	9025      	str	r0, [sp, #148]	; 0x94
    ca9c:	e038      	b.n	cb10 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0xd0>
        if (self.top_left[0] < 0 || self.top_left[1] < 0)
    ca9e:	f89d 00ac 	ldrb.w	r0, [sp, #172]	; 0xac
    caa2:	07c0      	lsls	r0, r0, #31
    caa4:	2800      	cmp	r0, #0
    caa6:	d1d7      	bne.n	ca58 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x18>
    caa8:	e7de      	b.n	ca68 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x28>
    caaa:	2001      	movs	r0, #1
    caac:	f88d 00ad 	strb.w	r0, [sp, #173]	; 0xad
    cab0:	e009      	b.n	cac6 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x86>
    cab2:	2000      	movs	r0, #0
    cab4:	f88d 00ad 	strb.w	r0, [sp, #173]	; 0xad
    cab8:	e005      	b.n	cac6 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x86>
    caba:	9829      	ldr	r0, [sp, #164]	; 0xa4
    cabc:	2101      	movs	r1, #1
    cabe:	f7fd ffb8 	bl	aa32 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E>
    cac2:	9024      	str	r0, [sp, #144]	; 0x90
    cac4:	e00a      	b.n	cadc <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x9c>
    cac6:	f89d 00ad 	ldrb.w	r0, [sp, #173]	; 0xad
    caca:	07c0      	lsls	r0, r0, #31
    cacc:	2800      	cmp	r0, #0
    cace:	d1df      	bne.n	ca90 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x50>
    cad0:	e7da      	b.n	ca88 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x48>
    cad2:	9827      	ldr	r0, [sp, #156]	; 0x9c
    cad4:	6801      	ldr	r1, [r0, #0]
    cad6:	2900      	cmp	r1, #0
    cad8:	d4e7      	bmi.n	caaa <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x6a>
    cada:	e7ee      	b.n	caba <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x7a>
    cadc:	9824      	ldr	r0, [sp, #144]	; 0x90
    cade:	6801      	ldr	r1, [r0, #0]
    cae0:	2900      	cmp	r1, #0
    cae2:	d4e2      	bmi.n	caaa <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x6a>
    cae4:	e7e5      	b.n	cab2 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x72>
    cae6:	2001      	movs	r0, #1
            && (self.bottom_right[0] < 0 || self.bottom_right[1] < 0)
    cae8:	f88d 00ae 	strb.w	r0, [sp, #174]	; 0xae
    caec:	e00a      	b.n	cb04 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0xc4>
    caee:	2000      	movs	r0, #0
    caf0:	f88d 00ae 	strb.w	r0, [sp, #174]	; 0xae
    caf4:	e006      	b.n	cb04 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0xc4>
    caf6:	9829      	ldr	r0, [sp, #164]	; 0xa4
    caf8:	3008      	adds	r0, #8
    cafa:	2101      	movs	r1, #1
    cafc:	f7fd ff99 	bl	aa32 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E>
    cb00:	9023      	str	r0, [sp, #140]	; 0x8c
    cb02:	e00a      	b.n	cb1a <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0xda>
        if (self.top_left[0] < 0 || self.top_left[1] < 0)
    cb04:	f89d 00ae 	ldrb.w	r0, [sp, #174]	; 0xae
    cb08:	07c0      	lsls	r0, r0, #31
    cb0a:	2800      	cmp	r0, #0
    cb0c:	d1b8      	bne.n	ca80 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x40>
    cb0e:	e7bb      	b.n	ca88 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x48>
            && (self.bottom_right[0] < 0 || self.bottom_right[1] < 0)
    cb10:	9825      	ldr	r0, [sp, #148]	; 0x94
    cb12:	6801      	ldr	r1, [r0, #0]
    cb14:	2900      	cmp	r1, #0
    cb16:	d4e6      	bmi.n	cae6 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0xa6>
    cb18:	e7ed      	b.n	caf6 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0xb6>
    cb1a:	9823      	ldr	r0, [sp, #140]	; 0x8c
    cb1c:	6801      	ldr	r1, [r0, #0]
    cb1e:	2900      	cmp	r1, #0
    cb20:	d4e1      	bmi.n	cae6 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0xa6>
    cb22:	e7e4      	b.n	caee <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0xae>
    cb24:	2001      	movs	r0, #1
            || (self.style.stroke_color.is_none() && self.style.fill_color.is_none())
    cb26:	f88d 00af 	strb.w	r0, [sp, #175]	; 0xaf
    cb2a:	e009      	b.n	cb40 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x100>
    cb2c:	2000      	movs	r0, #0
    cb2e:	f88d 00af 	strb.w	r0, [sp, #175]	; 0xaf
    cb32:	e005      	b.n	cb40 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x100>
    cb34:	9829      	ldr	r0, [sp, #164]	; 0xa4
    cb36:	3018      	adds	r0, #24
    cb38:	f7ff fcdb 	bl	c4f2 <_ZN4core6option15Option$LT$T$GT$7is_none17hdfc51a5a76806ab8E>
    cb3c:	9022      	str	r0, [sp, #136]	; 0x88
    cb3e:	e00b      	b.n	cb58 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x118>
        if (self.top_left[0] < 0 || self.top_left[1] < 0)
    cb40:	f89d 00af 	ldrb.w	r0, [sp, #175]	; 0xaf
    cb44:	07c0      	lsls	r0, r0, #31
    cb46:	2800      	cmp	r0, #0
    cb48:	f47f af86 	bne.w	ca58 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x18>
    cb4c:	e788      	b.n	ca60 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x20>
            || (self.style.stroke_color.is_none() && self.style.fill_color.is_none())
    cb4e:	9826      	ldr	r0, [sp, #152]	; 0x98
    cb50:	07c1      	lsls	r1, r0, #31
    cb52:	2900      	cmp	r1, #0
    cb54:	d1ee      	bne.n	cb34 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0xf4>
    cb56:	e7e9      	b.n	cb2c <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0xec>
    cb58:	9822      	ldr	r0, [sp, #136]	; 0x88
    cb5a:	07c1      	lsls	r1, r0, #31
    cb5c:	2900      	cmp	r1, #0
    cb5e:	d1e1      	bne.n	cb24 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0xe4>
    cb60:	e7e4      	b.n	cb2c <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0xec>
        {
            return None;
        }

        let pixel = loop {
    cb62:	e012      	b.n	cb8a <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x14a>
    cb64:	2000      	movs	r0, #0
            return None;
    cb66:	9928      	ldr	r1, [sp, #160]	; 0xa0
    cb68:	6008      	str	r0, [r1, #0]
    cb6a:	e7ff      	b.n	cb6c <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x12c>
                break out;
            }
        };

        pixel.map(|(x, y, c)| Pixel(Coord::new(x, y).to_unsigned(), c))
    }
    cb6c:	b050      	add	sp, #320	; 0x140
    cb6e:	bd10      	pop	{r4, pc}
        pixel.map(|(x, y, c)| Pixel(Coord::new(x, y).to_unsigned(), c))
    cb70:	982c      	ldr	r0, [sp, #176]	; 0xb0
    cb72:	992d      	ldr	r1, [sp, #180]	; 0xb4
    cb74:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
    cb76:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
    cb78:	934e      	str	r3, [sp, #312]	; 0x138
    cb7a:	924d      	str	r2, [sp, #308]	; 0x134
    cb7c:	914c      	str	r1, [sp, #304]	; 0x130
    cb7e:	904b      	str	r0, [sp, #300]	; 0x12c
    cb80:	a94b      	add	r1, sp, #300	; 0x12c
    cb82:	9828      	ldr	r0, [sp, #160]	; 0xa0
    cb84:	f7ff fbc5 	bl	c312 <_ZN4core6option15Option$LT$T$GT$3map17hb20071b2cd92f1eeE>
    cb88:	e209      	b.n	cf9e <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x55e>
    cb8a:	2000      	movs	r0, #0
            let mut out = None;
    cb8c:	9030      	str	r0, [sp, #192]	; 0xc0
            if self.y > self.bottom_right[1] {
    cb8e:	9829      	ldr	r0, [sp, #164]	; 0xa4
    cb90:	6941      	ldr	r1, [r0, #20]
    cb92:	3008      	adds	r0, #8
    cb94:	2201      	movs	r2, #1
    cb96:	9121      	str	r1, [sp, #132]	; 0x84
    cb98:	4611      	mov	r1, r2
    cb9a:	f7fd ff4a 	bl	aa32 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E>
    cb9e:	9020      	str	r0, [sp, #128]	; 0x80
    cba0:	e7ff      	b.n	cba2 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x162>
    cba2:	9820      	ldr	r0, [sp, #128]	; 0x80
    cba4:	6801      	ldr	r1, [r0, #0]
    cba6:	9a21      	ldr	r2, [sp, #132]	; 0x84
    cba8:	428a      	cmp	r2, r1
    cbaa:	dc14      	bgt.n	cbd6 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x196>
    cbac:	e7ff      	b.n	cbae <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x16e>
            let border_width = self.style.stroke_width as i32;
    cbae:	9829      	ldr	r0, [sp, #164]	; 0xa4
    cbb0:	f890 0020 	ldrb.w	r0, [r0, #32]
    cbb4:	9034      	str	r0, [sp, #208]	; 0xd0
            let tl = self.top_left;
    cbb6:	9829      	ldr	r0, [sp, #164]	; 0xa4
    cbb8:	6801      	ldr	r1, [r0, #0]
    cbba:	6840      	ldr	r0, [r0, #4]
    cbbc:	9135      	str	r1, [sp, #212]	; 0xd4
    cbbe:	9036      	str	r0, [sp, #216]	; 0xd8
            let br = self.bottom_right;
    cbc0:	9829      	ldr	r0, [sp, #164]	; 0xa4
    cbc2:	6881      	ldr	r1, [r0, #8]
    cbc4:	68c0      	ldr	r0, [r0, #12]
    cbc6:	9137      	str	r1, [sp, #220]	; 0xdc
    cbc8:	9038      	str	r0, [sp, #224]	; 0xe0
            if self.x >= 0 && self.y >= 0 {
    cbca:	9829      	ldr	r0, [sp, #164]	; 0xa4
    cbcc:	6900      	ldr	r0, [r0, #16]
    cbce:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
    cbd2:	dc0b      	bgt.n	cbec <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x1ac>
    cbd4:	e006      	b.n	cbe4 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x1a4>
    cbd6:	2000      	movs	r0, #0
                break None;
    cbd8:	902c      	str	r0, [sp, #176]	; 0xb0
    cbda:	e7c9      	b.n	cb70 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x130>
    cbdc:	2001      	movs	r0, #1
            if self.x >= 0 && self.y >= 0 {
    cbde:	f88d 00e7 	strb.w	r0, [sp, #231]	; 0xe7
    cbe2:	e009      	b.n	cbf8 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x1b8>
    cbe4:	2000      	movs	r0, #0
    cbe6:	f88d 00e7 	strb.w	r0, [sp, #231]	; 0xe7
    cbea:	e005      	b.n	cbf8 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x1b8>
    cbec:	9829      	ldr	r0, [sp, #164]	; 0xa4
    cbee:	6940      	ldr	r0, [r0, #20]
    cbf0:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
    cbf4:	dcf2      	bgt.n	cbdc <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x19c>
    cbf6:	e7f5      	b.n	cbe4 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x1a4>
    cbf8:	f89d 00e7 	ldrb.w	r0, [sp, #231]	; 0xe7
    cbfc:	07c0      	lsls	r0, r0, #31
    cbfe:	2800      	cmp	r0, #0
    cc00:	f000 8189 	beq.w	cf16 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x4d6>
    cc04:	e7ff      	b.n	cc06 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x1c6>
                    (self.y >= tl[1] && self.y < tl[1] + border_width)
    cc06:	9829      	ldr	r0, [sp, #164]	; 0xa4
    cc08:	6940      	ldr	r0, [r0, #20]
    cc0a:	a935      	add	r1, sp, #212	; 0xd4
    cc0c:	2201      	movs	r2, #1
    cc0e:	901f      	str	r0, [sp, #124]	; 0x7c
    cc10:	4608      	mov	r0, r1
    cc12:	4611      	mov	r1, r2
    cc14:	f7fd ff0d 	bl	aa32 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E>
    cc18:	901e      	str	r0, [sp, #120]	; 0x78
    cc1a:	e078      	b.n	cd0e <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x2ce>
    cc1c:	2001      	movs	r0, #1
                if (
    cc1e:	f88d 00e8 	strb.w	r0, [sp, #232]	; 0xe8
    cc22:	e009      	b.n	cc38 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x1f8>
    cc24:	2000      	movs	r0, #0
    cc26:	f88d 00e8 	strb.w	r0, [sp, #232]	; 0xe8
    cc2a:	e005      	b.n	cc38 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x1f8>
                ) && self.style.stroke_color.is_some()
    cc2c:	9829      	ldr	r0, [sp, #164]	; 0xa4
    cc2e:	301c      	adds	r0, #28
    cc30:	f7ff fc92 	bl	c558 <_ZN4core6option15Option$LT$T$GT$7is_some17hb67f5a76f0918df9E>
    cc34:	901d      	str	r0, [sp, #116]	; 0x74
    cc36:	e109      	b.n	ce4c <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x40c>
                if (
    cc38:	f89d 00e8 	ldrb.w	r0, [sp, #232]	; 0xe8
    cc3c:	07c0      	lsls	r0, r0, #31
    cc3e:	2800      	cmp	r0, #0
    cc40:	f040 810f 	bne.w	ce62 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x422>
    cc44:	e108      	b.n	ce58 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x418>
    cc46:	2001      	movs	r0, #1
    cc48:	f88d 00e9 	strb.w	r0, [sp, #233]	; 0xe9
    cc4c:	e00e      	b.n	cc6c <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x22c>
    cc4e:	2000      	movs	r0, #0
    cc50:	f88d 00e9 	strb.w	r0, [sp, #233]	; 0xe9
    cc54:	e00a      	b.n	cc6c <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x22c>
                || (self.x <= br[0] && self.x > br[0] - border_width)
    cc56:	9829      	ldr	r0, [sp, #164]	; 0xa4
    cc58:	6900      	ldr	r0, [r0, #16]
    cc5a:	a937      	add	r1, sp, #220	; 0xdc
    cc5c:	2200      	movs	r2, #0
    cc5e:	901c      	str	r0, [sp, #112]	; 0x70
    cc60:	4608      	mov	r0, r1
    cc62:	4611      	mov	r1, r2
    cc64:	f7fd fee5 	bl	aa32 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E>
    cc68:	901b      	str	r0, [sp, #108]	; 0x6c
    cc6a:	e0db      	b.n	ce24 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x3e4>
                if (
    cc6c:	f89d 00e9 	ldrb.w	r0, [sp, #233]	; 0xe9
    cc70:	07c0      	lsls	r0, r0, #31
    cc72:	2800      	cmp	r0, #0
    cc74:	d1da      	bne.n	cc2c <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x1ec>
    cc76:	e7d5      	b.n	cc24 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x1e4>
    cc78:	2001      	movs	r0, #1
                    (self.y >= tl[1] && self.y < tl[1] + border_width)
    cc7a:	f88d 00ea 	strb.w	r0, [sp, #234]	; 0xea
    cc7e:	e00e      	b.n	cc9e <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x25e>
    cc80:	2000      	movs	r0, #0
    cc82:	f88d 00ea 	strb.w	r0, [sp, #234]	; 0xea
    cc86:	e00a      	b.n	cc9e <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x25e>
                || (self.x >= tl[0] && self.x < tl[0] + border_width)
    cc88:	9829      	ldr	r0, [sp, #164]	; 0xa4
    cc8a:	6900      	ldr	r0, [r0, #16]
    cc8c:	a935      	add	r1, sp, #212	; 0xd4
    cc8e:	2200      	movs	r2, #0
    cc90:	901a      	str	r0, [sp, #104]	; 0x68
    cc92:	4608      	mov	r0, r1
    cc94:	4611      	mov	r1, r2
    cc96:	f7fd fecc 	bl	aa32 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E>
    cc9a:	9019      	str	r0, [sp, #100]	; 0x64
    cc9c:	e093      	b.n	cdc6 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x386>
                if (
    cc9e:	f89d 00ea 	ldrb.w	r0, [sp, #234]	; 0xea
    cca2:	07c0      	lsls	r0, r0, #31
    cca4:	2800      	cmp	r0, #0
    cca6:	d1ce      	bne.n	cc46 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x206>
    cca8:	e7d5      	b.n	cc56 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x216>
    ccaa:	2001      	movs	r0, #1
                    (self.y >= tl[1] && self.y < tl[1] + border_width)
    ccac:	f88d 00eb 	strb.w	r0, [sp, #235]	; 0xeb
    ccb0:	e00e      	b.n	ccd0 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x290>
    ccb2:	2000      	movs	r0, #0
    ccb4:	f88d 00eb 	strb.w	r0, [sp, #235]	; 0xeb
    ccb8:	e00a      	b.n	ccd0 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x290>
                || (self.y <= br[1] && self.y > br[1] - border_width)
    ccba:	9829      	ldr	r0, [sp, #164]	; 0xa4
    ccbc:	6940      	ldr	r0, [r0, #20]
    ccbe:	a937      	add	r1, sp, #220	; 0xdc
    ccc0:	2201      	movs	r2, #1
    ccc2:	9018      	str	r0, [sp, #96]	; 0x60
    ccc4:	4608      	mov	r0, r1
    ccc6:	4611      	mov	r1, r2
    ccc8:	f7fd feb3 	bl	aa32 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E>
    cccc:	9017      	str	r0, [sp, #92]	; 0x5c
    ccce:	e04c      	b.n	cd6a <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x32a>
                    (self.y >= tl[1] && self.y < tl[1] + border_width)
    ccd0:	f89d 00eb 	ldrb.w	r0, [sp, #235]	; 0xeb
    ccd4:	07c0      	lsls	r0, r0, #31
    ccd6:	2800      	cmp	r0, #0
    ccd8:	d1ce      	bne.n	cc78 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x238>
    ccda:	e7d5      	b.n	cc88 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x248>
    ccdc:	2001      	movs	r0, #1
    ccde:	f88d 00ec 	strb.w	r0, [sp, #236]	; 0xec
    cce2:	e00e      	b.n	cd02 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x2c2>
    cce4:	2000      	movs	r0, #0
    cce6:	f88d 00ec 	strb.w	r0, [sp, #236]	; 0xec
    ccea:	e00a      	b.n	cd02 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x2c2>
    ccec:	9829      	ldr	r0, [sp, #164]	; 0xa4
    ccee:	6940      	ldr	r0, [r0, #20]
    ccf0:	a935      	add	r1, sp, #212	; 0xd4
    ccf2:	2201      	movs	r2, #1
    ccf4:	9016      	str	r0, [sp, #88]	; 0x58
    ccf6:	4608      	mov	r0, r1
    ccf8:	4611      	mov	r1, r2
    ccfa:	f7fd fe9a 	bl	aa32 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E>
    ccfe:	9015      	str	r0, [sp, #84]	; 0x54
    cd00:	e00b      	b.n	cd1a <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x2da>
    cd02:	f89d 00ec 	ldrb.w	r0, [sp, #236]	; 0xec
    cd06:	07c0      	lsls	r0, r0, #31
    cd08:	2800      	cmp	r0, #0
    cd0a:	d1ce      	bne.n	ccaa <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x26a>
    cd0c:	e7d5      	b.n	ccba <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x27a>
    cd0e:	981e      	ldr	r0, [sp, #120]	; 0x78
    cd10:	6801      	ldr	r1, [r0, #0]
    cd12:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
    cd14:	428a      	cmp	r2, r1
    cd16:	dae9      	bge.n	ccec <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x2ac>
    cd18:	e7e4      	b.n	cce4 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x2a4>
    cd1a:	9815      	ldr	r0, [sp, #84]	; 0x54
    cd1c:	6801      	ldr	r1, [r0, #0]
    cd1e:	9a34      	ldr	r2, [sp, #208]	; 0xd0
    cd20:	440a      	add	r2, r1
    cd22:	4613      	mov	r3, r2
    cd24:	428a      	cmp	r2, r1
    cd26:	9314      	str	r3, [sp, #80]	; 0x50
    cd28:	f180 813a 	bvs.w	cfa0 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x560>
    cd2c:	e7ff      	b.n	cd2e <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x2ee>
    cd2e:	9816      	ldr	r0, [sp, #88]	; 0x58
    cd30:	9914      	ldr	r1, [sp, #80]	; 0x50
    cd32:	4288      	cmp	r0, r1
    cd34:	dbd2      	blt.n	ccdc <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x29c>
    cd36:	e7d5      	b.n	cce4 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x2a4>
    cd38:	2001      	movs	r0, #1
                || (self.y <= br[1] && self.y > br[1] - border_width)
    cd3a:	f88d 00ed 	strb.w	r0, [sp, #237]	; 0xed
    cd3e:	e00e      	b.n	cd5e <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x31e>
    cd40:	2000      	movs	r0, #0
    cd42:	f88d 00ed 	strb.w	r0, [sp, #237]	; 0xed
    cd46:	e00a      	b.n	cd5e <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x31e>
    cd48:	9829      	ldr	r0, [sp, #164]	; 0xa4
    cd4a:	6940      	ldr	r0, [r0, #20]
    cd4c:	a937      	add	r1, sp, #220	; 0xdc
    cd4e:	2201      	movs	r2, #1
    cd50:	9013      	str	r0, [sp, #76]	; 0x4c
    cd52:	4608      	mov	r0, r1
    cd54:	4611      	mov	r1, r2
    cd56:	f7fd fe6c 	bl	aa32 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E>
    cd5a:	9012      	str	r0, [sp, #72]	; 0x48
    cd5c:	e00b      	b.n	cd76 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x336>
                    (self.y >= tl[1] && self.y < tl[1] + border_width)
    cd5e:	f89d 00ed 	ldrb.w	r0, [sp, #237]	; 0xed
    cd62:	07c0      	lsls	r0, r0, #31
    cd64:	2800      	cmp	r0, #0
    cd66:	d1a0      	bne.n	ccaa <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x26a>
    cd68:	e7a3      	b.n	ccb2 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x272>
                || (self.y <= br[1] && self.y > br[1] - border_width)
    cd6a:	9817      	ldr	r0, [sp, #92]	; 0x5c
    cd6c:	6801      	ldr	r1, [r0, #0]
    cd6e:	9a18      	ldr	r2, [sp, #96]	; 0x60
    cd70:	428a      	cmp	r2, r1
    cd72:	dde9      	ble.n	cd48 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x308>
    cd74:	e7e4      	b.n	cd40 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x300>
    cd76:	9812      	ldr	r0, [sp, #72]	; 0x48
    cd78:	6801      	ldr	r1, [r0, #0]
    cd7a:	9a34      	ldr	r2, [sp, #208]	; 0xd0
    cd7c:	1a8b      	subs	r3, r1, r2
    cd7e:	4291      	cmp	r1, r2
    cd80:	9311      	str	r3, [sp, #68]	; 0x44
    cd82:	f180 8119 	bvs.w	cfb8 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x578>
    cd86:	e7ff      	b.n	cd88 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x348>
    cd88:	9813      	ldr	r0, [sp, #76]	; 0x4c
    cd8a:	9911      	ldr	r1, [sp, #68]	; 0x44
    cd8c:	4288      	cmp	r0, r1
    cd8e:	dcd3      	bgt.n	cd38 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x2f8>
    cd90:	e7d6      	b.n	cd40 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x300>
    cd92:	2001      	movs	r0, #1
                || (self.x >= tl[0] && self.x < tl[0] + border_width)
    cd94:	f88d 00ee 	strb.w	r0, [sp, #238]	; 0xee
    cd98:	e00e      	b.n	cdb8 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x378>
    cd9a:	2000      	movs	r0, #0
    cd9c:	f88d 00ee 	strb.w	r0, [sp, #238]	; 0xee
    cda0:	e00a      	b.n	cdb8 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x378>
    cda2:	9829      	ldr	r0, [sp, #164]	; 0xa4
    cda4:	6900      	ldr	r0, [r0, #16]
    cda6:	a935      	add	r1, sp, #212	; 0xd4
    cda8:	2200      	movs	r2, #0
    cdaa:	9010      	str	r0, [sp, #64]	; 0x40
    cdac:	4608      	mov	r0, r1
    cdae:	4611      	mov	r1, r2
    cdb0:	f7fd fe3f 	bl	aa32 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E>
    cdb4:	900f      	str	r0, [sp, #60]	; 0x3c
    cdb6:	e00c      	b.n	cdd2 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x392>
                    (self.y >= tl[1] && self.y < tl[1] + border_width)
    cdb8:	f89d 00ee 	ldrb.w	r0, [sp, #238]	; 0xee
    cdbc:	07c0      	lsls	r0, r0, #31
    cdbe:	2800      	cmp	r0, #0
    cdc0:	f47f af5a 	bne.w	cc78 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x238>
    cdc4:	e75c      	b.n	cc80 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x240>
                || (self.x >= tl[0] && self.x < tl[0] + border_width)
    cdc6:	9819      	ldr	r0, [sp, #100]	; 0x64
    cdc8:	6801      	ldr	r1, [r0, #0]
    cdca:	9a1a      	ldr	r2, [sp, #104]	; 0x68
    cdcc:	428a      	cmp	r2, r1
    cdce:	dae8      	bge.n	cda2 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x362>
    cdd0:	e7e3      	b.n	cd9a <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x35a>
    cdd2:	980f      	ldr	r0, [sp, #60]	; 0x3c
    cdd4:	6801      	ldr	r1, [r0, #0]
    cdd6:	9a34      	ldr	r2, [sp, #208]	; 0xd0
    cdd8:	440a      	add	r2, r1
    cdda:	4613      	mov	r3, r2
    cddc:	428a      	cmp	r2, r1
    cdde:	930e      	str	r3, [sp, #56]	; 0x38
    cde0:	f180 80f6 	bvs.w	cfd0 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x590>
    cde4:	e7ff      	b.n	cde6 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x3a6>
    cde6:	9810      	ldr	r0, [sp, #64]	; 0x40
    cde8:	990e      	ldr	r1, [sp, #56]	; 0x38
    cdea:	4288      	cmp	r0, r1
    cdec:	dbd1      	blt.n	cd92 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x352>
    cdee:	e7d4      	b.n	cd9a <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x35a>
    cdf0:	2001      	movs	r0, #1
                || (self.x <= br[0] && self.x > br[0] - border_width)
    cdf2:	f88d 00ef 	strb.w	r0, [sp, #239]	; 0xef
    cdf6:	e00e      	b.n	ce16 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x3d6>
    cdf8:	2000      	movs	r0, #0
    cdfa:	f88d 00ef 	strb.w	r0, [sp, #239]	; 0xef
    cdfe:	e00a      	b.n	ce16 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x3d6>
    ce00:	9829      	ldr	r0, [sp, #164]	; 0xa4
    ce02:	6900      	ldr	r0, [r0, #16]
    ce04:	a937      	add	r1, sp, #220	; 0xdc
    ce06:	2200      	movs	r2, #0
    ce08:	900d      	str	r0, [sp, #52]	; 0x34
    ce0a:	4608      	mov	r0, r1
    ce0c:	4611      	mov	r1, r2
    ce0e:	f7fd fe10 	bl	aa32 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E>
    ce12:	900c      	str	r0, [sp, #48]	; 0x30
    ce14:	e00c      	b.n	ce30 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x3f0>
                if (
    ce16:	f89d 00ef 	ldrb.w	r0, [sp, #239]	; 0xef
    ce1a:	07c0      	lsls	r0, r0, #31
    ce1c:	2800      	cmp	r0, #0
    ce1e:	f47f af12 	bne.w	cc46 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x206>
    ce22:	e714      	b.n	cc4e <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x20e>
                || (self.x <= br[0] && self.x > br[0] - border_width)
    ce24:	981b      	ldr	r0, [sp, #108]	; 0x6c
    ce26:	6801      	ldr	r1, [r0, #0]
    ce28:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    ce2a:	428a      	cmp	r2, r1
    ce2c:	dde8      	ble.n	ce00 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x3c0>
    ce2e:	e7e3      	b.n	cdf8 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x3b8>
    ce30:	980c      	ldr	r0, [sp, #48]	; 0x30
    ce32:	6801      	ldr	r1, [r0, #0]
    ce34:	9a34      	ldr	r2, [sp, #208]	; 0xd0
    ce36:	1a8b      	subs	r3, r1, r2
    ce38:	4291      	cmp	r1, r2
    ce3a:	930b      	str	r3, [sp, #44]	; 0x2c
    ce3c:	f180 80d4 	bvs.w	cfe8 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x5a8>
    ce40:	e7ff      	b.n	ce42 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x402>
    ce42:	980d      	ldr	r0, [sp, #52]	; 0x34
    ce44:	990b      	ldr	r1, [sp, #44]	; 0x2c
    ce46:	4288      	cmp	r0, r1
    ce48:	dcd2      	bgt.n	cdf0 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x3b0>
    ce4a:	e7d5      	b.n	cdf8 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x3b8>
                if (
    ce4c:	981d      	ldr	r0, [sp, #116]	; 0x74
    ce4e:	07c1      	lsls	r1, r0, #31
    ce50:	2900      	cmp	r1, #0
    ce52:	f47f aee3 	bne.w	cc1c <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x1dc>
    ce56:	e6e5      	b.n	cc24 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x1e4>
                else if let Some(fill) = self.style.fill_color {
    ce58:	9829      	ldr	r0, [sp, #164]	; 0xa4
    ce5a:	8b00      	ldrh	r0, [r0, #24]
    ce5c:	2801      	cmp	r0, #1
    ce5e:	d03b      	beq.n	ced8 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x498>
    ce60:	e058      	b.n	cf14 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x4d4>
                        self.x,
    ce62:	9829      	ldr	r0, [sp, #164]	; 0xa4
    ce64:	6901      	ldr	r1, [r0, #16]
                        self.y,
    ce66:	6942      	ldr	r2, [r0, #20]
                        self.style.stroke_color.expect("Expected stroke"),
    ce68:	8bc3      	ldrh	r3, [r0, #30]
    ce6a:	8b80      	ldrh	r0, [r0, #28]
    ce6c:	f24c 1c84 	movw	ip, #49540	; 0xc184
    ce70:	f2c0 0c01 	movt	ip, #1
    ce74:	46ee      	mov	lr, sp
    ce76:	f8ce c000 	str.w	ip, [lr]
    ce7a:	f24c 1c74 	movw	ip, #49524	; 0xc174
    ce7e:	f2c0 0c01 	movt	ip, #1
    ce82:	f04f 0e0f 	mov.w	lr, #15
    ce86:	910a      	str	r1, [sp, #40]	; 0x28
    ce88:	4619      	mov	r1, r3
    ce8a:	9209      	str	r2, [sp, #36]	; 0x24
    ce8c:	4662      	mov	r2, ip
    ce8e:	4673      	mov	r3, lr
    ce90:	f7ff fab1 	bl	c3f6 <_ZN4core6option15Option$LT$T$GT$6expect17hb4daba08f67c5da8E>
    ce94:	9008      	str	r0, [sp, #32]
    ce96:	e7ff      	b.n	ce98 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x458>
                    out = Some((
    ce98:	980a      	ldr	r0, [sp, #40]	; 0x28
    ce9a:	9040      	str	r0, [sp, #256]	; 0x100
    ce9c:	9909      	ldr	r1, [sp, #36]	; 0x24
    ce9e:	9141      	str	r1, [sp, #260]	; 0x104
    cea0:	9a08      	ldr	r2, [sp, #32]
    cea2:	f8ad 2108 	strh.w	r2, [sp, #264]	; 0x108
    cea6:	9b40      	ldr	r3, [sp, #256]	; 0x100
    cea8:	f8dd c104 	ldr.w	ip, [sp, #260]	; 0x104
    ceac:	f8dd e108 	ldr.w	lr, [sp, #264]	; 0x108
    ceb0:	f8cd e0fc 	str.w	lr, [sp, #252]	; 0xfc
    ceb4:	f8cd c0f8 	str.w	ip, [sp, #248]	; 0xf8
    ceb8:	933d      	str	r3, [sp, #244]	; 0xf4
    ceba:	2301      	movs	r3, #1
    cebc:	933c      	str	r3, [sp, #240]	; 0xf0
    cebe:	9b3c      	ldr	r3, [sp, #240]	; 0xf0
    cec0:	f8dd c0f4 	ldr.w	ip, [sp, #244]	; 0xf4
    cec4:	f8dd e0f8 	ldr.w	lr, [sp, #248]	; 0xf8
    cec8:	9c3f      	ldr	r4, [sp, #252]	; 0xfc
    ceca:	9433      	str	r4, [sp, #204]	; 0xcc
    cecc:	f8cd e0c8 	str.w	lr, [sp, #200]	; 0xc8
    ced0:	f8cd c0c4 	str.w	ip, [sp, #196]	; 0xc4
    ced4:	9330      	str	r3, [sp, #192]	; 0xc0
                if (
    ced6:	e01d      	b.n	cf14 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x4d4>
                else if let Some(fill) = self.style.fill_color {
    ced8:	9829      	ldr	r0, [sp, #164]	; 0xa4
    ceda:	8b40      	ldrh	r0, [r0, #26]
    cedc:	f8ad 010e 	strh.w	r0, [sp, #270]	; 0x10e
                    out = Some((self.x, self.y, fill));
    cee0:	9829      	ldr	r0, [sp, #164]	; 0xa4
    cee2:	6901      	ldr	r1, [r0, #16]
    cee4:	6940      	ldr	r0, [r0, #20]
    cee6:	f8bd 210e 	ldrh.w	r2, [sp, #270]	; 0x10e
    ceea:	9148      	str	r1, [sp, #288]	; 0x120
    ceec:	9049      	str	r0, [sp, #292]	; 0x124
    ceee:	f8ad 2128 	strh.w	r2, [sp, #296]	; 0x128
    cef2:	9848      	ldr	r0, [sp, #288]	; 0x120
    cef4:	9949      	ldr	r1, [sp, #292]	; 0x124
    cef6:	9a4a      	ldr	r2, [sp, #296]	; 0x128
    cef8:	9247      	str	r2, [sp, #284]	; 0x11c
    cefa:	9146      	str	r1, [sp, #280]	; 0x118
    cefc:	9045      	str	r0, [sp, #276]	; 0x114
    cefe:	2001      	movs	r0, #1
    cf00:	9044      	str	r0, [sp, #272]	; 0x110
    cf02:	9844      	ldr	r0, [sp, #272]	; 0x110
    cf04:	9945      	ldr	r1, [sp, #276]	; 0x114
    cf06:	9a46      	ldr	r2, [sp, #280]	; 0x118
    cf08:	9b47      	ldr	r3, [sp, #284]	; 0x11c
    cf0a:	9333      	str	r3, [sp, #204]	; 0xcc
    cf0c:	9232      	str	r2, [sp, #200]	; 0xc8
    cf0e:	9131      	str	r1, [sp, #196]	; 0xc4
    cf10:	9030      	str	r0, [sp, #192]	; 0xc0
                else if let Some(fill) = self.style.fill_color {
    cf12:	e7ff      	b.n	cf14 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x4d4>
            if self.x >= 0 && self.y >= 0 {
    cf14:	e7ff      	b.n	cf16 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x4d6>
            self.x += 1;
    cf16:	9829      	ldr	r0, [sp, #164]	; 0xa4
    cf18:	6900      	ldr	r0, [r0, #16]
    cf1a:	1c41      	adds	r1, r0, #1
    cf1c:	460a      	mov	r2, r1
    cf1e:	4281      	cmp	r1, r0
    cf20:	9207      	str	r2, [sp, #28]
    cf22:	d66d      	bvs.n	d000 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x5c0>
    cf24:	e7ff      	b.n	cf26 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x4e6>
    cf26:	9829      	ldr	r0, [sp, #164]	; 0xa4
    cf28:	9907      	ldr	r1, [sp, #28]
    cf2a:	6101      	str	r1, [r0, #16]
            if self.x > self.bottom_right[0] {
    cf2c:	9829      	ldr	r0, [sp, #164]	; 0xa4
    cf2e:	6902      	ldr	r2, [r0, #16]
    cf30:	3008      	adds	r0, #8
    cf32:	2100      	movs	r1, #0
    cf34:	9206      	str	r2, [sp, #24]
    cf36:	f7fd fd7c 	bl	aa32 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E>
    cf3a:	9005      	str	r0, [sp, #20]
    cf3c:	e7ff      	b.n	cf3e <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x4fe>
    cf3e:	9805      	ldr	r0, [sp, #20]
    cf40:	6801      	ldr	r1, [r0, #0]
    cf42:	9a06      	ldr	r2, [sp, #24]
    cf44:	428a      	cmp	r2, r1
    cf46:	dd16      	ble.n	cf76 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x536>
    cf48:	e7ff      	b.n	cf4a <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x50a>
                self.x = self.top_left[0];
    cf4a:	9829      	ldr	r0, [sp, #164]	; 0xa4
    cf4c:	2100      	movs	r1, #0
    cf4e:	f7fd fd70 	bl	aa32 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E>
    cf52:	9004      	str	r0, [sp, #16]
    cf54:	e7ff      	b.n	cf56 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x516>
    cf56:	9804      	ldr	r0, [sp, #16]
    cf58:	6801      	ldr	r1, [r0, #0]
    cf5a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
    cf5c:	6111      	str	r1, [r2, #16]
                self.y += 1;
    cf5e:	9929      	ldr	r1, [sp, #164]	; 0xa4
    cf60:	6949      	ldr	r1, [r1, #20]
    cf62:	1c4a      	adds	r2, r1, #1
    cf64:	4613      	mov	r3, r2
    cf66:	428a      	cmp	r2, r1
    cf68:	9303      	str	r3, [sp, #12]
    cf6a:	d655      	bvs.n	d018 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x5d8>
    cf6c:	e7ff      	b.n	cf6e <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x52e>
    cf6e:	9829      	ldr	r0, [sp, #164]	; 0xa4
    cf70:	9903      	ldr	r1, [sp, #12]
    cf72:	6141      	str	r1, [r0, #20]
            if self.x > self.bottom_right[0] {
    cf74:	e7ff      	b.n	cf76 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x536>
    cf76:	a830      	add	r0, sp, #192	; 0xc0
            if out.is_some() {
    cf78:	f7ff fadb 	bl	c532 <_ZN4core6option15Option$LT$T$GT$7is_some17h828e6c43309317e1E>
    cf7c:	9002      	str	r0, [sp, #8]
    cf7e:	e7ff      	b.n	cf80 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x540>
    cf80:	9802      	ldr	r0, [sp, #8]
    cf82:	07c1      	lsls	r1, r0, #31
    cf84:	2900      	cmp	r1, #0
    cf86:	d101      	bne.n	cf8c <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x54c>
    cf88:	e7ff      	b.n	cf8a <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x54a>
        let pixel = loop {
    cf8a:	e5fe      	b.n	cb8a <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x14a>
                break out;
    cf8c:	9830      	ldr	r0, [sp, #192]	; 0xc0
    cf8e:	9931      	ldr	r1, [sp, #196]	; 0xc4
    cf90:	9a32      	ldr	r2, [sp, #200]	; 0xc8
    cf92:	9b33      	ldr	r3, [sp, #204]	; 0xcc
    cf94:	932f      	str	r3, [sp, #188]	; 0xbc
    cf96:	922e      	str	r2, [sp, #184]	; 0xb8
    cf98:	912d      	str	r1, [sp, #180]	; 0xb4
    cf9a:	902c      	str	r0, [sp, #176]	; 0xb0
    cf9c:	e5e8      	b.n	cb70 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x130>
    }
    cf9e:	e5e5      	b.n	cb6c <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E+0x12c>
                    (self.y >= tl[1] && self.y < tl[1] + border_width)
    cfa0:	f24c 1000 	movw	r0, #49408	; 0xc100
    cfa4:	f2c0 0001 	movt	r0, #1
    cfa8:	f24c 02ec 	movw	r2, #49388	; 0xc0ec
    cfac:	f2c0 0201 	movt	r2, #1
    cfb0:	211c      	movs	r1, #28
    cfb2:	f007 fdf6 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    cfb6:	defe      	udf	#254	; 0xfe
                || (self.y <= br[1] && self.y > br[1] - border_width)
    cfb8:	f24c 1030 	movw	r0, #49456	; 0xc130
    cfbc:	f2c0 0001 	movt	r0, #1
    cfc0:	f24c 121c 	movw	r2, #49436	; 0xc11c
    cfc4:	f2c0 0201 	movt	r2, #1
    cfc8:	2121      	movs	r1, #33	; 0x21
    cfca:	f007 fdea 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    cfce:	defe      	udf	#254	; 0xfe
                || (self.x >= tl[0] && self.x < tl[0] + border_width)
    cfd0:	f24c 1000 	movw	r0, #49408	; 0xc100
    cfd4:	f2c0 0001 	movt	r0, #1
    cfd8:	f24c 1254 	movw	r2, #49492	; 0xc154
    cfdc:	f2c0 0201 	movt	r2, #1
    cfe0:	211c      	movs	r1, #28
    cfe2:	f007 fdde 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    cfe6:	defe      	udf	#254	; 0xfe
                || (self.x <= br[0] && self.x > br[0] - border_width)
    cfe8:	f24c 1030 	movw	r0, #49456	; 0xc130
    cfec:	f2c0 0001 	movt	r0, #1
    cff0:	f24c 1264 	movw	r2, #49508	; 0xc164
    cff4:	f2c0 0201 	movt	r2, #1
    cff8:	2121      	movs	r1, #33	; 0x21
    cffa:	f007 fdd2 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    cffe:	defe      	udf	#254	; 0xfe
            self.x += 1;
    d000:	f24c 1000 	movw	r0, #49408	; 0xc100
    d004:	f2c0 0001 	movt	r0, #1
    d008:	f24c 1294 	movw	r2, #49556	; 0xc194
    d00c:	f2c0 0201 	movt	r2, #1
    d010:	211c      	movs	r1, #28
    d012:	f007 fdc6 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    d016:	defe      	udf	#254	; 0xfe
                self.y += 1;
    d018:	f24c 1000 	movw	r0, #49408	; 0xc100
    d01c:	f2c0 0001 	movt	r0, #1
    d020:	f24c 12a4 	movw	r2, #49572	; 0xc1a4
    d024:	f2c0 0201 	movt	r2, #1
    d028:	211c      	movs	r1, #28
    d02a:	f007 fdba 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    d02e:	defe      	udf	#254	; 0xfe

0000d030 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hd2cf853b3d660756E>:
        pixel.map(|(x, y, c)| Pixel(Coord::new(x, y).to_unsigned(), c))
    d030:	b580      	push	{r7, lr}
    d032:	b08a      	sub	sp, #40	; 0x28
    d034:	680a      	ldr	r2, [r1, #0]
    d036:	9207      	str	r2, [sp, #28]
    d038:	684a      	ldr	r2, [r1, #4]
    d03a:	9208      	str	r2, [sp, #32]
    d03c:	8909      	ldrh	r1, [r1, #8]
    d03e:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
    d042:	9907      	ldr	r1, [sp, #28]
    d044:	9a08      	ldr	r2, [sp, #32]
    d046:	9005      	str	r0, [sp, #20]
    d048:	4608      	mov	r0, r1
    d04a:	4611      	mov	r1, r2
    d04c:	f7fd fcad 	bl	a9aa <_ZN17embedded_graphics5coord14internal_coord5Coord3new17h9ba2f193635b6338E>
    d050:	9004      	str	r0, [sp, #16]
    d052:	9103      	str	r1, [sp, #12]
    d054:	e7ff      	b.n	d056 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hd2cf853b3d660756E+0x26>
    d056:	9804      	ldr	r0, [sp, #16]
    d058:	9903      	ldr	r1, [sp, #12]
    d05a:	f7fd fd33 	bl	aac4 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$embedded_graphics..coord..ToUnsigned$GT$11to_unsigned17hf1a2e5ff232b047aE>
    d05e:	9002      	str	r0, [sp, #8]
    d060:	9101      	str	r1, [sp, #4]
    d062:	e7ff      	b.n	d064 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hd2cf853b3d660756E+0x34>
    d064:	f8bd 0026 	ldrh.w	r0, [sp, #38]	; 0x26
    d068:	9902      	ldr	r1, [sp, #8]
    d06a:	9a05      	ldr	r2, [sp, #20]
    d06c:	6011      	str	r1, [r2, #0]
    d06e:	9b01      	ldr	r3, [sp, #4]
    d070:	6053      	str	r3, [r2, #4]
    d072:	8110      	strh	r0, [r2, #8]
    d074:	b00a      	add	sp, #40	; 0x28
    d076:	bd80      	pop	{r7, pc}

0000d078 <_ZN17embedded_graphics10primitives9rectangle18Rectangle$LT$C$GT$3new17h0ad81b0a96d5988aE>:
    pub fn new(top_left: Coord, bottom_right: Coord) -> Self {
    d078:	b510      	push	{r4, lr}
    d07a:	b08c      	sub	sp, #48	; 0x30
    d07c:	f8dd c038 	ldr.w	ip, [sp, #56]	; 0x38
    d080:	9105      	str	r1, [sp, #20]
    d082:	9206      	str	r2, [sp, #24]
    d084:	9307      	str	r3, [sp, #28]
    d086:	f8cd c020 	str.w	ip, [sp, #32]
            top_left,
    d08a:	9905      	ldr	r1, [sp, #20]
    d08c:	9a06      	ldr	r2, [sp, #24]
            bottom_right,
    d08e:	9b07      	ldr	r3, [sp, #28]
    d090:	f8dd c020 	ldr.w	ip, [sp, #32]
    d094:	f10d 0e24 	add.w	lr, sp, #36	; 0x24
            style: Style::default(),
    d098:	9004      	str	r0, [sp, #16]
    d09a:	4670      	mov	r0, lr
    d09c:	9103      	str	r1, [sp, #12]
    d09e:	9202      	str	r2, [sp, #8]
    d0a0:	9301      	str	r3, [sp, #4]
    d0a2:	f8cd c000 	str.w	ip, [sp]
    d0a6:	f7fe ff5c 	bl	bf62 <_ZN83_$LT$embedded_graphics..style..Style$LT$P$GT$$u20$as$u20$core..default..Default$GT$7default17ha6c30ca12b466235E>
    d0aa:	e7ff      	b.n	d0ac <_ZN17embedded_graphics10primitives9rectangle18Rectangle$LT$C$GT$3new17h0ad81b0a96d5988aE+0x34>
        Rectangle {
    d0ac:	9803      	ldr	r0, [sp, #12]
    d0ae:	9904      	ldr	r1, [sp, #16]
    d0b0:	6008      	str	r0, [r1, #0]
    d0b2:	9a02      	ldr	r2, [sp, #8]
    d0b4:	604a      	str	r2, [r1, #4]
    d0b6:	9b01      	ldr	r3, [sp, #4]
    d0b8:	608b      	str	r3, [r1, #8]
    d0ba:	f8dd c000 	ldr.w	ip, [sp]
    d0be:	f8c1 c00c 	str.w	ip, [r1, #12]
    d0c2:	f8bd e02c 	ldrh.w	lr, [sp, #44]	; 0x2c
    d0c6:	f8a1 e018 	strh.w	lr, [r1, #24]
    d0ca:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
    d0ce:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    d0d0:	614c      	str	r4, [r1, #20]
    d0d2:	f8c1 e010 	str.w	lr, [r1, #16]
    }
    d0d6:	b00c      	add	sp, #48	; 0x30
    d0d8:	bd10      	pop	{r4, pc}

0000d0da <_ZN4core3ops8function6FnOnce9call_once17h4a4bbb1195412553E>:
    d0da:	b580      	push	{r7, lr}
    d0dc:	b084      	sub	sp, #16
    d0de:	9003      	str	r0, [sp, #12]
    d0e0:	9803      	ldr	r0, [sp, #12]
    d0e2:	f000 fca7 	bl	da34 <_ZN53_$LT$u64$u20$as$u20$num_traits..cast..ToPrimitive$GT$5to_u817he15679f49f6ad4faE>
    d0e6:	9001      	str	r0, [sp, #4]
    d0e8:	9100      	str	r1, [sp, #0]
    d0ea:	e7ff      	b.n	d0ec <_ZN4core3ops8function6FnOnce9call_once17h4a4bbb1195412553E+0x12>
    d0ec:	9801      	ldr	r0, [sp, #4]
    d0ee:	f000 0001 	and.w	r0, r0, #1
    d0f2:	9900      	ldr	r1, [sp, #0]
    d0f4:	b004      	add	sp, #16
    d0f6:	bd80      	pop	{r7, pc}

0000d0f8 <_ZN4core3ptr18real_drop_in_place17h1678ce5edb78514cE>:
    d0f8:	b081      	sub	sp, #4
    d0fa:	9000      	str	r0, [sp, #0]
    d0fc:	b001      	add	sp, #4
    d0fe:	4770      	bx	lr

0000d100 <_ZN4core3ptr18real_drop_in_place17h32a869986fa832b9E>:
    d100:	b580      	push	{r7, lr}
    d102:	b082      	sub	sp, #8
    d104:	9001      	str	r0, [sp, #4]
    d106:	9801      	ldr	r0, [sp, #4]
    d108:	f004 fdbc 	bl	11c84 <_ZN78_$LT$heapless..vec..IntoIter$LT$T$C$N$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he92b3e577649ec65E>
    d10c:	e001      	b.n	d112 <_ZN4core3ptr18real_drop_in_place17h32a869986fa832b9E+0x12>
    d10e:	b002      	add	sp, #8
    d110:	bd80      	pop	{r7, pc}
    d112:	9801      	ldr	r0, [sp, #4]
    d114:	f000 f856 	bl	d1c4 <_ZN4core3ptr18real_drop_in_place17he3591a973465b7a1E>
    d118:	e7f9      	b.n	d10e <_ZN4core3ptr18real_drop_in_place17h32a869986fa832b9E+0xe>

0000d11a <_ZN4core3ptr18real_drop_in_place17h341d5af2990194aeE>:
    d11a:	b580      	push	{r7, lr}
    d11c:	b082      	sub	sp, #8
    d11e:	9001      	str	r0, [sp, #4]
    d120:	9801      	ldr	r0, [sp, #4]
    d122:	3024      	adds	r0, #36	; 0x24
    d124:	f000 f836 	bl	d194 <_ZN4core3ptr18real_drop_in_place17hcb51ffffa77a350eE>
    d128:	e7ff      	b.n	d12a <_ZN4core3ptr18real_drop_in_place17h341d5af2990194aeE+0x10>
    d12a:	b002      	add	sp, #8
    d12c:	bd80      	pop	{r7, pc}

0000d12e <_ZN4core3ptr18real_drop_in_place17h88dc89cecd06f140E>:
    d12e:	b580      	push	{r7, lr}
    d130:	b082      	sub	sp, #8
    d132:	9001      	str	r0, [sp, #4]
    d134:	9801      	ldr	r0, [sp, #4]
    d136:	f7ff fff0 	bl	d11a <_ZN4core3ptr18real_drop_in_place17h341d5af2990194aeE>
    d13a:	e001      	b.n	d140 <_ZN4core3ptr18real_drop_in_place17h88dc89cecd06f140E+0x12>
    d13c:	b002      	add	sp, #8
    d13e:	bd80      	pop	{r7, pc}
    d140:	9801      	ldr	r0, [sp, #4]
    d142:	3094      	adds	r0, #148	; 0x94
    d144:	f000 f83e 	bl	d1c4 <_ZN4core3ptr18real_drop_in_place17he3591a973465b7a1E>
    d148:	e7f8      	b.n	d13c <_ZN4core3ptr18real_drop_in_place17h88dc89cecd06f140E+0xe>

0000d14a <_ZN4core3ptr18real_drop_in_place17h95d35041511b8a18E>:
    d14a:	b580      	push	{r7, lr}
    d14c:	b082      	sub	sp, #8
    d14e:	9001      	str	r0, [sp, #4]
    d150:	9801      	ldr	r0, [sp, #4]
    d152:	6800      	ldr	r0, [r0, #0]
    d154:	2800      	cmp	r0, #0
    d156:	d102      	bne.n	d15e <_ZN4core3ptr18real_drop_in_place17h95d35041511b8a18E+0x14>
    d158:	e7ff      	b.n	d15a <_ZN4core3ptr18real_drop_in_place17h95d35041511b8a18E+0x10>
    d15a:	b002      	add	sp, #8
    d15c:	bd80      	pop	{r7, pc}
    d15e:	9801      	ldr	r0, [sp, #4]
    d160:	3004      	adds	r0, #4
    d162:	f000 f801 	bl	d168 <_ZN4core3ptr18real_drop_in_place17h9f2dd99f41bfa5ddE>
    d166:	e7f8      	b.n	d15a <_ZN4core3ptr18real_drop_in_place17h95d35041511b8a18E+0x10>

0000d168 <_ZN4core3ptr18real_drop_in_place17h9f2dd99f41bfa5ddE>:
    d168:	b580      	push	{r7, lr}
    d16a:	b082      	sub	sp, #8
    d16c:	9001      	str	r0, [sp, #4]
    d16e:	9801      	ldr	r0, [sp, #4]
    d170:	f000 f828 	bl	d1c4 <_ZN4core3ptr18real_drop_in_place17he3591a973465b7a1E>
    d174:	e7ff      	b.n	d176 <_ZN4core3ptr18real_drop_in_place17h9f2dd99f41bfa5ddE+0xe>
    d176:	b002      	add	sp, #8
    d178:	bd80      	pop	{r7, pc}

0000d17a <_ZN4core3ptr18real_drop_in_place17hb594abbe78127cbbE>:
    d17a:	b081      	sub	sp, #4
    d17c:	9000      	str	r0, [sp, #0]
    d17e:	b001      	add	sp, #4
    d180:	4770      	bx	lr

0000d182 <_ZN4core3ptr18real_drop_in_place17hb90aa7de9eead791E>:
    d182:	b580      	push	{r7, lr}
    d184:	b082      	sub	sp, #8
    d186:	9001      	str	r0, [sp, #4]
    d188:	9801      	ldr	r0, [sp, #4]
    d18a:	f000 f803 	bl	d194 <_ZN4core3ptr18real_drop_in_place17hcb51ffffa77a350eE>
    d18e:	e7ff      	b.n	d190 <_ZN4core3ptr18real_drop_in_place17hb90aa7de9eead791E+0xe>
    d190:	b002      	add	sp, #8
    d192:	bd80      	pop	{r7, pc}

0000d194 <_ZN4core3ptr18real_drop_in_place17hcb51ffffa77a350eE>:
    d194:	b580      	push	{r7, lr}
    d196:	b082      	sub	sp, #8
    d198:	9001      	str	r0, [sp, #4]
    d19a:	9801      	ldr	r0, [sp, #4]
    d19c:	f004 fd2a 	bl	11bf4 <_ZN73_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5669767cff00bda9E>
    d1a0:	e7ff      	b.n	d1a2 <_ZN4core3ptr18real_drop_in_place17hcb51ffffa77a350eE+0xe>
    d1a2:	b002      	add	sp, #8
    d1a4:	bd80      	pop	{r7, pc}

0000d1a6 <_ZN4core3ptr18real_drop_in_place17hdab79d49bcbb0c7bE>:
    d1a6:	b580      	push	{r7, lr}
    d1a8:	b082      	sub	sp, #8
    d1aa:	9001      	str	r0, [sp, #4]
    d1ac:	9801      	ldr	r0, [sp, #4]
    d1ae:	6800      	ldr	r0, [r0, #0]
    d1b0:	2800      	cmp	r0, #0
    d1b2:	d102      	bne.n	d1ba <_ZN4core3ptr18real_drop_in_place17hdab79d49bcbb0c7bE+0x14>
    d1b4:	e7ff      	b.n	d1b6 <_ZN4core3ptr18real_drop_in_place17hdab79d49bcbb0c7bE+0x10>
    d1b6:	b002      	add	sp, #8
    d1b8:	bd80      	pop	{r7, pc}
    d1ba:	9801      	ldr	r0, [sp, #4]
    d1bc:	3004      	adds	r0, #4
    d1be:	f7ff ffe0 	bl	d182 <_ZN4core3ptr18real_drop_in_place17hb90aa7de9eead791E>
    d1c2:	e7f8      	b.n	d1b6 <_ZN4core3ptr18real_drop_in_place17hdab79d49bcbb0c7bE+0x10>

0000d1c4 <_ZN4core3ptr18real_drop_in_place17he3591a973465b7a1E>:
    d1c4:	b580      	push	{r7, lr}
    d1c6:	b082      	sub	sp, #8
    d1c8:	9001      	str	r0, [sp, #4]
    d1ca:	9801      	ldr	r0, [sp, #4]
    d1cc:	f004 fd29 	bl	11c22 <_ZN73_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hadf269ac769c1fe1E>
    d1d0:	e7ff      	b.n	d1d2 <_ZN4core3ptr18real_drop_in_place17he3591a973465b7a1E+0xe>
    d1d2:	b002      	add	sp, #8
    d1d4:	bd80      	pop	{r7, pc}

0000d1d6 <_ZN84_$LT$embedded_graphics..pixelcolor..rgb565..Rgb565$u20$as$u20$core..clone..Clone$GT$5clone17h562ec60a06e1c4f1E>:
#[derive(Debug, Clone, Copy, PartialEq)]
    d1d6:	b081      	sub	sp, #4
    d1d8:	9000      	str	r0, [sp, #0]
    d1da:	9800      	ldr	r0, [sp, #0]
    d1dc:	8800      	ldrh	r0, [r0, #0]
    d1de:	b001      	add	sp, #4
    d1e0:	4770      	bx	lr

0000d1e2 <_ZN106_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hcd27c9e9de4383fcE>:
    _conf: PhantomData<Conf>,
}

impl<'a, C: PixelColor + Copy, Conf> Copy for FontBuilder<'a, C, Conf> {}
impl<'a, C: PixelColor + Clone, Conf> Clone for FontBuilder<'a, C, Conf> {
    fn clone(&self) -> Self {
    d1e2:	b510      	push	{r4, lr}
    d1e4:	b08a      	sub	sp, #40	; 0x28
    d1e6:	9106      	str	r1, [sp, #24]
        Self {
            pos: self.pos,
    d1e8:	9906      	ldr	r1, [sp, #24]
    d1ea:	680a      	ldr	r2, [r1, #0]
    d1ec:	684b      	ldr	r3, [r1, #4]
            text: self.text,
    d1ee:	f8d1 c008 	ldr.w	ip, [r1, #8]
    d1f2:	f8d1 e00c 	ldr.w	lr, [r1, #12]
            style: self.style.clone(),
    d1f6:	3110      	adds	r1, #16
    d1f8:	ac07      	add	r4, sp, #28
    d1fa:	9005      	str	r0, [sp, #20]
    d1fc:	4620      	mov	r0, r4
    d1fe:	9204      	str	r2, [sp, #16]
    d200:	9303      	str	r3, [sp, #12]
    d202:	f8cd c008 	str.w	ip, [sp, #8]
    d206:	f8cd e004 	str.w	lr, [sp, #4]
    d20a:	f7fe fe7b 	bl	bf04 <_ZN79_$LT$embedded_graphics..style..Style$LT$P$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hfe89297384080780E>
    d20e:	e7ff      	b.n	d210 <_ZN106_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hcd27c9e9de4383fcE+0x2e>
            _conf: Default::default(),
    d210:	f004 fe33 	bl	11e7a <_ZN77_$LT$core..marker..PhantomData$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17h4cc5371e08991940E>
    d214:	e7ff      	b.n	d216 <_ZN106_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hcd27c9e9de4383fcE+0x34>
        Self {
    d216:	9804      	ldr	r0, [sp, #16]
    d218:	9905      	ldr	r1, [sp, #20]
    d21a:	6008      	str	r0, [r1, #0]
    d21c:	9a03      	ldr	r2, [sp, #12]
    d21e:	604a      	str	r2, [r1, #4]
    d220:	9b02      	ldr	r3, [sp, #8]
    d222:	608b      	str	r3, [r1, #8]
    d224:	f8dd c004 	ldr.w	ip, [sp, #4]
    d228:	f8c1 c00c 	str.w	ip, [r1, #12]
    d22c:	f8bd e024 	ldrh.w	lr, [sp, #36]	; 0x24
    d230:	f8a1 e018 	strh.w	lr, [r1, #24]
    d234:	f8dd e01c 	ldr.w	lr, [sp, #28]
    d238:	9c08      	ldr	r4, [sp, #32]
    d23a:	614c      	str	r4, [r1, #20]
    d23c:	f8c1 e010 	str.w	lr, [r1, #16]
        }
    }
    d240:	b00a      	add	sp, #40	; 0x28
    d242:	bd10      	pop	{r4, pc}

0000d244 <_ZN127_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$embedded_graphics..fonts..Font$LT$C$GT$$GT$10render_str17hf94c94d2e27ab58cE>:
impl<'a, C, Conf> Font<'a, C> for FontBuilder<'a, C, Conf>
where
    C: PixelColor,
    Conf: FontBuilderConf,
{
    fn render_str(text: &'a str) -> Self {
    d244:	b510      	push	{r4, lr}
    d246:	b08a      	sub	sp, #40	; 0x28
    d248:	9105      	str	r1, [sp, #20]
    d24a:	9206      	str	r2, [sp, #24]
    d24c:	2100      	movs	r1, #0
        Self {
            pos: Coord::new(0, 0),
    d24e:	9004      	str	r0, [sp, #16]
    d250:	4608      	mov	r0, r1
    d252:	f7fd fbaa 	bl	a9aa <_ZN17embedded_graphics5coord14internal_coord5Coord3new17h9ba2f193635b6338E>
    d256:	9003      	str	r0, [sp, #12]
    d258:	9102      	str	r1, [sp, #8]
    d25a:	e7ff      	b.n	d25c <_ZN127_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$embedded_graphics..fonts..Font$LT$C$GT$$GT$10render_str17hf94c94d2e27ab58cE+0x18>
            text,
    d25c:	9805      	ldr	r0, [sp, #20]
    d25e:	9906      	ldr	r1, [sp, #24]
    d260:	aa07      	add	r2, sp, #28
            style: Style::default(),
    d262:	9001      	str	r0, [sp, #4]
    d264:	4610      	mov	r0, r2
    d266:	9100      	str	r1, [sp, #0]
    d268:	f7fe fe7b 	bl	bf62 <_ZN83_$LT$embedded_graphics..style..Style$LT$P$GT$$u20$as$u20$core..default..Default$GT$7default17ha6c30ca12b466235E>
    d26c:	e7ff      	b.n	d26e <_ZN127_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$embedded_graphics..fonts..Font$LT$C$GT$$GT$10render_str17hf94c94d2e27ab58cE+0x2a>
            _conf: Default::default(),
    d26e:	f004 fe04 	bl	11e7a <_ZN77_$LT$core..marker..PhantomData$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17h4cc5371e08991940E>
    d272:	e7ff      	b.n	d274 <_ZN127_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$embedded_graphics..fonts..Font$LT$C$GT$$GT$10render_str17hf94c94d2e27ab58cE+0x30>
        Self {
    d274:	9803      	ldr	r0, [sp, #12]
    d276:	9904      	ldr	r1, [sp, #16]
    d278:	6008      	str	r0, [r1, #0]
    d27a:	9a02      	ldr	r2, [sp, #8]
    d27c:	604a      	str	r2, [r1, #4]
    d27e:	9b01      	ldr	r3, [sp, #4]
    d280:	608b      	str	r3, [r1, #8]
    d282:	f8dd c000 	ldr.w	ip, [sp]
    d286:	f8c1 c00c 	str.w	ip, [r1, #12]
    d28a:	f8bd e024 	ldrh.w	lr, [sp, #36]	; 0x24
    d28e:	f8a1 e018 	strh.w	lr, [r1, #24]
    d292:	f8dd e01c 	ldr.w	lr, [sp, #28]
    d296:	9c08      	ldr	r4, [sp, #32]
    d298:	614c      	str	r4, [r1, #20]
    d29a:	f8c1 e010 	str.w	lr, [r1, #16]
        }
    }
    d29e:	b00a      	add	sp, #40	; 0x28
    d2a0:	bd10      	pop	{r4, pc}

0000d2a2 <_ZN127_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$embedded_graphics..transform..Transform$GT$9translate17h1443ba0fd8ad8bf5E>:
    /// let moved = text.translate(Coord::new(25, 30));
    ///
    /// assert_eq!(text.pos, Coord::new(0, 0));
    /// assert_eq!(moved.pos, Coord::new(25, 30));
    /// ```
    fn translate(&self, by: Coord) -> Self {
    d2a2:	b580      	push	{r7, lr}
    d2a4:	b08e      	sub	sp, #56	; 0x38
    d2a6:	9104      	str	r1, [sp, #16]
    d2a8:	9205      	str	r2, [sp, #20]
    d2aa:	9306      	str	r3, [sp, #24]
        Self {
            pos: self.pos + by,
    d2ac:	9904      	ldr	r1, [sp, #16]
    d2ae:	680a      	ldr	r2, [r1, #0]
    d2b0:	6849      	ldr	r1, [r1, #4]
    d2b2:	9b05      	ldr	r3, [sp, #20]
    d2b4:	f8dd c018 	ldr.w	ip, [sp, #24]
    d2b8:	9003      	str	r0, [sp, #12]
    d2ba:	4610      	mov	r0, r2
    d2bc:	461a      	mov	r2, r3
    d2be:	4663      	mov	r3, ip
    d2c0:	f7fd fb7e 	bl	a9c0 <_ZN89_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..arith..Add$GT$3add17he82618689c46e7bdE>
    d2c4:	9002      	str	r0, [sp, #8]
    d2c6:	9101      	str	r1, [sp, #4]
    d2c8:	e7ff      	b.n	d2ca <_ZN127_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$embedded_graphics..transform..Transform$GT$9translate17h1443ba0fd8ad8bf5E+0x28>
            ..self.clone()
    d2ca:	9904      	ldr	r1, [sp, #16]
    d2cc:	a807      	add	r0, sp, #28
    d2ce:	f7ff ff88 	bl	d1e2 <_ZN106_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hcd27c9e9de4383fcE>
    d2d2:	e7ff      	b.n	d2d4 <_ZN127_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$embedded_graphics..transform..Transform$GT$9translate17h1443ba0fd8ad8bf5E+0x32>
        Self {
    d2d4:	9802      	ldr	r0, [sp, #8]
    d2d6:	9903      	ldr	r1, [sp, #12]
    d2d8:	6008      	str	r0, [r1, #0]
    d2da:	9a01      	ldr	r2, [sp, #4]
    d2dc:	604a      	str	r2, [r1, #4]
    d2de:	9b09      	ldr	r3, [sp, #36]	; 0x24
    d2e0:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
    d2e4:	608b      	str	r3, [r1, #8]
    d2e6:	f8c1 c00c 	str.w	ip, [r1, #12]
    d2ea:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
    d2ee:	830b      	strh	r3, [r1, #24]
    d2f0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    d2f2:	f8dd c030 	ldr.w	ip, [sp, #48]	; 0x30
    d2f6:	f8c1 c014 	str.w	ip, [r1, #20]
    d2fa:	610b      	str	r3, [r1, #16]
        }
    }
    d2fc:	b00e      	add	sp, #56	; 0x38
    d2fe:	bd80      	pop	{r7, pc}

0000d300 <_ZN129_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h6740ba0ca5fad9f2E>:
    fn into_iter(self) -> Self::IntoIter {
    d300:	b5b0      	push	{r4, r5, r7, lr}
    d302:	b08c      	sub	sp, #48	; 0x30
            current_char: self.text.chars().next(),
    d304:	688a      	ldr	r2, [r1, #8]
    d306:	68cb      	ldr	r3, [r1, #12]
    d308:	9006      	str	r0, [sp, #24]
    d30a:	4610      	mov	r0, r2
    d30c:	9105      	str	r1, [sp, #20]
    d30e:	4619      	mov	r1, r3
    d310:	f004 fdce 	bl	11eb0 <_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h742b67cfa2d04962E>
    d314:	9108      	str	r1, [sp, #32]
    d316:	9007      	str	r0, [sp, #28]
    d318:	e7ff      	b.n	d31a <_ZN129_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h6740ba0ca5fad9f2E+0x1a>
    d31a:	a807      	add	r0, sp, #28
    d31c:	f004 fde8 	bl	11ef0 <_ZN75_$LT$core..str..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h352f4b6bf2822697E>
    d320:	9004      	str	r0, [sp, #16]
    d322:	e7ff      	b.n	d324 <_ZN129_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h6740ba0ca5fad9f2E+0x24>
            pos: self.pos,
    d324:	9805      	ldr	r0, [sp, #20]
    d326:	6801      	ldr	r1, [r0, #0]
    d328:	6842      	ldr	r2, [r0, #4]
            text: self.text,
    d32a:	6883      	ldr	r3, [r0, #8]
    d32c:	f8d0 c00c 	ldr.w	ip, [r0, #12]
            style: self.style,
    d330:	f8b0 e018 	ldrh.w	lr, [r0, #24]
    d334:	f8ad e02c 	strh.w	lr, [sp, #44]	; 0x2c
    d338:	f8d0 e010 	ldr.w	lr, [r0, #16]
    d33c:	6944      	ldr	r4, [r0, #20]
    d33e:	940a      	str	r4, [sp, #40]	; 0x28
    d340:	f8cd e024 	str.w	lr, [sp, #36]	; 0x24
            _conf: Default::default(),
    d344:	9103      	str	r1, [sp, #12]
    d346:	9202      	str	r2, [sp, #8]
    d348:	9301      	str	r3, [sp, #4]
    d34a:	f8cd c000 	str.w	ip, [sp]
    d34e:	f004 fd94 	bl	11e7a <_ZN77_$LT$core..marker..PhantomData$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17h4cc5371e08991940E>
    d352:	e7ff      	b.n	d354 <_ZN129_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h6740ba0ca5fad9f2E+0x54>
    d354:	2000      	movs	r0, #0
        Self::IntoIter {
    d356:	9906      	ldr	r1, [sp, #24]
    d358:	6008      	str	r0, [r1, #0]
    d35a:	6048      	str	r0, [r1, #4]
    d35c:	9a04      	ldr	r2, [sp, #16]
    d35e:	608a      	str	r2, [r1, #8]
    d360:	60c8      	str	r0, [r1, #12]
    d362:	9803      	ldr	r0, [sp, #12]
    d364:	6108      	str	r0, [r1, #16]
    d366:	9b02      	ldr	r3, [sp, #8]
    d368:	614b      	str	r3, [r1, #20]
    d36a:	f8dd c004 	ldr.w	ip, [sp, #4]
    d36e:	f8c1 c018 	str.w	ip, [r1, #24]
    d372:	f8dd e000 	ldr.w	lr, [sp]
    d376:	f8c1 e01c 	str.w	lr, [r1, #28]
    d37a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
    d37e:	850c      	strh	r4, [r1, #40]	; 0x28
    d380:	9c09      	ldr	r4, [sp, #36]	; 0x24
    d382:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    d384:	624d      	str	r5, [r1, #36]	; 0x24
    d386:	620c      	str	r4, [r1, #32]
    }
    d388:	b00c      	add	sp, #48	; 0x30
    d38a:	bdb0      	pop	{r4, r5, r7, pc}

0000d38c <_ZN132_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$embedded_graphics..style..WithStyle$LT$C$GT$$GT$4fill17hf6b439f588e2dd0eE>:
    fn fill(mut self, color: Option<C>) -> Self {
    d38c:	b5b0      	push	{r4, r5, r7, lr}
    d38e:	b081      	sub	sp, #4
    d390:	469c      	mov	ip, r3
    d392:	4696      	mov	lr, r2
    d394:	f8ad 2000 	strh.w	r2, [sp]
    d398:	f8ad 3002 	strh.w	r3, [sp, #2]
        self.style.fill_color = color;
    d39c:	f8bd 2000 	ldrh.w	r2, [sp]
    d3a0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
    d3a4:	820a      	strh	r2, [r1, #16]
    d3a6:	824b      	strh	r3, [r1, #18]
        self
    d3a8:	c91c      	ldmia	r1!, {r2, r3, r4}
    d3aa:	c01c      	stmia	r0!, {r2, r3, r4}
    d3ac:	e891 003c 	ldmia.w	r1, {r2, r3, r4, r5}
    d3b0:	e880 003c 	stmia.w	r0, {r2, r3, r4, r5}
    }
    d3b4:	b001      	add	sp, #4
    d3b6:	bdb0      	pop	{r4, r5, r7, pc}

0000d3b8 <_ZN132_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$embedded_graphics..style..WithStyle$LT$C$GT$$GT$6stroke17h71ea3868a8d4ad98E>:
    fn stroke(mut self, color: Option<C>) -> Self {
    d3b8:	b5b0      	push	{r4, r5, r7, lr}
    d3ba:	b081      	sub	sp, #4
    d3bc:	469c      	mov	ip, r3
    d3be:	4696      	mov	lr, r2
    d3c0:	f8ad 2000 	strh.w	r2, [sp]
    d3c4:	f8ad 3002 	strh.w	r3, [sp, #2]
        self.style.stroke_color = color;
    d3c8:	f8bd 2000 	ldrh.w	r2, [sp]
    d3cc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
    d3d0:	828a      	strh	r2, [r1, #20]
    d3d2:	82cb      	strh	r3, [r1, #22]
        self
    d3d4:	c91c      	ldmia	r1!, {r2, r3, r4}
    d3d6:	c01c      	stmia	r0!, {r2, r3, r4}
    d3d8:	e891 003c 	ldmia.w	r1, {r2, r3, r4, r5}
    d3dc:	e880 003c 	stmia.w	r0, {r2, r3, r4, r5}
    }
    d3e0:	b001      	add	sp, #4
    d3e2:	bdb0      	pop	{r4, r5, r7, pc}

0000d3e4 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E>:
    fn next(&mut self) -> Option<Self::Item> {
    d3e4:	b580      	push	{r7, lr}
    d3e6:	b0ca      	sub	sp, #296	; 0x128
    d3e8:	9131      	str	r1, [sp, #196]	; 0xc4
        if self.pos[0] + (self.text.len() as i32 * Conf::CHAR_WIDTH as i32) <= 0
    d3ea:	9931      	ldr	r1, [sp, #196]	; 0xc4
    d3ec:	3110      	adds	r1, #16
    d3ee:	2200      	movs	r2, #0
    d3f0:	9030      	str	r0, [sp, #192]	; 0xc0
    d3f2:	4608      	mov	r0, r1
    d3f4:	4611      	mov	r1, r2
    d3f6:	f7fd fb1c 	bl	aa32 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E>
    d3fa:	902f      	str	r0, [sp, #188]	; 0xbc
    d3fc:	e014      	b.n	d428 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x44>
    d3fe:	2001      	movs	r0, #1
    d400:	f88d 00cb 	strb.w	r0, [sp, #203]	; 0xcb
    d404:	e00a      	b.n	d41c <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x38>
    d406:	2000      	movs	r0, #0
    d408:	f88d 00cb 	strb.w	r0, [sp, #203]	; 0xcb
    d40c:	e006      	b.n	d41c <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x38>
            || self.pos[1] + (Conf::CHAR_HEIGHT as i32) <= 0
    d40e:	9831      	ldr	r0, [sp, #196]	; 0xc4
    d410:	3010      	adds	r0, #16
    d412:	2101      	movs	r1, #1
    d414:	f7fd fb0d 	bl	aa32 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E>
    d418:	902e      	str	r0, [sp, #184]	; 0xb8
    d41a:	e02a      	b.n	d472 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x8e>
        if self.pos[0] + (self.text.len() as i32 * Conf::CHAR_WIDTH as i32) <= 0
    d41c:	f89d 00cb 	ldrb.w	r0, [sp, #203]	; 0xcb
    d420:	07c0      	lsls	r0, r0, #31
    d422:	2800      	cmp	r0, #0
    d424:	d134      	bne.n	d490 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0xac>
    d426:	e032      	b.n	d48e <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0xaa>
    d428:	982f      	ldr	r0, [sp, #188]	; 0xbc
    d42a:	6801      	ldr	r1, [r0, #0]
    d42c:	9a31      	ldr	r2, [sp, #196]	; 0xc4
    d42e:	6990      	ldr	r0, [r2, #24]
    d430:	69d2      	ldr	r2, [r2, #28]
    d432:	912d      	str	r1, [sp, #180]	; 0xb4
    d434:	4611      	mov	r1, r2
    d436:	f004 fd21 	bl	11e7c <_ZN4core3str21_$LT$impl$u20$str$GT$3len17h967c81645c2e5378E>
    d43a:	902c      	str	r0, [sp, #176]	; 0xb0
    d43c:	e7ff      	b.n	d43e <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x5a>
    d43e:	200c      	movs	r0, #12
    d440:	992c      	ldr	r1, [sp, #176]	; 0xb0
    d442:	fb81 0200 	smull	r0, r2, r1, r0
    d446:	eb01 0341 	add.w	r3, r1, r1, lsl #1
    d44a:	009b      	lsls	r3, r3, #2
    d44c:	ebb2 7fe0 	cmp.w	r2, r0, asr #31
    d450:	932b      	str	r3, [sp, #172]	; 0xac
    d452:	f040 81dd 	bne.w	d810 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x42c>
    d456:	e7ff      	b.n	d458 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x74>
    d458:	982d      	ldr	r0, [sp, #180]	; 0xb4
    d45a:	992b      	ldr	r1, [sp, #172]	; 0xac
    d45c:	1842      	adds	r2, r0, r1
    d45e:	4613      	mov	r3, r2
    d460:	4282      	cmp	r2, r0
    d462:	932a      	str	r3, [sp, #168]	; 0xa8
    d464:	f180 81e0 	bvs.w	d828 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x444>
    d468:	e7ff      	b.n	d46a <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x86>
    d46a:	982a      	ldr	r0, [sp, #168]	; 0xa8
    d46c:	2801      	cmp	r0, #1
    d46e:	dbc6      	blt.n	d3fe <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x1a>
    d470:	e7cd      	b.n	d40e <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x2a>
            || self.pos[1] + (Conf::CHAR_HEIGHT as i32) <= 0
    d472:	982e      	ldr	r0, [sp, #184]	; 0xb8
    d474:	6801      	ldr	r1, [r0, #0]
    d476:	f101 0210 	add.w	r2, r1, #16
    d47a:	4613      	mov	r3, r2
    d47c:	428a      	cmp	r2, r1
    d47e:	9329      	str	r3, [sp, #164]	; 0xa4
    d480:	f180 81de 	bvs.w	d840 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x45c>
    d484:	e7ff      	b.n	d486 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0xa2>
        if self.pos[0] + (self.text.len() as i32 * Conf::CHAR_WIDTH as i32) <= 0
    d486:	9829      	ldr	r0, [sp, #164]	; 0xa4
    d488:	2801      	cmp	r0, #1
    d48a:	dbb8      	blt.n	d3fe <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x1a>
    d48c:	e7bb      	b.n	d406 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x22>
        let char_per_row = Conf::FONT_IMAGE_WIDTH / Conf::CHAR_WIDTH;
    d48e:	e005      	b.n	d49c <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0xb8>
    d490:	2000      	movs	r0, #0
            return None;
    d492:	9930      	ldr	r1, [sp, #192]	; 0xc0
    d494:	6008      	str	r0, [r1, #0]
    d496:	e7ff      	b.n	d498 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0xb4>
    }
    d498:	b04a      	add	sp, #296	; 0x128
    d49a:	bd80      	pop	{r7, pc}
    d49c:	2028      	movs	r0, #40	; 0x28
        let char_per_row = Conf::FONT_IMAGE_WIDTH / Conf::CHAR_WIDTH;
    d49e:	9033      	str	r0, [sp, #204]	; 0xcc
        let pixel = loop {
    d4a0:	e00e      	b.n	d4c0 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0xdc>
        pixel
    d4a2:	9834      	ldr	r0, [sp, #208]	; 0xd0
    d4a4:	9935      	ldr	r1, [sp, #212]	; 0xd4
    d4a6:	9a36      	ldr	r2, [sp, #216]	; 0xd8
    d4a8:	9b37      	ldr	r3, [sp, #220]	; 0xdc
    d4aa:	f8dd c0c0 	ldr.w	ip, [sp, #192]	; 0xc0
    d4ae:	f8cc 300c 	str.w	r3, [ip, #12]
    d4b2:	f8cc 2008 	str.w	r2, [ip, #8]
    d4b6:	f8cc 1004 	str.w	r1, [ip, #4]
    d4ba:	f8cc 0000 	str.w	r0, [ip]
    }
    d4be:	e7eb      	b.n	d498 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0xb4>
            if let Some(current_char) = self.current_char {
    d4c0:	9831      	ldr	r0, [sp, #196]	; 0xc4
    d4c2:	6880      	ldr	r0, [r0, #8]
    d4c4:	f5b0 1f88 	cmp.w	r0, #1114112	; 0x110000
    d4c8:	d103      	bne.n	d4d2 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0xee>
    d4ca:	e7ff      	b.n	d4cc <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0xe8>
    d4cc:	2000      	movs	r0, #0
                break None;
    d4ce:	9034      	str	r0, [sp, #208]	; 0xd0
    d4d0:	e7e7      	b.n	d4a2 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0xbe>
            if let Some(current_char) = self.current_char {
    d4d2:	9831      	ldr	r0, [sp, #196]	; 0xc4
    d4d4:	6880      	ldr	r0, [r0, #8]
    d4d6:	9038      	str	r0, [sp, #224]	; 0xe0
                let char_offset = Conf::char_offset(current_char);
    d4d8:	9838      	ldr	r0, [sp, #224]	; 0xe0
    d4da:	f7fd fb1c 	bl	ab16 <_ZN126_$LT$embedded_graphics..fonts..font12x16..Font12x16Conf$u20$as$u20$embedded_graphics..fonts..font_builder..FontBuilderConf$GT$11char_offset17h331db1cf3b02e2f7E>
    d4de:	9039      	str	r0, [sp, #228]	; 0xe4
    d4e0:	e7ff      	b.n	d4e2 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0xfe>
                let row = char_offset / char_per_row;
    d4e2:	9839      	ldr	r0, [sp, #228]	; 0xe4
    d4e4:	9933      	ldr	r1, [sp, #204]	; 0xcc
    d4e6:	2900      	cmp	r1, #0
    d4e8:	9028      	str	r0, [sp, #160]	; 0xa0
    d4ea:	9127      	str	r1, [sp, #156]	; 0x9c
    d4ec:	f000 81b4 	beq.w	d858 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x474>
    d4f0:	e7ff      	b.n	d4f2 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x10e>
    d4f2:	9828      	ldr	r0, [sp, #160]	; 0xa0
    d4f4:	9927      	ldr	r1, [sp, #156]	; 0x9c
    d4f6:	fbb0 f2f1 	udiv	r2, r0, r1
    d4fa:	923a      	str	r2, [sp, #232]	; 0xe8
                let char_x = (char_offset - (row * char_per_row)) * Conf::CHAR_WIDTH;
    d4fc:	9a39      	ldr	r2, [sp, #228]	; 0xe4
    d4fe:	9b3a      	ldr	r3, [sp, #232]	; 0xe8
    d500:	f8dd c0cc 	ldr.w	ip, [sp, #204]	; 0xcc
    d504:	fba3 3c0c 	umull	r3, ip, r3, ip
    d508:	f1bc 0f00 	cmp.w	ip, #0
    d50c:	9226      	str	r2, [sp, #152]	; 0x98
    d50e:	9325      	str	r3, [sp, #148]	; 0x94
    d510:	f040 81ae 	bne.w	d870 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x48c>
    d514:	e7ff      	b.n	d516 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x132>
    d516:	9826      	ldr	r0, [sp, #152]	; 0x98
    d518:	9925      	ldr	r1, [sp, #148]	; 0x94
    d51a:	1a42      	subs	r2, r0, r1
    d51c:	4288      	cmp	r0, r1
    d51e:	9224      	str	r2, [sp, #144]	; 0x90
    d520:	f0c0 81b2 	bcc.w	d888 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x4a4>
    d524:	e7ff      	b.n	d526 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x142>
    d526:	200c      	movs	r0, #12
    d528:	9924      	ldr	r1, [sp, #144]	; 0x90
    d52a:	fba1 0200 	umull	r0, r2, r1, r0
    d52e:	2a00      	cmp	r2, #0
    d530:	9023      	str	r0, [sp, #140]	; 0x8c
    d532:	f040 81b5 	bne.w	d8a0 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x4bc>
    d536:	e7ff      	b.n	d538 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x154>
    d538:	9823      	ldr	r0, [sp, #140]	; 0x8c
    d53a:	903b      	str	r0, [sp, #236]	; 0xec
                let char_y = row * Conf::CHAR_HEIGHT;
    d53c:	993a      	ldr	r1, [sp, #232]	; 0xe8
    d53e:	010a      	lsls	r2, r1, #4
    d540:	0f09      	lsrs	r1, r1, #28
    d542:	2900      	cmp	r1, #0
    d544:	9222      	str	r2, [sp, #136]	; 0x88
    d546:	f040 81b7 	bne.w	d8b8 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x4d4>
    d54a:	e7ff      	b.n	d54c <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x168>
    d54c:	9822      	ldr	r0, [sp, #136]	; 0x88
    d54e:	903c      	str	r0, [sp, #240]	; 0xf0
                let bitmap_bit_index = char_x
    d550:	993b      	ldr	r1, [sp, #236]	; 0xec
                    + (Conf::FONT_IMAGE_WIDTH * char_y)
    d552:	9a3c      	ldr	r2, [sp, #240]	; 0xf0
    d554:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
    d558:	fba3 2302 	umull	r2, r3, r3, r2
    d55c:	2b00      	cmp	r3, #0
    d55e:	9121      	str	r1, [sp, #132]	; 0x84
    d560:	9220      	str	r2, [sp, #128]	; 0x80
    d562:	f040 81b5 	bne.w	d8d0 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x4ec>
    d566:	e7ff      	b.n	d568 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x184>
                let bitmap_bit_index = char_x
    d568:	9821      	ldr	r0, [sp, #132]	; 0x84
    d56a:	9920      	ldr	r1, [sp, #128]	; 0x80
    d56c:	1842      	adds	r2, r0, r1
    d56e:	4613      	mov	r3, r2
    d570:	4282      	cmp	r2, r0
    d572:	931f      	str	r3, [sp, #124]	; 0x7c
    d574:	f0c0 81b8 	bcc.w	d8e8 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x504>
    d578:	e7ff      	b.n	d57a <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x196>
                    + self.char_walk_x
    d57a:	9831      	ldr	r0, [sp, #196]	; 0xc4
    d57c:	6800      	ldr	r0, [r0, #0]
                let bitmap_bit_index = char_x
    d57e:	991f      	ldr	r1, [sp, #124]	; 0x7c
    d580:	4408      	add	r0, r1
    d582:	4602      	mov	r2, r0
    d584:	4288      	cmp	r0, r1
    d586:	921e      	str	r2, [sp, #120]	; 0x78
    d588:	f0c0 81ba 	bcc.w	d900 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x51c>
    d58c:	e7ff      	b.n	d58e <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x1aa>
                    + (self.char_walk_y * Conf::FONT_IMAGE_WIDTH);
    d58e:	9831      	ldr	r0, [sp, #196]	; 0xc4
    d590:	6840      	ldr	r0, [r0, #4]
    d592:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
    d596:	fba0 0101 	umull	r0, r1, r0, r1
    d59a:	2900      	cmp	r1, #0
    d59c:	901d      	str	r0, [sp, #116]	; 0x74
    d59e:	f040 81bb 	bne.w	d918 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x534>
    d5a2:	e7ff      	b.n	d5a4 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x1c0>
                let bitmap_bit_index = char_x
    d5a4:	981e      	ldr	r0, [sp, #120]	; 0x78
    d5a6:	991d      	ldr	r1, [sp, #116]	; 0x74
    d5a8:	1842      	adds	r2, r0, r1
    d5aa:	4613      	mov	r3, r2
    d5ac:	4282      	cmp	r2, r0
    d5ae:	931c      	str	r3, [sp, #112]	; 0x70
    d5b0:	f0c0 81be 	bcc.w	d930 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x54c>
    d5b4:	e7ff      	b.n	d5b6 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x1d2>
    d5b6:	981c      	ldr	r0, [sp, #112]	; 0x70
    d5b8:	903d      	str	r0, [sp, #244]	; 0xf4
                let bitmap_byte = bitmap_bit_index / 8;
    d5ba:	993d      	ldr	r1, [sp, #244]	; 0xf4
    d5bc:	911b      	str	r1, [sp, #108]	; 0x6c
    d5be:	e7ff      	b.n	d5c0 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x1dc>
    d5c0:	981b      	ldr	r0, [sp, #108]	; 0x6c
    d5c2:	08c1      	lsrs	r1, r0, #3
    d5c4:	913e      	str	r1, [sp, #248]	; 0xf8
                let bitmap_bit = 7 - (bitmap_bit_index % 8);
    d5c6:	993d      	ldr	r1, [sp, #244]	; 0xf4
    d5c8:	911a      	str	r1, [sp, #104]	; 0x68
    d5ca:	e7ff      	b.n	d5cc <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x1e8>
    d5cc:	981a      	ldr	r0, [sp, #104]	; 0x68
    d5ce:	f000 0107 	and.w	r1, r0, #7
    d5d2:	f1c1 0207 	rsb	r2, r1, #7
    d5d6:	2307      	movs	r3, #7
    d5d8:	428b      	cmp	r3, r1
    d5da:	9219      	str	r2, [sp, #100]	; 0x64
    d5dc:	f0c0 81b4 	bcc.w	d948 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x564>
    d5e0:	e7ff      	b.n	d5e2 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x1fe>
    d5e2:	9819      	ldr	r0, [sp, #100]	; 0x64
    d5e4:	903f      	str	r0, [sp, #252]	; 0xfc
                let color = if Conf::FONT_IMAGE[bitmap_byte as usize] & (1 << bitmap_bit) != 0 {
    d5e6:	993e      	ldr	r1, [sp, #248]	; 0xf8
    d5e8:	098a      	lsrs	r2, r1, #6
    d5ea:	2a4a      	cmp	r2, #74	; 0x4a
    d5ec:	9118      	str	r1, [sp, #96]	; 0x60
    d5ee:	f200 81b7 	bhi.w	d960 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x57c>
    d5f2:	e7ff      	b.n	d5f4 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x210>
    d5f4:	f24c 3074 	movw	r0, #50036	; 0xc374
    d5f8:	f2c0 0001 	movt	r0, #1
    d5fc:	9918      	ldr	r1, [sp, #96]	; 0x60
    d5fe:	5c40      	ldrb	r0, [r0, r1]
    d600:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
    d602:	f002 0307 	and.w	r3, r2, #7
    d606:	f04f 0c01 	mov.w	ip, #1
    d60a:	fa0c f303 	lsl.w	r3, ip, r3
    d60e:	08d2      	lsrs	r2, r2, #3
    d610:	2a00      	cmp	r2, #0
    d612:	9017      	str	r0, [sp, #92]	; 0x5c
    d614:	9316      	str	r3, [sp, #88]	; 0x58
    d616:	f040 81ad 	bne.w	d974 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x590>
    d61a:	e7ff      	b.n	d61c <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x238>
    d61c:	9817      	ldr	r0, [sp, #92]	; 0x5c
    d61e:	9916      	ldr	r1, [sp, #88]	; 0x58
    d620:	ea00 0201 	and.w	r2, r0, r1
    d624:	0612      	lsls	r2, r2, #24
    d626:	2a00      	cmp	r2, #0
    d628:	d108      	bne.n	d63c <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x258>
    d62a:	e7ff      	b.n	d62c <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x248>
                    self.style.fill_color
    d62c:	9831      	ldr	r0, [sp, #196]	; 0xc4
    d62e:	8c01      	ldrh	r1, [r0, #32]
    d630:	8c40      	ldrh	r0, [r0, #34]	; 0x22
    d632:	f8ad 1100 	strh.w	r1, [sp, #256]	; 0x100
    d636:	f8ad 0102 	strh.w	r0, [sp, #258]	; 0x102
                let color = if Conf::FONT_IMAGE[bitmap_byte as usize] & (1 << bitmap_bit) != 0 {
    d63a:	e018      	b.n	d66e <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x28a>
                    Some(self.style.stroke_color.unwrap_or(1.into())) // white
    d63c:	9831      	ldr	r0, [sp, #196]	; 0xc4
    d63e:	8c81      	ldrh	r1, [r0, #36]	; 0x24
    d640:	8cc0      	ldrh	r0, [r0, #38]	; 0x26
    d642:	2201      	movs	r2, #1
    d644:	9015      	str	r0, [sp, #84]	; 0x54
    d646:	4610      	mov	r0, r2
    d648:	9114      	str	r1, [sp, #80]	; 0x50
    d64a:	f000 fa67 	bl	db1c <_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbfeb78e9a0dc428cE>
    d64e:	9013      	str	r0, [sp, #76]	; 0x4c
    d650:	e7ff      	b.n	d652 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x26e>
    d652:	9814      	ldr	r0, [sp, #80]	; 0x50
    d654:	9915      	ldr	r1, [sp, #84]	; 0x54
    d656:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    d658:	f7fe ffdd 	bl	c616 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17h14e245f32ab0d6aeE>
    d65c:	9012      	str	r0, [sp, #72]	; 0x48
    d65e:	e7ff      	b.n	d660 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x27c>
    d660:	9812      	ldr	r0, [sp, #72]	; 0x48
    d662:	f8ad 0102 	strh.w	r0, [sp, #258]	; 0x102
    d666:	2101      	movs	r1, #1
    d668:	f8ad 1100 	strh.w	r1, [sp, #256]	; 0x100
                let color = if Conf::FONT_IMAGE[bitmap_byte as usize] & (1 << bitmap_bit) != 0 {
    d66c:	e7ff      	b.n	d66e <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x28a>
                let x = self.pos[0]
    d66e:	9831      	ldr	r0, [sp, #196]	; 0xc4
    d670:	3010      	adds	r0, #16
    d672:	2100      	movs	r1, #0
    d674:	f7fd f9dd 	bl	aa32 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E>
    d678:	9011      	str	r0, [sp, #68]	; 0x44
    d67a:	e7ff      	b.n	d67c <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x298>
    d67c:	9811      	ldr	r0, [sp, #68]	; 0x44
    d67e:	6801      	ldr	r1, [r0, #0]
                    + (Conf::CHAR_WIDTH * self.idx as u32) as i32
    d680:	9a31      	ldr	r2, [sp, #196]	; 0xc4
    d682:	68d2      	ldr	r2, [r2, #12]
    d684:	230c      	movs	r3, #12
    d686:	fba3 2302 	umull	r2, r3, r3, r2
    d68a:	2b00      	cmp	r3, #0
    d68c:	9110      	str	r1, [sp, #64]	; 0x40
    d68e:	920f      	str	r2, [sp, #60]	; 0x3c
    d690:	f040 817c 	bne.w	d98c <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x5a8>
    d694:	e7ff      	b.n	d696 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x2b2>
                let x = self.pos[0]
    d696:	9810      	ldr	r0, [sp, #64]	; 0x40
    d698:	990f      	ldr	r1, [sp, #60]	; 0x3c
    d69a:	1842      	adds	r2, r0, r1
    d69c:	4613      	mov	r3, r2
    d69e:	4282      	cmp	r2, r0
    d6a0:	930e      	str	r3, [sp, #56]	; 0x38
    d6a2:	f180 817f 	bvs.w	d9a4 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x5c0>
    d6a6:	e7ff      	b.n	d6a8 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x2c4>
                    + self.char_walk_x as i32;
    d6a8:	9831      	ldr	r0, [sp, #196]	; 0xc4
    d6aa:	6800      	ldr	r0, [r0, #0]
                let x = self.pos[0]
    d6ac:	990e      	ldr	r1, [sp, #56]	; 0x38
    d6ae:	4408      	add	r0, r1
    d6b0:	4602      	mov	r2, r0
    d6b2:	4288      	cmp	r0, r1
    d6b4:	920d      	str	r2, [sp, #52]	; 0x34
    d6b6:	f180 8181 	bvs.w	d9bc <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x5d8>
    d6ba:	e7ff      	b.n	d6bc <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x2d8>
    d6bc:	980d      	ldr	r0, [sp, #52]	; 0x34
    d6be:	9041      	str	r0, [sp, #260]	; 0x104
                let y = self.pos[1] + self.char_walk_y as i32;
    d6c0:	9931      	ldr	r1, [sp, #196]	; 0xc4
    d6c2:	f101 0010 	add.w	r0, r1, #16
    d6c6:	2101      	movs	r1, #1
    d6c8:	f7fd f9b3 	bl	aa32 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$core..ops..index..Index$LT$usize$GT$$GT$5index17h1ff7b9a55177ff68E>
    d6cc:	900c      	str	r0, [sp, #48]	; 0x30
    d6ce:	e7ff      	b.n	d6d0 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x2ec>
    d6d0:	980c      	ldr	r0, [sp, #48]	; 0x30
    d6d2:	6801      	ldr	r1, [r0, #0]
    d6d4:	9a31      	ldr	r2, [sp, #196]	; 0xc4
    d6d6:	6852      	ldr	r2, [r2, #4]
    d6d8:	440a      	add	r2, r1
    d6da:	4613      	mov	r3, r2
    d6dc:	428a      	cmp	r2, r1
    d6de:	930b      	str	r3, [sp, #44]	; 0x2c
    d6e0:	f180 8178 	bvs.w	d9d4 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x5f0>
    d6e4:	e7ff      	b.n	d6e6 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x302>
    d6e6:	980b      	ldr	r0, [sp, #44]	; 0x2c
    d6e8:	9042      	str	r0, [sp, #264]	; 0x108
                self.char_walk_x += 1;
    d6ea:	9931      	ldr	r1, [sp, #196]	; 0xc4
    d6ec:	6809      	ldr	r1, [r1, #0]
    d6ee:	1c4a      	adds	r2, r1, #1
    d6f0:	4613      	mov	r3, r2
    d6f2:	428a      	cmp	r2, r1
    d6f4:	930a      	str	r3, [sp, #40]	; 0x28
    d6f6:	f0c0 8179 	bcc.w	d9ec <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x608>
    d6fa:	e7ff      	b.n	d6fc <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x318>
    d6fc:	9831      	ldr	r0, [sp, #196]	; 0xc4
    d6fe:	990a      	ldr	r1, [sp, #40]	; 0x28
    d700:	6001      	str	r1, [r0, #0]
                if self.char_walk_x >= Conf::CHAR_WIDTH {
    d702:	9831      	ldr	r0, [sp, #196]	; 0xc4
    d704:	6800      	ldr	r0, [r0, #0]
    d706:	280c      	cmp	r0, #12
    d708:	d33e      	bcc.n	d788 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x3a4>
    d70a:	e7ff      	b.n	d70c <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x328>
                    self.char_walk_x = 0;
    d70c:	9831      	ldr	r0, [sp, #196]	; 0xc4
    d70e:	2100      	movs	r1, #0
    d710:	6001      	str	r1, [r0, #0]
                    self.char_walk_y += 1;
    d712:	9831      	ldr	r0, [sp, #196]	; 0xc4
    d714:	6840      	ldr	r0, [r0, #4]
    d716:	1c41      	adds	r1, r0, #1
    d718:	460a      	mov	r2, r1
    d71a:	4281      	cmp	r1, r0
    d71c:	9209      	str	r2, [sp, #36]	; 0x24
    d71e:	f0c0 8171 	bcc.w	da04 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x620>
    d722:	e7ff      	b.n	d724 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x340>
    d724:	9831      	ldr	r0, [sp, #196]	; 0xc4
    d726:	9909      	ldr	r1, [sp, #36]	; 0x24
    d728:	6041      	str	r1, [r0, #4]
                    if self.char_walk_y >= Conf::CHAR_HEIGHT {
    d72a:	9831      	ldr	r0, [sp, #196]	; 0xc4
    d72c:	6840      	ldr	r0, [r0, #4]
    d72e:	2810      	cmp	r0, #16
    d730:	d329      	bcc.n	d786 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x3a2>
    d732:	e7ff      	b.n	d734 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x350>
                        self.char_walk_y = 0;
    d734:	9831      	ldr	r0, [sp, #196]	; 0xc4
    d736:	2100      	movs	r1, #0
    d738:	6041      	str	r1, [r0, #4]
                        self.idx += 1;
    d73a:	9831      	ldr	r0, [sp, #196]	; 0xc4
    d73c:	68c0      	ldr	r0, [r0, #12]
    d73e:	1c41      	adds	r1, r0, #1
    d740:	460a      	mov	r2, r1
    d742:	4281      	cmp	r1, r0
    d744:	9208      	str	r2, [sp, #32]
    d746:	f0c0 8169 	bcc.w	da1c <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x638>
    d74a:	e7ff      	b.n	d74c <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x368>
    d74c:	9831      	ldr	r0, [sp, #196]	; 0xc4
    d74e:	9908      	ldr	r1, [sp, #32]
    d750:	60c1      	str	r1, [r0, #12]
                        self.current_char = self.text.chars().skip(self.idx).next();
    d752:	9831      	ldr	r0, [sp, #196]	; 0xc4
    d754:	6982      	ldr	r2, [r0, #24]
    d756:	69c1      	ldr	r1, [r0, #28]
    d758:	4610      	mov	r0, r2
    d75a:	f004 fba9 	bl	11eb0 <_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h742b67cfa2d04962E>
    d75e:	9007      	str	r0, [sp, #28]
    d760:	9106      	str	r1, [sp, #24]
    d762:	e7ff      	b.n	d764 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x380>
    d764:	9831      	ldr	r0, [sp, #196]	; 0xc4
    d766:	68c3      	ldr	r3, [r0, #12]
    d768:	a843      	add	r0, sp, #268	; 0x10c
    d76a:	9907      	ldr	r1, [sp, #28]
    d76c:	9a06      	ldr	r2, [sp, #24]
    d76e:	f004 fe6a 	bl	12446 <_ZN4core4iter6traits8iterator8Iterator4skip17he38dcab674d2207aE>
    d772:	e7ff      	b.n	d774 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x390>
    d774:	a843      	add	r0, sp, #268	; 0x10c
    d776:	f005 fbde 	bl	12f36 <_ZN94_$LT$core..iter..adapters..Skip$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5dfb2ac71c34bd52E>
    d77a:	9005      	str	r0, [sp, #20]
    d77c:	e7ff      	b.n	d77e <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x39a>
    d77e:	9831      	ldr	r0, [sp, #196]	; 0xc4
    d780:	9905      	ldr	r1, [sp, #20]
    d782:	6081      	str	r1, [r0, #8]
                    if self.char_walk_y >= Conf::CHAR_HEIGHT {
    d784:	e7ff      	b.n	d786 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x3a2>
                if self.char_walk_x >= Conf::CHAR_WIDTH {
    d786:	e7ff      	b.n	d788 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x3a4>
                if let Some(color) = color {
    d788:	f8bd 0100 	ldrh.w	r0, [sp, #256]	; 0x100
    d78c:	2801      	cmp	r0, #1
    d78e:	d13e      	bne.n	d80e <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x42a>
    d790:	e7ff      	b.n	d792 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x3ae>
    d792:	f8bd 0102 	ldrh.w	r0, [sp, #258]	; 0x102
    d796:	f8ad 0118 	strh.w	r0, [sp, #280]	; 0x118
                    if x >= 0 && y >= 0 {
    d79a:	9841      	ldr	r0, [sp, #260]	; 0x104
    d79c:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
    d7a0:	dc08      	bgt.n	d7b4 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x3d0>
    d7a2:	e003      	b.n	d7ac <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x3c8>
    d7a4:	2001      	movs	r0, #1
    d7a6:	f88d 011b 	strb.w	r0, [sp, #283]	; 0x11b
    d7aa:	e008      	b.n	d7be <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x3da>
    d7ac:	2000      	movs	r0, #0
    d7ae:	f88d 011b 	strb.w	r0, [sp, #283]	; 0x11b
    d7b2:	e004      	b.n	d7be <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x3da>
    d7b4:	9842      	ldr	r0, [sp, #264]	; 0x108
    d7b6:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
    d7ba:	dcf3      	bgt.n	d7a4 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x3c0>
    d7bc:	e7f6      	b.n	d7ac <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x3c8>
    d7be:	f89d 011b 	ldrb.w	r0, [sp, #283]	; 0x11b
    d7c2:	07c0      	lsls	r0, r0, #31
    d7c4:	2800      	cmp	r0, #0
    d7c6:	d101      	bne.n	d7cc <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x3e8>
    d7c8:	e7ff      	b.n	d7ca <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x3e6>
                if let Some(color) = color {
    d7ca:	e020      	b.n	d80e <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x42a>
                        break Some(Pixel(Coord::new(x, y).to_unsigned(), color));
    d7cc:	9841      	ldr	r0, [sp, #260]	; 0x104
    d7ce:	9942      	ldr	r1, [sp, #264]	; 0x108
    d7d0:	f7fd f8eb 	bl	a9aa <_ZN17embedded_graphics5coord14internal_coord5Coord3new17h9ba2f193635b6338E>
    d7d4:	9004      	str	r0, [sp, #16]
    d7d6:	9103      	str	r1, [sp, #12]
    d7d8:	e7ff      	b.n	d7da <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x3f6>
    d7da:	9804      	ldr	r0, [sp, #16]
    d7dc:	9903      	ldr	r1, [sp, #12]
    d7de:	f7fd f971 	bl	aac4 <_ZN104_$LT$embedded_graphics..coord..internal_coord..Coord$u20$as$u20$embedded_graphics..coord..ToUnsigned$GT$11to_unsigned17hf1a2e5ff232b047aE>
    d7e2:	9002      	str	r0, [sp, #8]
    d7e4:	9101      	str	r1, [sp, #4]
    d7e6:	e7ff      	b.n	d7e8 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0x404>
    d7e8:	f8bd 0118 	ldrh.w	r0, [sp, #280]	; 0x118
    d7ec:	9902      	ldr	r1, [sp, #8]
    d7ee:	9147      	str	r1, [sp, #284]	; 0x11c
    d7f0:	9a01      	ldr	r2, [sp, #4]
    d7f2:	9248      	str	r2, [sp, #288]	; 0x120
    d7f4:	f8ad 0124 	strh.w	r0, [sp, #292]	; 0x124
    d7f8:	9847      	ldr	r0, [sp, #284]	; 0x11c
    d7fa:	9b48      	ldr	r3, [sp, #288]	; 0x120
    d7fc:	f8dd c124 	ldr.w	ip, [sp, #292]	; 0x124
    d800:	f8cd c0dc 	str.w	ip, [sp, #220]	; 0xdc
    d804:	9336      	str	r3, [sp, #216]	; 0xd8
    d806:	9035      	str	r0, [sp, #212]	; 0xd4
    d808:	2001      	movs	r0, #1
    d80a:	9034      	str	r0, [sp, #208]	; 0xd0
    d80c:	e649      	b.n	d4a2 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0xbe>
            if let Some(current_char) = self.current_char {
    d80e:	e657      	b.n	d4c0 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E+0xdc>
        if self.pos[0] + (self.text.len() as i32 * Conf::CHAR_WIDTH as i32) <= 0
    d810:	f24c 2040 	movw	r0, #49728	; 0xc240
    d814:	f2c0 0001 	movt	r0, #1
    d818:	f24c 2224 	movw	r2, #49700	; 0xc224
    d81c:	f2c0 0201 	movt	r2, #1
    d820:	2121      	movs	r1, #33	; 0x21
    d822:	f007 f9be 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    d826:	defe      	udf	#254	; 0xfe
    d828:	f24c 2080 	movw	r0, #49792	; 0xc280
    d82c:	f2c0 0001 	movt	r0, #1
    d830:	f24c 2264 	movw	r2, #49764	; 0xc264
    d834:	f2c0 0201 	movt	r2, #1
    d838:	211c      	movs	r1, #28
    d83a:	f007 f9b2 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    d83e:	defe      	udf	#254	; 0xfe
            || self.pos[1] + (Conf::CHAR_HEIGHT as i32) <= 0
    d840:	f24c 2080 	movw	r0, #49792	; 0xc280
    d844:	f2c0 0001 	movt	r0, #1
    d848:	f24c 229c 	movw	r2, #49820	; 0xc29c
    d84c:	f2c0 0201 	movt	r2, #1
    d850:	211c      	movs	r1, #28
    d852:	f007 f9a6 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    d856:	defe      	udf	#254	; 0xfe
                let row = char_offset / char_per_row;
    d858:	f24c 20c0 	movw	r0, #49856	; 0xc2c0
    d85c:	f2c0 0001 	movt	r0, #1
    d860:	f24c 22ac 	movw	r2, #49836	; 0xc2ac
    d864:	f2c0 0201 	movt	r2, #1
    d868:	2119      	movs	r1, #25
    d86a:	f007 f99a 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    d86e:	defe      	udf	#254	; 0xfe
                let char_x = (char_offset - (row * char_per_row)) * Conf::CHAR_WIDTH;
    d870:	f24c 2040 	movw	r0, #49728	; 0xc240
    d874:	f2c0 0001 	movt	r0, #1
    d878:	f24c 22dc 	movw	r2, #49884	; 0xc2dc
    d87c:	f2c0 0201 	movt	r2, #1
    d880:	2121      	movs	r1, #33	; 0x21
    d882:	f007 f98e 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    d886:	defe      	udf	#254	; 0xfe
    d888:	f24c 3000 	movw	r0, #49920	; 0xc300
    d88c:	f2c0 0001 	movt	r0, #1
    d890:	f24c 22ec 	movw	r2, #49900	; 0xc2ec
    d894:	f2c0 0201 	movt	r2, #1
    d898:	2121      	movs	r1, #33	; 0x21
    d89a:	f007 f982 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    d89e:	defe      	udf	#254	; 0xfe
    d8a0:	f24c 2040 	movw	r0, #49728	; 0xc240
    d8a4:	f2c0 0001 	movt	r0, #1
    d8a8:	f24c 22ec 	movw	r2, #49900	; 0xc2ec
    d8ac:	f2c0 0201 	movt	r2, #1
    d8b0:	2121      	movs	r1, #33	; 0x21
    d8b2:	f007 f976 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    d8b6:	defe      	udf	#254	; 0xfe
                let char_y = row * Conf::CHAR_HEIGHT;
    d8b8:	f24c 2040 	movw	r0, #49728	; 0xc240
    d8bc:	f2c0 0001 	movt	r0, #1
    d8c0:	f24c 3224 	movw	r2, #49956	; 0xc324
    d8c4:	f2c0 0201 	movt	r2, #1
    d8c8:	2121      	movs	r1, #33	; 0x21
    d8ca:	f007 f96a 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    d8ce:	defe      	udf	#254	; 0xfe
                    + (Conf::FONT_IMAGE_WIDTH * char_y)
    d8d0:	f24c 2040 	movw	r0, #49728	; 0xc240
    d8d4:	f2c0 0001 	movt	r0, #1
    d8d8:	f24c 3234 	movw	r2, #49972	; 0xc334
    d8dc:	f2c0 0201 	movt	r2, #1
    d8e0:	2121      	movs	r1, #33	; 0x21
    d8e2:	f007 f95e 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    d8e6:	defe      	udf	#254	; 0xfe
                let bitmap_bit_index = char_x
    d8e8:	f24c 2080 	movw	r0, #49792	; 0xc280
    d8ec:	f2c0 0001 	movt	r0, #1
    d8f0:	f24c 3244 	movw	r2, #49988	; 0xc344
    d8f4:	f2c0 0201 	movt	r2, #1
    d8f8:	211c      	movs	r1, #28
    d8fa:	f007 f952 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    d8fe:	defe      	udf	#254	; 0xfe
    d900:	f24c 2080 	movw	r0, #49792	; 0xc280
    d904:	f2c0 0001 	movt	r0, #1
    d908:	f24c 3244 	movw	r2, #49988	; 0xc344
    d90c:	f2c0 0201 	movt	r2, #1
    d910:	211c      	movs	r1, #28
    d912:	f007 f946 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    d916:	defe      	udf	#254	; 0xfe
                    + (self.char_walk_y * Conf::FONT_IMAGE_WIDTH);
    d918:	f24c 2040 	movw	r0, #49728	; 0xc240
    d91c:	f2c0 0001 	movt	r0, #1
    d920:	f24c 3254 	movw	r2, #50004	; 0xc354
    d924:	f2c0 0201 	movt	r2, #1
    d928:	2121      	movs	r1, #33	; 0x21
    d92a:	f007 f93a 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    d92e:	defe      	udf	#254	; 0xfe
                let bitmap_bit_index = char_x
    d930:	f24c 2080 	movw	r0, #49792	; 0xc280
    d934:	f2c0 0001 	movt	r0, #1
    d938:	f24c 3244 	movw	r2, #49988	; 0xc344
    d93c:	f2c0 0201 	movt	r2, #1
    d940:	211c      	movs	r1, #28
    d942:	f007 f92e 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    d946:	defe      	udf	#254	; 0xfe
                let bitmap_bit = 7 - (bitmap_bit_index % 8);
    d948:	f24c 3000 	movw	r0, #49920	; 0xc300
    d94c:	f2c0 0001 	movt	r0, #1
    d950:	f24c 3264 	movw	r2, #50020	; 0xc364
    d954:	f2c0 0201 	movt	r2, #1
    d958:	2121      	movs	r1, #33	; 0x21
    d95a:	f007 f922 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    d95e:	defe      	udf	#254	; 0xfe
                let color = if Conf::FONT_IMAGE[bitmap_byte as usize] & (1 << bitmap_bit) != 0 {
    d960:	f24d 6034 	movw	r0, #54836	; 0xd634
    d964:	f2c0 0001 	movt	r0, #1
    d968:	f44f 5296 	mov.w	r2, #4800	; 0x12c0
    d96c:	9918      	ldr	r1, [sp, #96]	; 0x60
    d96e:	f007 f92e 	bl	14bce <_ZN4core9panicking18panic_bounds_check17h6547e9bb7dcebe69E>
    d972:	defe      	udf	#254	; 0xfe
    d974:	f24d 6060 	movw	r0, #54880	; 0xd660
    d978:	f2c0 0001 	movt	r0, #1
    d97c:	f24d 6244 	movw	r2, #54852	; 0xd644
    d980:	f2c0 0201 	movt	r2, #1
    d984:	2123      	movs	r1, #35	; 0x23
    d986:	f007 f90c 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    d98a:	defe      	udf	#254	; 0xfe
                    + (Conf::CHAR_WIDTH * self.idx as u32) as i32
    d98c:	f24c 2040 	movw	r0, #49728	; 0xc240
    d990:	f2c0 0001 	movt	r0, #1
    d994:	f24d 6284 	movw	r2, #54916	; 0xd684
    d998:	f2c0 0201 	movt	r2, #1
    d99c:	2121      	movs	r1, #33	; 0x21
    d99e:	f007 f900 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    d9a2:	defe      	udf	#254	; 0xfe
                let x = self.pos[0]
    d9a4:	f24c 2080 	movw	r0, #49792	; 0xc280
    d9a8:	f2c0 0001 	movt	r0, #1
    d9ac:	f24d 6294 	movw	r2, #54932	; 0xd694
    d9b0:	f2c0 0201 	movt	r2, #1
    d9b4:	211c      	movs	r1, #28
    d9b6:	f007 f8f4 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    d9ba:	defe      	udf	#254	; 0xfe
    d9bc:	f24c 2080 	movw	r0, #49792	; 0xc280
    d9c0:	f2c0 0001 	movt	r0, #1
    d9c4:	f24d 6294 	movw	r2, #54932	; 0xd694
    d9c8:	f2c0 0201 	movt	r2, #1
    d9cc:	211c      	movs	r1, #28
    d9ce:	f007 f8e8 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    d9d2:	defe      	udf	#254	; 0xfe
                let y = self.pos[1] + self.char_walk_y as i32;
    d9d4:	f24c 2080 	movw	r0, #49792	; 0xc280
    d9d8:	f2c0 0001 	movt	r0, #1
    d9dc:	f24d 62a4 	movw	r2, #54948	; 0xd6a4
    d9e0:	f2c0 0201 	movt	r2, #1
    d9e4:	211c      	movs	r1, #28
    d9e6:	f007 f8dc 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    d9ea:	defe      	udf	#254	; 0xfe
                self.char_walk_x += 1;
    d9ec:	f24c 2080 	movw	r0, #49792	; 0xc280
    d9f0:	f2c0 0001 	movt	r0, #1
    d9f4:	f24d 62b4 	movw	r2, #54964	; 0xd6b4
    d9f8:	f2c0 0201 	movt	r2, #1
    d9fc:	211c      	movs	r1, #28
    d9fe:	f007 f8d0 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    da02:	defe      	udf	#254	; 0xfe
                    self.char_walk_y += 1;
    da04:	f24c 2080 	movw	r0, #49792	; 0xc280
    da08:	f2c0 0001 	movt	r0, #1
    da0c:	f24d 62c4 	movw	r2, #54980	; 0xd6c4
    da10:	f2c0 0201 	movt	r2, #1
    da14:	211c      	movs	r1, #28
    da16:	f007 f8c4 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    da1a:	defe      	udf	#254	; 0xfe
                        self.idx += 1;
    da1c:	f24c 2080 	movw	r0, #49792	; 0xc280
    da20:	f2c0 0001 	movt	r0, #1
    da24:	f24d 62d4 	movw	r2, #54996	; 0xd6d4
    da28:	f2c0 0201 	movt	r2, #1
    da2c:	211c      	movs	r1, #28
    da2e:	f007 f8b8 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    da32:	defe      	udf	#254	; 0xfe

0000da34 <_ZN53_$LT$u64$u20$as$u20$num_traits..cast..ToPrimitive$GT$5to_u817he15679f49f6ad4faE>:

macro_rules! impl_to_primitive_uint_to_uint {
    ($SrcT:ident : $( $(#[$cfg:meta])* fn $method:ident -> $DstT:ident ; )*) => {$(
        #[inline]
        $(#[$cfg])*
        fn $method(&self) -> Option<$DstT> {
    da34:	b08a      	sub	sp, #40	; 0x28
    da36:	9002      	str	r0, [sp, #8]
    da38:	2000      	movs	r0, #0
            let max = $DstT::MAX as $SrcT;
    da3a:	9005      	str	r0, [sp, #20]
    da3c:	20ff      	movs	r0, #255	; 0xff
    da3e:	9004      	str	r0, [sp, #16]
    da40:	2008      	movs	r0, #8
    da42:	9008      	str	r0, [sp, #32]
    da44:	9808      	ldr	r0, [sp, #32]
            if size_of::<$SrcT>() <= size_of::<$DstT>() || *self <= max {
    da46:	9001      	str	r0, [sp, #4]
    da48:	e017      	b.n	da7a <_ZN53_$LT$u64$u20$as$u20$num_traits..cast..ToPrimitive$GT$5to_u817he15679f49f6ad4faE+0x46>
    da4a:	2001      	movs	r0, #1
    da4c:	f88d 001f 	strb.w	r0, [sp, #31]
    da50:	e00d      	b.n	da6e <_ZN53_$LT$u64$u20$as$u20$num_traits..cast..ToPrimitive$GT$5to_u817he15679f49f6ad4faE+0x3a>
    da52:	2000      	movs	r0, #0
    da54:	f88d 001f 	strb.w	r0, [sp, #31]
    da58:	e009      	b.n	da6e <_ZN53_$LT$u64$u20$as$u20$num_traits..cast..ToPrimitive$GT$5to_u817he15679f49f6ad4faE+0x3a>
    da5a:	9802      	ldr	r0, [sp, #8]
    da5c:	6801      	ldr	r1, [r0, #0]
    da5e:	6840      	ldr	r0, [r0, #4]
    da60:	9a04      	ldr	r2, [sp, #16]
    da62:	9b05      	ldr	r3, [sp, #20]
    da64:	1a51      	subs	r1, r2, r1
    da66:	eb73 0000 	sbcs.w	r0, r3, r0
    da6a:	d2ee      	bcs.n	da4a <_ZN53_$LT$u64$u20$as$u20$num_traits..cast..ToPrimitive$GT$5to_u817he15679f49f6ad4faE+0x16>
    da6c:	e7f1      	b.n	da52 <_ZN53_$LT$u64$u20$as$u20$num_traits..cast..ToPrimitive$GT$5to_u817he15679f49f6ad4faE+0x1e>
    da6e:	f89d 001f 	ldrb.w	r0, [sp, #31]
    da72:	07c0      	lsls	r0, r0, #31
    da74:	2800      	cmp	r0, #0
    da76:	d10e      	bne.n	da96 <_ZN53_$LT$u64$u20$as$u20$num_traits..cast..ToPrimitive$GT$5to_u817he15679f49f6ad4faE+0x62>
    da78:	e009      	b.n	da8e <_ZN53_$LT$u64$u20$as$u20$num_traits..cast..ToPrimitive$GT$5to_u817he15679f49f6ad4faE+0x5a>
    da7a:	2001      	movs	r0, #1
    da7c:	9009      	str	r0, [sp, #36]	; 0x24
    da7e:	9809      	ldr	r0, [sp, #36]	; 0x24
    da80:	9000      	str	r0, [sp, #0]
    da82:	e7ff      	b.n	da84 <_ZN53_$LT$u64$u20$as$u20$num_traits..cast..ToPrimitive$GT$5to_u817he15679f49f6ad4faE+0x50>
    da84:	9801      	ldr	r0, [sp, #4]
    da86:	9900      	ldr	r1, [sp, #0]
    da88:	4288      	cmp	r0, r1
    da8a:	d9de      	bls.n	da4a <_ZN53_$LT$u64$u20$as$u20$num_traits..cast..ToPrimitive$GT$5to_u817he15679f49f6ad4faE+0x16>
    da8c:	e7e5      	b.n	da5a <_ZN53_$LT$u64$u20$as$u20$num_traits..cast..ToPrimitive$GT$5to_u817he15679f49f6ad4faE+0x26>
    da8e:	2000      	movs	r0, #0
                Some(*self as $DstT)
            } else {
                None
    da90:	f88d 000c 	strb.w	r0, [sp, #12]
            if size_of::<$SrcT>() <= size_of::<$DstT>() || *self <= max {
    da94:	e007      	b.n	daa6 <_ZN53_$LT$u64$u20$as$u20$num_traits..cast..ToPrimitive$GT$5to_u817he15679f49f6ad4faE+0x72>
                Some(*self as $DstT)
    da96:	9802      	ldr	r0, [sp, #8]
    da98:	7800      	ldrb	r0, [r0, #0]
    da9a:	f88d 000d 	strb.w	r0, [sp, #13]
    da9e:	2001      	movs	r0, #1
    daa0:	f88d 000c 	strb.w	r0, [sp, #12]
            if size_of::<$SrcT>() <= size_of::<$DstT>() || *self <= max {
    daa4:	e7ff      	b.n	daa6 <_ZN53_$LT$u64$u20$as$u20$num_traits..cast..ToPrimitive$GT$5to_u817he15679f49f6ad4faE+0x72>
            }
        }
    daa6:	f89d 000c 	ldrb.w	r0, [sp, #12]
    daaa:	f89d 100d 	ldrb.w	r1, [sp, #13]
    daae:	b00a      	add	sp, #40	; 0x28
    dab0:	4770      	bx	lr

0000dab2 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u16$GT$3fmt17hfe2fc3eeec662464E>:
    dab2:	b580      	push	{r7, lr}
    dab4:	b086      	sub	sp, #24
    dab6:	9003      	str	r0, [sp, #12]
    dab8:	9104      	str	r1, [sp, #16]
    daba:	9804      	ldr	r0, [sp, #16]
    dabc:	f007 fe51 	bl	15762 <_ZN4core3fmt9Formatter15debug_lower_hex17hd5a179b4f32396d1E>
    dac0:	9002      	str	r0, [sp, #8]
    dac2:	e7ff      	b.n	dac4 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u16$GT$3fmt17hfe2fc3eeec662464E+0x12>
    dac4:	9802      	ldr	r0, [sp, #8]
    dac6:	07c1      	lsls	r1, r0, #31
    dac8:	2900      	cmp	r1, #0
    daca:	d105      	bne.n	dad8 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u16$GT$3fmt17hfe2fc3eeec662464E+0x26>
    dacc:	e7ff      	b.n	dace <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u16$GT$3fmt17hfe2fc3eeec662464E+0x1c>
    dace:	9804      	ldr	r0, [sp, #16]
    dad0:	f007 fe4b 	bl	1576a <_ZN4core3fmt9Formatter15debug_upper_hex17h16c8a6c8a304dceeE>
    dad4:	9001      	str	r0, [sp, #4]
    dad6:	e007      	b.n	dae8 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u16$GT$3fmt17hfe2fc3eeec662464E+0x36>
    dad8:	9803      	ldr	r0, [sp, #12]
    dada:	9904      	ldr	r1, [sp, #16]
    dadc:	f008 fb42 	bl	16164 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i16$GT$3fmt17hc369865b6cebf8b5E>
    dae0:	f88d 0017 	strb.w	r0, [sp, #23]
    dae4:	e7ff      	b.n	dae6 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u16$GT$3fmt17hfe2fc3eeec662464E+0x34>
    dae6:	e015      	b.n	db14 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u16$GT$3fmt17hfe2fc3eeec662464E+0x62>
    dae8:	9801      	ldr	r0, [sp, #4]
    daea:	07c1      	lsls	r1, r0, #31
    daec:	2900      	cmp	r1, #0
    daee:	d107      	bne.n	db00 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u16$GT$3fmt17hfe2fc3eeec662464E+0x4e>
    daf0:	e7ff      	b.n	daf2 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u16$GT$3fmt17hfe2fc3eeec662464E+0x40>
    daf2:	9803      	ldr	r0, [sp, #12]
    daf4:	9904      	ldr	r1, [sp, #16]
    daf6:	f008 fd41 	bl	1657c <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u16$GT$3fmt17hc285ae8ae8f8c6d5E>
    dafa:	f88d 0017 	strb.w	r0, [sp, #23]
    dafe:	e007      	b.n	db10 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u16$GT$3fmt17hfe2fc3eeec662464E+0x5e>
    db00:	9803      	ldr	r0, [sp, #12]
    db02:	9904      	ldr	r1, [sp, #16]
    db04:	f008 fb8d 	bl	16222 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i16$GT$3fmt17h41ec04e122043a13E>
    db08:	f88d 0017 	strb.w	r0, [sp, #23]
    db0c:	e7ff      	b.n	db0e <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u16$GT$3fmt17hfe2fc3eeec662464E+0x5c>
    db0e:	e000      	b.n	db12 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u16$GT$3fmt17hfe2fc3eeec662464E+0x60>
    db10:	e7ff      	b.n	db12 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u16$GT$3fmt17hfe2fc3eeec662464E+0x60>
    db12:	e7ff      	b.n	db14 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u16$GT$3fmt17hfe2fc3eeec662464E+0x62>
    db14:	f89d 0017 	ldrb.w	r0, [sp, #23]
    db18:	b006      	add	sp, #24
    db1a:	bd80      	pop	{r7, pc}

0000db1c <_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbfeb78e9a0dc428cE>:
    db1c:	b580      	push	{r7, lr}
    db1e:	b084      	sub	sp, #16
    db20:	4601      	mov	r1, r0
    db22:	f88d 000f 	strb.w	r0, [sp, #15]
    db26:	f89d 000f 	ldrb.w	r0, [sp, #15]
    db2a:	9102      	str	r1, [sp, #8]
    db2c:	f7fd f81f 	bl	ab6e <_ZN95_$LT$embedded_graphics..pixelcolor..rgb565..Rgb565$u20$as$u20$core..convert..From$LT$u8$GT$$GT$4from17h36b3c067f0bfa86dE>
    db30:	9001      	str	r0, [sp, #4]
    db32:	e7ff      	b.n	db34 <_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbfeb78e9a0dc428cE+0x18>
    db34:	9801      	ldr	r0, [sp, #4]
    db36:	b004      	add	sp, #16
    db38:	bd80      	pop	{r7, pc}

0000db3a <_ZN22piet_embedded_graphics7display15draw_to_display17hde7134b7e3c479b2E>:
pub fn draw_to_display<T>(item: T)
    db3a:	b510      	push	{r4, lr}
    db3c:	b088      	sub	sp, #32
    db3e:	a901      	add	r1, sp, #4
        item
    db40:	460a      	mov	r2, r1
    db42:	e8b0 5008 	ldmia.w	r0!, {r3, ip, lr}
    db46:	e8a2 5008 	stmia.w	r2!, {r3, ip, lr}
    db4a:	e890 5018 	ldmia.w	r0, {r3, r4, ip, lr}
    db4e:	e882 5018 	stmia.w	r2, {r3, r4, ip, lr}
    super::batch::draw_blocks(            //  Draw text or graphics the new faster way, as pixel blocks
    db52:	f240 10f4 	movw	r0, #500	; 0x1f4
    db56:	f2c2 0000 	movt	r0, #8192	; 0x2000
    db5a:	f004 fce7 	bl	1252c <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E>
    db5e:	9000      	str	r0, [sp, #0]
    db60:	e7ff      	b.n	db62 <_ZN22piet_embedded_graphics7display15draw_to_display17hde7134b7e3c479b2E+0x28>
    db62:	9800      	ldr	r0, [sp, #0]
    db64:	f000 0001 	and.w	r0, r0, #1
    db68:	f24b 21f4 	movw	r1, #45812	; 0xb2f4
    db6c:	f2c0 0101 	movt	r1, #1
    db70:	f24d 731c 	movw	r3, #55068	; 0xd71c
    db74:	f2c0 0301 	movt	r3, #1
    db78:	2210      	movs	r2, #16
    db7a:	f7fe fa5f 	bl	c03c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h76d1a1cb65ecbf07E>
    db7e:	e7ff      	b.n	db80 <_ZN22piet_embedded_graphics7display15draw_to_display17hde7134b7e3c479b2E+0x46>
}
    db80:	b008      	add	sp, #32
    db82:	bd10      	pop	{r4, pc}

0000db84 <_ZN10num_traits4cast11ToPrimitive5to_u817he21802d3bdadd71bE>:
    fn to_u8(&self) -> Option<u8> {
    db84:	b580      	push	{r7, lr}
    db86:	b088      	sub	sp, #32
    db88:	9003      	str	r0, [sp, #12]
        self.to_u64().as_ref().and_then(ToPrimitive::to_u8)
    db8a:	9803      	ldr	r0, [sp, #12]
    db8c:	f001 f81b 	bl	ebc6 <_ZN10st7735_lcd37_IMPL_NUM_ToPrimitive_FOR_Orientation83_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..Orientation$GT$6to_u6417hf5ae6585366f351aE>
    db90:	9307      	str	r3, [sp, #28]
    db92:	9206      	str	r2, [sp, #24]
    db94:	9105      	str	r1, [sp, #20]
    db96:	9004      	str	r0, [sp, #16]
    db98:	e7ff      	b.n	db9a <_ZN10num_traits4cast11ToPrimitive5to_u817he21802d3bdadd71bE+0x16>
    db9a:	a804      	add	r0, sp, #16
    db9c:	f7fe fc16 	bl	c3cc <_ZN4core6option15Option$LT$T$GT$6as_ref17h79a8461e0a72edefE>
    dba0:	9002      	str	r0, [sp, #8]
    dba2:	e7ff      	b.n	dba4 <_ZN10num_traits4cast11ToPrimitive5to_u817he21802d3bdadd71bE+0x20>
    dba4:	9802      	ldr	r0, [sp, #8]
    dba6:	f7fe fcea 	bl	c57e <_ZN4core6option15Option$LT$T$GT$8and_then17h104a7692ca71586eE>
    dbaa:	9001      	str	r0, [sp, #4]
    dbac:	9100      	str	r1, [sp, #0]
    dbae:	e7ff      	b.n	dbb0 <_ZN10num_traits4cast11ToPrimitive5to_u817he21802d3bdadd71bE+0x2c>
    }
    dbb0:	9801      	ldr	r0, [sp, #4]
    dbb2:	f000 0001 	and.w	r0, r0, #1
    dbb6:	9900      	ldr	r1, [sp, #0]
    dbb8:	b008      	add	sp, #32
    dbba:	bd80      	pop	{r7, pc}

0000dbbc <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset17h417af0e2179c30e3E>:
        mynewt::spi::spi_noblock_write_flush()  //  Enqueue the pending SPI request
            .expect("spi flush fail");
        Ok(())
    }

    pub fn hard_reset(&mut self) -> Result<(), ()>
    dbbc:	b580      	push	{r7, lr}
    dbbe:	b08e      	sub	sp, #56	; 0x38
    dbc0:	9005      	str	r0, [sp, #20]
    {
        self.rst.set_high().map_err(|_| ())?;
    dbc2:	9805      	ldr	r0, [sp, #20]
    dbc4:	300c      	adds	r0, #12
    dbc6:	f7fd fda7 	bl	b718 <_ZN74_$LT$mynewt..hal..GPIO$u20$as$u20$embedded_hal..digital..v2..OutputPin$GT$8set_high17hb29d285365812fbcE>
    dbca:	9004      	str	r0, [sp, #16]
    dbcc:	e7ff      	b.n	dbce <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset17h417af0e2179c30e3E+0x12>
    dbce:	9804      	ldr	r0, [sp, #16]
    dbd0:	f7fe fad6 	bl	c180 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbdcfea35b5eeeb86E>
    dbd4:	9003      	str	r0, [sp, #12]
    dbd6:	e7ff      	b.n	dbd8 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset17h417af0e2179c30e3E+0x1c>
    dbd8:	9803      	ldr	r0, [sp, #12]
    dbda:	f000 0001 	and.w	r0, r0, #1
    dbde:	f7fe f815 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    dbe2:	f88d 001b 	strb.w	r0, [sp, #27]
    dbe6:	e7ff      	b.n	dbe8 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset17h417af0e2179c30e3E+0x2c>
    dbe8:	f89d 001b 	ldrb.w	r0, [sp, #27]
    dbec:	07c1      	lsls	r1, r0, #31
    dbee:	2900      	cmp	r1, #0
    dbf0:	d00f      	beq.n	dc12 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset17h417af0e2179c30e3E+0x56>
    dbf2:	e7ff      	b.n	dbf4 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset17h417af0e2179c30e3E+0x38>
    dbf4:	e000      	b.n	dbf8 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset17h417af0e2179c30e3E+0x3c>
    dbf6:	defe      	udf	#254	; 0xfe
    dbf8:	f002 fac8 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    dbfc:	e003      	b.n	dc06 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset17h417af0e2179c30e3E+0x4a>
        self.rst.set_low().map_err(|_| ())?;
        self.rst.set_high().map_err(|_| ())
    }
    dbfe:	f89d 001a 	ldrb.w	r0, [sp, #26]
    dc02:	b00e      	add	sp, #56	; 0x38
    dc04:	bd80      	pop	{r7, pc}
        self.rst.set_high().map_err(|_| ())?;
    dc06:	f7fe fb69 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    dc0a:	f88d 001a 	strb.w	r0, [sp, #26]
    dc0e:	e7ff      	b.n	dc10 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset17h417af0e2179c30e3E+0x54>
    dc10:	e7f5      	b.n	dbfe <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset17h417af0e2179c30e3E+0x42>
        self.rst.set_low().map_err(|_| ())?;
    dc12:	9805      	ldr	r0, [sp, #20]
    dc14:	300c      	adds	r0, #12
    dc16:	f7fd fd73 	bl	b700 <_ZN74_$LT$mynewt..hal..GPIO$u20$as$u20$embedded_hal..digital..v2..OutputPin$GT$7set_low17h02e71d0e38f23a59E>
    dc1a:	9002      	str	r0, [sp, #8]
    dc1c:	e7ff      	b.n	dc1e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset17h417af0e2179c30e3E+0x62>
    dc1e:	9802      	ldr	r0, [sp, #8]
    dc20:	f7fe fa57 	bl	c0d2 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h1c3ab9f9924f41efE>
    dc24:	9001      	str	r0, [sp, #4]
    dc26:	e7ff      	b.n	dc28 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset17h417af0e2179c30e3E+0x6c>
    dc28:	9801      	ldr	r0, [sp, #4]
    dc2a:	f000 0001 	and.w	r0, r0, #1
    dc2e:	f7fd ffed 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    dc32:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
    dc36:	e7ff      	b.n	dc38 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset17h417af0e2179c30e3E+0x7c>
    dc38:	f89d 0027 	ldrb.w	r0, [sp, #39]	; 0x27
    dc3c:	07c1      	lsls	r1, r0, #31
    dc3e:	2900      	cmp	r1, #0
    dc40:	d00b      	beq.n	dc5a <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset17h417af0e2179c30e3E+0x9e>
    dc42:	e7ff      	b.n	dc44 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset17h417af0e2179c30e3E+0x88>
    dc44:	e000      	b.n	dc48 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset17h417af0e2179c30e3E+0x8c>
    dc46:	defe      	udf	#254	; 0xfe
    dc48:	f002 faa0 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    dc4c:	e7ff      	b.n	dc4e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset17h417af0e2179c30e3E+0x92>
    dc4e:	f7fe fb45 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    dc52:	f88d 001a 	strb.w	r0, [sp, #26]
    dc56:	e7ff      	b.n	dc58 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset17h417af0e2179c30e3E+0x9c>
    dc58:	e7d1      	b.n	dbfe <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset17h417af0e2179c30e3E+0x42>
        self.rst.set_high().map_err(|_| ())
    dc5a:	9805      	ldr	r0, [sp, #20]
    dc5c:	300c      	adds	r0, #12
    dc5e:	f7fd fd5b 	bl	b718 <_ZN74_$LT$mynewt..hal..GPIO$u20$as$u20$embedded_hal..digital..v2..OutputPin$GT$8set_high17hb29d285365812fbcE>
    dc62:	9000      	str	r0, [sp, #0]
    dc64:	e7ff      	b.n	dc66 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset17h417af0e2179c30e3E+0xaa>
    dc66:	9800      	ldr	r0, [sp, #0]
    dc68:	f7fe fae1 	bl	c22e <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hf849df6aea18066fE>
    dc6c:	f88d 001a 	strb.w	r0, [sp, #26]
    dc70:	e7ff      	b.n	dc72 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset17h417af0e2179c30e3E+0xb6>
    }
    dc72:	e7c4      	b.n	dbfe <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset17h417af0e2179c30e3E+0x42>

0000dc74 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset28_$u7b$$u7b$closure$u7d$$u7d$17h748eed6b80083f62E>:
        self.rst.set_low().map_err(|_| ())?;
    dc74:	b082      	sub	sp, #8
    dc76:	9001      	str	r0, [sp, #4]
    dc78:	e7ff      	b.n	dc7a <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset28_$u7b$$u7b$closure$u7d$$u7d$17h748eed6b80083f62E+0x6>
    dc7a:	b002      	add	sp, #8
    dc7c:	4770      	bx	lr

0000dc7e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset28_$u7b$$u7b$closure$u7d$$u7d$17h9747acb7f72f8cf9E>:
        self.rst.set_high().map_err(|_| ())?;
    dc7e:	b082      	sub	sp, #8
    dc80:	9001      	str	r0, [sp, #4]
    dc82:	e7ff      	b.n	dc84 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset28_$u7b$$u7b$closure$u7d$$u7d$17h9747acb7f72f8cf9E+0x6>
    dc84:	b002      	add	sp, #8
    dc86:	4770      	bx	lr

0000dc88 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset28_$u7b$$u7b$closure$u7d$$u7d$17hd3eab0c385045c33E>:
        self.rst.set_high().map_err(|_| ())
    dc88:	b082      	sub	sp, #8
    dc8a:	9001      	str	r0, [sp, #4]
    dc8c:	e7ff      	b.n	dc8e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset28_$u7b$$u7b$closure$u7d$$u7d$17hd3eab0c385045c33E+0x6>
    dc8e:	b002      	add	sp, #8
    dc90:	4770      	bx	lr

0000dc92 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE>:
            .expect("spi flush fail");
        Ok(())
    }

    /// Sets pixel colors at the given drawing window
    pub fn set_pixels<P: IntoIterator<Item = u16>>(&mut self, sx: u16, sy: u16, ex: u16, ey: u16, colors: P) -> Result <(), ()> {
    dc92:	b5f0      	push	{r4, r5, r6, r7, lr}
    dc94:	b0c7      	sub	sp, #284	; 0x11c
    dc96:	f8dd c134 	ldr.w	ip, [sp, #308]	; 0x134
    dc9a:	f8dd e130 	ldr.w	lr, [sp, #304]	; 0x130
    dc9e:	461c      	mov	r4, r3
    dca0:	4615      	mov	r5, r2
    dca2:	460e      	mov	r6, r1
    dca4:	900b      	str	r0, [sp, #44]	; 0x2c
    dca6:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
    dcaa:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
    dcae:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
    dcb2:	f8ad e038 	strh.w	lr, [sp, #56]	; 0x38
    dcb6:	2000      	movs	r0, #0
        self.set_address_window(sx, sy, ex, ey)?;
    dcb8:	f88d 011b 	strb.w	r0, [sp, #283]	; 0x11b
    dcbc:	2001      	movs	r0, #1
    dcbe:	f88d 011b 	strb.w	r0, [sp, #283]	; 0x11b
    dcc2:	980b      	ldr	r0, [sp, #44]	; 0x2c
    dcc4:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
    dcc8:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
    dccc:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
    dcd0:	f8bd e038 	ldrh.w	lr, [sp, #56]	; 0x38
    dcd4:	466f      	mov	r7, sp
    dcd6:	f8c7 e000 	str.w	lr, [r7]
    dcda:	f8cd c028 	str.w	ip, [sp, #40]	; 0x28
    dcde:	9409      	str	r4, [sp, #36]	; 0x24
    dce0:	9508      	str	r5, [sp, #32]
    dce2:	9607      	str	r6, [sp, #28]
    dce4:	f000 fa5b 	bl	e19e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE>
    dce8:	9006      	str	r0, [sp, #24]
    dcea:	e7ff      	b.n	dcec <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE+0x5a>
    dcec:	9806      	ldr	r0, [sp, #24]
    dcee:	f000 0001 	and.w	r0, r0, #1
    dcf2:	f7fd ff8b 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    dcf6:	f88d 003b 	strb.w	r0, [sp, #59]	; 0x3b
    dcfa:	e7ff      	b.n	dcfc <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE+0x6a>
    dcfc:	f89d 003b 	ldrb.w	r0, [sp, #59]	; 0x3b
    dd00:	07c1      	lsls	r1, r0, #31
    dd02:	2900      	cmp	r1, #0
    dd04:	d00f      	beq.n	dd26 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE+0x94>
    dd06:	e7ff      	b.n	dd08 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE+0x76>
    dd08:	e000      	b.n	dd0c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE+0x7a>
    dd0a:	defe      	udf	#254	; 0xfe
    dd0c:	f002 fa3e 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    dd10:	e003      	b.n	dd1a <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE+0x88>

        #[cfg(feature = "noblock_spi")]         //  If non-blocking SPI is enabled...
        mynewt::spi::spi_noblock_write_flush()  //  Enqueue the pending SPI request
            .expect("spi flush fail");
        Ok(())
    }
    dd12:	f89d 003a 	ldrb.w	r0, [sp, #58]	; 0x3a
    dd16:	b047      	add	sp, #284	; 0x11c
    dd18:	bdf0      	pop	{r4, r5, r6, r7, pc}
        self.set_address_window(sx, sy, ex, ey)?;
    dd1a:	f7fe fadf 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    dd1e:	f88d 003a 	strb.w	r0, [sp, #58]	; 0x3a
    dd22:	e7ff      	b.n	dd24 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE+0x92>
    dd24:	e047      	b.n	ddb6 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE+0x124>
        self.write_pixels(colors) ? ;
    dd26:	980b      	ldr	r0, [sp, #44]	; 0x2c
    dd28:	2100      	movs	r1, #0
    dd2a:	f88d 111b 	strb.w	r1, [sp, #283]	; 0x11b
    dd2e:	a911      	add	r1, sp, #68	; 0x44
    dd30:	22cc      	movs	r2, #204	; 0xcc
    dd32:	9005      	str	r0, [sp, #20]
    dd34:	4608      	mov	r0, r1
    dd36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    dd38:	9104      	str	r1, [sp, #16]
    dd3a:	4619      	mov	r1, r3
    dd3c:	f00d f8d4 	bl	1aee8 <__aeabi_memcpy>
    dd40:	9805      	ldr	r0, [sp, #20]
    dd42:	9904      	ldr	r1, [sp, #16]
    dd44:	f000 f87a 	bl	de3c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E>
    dd48:	9003      	str	r0, [sp, #12]
    dd4a:	e7ff      	b.n	dd4c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE+0xba>
    dd4c:	9803      	ldr	r0, [sp, #12]
    dd4e:	f000 0001 	and.w	r0, r0, #1
    dd52:	f7fd ff5b 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    dd56:	f88d 0043 	strb.w	r0, [sp, #67]	; 0x43
    dd5a:	e7ff      	b.n	dd5c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE+0xca>
    dd5c:	f89d 0043 	ldrb.w	r0, [sp, #67]	; 0x43
    dd60:	07c1      	lsls	r1, r0, #31
    dd62:	2900      	cmp	r1, #0
    dd64:	d00b      	beq.n	dd7e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE+0xec>
    dd66:	e7ff      	b.n	dd68 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE+0xd6>
    dd68:	e000      	b.n	dd6c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE+0xda>
    dd6a:	defe      	udf	#254	; 0xfe
    dd6c:	f002 fa0e 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    dd70:	e7ff      	b.n	dd72 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE+0xe0>
    dd72:	f7fe fab3 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    dd76:	f88d 003a 	strb.w	r0, [sp, #58]	; 0x3a
    dd7a:	e7ff      	b.n	dd7c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE+0xea>
    dd7c:	e01b      	b.n	ddb6 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE+0x124>
        mynewt::spi::spi_noblock_write_flush()  //  Enqueue the pending SPI request
    dd7e:	f003 f9c4 	bl	1110a <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E>
    dd82:	9002      	str	r0, [sp, #8]
    dd84:	e7ff      	b.n	dd86 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE+0xf4>
    dd86:	f24d 712c 	movw	r1, #55084	; 0xd72c
    dd8a:	f2c0 0101 	movt	r1, #1
    dd8e:	f24d 7388 	movw	r3, #55176	; 0xd788
    dd92:	f2c0 0301 	movt	r3, #1
    dd96:	220e      	movs	r2, #14
    dd98:	9802      	ldr	r0, [sp, #8]
    dd9a:	f7fd feff 	bl	bb9c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hca4739a9a91ec005E>
    dd9e:	e7ff      	b.n	dda0 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE+0x10e>
    dda0:	2000      	movs	r0, #0
        Ok(())
    dda2:	f88d 003a 	strb.w	r0, [sp, #58]	; 0x3a
    }
    dda6:	e7b4      	b.n	dd12 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE+0x80>
    dda8:	2000      	movs	r0, #0
    ddaa:	f88d 011b 	strb.w	r0, [sp, #283]	; 0x11b
    ddae:	980a      	ldr	r0, [sp, #40]	; 0x28
    ddb0:	f7ff fa08 	bl	d1c4 <_ZN4core3ptr18real_drop_in_place17he3591a973465b7a1E>
    ddb4:	e7ad      	b.n	dd12 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE+0x80>
    ddb6:	f89d 011b 	ldrb.w	r0, [sp, #283]	; 0x11b
    ddba:	07c0      	lsls	r0, r0, #31
    ddbc:	2800      	cmp	r0, #0
    ddbe:	d1f3      	bne.n	dda8 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE+0x116>
    ddc0:	e7a7      	b.n	dd12 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE+0x80>

0000ddc2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10write_data17h49eeae9c2696d77cE>:
    fn write_data(&mut self, data: &[u8]) -> Result<(), ()> {
    ddc2:	b580      	push	{r7, lr}
    ddc4:	b086      	sub	sp, #24
    ddc6:	9001      	str	r0, [sp, #4]
    ddc8:	9102      	str	r1, [sp, #8]
    ddca:	9203      	str	r2, [sp, #12]
            data
    ddcc:	9802      	ldr	r0, [sp, #8]
    ddce:	9903      	ldr	r1, [sp, #12]
        mynewt::spi::spi_noblock_write_data(
    ddd0:	f003 f94c 	bl	1106c <_ZN6mynewt3spi22spi_noblock_write_data17h5f91a9651edf2767E>
    ddd4:	9000      	str	r0, [sp, #0]
    ddd6:	e7ff      	b.n	ddd8 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10write_data17h49eeae9c2696d77cE+0x16>
    ddd8:	f24d 7198 	movw	r1, #55192	; 0xd798
    dddc:	f2c0 0101 	movt	r1, #1
    dde0:	f24d 73a8 	movw	r3, #55208	; 0xd7a8
    dde4:	f2c0 0301 	movt	r3, #1
    dde8:	220d      	movs	r2, #13
    ddea:	9800      	ldr	r0, [sp, #0]
    ddec:	f7fd fed6 	bl	bb9c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hca4739a9a91ec005E>
    ddf0:	e7ff      	b.n	ddf2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10write_data17h49eeae9c2696d77cE+0x30>
    ddf2:	2000      	movs	r0, #0
        Ok(())
    ddf4:	f88d 0013 	strb.w	r0, [sp, #19]
    }
    ddf8:	f89d 0013 	ldrb.w	r0, [sp, #19]
    ddfc:	b006      	add	sp, #24
    ddfe:	bd80      	pop	{r7, pc}

0000de00 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10write_word17h9425c98edeed7397E>:
    fn write_word(&mut self, value: u16) -> Result<(), ()> {
    de00:	b580      	push	{r7, lr}
    de02:	b086      	sub	sp, #24
    de04:	460a      	mov	r2, r1
    de06:	9004      	str	r0, [sp, #16]
    de08:	f8ad 1014 	strh.w	r1, [sp, #20]
        let bytes: [u8; 2] = unsafe { transmute(value.to_be()) };
    de0c:	f8bd 0014 	ldrh.w	r0, [sp, #20]
    de10:	9203      	str	r2, [sp, #12]
    de12:	f004 fa36 	bl	12282 <_ZN4core3num21_$LT$impl$u20$u16$GT$5to_be17hf8daed3a42341b94E>
    de16:	9002      	str	r0, [sp, #8]
    de18:	e7ff      	b.n	de1a <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10write_word17h9425c98edeed7397E+0x1a>
    de1a:	9802      	ldr	r0, [sp, #8]
    de1c:	f8ad 0016 	strh.w	r0, [sp, #22]
    de20:	e7ff      	b.n	de22 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10write_word17h9425c98edeed7397E+0x22>
        self.write_data(&bytes)
    de22:	9804      	ldr	r0, [sp, #16]
    de24:	f10d 0116 	add.w	r1, sp, #22
    de28:	2202      	movs	r2, #2
    de2a:	f7ff ffca 	bl	ddc2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10write_data17h49eeae9c2696d77cE>
    de2e:	9001      	str	r0, [sp, #4]
    de30:	e7ff      	b.n	de32 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10write_word17h9425c98edeed7397E+0x32>
    }
    de32:	9801      	ldr	r0, [sp, #4]
    de34:	f000 0001 	and.w	r0, r0, #1
    de38:	b006      	add	sp, #24
    de3a:	bd80      	pop	{r7, pc}

0000de3c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E>:
    pub fn write_pixels<P: IntoIterator<Item = u16>>(&mut self, colors: P) -> Result <(), ()> {
    de3c:	b580      	push	{r7, lr}
    de3e:	f5ad 7d2e 	sub.w	sp, sp, #696	; 0x2b8
    de42:	9006      	str	r0, [sp, #24]
    de44:	2000      	movs	r0, #0
        self.write_command(Instruction::RAMWR, None)?;
    de46:	f88d 02b7 	strb.w	r0, [sp, #695]	; 0x2b7
    de4a:	2201      	movs	r2, #1
    de4c:	f88d 22b7 	strb.w	r2, [sp, #695]	; 0x2b7
    de50:	9a06      	ldr	r2, [sp, #24]
    de52:	232c      	movs	r3, #44	; 0x2c
    de54:	f88d 301f 	strb.w	r3, [sp, #31]
    de58:	9009      	str	r0, [sp, #36]	; 0x24
    de5a:	9008      	str	r0, [sp, #32]
    de5c:	9008      	str	r0, [sp, #32]
    de5e:	9808      	ldr	r0, [sp, #32]
    de60:	9b09      	ldr	r3, [sp, #36]	; 0x24
    de62:	f89d c01f 	ldrb.w	ip, [sp, #31]
    de66:	9005      	str	r0, [sp, #20]
    de68:	4610      	mov	r0, r2
    de6a:	9104      	str	r1, [sp, #16]
    de6c:	4661      	mov	r1, ip
    de6e:	9a05      	ldr	r2, [sp, #20]
    de70:	f000 f89b 	bl	dfaa <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E>
    de74:	9003      	str	r0, [sp, #12]
    de76:	e7ff      	b.n	de78 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0x3c>
    de78:	9803      	ldr	r0, [sp, #12]
    de7a:	f000 0001 	and.w	r0, r0, #1
    de7e:	f7fd fec5 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    de82:	f88d 001e 	strb.w	r0, [sp, #30]
    de86:	e7ff      	b.n	de88 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0x4c>
    de88:	f89d 001e 	ldrb.w	r0, [sp, #30]
    de8c:	07c1      	lsls	r1, r0, #31
    de8e:	2900      	cmp	r1, #0
    de90:	d010      	beq.n	deb4 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0x78>
    de92:	e7ff      	b.n	de94 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0x58>
    de94:	e000      	b.n	de98 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0x5c>
    de96:	defe      	udf	#254	; 0xfe
    de98:	f002 f978 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    de9c:	e004      	b.n	dea8 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0x6c>
    }
    de9e:	f89d 001d 	ldrb.w	r0, [sp, #29]
    dea2:	f50d 7d2e 	add.w	sp, sp, #696	; 0x2b8
    dea6:	bd80      	pop	{r7, pc}
        self.write_command(Instruction::RAMWR, None)?;
    dea8:	f7fe fa18 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    deac:	f88d 001d 	strb.w	r0, [sp, #29]
    deb0:	e7ff      	b.n	deb2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0x76>
    deb2:	e074      	b.n	df9e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0x162>
    deb4:	2000      	movs	r0, #0
        for color in colors {
    deb6:	f88d 02b7 	strb.w	r0, [sp, #695]	; 0x2b7
    deba:	a840      	add	r0, sp, #256	; 0x100
    debc:	22cc      	movs	r2, #204	; 0xcc
    debe:	9002      	str	r0, [sp, #8]
    dec0:	9904      	ldr	r1, [sp, #16]
    dec2:	f00d f811 	bl	1aee8 <__aeabi_memcpy>
    dec6:	a80c      	add	r0, sp, #48	; 0x30
    dec8:	9902      	ldr	r1, [sp, #8]
    deca:	f003 ff68 	bl	11d9e <_ZN93_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hde6c4b3aab66bceaE>
    dece:	e7ff      	b.n	ded0 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0x94>
    ded0:	a873      	add	r0, sp, #460	; 0x1cc
    ded2:	a90c      	add	r1, sp, #48	; 0x30
    ded4:	22d0      	movs	r2, #208	; 0xd0
    ded6:	f00d f807 	bl	1aee8 <__aeabi_memcpy>
    deda:	e7ff      	b.n	dedc <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0xa0>
    dedc:	a873      	add	r0, sp, #460	; 0x1cc
    dede:	f003 ff74 	bl	11dca <_ZN95_$LT$heapless..vec..IntoIter$LT$T$C$N$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6bac9bf84e5ace24E>
    dee2:	f8ad 12a2 	strh.w	r1, [sp, #674]	; 0x2a2
    dee6:	f8ad 02a0 	strh.w	r0, [sp, #672]	; 0x2a0
    deea:	e7ff      	b.n	deec <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0xb0>
    deec:	f8bd 02a0 	ldrh.w	r0, [sp, #672]	; 0x2a0
    def0:	4601      	mov	r1, r0
    def2:	2800      	cmp	r0, #0
    def4:	d001      	beq.n	defa <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0xbe>
    def6:	e7ff      	b.n	def8 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0xbc>
    def8:	e004      	b.n	df04 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0xc8>
    defa:	a873      	add	r0, sp, #460	; 0x1cc
        }
    defc:	f7ff f900 	bl	d100 <_ZN4core3ptr18real_drop_in_place17h32a869986fa832b9E>
    df00:	e031      	b.n	df66 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0x12a>
        for color in colors {
    df02:	defe      	udf	#254	; 0xfe
    df04:	f8bd 02a2 	ldrh.w	r0, [sp, #674]	; 0x2a2
    df08:	f8ad 02a6 	strh.w	r0, [sp, #678]	; 0x2a6
    df0c:	f8bd 02a6 	ldrh.w	r0, [sp, #678]	; 0x2a6
    df10:	f8ad 029e 	strh.w	r0, [sp, #670]	; 0x29e
    df14:	f8bd 029e 	ldrh.w	r0, [sp, #670]	; 0x29e
    df18:	f8ad 02a8 	strh.w	r0, [sp, #680]	; 0x2a8
            self.write_word(color)?;
    df1c:	9806      	ldr	r0, [sp, #24]
    df1e:	f8bd 12a8 	ldrh.w	r1, [sp, #680]	; 0x2a8
    df22:	f7ff ff6d 	bl	de00 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10write_word17h9425c98edeed7397E>
    df26:	9001      	str	r0, [sp, #4]
    df28:	e7ff      	b.n	df2a <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0xee>
    df2a:	9801      	ldr	r0, [sp, #4]
    df2c:	f000 0001 	and.w	r0, r0, #1
    df30:	f7fd fe6c 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    df34:	f88d 02ab 	strb.w	r0, [sp, #683]	; 0x2ab
    df38:	e7ff      	b.n	df3a <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0xfe>
    df3a:	f89d 02ab 	ldrb.w	r0, [sp, #683]	; 0x2ab
    df3e:	07c1      	lsls	r1, r0, #31
    df40:	2900      	cmp	r1, #0
    df42:	d00f      	beq.n	df64 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0x128>
    df44:	e7ff      	b.n	df46 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0x10a>
    df46:	e000      	b.n	df4a <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0x10e>
    df48:	defe      	udf	#254	; 0xfe
    df4a:	f002 f91f 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    df4e:	e7ff      	b.n	df50 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0x114>
    df50:	f7fe f9c4 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    df54:	f88d 001d 	strb.w	r0, [sp, #29]
    df58:	e7ff      	b.n	df5a <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0x11e>
    df5a:	a873      	add	r0, sp, #460	; 0x1cc
        }
    df5c:	f7ff f8d0 	bl	d100 <_ZN4core3ptr18real_drop_in_place17h32a869986fa832b9E>
    df60:	e7ff      	b.n	df62 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0x126>
    }
    df62:	e01c      	b.n	df9e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0x162>
        for color in colors {
    df64:	e7ba      	b.n	dedc <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0xa0>
        mynewt::spi::spi_noblock_write_flush()  //  Enqueue the pending SPI request
    df66:	f003 f8d0 	bl	1110a <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E>
    df6a:	9000      	str	r0, [sp, #0]
    df6c:	e7ff      	b.n	df6e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0x132>
    df6e:	f24d 712c 	movw	r1, #55084	; 0xd72c
    df72:	f2c0 0101 	movt	r1, #1
    df76:	f24d 73b8 	movw	r3, #55224	; 0xd7b8
    df7a:	f2c0 0301 	movt	r3, #1
    df7e:	220e      	movs	r2, #14
    df80:	9800      	ldr	r0, [sp, #0]
    df82:	f7fd fe0b 	bl	bb9c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hca4739a9a91ec005E>
    df86:	e7ff      	b.n	df88 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0x14c>
    df88:	2000      	movs	r0, #0
        Ok(())
    df8a:	f88d 001d 	strb.w	r0, [sp, #29]
    }
    df8e:	e786      	b.n	de9e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0x62>
    df90:	2000      	movs	r0, #0
    df92:	f88d 02b7 	strb.w	r0, [sp, #695]	; 0x2b7
    df96:	9804      	ldr	r0, [sp, #16]
    df98:	f7ff f914 	bl	d1c4 <_ZN4core3ptr18real_drop_in_place17he3591a973465b7a1E>
    df9c:	e77f      	b.n	de9e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0x62>
    df9e:	f89d 02b7 	ldrb.w	r0, [sp, #695]	; 0x2b7
    dfa2:	07c0      	lsls	r0, r0, #31
    dfa4:	2800      	cmp	r0, #0
    dfa6:	d1f3      	bne.n	df90 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0x154>
    dfa8:	e779      	b.n	de9e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$12write_pixels17hdb0dc701d267aa80E+0x62>

0000dfaa <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E>:
    fn write_command(&mut self, command: Instruction, params: Option<&[u8]>) -> Result<(), ()> {
    dfaa:	b580      	push	{r7, lr}
    dfac:	b090      	sub	sp, #64	; 0x40
    dfae:	468c      	mov	ip, r1
    dfb0:	900a      	str	r0, [sp, #40]	; 0x28
    dfb2:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
    dfb6:	920c      	str	r2, [sp, #48]	; 0x30
    dfb8:	930d      	str	r3, [sp, #52]	; 0x34
    dfba:	f10d 002f 	add.w	r0, sp, #47	; 0x2f
            command.to_u8().unwrap()
    dfbe:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
    dfc2:	f005 fad6 	bl	13572 <_ZN10num_traits4cast11ToPrimitive5to_u817h633c568fdabc8347E>
    dfc6:	9008      	str	r0, [sp, #32]
    dfc8:	9107      	str	r1, [sp, #28]
    dfca:	e7ff      	b.n	dfcc <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E+0x22>
    dfcc:	9808      	ldr	r0, [sp, #32]
    dfce:	f000 0001 	and.w	r0, r0, #1
    dfd2:	f24d 72c8 	movw	r2, #55240	; 0xd7c8
    dfd6:	f2c0 0201 	movt	r2, #1
    dfda:	9907      	ldr	r1, [sp, #28]
    dfdc:	f7fe fa37 	bl	c44e <_ZN4core6option15Option$LT$T$GT$6unwrap17h3c579309e0abf051E>
    dfe0:	9006      	str	r0, [sp, #24]
    dfe2:	e7ff      	b.n	dfe4 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E+0x3a>
        mynewt::spi::spi_noblock_write_command(
    dfe4:	9806      	ldr	r0, [sp, #24]
    dfe6:	f002 fff7 	bl	10fd8 <_ZN6mynewt3spi25spi_noblock_write_command17h2769e08b4f7b5ba8E>
    dfea:	9005      	str	r0, [sp, #20]
    dfec:	e7ff      	b.n	dfee <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E+0x44>
    dfee:	f24d 71d8 	movw	r1, #55256	; 0xd7d8
    dff2:	f2c0 0101 	movt	r1, #1
    dff6:	f24d 73e4 	movw	r3, #55268	; 0xd7e4
    dffa:	f2c0 0301 	movt	r3, #1
    dffe:	220c      	movs	r2, #12
    e000:	9805      	ldr	r0, [sp, #20]
    e002:	f7fd fdcb 	bl	bb9c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hca4739a9a91ec005E>
    e006:	e7ff      	b.n	e008 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E+0x5e>
    e008:	a80c      	add	r0, sp, #48	; 0x30
        if params.is_some() {
    e00a:	f7fe fa7f 	bl	c50c <_ZN4core6option15Option$LT$T$GT$7is_some17h5981bcdaa77e6156E>
    e00e:	9004      	str	r0, [sp, #16]
    e010:	e7ff      	b.n	e012 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E+0x68>
    e012:	9804      	ldr	r0, [sp, #16]
    e014:	07c1      	lsls	r1, r0, #31
    e016:	2900      	cmp	r1, #0
    e018:	d01f      	beq.n	e05a <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E+0xb0>
    e01a:	e7ff      	b.n	e01c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E+0x72>
                params.unwrap()
    e01c:	980c      	ldr	r0, [sp, #48]	; 0x30
    e01e:	990d      	ldr	r1, [sp, #52]	; 0x34
    e020:	f24d 72f4 	movw	r2, #55284	; 0xd7f4
    e024:	f2c0 0201 	movt	r2, #1
    e028:	f7fe fa3b 	bl	c4a2 <_ZN4core6option15Option$LT$T$GT$6unwrap17h6432083b07afd3f6E>
    e02c:	9003      	str	r0, [sp, #12]
    e02e:	9102      	str	r1, [sp, #8]
    e030:	e7ff      	b.n	e032 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E+0x88>
            mynewt::spi::spi_noblock_write_data(
    e032:	9803      	ldr	r0, [sp, #12]
    e034:	9902      	ldr	r1, [sp, #8]
    e036:	f003 f819 	bl	1106c <_ZN6mynewt3spi22spi_noblock_write_data17h5f91a9651edf2767E>
    e03a:	9001      	str	r0, [sp, #4]
    e03c:	e7ff      	b.n	e03e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E+0x94>
    e03e:	f24d 7198 	movw	r1, #55192	; 0xd798
    e042:	f2c0 0101 	movt	r1, #1
    e046:	f64d 0304 	movw	r3, #55300	; 0xd804
    e04a:	f2c0 0301 	movt	r3, #1
    e04e:	220d      	movs	r2, #13
    e050:	9801      	ldr	r0, [sp, #4]
    e052:	f7fd fda3 	bl	bb9c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hca4739a9a91ec005E>
    e056:	e7ff      	b.n	e058 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E+0xae>
        if params.is_some() {
    e058:	e7ff      	b.n	e05a <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E+0xb0>
    e05a:	2000      	movs	r0, #0
        Ok(())
    e05c:	f88d 003b 	strb.w	r0, [sp, #59]	; 0x3b
    }
    e060:	f89d 003b 	ldrb.w	r0, [sp, #59]	; 0x3b
    e064:	b010      	add	sp, #64	; 0x40
    e066:	bd80      	pop	{r7, pc}

0000e068 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E>:
    pub fn set_orientation(&mut self, orientation: &Orientation) -> Result<(), ()> {
    e068:	b580      	push	{r7, lr}
    e06a:	b098      	sub	sp, #96	; 0x60
    e06c:	900a      	str	r0, [sp, #40]	; 0x28
    e06e:	910b      	str	r1, [sp, #44]	; 0x2c
        if self.rgb {
    e070:	980a      	ldr	r0, [sp, #40]	; 0x28
    e072:	7d00      	ldrb	r0, [r0, #20]
    e074:	07c0      	lsls	r0, r0, #31
    e076:	2800      	cmp	r0, #0
    e078:	d10c      	bne.n	e094 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E+0x2c>
    e07a:	e7ff      	b.n	e07c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E+0x14>
            self.write_command(
    e07c:	980a      	ldr	r0, [sp, #40]	; 0x28
    e07e:	2136      	movs	r1, #54	; 0x36
                Instruction::MADCTL, Some(&[orientation.to_u8().unwrap() | 0x08 ]
    e080:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
    e084:	990b      	ldr	r1, [sp, #44]	; 0x2c
    e086:	9009      	str	r0, [sp, #36]	; 0x24
    e088:	4608      	mov	r0, r1
    e08a:	f7ff fd7b 	bl	db84 <_ZN10num_traits4cast11ToPrimitive5to_u817he21802d3bdadd71bE>
    e08e:	9008      	str	r0, [sp, #32]
    e090:	9107      	str	r1, [sp, #28]
    e092:	e047      	b.n	e124 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E+0xbc>
            self.write_command(
    e094:	980a      	ldr	r0, [sp, #40]	; 0x28
    e096:	2136      	movs	r1, #54	; 0x36
                Instruction::MADCTL, Some(&[orientation.to_u8().unwrap()]
    e098:	f88d 1033 	strb.w	r1, [sp, #51]	; 0x33
    e09c:	990b      	ldr	r1, [sp, #44]	; 0x2c
    e09e:	9006      	str	r0, [sp, #24]
    e0a0:	4608      	mov	r0, r1
    e0a2:	f7ff fd6f 	bl	db84 <_ZN10num_traits4cast11ToPrimitive5to_u817he21802d3bdadd71bE>
    e0a6:	9005      	str	r0, [sp, #20]
    e0a8:	9104      	str	r1, [sp, #16]
    e0aa:	e7ff      	b.n	e0ac <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E+0x44>
    e0ac:	9805      	ldr	r0, [sp, #20]
    e0ae:	f000 0001 	and.w	r0, r0, #1
    e0b2:	f64d 0214 	movw	r2, #55316	; 0xd814
    e0b6:	f2c0 0201 	movt	r2, #1
    e0ba:	9904      	ldr	r1, [sp, #16]
    e0bc:	f7fe f9c7 	bl	c44e <_ZN4core6option15Option$LT$T$GT$6unwrap17h3c579309e0abf051E>
    e0c0:	9003      	str	r0, [sp, #12]
    e0c2:	e7ff      	b.n	e0c4 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E+0x5c>
    e0c4:	9803      	ldr	r0, [sp, #12]
    e0c6:	f88d 003f 	strb.w	r0, [sp, #63]	; 0x3f
    e0ca:	f10d 013f 	add.w	r1, sp, #63	; 0x3f
    e0ce:	910d      	str	r1, [sp, #52]	; 0x34
    e0d0:	2101      	movs	r1, #1
    e0d2:	910e      	str	r1, [sp, #56]	; 0x38
            self.write_command(
    e0d4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    e0d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    e0d8:	f89d 1033 	ldrb.w	r1, [sp, #51]	; 0x33
    e0dc:	9806      	ldr	r0, [sp, #24]
    e0de:	f7ff ff64 	bl	dfaa <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E>
    e0e2:	9002      	str	r0, [sp, #8]
    e0e4:	e7ff      	b.n	e0e6 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E+0x7e>
    e0e6:	9802      	ldr	r0, [sp, #8]
    e0e8:	f000 0001 	and.w	r0, r0, #1
    e0ec:	f7fd fd8e 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    e0f0:	f88d 0032 	strb.w	r0, [sp, #50]	; 0x32
    e0f4:	e7ff      	b.n	e0f6 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E+0x8e>
            ))?;
    e0f6:	f89d 0032 	ldrb.w	r0, [sp, #50]	; 0x32
    e0fa:	07c1      	lsls	r1, r0, #31
    e0fc:	2900      	cmp	r1, #0
    e0fe:	d010      	beq.n	e122 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E+0xba>
    e100:	e7ff      	b.n	e102 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E+0x9a>
    e102:	e000      	b.n	e106 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E+0x9e>
            self.write_command(
    e104:	defe      	udf	#254	; 0xfe
            ))?;
    e106:	f002 f841 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    e10a:	e003      	b.n	e114 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E+0xac>
    }
    e10c:	f89d 0031 	ldrb.w	r0, [sp, #49]	; 0x31
    e110:	b018      	add	sp, #96	; 0x60
    e112:	bd80      	pop	{r7, pc}
            ))?;
    e114:	f7fe f8e2 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    e118:	f88d 0031 	strb.w	r0, [sp, #49]	; 0x31
    e11c:	e7ff      	b.n	e11e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E+0xb6>
    e11e:	e7ff      	b.n	e120 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E+0xb8>
    e120:	e7f4      	b.n	e10c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E+0xa4>
        if self.rgb {
    e122:	e038      	b.n	e196 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E+0x12e>
                Instruction::MADCTL, Some(&[orientation.to_u8().unwrap() | 0x08 ]
    e124:	9808      	ldr	r0, [sp, #32]
    e126:	f000 0001 	and.w	r0, r0, #1
    e12a:	f64d 0224 	movw	r2, #55332	; 0xd824
    e12e:	f2c0 0201 	movt	r2, #1
    e132:	9907      	ldr	r1, [sp, #28]
    e134:	f7fe f98b 	bl	c44e <_ZN4core6option15Option$LT$T$GT$6unwrap17h3c579309e0abf051E>
    e138:	9001      	str	r0, [sp, #4]
    e13a:	e7ff      	b.n	e13c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E+0xd4>
    e13c:	9801      	ldr	r0, [sp, #4]
    e13e:	f040 0108 	orr.w	r1, r0, #8
    e142:	f88d 1053 	strb.w	r1, [sp, #83]	; 0x53
    e146:	f10d 0153 	add.w	r1, sp, #83	; 0x53
    e14a:	9112      	str	r1, [sp, #72]	; 0x48
    e14c:	2101      	movs	r1, #1
    e14e:	9113      	str	r1, [sp, #76]	; 0x4c
            self.write_command(
    e150:	9a12      	ldr	r2, [sp, #72]	; 0x48
    e152:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    e154:	f89d 1047 	ldrb.w	r1, [sp, #71]	; 0x47
    e158:	9809      	ldr	r0, [sp, #36]	; 0x24
    e15a:	f7ff ff26 	bl	dfaa <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E>
    e15e:	9000      	str	r0, [sp, #0]
    e160:	e7ff      	b.n	e162 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E+0xfa>
    e162:	9800      	ldr	r0, [sp, #0]
    e164:	f000 0001 	and.w	r0, r0, #1
    e168:	f7fd fd50 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    e16c:	f88d 0046 	strb.w	r0, [sp, #70]	; 0x46
    e170:	e7ff      	b.n	e172 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E+0x10a>
            ))?;
    e172:	f89d 0046 	ldrb.w	r0, [sp, #70]	; 0x46
    e176:	07c1      	lsls	r1, r0, #31
    e178:	2900      	cmp	r1, #0
    e17a:	d00b      	beq.n	e194 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E+0x12c>
    e17c:	e7ff      	b.n	e17e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E+0x116>
    e17e:	e000      	b.n	e182 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E+0x11a>
            self.write_command(
    e180:	defe      	udf	#254	; 0xfe
            ))?;
    e182:	f002 f803 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    e186:	e7ff      	b.n	e188 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E+0x120>
    e188:	f7fe f8a8 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    e18c:	f88d 0031 	strb.w	r0, [sp, #49]	; 0x31
    e190:	e7ff      	b.n	e192 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E+0x12a>
    e192:	e7c5      	b.n	e120 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E+0xb8>
        if self.rgb {
    e194:	e7ff      	b.n	e196 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E+0x12e>
    e196:	2000      	movs	r0, #0
        Ok(())
    e198:	f88d 0031 	strb.w	r0, [sp, #49]	; 0x31
    }
    e19c:	e7b6      	b.n	e10c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$15set_orientation17h6f113cda00125059E+0xa4>

0000e19e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE>:
    fn set_address_window(&mut self, sx: u16, sy: u16, ex: u16, ey: u16) -> Result<(), ()> {
    e19e:	b5b0      	push	{r4, r5, r7, lr}
    e1a0:	b0a2      	sub	sp, #136	; 0x88
    e1a2:	f8dd c098 	ldr.w	ip, [sp, #152]	; 0x98
    e1a6:	469e      	mov	lr, r3
    e1a8:	4614      	mov	r4, r2
    e1aa:	460d      	mov	r5, r1
    e1ac:	9010      	str	r0, [sp, #64]	; 0x40
    e1ae:	f8ad 1044 	strh.w	r1, [sp, #68]	; 0x44
    e1b2:	f8ad 2046 	strh.w	r2, [sp, #70]	; 0x46
    e1b6:	f8ad 3048 	strh.w	r3, [sp, #72]	; 0x48
    e1ba:	f8ad c04a 	strh.w	ip, [sp, #74]	; 0x4a
        self.write_command(Instruction::CASET, None)?;
    e1be:	9810      	ldr	r0, [sp, #64]	; 0x40
    e1c0:	212a      	movs	r1, #42	; 0x2a
    e1c2:	f88d 104f 	strb.w	r1, [sp, #79]	; 0x4f
    e1c6:	2100      	movs	r1, #0
    e1c8:	9115      	str	r1, [sp, #84]	; 0x54
    e1ca:	9114      	str	r1, [sp, #80]	; 0x50
    e1cc:	9114      	str	r1, [sp, #80]	; 0x50
    e1ce:	9a14      	ldr	r2, [sp, #80]	; 0x50
    e1d0:	9b15      	ldr	r3, [sp, #84]	; 0x54
    e1d2:	f89d 104f 	ldrb.w	r1, [sp, #79]	; 0x4f
    e1d6:	f8cd e03c 	str.w	lr, [sp, #60]	; 0x3c
    e1da:	940e      	str	r4, [sp, #56]	; 0x38
    e1dc:	950d      	str	r5, [sp, #52]	; 0x34
    e1de:	f7ff fee4 	bl	dfaa <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E>
    e1e2:	900c      	str	r0, [sp, #48]	; 0x30
    e1e4:	e7ff      	b.n	e1e6 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x48>
    e1e6:	980c      	ldr	r0, [sp, #48]	; 0x30
    e1e8:	f000 0001 	and.w	r0, r0, #1
    e1ec:	f7fd fd0e 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    e1f0:	f88d 004e 	strb.w	r0, [sp, #78]	; 0x4e
    e1f4:	e7ff      	b.n	e1f6 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x58>
    e1f6:	f89d 004e 	ldrb.w	r0, [sp, #78]	; 0x4e
    e1fa:	07c1      	lsls	r1, r0, #31
    e1fc:	2900      	cmp	r1, #0
    e1fe:	d00f      	beq.n	e220 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x82>
    e200:	e7ff      	b.n	e202 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x64>
    e202:	e000      	b.n	e206 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x68>
    e204:	defe      	udf	#254	; 0xfe
    e206:	f001 ffc1 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    e20a:	e003      	b.n	e214 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x76>
    }
    e20c:	f89d 004d 	ldrb.w	r0, [sp, #77]	; 0x4d
    e210:	b022      	add	sp, #136	; 0x88
    e212:	bdb0      	pop	{r4, r5, r7, pc}
        self.write_command(Instruction::CASET, None)?;
    e214:	f7fe f862 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    e218:	f88d 004d 	strb.w	r0, [sp, #77]	; 0x4d
    e21c:	e7ff      	b.n	e21e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x80>
    e21e:	e7f5      	b.n	e20c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x6e>
        self.write_word(sx + self.dx)?;
    e220:	9810      	ldr	r0, [sp, #64]	; 0x40
    e222:	f8bd 1044 	ldrh.w	r1, [sp, #68]	; 0x44
    e226:	8a02      	ldrh	r2, [r0, #16]
    e228:	4411      	add	r1, r2
    e22a:	b28a      	uxth	r2, r1
    e22c:	460b      	mov	r3, r1
    e22e:	428a      	cmp	r2, r1
    e230:	900b      	str	r0, [sp, #44]	; 0x2c
    e232:	930a      	str	r3, [sp, #40]	; 0x28
    e234:	f040 80b4 	bne.w	e3a0 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x202>
    e238:	e7ff      	b.n	e23a <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x9c>
    e23a:	980b      	ldr	r0, [sp, #44]	; 0x2c
    e23c:	990a      	ldr	r1, [sp, #40]	; 0x28
    e23e:	f7ff fddf 	bl	de00 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10write_word17h9425c98edeed7397E>
    e242:	9009      	str	r0, [sp, #36]	; 0x24
    e244:	e7ff      	b.n	e246 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0xa8>
    e246:	9809      	ldr	r0, [sp, #36]	; 0x24
    e248:	f000 0001 	and.w	r0, r0, #1
    e24c:	f7fd fcde 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    e250:	f88d 005f 	strb.w	r0, [sp, #95]	; 0x5f
    e254:	e7ff      	b.n	e256 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0xb8>
    e256:	f89d 005f 	ldrb.w	r0, [sp, #95]	; 0x5f
    e25a:	07c1      	lsls	r1, r0, #31
    e25c:	2900      	cmp	r1, #0
    e25e:	d00b      	beq.n	e278 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0xda>
    e260:	e7ff      	b.n	e262 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0xc4>
    e262:	e000      	b.n	e266 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0xc8>
    e264:	defe      	udf	#254	; 0xfe
    e266:	f001 ff91 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    e26a:	e7ff      	b.n	e26c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0xce>
    e26c:	f7fe f836 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    e270:	f88d 004d 	strb.w	r0, [sp, #77]	; 0x4d
    e274:	e7ff      	b.n	e276 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0xd8>
    e276:	e7c9      	b.n	e20c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x6e>
        self.write_word(ex + self.dx)?;
    e278:	9810      	ldr	r0, [sp, #64]	; 0x40
    e27a:	f8bd 1048 	ldrh.w	r1, [sp, #72]	; 0x48
    e27e:	8a02      	ldrh	r2, [r0, #16]
    e280:	4411      	add	r1, r2
    e282:	b28a      	uxth	r2, r1
    e284:	460b      	mov	r3, r1
    e286:	428a      	cmp	r2, r1
    e288:	9008      	str	r0, [sp, #32]
    e28a:	9307      	str	r3, [sp, #28]
    e28c:	f040 8094 	bne.w	e3b8 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x21a>
    e290:	e7ff      	b.n	e292 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0xf4>
    e292:	9808      	ldr	r0, [sp, #32]
    e294:	9907      	ldr	r1, [sp, #28]
    e296:	f7ff fdb3 	bl	de00 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10write_word17h9425c98edeed7397E>
    e29a:	9006      	str	r0, [sp, #24]
    e29c:	e7ff      	b.n	e29e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x100>
    e29e:	9806      	ldr	r0, [sp, #24]
    e2a0:	f000 0001 	and.w	r0, r0, #1
    e2a4:	f7fd fcb2 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    e2a8:	f88d 0067 	strb.w	r0, [sp, #103]	; 0x67
    e2ac:	e7ff      	b.n	e2ae <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x110>
    e2ae:	f89d 0067 	ldrb.w	r0, [sp, #103]	; 0x67
    e2b2:	07c1      	lsls	r1, r0, #31
    e2b4:	2900      	cmp	r1, #0
    e2b6:	d00b      	beq.n	e2d0 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x132>
    e2b8:	e7ff      	b.n	e2ba <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x11c>
    e2ba:	e000      	b.n	e2be <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x120>
    e2bc:	defe      	udf	#254	; 0xfe
    e2be:	f001 ff65 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    e2c2:	e7ff      	b.n	e2c4 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x126>
    e2c4:	f7fe f80a 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    e2c8:	f88d 004d 	strb.w	r0, [sp, #77]	; 0x4d
    e2cc:	e7ff      	b.n	e2ce <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x130>
    e2ce:	e79d      	b.n	e20c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x6e>
        self.write_command(Instruction::RASET, None)?;
    e2d0:	9810      	ldr	r0, [sp, #64]	; 0x40
    e2d2:	212b      	movs	r1, #43	; 0x2b
    e2d4:	f88d 106f 	strb.w	r1, [sp, #111]	; 0x6f
    e2d8:	2100      	movs	r1, #0
    e2da:	911d      	str	r1, [sp, #116]	; 0x74
    e2dc:	911c      	str	r1, [sp, #112]	; 0x70
    e2de:	911c      	str	r1, [sp, #112]	; 0x70
    e2e0:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    e2e2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    e2e4:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
    e2e8:	f7ff fe5f 	bl	dfaa <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E>
    e2ec:	9005      	str	r0, [sp, #20]
    e2ee:	e7ff      	b.n	e2f0 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x152>
    e2f0:	9805      	ldr	r0, [sp, #20]
    e2f2:	f000 0001 	and.w	r0, r0, #1
    e2f6:	f7fd fc89 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    e2fa:	f88d 006e 	strb.w	r0, [sp, #110]	; 0x6e
    e2fe:	e7ff      	b.n	e300 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x162>
    e300:	f89d 006e 	ldrb.w	r0, [sp, #110]	; 0x6e
    e304:	07c1      	lsls	r1, r0, #31
    e306:	2900      	cmp	r1, #0
    e308:	d00b      	beq.n	e322 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x184>
    e30a:	e7ff      	b.n	e30c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x16e>
    e30c:	e000      	b.n	e310 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x172>
    e30e:	defe      	udf	#254	; 0xfe
    e310:	f001 ff3c 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    e314:	e7ff      	b.n	e316 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x178>
    e316:	f7fd ffe1 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    e31a:	f88d 004d 	strb.w	r0, [sp, #77]	; 0x4d
    e31e:	e7ff      	b.n	e320 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x182>
    e320:	e774      	b.n	e20c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x6e>
        self.write_word(sy + self.dy)?;
    e322:	9810      	ldr	r0, [sp, #64]	; 0x40
    e324:	f8bd 1046 	ldrh.w	r1, [sp, #70]	; 0x46
    e328:	8a42      	ldrh	r2, [r0, #18]
    e32a:	4411      	add	r1, r2
    e32c:	b28a      	uxth	r2, r1
    e32e:	460b      	mov	r3, r1
    e330:	428a      	cmp	r2, r1
    e332:	9004      	str	r0, [sp, #16]
    e334:	9303      	str	r3, [sp, #12]
    e336:	d14b      	bne.n	e3d0 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x232>
    e338:	e7ff      	b.n	e33a <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x19c>
    e33a:	9804      	ldr	r0, [sp, #16]
    e33c:	9903      	ldr	r1, [sp, #12]
    e33e:	f7ff fd5f 	bl	de00 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10write_word17h9425c98edeed7397E>
    e342:	9002      	str	r0, [sp, #8]
    e344:	e7ff      	b.n	e346 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x1a8>
    e346:	9802      	ldr	r0, [sp, #8]
    e348:	f000 0001 	and.w	r0, r0, #1
    e34c:	f7fd fc5e 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    e350:	f88d 007f 	strb.w	r0, [sp, #127]	; 0x7f
    e354:	e7ff      	b.n	e356 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x1b8>
    e356:	f89d 007f 	ldrb.w	r0, [sp, #127]	; 0x7f
    e35a:	07c1      	lsls	r1, r0, #31
    e35c:	2900      	cmp	r1, #0
    e35e:	d00b      	beq.n	e378 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x1da>
    e360:	e7ff      	b.n	e362 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x1c4>
    e362:	e000      	b.n	e366 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x1c8>
    e364:	defe      	udf	#254	; 0xfe
    e366:	f001 ff11 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    e36a:	e7ff      	b.n	e36c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x1ce>
    e36c:	f7fd ffb6 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    e370:	f88d 004d 	strb.w	r0, [sp, #77]	; 0x4d
    e374:	e7ff      	b.n	e376 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x1d8>
    e376:	e749      	b.n	e20c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x6e>
        self.write_word(ey + self.dy)
    e378:	9810      	ldr	r0, [sp, #64]	; 0x40
    e37a:	f8bd 104a 	ldrh.w	r1, [sp, #74]	; 0x4a
    e37e:	8a42      	ldrh	r2, [r0, #18]
    e380:	4411      	add	r1, r2
    e382:	b28a      	uxth	r2, r1
    e384:	460b      	mov	r3, r1
    e386:	428a      	cmp	r2, r1
    e388:	9001      	str	r0, [sp, #4]
    e38a:	9300      	str	r3, [sp, #0]
    e38c:	d12c      	bne.n	e3e8 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x24a>
    e38e:	e7ff      	b.n	e390 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x1f2>
    e390:	9801      	ldr	r0, [sp, #4]
    e392:	9900      	ldr	r1, [sp, #0]
    e394:	f7ff fd34 	bl	de00 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10write_word17h9425c98edeed7397E>
    e398:	f88d 004d 	strb.w	r0, [sp, #77]	; 0x4d
    e39c:	e7ff      	b.n	e39e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x200>
    }
    e39e:	e735      	b.n	e20c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$18set_address_window17h2b600dc668ddb85eE+0x6e>
        self.write_word(sx + self.dx)?;
    e3a0:	f64d 0050 	movw	r0, #55376	; 0xd850
    e3a4:	f2c0 0001 	movt	r0, #1
    e3a8:	f64d 0234 	movw	r2, #55348	; 0xd834
    e3ac:	f2c0 0201 	movt	r2, #1
    e3b0:	211c      	movs	r1, #28
    e3b2:	f006 fbf6 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    e3b6:	defe      	udf	#254	; 0xfe
        self.write_word(ex + self.dx)?;
    e3b8:	f64d 0050 	movw	r0, #55376	; 0xd850
    e3bc:	f2c0 0001 	movt	r0, #1
    e3c0:	f64d 026c 	movw	r2, #55404	; 0xd86c
    e3c4:	f2c0 0201 	movt	r2, #1
    e3c8:	211c      	movs	r1, #28
    e3ca:	f006 fbea 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    e3ce:	defe      	udf	#254	; 0xfe
        self.write_word(sy + self.dy)?;
    e3d0:	f64d 0050 	movw	r0, #55376	; 0xd850
    e3d4:	f2c0 0001 	movt	r0, #1
    e3d8:	f64d 027c 	movw	r2, #55420	; 0xd87c
    e3dc:	f2c0 0201 	movt	r2, #1
    e3e0:	211c      	movs	r1, #28
    e3e2:	f006 fbde 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    e3e6:	defe      	udf	#254	; 0xfe
        self.write_word(ey + self.dy)
    e3e8:	f64d 0050 	movw	r0, #55376	; 0xd850
    e3ec:	f2c0 0001 	movt	r0, #1
    e3f0:	f64d 028c 	movw	r2, #55436	; 0xd88c
    e3f4:	f2c0 0201 	movt	r2, #1
    e3f8:	211c      	movs	r1, #28
    e3fa:	f006 fbd2 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    e3fe:	defe      	udf	#254	; 0xfe

0000e400 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$3new17h6baf8915c2b60d77E>:
    pub fn new(
    e400:	b570      	push	{r4, r5, r6, lr}
    e402:	b08a      	sub	sp, #40	; 0x28
    e404:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
    e408:	f8dd e03c 	ldr.w	lr, [sp, #60]	; 0x3c
    e40c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
    e40e:	9100      	str	r1, [sp, #0]
    e410:	9201      	str	r2, [sp, #4]
    e412:	9302      	str	r3, [sp, #8]
    e414:	f88d e00e 	strb.w	lr, [sp, #14]
    e418:	f88d c00f 	strb.w	ip, [sp, #15]
            _spi: spi,
    e41c:	9900      	ldr	r1, [sp, #0]
    e41e:	9a01      	ldr	r2, [sp, #4]
            _dc: dc,
    e420:	9b02      	ldr	r3, [sp, #8]
            rst,
    e422:	f8dd c038 	ldr.w	ip, [sp, #56]	; 0x38
            rgb,
    e426:	f89d e00e 	ldrb.w	lr, [sp, #14]
            inverted,
    e42a:	f89d 500f 	ldrb.w	r5, [sp, #15]
        let display = ST7735 {
    e42e:	9104      	str	r1, [sp, #16]
    e430:	9205      	str	r2, [sp, #20]
    e432:	9306      	str	r3, [sp, #24]
    e434:	f8cd c01c 	str.w	ip, [sp, #28]
    e438:	f88d e024 	strb.w	lr, [sp, #36]	; 0x24
    e43c:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
    e440:	2100      	movs	r1, #0
    e442:	f8ad 1020 	strh.w	r1, [sp, #32]
    e446:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
    e44a:	a904      	add	r1, sp, #16
        display
    e44c:	e891 506c 	ldmia.w	r1, {r2, r3, r5, r6, ip, lr}
    e450:	e880 506c 	stmia.w	r0, {r2, r3, r5, r6, ip, lr}
    }
    e454:	b00a      	add	sp, #40	; 0x28
    e456:	bd70      	pop	{r4, r5, r6, pc}

0000e458 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E>:
    pub fn init<DELAY>(&mut self, delay: &mut DELAY) -> Result<(), ()>
    e458:	b580      	push	{r7, lr}
    e45a:	b0e4      	sub	sp, #400	; 0x190
    e45c:	9016      	str	r0, [sp, #88]	; 0x58
    e45e:	9117      	str	r1, [sp, #92]	; 0x5c
        mynewt::spi::spi_noblock_init()  //  Init the SPI queue
    e460:	f002 f858 	bl	10514 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE>
    e464:	9015      	str	r0, [sp, #84]	; 0x54
    e466:	e7ff      	b.n	e468 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x10>
    e468:	f64d 019c 	movw	r1, #55452	; 0xd89c
    e46c:	f2c0 0101 	movt	r1, #1
    e470:	f64d 03ac 	movw	r3, #55468	; 0xd8ac
    e474:	f2c0 0301 	movt	r3, #1
    e478:	220d      	movs	r2, #13
    e47a:	9815      	ldr	r0, [sp, #84]	; 0x54
    e47c:	f7fd fb8e 	bl	bb9c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hca4739a9a91ec005E>
    e480:	e7ff      	b.n	e482 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x2a>
        self.hard_reset()?;
    e482:	9816      	ldr	r0, [sp, #88]	; 0x58
    e484:	f7ff fb9a 	bl	dbbc <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10hard_reset17h417af0e2179c30e3E>
    e488:	9014      	str	r0, [sp, #80]	; 0x50
    e48a:	e7ff      	b.n	e48c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x34>
    e48c:	9814      	ldr	r0, [sp, #80]	; 0x50
    e48e:	f000 0001 	and.w	r0, r0, #1
    e492:	f7fd fbbb 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    e496:	f88d 0063 	strb.w	r0, [sp, #99]	; 0x63
    e49a:	e7ff      	b.n	e49c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x44>
    e49c:	f89d 0063 	ldrb.w	r0, [sp, #99]	; 0x63
    e4a0:	07c1      	lsls	r1, r0, #31
    e4a2:	2900      	cmp	r1, #0
    e4a4:	d00f      	beq.n	e4c6 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x6e>
    e4a6:	e7ff      	b.n	e4a8 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x50>
    e4a8:	e000      	b.n	e4ac <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x54>
    e4aa:	defe      	udf	#254	; 0xfe
    e4ac:	f001 fe6e 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    e4b0:	e003      	b.n	e4ba <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x62>
    }
    e4b2:	f89d 0062 	ldrb.w	r0, [sp, #98]	; 0x62
    e4b6:	b064      	add	sp, #400	; 0x190
    e4b8:	bd80      	pop	{r7, pc}
        self.hard_reset()?;
    e4ba:	f7fd ff0f 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    e4be:	f88d 0062 	strb.w	r0, [sp, #98]	; 0x62
    e4c2:	e7ff      	b.n	e4c4 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x6c>
    e4c4:	e7f5      	b.n	e4b2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5a>
        self.write_command(Instruction::SWRESET, None)?;
    e4c6:	9816      	ldr	r0, [sp, #88]	; 0x58
    e4c8:	2101      	movs	r1, #1
    e4ca:	f88d 106b 	strb.w	r1, [sp, #107]	; 0x6b
    e4ce:	2100      	movs	r1, #0
    e4d0:	911c      	str	r1, [sp, #112]	; 0x70
    e4d2:	911b      	str	r1, [sp, #108]	; 0x6c
    e4d4:	911b      	str	r1, [sp, #108]	; 0x6c
    e4d6:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    e4d8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
    e4da:	f89d 106b 	ldrb.w	r1, [sp, #107]	; 0x6b
    e4de:	f7ff fd64 	bl	dfaa <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E>
    e4e2:	9013      	str	r0, [sp, #76]	; 0x4c
    e4e4:	e7ff      	b.n	e4e6 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x8e>
    e4e6:	9813      	ldr	r0, [sp, #76]	; 0x4c
    e4e8:	f000 0001 	and.w	r0, r0, #1
    e4ec:	f7fd fb8e 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    e4f0:	f88d 006a 	strb.w	r0, [sp, #106]	; 0x6a
    e4f4:	e7ff      	b.n	e4f6 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x9e>
    e4f6:	f89d 006a 	ldrb.w	r0, [sp, #106]	; 0x6a
    e4fa:	07c1      	lsls	r1, r0, #31
    e4fc:	2900      	cmp	r1, #0
    e4fe:	d00b      	beq.n	e518 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0xc0>
    e500:	e7ff      	b.n	e502 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0xaa>
    e502:	e000      	b.n	e506 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0xae>
    e504:	defe      	udf	#254	; 0xfe
    e506:	f001 fe41 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    e50a:	e7ff      	b.n	e50c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0xb4>
    e50c:	f7fd fee6 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    e510:	f88d 0062 	strb.w	r0, [sp, #98]	; 0x62
    e514:	e7ff      	b.n	e516 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0xbe>
    e516:	e7cc      	b.n	e4b2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5a>
        delay.delay_ms(200);
    e518:	9817      	ldr	r0, [sp, #92]	; 0x5c
    e51a:	21c8      	movs	r1, #200	; 0xc8
    e51c:	f7fd f909 	bl	b732 <_ZN87_$LT$mynewt..hal..Delay$u20$as$u20$embedded_hal..blocking..delay..DelayMs$LT$u8$GT$$GT$8delay_ms17h6a8836e3001d2629E>
    e520:	e7ff      	b.n	e522 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0xca>
        self.write_command(Instruction::SLPOUT, None)?;
    e522:	9816      	ldr	r0, [sp, #88]	; 0x58
    e524:	2111      	movs	r1, #17
    e526:	f88d 107b 	strb.w	r1, [sp, #123]	; 0x7b
    e52a:	2100      	movs	r1, #0
    e52c:	9120      	str	r1, [sp, #128]	; 0x80
    e52e:	911f      	str	r1, [sp, #124]	; 0x7c
    e530:	911f      	str	r1, [sp, #124]	; 0x7c
    e532:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
    e534:	9b20      	ldr	r3, [sp, #128]	; 0x80
    e536:	f89d 107b 	ldrb.w	r1, [sp, #123]	; 0x7b
    e53a:	f7ff fd36 	bl	dfaa <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E>
    e53e:	9012      	str	r0, [sp, #72]	; 0x48
    e540:	e7ff      	b.n	e542 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0xea>
    e542:	9812      	ldr	r0, [sp, #72]	; 0x48
    e544:	f000 0001 	and.w	r0, r0, #1
    e548:	f7fd fb60 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    e54c:	f88d 007a 	strb.w	r0, [sp, #122]	; 0x7a
    e550:	e7ff      	b.n	e552 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0xfa>
    e552:	f89d 007a 	ldrb.w	r0, [sp, #122]	; 0x7a
    e556:	07c1      	lsls	r1, r0, #31
    e558:	2900      	cmp	r1, #0
    e55a:	d00b      	beq.n	e574 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x11c>
    e55c:	e7ff      	b.n	e55e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x106>
    e55e:	e000      	b.n	e562 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x10a>
    e560:	defe      	udf	#254	; 0xfe
    e562:	f001 fe13 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    e566:	e7ff      	b.n	e568 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x110>
    e568:	f7fd feb8 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    e56c:	f88d 0062 	strb.w	r0, [sp, #98]	; 0x62
    e570:	e7ff      	b.n	e572 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x11a>
    e572:	e79e      	b.n	e4b2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5a>
        delay.delay_ms(200);
    e574:	9817      	ldr	r0, [sp, #92]	; 0x5c
    e576:	21c8      	movs	r1, #200	; 0xc8
    e578:	f7fd f8db 	bl	b732 <_ZN87_$LT$mynewt..hal..Delay$u20$as$u20$embedded_hal..blocking..delay..DelayMs$LT$u8$GT$$GT$8delay_ms17h6a8836e3001d2629E>
    e57c:	e7ff      	b.n	e57e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x126>
        self.write_command(Instruction::FRMCTR1, Some(&[0x01, 0x2C, 0x2D]))?;
    e57e:	9816      	ldr	r0, [sp, #88]	; 0x58
    e580:	21b1      	movs	r1, #177	; 0xb1
    e582:	f88d 108b 	strb.w	r1, [sp, #139]	; 0x8b
    e586:	f64d 01c0 	movw	r1, #55488	; 0xd8c0
    e58a:	f2c0 0101 	movt	r1, #1
    e58e:	6809      	ldr	r1, [r1, #0]
    e590:	9123      	str	r1, [sp, #140]	; 0x8c
    e592:	2103      	movs	r1, #3
    e594:	9124      	str	r1, [sp, #144]	; 0x90
    e596:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    e598:	9b24      	ldr	r3, [sp, #144]	; 0x90
    e59a:	f89d 108b 	ldrb.w	r1, [sp, #139]	; 0x8b
    e59e:	f7ff fd04 	bl	dfaa <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E>
    e5a2:	9011      	str	r0, [sp, #68]	; 0x44
    e5a4:	e7ff      	b.n	e5a6 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x14e>
    e5a6:	9811      	ldr	r0, [sp, #68]	; 0x44
    e5a8:	f000 0001 	and.w	r0, r0, #1
    e5ac:	f7fd fb2e 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    e5b0:	f88d 008a 	strb.w	r0, [sp, #138]	; 0x8a
    e5b4:	e7ff      	b.n	e5b6 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x15e>
    e5b6:	f89d 008a 	ldrb.w	r0, [sp, #138]	; 0x8a
    e5ba:	07c1      	lsls	r1, r0, #31
    e5bc:	2900      	cmp	r1, #0
    e5be:	d00b      	beq.n	e5d8 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x180>
    e5c0:	e7ff      	b.n	e5c2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x16a>
    e5c2:	e000      	b.n	e5c6 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x16e>
    e5c4:	defe      	udf	#254	; 0xfe
    e5c6:	f001 fde1 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    e5ca:	e7ff      	b.n	e5cc <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x174>
    e5cc:	f7fd fe86 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    e5d0:	f88d 0062 	strb.w	r0, [sp, #98]	; 0x62
    e5d4:	e7ff      	b.n	e5d6 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x17e>
    e5d6:	e76c      	b.n	e4b2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5a>
        self.write_command(Instruction::FRMCTR2, Some(&[0x01, 0x2C, 0x2D]))?;
    e5d8:	9816      	ldr	r0, [sp, #88]	; 0x58
    e5da:	21b2      	movs	r1, #178	; 0xb2
    e5dc:	f88d 109b 	strb.w	r1, [sp, #155]	; 0x9b
    e5e0:	f64d 01c0 	movw	r1, #55488	; 0xd8c0
    e5e4:	f2c0 0101 	movt	r1, #1
    e5e8:	6809      	ldr	r1, [r1, #0]
    e5ea:	9127      	str	r1, [sp, #156]	; 0x9c
    e5ec:	2103      	movs	r1, #3
    e5ee:	9128      	str	r1, [sp, #160]	; 0xa0
    e5f0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
    e5f2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
    e5f4:	f89d 109b 	ldrb.w	r1, [sp, #155]	; 0x9b
    e5f8:	f7ff fcd7 	bl	dfaa <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E>
    e5fc:	9010      	str	r0, [sp, #64]	; 0x40
    e5fe:	e7ff      	b.n	e600 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x1a8>
    e600:	9810      	ldr	r0, [sp, #64]	; 0x40
    e602:	f000 0001 	and.w	r0, r0, #1
    e606:	f7fd fb01 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    e60a:	f88d 009a 	strb.w	r0, [sp, #154]	; 0x9a
    e60e:	e7ff      	b.n	e610 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x1b8>
    e610:	f89d 009a 	ldrb.w	r0, [sp, #154]	; 0x9a
    e614:	07c1      	lsls	r1, r0, #31
    e616:	2900      	cmp	r1, #0
    e618:	d00b      	beq.n	e632 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x1da>
    e61a:	e7ff      	b.n	e61c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x1c4>
    e61c:	e000      	b.n	e620 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x1c8>
    e61e:	defe      	udf	#254	; 0xfe
    e620:	f001 fdb4 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    e624:	e7ff      	b.n	e626 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x1ce>
    e626:	f7fd fe59 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    e62a:	f88d 0062 	strb.w	r0, [sp, #98]	; 0x62
    e62e:	e7ff      	b.n	e630 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x1d8>
    e630:	e73f      	b.n	e4b2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5a>
        self.write_command(Instruction::FRMCTR3,
    e632:	9816      	ldr	r0, [sp, #88]	; 0x58
    e634:	21b3      	movs	r1, #179	; 0xb3
    e636:	f88d 10ab 	strb.w	r1, [sp, #171]	; 0xab
            Some(&[0x01, 0x2C, 0x2D, 0x01, 0x2C, 0x2D]))?;
    e63a:	f64d 01cc 	movw	r1, #55500	; 0xd8cc
    e63e:	f2c0 0101 	movt	r1, #1
    e642:	6809      	ldr	r1, [r1, #0]
    e644:	912b      	str	r1, [sp, #172]	; 0xac
    e646:	2106      	movs	r1, #6
    e648:	912c      	str	r1, [sp, #176]	; 0xb0
        self.write_command(Instruction::FRMCTR3,
    e64a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
    e64c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
    e64e:	f89d 10ab 	ldrb.w	r1, [sp, #171]	; 0xab
    e652:	f7ff fcaa 	bl	dfaa <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E>
    e656:	900f      	str	r0, [sp, #60]	; 0x3c
    e658:	e7ff      	b.n	e65a <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x202>
    e65a:	980f      	ldr	r0, [sp, #60]	; 0x3c
    e65c:	f000 0001 	and.w	r0, r0, #1
    e660:	f7fd fad4 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    e664:	f88d 00aa 	strb.w	r0, [sp, #170]	; 0xaa
    e668:	e7ff      	b.n	e66a <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x212>
            Some(&[0x01, 0x2C, 0x2D, 0x01, 0x2C, 0x2D]))?;
    e66a:	f89d 00aa 	ldrb.w	r0, [sp, #170]	; 0xaa
    e66e:	07c1      	lsls	r1, r0, #31
    e670:	2900      	cmp	r1, #0
    e672:	d00b      	beq.n	e68c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x234>
    e674:	e7ff      	b.n	e676 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x21e>
    e676:	e000      	b.n	e67a <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x222>
        self.write_command(Instruction::FRMCTR3,
    e678:	defe      	udf	#254	; 0xfe
            Some(&[0x01, 0x2C, 0x2D, 0x01, 0x2C, 0x2D]))?;
    e67a:	f001 fd87 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    e67e:	e7ff      	b.n	e680 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x228>
    e680:	f7fd fe2c 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    e684:	f88d 0062 	strb.w	r0, [sp, #98]	; 0x62
    e688:	e7ff      	b.n	e68a <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x232>
    e68a:	e712      	b.n	e4b2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5a>
        self.write_command(Instruction::INVCTR, Some(&[0x07]))?;
    e68c:	9816      	ldr	r0, [sp, #88]	; 0x58
    e68e:	21b4      	movs	r1, #180	; 0xb4
    e690:	f88d 10bb 	strb.w	r1, [sp, #187]	; 0xbb
    e694:	f64d 01d4 	movw	r1, #55508	; 0xd8d4
    e698:	f2c0 0101 	movt	r1, #1
    e69c:	6809      	ldr	r1, [r1, #0]
    e69e:	912f      	str	r1, [sp, #188]	; 0xbc
    e6a0:	2101      	movs	r1, #1
    e6a2:	9130      	str	r1, [sp, #192]	; 0xc0
    e6a4:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
    e6a6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
    e6a8:	f89d 10bb 	ldrb.w	r1, [sp, #187]	; 0xbb
    e6ac:	f7ff fc7d 	bl	dfaa <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E>
    e6b0:	900e      	str	r0, [sp, #56]	; 0x38
    e6b2:	e7ff      	b.n	e6b4 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x25c>
    e6b4:	980e      	ldr	r0, [sp, #56]	; 0x38
    e6b6:	f000 0001 	and.w	r0, r0, #1
    e6ba:	f7fd faa7 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    e6be:	f88d 00ba 	strb.w	r0, [sp, #186]	; 0xba
    e6c2:	e7ff      	b.n	e6c4 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x26c>
    e6c4:	f89d 00ba 	ldrb.w	r0, [sp, #186]	; 0xba
    e6c8:	07c1      	lsls	r1, r0, #31
    e6ca:	2900      	cmp	r1, #0
    e6cc:	d00b      	beq.n	e6e6 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x28e>
    e6ce:	e7ff      	b.n	e6d0 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x278>
    e6d0:	e000      	b.n	e6d4 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x27c>
    e6d2:	defe      	udf	#254	; 0xfe
    e6d4:	f001 fd5a 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    e6d8:	e7ff      	b.n	e6da <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x282>
    e6da:	f7fd fdff 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    e6de:	f88d 0062 	strb.w	r0, [sp, #98]	; 0x62
    e6e2:	e7ff      	b.n	e6e4 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x28c>
    e6e4:	e6e5      	b.n	e4b2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5a>
        self.write_command(Instruction::PWCTR1, Some(&[0xA2, 0x02, 0x84]))?;
    e6e6:	9816      	ldr	r0, [sp, #88]	; 0x58
    e6e8:	21c0      	movs	r1, #192	; 0xc0
    e6ea:	f88d 10cb 	strb.w	r1, [sp, #203]	; 0xcb
    e6ee:	f64d 01dc 	movw	r1, #55516	; 0xd8dc
    e6f2:	f2c0 0101 	movt	r1, #1
    e6f6:	6809      	ldr	r1, [r1, #0]
    e6f8:	9133      	str	r1, [sp, #204]	; 0xcc
    e6fa:	2103      	movs	r1, #3
    e6fc:	9134      	str	r1, [sp, #208]	; 0xd0
    e6fe:	9a33      	ldr	r2, [sp, #204]	; 0xcc
    e700:	9b34      	ldr	r3, [sp, #208]	; 0xd0
    e702:	f89d 10cb 	ldrb.w	r1, [sp, #203]	; 0xcb
    e706:	f7ff fc50 	bl	dfaa <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E>
    e70a:	900d      	str	r0, [sp, #52]	; 0x34
    e70c:	e7ff      	b.n	e70e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x2b6>
    e70e:	980d      	ldr	r0, [sp, #52]	; 0x34
    e710:	f000 0001 	and.w	r0, r0, #1
    e714:	f7fd fa7a 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    e718:	f88d 00ca 	strb.w	r0, [sp, #202]	; 0xca
    e71c:	e7ff      	b.n	e71e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x2c6>
    e71e:	f89d 00ca 	ldrb.w	r0, [sp, #202]	; 0xca
    e722:	07c1      	lsls	r1, r0, #31
    e724:	2900      	cmp	r1, #0
    e726:	d00b      	beq.n	e740 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x2e8>
    e728:	e7ff      	b.n	e72a <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x2d2>
    e72a:	e000      	b.n	e72e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x2d6>
    e72c:	defe      	udf	#254	; 0xfe
    e72e:	f001 fd2d 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    e732:	e7ff      	b.n	e734 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x2dc>
    e734:	f7fd fdd2 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    e738:	f88d 0062 	strb.w	r0, [sp, #98]	; 0x62
    e73c:	e7ff      	b.n	e73e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x2e6>
    e73e:	e6b8      	b.n	e4b2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5a>
        self.write_command(Instruction::PWCTR2, Some(&[0xC5]))?;
    e740:	9816      	ldr	r0, [sp, #88]	; 0x58
    e742:	21c1      	movs	r1, #193	; 0xc1
    e744:	f88d 10db 	strb.w	r1, [sp, #219]	; 0xdb
    e748:	f64d 01e4 	movw	r1, #55524	; 0xd8e4
    e74c:	f2c0 0101 	movt	r1, #1
    e750:	6809      	ldr	r1, [r1, #0]
    e752:	9137      	str	r1, [sp, #220]	; 0xdc
    e754:	2101      	movs	r1, #1
    e756:	9138      	str	r1, [sp, #224]	; 0xe0
    e758:	9a37      	ldr	r2, [sp, #220]	; 0xdc
    e75a:	9b38      	ldr	r3, [sp, #224]	; 0xe0
    e75c:	f89d 10db 	ldrb.w	r1, [sp, #219]	; 0xdb
    e760:	f7ff fc23 	bl	dfaa <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E>
    e764:	900c      	str	r0, [sp, #48]	; 0x30
    e766:	e7ff      	b.n	e768 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x310>
    e768:	980c      	ldr	r0, [sp, #48]	; 0x30
    e76a:	f000 0001 	and.w	r0, r0, #1
    e76e:	f7fd fa4d 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    e772:	f88d 00da 	strb.w	r0, [sp, #218]	; 0xda
    e776:	e7ff      	b.n	e778 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x320>
    e778:	f89d 00da 	ldrb.w	r0, [sp, #218]	; 0xda
    e77c:	07c1      	lsls	r1, r0, #31
    e77e:	2900      	cmp	r1, #0
    e780:	d00b      	beq.n	e79a <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x342>
    e782:	e7ff      	b.n	e784 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x32c>
    e784:	e000      	b.n	e788 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x330>
    e786:	defe      	udf	#254	; 0xfe
    e788:	f001 fd00 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    e78c:	e7ff      	b.n	e78e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x336>
    e78e:	f7fd fda5 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    e792:	f88d 0062 	strb.w	r0, [sp, #98]	; 0x62
    e796:	e7ff      	b.n	e798 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x340>
    e798:	e68b      	b.n	e4b2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5a>
        self.write_command(Instruction::PWCTR3, Some(&[0x0A, 0x00]))?;
    e79a:	9816      	ldr	r0, [sp, #88]	; 0x58
    e79c:	21c2      	movs	r1, #194	; 0xc2
    e79e:	f88d 10eb 	strb.w	r1, [sp, #235]	; 0xeb
    e7a2:	f64d 01ec 	movw	r1, #55532	; 0xd8ec
    e7a6:	f2c0 0101 	movt	r1, #1
    e7aa:	6809      	ldr	r1, [r1, #0]
    e7ac:	913b      	str	r1, [sp, #236]	; 0xec
    e7ae:	2102      	movs	r1, #2
    e7b0:	913c      	str	r1, [sp, #240]	; 0xf0
    e7b2:	9a3b      	ldr	r2, [sp, #236]	; 0xec
    e7b4:	9b3c      	ldr	r3, [sp, #240]	; 0xf0
    e7b6:	f89d 10eb 	ldrb.w	r1, [sp, #235]	; 0xeb
    e7ba:	f7ff fbf6 	bl	dfaa <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E>
    e7be:	900b      	str	r0, [sp, #44]	; 0x2c
    e7c0:	e7ff      	b.n	e7c2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x36a>
    e7c2:	980b      	ldr	r0, [sp, #44]	; 0x2c
    e7c4:	f000 0001 	and.w	r0, r0, #1
    e7c8:	f7fd fa20 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    e7cc:	f88d 00ea 	strb.w	r0, [sp, #234]	; 0xea
    e7d0:	e7ff      	b.n	e7d2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x37a>
    e7d2:	f89d 00ea 	ldrb.w	r0, [sp, #234]	; 0xea
    e7d6:	07c1      	lsls	r1, r0, #31
    e7d8:	2900      	cmp	r1, #0
    e7da:	d00b      	beq.n	e7f4 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x39c>
    e7dc:	e7ff      	b.n	e7de <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x386>
    e7de:	e000      	b.n	e7e2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x38a>
    e7e0:	defe      	udf	#254	; 0xfe
    e7e2:	f001 fcd3 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    e7e6:	e7ff      	b.n	e7e8 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x390>
    e7e8:	f7fd fd78 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    e7ec:	f88d 0062 	strb.w	r0, [sp, #98]	; 0x62
    e7f0:	e7ff      	b.n	e7f2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x39a>
    e7f2:	e65e      	b.n	e4b2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5a>
        self.write_command(Instruction::PWCTR4, Some(&[0x8A, 0x2A]))?;
    e7f4:	9816      	ldr	r0, [sp, #88]	; 0x58
    e7f6:	21c3      	movs	r1, #195	; 0xc3
    e7f8:	f88d 10fb 	strb.w	r1, [sp, #251]	; 0xfb
    e7fc:	f64d 01f4 	movw	r1, #55540	; 0xd8f4
    e800:	f2c0 0101 	movt	r1, #1
    e804:	6809      	ldr	r1, [r1, #0]
    e806:	913f      	str	r1, [sp, #252]	; 0xfc
    e808:	2102      	movs	r1, #2
    e80a:	9140      	str	r1, [sp, #256]	; 0x100
    e80c:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
    e80e:	9b40      	ldr	r3, [sp, #256]	; 0x100
    e810:	f89d 10fb 	ldrb.w	r1, [sp, #251]	; 0xfb
    e814:	f7ff fbc9 	bl	dfaa <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E>
    e818:	900a      	str	r0, [sp, #40]	; 0x28
    e81a:	e7ff      	b.n	e81c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x3c4>
    e81c:	980a      	ldr	r0, [sp, #40]	; 0x28
    e81e:	f000 0001 	and.w	r0, r0, #1
    e822:	f7fd f9f3 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    e826:	f88d 00fa 	strb.w	r0, [sp, #250]	; 0xfa
    e82a:	e7ff      	b.n	e82c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x3d4>
    e82c:	f89d 00fa 	ldrb.w	r0, [sp, #250]	; 0xfa
    e830:	07c1      	lsls	r1, r0, #31
    e832:	2900      	cmp	r1, #0
    e834:	d00b      	beq.n	e84e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x3f6>
    e836:	e7ff      	b.n	e838 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x3e0>
    e838:	e000      	b.n	e83c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x3e4>
    e83a:	defe      	udf	#254	; 0xfe
    e83c:	f001 fca6 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    e840:	e7ff      	b.n	e842 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x3ea>
    e842:	f7fd fd4b 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    e846:	f88d 0062 	strb.w	r0, [sp, #98]	; 0x62
    e84a:	e7ff      	b.n	e84c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x3f4>
    e84c:	e631      	b.n	e4b2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5a>
        self.write_command(Instruction::PWCTR5, Some(&[0x8A, 0xEE]))?;
    e84e:	9816      	ldr	r0, [sp, #88]	; 0x58
    e850:	21c4      	movs	r1, #196	; 0xc4
    e852:	f88d 110b 	strb.w	r1, [sp, #267]	; 0x10b
    e856:	f64d 01fc 	movw	r1, #55548	; 0xd8fc
    e85a:	f2c0 0101 	movt	r1, #1
    e85e:	6809      	ldr	r1, [r1, #0]
    e860:	9143      	str	r1, [sp, #268]	; 0x10c
    e862:	2102      	movs	r1, #2
    e864:	9144      	str	r1, [sp, #272]	; 0x110
    e866:	9a43      	ldr	r2, [sp, #268]	; 0x10c
    e868:	9b44      	ldr	r3, [sp, #272]	; 0x110
    e86a:	f89d 110b 	ldrb.w	r1, [sp, #267]	; 0x10b
    e86e:	f7ff fb9c 	bl	dfaa <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E>
    e872:	9009      	str	r0, [sp, #36]	; 0x24
    e874:	e7ff      	b.n	e876 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x41e>
    e876:	9809      	ldr	r0, [sp, #36]	; 0x24
    e878:	f000 0001 	and.w	r0, r0, #1
    e87c:	f7fd f9c6 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    e880:	f88d 010a 	strb.w	r0, [sp, #266]	; 0x10a
    e884:	e7ff      	b.n	e886 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x42e>
    e886:	f89d 010a 	ldrb.w	r0, [sp, #266]	; 0x10a
    e88a:	07c1      	lsls	r1, r0, #31
    e88c:	2900      	cmp	r1, #0
    e88e:	d00b      	beq.n	e8a8 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x450>
    e890:	e7ff      	b.n	e892 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x43a>
    e892:	e000      	b.n	e896 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x43e>
    e894:	defe      	udf	#254	; 0xfe
    e896:	f001 fc79 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    e89a:	e7ff      	b.n	e89c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x444>
    e89c:	f7fd fd1e 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    e8a0:	f88d 0062 	strb.w	r0, [sp, #98]	; 0x62
    e8a4:	e7ff      	b.n	e8a6 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x44e>
    e8a6:	e604      	b.n	e4b2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5a>
        self.write_command(Instruction::VMCTR1, Some(&[0x0E]))?;
    e8a8:	9816      	ldr	r0, [sp, #88]	; 0x58
    e8aa:	21c5      	movs	r1, #197	; 0xc5
    e8ac:	f88d 111b 	strb.w	r1, [sp, #283]	; 0x11b
    e8b0:	f64d 1104 	movw	r1, #55556	; 0xd904
    e8b4:	f2c0 0101 	movt	r1, #1
    e8b8:	6809      	ldr	r1, [r1, #0]
    e8ba:	9147      	str	r1, [sp, #284]	; 0x11c
    e8bc:	2101      	movs	r1, #1
    e8be:	9148      	str	r1, [sp, #288]	; 0x120
    e8c0:	9a47      	ldr	r2, [sp, #284]	; 0x11c
    e8c2:	9b48      	ldr	r3, [sp, #288]	; 0x120
    e8c4:	f89d 111b 	ldrb.w	r1, [sp, #283]	; 0x11b
    e8c8:	f7ff fb6f 	bl	dfaa <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E>
    e8cc:	9008      	str	r0, [sp, #32]
    e8ce:	e7ff      	b.n	e8d0 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x478>
    e8d0:	9808      	ldr	r0, [sp, #32]
    e8d2:	f000 0001 	and.w	r0, r0, #1
    e8d6:	f7fd f999 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    e8da:	f88d 011a 	strb.w	r0, [sp, #282]	; 0x11a
    e8de:	e7ff      	b.n	e8e0 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x488>
    e8e0:	f89d 011a 	ldrb.w	r0, [sp, #282]	; 0x11a
    e8e4:	07c1      	lsls	r1, r0, #31
    e8e6:	2900      	cmp	r1, #0
    e8e8:	d00b      	beq.n	e902 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x4aa>
    e8ea:	e7ff      	b.n	e8ec <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x494>
    e8ec:	e000      	b.n	e8f0 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x498>
    e8ee:	defe      	udf	#254	; 0xfe
    e8f0:	f001 fc4c 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    e8f4:	e7ff      	b.n	e8f6 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x49e>
    e8f6:	f7fd fcf1 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    e8fa:	f88d 0062 	strb.w	r0, [sp, #98]	; 0x62
    e8fe:	e7ff      	b.n	e900 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x4a8>
    e900:	e5d7      	b.n	e4b2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5a>
        if self.inverted {
    e902:	9816      	ldr	r0, [sp, #88]	; 0x58
    e904:	7d40      	ldrb	r0, [r0, #21]
    e906:	07c0      	lsls	r0, r0, #31
    e908:	2800      	cmp	r0, #0
    e90a:	d110      	bne.n	e92e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x4d6>
    e90c:	e7ff      	b.n	e90e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x4b6>
            self.write_command(Instruction::INVOFF, None)?;
    e90e:	9816      	ldr	r0, [sp, #88]	; 0x58
    e910:	2120      	movs	r1, #32
    e912:	f88d 113b 	strb.w	r1, [sp, #315]	; 0x13b
    e916:	2100      	movs	r1, #0
    e918:	9150      	str	r1, [sp, #320]	; 0x140
    e91a:	914f      	str	r1, [sp, #316]	; 0x13c
    e91c:	914f      	str	r1, [sp, #316]	; 0x13c
    e91e:	9a4f      	ldr	r2, [sp, #316]	; 0x13c
    e920:	9b50      	ldr	r3, [sp, #320]	; 0x140
    e922:	f89d 113b 	ldrb.w	r1, [sp, #315]	; 0x13b
    e926:	f7ff fb40 	bl	dfaa <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E>
    e92a:	9007      	str	r0, [sp, #28]
    e92c:	e02a      	b.n	e984 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x52c>
            self.write_command(Instruction::INVON, None)?;
    e92e:	9816      	ldr	r0, [sp, #88]	; 0x58
    e930:	2121      	movs	r1, #33	; 0x21
    e932:	f88d 112b 	strb.w	r1, [sp, #299]	; 0x12b
    e936:	2100      	movs	r1, #0
    e938:	914c      	str	r1, [sp, #304]	; 0x130
    e93a:	914b      	str	r1, [sp, #300]	; 0x12c
    e93c:	914b      	str	r1, [sp, #300]	; 0x12c
    e93e:	9a4b      	ldr	r2, [sp, #300]	; 0x12c
    e940:	9b4c      	ldr	r3, [sp, #304]	; 0x130
    e942:	f89d 112b 	ldrb.w	r1, [sp, #299]	; 0x12b
    e946:	f7ff fb30 	bl	dfaa <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E>
    e94a:	9006      	str	r0, [sp, #24]
    e94c:	e7ff      	b.n	e94e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x4f6>
    e94e:	9806      	ldr	r0, [sp, #24]
    e950:	f000 0001 	and.w	r0, r0, #1
    e954:	f7fd f95a 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    e958:	f88d 012a 	strb.w	r0, [sp, #298]	; 0x12a
    e95c:	e7ff      	b.n	e95e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x506>
    e95e:	f89d 012a 	ldrb.w	r0, [sp, #298]	; 0x12a
    e962:	07c1      	lsls	r1, r0, #31
    e964:	2900      	cmp	r1, #0
    e966:	d00c      	beq.n	e982 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x52a>
    e968:	e7ff      	b.n	e96a <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x512>
    e96a:	e000      	b.n	e96e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x516>
    e96c:	defe      	udf	#254	; 0xfe
    e96e:	f001 fc0d 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    e972:	e7ff      	b.n	e974 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x51c>
    e974:	f7fd fcb2 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    e978:	f88d 0062 	strb.w	r0, [sp, #98]	; 0x62
    e97c:	e7ff      	b.n	e97e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x526>
    e97e:	e7ff      	b.n	e980 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x528>
    e980:	e597      	b.n	e4b2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5a>
        if self.inverted {
    e982:	e019      	b.n	e9b8 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x560>
            self.write_command(Instruction::INVOFF, None)?;
    e984:	9807      	ldr	r0, [sp, #28]
    e986:	f000 0001 	and.w	r0, r0, #1
    e98a:	f7fd f93f 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    e98e:	f88d 013a 	strb.w	r0, [sp, #314]	; 0x13a
    e992:	e7ff      	b.n	e994 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x53c>
    e994:	f89d 013a 	ldrb.w	r0, [sp, #314]	; 0x13a
    e998:	07c1      	lsls	r1, r0, #31
    e99a:	2900      	cmp	r1, #0
    e99c:	d00b      	beq.n	e9b6 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x55e>
    e99e:	e7ff      	b.n	e9a0 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x548>
    e9a0:	e000      	b.n	e9a4 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x54c>
    e9a2:	defe      	udf	#254	; 0xfe
    e9a4:	f001 fbf2 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    e9a8:	e7ff      	b.n	e9aa <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x552>
    e9aa:	f7fd fc97 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    e9ae:	f88d 0062 	strb.w	r0, [sp, #98]	; 0x62
    e9b2:	e7ff      	b.n	e9b4 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x55c>
    e9b4:	e7e4      	b.n	e980 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x528>
        if self.inverted {
    e9b6:	e7ff      	b.n	e9b8 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x560>
        if self.rgb {
    e9b8:	9816      	ldr	r0, [sp, #88]	; 0x58
    e9ba:	7d00      	ldrb	r0, [r0, #20]
    e9bc:	07c0      	lsls	r0, r0, #31
    e9be:	2800      	cmp	r0, #0
    e9c0:	d114      	bne.n	e9ec <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x594>
    e9c2:	e7ff      	b.n	e9c4 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x56c>
            self.write_command(Instruction::MADCTL, Some(&[0x08]))?;
    e9c4:	9816      	ldr	r0, [sp, #88]	; 0x58
    e9c6:	2136      	movs	r1, #54	; 0x36
    e9c8:	f88d 115b 	strb.w	r1, [sp, #347]	; 0x15b
    e9cc:	f64d 1114 	movw	r1, #55572	; 0xd914
    e9d0:	f2c0 0101 	movt	r1, #1
    e9d4:	6809      	ldr	r1, [r1, #0]
    e9d6:	9157      	str	r1, [sp, #348]	; 0x15c
    e9d8:	2101      	movs	r1, #1
    e9da:	9158      	str	r1, [sp, #352]	; 0x160
    e9dc:	9a57      	ldr	r2, [sp, #348]	; 0x15c
    e9de:	9b58      	ldr	r3, [sp, #352]	; 0x160
    e9e0:	f89d 115b 	ldrb.w	r1, [sp, #347]	; 0x15b
    e9e4:	f7ff fae1 	bl	dfaa <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E>
    e9e8:	9005      	str	r0, [sp, #20]
    e9ea:	e02e      	b.n	ea4a <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5f2>
            self.write_command(Instruction::MADCTL, Some(&[0x00]))?;
    e9ec:	9816      	ldr	r0, [sp, #88]	; 0x58
    e9ee:	2136      	movs	r1, #54	; 0x36
    e9f0:	f88d 114b 	strb.w	r1, [sp, #331]	; 0x14b
    e9f4:	f64d 110c 	movw	r1, #55564	; 0xd90c
    e9f8:	f2c0 0101 	movt	r1, #1
    e9fc:	6809      	ldr	r1, [r1, #0]
    e9fe:	9153      	str	r1, [sp, #332]	; 0x14c
    ea00:	2101      	movs	r1, #1
    ea02:	9154      	str	r1, [sp, #336]	; 0x150
    ea04:	9a53      	ldr	r2, [sp, #332]	; 0x14c
    ea06:	9b54      	ldr	r3, [sp, #336]	; 0x150
    ea08:	f89d 114b 	ldrb.w	r1, [sp, #331]	; 0x14b
    ea0c:	f7ff facd 	bl	dfaa <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E>
    ea10:	9004      	str	r0, [sp, #16]
    ea12:	e7ff      	b.n	ea14 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5bc>
    ea14:	9804      	ldr	r0, [sp, #16]
    ea16:	f000 0001 	and.w	r0, r0, #1
    ea1a:	f7fd f8f7 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    ea1e:	f88d 014a 	strb.w	r0, [sp, #330]	; 0x14a
    ea22:	e7ff      	b.n	ea24 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5cc>
    ea24:	f89d 014a 	ldrb.w	r0, [sp, #330]	; 0x14a
    ea28:	07c1      	lsls	r1, r0, #31
    ea2a:	2900      	cmp	r1, #0
    ea2c:	d00c      	beq.n	ea48 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5f0>
    ea2e:	e7ff      	b.n	ea30 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5d8>
    ea30:	e000      	b.n	ea34 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5dc>
    ea32:	defe      	udf	#254	; 0xfe
    ea34:	f001 fbaa 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    ea38:	e7ff      	b.n	ea3a <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5e2>
    ea3a:	f7fd fc4f 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    ea3e:	f88d 0062 	strb.w	r0, [sp, #98]	; 0x62
    ea42:	e7ff      	b.n	ea44 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5ec>
    ea44:	e7ff      	b.n	ea46 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5ee>
    ea46:	e534      	b.n	e4b2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5a>
        if self.rgb {
    ea48:	e019      	b.n	ea7e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x626>
            self.write_command(Instruction::MADCTL, Some(&[0x08]))?;
    ea4a:	9805      	ldr	r0, [sp, #20]
    ea4c:	f000 0001 	and.w	r0, r0, #1
    ea50:	f7fd f8dc 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    ea54:	f88d 015a 	strb.w	r0, [sp, #346]	; 0x15a
    ea58:	e7ff      	b.n	ea5a <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x602>
    ea5a:	f89d 015a 	ldrb.w	r0, [sp, #346]	; 0x15a
    ea5e:	07c1      	lsls	r1, r0, #31
    ea60:	2900      	cmp	r1, #0
    ea62:	d00b      	beq.n	ea7c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x624>
    ea64:	e7ff      	b.n	ea66 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x60e>
    ea66:	e000      	b.n	ea6a <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x612>
    ea68:	defe      	udf	#254	; 0xfe
    ea6a:	f001 fb8f 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    ea6e:	e7ff      	b.n	ea70 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x618>
    ea70:	f7fd fc34 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    ea74:	f88d 0062 	strb.w	r0, [sp, #98]	; 0x62
    ea78:	e7ff      	b.n	ea7a <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x622>
    ea7a:	e7e4      	b.n	ea46 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5ee>
        if self.rgb {
    ea7c:	e7ff      	b.n	ea7e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x626>
        self.write_command(Instruction::COLMOD, Some(&[0x05]))?;
    ea7e:	9816      	ldr	r0, [sp, #88]	; 0x58
    ea80:	213a      	movs	r1, #58	; 0x3a
    ea82:	f88d 116b 	strb.w	r1, [sp, #363]	; 0x16b
    ea86:	f64d 111c 	movw	r1, #55580	; 0xd91c
    ea8a:	f2c0 0101 	movt	r1, #1
    ea8e:	6809      	ldr	r1, [r1, #0]
    ea90:	915b      	str	r1, [sp, #364]	; 0x16c
    ea92:	2101      	movs	r1, #1
    ea94:	915c      	str	r1, [sp, #368]	; 0x170
    ea96:	9a5b      	ldr	r2, [sp, #364]	; 0x16c
    ea98:	9b5c      	ldr	r3, [sp, #368]	; 0x170
    ea9a:	f89d 116b 	ldrb.w	r1, [sp, #363]	; 0x16b
    ea9e:	f7ff fa84 	bl	dfaa <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E>
    eaa2:	9003      	str	r0, [sp, #12]
    eaa4:	e7ff      	b.n	eaa6 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x64e>
    eaa6:	9803      	ldr	r0, [sp, #12]
    eaa8:	f000 0001 	and.w	r0, r0, #1
    eaac:	f7fd f8ae 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    eab0:	f88d 016a 	strb.w	r0, [sp, #362]	; 0x16a
    eab4:	e7ff      	b.n	eab6 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x65e>
    eab6:	f89d 016a 	ldrb.w	r0, [sp, #362]	; 0x16a
    eaba:	07c1      	lsls	r1, r0, #31
    eabc:	2900      	cmp	r1, #0
    eabe:	d00b      	beq.n	ead8 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x680>
    eac0:	e7ff      	b.n	eac2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x66a>
    eac2:	e000      	b.n	eac6 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x66e>
    eac4:	defe      	udf	#254	; 0xfe
    eac6:	f001 fb61 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    eaca:	e7ff      	b.n	eacc <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x674>
    eacc:	f7fd fc06 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    ead0:	f88d 0062 	strb.w	r0, [sp, #98]	; 0x62
    ead4:	e7ff      	b.n	ead6 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x67e>
    ead6:	e4ec      	b.n	e4b2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5a>
        self.write_command(Instruction::DISPON, None)?;
    ead8:	9816      	ldr	r0, [sp, #88]	; 0x58
    eada:	2129      	movs	r1, #41	; 0x29
    eadc:	f88d 117b 	strb.w	r1, [sp, #379]	; 0x17b
    eae0:	2100      	movs	r1, #0
    eae2:	9160      	str	r1, [sp, #384]	; 0x180
    eae4:	915f      	str	r1, [sp, #380]	; 0x17c
    eae6:	915f      	str	r1, [sp, #380]	; 0x17c
    eae8:	9a5f      	ldr	r2, [sp, #380]	; 0x17c
    eaea:	9b60      	ldr	r3, [sp, #384]	; 0x180
    eaec:	f89d 117b 	ldrb.w	r1, [sp, #379]	; 0x17b
    eaf0:	f7ff fa5b 	bl	dfaa <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$13write_command17hbaa0159d95f76cd9E>
    eaf4:	9002      	str	r0, [sp, #8]
    eaf6:	e7ff      	b.n	eaf8 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x6a0>
    eaf8:	9802      	ldr	r0, [sp, #8]
    eafa:	f000 0001 	and.w	r0, r0, #1
    eafe:	f7fd f885 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    eb02:	f88d 017a 	strb.w	r0, [sp, #378]	; 0x17a
    eb06:	e7ff      	b.n	eb08 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x6b0>
    eb08:	f89d 017a 	ldrb.w	r0, [sp, #378]	; 0x17a
    eb0c:	07c1      	lsls	r1, r0, #31
    eb0e:	2900      	cmp	r1, #0
    eb10:	d00b      	beq.n	eb2a <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x6d2>
    eb12:	e7ff      	b.n	eb14 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x6bc>
    eb14:	e000      	b.n	eb18 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x6c0>
    eb16:	defe      	udf	#254	; 0xfe
    eb18:	f001 fb38 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    eb1c:	e7ff      	b.n	eb1e <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x6c6>
    eb1e:	f7fd fbdd 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    eb22:	f88d 0062 	strb.w	r0, [sp, #98]	; 0x62
    eb26:	e7ff      	b.n	eb28 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x6d0>
    eb28:	e4c3      	b.n	e4b2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5a>
        delay.delay_ms(200);
    eb2a:	9817      	ldr	r0, [sp, #92]	; 0x5c
    eb2c:	21c8      	movs	r1, #200	; 0xc8
    eb2e:	f7fc fe00 	bl	b732 <_ZN87_$LT$mynewt..hal..Delay$u20$as$u20$embedded_hal..blocking..delay..DelayMs$LT$u8$GT$$GT$8delay_ms17h6a8836e3001d2629E>
    eb32:	e7ff      	b.n	eb34 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x6dc>
        mynewt::spi::spi_noblock_write_flush()  //  Enqueue the pending SPI request
    eb34:	f002 fae9 	bl	1110a <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E>
    eb38:	9001      	str	r0, [sp, #4]
    eb3a:	e7ff      	b.n	eb3c <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x6e4>
    eb3c:	f24d 712c 	movw	r1, #55084	; 0xd72c
    eb40:	f2c0 0101 	movt	r1, #1
    eb44:	f64d 1320 	movw	r3, #55584	; 0xd920
    eb48:	f2c0 0301 	movt	r3, #1
    eb4c:	220e      	movs	r2, #14
    eb4e:	9801      	ldr	r0, [sp, #4]
    eb50:	f7fd f824 	bl	bb9c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hca4739a9a91ec005E>
    eb54:	e7ff      	b.n	eb56 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x6fe>
    eb56:	2000      	movs	r0, #0
        Ok(())
    eb58:	f88d 0062 	strb.w	r0, [sp, #98]	; 0x62
    }
    eb5c:	e4a9      	b.n	e4b2 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$4init17h4866e76a2a38e297E+0x5a>

0000eb5e <_ZN10st7735_lcd37_IMPL_NUM_ToPrimitive_FOR_Orientation83_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..Orientation$GT$6to_i6417h65f8b25e7b21ad28E>:
#[derive(ToPrimitive)]
    eb5e:	b088      	sub	sp, #32
    eb60:	9001      	str	r0, [sp, #4]
pub enum Orientation {
    eb62:	9801      	ldr	r0, [sp, #4]
    eb64:	7800      	ldrb	r0, [r0, #0]
    eb66:	4601      	mov	r1, r0
    eb68:	2800      	cmp	r0, #0
    eb6a:	9100      	str	r1, [sp, #0]
    eb6c:	d00f      	beq.n	eb8e <_ZN10st7735_lcd37_IMPL_NUM_ToPrimitive_FOR_Orientation83_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..Orientation$GT$6to_i6417h65f8b25e7b21ad28E+0x30>
    eb6e:	e7ff      	b.n	eb70 <_ZN10st7735_lcd37_IMPL_NUM_ToPrimitive_FOR_Orientation83_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..Orientation$GT$6to_i6417h65f8b25e7b21ad28E+0x12>
    eb70:	9800      	ldr	r0, [sp, #0]
    eb72:	2860      	cmp	r0, #96	; 0x60
    eb74:	d00f      	beq.n	eb96 <_ZN10st7735_lcd37_IMPL_NUM_ToPrimitive_FOR_Orientation83_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..Orientation$GT$6to_i6417h65f8b25e7b21ad28E+0x38>
    eb76:	e7ff      	b.n	eb78 <_ZN10st7735_lcd37_IMPL_NUM_ToPrimitive_FOR_Orientation83_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..Orientation$GT$6to_i6417h65f8b25e7b21ad28E+0x1a>
    eb78:	9800      	ldr	r0, [sp, #0]
    eb7a:	28a0      	cmp	r0, #160	; 0xa0
    eb7c:	d001      	beq.n	eb82 <_ZN10st7735_lcd37_IMPL_NUM_ToPrimitive_FOR_Orientation83_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..Orientation$GT$6to_i6417h65f8b25e7b21ad28E+0x24>
    eb7e:	e7ff      	b.n	eb80 <_ZN10st7735_lcd37_IMPL_NUM_ToPrimitive_FOR_Orientation83_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..Orientation$GT$6to_i6417h65f8b25e7b21ad28E+0x22>
    eb80:	e00e      	b.n	eba0 <_ZN10st7735_lcd37_IMPL_NUM_ToPrimitive_FOR_Orientation83_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..Orientation$GT$6to_i6417h65f8b25e7b21ad28E+0x42>
    eb82:	2000      	movs	r0, #0
#[derive(ToPrimitive)]
    eb84:	9007      	str	r0, [sp, #28]
    eb86:	20a0      	movs	r0, #160	; 0xa0
    eb88:	9006      	str	r0, [sp, #24]
    eb8a:	e00e      	b.n	ebaa <_ZN10st7735_lcd37_IMPL_NUM_ToPrimitive_FOR_Orientation83_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..Orientation$GT$6to_i6417h65f8b25e7b21ad28E+0x4c>
    eb8c:	defe      	udf	#254	; 0xfe
    eb8e:	2000      	movs	r0, #0
    eb90:	9007      	str	r0, [sp, #28]
    eb92:	9006      	str	r0, [sp, #24]
    eb94:	e009      	b.n	ebaa <_ZN10st7735_lcd37_IMPL_NUM_ToPrimitive_FOR_Orientation83_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..Orientation$GT$6to_i6417h65f8b25e7b21ad28E+0x4c>
    eb96:	2000      	movs	r0, #0
    eb98:	9007      	str	r0, [sp, #28]
    eb9a:	2060      	movs	r0, #96	; 0x60
    eb9c:	9006      	str	r0, [sp, #24]
    eb9e:	e004      	b.n	ebaa <_ZN10st7735_lcd37_IMPL_NUM_ToPrimitive_FOR_Orientation83_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..Orientation$GT$6to_i6417h65f8b25e7b21ad28E+0x4c>
    eba0:	2000      	movs	r0, #0
    eba2:	9007      	str	r0, [sp, #28]
    eba4:	20c0      	movs	r0, #192	; 0xc0
    eba6:	9006      	str	r0, [sp, #24]
    eba8:	e7ff      	b.n	ebaa <_ZN10st7735_lcd37_IMPL_NUM_ToPrimitive_FOR_Orientation83_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..Orientation$GT$6to_i6417h65f8b25e7b21ad28E+0x4c>
    ebaa:	9806      	ldr	r0, [sp, #24]
    ebac:	9907      	ldr	r1, [sp, #28]
    ebae:	9105      	str	r1, [sp, #20]
    ebb0:	9004      	str	r0, [sp, #16]
    ebb2:	2000      	movs	r0, #0
    ebb4:	9003      	str	r0, [sp, #12]
    ebb6:	2001      	movs	r0, #1
    ebb8:	9002      	str	r0, [sp, #8]
    ebba:	9802      	ldr	r0, [sp, #8]
    ebbc:	9903      	ldr	r1, [sp, #12]
    ebbe:	9a04      	ldr	r2, [sp, #16]
    ebc0:	9b05      	ldr	r3, [sp, #20]
    ebc2:	b008      	add	sp, #32
    ebc4:	4770      	bx	lr

0000ebc6 <_ZN10st7735_lcd37_IMPL_NUM_ToPrimitive_FOR_Orientation83_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..Orientation$GT$6to_u6417hf5ae6585366f351aE>:
    ebc6:	b580      	push	{r7, lr}
    ebc8:	b08a      	sub	sp, #40	; 0x28
    ebca:	9009      	str	r0, [sp, #36]	; 0x24
    ebcc:	9809      	ldr	r0, [sp, #36]	; 0x24
    ebce:	f7ff ffc6 	bl	eb5e <_ZN10st7735_lcd37_IMPL_NUM_ToPrimitive_FOR_Orientation83_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..Orientation$GT$6to_i6417h65f8b25e7b21ad28E>
    ebd2:	9108      	str	r1, [sp, #32]
    ebd4:	9007      	str	r0, [sp, #28]
    ebd6:	9306      	str	r3, [sp, #24]
    ebd8:	9205      	str	r2, [sp, #20]
    ebda:	e7ff      	b.n	ebdc <_ZN10st7735_lcd37_IMPL_NUM_ToPrimitive_FOR_Orientation83_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..Orientation$GT$6to_u6417hf5ae6585366f351aE+0x16>
    ebdc:	9807      	ldr	r0, [sp, #28]
    ebde:	9908      	ldr	r1, [sp, #32]
    ebe0:	9a05      	ldr	r2, [sp, #20]
    ebe2:	9b06      	ldr	r3, [sp, #24]
    ebe4:	f000 f80b 	bl	ebfe <_ZN4core6option15Option$LT$T$GT$3map17h056f7b672e5fe93bE>
    ebe8:	9104      	str	r1, [sp, #16]
    ebea:	9003      	str	r0, [sp, #12]
    ebec:	9302      	str	r3, [sp, #8]
    ebee:	9201      	str	r2, [sp, #4]
    ebf0:	e7ff      	b.n	ebf2 <_ZN10st7735_lcd37_IMPL_NUM_ToPrimitive_FOR_Orientation83_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..Orientation$GT$6to_u6417hf5ae6585366f351aE+0x2c>
    ebf2:	9803      	ldr	r0, [sp, #12]
    ebf4:	9904      	ldr	r1, [sp, #16]
    ebf6:	9a01      	ldr	r2, [sp, #4]
    ebf8:	9b02      	ldr	r3, [sp, #8]
    ebfa:	b00a      	add	sp, #40	; 0x28
    ebfc:	bd80      	pop	{r7, pc}

0000ebfe <_ZN4core6option15Option$LT$T$GT$3map17h056f7b672e5fe93bE>:
    ebfe:	b5b0      	push	{r4, r5, r7, lr}
    ec00:	b092      	sub	sp, #72	; 0x48
    ec02:	469c      	mov	ip, r3
    ec04:	4696      	mov	lr, r2
    ec06:	460c      	mov	r4, r1
    ec08:	4605      	mov	r5, r0
    ec0a:	9103      	str	r1, [sp, #12]
    ec0c:	9002      	str	r0, [sp, #8]
    ec0e:	9305      	str	r3, [sp, #20]
    ec10:	9204      	str	r2, [sp, #16]
    ec12:	2000      	movs	r0, #0
    ec14:	f88d 0046 	strb.w	r0, [sp, #70]	; 0x46
    ec18:	f88d 0047 	strb.w	r0, [sp, #71]	; 0x47
    ec1c:	2001      	movs	r0, #1
    ec1e:	f88d 0047 	strb.w	r0, [sp, #71]	; 0x47
    ec22:	f88d 0046 	strb.w	r0, [sp, #70]	; 0x46
    ec26:	9802      	ldr	r0, [sp, #8]
    ec28:	2800      	cmp	r0, #0
    ec2a:	d001      	beq.n	ec30 <_ZN4core6option15Option$LT$T$GT$3map17h056f7b672e5fe93bE+0x32>
    ec2c:	e7ff      	b.n	ec2e <_ZN4core6option15Option$LT$T$GT$3map17h056f7b672e5fe93bE+0x30>
    ec2e:	e004      	b.n	ec3a <_ZN4core6option15Option$LT$T$GT$3map17h056f7b672e5fe93bE+0x3c>
    ec30:	2000      	movs	r0, #0
    ec32:	9009      	str	r0, [sp, #36]	; 0x24
    ec34:	9008      	str	r0, [sp, #32]
    ec36:	e025      	b.n	ec84 <_ZN4core6option15Option$LT$T$GT$3map17h056f7b672e5fe93bE+0x86>
    ec38:	defe      	udf	#254	; 0xfe
    ec3a:	2000      	movs	r0, #0
    ec3c:	f88d 0047 	strb.w	r0, [sp, #71]	; 0x47
    ec40:	9904      	ldr	r1, [sp, #16]
    ec42:	9a05      	ldr	r2, [sp, #20]
    ec44:	920d      	str	r2, [sp, #52]	; 0x34
    ec46:	910c      	str	r1, [sp, #48]	; 0x30
    ec48:	f88d 0046 	strb.w	r0, [sp, #70]	; 0x46
    ec4c:	980c      	ldr	r0, [sp, #48]	; 0x30
    ec4e:	990d      	ldr	r1, [sp, #52]	; 0x34
    ec50:	910f      	str	r1, [sp, #60]	; 0x3c
    ec52:	900e      	str	r0, [sp, #56]	; 0x38
    ec54:	980e      	ldr	r0, [sp, #56]	; 0x38
    ec56:	990f      	ldr	r1, [sp, #60]	; 0x3c
    ec58:	f004 fe90 	bl	1397c <_ZN10st7735_lcd37_IMPL_NUM_ToPrimitive_FOR_Orientation83_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..Orientation$GT$6to_u6428_$u7b$$u7b$closure$u7d$$u7d$17h9ae575ee4543bc51E>
    ec5c:	9101      	str	r1, [sp, #4]
    ec5e:	9000      	str	r0, [sp, #0]
    ec60:	e7ff      	b.n	ec62 <_ZN4core6option15Option$LT$T$GT$3map17h056f7b672e5fe93bE+0x64>
    ec62:	9800      	ldr	r0, [sp, #0]
    ec64:	900a      	str	r0, [sp, #40]	; 0x28
    ec66:	9901      	ldr	r1, [sp, #4]
    ec68:	910b      	str	r1, [sp, #44]	; 0x2c
    ec6a:	2200      	movs	r2, #0
    ec6c:	9209      	str	r2, [sp, #36]	; 0x24
    ec6e:	2201      	movs	r2, #1
    ec70:	9208      	str	r2, [sp, #32]
    ec72:	e007      	b.n	ec84 <_ZN4core6option15Option$LT$T$GT$3map17h056f7b672e5fe93bE+0x86>
    ec74:	9802      	ldr	r0, [sp, #8]
    ec76:	2801      	cmp	r0, #1
    ec78:	d010      	beq.n	ec9c <_ZN4core6option15Option$LT$T$GT$3map17h056f7b672e5fe93bE+0x9e>
    ec7a:	e019      	b.n	ecb0 <_ZN4core6option15Option$LT$T$GT$3map17h056f7b672e5fe93bE+0xb2>
    ec7c:	2000      	movs	r0, #0
    ec7e:	f88d 0046 	strb.w	r0, [sp, #70]	; 0x46
    ec82:	e7f7      	b.n	ec74 <_ZN4core6option15Option$LT$T$GT$3map17h056f7b672e5fe93bE+0x76>
    ec84:	f89d 0046 	ldrb.w	r0, [sp, #70]	; 0x46
    ec88:	07c0      	lsls	r0, r0, #31
    ec8a:	2800      	cmp	r0, #0
    ec8c:	d1f6      	bne.n	ec7c <_ZN4core6option15Option$LT$T$GT$3map17h056f7b672e5fe93bE+0x7e>
    ec8e:	e7f1      	b.n	ec74 <_ZN4core6option15Option$LT$T$GT$3map17h056f7b672e5fe93bE+0x76>
    ec90:	9808      	ldr	r0, [sp, #32]
    ec92:	9909      	ldr	r1, [sp, #36]	; 0x24
    ec94:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    ec96:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    ec98:	b012      	add	sp, #72	; 0x48
    ec9a:	bdb0      	pop	{r4, r5, r7, pc}
    ec9c:	f89d 0047 	ldrb.w	r0, [sp, #71]	; 0x47
    eca0:	07c0      	lsls	r0, r0, #31
    eca2:	2800      	cmp	r0, #0
    eca4:	d0f4      	beq.n	ec90 <_ZN4core6option15Option$LT$T$GT$3map17h056f7b672e5fe93bE+0x92>
    eca6:	e7ff      	b.n	eca8 <_ZN4core6option15Option$LT$T$GT$3map17h056f7b672e5fe93bE+0xaa>
    eca8:	2000      	movs	r0, #0
    ecaa:	f88d 0047 	strb.w	r0, [sp, #71]	; 0x47
    ecae:	e7ef      	b.n	ec90 <_ZN4core6option15Option$LT$T$GT$3map17h056f7b672e5fe93bE+0x92>
    ecb0:	e7ee      	b.n	ec90 <_ZN4core6option15Option$LT$T$GT$3map17h056f7b672e5fe93bE+0x92>

0000ecb2 <_ZN4core6option15Option$LT$T$GT$3map17h58469dc4acfae8f6E>:
    ecb2:	b5b0      	push	{r4, r5, r7, lr}
    ecb4:	b092      	sub	sp, #72	; 0x48
    ecb6:	469c      	mov	ip, r3
    ecb8:	4696      	mov	lr, r2
    ecba:	460c      	mov	r4, r1
    ecbc:	4605      	mov	r5, r0
    ecbe:	9103      	str	r1, [sp, #12]
    ecc0:	9002      	str	r0, [sp, #8]
    ecc2:	9305      	str	r3, [sp, #20]
    ecc4:	9204      	str	r2, [sp, #16]
    ecc6:	2000      	movs	r0, #0
    ecc8:	f88d 0046 	strb.w	r0, [sp, #70]	; 0x46
    eccc:	f88d 0047 	strb.w	r0, [sp, #71]	; 0x47
    ecd0:	2001      	movs	r0, #1
    ecd2:	f88d 0047 	strb.w	r0, [sp, #71]	; 0x47
    ecd6:	f88d 0046 	strb.w	r0, [sp, #70]	; 0x46
    ecda:	9802      	ldr	r0, [sp, #8]
    ecdc:	2800      	cmp	r0, #0
    ecde:	d001      	beq.n	ece4 <_ZN4core6option15Option$LT$T$GT$3map17h58469dc4acfae8f6E+0x32>
    ece0:	e7ff      	b.n	ece2 <_ZN4core6option15Option$LT$T$GT$3map17h58469dc4acfae8f6E+0x30>
    ece2:	e004      	b.n	ecee <_ZN4core6option15Option$LT$T$GT$3map17h58469dc4acfae8f6E+0x3c>
    ece4:	2000      	movs	r0, #0
    ece6:	9009      	str	r0, [sp, #36]	; 0x24
    ece8:	9008      	str	r0, [sp, #32]
    ecea:	e025      	b.n	ed38 <_ZN4core6option15Option$LT$T$GT$3map17h58469dc4acfae8f6E+0x86>
    ecec:	defe      	udf	#254	; 0xfe
    ecee:	2000      	movs	r0, #0
    ecf0:	f88d 0047 	strb.w	r0, [sp, #71]	; 0x47
    ecf4:	9904      	ldr	r1, [sp, #16]
    ecf6:	9a05      	ldr	r2, [sp, #20]
    ecf8:	920d      	str	r2, [sp, #52]	; 0x34
    ecfa:	910c      	str	r1, [sp, #48]	; 0x30
    ecfc:	f88d 0046 	strb.w	r0, [sp, #70]	; 0x46
    ed00:	980c      	ldr	r0, [sp, #48]	; 0x30
    ed02:	990d      	ldr	r1, [sp, #52]	; 0x34
    ed04:	910f      	str	r1, [sp, #60]	; 0x3c
    ed06:	900e      	str	r0, [sp, #56]	; 0x38
    ed08:	980e      	ldr	r0, [sp, #56]	; 0x38
    ed0a:	990f      	ldr	r1, [sp, #60]	; 0x3c
    ed0c:	f000 f82b 	bl	ed66 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_u6428_$u7b$$u7b$closure$u7d$$u7d$17h2362b1dfd7549143E>
    ed10:	9101      	str	r1, [sp, #4]
    ed12:	9000      	str	r0, [sp, #0]
    ed14:	e7ff      	b.n	ed16 <_ZN4core6option15Option$LT$T$GT$3map17h58469dc4acfae8f6E+0x64>
    ed16:	9800      	ldr	r0, [sp, #0]
    ed18:	900a      	str	r0, [sp, #40]	; 0x28
    ed1a:	9901      	ldr	r1, [sp, #4]
    ed1c:	910b      	str	r1, [sp, #44]	; 0x2c
    ed1e:	2200      	movs	r2, #0
    ed20:	9209      	str	r2, [sp, #36]	; 0x24
    ed22:	2201      	movs	r2, #1
    ed24:	9208      	str	r2, [sp, #32]
    ed26:	e007      	b.n	ed38 <_ZN4core6option15Option$LT$T$GT$3map17h58469dc4acfae8f6E+0x86>
    ed28:	9802      	ldr	r0, [sp, #8]
    ed2a:	2801      	cmp	r0, #1
    ed2c:	d010      	beq.n	ed50 <_ZN4core6option15Option$LT$T$GT$3map17h58469dc4acfae8f6E+0x9e>
    ed2e:	e019      	b.n	ed64 <_ZN4core6option15Option$LT$T$GT$3map17h58469dc4acfae8f6E+0xb2>
    ed30:	2000      	movs	r0, #0
    ed32:	f88d 0046 	strb.w	r0, [sp, #70]	; 0x46
    ed36:	e7f7      	b.n	ed28 <_ZN4core6option15Option$LT$T$GT$3map17h58469dc4acfae8f6E+0x76>
    ed38:	f89d 0046 	ldrb.w	r0, [sp, #70]	; 0x46
    ed3c:	07c0      	lsls	r0, r0, #31
    ed3e:	2800      	cmp	r0, #0
    ed40:	d1f6      	bne.n	ed30 <_ZN4core6option15Option$LT$T$GT$3map17h58469dc4acfae8f6E+0x7e>
    ed42:	e7f1      	b.n	ed28 <_ZN4core6option15Option$LT$T$GT$3map17h58469dc4acfae8f6E+0x76>
    ed44:	9808      	ldr	r0, [sp, #32]
    ed46:	9909      	ldr	r1, [sp, #36]	; 0x24
    ed48:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    ed4a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    ed4c:	b012      	add	sp, #72	; 0x48
    ed4e:	bdb0      	pop	{r4, r5, r7, pc}
    ed50:	f89d 0047 	ldrb.w	r0, [sp, #71]	; 0x47
    ed54:	07c0      	lsls	r0, r0, #31
    ed56:	2800      	cmp	r0, #0
    ed58:	d0f4      	beq.n	ed44 <_ZN4core6option15Option$LT$T$GT$3map17h58469dc4acfae8f6E+0x92>
    ed5a:	e7ff      	b.n	ed5c <_ZN4core6option15Option$LT$T$GT$3map17h58469dc4acfae8f6E+0xaa>
    ed5c:	2000      	movs	r0, #0
    ed5e:	f88d 0047 	strb.w	r0, [sp, #71]	; 0x47
    ed62:	e7ef      	b.n	ed44 <_ZN4core6option15Option$LT$T$GT$3map17h58469dc4acfae8f6E+0x92>
    ed64:	e7ee      	b.n	ed44 <_ZN4core6option15Option$LT$T$GT$3map17h58469dc4acfae8f6E+0x92>

0000ed66 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_u6428_$u7b$$u7b$closure$u7d$$u7d$17h2362b1dfd7549143E>:
use num_derive::ToPrimitive;

/// ST7735 instructions.
#[derive(ToPrimitive)]
    ed66:	b084      	sub	sp, #16
    ed68:	460a      	mov	r2, r1
    ed6a:	4603      	mov	r3, r0
    ed6c:	9103      	str	r1, [sp, #12]
    ed6e:	9002      	str	r0, [sp, #8]
    ed70:	9802      	ldr	r0, [sp, #8]
    ed72:	9903      	ldr	r1, [sp, #12]
    ed74:	b004      	add	sp, #16
    ed76:	4770      	bx	lr

0000ed78 <_ZN58_$LT$core..any..TypeId$u20$as$u20$core..cmp..PartialEq$GT$2eq17h428f46bbd5e42aa0E>:
    ed78:	b084      	sub	sp, #16
    ed7a:	9000      	str	r0, [sp, #0]
    ed7c:	9101      	str	r1, [sp, #4]
    ed7e:	9801      	ldr	r0, [sp, #4]
    ed80:	9002      	str	r0, [sp, #8]
    ed82:	9800      	ldr	r0, [sp, #0]
    ed84:	9003      	str	r0, [sp, #12]
    ed86:	9803      	ldr	r0, [sp, #12]
    ed88:	6801      	ldr	r1, [r0, #0]
    ed8a:	6840      	ldr	r0, [r0, #4]
    ed8c:	9a02      	ldr	r2, [sp, #8]
    ed8e:	6813      	ldr	r3, [r2, #0]
    ed90:	6852      	ldr	r2, [r2, #4]
    ed92:	4050      	eors	r0, r2
    ed94:	4059      	eors	r1, r3
    ed96:	4308      	orrs	r0, r1
    ed98:	fab0 f080 	clz	r0, r0
    ed9c:	0940      	lsrs	r0, r0, #5
    ed9e:	b004      	add	sp, #16
    eda0:	4770      	bx	lr

0000eda2 <_ZN4core3fmt9Arguments6new_v117h17809a6a6cc532d9E>:
    eda2:	b086      	sub	sp, #24
    eda4:	f8dd c018 	ldr.w	ip, [sp, #24]
    eda8:	9100      	str	r1, [sp, #0]
    edaa:	9201      	str	r2, [sp, #4]
    edac:	9302      	str	r3, [sp, #8]
    edae:	f8cd c00c 	str.w	ip, [sp, #12]
    edb2:	9900      	ldr	r1, [sp, #0]
    edb4:	9a01      	ldr	r2, [sp, #4]
    edb6:	2300      	movs	r3, #0
    edb8:	9305      	str	r3, [sp, #20]
    edba:	9304      	str	r3, [sp, #16]
    edbc:	9304      	str	r3, [sp, #16]
    edbe:	9b02      	ldr	r3, [sp, #8]
    edc0:	f8dd c00c 	ldr.w	ip, [sp, #12]
    edc4:	6001      	str	r1, [r0, #0]
    edc6:	6042      	str	r2, [r0, #4]
    edc8:	9904      	ldr	r1, [sp, #16]
    edca:	9a05      	ldr	r2, [sp, #20]
    edcc:	6081      	str	r1, [r0, #8]
    edce:	60c2      	str	r2, [r0, #12]
    edd0:	6103      	str	r3, [r0, #16]
    edd2:	f8c0 c014 	str.w	ip, [r0, #20]
    edd6:	b006      	add	sp, #24
    edd8:	4770      	bx	lr

0000edda <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E>:
impl<P: Iterator<Item = Pixel<Rgb565>>> Iterator for RowIterator<P> {
    /// This Iterator returns Pixel Rows
    type Item = PixelRow;

    /// Return the next Pixel Row of contiguous pixels on the same row
    fn next(&mut self) -> Option<Self::Item> {
    edda:	b580      	push	{r7, lr}
    eddc:	f5ad 7d46 	sub.w	sp, sp, #792	; 0x318
    ede0:	9117      	str	r1, [sp, #92]	; 0x5c
        //  Loop over all pixels until we have composed a Pixel Row, or we have run out of pixels.
        loop {
    ede2:	9016      	str	r0, [sp, #88]	; 0x58
    ede4:	e7ff      	b.n	ede6 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0xc>
            //  Get the next pixel.
            let next_pixel = self.pixels.next();
    ede6:	9917      	ldr	r1, [sp, #92]	; 0x5c
    ede8:	a818      	add	r0, sp, #96	; 0x60
    edea:	f7f9 ff94 	bl	8d16 <_ZN121_$LT$embedded_graphics..primitives..circle..CircleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hffd828b046b72990E>
    edee:	e7ff      	b.n	edf0 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x16>
            match next_pixel {
                None => {  //  If no more pixels...
    edf0:	9818      	ldr	r0, [sp, #96]	; 0x60
    edf2:	2800      	cmp	r0, #0
    edf4:	d002      	beq.n	edfc <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x22>
    edf6:	e7ff      	b.n	edf8 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x1e>
    edf8:	e04e      	b.n	ee98 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0xbe>
            match next_pixel {
    edfa:	defe      	udf	#254	; 0xfe
                    if self.first_pixel {
    edfc:	9817      	ldr	r0, [sp, #92]	; 0x5c
    edfe:	f890 008e 	ldrb.w	r0, [r0, #142]	; 0x8e
    ee02:	07c0      	lsls	r0, r0, #31
    ee04:	2800      	cmp	r0, #0
    ee06:	d115      	bne.n	ee34 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x5a>
    ee08:	e7ff      	b.n	ee0a <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x30>
                        return None;  //  No pixels to group
                    }                    
                    //  Else return previous pixels as row.
                    let row = PixelRow {
                        x_left: self.x_left,
    ee0a:	9817      	ldr	r0, [sp, #92]	; 0x5c
    ee0c:	f8b0 1088 	ldrh.w	r1, [r0, #136]	; 0x88
                        x_right: self.x_right,
    ee10:	f8b0 208a 	ldrh.w	r2, [r0, #138]	; 0x8a
                        y: self.y,
    ee14:	f8b0 308c 	ldrh.w	r3, [r0, #140]	; 0x8c
                        colors: self.colors.clone(),
    ee18:	3020      	adds	r0, #32
    ee1a:	f10d 0ce0 	add.w	ip, sp, #224	; 0xe0
    ee1e:	9015      	str	r0, [sp, #84]	; 0x54
    ee20:	4660      	mov	r0, ip
    ee22:	f8dd c054 	ldr.w	ip, [sp, #84]	; 0x54
    ee26:	9114      	str	r1, [sp, #80]	; 0x50
    ee28:	4661      	mov	r1, ip
    ee2a:	9213      	str	r2, [sp, #76]	; 0x4c
    ee2c:	9312      	str	r3, [sp, #72]	; 0x48
    ee2e:	f002 febf 	bl	11bb0 <_ZN70_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h25529cf37f25b753E>
    ee32:	e006      	b.n	ee42 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x68>
    ee34:	2000      	movs	r0, #0
                        return None;  //  No pixels to group
    ee36:	9916      	ldr	r1, [sp, #88]	; 0x58
    ee38:	6008      	str	r0, [r1, #0]
    ee3a:	e7ff      	b.n	ee3c <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x62>
                        .expect("never");
                    return Some(row);
                }
            }
        }
    }
    ee3c:	f50d 7d46 	add.w	sp, sp, #792	; 0x318
    ee40:	bd80      	pop	{r7, pc}
                    let row = PixelRow {
    ee42:	9814      	ldr	r0, [sp, #80]	; 0x50
    ee44:	f8ad 00d8 	strh.w	r0, [sp, #216]	; 0xd8
    ee48:	9913      	ldr	r1, [sp, #76]	; 0x4c
    ee4a:	f8ad 10da 	strh.w	r1, [sp, #218]	; 0xda
    ee4e:	9a12      	ldr	r2, [sp, #72]	; 0x48
    ee50:	f8ad 20dc 	strh.w	r2, [sp, #220]	; 0xdc
    ee54:	a81c      	add	r0, sp, #112	; 0x70
    ee56:	a938      	add	r1, sp, #224	; 0xe0
    ee58:	2268      	movs	r2, #104	; 0x68
    ee5a:	f00c f845 	bl	1aee8 <__aeabi_memcpy>
                    self.colors.clear();
    ee5e:	9817      	ldr	r0, [sp, #92]	; 0x5c
    ee60:	3020      	adds	r0, #32
    ee62:	f002 ff93 	bl	11d8c <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17hfc6c59a7d142150bE>
    ee66:	e7ff      	b.n	ee68 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x8e>
                    self.first_pixel = true;
    ee68:	9817      	ldr	r0, [sp, #92]	; 0x5c
    ee6a:	2101      	movs	r1, #1
    ee6c:	f880 108e 	strb.w	r1, [r0, #142]	; 0x8e
    ee70:	a852      	add	r0, sp, #328	; 0x148
    ee72:	aa1c      	add	r2, sp, #112	; 0x70
    ee74:	2370      	movs	r3, #112	; 0x70
                    return Some(row);
    ee76:	9011      	str	r0, [sp, #68]	; 0x44
    ee78:	9110      	str	r1, [sp, #64]	; 0x40
    ee7a:	4611      	mov	r1, r2
    ee7c:	461a      	mov	r2, r3
    ee7e:	930f      	str	r3, [sp, #60]	; 0x3c
    ee80:	f00c f832 	bl	1aee8 <__aeabi_memcpy>
    ee84:	9816      	ldr	r0, [sp, #88]	; 0x58
    ee86:	3004      	adds	r0, #4
    ee88:	9911      	ldr	r1, [sp, #68]	; 0x44
    ee8a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    ee8c:	f00c f82c 	bl	1aee8 <__aeabi_memcpy>
    ee90:	9810      	ldr	r0, [sp, #64]	; 0x40
    ee92:	9916      	ldr	r1, [sp, #88]	; 0x58
    ee94:	6008      	str	r0, [r1, #0]
    ee96:	e7d1      	b.n	ee3c <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x62>
                Some(Pixel(coord, color)) => {  //  If there is a pixel...
    ee98:	9819      	ldr	r0, [sp, #100]	; 0x64
    ee9a:	991a      	ldr	r1, [sp, #104]	; 0x68
    ee9c:	906e      	str	r0, [sp, #440]	; 0x1b8
    ee9e:	916f      	str	r1, [sp, #444]	; 0x1bc
    eea0:	f8bd 006c 	ldrh.w	r0, [sp, #108]	; 0x6c
    eea4:	f8ad 01c2 	strh.w	r0, [sp, #450]	; 0x1c2
                    let x = coord.0 as u16;
    eea8:	986e      	ldr	r0, [sp, #440]	; 0x1b8
    eeaa:	f8ad 01c4 	strh.w	r0, [sp, #452]	; 0x1c4
                    let y = coord.1 as u16;
    eeae:	986f      	ldr	r0, [sp, #444]	; 0x1bc
    eeb0:	f8ad 01c6 	strh.w	r0, [sp, #454]	; 0x1c6
                    let color = color.0;
    eeb4:	f8bd 01c2 	ldrh.w	r0, [sp, #450]	; 0x1c2
    eeb8:	f8ad 01c8 	strh.w	r0, [sp, #456]	; 0x1c8
                    if self.first_pixel {
    eebc:	9817      	ldr	r0, [sp, #92]	; 0x5c
    eebe:	f890 008e 	ldrb.w	r0, [r0, #142]	; 0x8e
    eec2:	07c0      	lsls	r0, r0, #31
    eec4:	2800      	cmp	r0, #0
    eec6:	d10e      	bne.n	eee6 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x10c>
    eec8:	e7ff      	b.n	eeca <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0xf0>
                    if x == self.x_right + 1 && y == self.y {
    eeca:	f8bd 01c4 	ldrh.w	r0, [sp, #452]	; 0x1c4
    eece:	9917      	ldr	r1, [sp, #92]	; 0x5c
    eed0:	f8b1 108a 	ldrh.w	r1, [r1, #138]	; 0x8a
    eed4:	3101      	adds	r1, #1
    eed6:	b28a      	uxth	r2, r1
    eed8:	460b      	mov	r3, r1
    eeda:	428a      	cmp	r2, r1
    eedc:	900e      	str	r0, [sp, #56]	; 0x38
    eede:	930d      	str	r3, [sp, #52]	; 0x34
    eee0:	f040 80ce 	bne.w	f080 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x2a6>
    eee4:	e048      	b.n	ef78 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x19e>
                        self.first_pixel = false;
    eee6:	9817      	ldr	r0, [sp, #92]	; 0x5c
    eee8:	2100      	movs	r1, #0
    eeea:	f880 108e 	strb.w	r1, [r0, #142]	; 0x8e
                        self.x_left = x;
    eeee:	f8bd 01c4 	ldrh.w	r0, [sp, #452]	; 0x1c4
    eef2:	9917      	ldr	r1, [sp, #92]	; 0x5c
    eef4:	f8a1 0088 	strh.w	r0, [r1, #136]	; 0x88
                        self.x_right = x;
    eef8:	f8bd 01c4 	ldrh.w	r0, [sp, #452]	; 0x1c4
    eefc:	9917      	ldr	r1, [sp, #92]	; 0x5c
    eefe:	f8a1 008a 	strh.w	r0, [r1, #138]	; 0x8a
                        self.y = y;
    ef02:	f8bd 01c6 	ldrh.w	r0, [sp, #454]	; 0x1c6
    ef06:	9917      	ldr	r1, [sp, #92]	; 0x5c
    ef08:	f8a1 008c 	strh.w	r0, [r1, #140]	; 0x8c
                        self.colors.clear();
    ef0c:	9817      	ldr	r0, [sp, #92]	; 0x5c
    ef0e:	3020      	adds	r0, #32
    ef10:	f002 ff3c 	bl	11d8c <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17hfc6c59a7d142150bE>
    ef14:	e7ff      	b.n	ef16 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x13c>
                        self.colors.push(color)
    ef16:	9817      	ldr	r0, [sp, #92]	; 0x5c
    ef18:	3020      	adds	r0, #32
    ef1a:	f8bd 11c8 	ldrh.w	r1, [sp, #456]	; 0x1c8
    ef1e:	f002 ff19 	bl	11d54 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$4push17h7bde6d5f42a64645E>
    ef22:	900c      	str	r0, [sp, #48]	; 0x30
    ef24:	910b      	str	r1, [sp, #44]	; 0x2c
    ef26:	e7ff      	b.n	ef28 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x14e>
    ef28:	f64d 1098 	movw	r0, #55704	; 0xd998
    ef2c:	f2c0 0001 	movt	r0, #1
    ef30:	4669      	mov	r1, sp
    ef32:	6008      	str	r0, [r1, #0]
    ef34:	f64d 1230 	movw	r2, #55600	; 0xd930
    ef38:	f2c0 0201 	movt	r2, #1
    ef3c:	2305      	movs	r3, #5
    ef3e:	980c      	ldr	r0, [sp, #48]	; 0x30
    ef40:	990b      	ldr	r1, [sp, #44]	; 0x2c
    ef42:	f7fd f84b 	bl	bfdc <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h5ae14e54a9cca8d6E>
    ef46:	e7ff      	b.n	ef48 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x16e>
                        continue;
    ef48:	e7ff      	b.n	ef4a <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x170>
    ef4a:	e74c      	b.n	ede6 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0xc>
    ef4c:	2001      	movs	r0, #1
                    if x == self.x_right + 1 && y == self.y {
    ef4e:	f88d 01cb 	strb.w	r0, [sp, #459]	; 0x1cb
    ef52:	e00b      	b.n	ef6c <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x192>
    ef54:	2000      	movs	r0, #0
    ef56:	f88d 01cb 	strb.w	r0, [sp, #459]	; 0x1cb
    ef5a:	e007      	b.n	ef6c <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x192>
    ef5c:	f8bd 01c6 	ldrh.w	r0, [sp, #454]	; 0x1c6
    ef60:	9917      	ldr	r1, [sp, #92]	; 0x5c
    ef62:	f8b1 108c 	ldrh.w	r1, [r1, #140]	; 0x8c
    ef66:	4288      	cmp	r0, r1
    ef68:	d0f0      	beq.n	ef4c <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x172>
    ef6a:	e7f3      	b.n	ef54 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x17a>
    ef6c:	f89d 01cb 	ldrb.w	r0, [sp, #459]	; 0x1cb
    ef70:	07c0      	lsls	r0, r0, #31
    ef72:	2800      	cmp	r0, #0
    ef74:	d107      	bne.n	ef86 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x1ac>
    ef76:	e022      	b.n	efbe <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x1e4>
    ef78:	980d      	ldr	r0, [sp, #52]	; 0x34
    ef7a:	b281      	uxth	r1, r0
    ef7c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    ef7e:	b293      	uxth	r3, r2
    ef80:	428b      	cmp	r3, r1
    ef82:	d0eb      	beq.n	ef5c <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x182>
    ef84:	e7e6      	b.n	ef54 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x17a>
                        if self.colors.push(color).is_ok() {
    ef86:	9817      	ldr	r0, [sp, #92]	; 0x5c
    ef88:	3020      	adds	r0, #32
    ef8a:	f8bd 11c8 	ldrh.w	r1, [sp, #456]	; 0x1c8
    ef8e:	f002 fee1 	bl	11d54 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$4push17h7bde6d5f42a64645E>
    ef92:	f8ad 11ce 	strh.w	r1, [sp, #462]	; 0x1ce
    ef96:	f8ad 01cc 	strh.w	r0, [sp, #460]	; 0x1cc
    ef9a:	e7ff      	b.n	ef9c <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x1c2>
    ef9c:	a873      	add	r0, sp, #460	; 0x1cc
    ef9e:	f7fc fff6 	bl	bf8e <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h2b593d74deb7b9abE>
    efa2:	900a      	str	r0, [sp, #40]	; 0x28
    efa4:	e7ff      	b.n	efa6 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x1cc>
    efa6:	980a      	ldr	r0, [sp, #40]	; 0x28
    efa8:	07c1      	lsls	r1, r0, #31
    efaa:	2900      	cmp	r1, #0
    efac:	d101      	bne.n	efb2 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x1d8>
    efae:	e7ff      	b.n	efb0 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x1d6>
                    if x == self.x_right + 1 && y == self.y {
    efb0:	e005      	b.n	efbe <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x1e4>
                            self.x_right = x;
    efb2:	f8bd 01c4 	ldrh.w	r0, [sp, #452]	; 0x1c4
    efb6:	9917      	ldr	r1, [sp, #92]	; 0x5c
    efb8:	f8a1 008a 	strh.w	r0, [r1, #138]	; 0x8a
                            continue;
    efbc:	e7c5      	b.n	ef4a <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x170>
                        x_left: self.x_left,
    efbe:	9817      	ldr	r0, [sp, #92]	; 0x5c
    efc0:	f8b0 1088 	ldrh.w	r1, [r0, #136]	; 0x88
                        x_right: self.x_right,
    efc4:	f8b0 208a 	ldrh.w	r2, [r0, #138]	; 0x8a
                        y: self.y,
    efc8:	f8b0 308c 	ldrh.w	r3, [r0, #140]	; 0x8c
                        colors: self.colors.clone(),
    efcc:	3020      	adds	r0, #32
    efce:	f50d 7c10 	add.w	ip, sp, #576	; 0x240
    efd2:	9009      	str	r0, [sp, #36]	; 0x24
    efd4:	4660      	mov	r0, ip
    efd6:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
    efda:	9108      	str	r1, [sp, #32]
    efdc:	4661      	mov	r1, ip
    efde:	9207      	str	r2, [sp, #28]
    efe0:	9306      	str	r3, [sp, #24]
    efe2:	f002 fde5 	bl	11bb0 <_ZN70_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h25529cf37f25b753E>
    efe6:	e7ff      	b.n	efe8 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x20e>
                    let row = PixelRow {
    efe8:	9808      	ldr	r0, [sp, #32]
    efea:	f8ad 0238 	strh.w	r0, [sp, #568]	; 0x238
    efee:	9907      	ldr	r1, [sp, #28]
    eff0:	f8ad 123a 	strh.w	r1, [sp, #570]	; 0x23a
    eff4:	9a06      	ldr	r2, [sp, #24]
    eff6:	f8ad 223c 	strh.w	r2, [sp, #572]	; 0x23c
    effa:	a874      	add	r0, sp, #464	; 0x1d0
    effc:	a990      	add	r1, sp, #576	; 0x240
    effe:	2268      	movs	r2, #104	; 0x68
    f000:	f00b ff72 	bl	1aee8 <__aeabi_memcpy>
                    self.x_left = x;
    f004:	f8bd 01c4 	ldrh.w	r0, [sp, #452]	; 0x1c4
    f008:	9917      	ldr	r1, [sp, #92]	; 0x5c
    f00a:	f8a1 0088 	strh.w	r0, [r1, #136]	; 0x88
                    self.x_right = x;
    f00e:	f8bd 01c4 	ldrh.w	r0, [sp, #452]	; 0x1c4
    f012:	9917      	ldr	r1, [sp, #92]	; 0x5c
    f014:	f8a1 008a 	strh.w	r0, [r1, #138]	; 0x8a
                    self.y = y;
    f018:	f8bd 01c6 	ldrh.w	r0, [sp, #454]	; 0x1c6
    f01c:	9917      	ldr	r1, [sp, #92]	; 0x5c
    f01e:	f8a1 008c 	strh.w	r0, [r1, #140]	; 0x8c
                    self.colors.clear();
    f022:	9817      	ldr	r0, [sp, #92]	; 0x5c
    f024:	3020      	adds	r0, #32
    f026:	f002 feb1 	bl	11d8c <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17hfc6c59a7d142150bE>
    f02a:	e7ff      	b.n	f02c <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x252>
                    self.colors.push(color)
    f02c:	9817      	ldr	r0, [sp, #92]	; 0x5c
    f02e:	3020      	adds	r0, #32
    f030:	f8bd 11c8 	ldrh.w	r1, [sp, #456]	; 0x1c8
    f034:	f002 fe8e 	bl	11d54 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$4push17h7bde6d5f42a64645E>
    f038:	9005      	str	r0, [sp, #20]
    f03a:	9104      	str	r1, [sp, #16]
    f03c:	e7ff      	b.n	f03e <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x264>
    f03e:	f64d 10dc 	movw	r0, #55772	; 0xd9dc
    f042:	f2c0 0001 	movt	r0, #1
    f046:	4669      	mov	r1, sp
    f048:	6008      	str	r0, [r1, #0]
    f04a:	f64d 1230 	movw	r2, #55600	; 0xd930
    f04e:	f2c0 0201 	movt	r2, #1
    f052:	2305      	movs	r3, #5
    f054:	9805      	ldr	r0, [sp, #20]
    f056:	9904      	ldr	r1, [sp, #16]
    f058:	f7fc ffc0 	bl	bfdc <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h5ae14e54a9cca8d6E>
    f05c:	e7ff      	b.n	f05e <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x284>
    f05e:	a8aa      	add	r0, sp, #680	; 0x2a8
    f060:	a974      	add	r1, sp, #464	; 0x1d0
    f062:	2270      	movs	r2, #112	; 0x70
                    return Some(row);
    f064:	9003      	str	r0, [sp, #12]
    f066:	9202      	str	r2, [sp, #8]
    f068:	f00b ff3e 	bl	1aee8 <__aeabi_memcpy>
    f06c:	9816      	ldr	r0, [sp, #88]	; 0x58
    f06e:	3004      	adds	r0, #4
    f070:	9903      	ldr	r1, [sp, #12]
    f072:	9a02      	ldr	r2, [sp, #8]
    f074:	f00b ff38 	bl	1aee8 <__aeabi_memcpy>
    f078:	2001      	movs	r0, #1
    f07a:	9916      	ldr	r1, [sp, #88]	; 0x58
    f07c:	6008      	str	r0, [r1, #0]
    f07e:	e6dd      	b.n	ee3c <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E+0x62>
                    if x == self.x_right + 1 && y == self.y {
    f080:	f64d 10c0 	movw	r0, #55744	; 0xd9c0
    f084:	f2c0 0001 	movt	r0, #1
    f088:	f64d 12a8 	movw	r2, #55720	; 0xd9a8
    f08c:	f2c0 0201 	movt	r2, #1
    f090:	211c      	movs	r1, #28
    f092:	f005 fd86 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    f096:	defe      	udf	#254	; 0xfe

0000f098 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E>:
impl<R: Iterator<Item = PixelRow>> Iterator for BlockIterator<R> {
    /// This Iterator returns Pixel Blocks
    type Item = PixelBlock;

    /// Return the next Pixel Block of contiguous Pixel Rows with the same start and end column number
    fn next(&mut self) -> Option<Self::Item> {
    f098:	b580      	push	{r7, lr}
    f09a:	f5ad 6dca 	sub.w	sp, sp, #1616	; 0x650
    f09e:	911e      	str	r1, [sp, #120]	; 0x78
    f0a0:	2100      	movs	r1, #0
        //  Loop over all Pixel Rows until we have composed a Pixel Block, or we have run out of Pixel Rows.
        loop {
    f0a2:	f88d 164f 	strb.w	r1, [sp, #1615]	; 0x64f
    f0a6:	901d      	str	r0, [sp, #116]	; 0x74
    f0a8:	e7ff      	b.n	f0aa <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x12>
            //  Get the next Pixel Row.
            let next_row = self.rows.next();
    f0aa:	991e      	ldr	r1, [sp, #120]	; 0x78
    f0ac:	2001      	movs	r0, #1
    f0ae:	f88d 064f 	strb.w	r0, [sp, #1615]	; 0x64f
    f0b2:	a81f      	add	r0, sp, #124	; 0x7c
    f0b4:	f7ff fe91 	bl	edda <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h44341ab32110f470E>
    f0b8:	e7ff      	b.n	f0ba <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x22>
            match next_row {
                None => {  //  If no more Pixel Rows...
    f0ba:	981f      	ldr	r0, [sp, #124]	; 0x7c
    f0bc:	2800      	cmp	r0, #0
    f0be:	d002      	beq.n	f0c6 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x2e>
    f0c0:	e7ff      	b.n	f0c2 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x2a>
    f0c2:	e052      	b.n	f16a <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0xd2>
            match next_row {
    f0c4:	defe      	udf	#254	; 0xfe
                    if self.first_row {
    f0c6:	981e      	ldr	r0, [sp, #120]	; 0x78
    f0c8:	f890 0164 	ldrb.w	r0, [r0, #356]	; 0x164
    f0cc:	07c0      	lsls	r0, r0, #31
    f0ce:	2800      	cmp	r0, #0
    f0d0:	d119      	bne.n	f106 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x6e>
    f0d2:	e7ff      	b.n	f0d4 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x3c>
                        return None;  //  No rows to group
                    }                    
                    //  Else return previous rows as block.
                    let row = PixelBlock {
                        x_left: self.x_left,
    f0d4:	981e      	ldr	r0, [sp, #120]	; 0x78
    f0d6:	f8b0 115c 	ldrh.w	r1, [r0, #348]	; 0x15c
                        x_right: self.x_right,
    f0da:	f8b0 215e 	ldrh.w	r2, [r0, #350]	; 0x15e
                        y_top: self.y_top,
    f0de:	f8b0 3160 	ldrh.w	r3, [r0, #352]	; 0x160
                        y_bottom: self.y_bottom,
    f0e2:	f8b0 c162 	ldrh.w	ip, [r0, #354]	; 0x162
                        colors: self.colors.clone(),
    f0e6:	3090      	adds	r0, #144	; 0x90
    f0e8:	f50d 7ee2 	add.w	lr, sp, #452	; 0x1c4
    f0ec:	901c      	str	r0, [sp, #112]	; 0x70
    f0ee:	4670      	mov	r0, lr
    f0f0:	f8dd e070 	ldr.w	lr, [sp, #112]	; 0x70
    f0f4:	911b      	str	r1, [sp, #108]	; 0x6c
    f0f6:	4671      	mov	r1, lr
    f0f8:	921a      	str	r2, [sp, #104]	; 0x68
    f0fa:	9319      	str	r3, [sp, #100]	; 0x64
    f0fc:	f8cd c060 	str.w	ip, [sp, #96]	; 0x60
    f100:	f002 fd67 	bl	11bd2 <_ZN70_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hca8a7b49119f2322E>
    f104:	e003      	b.n	f10e <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x76>
    f106:	2000      	movs	r0, #0
                        return None;  //  No rows to group
    f108:	991d      	ldr	r1, [sp, #116]	; 0x74
    f10a:	6008      	str	r0, [r1, #0]
    f10c:	e187      	b.n	f41e <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x386>
                    let row = PixelBlock {
    f10e:	981b      	ldr	r0, [sp, #108]	; 0x6c
    f110:	f8ad 01bc 	strh.w	r0, [sp, #444]	; 0x1bc
    f114:	991a      	ldr	r1, [sp, #104]	; 0x68
    f116:	f8ad 11be 	strh.w	r1, [sp, #446]	; 0x1be
    f11a:	9a19      	ldr	r2, [sp, #100]	; 0x64
    f11c:	f8ad 21c0 	strh.w	r2, [sp, #448]	; 0x1c0
    f120:	9b18      	ldr	r3, [sp, #96]	; 0x60
    f122:	f8ad 31c2 	strh.w	r3, [sp, #450]	; 0x1c2
    f126:	a83c      	add	r0, sp, #240	; 0xf0
    f128:	a971      	add	r1, sp, #452	; 0x1c4
    f12a:	22cc      	movs	r2, #204	; 0xcc
    f12c:	f00b fedc 	bl	1aee8 <__aeabi_memcpy>
                    };
                    self.colors.clear();
    f130:	981e      	ldr	r0, [sp, #120]	; 0x78
    f132:	3090      	adds	r0, #144	; 0x90
    f134:	f002 fe21 	bl	11d7a <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17h345da7541567fd72E>
    f138:	e7ff      	b.n	f13a <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0xa2>
                    self.first_row = true;
    f13a:	981e      	ldr	r0, [sp, #120]	; 0x78
    f13c:	2101      	movs	r1, #1
    f13e:	f880 1164 	strb.w	r1, [r0, #356]	; 0x164
    f142:	a8a4      	add	r0, sp, #656	; 0x290
    f144:	aa3c      	add	r2, sp, #240	; 0xf0
    f146:	23d4      	movs	r3, #212	; 0xd4
                    return Some(row);
    f148:	9017      	str	r0, [sp, #92]	; 0x5c
    f14a:	9116      	str	r1, [sp, #88]	; 0x58
    f14c:	4611      	mov	r1, r2
    f14e:	461a      	mov	r2, r3
    f150:	9315      	str	r3, [sp, #84]	; 0x54
    f152:	f00b fec9 	bl	1aee8 <__aeabi_memcpy>
    f156:	981d      	ldr	r0, [sp, #116]	; 0x74
    f158:	3004      	adds	r0, #4
    f15a:	9917      	ldr	r1, [sp, #92]	; 0x5c
    f15c:	9a15      	ldr	r2, [sp, #84]	; 0x54
    f15e:	f00b fec3 	bl	1aee8 <__aeabi_memcpy>
    f162:	9816      	ldr	r0, [sp, #88]	; 0x58
    f164:	991d      	ldr	r1, [sp, #116]	; 0x74
    f166:	6008      	str	r0, [r1, #0]
    f168:	e159      	b.n	f41e <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x386>
    f16a:	a81f      	add	r0, sp, #124	; 0x7c
                }
                Some(PixelRow { x_left, x_right, y, colors, .. }) => {  //  If there is a Pixel Row...
    f16c:	1d01      	adds	r1, r0, #4
    f16e:	f8bd 00e8 	ldrh.w	r0, [sp, #232]	; 0xe8
    f172:	f8ad 0366 	strh.w	r0, [sp, #870]	; 0x366
    f176:	f8bd 00ea 	ldrh.w	r0, [sp, #234]	; 0xea
    f17a:	f8ad 0368 	strh.w	r0, [sp, #872]	; 0x368
    f17e:	f8bd 00ec 	ldrh.w	r0, [sp, #236]	; 0xec
    f182:	f8ad 036a 	strh.w	r0, [sp, #874]	; 0x36a
    f186:	2000      	movs	r0, #0
    f188:	f88d 064f 	strb.w	r0, [sp, #1615]	; 0x64f
    f18c:	a8db      	add	r0, sp, #876	; 0x36c
    f18e:	2268      	movs	r2, #104	; 0x68
    f190:	f00b feaa 	bl	1aee8 <__aeabi_memcpy>
                    //  Save the first row as the block start and handle next block.
                    if self.first_row {
    f194:	981e      	ldr	r0, [sp, #120]	; 0x78
    f196:	f890 0164 	ldrb.w	r0, [r0, #356]	; 0x164
    f19a:	07c0      	lsls	r0, r0, #31
    f19c:	2800      	cmp	r0, #0
    f19e:	d10e      	bne.n	f1be <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x126>
    f1a0:	e7ff      	b.n	f1a2 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x10a>
                        self.colors.extend_from_slice(&colors)
                            .expect("never");
                        continue;
                    }
                    //  If this row is adjacent to the previous row and same size, add to the block.
                    if y == self.y_bottom + 1 && x_left == self.x_left && x_right == self.x_right {                        
    f1a2:	f8bd 036a 	ldrh.w	r0, [sp, #874]	; 0x36a
    f1a6:	991e      	ldr	r1, [sp, #120]	; 0x78
    f1a8:	f8b1 1162 	ldrh.w	r1, [r1, #354]	; 0x162
    f1ac:	3101      	adds	r1, #1
    f1ae:	b28a      	uxth	r2, r1
    f1b0:	460b      	mov	r3, r1
    f1b2:	428a      	cmp	r2, r1
    f1b4:	9014      	str	r0, [sp, #80]	; 0x50
    f1b6:	9313      	str	r3, [sp, #76]	; 0x4c
    f1b8:	f040 813d 	bne.w	f436 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x39e>
    f1bc:	e072      	b.n	f2a4 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x20c>
                        self.first_row = false;
    f1be:	981e      	ldr	r0, [sp, #120]	; 0x78
    f1c0:	2100      	movs	r1, #0
    f1c2:	f880 1164 	strb.w	r1, [r0, #356]	; 0x164
                        self.x_left = x_left;
    f1c6:	f8bd 0366 	ldrh.w	r0, [sp, #870]	; 0x366
    f1ca:	991e      	ldr	r1, [sp, #120]	; 0x78
    f1cc:	f8a1 015c 	strh.w	r0, [r1, #348]	; 0x15c
                        self.x_right = x_right;
    f1d0:	f8bd 0368 	ldrh.w	r0, [sp, #872]	; 0x368
    f1d4:	991e      	ldr	r1, [sp, #120]	; 0x78
    f1d6:	f8a1 015e 	strh.w	r0, [r1, #350]	; 0x15e
                        self.y_top = y;
    f1da:	f8bd 036a 	ldrh.w	r0, [sp, #874]	; 0x36a
    f1de:	991e      	ldr	r1, [sp, #120]	; 0x78
    f1e0:	f8a1 0160 	strh.w	r0, [r1, #352]	; 0x160
                        self.y_bottom = y;
    f1e4:	f8bd 036a 	ldrh.w	r0, [sp, #874]	; 0x36a
    f1e8:	991e      	ldr	r1, [sp, #120]	; 0x78
    f1ea:	f8a1 0162 	strh.w	r0, [r1, #354]	; 0x162
                        self.colors.clear();
    f1ee:	981e      	ldr	r0, [sp, #120]	; 0x78
    f1f0:	3090      	adds	r0, #144	; 0x90
    f1f2:	f002 fdc2 	bl	11d7a <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17h345da7541567fd72E>
    f1f6:	e7ff      	b.n	f1f8 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x160>
                        self.colors.extend_from_slice(&colors)
    f1f8:	981e      	ldr	r0, [sp, #120]	; 0x78
    f1fa:	3090      	adds	r0, #144	; 0x90
    f1fc:	a9db      	add	r1, sp, #876	; 0x36c
    f1fe:	9012      	str	r0, [sp, #72]	; 0x48
    f200:	4608      	mov	r0, r1
    f202:	f002 fd25 	bl	11c50 <_ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6f8a869eff6f2bb3E>
    f206:	9011      	str	r0, [sp, #68]	; 0x44
    f208:	9110      	str	r1, [sp, #64]	; 0x40
    f20a:	e7ff      	b.n	f20c <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x174>
    f20c:	9812      	ldr	r0, [sp, #72]	; 0x48
    f20e:	9911      	ldr	r1, [sp, #68]	; 0x44
    f210:	9a10      	ldr	r2, [sp, #64]	; 0x40
    f212:	f002 fd70 	bl	11cf6 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$17extend_from_slice17h03dd1eb3e64396cdE>
    f216:	900f      	str	r0, [sp, #60]	; 0x3c
    f218:	e7ff      	b.n	f21a <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x182>
    f21a:	980f      	ldr	r0, [sp, #60]	; 0x3c
    f21c:	f000 0001 	and.w	r0, r0, #1
    f220:	f64d 1130 	movw	r1, #55600	; 0xd930
    f224:	f2c0 0101 	movt	r1, #1
    f228:	f64d 13ec 	movw	r3, #55788	; 0xd9ec
    f22c:	f2c0 0301 	movt	r3, #1
    f230:	2205      	movs	r2, #5
    f232:	f7fc ff03 	bl	c03c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h76d1a1cb65ecbf07E>
    f236:	e7ff      	b.n	f238 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x1a0>
                        continue;
    f238:	e7ff      	b.n	f23a <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x1a2>
    f23a:	a8db      	add	r0, sp, #876	; 0x36c
                    self.colors.clear();
                    self.colors.extend_from_slice(&colors)
                        .expect("never");
                    return Some(row);
                }
            }
    f23c:	f000 faa4 	bl	f788 <_ZN4core3ptr18real_drop_in_place17he529e067b37698d0E>
    f240:	e7ff      	b.n	f242 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x1aa>
        }
    f242:	981f      	ldr	r0, [sp, #124]	; 0x7c
    f244:	2801      	cmp	r0, #1
    f246:	f000 80ee 	beq.w	f426 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x38e>
    f24a:	e0f0      	b.n	f42e <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x396>
    f24c:	2001      	movs	r0, #1
                    if y == self.y_bottom + 1 && x_left == self.x_left && x_right == self.x_right {                        
    f24e:	f88d 03d5 	strb.w	r0, [sp, #981]	; 0x3d5
    f252:	e00b      	b.n	f26c <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x1d4>
    f254:	2000      	movs	r0, #0
    f256:	f88d 03d5 	strb.w	r0, [sp, #981]	; 0x3d5
    f25a:	e007      	b.n	f26c <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x1d4>
    f25c:	f8bd 0368 	ldrh.w	r0, [sp, #872]	; 0x368
    f260:	991e      	ldr	r1, [sp, #120]	; 0x78
    f262:	f8b1 115e 	ldrh.w	r1, [r1, #350]	; 0x15e
    f266:	4288      	cmp	r0, r1
    f268:	d0f0      	beq.n	f24c <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x1b4>
    f26a:	e7f3      	b.n	f254 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x1bc>
    f26c:	f89d 03d5 	ldrb.w	r0, [sp, #981]	; 0x3d5
    f270:	07c0      	lsls	r0, r0, #31
    f272:	2800      	cmp	r0, #0
    f274:	d11d      	bne.n	f2b2 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x21a>
    f276:	e040      	b.n	f2fa <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x262>
    f278:	2001      	movs	r0, #1
    f27a:	f88d 03d6 	strb.w	r0, [sp, #982]	; 0x3d6
    f27e:	e00b      	b.n	f298 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x200>
    f280:	2000      	movs	r0, #0
    f282:	f88d 03d6 	strb.w	r0, [sp, #982]	; 0x3d6
    f286:	e007      	b.n	f298 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x200>
    f288:	f8bd 0366 	ldrh.w	r0, [sp, #870]	; 0x366
    f28c:	991e      	ldr	r1, [sp, #120]	; 0x78
    f28e:	f8b1 115c 	ldrh.w	r1, [r1, #348]	; 0x15c
    f292:	4288      	cmp	r0, r1
    f294:	d0f0      	beq.n	f278 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x1e0>
    f296:	e7f3      	b.n	f280 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x1e8>
    f298:	f89d 03d6 	ldrb.w	r0, [sp, #982]	; 0x3d6
    f29c:	07c0      	lsls	r0, r0, #31
    f29e:	2800      	cmp	r0, #0
    f2a0:	d1dc      	bne.n	f25c <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x1c4>
    f2a2:	e7d7      	b.n	f254 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x1bc>
    f2a4:	9813      	ldr	r0, [sp, #76]	; 0x4c
    f2a6:	b281      	uxth	r1, r0
    f2a8:	9a14      	ldr	r2, [sp, #80]	; 0x50
    f2aa:	b293      	uxth	r3, r2
    f2ac:	428b      	cmp	r3, r1
    f2ae:	d0eb      	beq.n	f288 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x1f0>
    f2b0:	e7e6      	b.n	f280 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x1e8>
                        if self.colors.extend_from_slice(&colors).is_ok() {
    f2b2:	981e      	ldr	r0, [sp, #120]	; 0x78
    f2b4:	3090      	adds	r0, #144	; 0x90
    f2b6:	a9db      	add	r1, sp, #876	; 0x36c
    f2b8:	900e      	str	r0, [sp, #56]	; 0x38
    f2ba:	4608      	mov	r0, r1
    f2bc:	f002 fcc8 	bl	11c50 <_ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6f8a869eff6f2bb3E>
    f2c0:	900d      	str	r0, [sp, #52]	; 0x34
    f2c2:	910c      	str	r1, [sp, #48]	; 0x30
    f2c4:	e7ff      	b.n	f2c6 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x22e>
    f2c6:	980e      	ldr	r0, [sp, #56]	; 0x38
    f2c8:	990d      	ldr	r1, [sp, #52]	; 0x34
    f2ca:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    f2cc:	f002 fd13 	bl	11cf6 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$17extend_from_slice17h03dd1eb3e64396cdE>
    f2d0:	f88d 03d7 	strb.w	r0, [sp, #983]	; 0x3d7
    f2d4:	e7ff      	b.n	f2d6 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x23e>
    f2d6:	f20d 30d7 	addw	r0, sp, #983	; 0x3d7
    f2da:	f7fc fe6b 	bl	bfb4 <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h6eebeb2a9c50ab48E>
    f2de:	900b      	str	r0, [sp, #44]	; 0x2c
    f2e0:	e7ff      	b.n	f2e2 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x24a>
    f2e2:	980b      	ldr	r0, [sp, #44]	; 0x2c
    f2e4:	07c1      	lsls	r1, r0, #31
    f2e6:	2900      	cmp	r1, #0
    f2e8:	d101      	bne.n	f2ee <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x256>
    f2ea:	e7ff      	b.n	f2ec <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x254>
                    if y == self.y_bottom + 1 && x_left == self.x_left && x_right == self.x_right {                        
    f2ec:	e005      	b.n	f2fa <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x262>
                            self.y_bottom = y;
    f2ee:	f8bd 036a 	ldrh.w	r0, [sp, #874]	; 0x36a
    f2f2:	991e      	ldr	r1, [sp, #120]	; 0x78
    f2f4:	f8a1 0162 	strh.w	r0, [r1, #354]	; 0x162
                            continue;    
    f2f8:	e79f      	b.n	f23a <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x1a2>
                        x_left: self.x_left,
    f2fa:	981e      	ldr	r0, [sp, #120]	; 0x78
    f2fc:	f8b0 115c 	ldrh.w	r1, [r0, #348]	; 0x15c
                        x_right: self.x_right,
    f300:	f8b0 215e 	ldrh.w	r2, [r0, #350]	; 0x15e
                        y_top: self.y_top,
    f304:	f8b0 3160 	ldrh.w	r3, [r0, #352]	; 0x160
                        y_bottom: self.y_bottom,
    f308:	f8b0 c162 	ldrh.w	ip, [r0, #354]	; 0x162
                        colors: self.colors.clone(),
    f30c:	3090      	adds	r0, #144	; 0x90
    f30e:	f20d 4eac 	addw	lr, sp, #1196	; 0x4ac
    f312:	900a      	str	r0, [sp, #40]	; 0x28
    f314:	4670      	mov	r0, lr
    f316:	f8dd e028 	ldr.w	lr, [sp, #40]	; 0x28
    f31a:	9109      	str	r1, [sp, #36]	; 0x24
    f31c:	4671      	mov	r1, lr
    f31e:	9208      	str	r2, [sp, #32]
    f320:	9307      	str	r3, [sp, #28]
    f322:	f8cd c018 	str.w	ip, [sp, #24]
    f326:	f002 fc54 	bl	11bd2 <_ZN70_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hca8a7b49119f2322E>
    f32a:	e7ff      	b.n	f32c <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x294>
                    let row = PixelBlock {
    f32c:	9809      	ldr	r0, [sp, #36]	; 0x24
    f32e:	f8ad 04a4 	strh.w	r0, [sp, #1188]	; 0x4a4
    f332:	9908      	ldr	r1, [sp, #32]
    f334:	f8ad 14a6 	strh.w	r1, [sp, #1190]	; 0x4a6
    f338:	9a07      	ldr	r2, [sp, #28]
    f33a:	f8ad 24a8 	strh.w	r2, [sp, #1192]	; 0x4a8
    f33e:	9b06      	ldr	r3, [sp, #24]
    f340:	f8ad 34aa 	strh.w	r3, [sp, #1194]	; 0x4aa
    f344:	a8f6      	add	r0, sp, #984	; 0x3d8
    f346:	f20d 41ac 	addw	r1, sp, #1196	; 0x4ac
    f34a:	22cc      	movs	r2, #204	; 0xcc
    f34c:	f00b fdcc 	bl	1aee8 <__aeabi_memcpy>
                    self.x_left = x_left;
    f350:	f8bd 0366 	ldrh.w	r0, [sp, #870]	; 0x366
    f354:	991e      	ldr	r1, [sp, #120]	; 0x78
    f356:	f8a1 015c 	strh.w	r0, [r1, #348]	; 0x15c
                    self.x_right = x_right;
    f35a:	f8bd 0368 	ldrh.w	r0, [sp, #872]	; 0x368
    f35e:	991e      	ldr	r1, [sp, #120]	; 0x78
    f360:	f8a1 015e 	strh.w	r0, [r1, #350]	; 0x15e
                    self.y_top = y;
    f364:	f8bd 036a 	ldrh.w	r0, [sp, #874]	; 0x36a
    f368:	991e      	ldr	r1, [sp, #120]	; 0x78
    f36a:	f8a1 0160 	strh.w	r0, [r1, #352]	; 0x160
                    self.y_bottom = y;
    f36e:	f8bd 036a 	ldrh.w	r0, [sp, #874]	; 0x36a
    f372:	991e      	ldr	r1, [sp, #120]	; 0x78
    f374:	f8a1 0162 	strh.w	r0, [r1, #354]	; 0x162
                    self.colors.clear();
    f378:	981e      	ldr	r0, [sp, #120]	; 0x78
    f37a:	3090      	adds	r0, #144	; 0x90
    f37c:	f002 fcfd 	bl	11d7a <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17h345da7541567fd72E>
    f380:	e7ff      	b.n	f382 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x2ea>
                    self.colors.extend_from_slice(&colors)
    f382:	981e      	ldr	r0, [sp, #120]	; 0x78
    f384:	3090      	adds	r0, #144	; 0x90
    f386:	a9db      	add	r1, sp, #876	; 0x36c
    f388:	9005      	str	r0, [sp, #20]
    f38a:	4608      	mov	r0, r1
    f38c:	f002 fc60 	bl	11c50 <_ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6f8a869eff6f2bb3E>
    f390:	9004      	str	r0, [sp, #16]
    f392:	9103      	str	r1, [sp, #12]
    f394:	e7ff      	b.n	f396 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x2fe>
    f396:	9805      	ldr	r0, [sp, #20]
    f398:	9904      	ldr	r1, [sp, #16]
    f39a:	9a03      	ldr	r2, [sp, #12]
    f39c:	f002 fcab 	bl	11cf6 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$17extend_from_slice17h03dd1eb3e64396cdE>
    f3a0:	9002      	str	r0, [sp, #8]
    f3a2:	e7ff      	b.n	f3a4 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x30c>
    f3a4:	9802      	ldr	r0, [sp, #8]
    f3a6:	f000 0001 	and.w	r0, r0, #1
    f3aa:	f64d 1130 	movw	r1, #55600	; 0xd930
    f3ae:	f2c0 0101 	movt	r1, #1
    f3b2:	f64d 230c 	movw	r3, #55820	; 0xda0c
    f3b6:	f2c0 0301 	movt	r3, #1
    f3ba:	2205      	movs	r2, #5
    f3bc:	f7fc fe3e 	bl	c03c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h76d1a1cb65ecbf07E>
    f3c0:	e7ff      	b.n	f3c2 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x32a>
    f3c2:	f50d 60af 	add.w	r0, sp, #1400	; 0x578
    f3c6:	a9f6      	add	r1, sp, #984	; 0x3d8
    f3c8:	22d4      	movs	r2, #212	; 0xd4
                    return Some(row);
    f3ca:	9001      	str	r0, [sp, #4]
    f3cc:	9200      	str	r2, [sp, #0]
    f3ce:	f00b fd8b 	bl	1aee8 <__aeabi_memcpy>
    f3d2:	981d      	ldr	r0, [sp, #116]	; 0x74
    f3d4:	3004      	adds	r0, #4
    f3d6:	9901      	ldr	r1, [sp, #4]
    f3d8:	9a00      	ldr	r2, [sp, #0]
    f3da:	f00b fd85 	bl	1aee8 <__aeabi_memcpy>
    f3de:	2001      	movs	r0, #1
    f3e0:	991d      	ldr	r1, [sp, #116]	; 0x74
    f3e2:	6008      	str	r0, [r1, #0]
    f3e4:	a8db      	add	r0, sp, #876	; 0x36c
            }
    f3e6:	f000 f9cf 	bl	f788 <_ZN4core3ptr18real_drop_in_place17he529e067b37698d0E>
    f3ea:	e7ff      	b.n	f3ec <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x354>
                    return Some(row);
    f3ec:	e017      	b.n	f41e <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x386>
    f3ee:	2000      	movs	r0, #0
        }
    f3f0:	f88d 064f 	strb.w	r0, [sp, #1615]	; 0x64f
    }
    f3f4:	f50d 6dca 	add.w	sp, sp, #1616	; 0x650
    f3f8:	bd80      	pop	{r7, pc}
        }
    f3fa:	f89d 064f 	ldrb.w	r0, [sp, #1615]	; 0x64f
    f3fe:	07c0      	lsls	r0, r0, #31
    f400:	2800      	cmp	r0, #0
    f402:	d0f4      	beq.n	f3ee <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x356>
    f404:	e7ff      	b.n	f406 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x36e>
    f406:	2000      	movs	r0, #0
    f408:	f88d 064f 	strb.w	r0, [sp, #1615]	; 0x64f
    f40c:	a81f      	add	r0, sp, #124	; 0x7c
    f40e:	3004      	adds	r0, #4
    f410:	f000 f9ba 	bl	f788 <_ZN4core3ptr18real_drop_in_place17he529e067b37698d0E>
    f414:	e7eb      	b.n	f3ee <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x356>
    f416:	a81f      	add	r0, sp, #124	; 0x7c
    f418:	f000 f999 	bl	f74e <_ZN4core3ptr18real_drop_in_place17h8364e3375035fdecE>
    f41c:	e7e7      	b.n	f3ee <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x356>
    f41e:	981f      	ldr	r0, [sp, #124]	; 0x7c
    f420:	2801      	cmp	r0, #1
    f422:	d0ea      	beq.n	f3fa <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x362>
    f424:	e7f7      	b.n	f416 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x37e>
    f426:	2000      	movs	r0, #0
    f428:	f88d 064f 	strb.w	r0, [sp, #1615]	; 0x64f
                        continue;
    f42c:	e63d      	b.n	f0aa <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x12>
    f42e:	a81f      	add	r0, sp, #124	; 0x7c
        }
    f430:	f000 f98d 	bl	f74e <_ZN4core3ptr18real_drop_in_place17h8364e3375035fdecE>
    f434:	e7f7      	b.n	f426 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E+0x38e>
                    if y == self.y_bottom + 1 && x_left == self.x_left && x_right == self.x_right {                        
    f436:	f64d 10c0 	movw	r0, #55744	; 0xd9c0
    f43a:	f2c0 0001 	movt	r0, #1
    f43e:	f64d 12fc 	movw	r2, #55804	; 0xd9fc
    f442:	f2c0 0201 	movt	r2, #1
    f446:	211c      	movs	r1, #28
    f448:	f005 fbab 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    f44c:	defe      	udf	#254	; 0xfe

0000f44e <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E>:
pub fn draw_blocks<SPI, DC, RST, T>(display: &mut ST7735<SPI, DC, RST>, item_pixels: T) -> Result<(),()>
    f44e:	b570      	push	{r4, r5, r6, lr}
    f450:	f5ad 6d46 	sub.w	sp, sp, #3168	; 0xc60
    f454:	b082      	sub	sp, #8
    f456:	9011      	str	r0, [sp, #68]	; 0x44
    f458:	a81b      	add	r0, sp, #108	; 0x6c
    let pixels = item_pixels.into_iter();
    f45a:	4602      	mov	r2, r0
    f45c:	e891 5078 	ldmia.w	r1, {r3, r4, r5, r6, ip, lr}
    f460:	e882 5078 	stmia.w	r2, {r3, r4, r5, r6, ip, lr}
    f464:	a913      	add	r1, sp, #76	; 0x4c
    f466:	9010      	str	r0, [sp, #64]	; 0x40
    f468:	4608      	mov	r0, r1
    f46a:	9910      	ldr	r1, [sp, #64]	; 0x40
    f46c:	f7f9 fbe1 	bl	8c32 <_ZN116_$LT$embedded_graphics..primitives..circle..Circle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfaf6e8aae9dccdb2E>
    f470:	e7ff      	b.n	f472 <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E+0x24>
    f472:	a813      	add	r0, sp, #76	; 0x4c
    f474:	a945      	add	r1, sp, #276	; 0x114
    let rows = to_rows(pixels);
    f476:	460a      	mov	r2, r1
    f478:	e8b0 5018 	ldmia.w	r0!, {r3, r4, ip, lr}
    f47c:	e8a2 5018 	stmia.w	r2!, {r3, r4, ip, lr}
    f480:	e890 5018 	ldmia.w	r0, {r3, r4, ip, lr}
    f484:	e882 5018 	stmia.w	r2, {r3, r4, ip, lr}
    f488:	a821      	add	r0, sp, #132	; 0x84
    f48a:	f000 f8c3 	bl	f614 <_ZN22piet_embedded_graphics5batch7to_rows17ha1917c028f38342aE>
    f48e:	e7ff      	b.n	f490 <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E+0x42>
    f490:	a8a7      	add	r0, sp, #668	; 0x29c
    f492:	a921      	add	r1, sp, #132	; 0x84
    f494:	2290      	movs	r2, #144	; 0x90
    let blocks = to_blocks(rows);
    f496:	900f      	str	r0, [sp, #60]	; 0x3c
    f498:	f00b fd26 	bl	1aee8 <__aeabi_memcpy>
    f49c:	a84d      	add	r0, sp, #308	; 0x134
    f49e:	990f      	ldr	r1, [sp, #60]	; 0x3c
    f4a0:	f000 f8e7 	bl	f672 <_ZN22piet_embedded_graphics5batch9to_blocks17hebd6f683755c37b6E>
    f4a4:	e7ff      	b.n	f4a6 <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E+0x58>
    f4a6:	f20d 4094 	addw	r0, sp, #1172	; 0x494
    f4aa:	a94d      	add	r1, sp, #308	; 0x134
    f4ac:	f44f 72b4 	mov.w	r2, #360	; 0x168
    for PixelBlock { x_left, x_right, y_top, y_bottom, colors, .. } in blocks {
    f4b0:	900e      	str	r0, [sp, #56]	; 0x38
    f4b2:	f00b fd19 	bl	1aee8 <__aeabi_memcpy>
    f4b6:	a8cb      	add	r0, sp, #812	; 0x32c
    f4b8:	990e      	ldr	r1, [sp, #56]	; 0x38
    f4ba:	f000 f902 	bl	f6c2 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf1078bcf3a365169E>
    f4be:	e7ff      	b.n	f4c0 <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E+0x72>
    f4c0:	f20d 50fc 	addw	r0, sp, #1532	; 0x5fc
    f4c4:	a9cb      	add	r1, sp, #812	; 0x32c
    f4c6:	f44f 72b4 	mov.w	r2, #360	; 0x168
    f4ca:	f00b fd0d 	bl	1aee8 <__aeabi_memcpy>
    f4ce:	e7ff      	b.n	f4d0 <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E+0x82>
    f4d0:	f60d 0038 	addw	r0, sp, #2104	; 0x838
    f4d4:	f20d 51fc 	addw	r1, sp, #1532	; 0x5fc
    f4d8:	f7ff fdde 	bl	f098 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcf9221d8fba03860E>
    f4dc:	e7ff      	b.n	f4de <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E+0x90>
    f4de:	f8dd 0838 	ldr.w	r0, [sp, #2104]	; 0x838
    f4e2:	2800      	cmp	r0, #0
    f4e4:	d001      	beq.n	f4ea <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E+0x9c>
    f4e6:	e7ff      	b.n	f4e8 <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E+0x9a>
    f4e8:	e005      	b.n	f4f6 <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E+0xa8>
    f4ea:	f60d 0038 	addw	r0, sp, #2104	; 0x838
    f4ee:	f000 f95d 	bl	f7ac <_ZN4core3ptr18real_drop_in_place17heb4f76ef953c38ccE>
    f4f2:	e01c      	b.n	f52e <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E+0xe0>
    f4f4:	defe      	udf	#254	; 0xfe
    f4f6:	f60d 0038 	addw	r0, sp, #2104	; 0x838
    f4fa:	1d01      	adds	r1, r0, #4
    f4fc:	f50d 6011 	add.w	r0, sp, #2320	; 0x910
    f500:	22d4      	movs	r2, #212	; 0xd4
    f502:	900d      	str	r0, [sp, #52]	; 0x34
    f504:	920c      	str	r2, [sp, #48]	; 0x30
    f506:	f00b fcef 	bl	1aee8 <__aeabi_memcpy>
    f50a:	f60d 10e4 	addw	r0, sp, #2532	; 0x9e4
    f50e:	900b      	str	r0, [sp, #44]	; 0x2c
    f510:	990d      	ldr	r1, [sp, #52]	; 0x34
    f512:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    f514:	f00b fce8 	bl	1aee8 <__aeabi_memcpy>
    f518:	f20d 7064 	addw	r0, sp, #1892	; 0x764
    f51c:	990b      	ldr	r1, [sp, #44]	; 0x2c
    f51e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    f520:	f00b fce2 	bl	1aee8 <__aeabi_memcpy>
    f524:	f8dd 0838 	ldr.w	r0, [sp, #2104]	; 0x838
    f528:	2801      	cmp	r0, #1
    f52a:	d02d      	beq.n	f588 <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E+0x13a>
    f52c:	e06d      	b.n	f60a <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E+0x1bc>
    f52e:	f20d 50fc 	addw	r0, sp, #1532	; 0x5fc
    }
    f532:	f000 f8f5 	bl	f720 <_ZN4core3ptr18real_drop_in_place17h3d1f55fb40845f1dE>
    f536:	e023      	b.n	f580 <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E+0x132>
        display.set_pixels(
    f538:	f89d 0b8f 	ldrb.w	r0, [sp, #2959]	; 0xb8f
    f53c:	f7fc fb66 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    f540:	f88d 0b8e 	strb.w	r0, [sp, #2958]	; 0xb8e
    f544:	e7ff      	b.n	f546 <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E+0xf8>
            colors) ? ;
    f546:	f89d 0b8e 	ldrb.w	r0, [sp, #2958]	; 0xb8e
    f54a:	07c1      	lsls	r1, r0, #31
    f54c:	2900      	cmp	r1, #0
    f54e:	d016      	beq.n	f57e <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E+0x130>
    f550:	e7ff      	b.n	f552 <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E+0x104>
    f552:	e000      	b.n	f556 <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E+0x108>
        display.set_pixels(
    f554:	defe      	udf	#254	; 0xfe
            colors) ? ;
    f556:	f000 fe19 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    f55a:	e005      	b.n	f568 <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E+0x11a>
}
    f55c:	f89d 004b 	ldrb.w	r0, [sp, #75]	; 0x4b
    f560:	f50d 6d46 	add.w	sp, sp, #3168	; 0xc60
    f564:	b002      	add	sp, #8
    f566:	bd70      	pop	{r4, r5, r6, pc}
            colors) ? ;
    f568:	f7fc feb8 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    f56c:	f88d 004b 	strb.w	r0, [sp, #75]	; 0x4b
    f570:	e7ff      	b.n	f572 <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E+0x124>
    f572:	f20d 50fc 	addw	r0, sp, #1532	; 0x5fc
    }
    f576:	f000 f8d3 	bl	f720 <_ZN4core3ptr18real_drop_in_place17h3d1f55fb40845f1dE>
    f57a:	e7ff      	b.n	f57c <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E+0x12e>
}
    f57c:	e7ee      	b.n	f55c <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E+0x10e>
    for PixelBlock { x_left, x_right, y_top, y_bottom, colors, .. } in blocks {
    f57e:	e7a7      	b.n	f4d0 <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E+0x82>
    f580:	2000      	movs	r0, #0
    Ok(())
    f582:	f88d 004b 	strb.w	r0, [sp, #75]	; 0x4b
}
    f586:	e7e9      	b.n	f55c <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E+0x10e>
    for PixelBlock { x_left, x_right, y_top, y_bottom, colors, .. } in blocks {
    f588:	f8bd 0830 	ldrh.w	r0, [sp, #2096]	; 0x830
    f58c:	f8ad 0ab8 	strh.w	r0, [sp, #2744]	; 0xab8
    f590:	f8bd 0832 	ldrh.w	r0, [sp, #2098]	; 0x832
    f594:	f8ad 0aba 	strh.w	r0, [sp, #2746]	; 0xaba
    f598:	f8bd 0834 	ldrh.w	r0, [sp, #2100]	; 0x834
    f59c:	f8ad 0abc 	strh.w	r0, [sp, #2748]	; 0xabc
    f5a0:	f8bd 0836 	ldrh.w	r0, [sp, #2102]	; 0x836
    f5a4:	f8ad 0abe 	strh.w	r0, [sp, #2750]	; 0xabe
    f5a8:	f50d 602c 	add.w	r0, sp, #2752	; 0xac0
    f5ac:	f20d 7164 	addw	r1, sp, #1892	; 0x764
    f5b0:	22cc      	movs	r2, #204	; 0xcc
    f5b2:	900a      	str	r0, [sp, #40]	; 0x28
    f5b4:	9209      	str	r2, [sp, #36]	; 0x24
    f5b6:	f00b fc97 	bl	1aee8 <__aeabi_memcpy>
        display.set_pixels(
    f5ba:	9811      	ldr	r0, [sp, #68]	; 0x44
    f5bc:	f8bd 3aba 	ldrh.w	r3, [sp, #2746]	; 0xaba
    f5c0:	f8bd 2abc 	ldrh.w	r2, [sp, #2748]	; 0xabc
    f5c4:	f8bd 1ab8 	ldrh.w	r1, [sp, #2744]	; 0xab8
    f5c8:	f8bd cabe 	ldrh.w	ip, [sp, #2750]	; 0xabe
    f5cc:	f50d 6e39 	add.w	lr, sp, #2960	; 0xb90
            colors) ? ;
    f5d0:	9008      	str	r0, [sp, #32]
    f5d2:	4670      	mov	r0, lr
    f5d4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    f5d6:	9107      	str	r1, [sp, #28]
    f5d8:	4621      	mov	r1, r4
    f5da:	9d09      	ldr	r5, [sp, #36]	; 0x24
    f5dc:	9206      	str	r2, [sp, #24]
    f5de:	462a      	mov	r2, r5
    f5e0:	9305      	str	r3, [sp, #20]
    f5e2:	f8cd c010 	str.w	ip, [sp, #16]
    f5e6:	f8cd e00c 	str.w	lr, [sp, #12]
    f5ea:	f00b fc7d 	bl	1aee8 <__aeabi_memcpy>
        display.set_pixels(
    f5ee:	4668      	mov	r0, sp
    f5f0:	9903      	ldr	r1, [sp, #12]
    f5f2:	6041      	str	r1, [r0, #4]
    f5f4:	9a04      	ldr	r2, [sp, #16]
    f5f6:	6002      	str	r2, [r0, #0]
    f5f8:	9808      	ldr	r0, [sp, #32]
    f5fa:	9907      	ldr	r1, [sp, #28]
    f5fc:	9a06      	ldr	r2, [sp, #24]
    f5fe:	9b05      	ldr	r3, [sp, #20]
    f600:	f7fe fb47 	bl	dc92 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE>
    f604:	f88d 0b8f 	strb.w	r0, [sp, #2959]	; 0xb8f
    f608:	e796      	b.n	f538 <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E+0xea>
    f60a:	f60d 0038 	addw	r0, sp, #2104	; 0x838
    for PixelBlock { x_left, x_right, y_top, y_bottom, colors, .. } in blocks {
    f60e:	f000 f8cd 	bl	f7ac <_ZN4core3ptr18real_drop_in_place17heb4f76ef953c38ccE>
    f612:	e7b9      	b.n	f588 <_ZN22piet_embedded_graphics5batch11draw_blocks17hdffcff5cc8935630E+0x13a>

0000f614 <_ZN22piet_embedded_graphics5batch7to_rows17ha1917c028f38342aE>:
fn to_rows<P>(pixels: P) -> RowIterator<P>
    f614:	b510      	push	{r4, lr}
    f616:	b0a4      	sub	sp, #144	; 0x90
    f618:	aa02      	add	r2, sp, #8
        pixels,
    f61a:	e8b1 5018 	ldmia.w	r1!, {r3, r4, ip, lr}
    f61e:	e8a2 5018 	stmia.w	r2!, {r3, r4, ip, lr}
    f622:	e891 5018 	ldmia.w	r1, {r3, r4, ip, lr}
    f626:	e882 5018 	stmia.w	r2, {r3, r4, ip, lr}
    f62a:	a90a      	add	r1, sp, #40	; 0x28
        colors: RowColors::new(),
    f62c:	9001      	str	r0, [sp, #4]
    f62e:	4608      	mov	r0, r1
    f630:	f002 fb81 	bl	11d36 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$3new17h538fc545c007851eE>
    f634:	e7ff      	b.n	f636 <_ZN22piet_embedded_graphics5batch7to_rows17ha1917c028f38342aE+0x22>
    f636:	a802      	add	r0, sp, #8
    RowIterator::<P> {
    f638:	9901      	ldr	r1, [sp, #4]
    f63a:	e8b0 500c 	ldmia.w	r0!, {r2, r3, ip, lr}
    f63e:	e8a1 500c 	stmia.w	r1!, {r2, r3, ip, lr}
    f642:	e890 500c 	ldmia.w	r0, {r2, r3, ip, lr}
    f646:	e881 500c 	stmia.w	r1, {r2, r3, ip, lr}
    f64a:	2000      	movs	r0, #0
    f64c:	9901      	ldr	r1, [sp, #4]
    f64e:	f8a1 0088 	strh.w	r0, [r1, #136]	; 0x88
    f652:	f8a1 008a 	strh.w	r0, [r1, #138]	; 0x8a
    f656:	f8a1 008c 	strh.w	r0, [r1, #140]	; 0x8c
    f65a:	f101 0020 	add.w	r0, r1, #32
    f65e:	a90a      	add	r1, sp, #40	; 0x28
    f660:	2268      	movs	r2, #104	; 0x68
    f662:	f00b fc41 	bl	1aee8 <__aeabi_memcpy>
    f666:	2001      	movs	r0, #1
    f668:	9901      	ldr	r1, [sp, #4]
    f66a:	f881 008e 	strb.w	r0, [r1, #142]	; 0x8e
}
    f66e:	b024      	add	sp, #144	; 0x90
    f670:	bd10      	pop	{r4, pc}

0000f672 <_ZN22piet_embedded_graphics5batch9to_blocks17hebd6f683755c37b6E>:
fn to_blocks<R>(rows: R) -> BlockIterator<R>
    f672:	b580      	push	{r7, lr}
    f674:	b0d8      	sub	sp, #352	; 0x160
    f676:	aa01      	add	r2, sp, #4
    f678:	2390      	movs	r3, #144	; 0x90
        rows,
    f67a:	9000      	str	r0, [sp, #0]
    f67c:	4610      	mov	r0, r2
    f67e:	461a      	mov	r2, r3
    f680:	f00b fc32 	bl	1aee8 <__aeabi_memcpy>
    f684:	a825      	add	r0, sp, #148	; 0x94
        colors: BlockColors::new(),
    f686:	f002 fb47 	bl	11d18 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$3new17h34731c8dc462e1a2E>
    f68a:	e7ff      	b.n	f68c <_ZN22piet_embedded_graphics5batch9to_blocks17hebd6f683755c37b6E+0x1a>
    f68c:	a901      	add	r1, sp, #4
    f68e:	2290      	movs	r2, #144	; 0x90
    BlockIterator::<R> {
    f690:	9800      	ldr	r0, [sp, #0]
    f692:	f00b fc29 	bl	1aee8 <__aeabi_memcpy>
    f696:	2000      	movs	r0, #0
    f698:	9900      	ldr	r1, [sp, #0]
    f69a:	f8a1 015c 	strh.w	r0, [r1, #348]	; 0x15c
    f69e:	f8a1 015e 	strh.w	r0, [r1, #350]	; 0x15e
    f6a2:	f8a1 0160 	strh.w	r0, [r1, #352]	; 0x160
    f6a6:	f8a1 0162 	strh.w	r0, [r1, #354]	; 0x162
    f6aa:	f101 0090 	add.w	r0, r1, #144	; 0x90
    f6ae:	a925      	add	r1, sp, #148	; 0x94
    f6b0:	22cc      	movs	r2, #204	; 0xcc
    f6b2:	f00b fc19 	bl	1aee8 <__aeabi_memcpy>
    f6b6:	2001      	movs	r0, #1
    f6b8:	9900      	ldr	r1, [sp, #0]
    f6ba:	f881 0164 	strb.w	r0, [r1, #356]	; 0x164
}    
    f6be:	b058      	add	sp, #352	; 0x160
    f6c0:	bd80      	pop	{r7, pc}

0000f6c2 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf1078bcf3a365169E>:
    f6c2:	b580      	push	{r7, lr}
    f6c4:	f44f 72b4 	mov.w	r2, #360	; 0x168
    f6c8:	f00b fc0e 	bl	1aee8 <__aeabi_memcpy>
    f6cc:	bd80      	pop	{r7, pc}

0000f6ce <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h2a1175343ed8bbdfE>:
    f6ce:	b088      	sub	sp, #32
    f6d0:	9104      	str	r1, [sp, #16]
    f6d2:	9205      	str	r2, [sp, #20]
    f6d4:	6801      	ldr	r1, [r0, #0]
    f6d6:	2900      	cmp	r1, #0
    f6d8:	9303      	str	r3, [sp, #12]
    f6da:	9002      	str	r0, [sp, #8]
    f6dc:	d002      	beq.n	f6e4 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h2a1175343ed8bbdfE+0x16>
    f6de:	e7ff      	b.n	f6e0 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h2a1175343ed8bbdfE+0x12>
    f6e0:	e00a      	b.n	f6f8 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h2a1175343ed8bbdfE+0x2a>
    f6e2:	defe      	udf	#254	; 0xfe
    f6e4:	9802      	ldr	r0, [sp, #8]
    f6e6:	6841      	ldr	r1, [r0, #4]
    f6e8:	9106      	str	r1, [sp, #24]
    f6ea:	9806      	ldr	r0, [sp, #24]
    f6ec:	9902      	ldr	r1, [sp, #8]
    f6ee:	680a      	ldr	r2, [r1, #0]
    f6f0:	2a00      	cmp	r2, #0
    f6f2:	9001      	str	r0, [sp, #4]
    f6f4:	d010      	beq.n	f718 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h2a1175343ed8bbdfE+0x4a>
    f6f6:	e012      	b.n	f71e <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h2a1175343ed8bbdfE+0x50>
    f6f8:	9802      	ldr	r0, [sp, #8]
    f6fa:	6841      	ldr	r1, [r0, #4]
    f6fc:	9107      	str	r1, [sp, #28]
    f6fe:	9804      	ldr	r0, [sp, #16]
    f700:	9905      	ldr	r1, [sp, #20]
    f702:	466a      	mov	r2, sp
    f704:	9b03      	ldr	r3, [sp, #12]
    f706:	6013      	str	r3, [r2, #0]
    f708:	f64d 231c 	movw	r3, #55836	; 0xda1c
    f70c:	f2c0 0301 	movt	r3, #1
    f710:	aa07      	add	r2, sp, #28
    f712:	f005 fa18 	bl	14b46 <_ZN4core6option18expect_none_failed17h2665e7008169a3baE>
    f716:	defe      	udf	#254	; 0xfe
    f718:	9801      	ldr	r0, [sp, #4]
    f71a:	b008      	add	sp, #32
    f71c:	4770      	bx	lr
    f71e:	e7fb      	b.n	f718 <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h2a1175343ed8bbdfE+0x4a>

0000f720 <_ZN4core3ptr18real_drop_in_place17h3d1f55fb40845f1dE>:
    f720:	b580      	push	{r7, lr}
    f722:	b082      	sub	sp, #8
    f724:	9001      	str	r0, [sp, #4]
    f726:	9801      	ldr	r0, [sp, #4]
    f728:	f000 f820 	bl	f76c <_ZN4core3ptr18real_drop_in_place17hb413ab870661fa5cE>
    f72c:	e001      	b.n	f732 <_ZN4core3ptr18real_drop_in_place17h3d1f55fb40845f1dE+0x12>
    f72e:	b002      	add	sp, #8
    f730:	bd80      	pop	{r7, pc}
    f732:	9801      	ldr	r0, [sp, #4]
    f734:	3090      	adds	r0, #144	; 0x90
    f736:	f000 f830 	bl	f79a <_ZN4core3ptr18real_drop_in_place17he575e23365b80091E>
    f73a:	e7f8      	b.n	f72e <_ZN4core3ptr18real_drop_in_place17h3d1f55fb40845f1dE+0xe>

0000f73c <_ZN4core3ptr18real_drop_in_place17h64e1884895087585E>:
    f73c:	b580      	push	{r7, lr}
    f73e:	b082      	sub	sp, #8
    f740:	9001      	str	r0, [sp, #4]
    f742:	9801      	ldr	r0, [sp, #4]
    f744:	f000 f829 	bl	f79a <_ZN4core3ptr18real_drop_in_place17he575e23365b80091E>
    f748:	e7ff      	b.n	f74a <_ZN4core3ptr18real_drop_in_place17h64e1884895087585E+0xe>
    f74a:	b002      	add	sp, #8
    f74c:	bd80      	pop	{r7, pc}

0000f74e <_ZN4core3ptr18real_drop_in_place17h8364e3375035fdecE>:
    f74e:	b580      	push	{r7, lr}
    f750:	b082      	sub	sp, #8
    f752:	9001      	str	r0, [sp, #4]
    f754:	9801      	ldr	r0, [sp, #4]
    f756:	6800      	ldr	r0, [r0, #0]
    f758:	2800      	cmp	r0, #0
    f75a:	d102      	bne.n	f762 <_ZN4core3ptr18real_drop_in_place17h8364e3375035fdecE+0x14>
    f75c:	e7ff      	b.n	f75e <_ZN4core3ptr18real_drop_in_place17h8364e3375035fdecE+0x10>
    f75e:	b002      	add	sp, #8
    f760:	bd80      	pop	{r7, pc}
    f762:	9801      	ldr	r0, [sp, #4]
    f764:	3004      	adds	r0, #4
    f766:	f000 f830 	bl	f7ca <_ZN4core3ptr18real_drop_in_place17hf8e8cb4cd4262f66E>
    f76a:	e7f8      	b.n	f75e <_ZN4core3ptr18real_drop_in_place17h8364e3375035fdecE+0x10>

0000f76c <_ZN4core3ptr18real_drop_in_place17hb413ab870661fa5cE>:
    f76c:	b580      	push	{r7, lr}
    f76e:	b082      	sub	sp, #8
    f770:	9001      	str	r0, [sp, #4]
    f772:	9801      	ldr	r0, [sp, #4]
    f774:	3020      	adds	r0, #32
    f776:	f000 f807 	bl	f788 <_ZN4core3ptr18real_drop_in_place17he529e067b37698d0E>
    f77a:	e7ff      	b.n	f77c <_ZN4core3ptr18real_drop_in_place17hb413ab870661fa5cE+0x10>
    f77c:	b002      	add	sp, #8
    f77e:	bd80      	pop	{r7, pc}

0000f780 <_ZN4core3ptr18real_drop_in_place17hb4d4d6f7c6ddca12E>:
    f780:	b081      	sub	sp, #4
    f782:	9000      	str	r0, [sp, #0]
    f784:	b001      	add	sp, #4
    f786:	4770      	bx	lr

0000f788 <_ZN4core3ptr18real_drop_in_place17he529e067b37698d0E>:
    f788:	b580      	push	{r7, lr}
    f78a:	b082      	sub	sp, #8
    f78c:	9001      	str	r0, [sp, #4]
    f78e:	9801      	ldr	r0, [sp, #4]
    f790:	f002 fa30 	bl	11bf4 <_ZN73_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5669767cff00bda9E>
    f794:	e7ff      	b.n	f796 <_ZN4core3ptr18real_drop_in_place17he529e067b37698d0E+0xe>
    f796:	b002      	add	sp, #8
    f798:	bd80      	pop	{r7, pc}

0000f79a <_ZN4core3ptr18real_drop_in_place17he575e23365b80091E>:
    f79a:	b580      	push	{r7, lr}
    f79c:	b082      	sub	sp, #8
    f79e:	9001      	str	r0, [sp, #4]
    f7a0:	9801      	ldr	r0, [sp, #4]
    f7a2:	f002 fa3e 	bl	11c22 <_ZN73_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hadf269ac769c1fe1E>
    f7a6:	e7ff      	b.n	f7a8 <_ZN4core3ptr18real_drop_in_place17he575e23365b80091E+0xe>
    f7a8:	b002      	add	sp, #8
    f7aa:	bd80      	pop	{r7, pc}

0000f7ac <_ZN4core3ptr18real_drop_in_place17heb4f76ef953c38ccE>:
    f7ac:	b580      	push	{r7, lr}
    f7ae:	b082      	sub	sp, #8
    f7b0:	9001      	str	r0, [sp, #4]
    f7b2:	9801      	ldr	r0, [sp, #4]
    f7b4:	6800      	ldr	r0, [r0, #0]
    f7b6:	2800      	cmp	r0, #0
    f7b8:	d102      	bne.n	f7c0 <_ZN4core3ptr18real_drop_in_place17heb4f76ef953c38ccE+0x14>
    f7ba:	e7ff      	b.n	f7bc <_ZN4core3ptr18real_drop_in_place17heb4f76ef953c38ccE+0x10>
    f7bc:	b002      	add	sp, #8
    f7be:	bd80      	pop	{r7, pc}
    f7c0:	9801      	ldr	r0, [sp, #4]
    f7c2:	3004      	adds	r0, #4
    f7c4:	f7ff ffba 	bl	f73c <_ZN4core3ptr18real_drop_in_place17h64e1884895087585E>
    f7c8:	e7f8      	b.n	f7bc <_ZN4core3ptr18real_drop_in_place17heb4f76ef953c38ccE+0x10>

0000f7ca <_ZN4core3ptr18real_drop_in_place17hf8e8cb4cd4262f66E>:
    f7ca:	b580      	push	{r7, lr}
    f7cc:	b082      	sub	sp, #8
    f7ce:	9001      	str	r0, [sp, #4]
    f7d0:	9801      	ldr	r0, [sp, #4]
    f7d2:	f7ff ffd9 	bl	f788 <_ZN4core3ptr18real_drop_in_place17he529e067b37698d0E>
    f7d6:	e7ff      	b.n	f7d8 <_ZN4core3ptr18real_drop_in_place17hf8e8cb4cd4262f66E+0xe>
    f7d8:	b002      	add	sp, #8
    f7da:	bd80      	pop	{r7, pc}

0000f7dc <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE>:
    fn next(&mut self) -> Option<Self::Item> {
    f7dc:	b580      	push	{r7, lr}
    f7de:	f5ad 7d46 	sub.w	sp, sp, #792	; 0x318
    f7e2:	9117      	str	r1, [sp, #92]	; 0x5c
        loop {
    f7e4:	9016      	str	r0, [sp, #88]	; 0x58
    f7e6:	e7ff      	b.n	f7e8 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0xc>
            let next_pixel = self.pixels.next();
    f7e8:	9917      	ldr	r1, [sp, #92]	; 0x5c
    f7ea:	a818      	add	r0, sp, #96	; 0x60
    f7ec:	f7fd fdfa 	bl	d3e4 <_ZN134_$LT$embedded_graphics..fonts..font_builder..FontBuilderIterator$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h079f97e1e238f067E>
    f7f0:	e7ff      	b.n	f7f2 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x16>
                None => {  //  If no more pixels...
    f7f2:	9818      	ldr	r0, [sp, #96]	; 0x60
    f7f4:	2800      	cmp	r0, #0
    f7f6:	d002      	beq.n	f7fe <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x22>
    f7f8:	e7ff      	b.n	f7fa <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x1e>
    f7fa:	e04e      	b.n	f89a <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0xbe>
            match next_pixel {
    f7fc:	defe      	udf	#254	; 0xfe
                    if self.first_pixel {
    f7fe:	9817      	ldr	r0, [sp, #92]	; 0x5c
    f800:	f890 009a 	ldrb.w	r0, [r0, #154]	; 0x9a
    f804:	07c0      	lsls	r0, r0, #31
    f806:	2800      	cmp	r0, #0
    f808:	d115      	bne.n	f836 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x5a>
    f80a:	e7ff      	b.n	f80c <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x30>
                        x_left: self.x_left,
    f80c:	9817      	ldr	r0, [sp, #92]	; 0x5c
    f80e:	f8b0 1094 	ldrh.w	r1, [r0, #148]	; 0x94
                        x_right: self.x_right,
    f812:	f8b0 2096 	ldrh.w	r2, [r0, #150]	; 0x96
                        y: self.y,
    f816:	f8b0 3098 	ldrh.w	r3, [r0, #152]	; 0x98
                        colors: self.colors.clone(),
    f81a:	302c      	adds	r0, #44	; 0x2c
    f81c:	f10d 0ce0 	add.w	ip, sp, #224	; 0xe0
    f820:	9015      	str	r0, [sp, #84]	; 0x54
    f822:	4660      	mov	r0, ip
    f824:	f8dd c054 	ldr.w	ip, [sp, #84]	; 0x54
    f828:	9114      	str	r1, [sp, #80]	; 0x50
    f82a:	4661      	mov	r1, ip
    f82c:	9213      	str	r2, [sp, #76]	; 0x4c
    f82e:	9312      	str	r3, [sp, #72]	; 0x48
    f830:	f002 f9be 	bl	11bb0 <_ZN70_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h25529cf37f25b753E>
    f834:	e006      	b.n	f844 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x68>
    f836:	2000      	movs	r0, #0
                        return None;  //  No pixels to group
    f838:	9916      	ldr	r1, [sp, #88]	; 0x58
    f83a:	6008      	str	r0, [r1, #0]
    f83c:	e7ff      	b.n	f83e <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x62>
    }
    f83e:	f50d 7d46 	add.w	sp, sp, #792	; 0x318
    f842:	bd80      	pop	{r7, pc}
                    let row = PixelRow {
    f844:	9814      	ldr	r0, [sp, #80]	; 0x50
    f846:	f8ad 00d8 	strh.w	r0, [sp, #216]	; 0xd8
    f84a:	9913      	ldr	r1, [sp, #76]	; 0x4c
    f84c:	f8ad 10da 	strh.w	r1, [sp, #218]	; 0xda
    f850:	9a12      	ldr	r2, [sp, #72]	; 0x48
    f852:	f8ad 20dc 	strh.w	r2, [sp, #220]	; 0xdc
    f856:	a81c      	add	r0, sp, #112	; 0x70
    f858:	a938      	add	r1, sp, #224	; 0xe0
    f85a:	2268      	movs	r2, #104	; 0x68
    f85c:	f00b fb44 	bl	1aee8 <__aeabi_memcpy>
                    self.colors.clear();
    f860:	9817      	ldr	r0, [sp, #92]	; 0x5c
    f862:	302c      	adds	r0, #44	; 0x2c
    f864:	f002 fa92 	bl	11d8c <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17hfc6c59a7d142150bE>
    f868:	e7ff      	b.n	f86a <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x8e>
                    self.first_pixel = true;
    f86a:	9817      	ldr	r0, [sp, #92]	; 0x5c
    f86c:	2101      	movs	r1, #1
    f86e:	f880 109a 	strb.w	r1, [r0, #154]	; 0x9a
    f872:	a852      	add	r0, sp, #328	; 0x148
    f874:	aa1c      	add	r2, sp, #112	; 0x70
    f876:	2370      	movs	r3, #112	; 0x70
                    return Some(row);
    f878:	9011      	str	r0, [sp, #68]	; 0x44
    f87a:	9110      	str	r1, [sp, #64]	; 0x40
    f87c:	4611      	mov	r1, r2
    f87e:	461a      	mov	r2, r3
    f880:	930f      	str	r3, [sp, #60]	; 0x3c
    f882:	f00b fb31 	bl	1aee8 <__aeabi_memcpy>
    f886:	9816      	ldr	r0, [sp, #88]	; 0x58
    f888:	3004      	adds	r0, #4
    f88a:	9911      	ldr	r1, [sp, #68]	; 0x44
    f88c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    f88e:	f00b fb2b 	bl	1aee8 <__aeabi_memcpy>
    f892:	9810      	ldr	r0, [sp, #64]	; 0x40
    f894:	9916      	ldr	r1, [sp, #88]	; 0x58
    f896:	6008      	str	r0, [r1, #0]
    f898:	e7d1      	b.n	f83e <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x62>
                Some(Pixel(coord, color)) => {  //  If there is a pixel...
    f89a:	9819      	ldr	r0, [sp, #100]	; 0x64
    f89c:	991a      	ldr	r1, [sp, #104]	; 0x68
    f89e:	906e      	str	r0, [sp, #440]	; 0x1b8
    f8a0:	916f      	str	r1, [sp, #444]	; 0x1bc
    f8a2:	f8bd 006c 	ldrh.w	r0, [sp, #108]	; 0x6c
    f8a6:	f8ad 01c2 	strh.w	r0, [sp, #450]	; 0x1c2
                    let x = coord.0 as u16;
    f8aa:	986e      	ldr	r0, [sp, #440]	; 0x1b8
    f8ac:	f8ad 01c4 	strh.w	r0, [sp, #452]	; 0x1c4
                    let y = coord.1 as u16;
    f8b0:	986f      	ldr	r0, [sp, #444]	; 0x1bc
    f8b2:	f8ad 01c6 	strh.w	r0, [sp, #454]	; 0x1c6
                    let color = color.0;
    f8b6:	f8bd 01c2 	ldrh.w	r0, [sp, #450]	; 0x1c2
    f8ba:	f8ad 01c8 	strh.w	r0, [sp, #456]	; 0x1c8
                    if self.first_pixel {
    f8be:	9817      	ldr	r0, [sp, #92]	; 0x5c
    f8c0:	f890 009a 	ldrb.w	r0, [r0, #154]	; 0x9a
    f8c4:	07c0      	lsls	r0, r0, #31
    f8c6:	2800      	cmp	r0, #0
    f8c8:	d10e      	bne.n	f8e8 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x10c>
    f8ca:	e7ff      	b.n	f8cc <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0xf0>
                    if x == self.x_right + 1 && y == self.y {
    f8cc:	f8bd 01c4 	ldrh.w	r0, [sp, #452]	; 0x1c4
    f8d0:	9917      	ldr	r1, [sp, #92]	; 0x5c
    f8d2:	f8b1 1096 	ldrh.w	r1, [r1, #150]	; 0x96
    f8d6:	3101      	adds	r1, #1
    f8d8:	b28a      	uxth	r2, r1
    f8da:	460b      	mov	r3, r1
    f8dc:	428a      	cmp	r2, r1
    f8de:	900e      	str	r0, [sp, #56]	; 0x38
    f8e0:	930d      	str	r3, [sp, #52]	; 0x34
    f8e2:	f040 80ce 	bne.w	fa82 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x2a6>
    f8e6:	e048      	b.n	f97a <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x19e>
                        self.first_pixel = false;
    f8e8:	9817      	ldr	r0, [sp, #92]	; 0x5c
    f8ea:	2100      	movs	r1, #0
    f8ec:	f880 109a 	strb.w	r1, [r0, #154]	; 0x9a
                        self.x_left = x;
    f8f0:	f8bd 01c4 	ldrh.w	r0, [sp, #452]	; 0x1c4
    f8f4:	9917      	ldr	r1, [sp, #92]	; 0x5c
    f8f6:	f8a1 0094 	strh.w	r0, [r1, #148]	; 0x94
                        self.x_right = x;
    f8fa:	f8bd 01c4 	ldrh.w	r0, [sp, #452]	; 0x1c4
    f8fe:	9917      	ldr	r1, [sp, #92]	; 0x5c
    f900:	f8a1 0096 	strh.w	r0, [r1, #150]	; 0x96
                        self.y = y;
    f904:	f8bd 01c6 	ldrh.w	r0, [sp, #454]	; 0x1c6
    f908:	9917      	ldr	r1, [sp, #92]	; 0x5c
    f90a:	f8a1 0098 	strh.w	r0, [r1, #152]	; 0x98
                        self.colors.clear();
    f90e:	9817      	ldr	r0, [sp, #92]	; 0x5c
    f910:	302c      	adds	r0, #44	; 0x2c
    f912:	f002 fa3b 	bl	11d8c <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17hfc6c59a7d142150bE>
    f916:	e7ff      	b.n	f918 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x13c>
                        self.colors.push(color)
    f918:	9817      	ldr	r0, [sp, #92]	; 0x5c
    f91a:	302c      	adds	r0, #44	; 0x2c
    f91c:	f8bd 11c8 	ldrh.w	r1, [sp, #456]	; 0x1c8
    f920:	f002 fa18 	bl	11d54 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$4push17h7bde6d5f42a64645E>
    f924:	900c      	str	r0, [sp, #48]	; 0x30
    f926:	910b      	str	r1, [sp, #44]	; 0x2c
    f928:	e7ff      	b.n	f92a <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x14e>
    f92a:	f64d 2094 	movw	r0, #55956	; 0xda94
    f92e:	f2c0 0001 	movt	r0, #1
    f932:	4669      	mov	r1, sp
    f934:	6008      	str	r0, [r1, #0]
    f936:	f64d 222c 	movw	r2, #55852	; 0xda2c
    f93a:	f2c0 0201 	movt	r2, #1
    f93e:	2305      	movs	r3, #5
    f940:	980c      	ldr	r0, [sp, #48]	; 0x30
    f942:	990b      	ldr	r1, [sp, #44]	; 0x2c
    f944:	f7fc fb4a 	bl	bfdc <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h5ae14e54a9cca8d6E>
    f948:	e7ff      	b.n	f94a <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x16e>
                        continue;
    f94a:	e7ff      	b.n	f94c <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x170>
    f94c:	e74c      	b.n	f7e8 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0xc>
    f94e:	2001      	movs	r0, #1
                    if x == self.x_right + 1 && y == self.y {
    f950:	f88d 01cb 	strb.w	r0, [sp, #459]	; 0x1cb
    f954:	e00b      	b.n	f96e <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x192>
    f956:	2000      	movs	r0, #0
    f958:	f88d 01cb 	strb.w	r0, [sp, #459]	; 0x1cb
    f95c:	e007      	b.n	f96e <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x192>
    f95e:	f8bd 01c6 	ldrh.w	r0, [sp, #454]	; 0x1c6
    f962:	9917      	ldr	r1, [sp, #92]	; 0x5c
    f964:	f8b1 1098 	ldrh.w	r1, [r1, #152]	; 0x98
    f968:	4288      	cmp	r0, r1
    f96a:	d0f0      	beq.n	f94e <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x172>
    f96c:	e7f3      	b.n	f956 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x17a>
    f96e:	f89d 01cb 	ldrb.w	r0, [sp, #459]	; 0x1cb
    f972:	07c0      	lsls	r0, r0, #31
    f974:	2800      	cmp	r0, #0
    f976:	d107      	bne.n	f988 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x1ac>
    f978:	e022      	b.n	f9c0 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x1e4>
    f97a:	980d      	ldr	r0, [sp, #52]	; 0x34
    f97c:	b281      	uxth	r1, r0
    f97e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    f980:	b293      	uxth	r3, r2
    f982:	428b      	cmp	r3, r1
    f984:	d0eb      	beq.n	f95e <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x182>
    f986:	e7e6      	b.n	f956 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x17a>
                        if self.colors.push(color).is_ok() {
    f988:	9817      	ldr	r0, [sp, #92]	; 0x5c
    f98a:	302c      	adds	r0, #44	; 0x2c
    f98c:	f8bd 11c8 	ldrh.w	r1, [sp, #456]	; 0x1c8
    f990:	f002 f9e0 	bl	11d54 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$4push17h7bde6d5f42a64645E>
    f994:	f8ad 11ce 	strh.w	r1, [sp, #462]	; 0x1ce
    f998:	f8ad 01cc 	strh.w	r0, [sp, #460]	; 0x1cc
    f99c:	e7ff      	b.n	f99e <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x1c2>
    f99e:	a873      	add	r0, sp, #460	; 0x1cc
    f9a0:	f7fc faf5 	bl	bf8e <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h2b593d74deb7b9abE>
    f9a4:	900a      	str	r0, [sp, #40]	; 0x28
    f9a6:	e7ff      	b.n	f9a8 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x1cc>
    f9a8:	980a      	ldr	r0, [sp, #40]	; 0x28
    f9aa:	07c1      	lsls	r1, r0, #31
    f9ac:	2900      	cmp	r1, #0
    f9ae:	d101      	bne.n	f9b4 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x1d8>
    f9b0:	e7ff      	b.n	f9b2 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x1d6>
                    if x == self.x_right + 1 && y == self.y {
    f9b2:	e005      	b.n	f9c0 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x1e4>
                            self.x_right = x;
    f9b4:	f8bd 01c4 	ldrh.w	r0, [sp, #452]	; 0x1c4
    f9b8:	9917      	ldr	r1, [sp, #92]	; 0x5c
    f9ba:	f8a1 0096 	strh.w	r0, [r1, #150]	; 0x96
                            continue;
    f9be:	e7c5      	b.n	f94c <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x170>
                        x_left: self.x_left,
    f9c0:	9817      	ldr	r0, [sp, #92]	; 0x5c
    f9c2:	f8b0 1094 	ldrh.w	r1, [r0, #148]	; 0x94
                        x_right: self.x_right,
    f9c6:	f8b0 2096 	ldrh.w	r2, [r0, #150]	; 0x96
                        y: self.y,
    f9ca:	f8b0 3098 	ldrh.w	r3, [r0, #152]	; 0x98
                        colors: self.colors.clone(),
    f9ce:	302c      	adds	r0, #44	; 0x2c
    f9d0:	f50d 7c10 	add.w	ip, sp, #576	; 0x240
    f9d4:	9009      	str	r0, [sp, #36]	; 0x24
    f9d6:	4660      	mov	r0, ip
    f9d8:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
    f9dc:	9108      	str	r1, [sp, #32]
    f9de:	4661      	mov	r1, ip
    f9e0:	9207      	str	r2, [sp, #28]
    f9e2:	9306      	str	r3, [sp, #24]
    f9e4:	f002 f8e4 	bl	11bb0 <_ZN70_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h25529cf37f25b753E>
    f9e8:	e7ff      	b.n	f9ea <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x20e>
                    let row = PixelRow {
    f9ea:	9808      	ldr	r0, [sp, #32]
    f9ec:	f8ad 0238 	strh.w	r0, [sp, #568]	; 0x238
    f9f0:	9907      	ldr	r1, [sp, #28]
    f9f2:	f8ad 123a 	strh.w	r1, [sp, #570]	; 0x23a
    f9f6:	9a06      	ldr	r2, [sp, #24]
    f9f8:	f8ad 223c 	strh.w	r2, [sp, #572]	; 0x23c
    f9fc:	a874      	add	r0, sp, #464	; 0x1d0
    f9fe:	a990      	add	r1, sp, #576	; 0x240
    fa00:	2268      	movs	r2, #104	; 0x68
    fa02:	f00b fa71 	bl	1aee8 <__aeabi_memcpy>
                    self.x_left = x;
    fa06:	f8bd 01c4 	ldrh.w	r0, [sp, #452]	; 0x1c4
    fa0a:	9917      	ldr	r1, [sp, #92]	; 0x5c
    fa0c:	f8a1 0094 	strh.w	r0, [r1, #148]	; 0x94
                    self.x_right = x;
    fa10:	f8bd 01c4 	ldrh.w	r0, [sp, #452]	; 0x1c4
    fa14:	9917      	ldr	r1, [sp, #92]	; 0x5c
    fa16:	f8a1 0096 	strh.w	r0, [r1, #150]	; 0x96
                    self.y = y;
    fa1a:	f8bd 01c6 	ldrh.w	r0, [sp, #454]	; 0x1c6
    fa1e:	9917      	ldr	r1, [sp, #92]	; 0x5c
    fa20:	f8a1 0098 	strh.w	r0, [r1, #152]	; 0x98
                    self.colors.clear();
    fa24:	9817      	ldr	r0, [sp, #92]	; 0x5c
    fa26:	302c      	adds	r0, #44	; 0x2c
    fa28:	f002 f9b0 	bl	11d8c <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17hfc6c59a7d142150bE>
    fa2c:	e7ff      	b.n	fa2e <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x252>
                    self.colors.push(color)
    fa2e:	9817      	ldr	r0, [sp, #92]	; 0x5c
    fa30:	302c      	adds	r0, #44	; 0x2c
    fa32:	f8bd 11c8 	ldrh.w	r1, [sp, #456]	; 0x1c8
    fa36:	f002 f98d 	bl	11d54 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$4push17h7bde6d5f42a64645E>
    fa3a:	9005      	str	r0, [sp, #20]
    fa3c:	9104      	str	r1, [sp, #16]
    fa3e:	e7ff      	b.n	fa40 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x264>
    fa40:	f64d 20dc 	movw	r0, #56028	; 0xdadc
    fa44:	f2c0 0001 	movt	r0, #1
    fa48:	4669      	mov	r1, sp
    fa4a:	6008      	str	r0, [r1, #0]
    fa4c:	f64d 222c 	movw	r2, #55852	; 0xda2c
    fa50:	f2c0 0201 	movt	r2, #1
    fa54:	2305      	movs	r3, #5
    fa56:	9805      	ldr	r0, [sp, #20]
    fa58:	9904      	ldr	r1, [sp, #16]
    fa5a:	f7fc fabf 	bl	bfdc <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h5ae14e54a9cca8d6E>
    fa5e:	e7ff      	b.n	fa60 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x284>
    fa60:	a8aa      	add	r0, sp, #680	; 0x2a8
    fa62:	a974      	add	r1, sp, #464	; 0x1d0
    fa64:	2270      	movs	r2, #112	; 0x70
                    return Some(row);
    fa66:	9003      	str	r0, [sp, #12]
    fa68:	9202      	str	r2, [sp, #8]
    fa6a:	f00b fa3d 	bl	1aee8 <__aeabi_memcpy>
    fa6e:	9816      	ldr	r0, [sp, #88]	; 0x58
    fa70:	3004      	adds	r0, #4
    fa72:	9903      	ldr	r1, [sp, #12]
    fa74:	9a02      	ldr	r2, [sp, #8]
    fa76:	f00b fa37 	bl	1aee8 <__aeabi_memcpy>
    fa7a:	2001      	movs	r0, #1
    fa7c:	9916      	ldr	r1, [sp, #88]	; 0x58
    fa7e:	6008      	str	r0, [r1, #0]
    fa80:	e6dd      	b.n	f83e <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE+0x62>
                    if x == self.x_right + 1 && y == self.y {
    fa82:	f64d 20c0 	movw	r0, #56000	; 0xdac0
    fa86:	f2c0 0001 	movt	r0, #1
    fa8a:	f64d 22a4 	movw	r2, #55972	; 0xdaa4
    fa8e:	f2c0 0201 	movt	r2, #1
    fa92:	211c      	movs	r1, #28
    fa94:	f005 f885 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    fa98:	defe      	udf	#254	; 0xfe

0000fa9a <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE>:
    fn next(&mut self) -> Option<Self::Item> {
    fa9a:	b580      	push	{r7, lr}
    fa9c:	f5ad 6dca 	sub.w	sp, sp, #1616	; 0x650
    faa0:	911e      	str	r1, [sp, #120]	; 0x78
    faa2:	2100      	movs	r1, #0
        loop {
    faa4:	f88d 164f 	strb.w	r1, [sp, #1615]	; 0x64f
    faa8:	901d      	str	r0, [sp, #116]	; 0x74
    faaa:	e7ff      	b.n	faac <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x12>
            let next_row = self.rows.next();
    faac:	991e      	ldr	r1, [sp, #120]	; 0x78
    faae:	2001      	movs	r0, #1
    fab0:	f88d 064f 	strb.w	r0, [sp, #1615]	; 0x64f
    fab4:	a81f      	add	r0, sp, #124	; 0x7c
    fab6:	f7ff fe91 	bl	f7dc <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h03c51f4bdca6514cE>
    faba:	e7ff      	b.n	fabc <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x22>
                None => {  //  If no more Pixel Rows...
    fabc:	981f      	ldr	r0, [sp, #124]	; 0x7c
    fabe:	2800      	cmp	r0, #0
    fac0:	d002      	beq.n	fac8 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x2e>
    fac2:	e7ff      	b.n	fac4 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x2a>
    fac4:	e052      	b.n	fb6c <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0xd2>
            match next_row {
    fac6:	defe      	udf	#254	; 0xfe
                    if self.first_row {
    fac8:	981e      	ldr	r0, [sp, #120]	; 0x78
    faca:	f890 0170 	ldrb.w	r0, [r0, #368]	; 0x170
    face:	07c0      	lsls	r0, r0, #31
    fad0:	2800      	cmp	r0, #0
    fad2:	d119      	bne.n	fb08 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x6e>
    fad4:	e7ff      	b.n	fad6 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x3c>
                        x_left: self.x_left,
    fad6:	981e      	ldr	r0, [sp, #120]	; 0x78
    fad8:	f8b0 1168 	ldrh.w	r1, [r0, #360]	; 0x168
                        x_right: self.x_right,
    fadc:	f8b0 216a 	ldrh.w	r2, [r0, #362]	; 0x16a
                        y_top: self.y_top,
    fae0:	f8b0 316c 	ldrh.w	r3, [r0, #364]	; 0x16c
                        y_bottom: self.y_bottom,
    fae4:	f8b0 c16e 	ldrh.w	ip, [r0, #366]	; 0x16e
                        colors: self.colors.clone(),
    fae8:	309c      	adds	r0, #156	; 0x9c
    faea:	f50d 7ee2 	add.w	lr, sp, #452	; 0x1c4
    faee:	901c      	str	r0, [sp, #112]	; 0x70
    faf0:	4670      	mov	r0, lr
    faf2:	f8dd e070 	ldr.w	lr, [sp, #112]	; 0x70
    faf6:	911b      	str	r1, [sp, #108]	; 0x6c
    faf8:	4671      	mov	r1, lr
    fafa:	921a      	str	r2, [sp, #104]	; 0x68
    fafc:	9319      	str	r3, [sp, #100]	; 0x64
    fafe:	f8cd c060 	str.w	ip, [sp, #96]	; 0x60
    fb02:	f002 f866 	bl	11bd2 <_ZN70_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hca8a7b49119f2322E>
    fb06:	e003      	b.n	fb10 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x76>
    fb08:	2000      	movs	r0, #0
                        return None;  //  No rows to group
    fb0a:	991d      	ldr	r1, [sp, #116]	; 0x74
    fb0c:	6008      	str	r0, [r1, #0]
    fb0e:	e187      	b.n	fe20 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x386>
                    let row = PixelBlock {
    fb10:	981b      	ldr	r0, [sp, #108]	; 0x6c
    fb12:	f8ad 01bc 	strh.w	r0, [sp, #444]	; 0x1bc
    fb16:	991a      	ldr	r1, [sp, #104]	; 0x68
    fb18:	f8ad 11be 	strh.w	r1, [sp, #446]	; 0x1be
    fb1c:	9a19      	ldr	r2, [sp, #100]	; 0x64
    fb1e:	f8ad 21c0 	strh.w	r2, [sp, #448]	; 0x1c0
    fb22:	9b18      	ldr	r3, [sp, #96]	; 0x60
    fb24:	f8ad 31c2 	strh.w	r3, [sp, #450]	; 0x1c2
    fb28:	a83c      	add	r0, sp, #240	; 0xf0
    fb2a:	a971      	add	r1, sp, #452	; 0x1c4
    fb2c:	22cc      	movs	r2, #204	; 0xcc
    fb2e:	f00b f9db 	bl	1aee8 <__aeabi_memcpy>
                    self.colors.clear();
    fb32:	981e      	ldr	r0, [sp, #120]	; 0x78
    fb34:	309c      	adds	r0, #156	; 0x9c
    fb36:	f002 f920 	bl	11d7a <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17h345da7541567fd72E>
    fb3a:	e7ff      	b.n	fb3c <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0xa2>
                    self.first_row = true;
    fb3c:	981e      	ldr	r0, [sp, #120]	; 0x78
    fb3e:	2101      	movs	r1, #1
    fb40:	f880 1170 	strb.w	r1, [r0, #368]	; 0x170
    fb44:	a8a4      	add	r0, sp, #656	; 0x290
    fb46:	aa3c      	add	r2, sp, #240	; 0xf0
    fb48:	23d4      	movs	r3, #212	; 0xd4
                    return Some(row);
    fb4a:	9017      	str	r0, [sp, #92]	; 0x5c
    fb4c:	9116      	str	r1, [sp, #88]	; 0x58
    fb4e:	4611      	mov	r1, r2
    fb50:	461a      	mov	r2, r3
    fb52:	9315      	str	r3, [sp, #84]	; 0x54
    fb54:	f00b f9c8 	bl	1aee8 <__aeabi_memcpy>
    fb58:	981d      	ldr	r0, [sp, #116]	; 0x74
    fb5a:	3004      	adds	r0, #4
    fb5c:	9917      	ldr	r1, [sp, #92]	; 0x5c
    fb5e:	9a15      	ldr	r2, [sp, #84]	; 0x54
    fb60:	f00b f9c2 	bl	1aee8 <__aeabi_memcpy>
    fb64:	9816      	ldr	r0, [sp, #88]	; 0x58
    fb66:	991d      	ldr	r1, [sp, #116]	; 0x74
    fb68:	6008      	str	r0, [r1, #0]
    fb6a:	e159      	b.n	fe20 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x386>
    fb6c:	a81f      	add	r0, sp, #124	; 0x7c
                Some(PixelRow { x_left, x_right, y, colors, .. }) => {  //  If there is a Pixel Row...
    fb6e:	1d01      	adds	r1, r0, #4
    fb70:	f8bd 00e8 	ldrh.w	r0, [sp, #232]	; 0xe8
    fb74:	f8ad 0366 	strh.w	r0, [sp, #870]	; 0x366
    fb78:	f8bd 00ea 	ldrh.w	r0, [sp, #234]	; 0xea
    fb7c:	f8ad 0368 	strh.w	r0, [sp, #872]	; 0x368
    fb80:	f8bd 00ec 	ldrh.w	r0, [sp, #236]	; 0xec
    fb84:	f8ad 036a 	strh.w	r0, [sp, #874]	; 0x36a
    fb88:	2000      	movs	r0, #0
    fb8a:	f88d 064f 	strb.w	r0, [sp, #1615]	; 0x64f
    fb8e:	a8db      	add	r0, sp, #876	; 0x36c
    fb90:	2268      	movs	r2, #104	; 0x68
    fb92:	f00b f9a9 	bl	1aee8 <__aeabi_memcpy>
                    if self.first_row {
    fb96:	981e      	ldr	r0, [sp, #120]	; 0x78
    fb98:	f890 0170 	ldrb.w	r0, [r0, #368]	; 0x170
    fb9c:	07c0      	lsls	r0, r0, #31
    fb9e:	2800      	cmp	r0, #0
    fba0:	d10e      	bne.n	fbc0 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x126>
    fba2:	e7ff      	b.n	fba4 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x10a>
                    if y == self.y_bottom + 1 && x_left == self.x_left && x_right == self.x_right {                        
    fba4:	f8bd 036a 	ldrh.w	r0, [sp, #874]	; 0x36a
    fba8:	991e      	ldr	r1, [sp, #120]	; 0x78
    fbaa:	f8b1 116e 	ldrh.w	r1, [r1, #366]	; 0x16e
    fbae:	3101      	adds	r1, #1
    fbb0:	b28a      	uxth	r2, r1
    fbb2:	460b      	mov	r3, r1
    fbb4:	428a      	cmp	r2, r1
    fbb6:	9014      	str	r0, [sp, #80]	; 0x50
    fbb8:	9313      	str	r3, [sp, #76]	; 0x4c
    fbba:	f040 813d 	bne.w	fe38 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x39e>
    fbbe:	e072      	b.n	fca6 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x20c>
                        self.first_row = false;
    fbc0:	981e      	ldr	r0, [sp, #120]	; 0x78
    fbc2:	2100      	movs	r1, #0
    fbc4:	f880 1170 	strb.w	r1, [r0, #368]	; 0x170
                        self.x_left = x_left;
    fbc8:	f8bd 0366 	ldrh.w	r0, [sp, #870]	; 0x366
    fbcc:	991e      	ldr	r1, [sp, #120]	; 0x78
    fbce:	f8a1 0168 	strh.w	r0, [r1, #360]	; 0x168
                        self.x_right = x_right;
    fbd2:	f8bd 0368 	ldrh.w	r0, [sp, #872]	; 0x368
    fbd6:	991e      	ldr	r1, [sp, #120]	; 0x78
    fbd8:	f8a1 016a 	strh.w	r0, [r1, #362]	; 0x16a
                        self.y_top = y;
    fbdc:	f8bd 036a 	ldrh.w	r0, [sp, #874]	; 0x36a
    fbe0:	991e      	ldr	r1, [sp, #120]	; 0x78
    fbe2:	f8a1 016c 	strh.w	r0, [r1, #364]	; 0x16c
                        self.y_bottom = y;
    fbe6:	f8bd 036a 	ldrh.w	r0, [sp, #874]	; 0x36a
    fbea:	991e      	ldr	r1, [sp, #120]	; 0x78
    fbec:	f8a1 016e 	strh.w	r0, [r1, #366]	; 0x16e
                        self.colors.clear();
    fbf0:	981e      	ldr	r0, [sp, #120]	; 0x78
    fbf2:	309c      	adds	r0, #156	; 0x9c
    fbf4:	f002 f8c1 	bl	11d7a <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17h345da7541567fd72E>
    fbf8:	e7ff      	b.n	fbfa <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x160>
                        self.colors.extend_from_slice(&colors)
    fbfa:	981e      	ldr	r0, [sp, #120]	; 0x78
    fbfc:	309c      	adds	r0, #156	; 0x9c
    fbfe:	a9db      	add	r1, sp, #876	; 0x36c
    fc00:	9012      	str	r0, [sp, #72]	; 0x48
    fc02:	4608      	mov	r0, r1
    fc04:	f002 f824 	bl	11c50 <_ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6f8a869eff6f2bb3E>
    fc08:	9011      	str	r0, [sp, #68]	; 0x44
    fc0a:	9110      	str	r1, [sp, #64]	; 0x40
    fc0c:	e7ff      	b.n	fc0e <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x174>
    fc0e:	9812      	ldr	r0, [sp, #72]	; 0x48
    fc10:	9911      	ldr	r1, [sp, #68]	; 0x44
    fc12:	9a10      	ldr	r2, [sp, #64]	; 0x40
    fc14:	f002 f86f 	bl	11cf6 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$17extend_from_slice17h03dd1eb3e64396cdE>
    fc18:	900f      	str	r0, [sp, #60]	; 0x3c
    fc1a:	e7ff      	b.n	fc1c <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x182>
    fc1c:	980f      	ldr	r0, [sp, #60]	; 0x3c
    fc1e:	f000 0001 	and.w	r0, r0, #1
    fc22:	f64d 212c 	movw	r1, #55852	; 0xda2c
    fc26:	f2c0 0101 	movt	r1, #1
    fc2a:	f64d 23ec 	movw	r3, #56044	; 0xdaec
    fc2e:	f2c0 0301 	movt	r3, #1
    fc32:	2205      	movs	r2, #5
    fc34:	f7fc fa02 	bl	c03c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h76d1a1cb65ecbf07E>
    fc38:	e7ff      	b.n	fc3a <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x1a0>
                        continue;
    fc3a:	e7ff      	b.n	fc3c <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x1a2>
    fc3c:	a8db      	add	r0, sp, #876	; 0x36c
            }
    fc3e:	f000 fa4b 	bl	100d8 <_ZN4core3ptr18real_drop_in_place17h07ec28ccd91f0e6bE>
    fc42:	e7ff      	b.n	fc44 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x1aa>
        }
    fc44:	981f      	ldr	r0, [sp, #124]	; 0x7c
    fc46:	2801      	cmp	r0, #1
    fc48:	f000 80ee 	beq.w	fe28 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x38e>
    fc4c:	e0f0      	b.n	fe30 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x396>
    fc4e:	2001      	movs	r0, #1
                    if y == self.y_bottom + 1 && x_left == self.x_left && x_right == self.x_right {                        
    fc50:	f88d 03d5 	strb.w	r0, [sp, #981]	; 0x3d5
    fc54:	e00b      	b.n	fc6e <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x1d4>
    fc56:	2000      	movs	r0, #0
    fc58:	f88d 03d5 	strb.w	r0, [sp, #981]	; 0x3d5
    fc5c:	e007      	b.n	fc6e <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x1d4>
    fc5e:	f8bd 0368 	ldrh.w	r0, [sp, #872]	; 0x368
    fc62:	991e      	ldr	r1, [sp, #120]	; 0x78
    fc64:	f8b1 116a 	ldrh.w	r1, [r1, #362]	; 0x16a
    fc68:	4288      	cmp	r0, r1
    fc6a:	d0f0      	beq.n	fc4e <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x1b4>
    fc6c:	e7f3      	b.n	fc56 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x1bc>
    fc6e:	f89d 03d5 	ldrb.w	r0, [sp, #981]	; 0x3d5
    fc72:	07c0      	lsls	r0, r0, #31
    fc74:	2800      	cmp	r0, #0
    fc76:	d11d      	bne.n	fcb4 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x21a>
    fc78:	e040      	b.n	fcfc <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x262>
    fc7a:	2001      	movs	r0, #1
    fc7c:	f88d 03d6 	strb.w	r0, [sp, #982]	; 0x3d6
    fc80:	e00b      	b.n	fc9a <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x200>
    fc82:	2000      	movs	r0, #0
    fc84:	f88d 03d6 	strb.w	r0, [sp, #982]	; 0x3d6
    fc88:	e007      	b.n	fc9a <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x200>
    fc8a:	f8bd 0366 	ldrh.w	r0, [sp, #870]	; 0x366
    fc8e:	991e      	ldr	r1, [sp, #120]	; 0x78
    fc90:	f8b1 1168 	ldrh.w	r1, [r1, #360]	; 0x168
    fc94:	4288      	cmp	r0, r1
    fc96:	d0f0      	beq.n	fc7a <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x1e0>
    fc98:	e7f3      	b.n	fc82 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x1e8>
    fc9a:	f89d 03d6 	ldrb.w	r0, [sp, #982]	; 0x3d6
    fc9e:	07c0      	lsls	r0, r0, #31
    fca0:	2800      	cmp	r0, #0
    fca2:	d1dc      	bne.n	fc5e <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x1c4>
    fca4:	e7d7      	b.n	fc56 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x1bc>
    fca6:	9813      	ldr	r0, [sp, #76]	; 0x4c
    fca8:	b281      	uxth	r1, r0
    fcaa:	9a14      	ldr	r2, [sp, #80]	; 0x50
    fcac:	b293      	uxth	r3, r2
    fcae:	428b      	cmp	r3, r1
    fcb0:	d0eb      	beq.n	fc8a <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x1f0>
    fcb2:	e7e6      	b.n	fc82 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x1e8>
                        if self.colors.extend_from_slice(&colors).is_ok() {
    fcb4:	981e      	ldr	r0, [sp, #120]	; 0x78
    fcb6:	309c      	adds	r0, #156	; 0x9c
    fcb8:	a9db      	add	r1, sp, #876	; 0x36c
    fcba:	900e      	str	r0, [sp, #56]	; 0x38
    fcbc:	4608      	mov	r0, r1
    fcbe:	f001 ffc7 	bl	11c50 <_ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6f8a869eff6f2bb3E>
    fcc2:	900d      	str	r0, [sp, #52]	; 0x34
    fcc4:	910c      	str	r1, [sp, #48]	; 0x30
    fcc6:	e7ff      	b.n	fcc8 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x22e>
    fcc8:	980e      	ldr	r0, [sp, #56]	; 0x38
    fcca:	990d      	ldr	r1, [sp, #52]	; 0x34
    fccc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    fcce:	f002 f812 	bl	11cf6 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$17extend_from_slice17h03dd1eb3e64396cdE>
    fcd2:	f88d 03d7 	strb.w	r0, [sp, #983]	; 0x3d7
    fcd6:	e7ff      	b.n	fcd8 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x23e>
    fcd8:	f20d 30d7 	addw	r0, sp, #983	; 0x3d7
    fcdc:	f7fc f96a 	bl	bfb4 <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h6eebeb2a9c50ab48E>
    fce0:	900b      	str	r0, [sp, #44]	; 0x2c
    fce2:	e7ff      	b.n	fce4 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x24a>
    fce4:	980b      	ldr	r0, [sp, #44]	; 0x2c
    fce6:	07c1      	lsls	r1, r0, #31
    fce8:	2900      	cmp	r1, #0
    fcea:	d101      	bne.n	fcf0 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x256>
    fcec:	e7ff      	b.n	fcee <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x254>
                    if y == self.y_bottom + 1 && x_left == self.x_left && x_right == self.x_right {                        
    fcee:	e005      	b.n	fcfc <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x262>
                            self.y_bottom = y;
    fcf0:	f8bd 036a 	ldrh.w	r0, [sp, #874]	; 0x36a
    fcf4:	991e      	ldr	r1, [sp, #120]	; 0x78
    fcf6:	f8a1 016e 	strh.w	r0, [r1, #366]	; 0x16e
                            continue;    
    fcfa:	e79f      	b.n	fc3c <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x1a2>
                        x_left: self.x_left,
    fcfc:	981e      	ldr	r0, [sp, #120]	; 0x78
    fcfe:	f8b0 1168 	ldrh.w	r1, [r0, #360]	; 0x168
                        x_right: self.x_right,
    fd02:	f8b0 216a 	ldrh.w	r2, [r0, #362]	; 0x16a
                        y_top: self.y_top,
    fd06:	f8b0 316c 	ldrh.w	r3, [r0, #364]	; 0x16c
                        y_bottom: self.y_bottom,
    fd0a:	f8b0 c16e 	ldrh.w	ip, [r0, #366]	; 0x16e
                        colors: self.colors.clone(),
    fd0e:	309c      	adds	r0, #156	; 0x9c
    fd10:	f20d 4eac 	addw	lr, sp, #1196	; 0x4ac
    fd14:	900a      	str	r0, [sp, #40]	; 0x28
    fd16:	4670      	mov	r0, lr
    fd18:	f8dd e028 	ldr.w	lr, [sp, #40]	; 0x28
    fd1c:	9109      	str	r1, [sp, #36]	; 0x24
    fd1e:	4671      	mov	r1, lr
    fd20:	9208      	str	r2, [sp, #32]
    fd22:	9307      	str	r3, [sp, #28]
    fd24:	f8cd c018 	str.w	ip, [sp, #24]
    fd28:	f001 ff53 	bl	11bd2 <_ZN70_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hca8a7b49119f2322E>
    fd2c:	e7ff      	b.n	fd2e <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x294>
                    let row = PixelBlock {
    fd2e:	9809      	ldr	r0, [sp, #36]	; 0x24
    fd30:	f8ad 04a4 	strh.w	r0, [sp, #1188]	; 0x4a4
    fd34:	9908      	ldr	r1, [sp, #32]
    fd36:	f8ad 14a6 	strh.w	r1, [sp, #1190]	; 0x4a6
    fd3a:	9a07      	ldr	r2, [sp, #28]
    fd3c:	f8ad 24a8 	strh.w	r2, [sp, #1192]	; 0x4a8
    fd40:	9b06      	ldr	r3, [sp, #24]
    fd42:	f8ad 34aa 	strh.w	r3, [sp, #1194]	; 0x4aa
    fd46:	a8f6      	add	r0, sp, #984	; 0x3d8
    fd48:	f20d 41ac 	addw	r1, sp, #1196	; 0x4ac
    fd4c:	22cc      	movs	r2, #204	; 0xcc
    fd4e:	f00b f8cb 	bl	1aee8 <__aeabi_memcpy>
                    self.x_left = x_left;
    fd52:	f8bd 0366 	ldrh.w	r0, [sp, #870]	; 0x366
    fd56:	991e      	ldr	r1, [sp, #120]	; 0x78
    fd58:	f8a1 0168 	strh.w	r0, [r1, #360]	; 0x168
                    self.x_right = x_right;
    fd5c:	f8bd 0368 	ldrh.w	r0, [sp, #872]	; 0x368
    fd60:	991e      	ldr	r1, [sp, #120]	; 0x78
    fd62:	f8a1 016a 	strh.w	r0, [r1, #362]	; 0x16a
                    self.y_top = y;
    fd66:	f8bd 036a 	ldrh.w	r0, [sp, #874]	; 0x36a
    fd6a:	991e      	ldr	r1, [sp, #120]	; 0x78
    fd6c:	f8a1 016c 	strh.w	r0, [r1, #364]	; 0x16c
                    self.y_bottom = y;
    fd70:	f8bd 036a 	ldrh.w	r0, [sp, #874]	; 0x36a
    fd74:	991e      	ldr	r1, [sp, #120]	; 0x78
    fd76:	f8a1 016e 	strh.w	r0, [r1, #366]	; 0x16e
                    self.colors.clear();
    fd7a:	981e      	ldr	r0, [sp, #120]	; 0x78
    fd7c:	309c      	adds	r0, #156	; 0x9c
    fd7e:	f001 fffc 	bl	11d7a <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17h345da7541567fd72E>
    fd82:	e7ff      	b.n	fd84 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x2ea>
                    self.colors.extend_from_slice(&colors)
    fd84:	981e      	ldr	r0, [sp, #120]	; 0x78
    fd86:	309c      	adds	r0, #156	; 0x9c
    fd88:	a9db      	add	r1, sp, #876	; 0x36c
    fd8a:	9005      	str	r0, [sp, #20]
    fd8c:	4608      	mov	r0, r1
    fd8e:	f001 ff5f 	bl	11c50 <_ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6f8a869eff6f2bb3E>
    fd92:	9004      	str	r0, [sp, #16]
    fd94:	9103      	str	r1, [sp, #12]
    fd96:	e7ff      	b.n	fd98 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x2fe>
    fd98:	9805      	ldr	r0, [sp, #20]
    fd9a:	9904      	ldr	r1, [sp, #16]
    fd9c:	9a03      	ldr	r2, [sp, #12]
    fd9e:	f001 ffaa 	bl	11cf6 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$17extend_from_slice17h03dd1eb3e64396cdE>
    fda2:	9002      	str	r0, [sp, #8]
    fda4:	e7ff      	b.n	fda6 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x30c>
    fda6:	9802      	ldr	r0, [sp, #8]
    fda8:	f000 0001 	and.w	r0, r0, #1
    fdac:	f64d 212c 	movw	r1, #55852	; 0xda2c
    fdb0:	f2c0 0101 	movt	r1, #1
    fdb4:	f64d 330c 	movw	r3, #56076	; 0xdb0c
    fdb8:	f2c0 0301 	movt	r3, #1
    fdbc:	2205      	movs	r2, #5
    fdbe:	f7fc f93d 	bl	c03c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h76d1a1cb65ecbf07E>
    fdc2:	e7ff      	b.n	fdc4 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x32a>
    fdc4:	f50d 60af 	add.w	r0, sp, #1400	; 0x578
    fdc8:	a9f6      	add	r1, sp, #984	; 0x3d8
    fdca:	22d4      	movs	r2, #212	; 0xd4
                    return Some(row);
    fdcc:	9001      	str	r0, [sp, #4]
    fdce:	9200      	str	r2, [sp, #0]
    fdd0:	f00b f88a 	bl	1aee8 <__aeabi_memcpy>
    fdd4:	981d      	ldr	r0, [sp, #116]	; 0x74
    fdd6:	3004      	adds	r0, #4
    fdd8:	9901      	ldr	r1, [sp, #4]
    fdda:	9a00      	ldr	r2, [sp, #0]
    fddc:	f00b f884 	bl	1aee8 <__aeabi_memcpy>
    fde0:	2001      	movs	r0, #1
    fde2:	991d      	ldr	r1, [sp, #116]	; 0x74
    fde4:	6008      	str	r0, [r1, #0]
    fde6:	a8db      	add	r0, sp, #876	; 0x36c
            }
    fde8:	f000 f976 	bl	100d8 <_ZN4core3ptr18real_drop_in_place17h07ec28ccd91f0e6bE>
    fdec:	e7ff      	b.n	fdee <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x354>
                    return Some(row);
    fdee:	e017      	b.n	fe20 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x386>
    fdf0:	2000      	movs	r0, #0
        }
    fdf2:	f88d 064f 	strb.w	r0, [sp, #1615]	; 0x64f
    }
    fdf6:	f50d 6dca 	add.w	sp, sp, #1616	; 0x650
    fdfa:	bd80      	pop	{r7, pc}
        }
    fdfc:	f89d 064f 	ldrb.w	r0, [sp, #1615]	; 0x64f
    fe00:	07c0      	lsls	r0, r0, #31
    fe02:	2800      	cmp	r0, #0
    fe04:	d0f4      	beq.n	fdf0 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x356>
    fe06:	e7ff      	b.n	fe08 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x36e>
    fe08:	2000      	movs	r0, #0
    fe0a:	f88d 064f 	strb.w	r0, [sp, #1615]	; 0x64f
    fe0e:	a81f      	add	r0, sp, #124	; 0x7c
    fe10:	3004      	adds	r0, #4
    fe12:	f000 f961 	bl	100d8 <_ZN4core3ptr18real_drop_in_place17h07ec28ccd91f0e6bE>
    fe16:	e7eb      	b.n	fdf0 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x356>
    fe18:	a81f      	add	r0, sp, #124	; 0x7c
    fe1a:	f000 f982 	bl	10122 <_ZN4core3ptr18real_drop_in_place17h720aacbd88ba3db8E>
    fe1e:	e7e7      	b.n	fdf0 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x356>
    fe20:	981f      	ldr	r0, [sp, #124]	; 0x7c
    fe22:	2801      	cmp	r0, #1
    fe24:	d0ea      	beq.n	fdfc <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x362>
    fe26:	e7f7      	b.n	fe18 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x37e>
    fe28:	2000      	movs	r0, #0
    fe2a:	f88d 064f 	strb.w	r0, [sp, #1615]	; 0x64f
                        continue;
    fe2e:	e63d      	b.n	faac <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x12>
    fe30:	a81f      	add	r0, sp, #124	; 0x7c
        }
    fe32:	f000 f976 	bl	10122 <_ZN4core3ptr18real_drop_in_place17h720aacbd88ba3db8E>
    fe36:	e7f7      	b.n	fe28 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE+0x38e>
                    if y == self.y_bottom + 1 && x_left == self.x_left && x_right == self.x_right {                        
    fe38:	f64d 20c0 	movw	r0, #56000	; 0xdac0
    fe3c:	f2c0 0001 	movt	r0, #1
    fe40:	f64d 22fc 	movw	r2, #56060	; 0xdafc
    fe44:	f2c0 0201 	movt	r2, #1
    fe48:	211c      	movs	r1, #28
    fe4a:	f004 feaa 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
    fe4e:	defe      	udf	#254	; 0xfe

0000fe50 <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E>:
pub fn draw_blocks<SPI, DC, RST, T>(display: &mut ST7735<SPI, DC, RST>, item_pixels: T) -> Result<(),()>
    fe50:	b570      	push	{r4, r5, r6, lr}
    fe52:	f5ad 6d4c 	sub.w	sp, sp, #3264	; 0xcc0
    fe56:	b082      	sub	sp, #8
    fe58:	9010      	str	r0, [sp, #64]	; 0x40
    fe5a:	a81d      	add	r0, sp, #116	; 0x74
    let pixels = item_pixels.into_iter();
    fe5c:	4602      	mov	r2, r0
    fe5e:	e8b1 5008 	ldmia.w	r1!, {r3, ip, lr}
    fe62:	e8a2 5008 	stmia.w	r2!, {r3, ip, lr}
    fe66:	e891 5018 	ldmia.w	r1, {r3, r4, ip, lr}
    fe6a:	e882 5018 	stmia.w	r2, {r3, r4, ip, lr}
    fe6e:	a912      	add	r1, sp, #72	; 0x48
    fe70:	900f      	str	r0, [sp, #60]	; 0x3c
    fe72:	4608      	mov	r0, r1
    fe74:	990f      	ldr	r1, [sp, #60]	; 0x3c
    fe76:	f7fd fa43 	bl	d300 <_ZN129_$LT$embedded_graphics..fonts..font_builder..FontBuilder$LT$C$C$Conf$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h6740ba0ca5fad9f2E>
    fe7a:	e7ff      	b.n	fe7c <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E+0x2c>
    fe7c:	a812      	add	r0, sp, #72	; 0x48
    fe7e:	a94b      	add	r1, sp, #300	; 0x12c
    let rows = to_rows(pixels);
    fe80:	460a      	mov	r2, r1
    fe82:	e8b0 5038 	ldmia.w	r0!, {r3, r4, r5, ip, lr}
    fe86:	e8a2 5038 	stmia.w	r2!, {r3, r4, r5, ip, lr}
    fe8a:	e890 5078 	ldmia.w	r0, {r3, r4, r5, r6, ip, lr}
    fe8e:	e882 5078 	stmia.w	r2, {r3, r4, r5, r6, ip, lr}
    fe92:	a824      	add	r0, sp, #144	; 0x90
    fe94:	f000 f8c3 	bl	1001e <_ZN22piet_embedded_graphics5batch7to_rows17h25c5b99153e6c809E>
    fe98:	e7ff      	b.n	fe9a <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E+0x4a>
    fe9a:	a8b3      	add	r0, sp, #716	; 0x2cc
    fe9c:	a924      	add	r1, sp, #144	; 0x90
    fe9e:	229c      	movs	r2, #156	; 0x9c
    let blocks = to_blocks(rows);
    fea0:	900e      	str	r0, [sp, #56]	; 0x38
    fea2:	f00b f821 	bl	1aee8 <__aeabi_memcpy>
    fea6:	a856      	add	r0, sp, #344	; 0x158
    fea8:	990e      	ldr	r1, [sp, #56]	; 0x38
    feaa:	f000 f8e7 	bl	1007c <_ZN22piet_embedded_graphics5batch9to_blocks17h64332cb963ed6cb9E>
    feae:	e7ff      	b.n	feb0 <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E+0x60>
    feb0:	f20d 40dc 	addw	r0, sp, #1244	; 0x4dc
    feb4:	a956      	add	r1, sp, #344	; 0x158
    feb6:	f44f 72ba 	mov.w	r2, #372	; 0x174
    for PixelBlock { x_left, x_right, y_top, y_bottom, colors, .. } in blocks {
    feba:	900d      	str	r0, [sp, #52]	; 0x34
    febc:	f00b f814 	bl	1aee8 <__aeabi_memcpy>
    fec0:	a8da      	add	r0, sp, #872	; 0x368
    fec2:	990d      	ldr	r1, [sp, #52]	; 0x34
    fec4:	f000 f902 	bl	100cc <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h7cdb2cd7969bd6b8E>
    fec8:	e7ff      	b.n	feca <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E+0x7a>
    feca:	f50d 60ca 	add.w	r0, sp, #1616	; 0x650
    fece:	a9da      	add	r1, sp, #872	; 0x368
    fed0:	f44f 72ba 	mov.w	r2, #372	; 0x174
    fed4:	f00b f808 	bl	1aee8 <__aeabi_memcpy>
    fed8:	e7ff      	b.n	feda <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E+0x8a>
    feda:	f60d 0098 	addw	r0, sp, #2200	; 0x898
    fede:	f50d 61ca 	add.w	r1, sp, #1616	; 0x650
    fee2:	f7ff fdda 	bl	fa9a <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50754d624fe894aeE>
    fee6:	e7ff      	b.n	fee8 <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E+0x98>
    fee8:	f8dd 0898 	ldr.w	r0, [sp, #2200]	; 0x898
    feec:	2800      	cmp	r0, #0
    feee:	d001      	beq.n	fef4 <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E+0xa4>
    fef0:	e7ff      	b.n	fef2 <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E+0xa2>
    fef2:	e005      	b.n	ff00 <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E+0xb0>
    fef4:	f60d 0098 	addw	r0, sp, #2200	; 0x898
    fef8:	f000 f922 	bl	10140 <_ZN4core3ptr18real_drop_in_place17h807757272e9d64b3E>
    fefc:	e01c      	b.n	ff38 <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E+0xe8>
    fefe:	defe      	udf	#254	; 0xfe
    ff00:	f60d 0098 	addw	r0, sp, #2200	; 0x898
    ff04:	1d01      	adds	r1, r0, #4
    ff06:	f50d 6017 	add.w	r0, sp, #2416	; 0x970
    ff0a:	22d4      	movs	r2, #212	; 0xd4
    ff0c:	900c      	str	r0, [sp, #48]	; 0x30
    ff0e:	920b      	str	r2, [sp, #44]	; 0x2c
    ff10:	f00a ffea 	bl	1aee8 <__aeabi_memcpy>
    ff14:	f60d 2044 	addw	r0, sp, #2628	; 0xa44
    ff18:	900a      	str	r0, [sp, #40]	; 0x28
    ff1a:	990c      	ldr	r1, [sp, #48]	; 0x30
    ff1c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    ff1e:	f00a ffe3 	bl	1aee8 <__aeabi_memcpy>
    ff22:	f20d 70c4 	addw	r0, sp, #1988	; 0x7c4
    ff26:	990a      	ldr	r1, [sp, #40]	; 0x28
    ff28:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    ff2a:	f00a ffdd 	bl	1aee8 <__aeabi_memcpy>
    ff2e:	f8dd 0898 	ldr.w	r0, [sp, #2200]	; 0x898
    ff32:	2801      	cmp	r0, #1
    ff34:	d02d      	beq.n	ff92 <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E+0x142>
    ff36:	e06d      	b.n	10014 <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E+0x1c4>
    ff38:	f50d 60ca 	add.w	r0, sp, #1616	; 0x650
    }
    ff3c:	f000 f90f 	bl	1015e <_ZN4core3ptr18real_drop_in_place17hb92333ffd4b39684E>
    ff40:	e023      	b.n	ff8a <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E+0x13a>
        display.set_pixels(
    ff42:	f89d 0bef 	ldrb.w	r0, [sp, #3055]	; 0xbef
    ff46:	f7fb fe61 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
    ff4a:	f88d 0bee 	strb.w	r0, [sp, #3054]	; 0xbee
    ff4e:	e7ff      	b.n	ff50 <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E+0x100>
            colors) ? ;
    ff50:	f89d 0bee 	ldrb.w	r0, [sp, #3054]	; 0xbee
    ff54:	07c1      	lsls	r1, r0, #31
    ff56:	2900      	cmp	r1, #0
    ff58:	d016      	beq.n	ff88 <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E+0x138>
    ff5a:	e7ff      	b.n	ff5c <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E+0x10c>
    ff5c:	e000      	b.n	ff60 <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E+0x110>
        display.set_pixels(
    ff5e:	defe      	udf	#254	; 0xfe
            colors) ? ;
    ff60:	f000 f914 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
    ff64:	e005      	b.n	ff72 <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E+0x122>
}
    ff66:	f89d 0047 	ldrb.w	r0, [sp, #71]	; 0x47
    ff6a:	f50d 6d4c 	add.w	sp, sp, #3264	; 0xcc0
    ff6e:	b002      	add	sp, #8
    ff70:	bd70      	pop	{r4, r5, r6, pc}
            colors) ? ;
    ff72:	f7fc f9b3 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
    ff76:	f88d 0047 	strb.w	r0, [sp, #71]	; 0x47
    ff7a:	e7ff      	b.n	ff7c <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E+0x12c>
    ff7c:	f50d 60ca 	add.w	r0, sp, #1616	; 0x650
    }
    ff80:	f000 f8ed 	bl	1015e <_ZN4core3ptr18real_drop_in_place17hb92333ffd4b39684E>
    ff84:	e7ff      	b.n	ff86 <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E+0x136>
}
    ff86:	e7ee      	b.n	ff66 <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E+0x116>
    for PixelBlock { x_left, x_right, y_top, y_bottom, colors, .. } in blocks {
    ff88:	e7a7      	b.n	feda <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E+0x8a>
    ff8a:	2000      	movs	r0, #0
    Ok(())
    ff8c:	f88d 0047 	strb.w	r0, [sp, #71]	; 0x47
}
    ff90:	e7e9      	b.n	ff66 <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E+0x116>
    for PixelBlock { x_left, x_right, y_top, y_bottom, colors, .. } in blocks {
    ff92:	f8bd 0890 	ldrh.w	r0, [sp, #2192]	; 0x890
    ff96:	f8ad 0b18 	strh.w	r0, [sp, #2840]	; 0xb18
    ff9a:	f8bd 0892 	ldrh.w	r0, [sp, #2194]	; 0x892
    ff9e:	f8ad 0b1a 	strh.w	r0, [sp, #2842]	; 0xb1a
    ffa2:	f8bd 0894 	ldrh.w	r0, [sp, #2196]	; 0x894
    ffa6:	f8ad 0b1c 	strh.w	r0, [sp, #2844]	; 0xb1c
    ffaa:	f8bd 0896 	ldrh.w	r0, [sp, #2198]	; 0x896
    ffae:	f8ad 0b1e 	strh.w	r0, [sp, #2846]	; 0xb1e
    ffb2:	f50d 6032 	add.w	r0, sp, #2848	; 0xb20
    ffb6:	f20d 71c4 	addw	r1, sp, #1988	; 0x7c4
    ffba:	22cc      	movs	r2, #204	; 0xcc
    ffbc:	9009      	str	r0, [sp, #36]	; 0x24
    ffbe:	9208      	str	r2, [sp, #32]
    ffc0:	f00a ff92 	bl	1aee8 <__aeabi_memcpy>
        display.set_pixels(
    ffc4:	9810      	ldr	r0, [sp, #64]	; 0x40
    ffc6:	f8bd 3b1a 	ldrh.w	r3, [sp, #2842]	; 0xb1a
    ffca:	f8bd 2b1c 	ldrh.w	r2, [sp, #2844]	; 0xb1c
    ffce:	f8bd 1b18 	ldrh.w	r1, [sp, #2840]	; 0xb18
    ffd2:	f8bd cb1e 	ldrh.w	ip, [sp, #2846]	; 0xb1e
    ffd6:	f50d 6e3f 	add.w	lr, sp, #3056	; 0xbf0
            colors) ? ;
    ffda:	9007      	str	r0, [sp, #28]
    ffdc:	4670      	mov	r0, lr
    ffde:	9c09      	ldr	r4, [sp, #36]	; 0x24
    ffe0:	9106      	str	r1, [sp, #24]
    ffe2:	4621      	mov	r1, r4
    ffe4:	9d08      	ldr	r5, [sp, #32]
    ffe6:	9205      	str	r2, [sp, #20]
    ffe8:	462a      	mov	r2, r5
    ffea:	9304      	str	r3, [sp, #16]
    ffec:	f8cd c00c 	str.w	ip, [sp, #12]
    fff0:	f8cd e008 	str.w	lr, [sp, #8]
    fff4:	f00a ff78 	bl	1aee8 <__aeabi_memcpy>
        display.set_pixels(
    fff8:	4668      	mov	r0, sp
    fffa:	9902      	ldr	r1, [sp, #8]
    fffc:	6041      	str	r1, [r0, #4]
    fffe:	9a03      	ldr	r2, [sp, #12]
   10000:	6002      	str	r2, [r0, #0]
   10002:	9807      	ldr	r0, [sp, #28]
   10004:	9906      	ldr	r1, [sp, #24]
   10006:	9a05      	ldr	r2, [sp, #20]
   10008:	9b04      	ldr	r3, [sp, #16]
   1000a:	f7fd fe42 	bl	dc92 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE>
   1000e:	f88d 0bef 	strb.w	r0, [sp, #3055]	; 0xbef
   10012:	e796      	b.n	ff42 <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E+0xf2>
   10014:	f60d 0098 	addw	r0, sp, #2200	; 0x898
    for PixelBlock { x_left, x_right, y_top, y_bottom, colors, .. } in blocks {
   10018:	f000 f892 	bl	10140 <_ZN4core3ptr18real_drop_in_place17h807757272e9d64b3E>
   1001c:	e7b9      	b.n	ff92 <_ZN22piet_embedded_graphics5batch11draw_blocks17hba951e329a063be5E+0x142>

0001001e <_ZN22piet_embedded_graphics5batch7to_rows17h25c5b99153e6c809E>:
fn to_rows<P>(pixels: P) -> RowIterator<P>
   1001e:	b570      	push	{r4, r5, r6, lr}
   10020:	b0a6      	sub	sp, #152	; 0x98
   10022:	aa01      	add	r2, sp, #4
        pixels,
   10024:	e8b1 5038 	ldmia.w	r1!, {r3, r4, r5, ip, lr}
   10028:	e8a2 5038 	stmia.w	r2!, {r3, r4, r5, ip, lr}
   1002c:	e891 5078 	ldmia.w	r1, {r3, r4, r5, r6, ip, lr}
   10030:	e882 5078 	stmia.w	r2, {r3, r4, r5, r6, ip, lr}
   10034:	a90c      	add	r1, sp, #48	; 0x30
        colors: RowColors::new(),
   10036:	9000      	str	r0, [sp, #0]
   10038:	4608      	mov	r0, r1
   1003a:	f001 fe7c 	bl	11d36 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$3new17h538fc545c007851eE>
   1003e:	e7ff      	b.n	10040 <_ZN22piet_embedded_graphics5batch7to_rows17h25c5b99153e6c809E+0x22>
   10040:	a801      	add	r0, sp, #4
    RowIterator::<P> {
   10042:	9900      	ldr	r1, [sp, #0]
   10044:	e8b0 501c 	ldmia.w	r0!, {r2, r3, r4, ip, lr}
   10048:	e8a1 501c 	stmia.w	r1!, {r2, r3, r4, ip, lr}
   1004c:	e890 503c 	ldmia.w	r0, {r2, r3, r4, r5, ip, lr}
   10050:	e881 503c 	stmia.w	r1, {r2, r3, r4, r5, ip, lr}
   10054:	2000      	movs	r0, #0
   10056:	9900      	ldr	r1, [sp, #0]
   10058:	f8a1 0094 	strh.w	r0, [r1, #148]	; 0x94
   1005c:	f8a1 0096 	strh.w	r0, [r1, #150]	; 0x96
   10060:	f8a1 0098 	strh.w	r0, [r1, #152]	; 0x98
   10064:	f101 002c 	add.w	r0, r1, #44	; 0x2c
   10068:	a90c      	add	r1, sp, #48	; 0x30
   1006a:	2268      	movs	r2, #104	; 0x68
   1006c:	f00a ff3c 	bl	1aee8 <__aeabi_memcpy>
   10070:	2001      	movs	r0, #1
   10072:	9900      	ldr	r1, [sp, #0]
   10074:	f881 009a 	strb.w	r0, [r1, #154]	; 0x9a
}
   10078:	b026      	add	sp, #152	; 0x98
   1007a:	bd70      	pop	{r4, r5, r6, pc}

0001007c <_ZN22piet_embedded_graphics5batch9to_blocks17h64332cb963ed6cb9E>:
fn to_blocks<R>(rows: R) -> BlockIterator<R>
   1007c:	b580      	push	{r7, lr}
   1007e:	b0dc      	sub	sp, #368	; 0x170
   10080:	aa02      	add	r2, sp, #8
   10082:	239c      	movs	r3, #156	; 0x9c
        rows,
   10084:	9001      	str	r0, [sp, #4]
   10086:	4610      	mov	r0, r2
   10088:	461a      	mov	r2, r3
   1008a:	f00a ff2d 	bl	1aee8 <__aeabi_memcpy>
   1008e:	a829      	add	r0, sp, #164	; 0xa4
        colors: BlockColors::new(),
   10090:	f001 fe42 	bl	11d18 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$3new17h34731c8dc462e1a2E>
   10094:	e7ff      	b.n	10096 <_ZN22piet_embedded_graphics5batch9to_blocks17h64332cb963ed6cb9E+0x1a>
   10096:	a902      	add	r1, sp, #8
   10098:	229c      	movs	r2, #156	; 0x9c
    BlockIterator::<R> {
   1009a:	9801      	ldr	r0, [sp, #4]
   1009c:	f00a ff24 	bl	1aee8 <__aeabi_memcpy>
   100a0:	2000      	movs	r0, #0
   100a2:	9901      	ldr	r1, [sp, #4]
   100a4:	f8a1 0168 	strh.w	r0, [r1, #360]	; 0x168
   100a8:	f8a1 016a 	strh.w	r0, [r1, #362]	; 0x16a
   100ac:	f8a1 016c 	strh.w	r0, [r1, #364]	; 0x16c
   100b0:	f8a1 016e 	strh.w	r0, [r1, #366]	; 0x16e
   100b4:	f101 009c 	add.w	r0, r1, #156	; 0x9c
   100b8:	a929      	add	r1, sp, #164	; 0xa4
   100ba:	22cc      	movs	r2, #204	; 0xcc
   100bc:	f00a ff14 	bl	1aee8 <__aeabi_memcpy>
   100c0:	2001      	movs	r0, #1
   100c2:	9901      	ldr	r1, [sp, #4]
   100c4:	f881 0170 	strb.w	r0, [r1, #368]	; 0x170
}    
   100c8:	b05c      	add	sp, #368	; 0x170
   100ca:	bd80      	pop	{r7, pc}

000100cc <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h7cdb2cd7969bd6b8E>:
   100cc:	b580      	push	{r7, lr}
   100ce:	f44f 72ba 	mov.w	r2, #372	; 0x174
   100d2:	f00a ff09 	bl	1aee8 <__aeabi_memcpy>
   100d6:	bd80      	pop	{r7, pc}

000100d8 <_ZN4core3ptr18real_drop_in_place17h07ec28ccd91f0e6bE>:
   100d8:	b580      	push	{r7, lr}
   100da:	b082      	sub	sp, #8
   100dc:	9001      	str	r0, [sp, #4]
   100de:	9801      	ldr	r0, [sp, #4]
   100e0:	f001 fd88 	bl	11bf4 <_ZN73_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5669767cff00bda9E>
   100e4:	e7ff      	b.n	100e6 <_ZN4core3ptr18real_drop_in_place17h07ec28ccd91f0e6bE+0xe>
   100e6:	b002      	add	sp, #8
   100e8:	bd80      	pop	{r7, pc}

000100ea <_ZN4core3ptr18real_drop_in_place17h0d6fd5bc5ab576dfE>:
   100ea:	b580      	push	{r7, lr}
   100ec:	b082      	sub	sp, #8
   100ee:	9001      	str	r0, [sp, #4]
   100f0:	9801      	ldr	r0, [sp, #4]
   100f2:	f001 fd96 	bl	11c22 <_ZN73_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hadf269ac769c1fe1E>
   100f6:	e7ff      	b.n	100f8 <_ZN4core3ptr18real_drop_in_place17h0d6fd5bc5ab576dfE+0xe>
   100f8:	b002      	add	sp, #8
   100fa:	bd80      	pop	{r7, pc}

000100fc <_ZN4core3ptr18real_drop_in_place17h2f5d456fddc834acE>:
   100fc:	b580      	push	{r7, lr}
   100fe:	b082      	sub	sp, #8
   10100:	9001      	str	r0, [sp, #4]
   10102:	9801      	ldr	r0, [sp, #4]
   10104:	302c      	adds	r0, #44	; 0x2c
   10106:	f7ff ffe7 	bl	100d8 <_ZN4core3ptr18real_drop_in_place17h07ec28ccd91f0e6bE>
   1010a:	e7ff      	b.n	1010c <_ZN4core3ptr18real_drop_in_place17h2f5d456fddc834acE+0x10>
   1010c:	b002      	add	sp, #8
   1010e:	bd80      	pop	{r7, pc}

00010110 <_ZN4core3ptr18real_drop_in_place17h4a6818fb05e2364fE>:
   10110:	b580      	push	{r7, lr}
   10112:	b082      	sub	sp, #8
   10114:	9001      	str	r0, [sp, #4]
   10116:	9801      	ldr	r0, [sp, #4]
   10118:	f7ff ffe7 	bl	100ea <_ZN4core3ptr18real_drop_in_place17h0d6fd5bc5ab576dfE>
   1011c:	e7ff      	b.n	1011e <_ZN4core3ptr18real_drop_in_place17h4a6818fb05e2364fE+0xe>
   1011e:	b002      	add	sp, #8
   10120:	bd80      	pop	{r7, pc}

00010122 <_ZN4core3ptr18real_drop_in_place17h720aacbd88ba3db8E>:
   10122:	b580      	push	{r7, lr}
   10124:	b082      	sub	sp, #8
   10126:	9001      	str	r0, [sp, #4]
   10128:	9801      	ldr	r0, [sp, #4]
   1012a:	6800      	ldr	r0, [r0, #0]
   1012c:	2800      	cmp	r0, #0
   1012e:	d102      	bne.n	10136 <_ZN4core3ptr18real_drop_in_place17h720aacbd88ba3db8E+0x14>
   10130:	e7ff      	b.n	10132 <_ZN4core3ptr18real_drop_in_place17h720aacbd88ba3db8E+0x10>
   10132:	b002      	add	sp, #8
   10134:	bd80      	pop	{r7, pc}
   10136:	9801      	ldr	r0, [sp, #4]
   10138:	3004      	adds	r0, #4
   1013a:	f000 f81e 	bl	1017a <_ZN4core3ptr18real_drop_in_place17hbee10bb29aedc602E>
   1013e:	e7f8      	b.n	10132 <_ZN4core3ptr18real_drop_in_place17h720aacbd88ba3db8E+0x10>

00010140 <_ZN4core3ptr18real_drop_in_place17h807757272e9d64b3E>:
   10140:	b580      	push	{r7, lr}
   10142:	b082      	sub	sp, #8
   10144:	9001      	str	r0, [sp, #4]
   10146:	9801      	ldr	r0, [sp, #4]
   10148:	6800      	ldr	r0, [r0, #0]
   1014a:	2800      	cmp	r0, #0
   1014c:	d102      	bne.n	10154 <_ZN4core3ptr18real_drop_in_place17h807757272e9d64b3E+0x14>
   1014e:	e7ff      	b.n	10150 <_ZN4core3ptr18real_drop_in_place17h807757272e9d64b3E+0x10>
   10150:	b002      	add	sp, #8
   10152:	bd80      	pop	{r7, pc}
   10154:	9801      	ldr	r0, [sp, #4]
   10156:	3004      	adds	r0, #4
   10158:	f7ff ffda 	bl	10110 <_ZN4core3ptr18real_drop_in_place17h4a6818fb05e2364fE>
   1015c:	e7f8      	b.n	10150 <_ZN4core3ptr18real_drop_in_place17h807757272e9d64b3E+0x10>

0001015e <_ZN4core3ptr18real_drop_in_place17hb92333ffd4b39684E>:
   1015e:	b580      	push	{r7, lr}
   10160:	b082      	sub	sp, #8
   10162:	9001      	str	r0, [sp, #4]
   10164:	9801      	ldr	r0, [sp, #4]
   10166:	f7ff ffc9 	bl	100fc <_ZN4core3ptr18real_drop_in_place17h2f5d456fddc834acE>
   1016a:	e001      	b.n	10170 <_ZN4core3ptr18real_drop_in_place17hb92333ffd4b39684E+0x12>
   1016c:	b002      	add	sp, #8
   1016e:	bd80      	pop	{r7, pc}
   10170:	9801      	ldr	r0, [sp, #4]
   10172:	309c      	adds	r0, #156	; 0x9c
   10174:	f7ff ffb9 	bl	100ea <_ZN4core3ptr18real_drop_in_place17h0d6fd5bc5ab576dfE>
   10178:	e7f8      	b.n	1016c <_ZN4core3ptr18real_drop_in_place17hb92333ffd4b39684E+0xe>

0001017a <_ZN4core3ptr18real_drop_in_place17hbee10bb29aedc602E>:
   1017a:	b580      	push	{r7, lr}
   1017c:	b082      	sub	sp, #8
   1017e:	9001      	str	r0, [sp, #4]
   10180:	9801      	ldr	r0, [sp, #4]
   10182:	f7ff ffa9 	bl	100d8 <_ZN4core3ptr18real_drop_in_place17h07ec28ccd91f0e6bE>
   10186:	e7ff      	b.n	10188 <_ZN4core3ptr18real_drop_in_place17hbee10bb29aedc602E+0xe>
   10188:	b002      	add	sp, #8
   1018a:	bd80      	pop	{r7, pc}

0001018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>:
   1018c:	b081      	sub	sp, #4
   1018e:	b001      	add	sp, #4
   10190:	4770      	bx	lr

00010192 <_ZN4core5slice18from_raw_parts_mut17hd2635851eae679a9E>:
   10192:	b580      	push	{r7, lr}
   10194:	b088      	sub	sp, #32
   10196:	9005      	str	r0, [sp, #20]
   10198:	9106      	str	r1, [sp, #24]
   1019a:	2001      	movs	r0, #1
   1019c:	2800      	cmp	r0, #0
   1019e:	d117      	bne.n	101d0 <_ZN4core5slice18from_raw_parts_mut17hd2635851eae679a9E+0x3e>
   101a0:	e7ff      	b.n	101a2 <_ZN4core5slice18from_raw_parts_mut17hd2635851eae679a9E+0x10>
   101a2:	9805      	ldr	r0, [sp, #20]
   101a4:	f7fa fd4c 	bl	ac40 <_ZN4core10intrinsics23is_aligned_and_not_null17hfbf97934d37ba447E>
   101a8:	9004      	str	r0, [sp, #16]
   101aa:	e7ff      	b.n	101ac <_ZN4core5slice18from_raw_parts_mut17hd2635851eae679a9E+0x1a>
   101ac:	9804      	ldr	r0, [sp, #16]
   101ae:	07c1      	lsls	r1, r0, #31
   101b0:	2900      	cmp	r1, #0
   101b2:	d001      	beq.n	101b8 <_ZN4core5slice18from_raw_parts_mut17hd2635851eae679a9E+0x26>
   101b4:	e7ff      	b.n	101b6 <_ZN4core5slice18from_raw_parts_mut17hd2635851eae679a9E+0x24>
   101b6:	e00b      	b.n	101d0 <_ZN4core5slice18from_raw_parts_mut17hd2635851eae679a9E+0x3e>
   101b8:	f64d 301c 	movw	r0, #56092	; 0xdb1c
   101bc:	f2c0 0001 	movt	r0, #1
   101c0:	f64d 3290 	movw	r2, #56208	; 0xdb90
   101c4:	f2c0 0201 	movt	r2, #1
   101c8:	2129      	movs	r1, #41	; 0x29
   101ca:	f004 fcea 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   101ce:	defe      	udf	#254	; 0xfe
   101d0:	2001      	movs	r0, #1
   101d2:	2800      	cmp	r0, #0
   101d4:	d11c      	bne.n	10210 <_ZN4core5slice18from_raw_parts_mut17hd2635851eae679a9E+0x7e>
   101d6:	e7ff      	b.n	101d8 <_ZN4core5slice18from_raw_parts_mut17hd2635851eae679a9E+0x46>
   101d8:	2001      	movs	r0, #1
   101da:	9007      	str	r0, [sp, #28]
   101dc:	9807      	ldr	r0, [sp, #28]
   101de:	9003      	str	r0, [sp, #12]
   101e0:	e7ff      	b.n	101e2 <_ZN4core5slice18from_raw_parts_mut17hd2635851eae679a9E+0x50>
   101e2:	9906      	ldr	r1, [sp, #24]
   101e4:	9803      	ldr	r0, [sp, #12]
   101e6:	f003 fc58 	bl	13a9a <_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17h1ec8abe4e9cc3871E>
   101ea:	9002      	str	r0, [sp, #8]
   101ec:	e7ff      	b.n	101ee <_ZN4core5slice18from_raw_parts_mut17hd2635851eae679a9E+0x5c>
   101ee:	9802      	ldr	r0, [sp, #8]
   101f0:	2800      	cmp	r0, #0
   101f2:	d401      	bmi.n	101f8 <_ZN4core5slice18from_raw_parts_mut17hd2635851eae679a9E+0x66>
   101f4:	e7ff      	b.n	101f6 <_ZN4core5slice18from_raw_parts_mut17hd2635851eae679a9E+0x64>
   101f6:	e00b      	b.n	10210 <_ZN4core5slice18from_raw_parts_mut17hd2635851eae679a9E+0x7e>
   101f8:	f64d 30a0 	movw	r0, #56224	; 0xdba0
   101fc:	f2c0 0001 	movt	r0, #1
   10200:	f64d 3290 	movw	r2, #56208	; 0xdb90
   10204:	f2c0 0201 	movt	r2, #1
   10208:	2140      	movs	r1, #64	; 0x40
   1020a:	f004 fcca 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   1020e:	defe      	udf	#254	; 0xfe
   10210:	9805      	ldr	r0, [sp, #20]
   10212:	9906      	ldr	r1, [sp, #24]
   10214:	f7fb fc94 	bl	bb40 <_ZN4core3ptr24slice_from_raw_parts_mut17hb2c3a5ddaeb065c8E>
   10218:	9001      	str	r0, [sp, #4]
   1021a:	9100      	str	r1, [sp, #0]
   1021c:	e7ff      	b.n	1021e <_ZN4core5slice18from_raw_parts_mut17hd2635851eae679a9E+0x8c>
   1021e:	9801      	ldr	r0, [sp, #4]
   10220:	9900      	ldr	r1, [sp, #0]
   10222:	b008      	add	sp, #32
   10224:	bd80      	pop	{r7, pc}

00010226 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h73f0c20fb8309e98E>:
   10226:	b580      	push	{r7, lr}
   10228:	b084      	sub	sp, #16
   1022a:	9001      	str	r0, [sp, #4]
   1022c:	9102      	str	r1, [sp, #8]
   1022e:	9203      	str	r2, [sp, #12]
   10230:	9803      	ldr	r0, [sp, #12]
   10232:	9901      	ldr	r1, [sp, #4]
   10234:	9a02      	ldr	r2, [sp, #8]
   10236:	f000 f84f 	bl	102d8 <_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h85a8102dace1a780E>
   1023a:	9000      	str	r0, [sp, #0]
   1023c:	e7ff      	b.n	1023e <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h73f0c20fb8309e98E+0x18>
   1023e:	9800      	ldr	r0, [sp, #0]
   10240:	b004      	add	sp, #16
   10242:	bd80      	pop	{r7, pc}

00010244 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h03c1b8f1936c1449E>:
   10244:	b580      	push	{r7, lr}
   10246:	b08c      	sub	sp, #48	; 0x30
   10248:	9004      	str	r0, [sp, #16]
   1024a:	9105      	str	r1, [sp, #20]
   1024c:	9804      	ldr	r0, [sp, #16]
   1024e:	9905      	ldr	r1, [sp, #20]
   10250:	f7fa fd83 	bl	ad5a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h4a5bc0e612dcb4a6E>
   10254:	9003      	str	r0, [sp, #12]
   10256:	e7ff      	b.n	10258 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h03c1b8f1936c1449E+0x14>
   10258:	2101      	movs	r1, #1
   1025a:	9803      	ldr	r0, [sp, #12]
   1025c:	f003 fbf9 	bl	13a52 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17hc8f9824cf921e64fE>
   10260:	9002      	str	r0, [sp, #8]
   10262:	9101      	str	r1, [sp, #4]
   10264:	e7ff      	b.n	10266 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h03c1b8f1936c1449E+0x22>
   10266:	9802      	ldr	r0, [sp, #8]
   10268:	9901      	ldr	r1, [sp, #4]
   1026a:	f7fb fbfe 	bl	ba6a <_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h1f4c4c45e5a390deE>
   1026e:	9109      	str	r1, [sp, #36]	; 0x24
   10270:	9008      	str	r0, [sp, #32]
   10272:	e7ff      	b.n	10274 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h03c1b8f1936c1449E+0x30>
   10274:	9808      	ldr	r0, [sp, #32]
   10276:	2800      	cmp	r0, #0
   10278:	d00d      	beq.n	10296 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h03c1b8f1936c1449E+0x52>
   1027a:	e7ff      	b.n	1027c <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h03c1b8f1936c1449E+0x38>
   1027c:	e000      	b.n	10280 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h03c1b8f1936c1449E+0x3c>
   1027e:	defe      	udf	#254	; 0xfe
   10280:	f7fa fa3e 	bl	a700 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h9afc0479a1d06b9aE>
   10284:	e002      	b.n	1028c <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h03c1b8f1936c1449E+0x48>
   10286:	9806      	ldr	r0, [sp, #24]
   10288:	b00c      	add	sp, #48	; 0x30
   1028a:	bd80      	pop	{r7, pc}
   1028c:	f7fb fbe7 	bl	ba5e <_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h59538b9869cd045bE>
   10290:	9006      	str	r0, [sp, #24]
   10292:	e7ff      	b.n	10294 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h03c1b8f1936c1449E+0x50>
   10294:	e7f7      	b.n	10286 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h03c1b8f1936c1449E+0x42>
   10296:	9809      	ldr	r0, [sp, #36]	; 0x24
   10298:	900b      	str	r0, [sp, #44]	; 0x2c
   1029a:	980b      	ldr	r0, [sp, #44]	; 0x2c
   1029c:	9007      	str	r0, [sp, #28]
   1029e:	9804      	ldr	r0, [sp, #16]
   102a0:	9905      	ldr	r1, [sp, #20]
   102a2:	9a07      	ldr	r2, [sp, #28]
   102a4:	f7ff ffbf 	bl	10226 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h73f0c20fb8309e98E>
   102a8:	9006      	str	r0, [sp, #24]
   102aa:	e7ff      	b.n	102ac <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h03c1b8f1936c1449E+0x68>
   102ac:	e7eb      	b.n	10286 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4last17h03c1b8f1936c1449E+0x42>

000102ae <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17habc49aefb85471bcE>:
   102ae:	b082      	sub	sp, #8
   102b0:	9000      	str	r0, [sp, #0]
   102b2:	9101      	str	r1, [sp, #4]
   102b4:	9800      	ldr	r0, [sp, #0]
   102b6:	b002      	add	sp, #8
   102b8:	4770      	bx	lr

000102ba <_ZN4core5slice87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17hff816b0e36a79e61E>:
   102ba:	b580      	push	{r7, lr}
   102bc:	b084      	sub	sp, #16
   102be:	9002      	str	r0, [sp, #8]
   102c0:	9103      	str	r1, [sp, #12]
   102c2:	9802      	ldr	r0, [sp, #8]
   102c4:	9903      	ldr	r1, [sp, #12]
   102c6:	f7fa f9d2 	bl	a66e <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hb8f72590c3536eeeE>
   102ca:	9001      	str	r0, [sp, #4]
   102cc:	9100      	str	r1, [sp, #0]
   102ce:	e7ff      	b.n	102d0 <_ZN4core5slice87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17hff816b0e36a79e61E+0x16>
   102d0:	9801      	ldr	r0, [sp, #4]
   102d2:	9900      	ldr	r1, [sp, #0]
   102d4:	b004      	add	sp, #16
   102d6:	bd80      	pop	{r7, pc}

000102d8 <_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h85a8102dace1a780E>:
   102d8:	b580      	push	{r7, lr}
   102da:	b088      	sub	sp, #32
   102dc:	9004      	str	r0, [sp, #16]
   102de:	9105      	str	r1, [sp, #20]
   102e0:	9206      	str	r2, [sp, #24]
   102e2:	9804      	ldr	r0, [sp, #16]
   102e4:	9905      	ldr	r1, [sp, #20]
   102e6:	9a06      	ldr	r2, [sp, #24]
   102e8:	9003      	str	r0, [sp, #12]
   102ea:	4608      	mov	r0, r1
   102ec:	4611      	mov	r1, r2
   102ee:	f7fa fd34 	bl	ad5a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h4a5bc0e612dcb4a6E>
   102f2:	9002      	str	r0, [sp, #8]
   102f4:	e7ff      	b.n	102f6 <_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h85a8102dace1a780E+0x1e>
   102f6:	9803      	ldr	r0, [sp, #12]
   102f8:	9902      	ldr	r1, [sp, #8]
   102fa:	4288      	cmp	r0, r1
   102fc:	d303      	bcc.n	10306 <_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h85a8102dace1a780E+0x2e>
   102fe:	e7ff      	b.n	10300 <_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h85a8102dace1a780E+0x28>
   10300:	2000      	movs	r0, #0
   10302:	9007      	str	r0, [sp, #28]
   10304:	e009      	b.n	1031a <_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h85a8102dace1a780E+0x42>
   10306:	9804      	ldr	r0, [sp, #16]
   10308:	9905      	ldr	r1, [sp, #20]
   1030a:	9a06      	ldr	r2, [sp, #24]
   1030c:	f7fa fd5b 	bl	adc6 <_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h82016ab240bc76c1E>
   10310:	9001      	str	r0, [sp, #4]
   10312:	e7ff      	b.n	10314 <_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h85a8102dace1a780E+0x3c>
   10314:	9801      	ldr	r0, [sp, #4]
   10316:	9007      	str	r0, [sp, #28]
   10318:	e7ff      	b.n	1031a <_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h85a8102dace1a780E+0x42>
   1031a:	9807      	ldr	r0, [sp, #28]
   1031c:	b008      	add	sp, #32
   1031e:	bd80      	pop	{r7, pc}

00010320 <_ZN4core3cmp5impls53_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u8$GT$2eq17h798287cdaf387aa6E>:
   10320:	b082      	sub	sp, #8
   10322:	9000      	str	r0, [sp, #0]
   10324:	9101      	str	r1, [sp, #4]
   10326:	9800      	ldr	r0, [sp, #0]
   10328:	7800      	ldrb	r0, [r0, #0]
   1032a:	9901      	ldr	r1, [sp, #4]
   1032c:	7809      	ldrb	r1, [r1, #0]
   1032e:	1a40      	subs	r0, r0, r1
   10330:	fab0 f080 	clz	r0, r0
   10334:	0940      	lsrs	r0, r0, #5
   10336:	b002      	add	sp, #8
   10338:	4770      	bx	lr

0001033a <_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17hf025f1216eed7986E>:
   1033a:	b580      	push	{r7, lr}
   1033c:	b086      	sub	sp, #24
   1033e:	9003      	str	r0, [sp, #12]
   10340:	9104      	str	r1, [sp, #16]
   10342:	9804      	ldr	r0, [sp, #16]
   10344:	f005 fa0d 	bl	15762 <_ZN4core3fmt9Formatter15debug_lower_hex17hd5a179b4f32396d1E>
   10348:	9002      	str	r0, [sp, #8]
   1034a:	e7ff      	b.n	1034c <_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17hf025f1216eed7986E+0x12>
   1034c:	9802      	ldr	r0, [sp, #8]
   1034e:	07c1      	lsls	r1, r0, #31
   10350:	2900      	cmp	r1, #0
   10352:	d105      	bne.n	10360 <_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17hf025f1216eed7986E+0x26>
   10354:	e7ff      	b.n	10356 <_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17hf025f1216eed7986E+0x1c>
   10356:	9804      	ldr	r0, [sp, #16]
   10358:	f005 fa07 	bl	1576a <_ZN4core3fmt9Formatter15debug_upper_hex17h16c8a6c8a304dceeE>
   1035c:	9001      	str	r0, [sp, #4]
   1035e:	e007      	b.n	10370 <_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17hf025f1216eed7986E+0x36>
   10360:	9803      	ldr	r0, [sp, #12]
   10362:	9904      	ldr	r1, [sp, #16]
   10364:	f005 fea0 	bl	160a8 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i8$GT$3fmt17hcf02db6b661d0d51E>
   10368:	f88d 0017 	strb.w	r0, [sp, #23]
   1036c:	e7ff      	b.n	1036e <_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17hf025f1216eed7986E+0x34>
   1036e:	e015      	b.n	1039c <_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17hf025f1216eed7986E+0x62>
   10370:	9801      	ldr	r0, [sp, #4]
   10372:	07c1      	lsls	r1, r0, #31
   10374:	2900      	cmp	r1, #0
   10376:	d107      	bne.n	10388 <_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17hf025f1216eed7986E+0x4e>
   10378:	e7ff      	b.n	1037a <_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17hf025f1216eed7986E+0x40>
   1037a:	9803      	ldr	r0, [sp, #12]
   1037c:	9904      	ldr	r1, [sp, #16]
   1037e:	f006 f8f8 	bl	16572 <_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17h4566d0879df4660bE>
   10382:	f88d 0017 	strb.w	r0, [sp, #23]
   10386:	e007      	b.n	10398 <_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17hf025f1216eed7986E+0x5e>
   10388:	9803      	ldr	r0, [sp, #12]
   1038a:	9904      	ldr	r1, [sp, #16]
   1038c:	f005 febb 	bl	16106 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i8$GT$3fmt17h46ba2fad91bd7442E>
   10390:	f88d 0017 	strb.w	r0, [sp, #23]
   10394:	e7ff      	b.n	10396 <_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17hf025f1216eed7986E+0x5c>
   10396:	e000      	b.n	1039a <_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17hf025f1216eed7986E+0x60>
   10398:	e7ff      	b.n	1039a <_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17hf025f1216eed7986E+0x60>
   1039a:	e7ff      	b.n	1039c <_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17hf025f1216eed7986E+0x62>
   1039c:	f89d 0017 	ldrb.w	r0, [sp, #23]
   103a0:	b006      	add	sp, #24
   103a2:	bd80      	pop	{r7, pc}

000103a4 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hae4b9b613621b905E>:
   103a4:	b580      	push	{r7, lr}
   103a6:	b086      	sub	sp, #24
   103a8:	9003      	str	r0, [sp, #12]
   103aa:	9104      	str	r1, [sp, #16]
   103ac:	9804      	ldr	r0, [sp, #16]
   103ae:	f005 f9d8 	bl	15762 <_ZN4core3fmt9Formatter15debug_lower_hex17hd5a179b4f32396d1E>
   103b2:	9002      	str	r0, [sp, #8]
   103b4:	e7ff      	b.n	103b6 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hae4b9b613621b905E+0x12>
   103b6:	9802      	ldr	r0, [sp, #8]
   103b8:	07c1      	lsls	r1, r0, #31
   103ba:	2900      	cmp	r1, #0
   103bc:	d105      	bne.n	103ca <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hae4b9b613621b905E+0x26>
   103be:	e7ff      	b.n	103c0 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hae4b9b613621b905E+0x1c>
   103c0:	9804      	ldr	r0, [sp, #16]
   103c2:	f005 f9d2 	bl	1576a <_ZN4core3fmt9Formatter15debug_upper_hex17h16c8a6c8a304dceeE>
   103c6:	9001      	str	r0, [sp, #4]
   103c8:	e007      	b.n	103da <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hae4b9b613621b905E+0x36>
   103ca:	9803      	ldr	r0, [sp, #12]
   103cc:	9904      	ldr	r1, [sp, #16]
   103ce:	f005 ff87 	bl	162e0 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17h2a11dfdafa4f3e91E>
   103d2:	f88d 0017 	strb.w	r0, [sp, #23]
   103d6:	e7ff      	b.n	103d8 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hae4b9b613621b905E+0x34>
   103d8:	e015      	b.n	10406 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hae4b9b613621b905E+0x62>
   103da:	9801      	ldr	r0, [sp, #4]
   103dc:	07c1      	lsls	r1, r0, #31
   103de:	2900      	cmp	r1, #0
   103e0:	d107      	bne.n	103f2 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hae4b9b613621b905E+0x4e>
   103e2:	e7ff      	b.n	103e4 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hae4b9b613621b905E+0x40>
   103e4:	9803      	ldr	r0, [sp, #12]
   103e6:	9904      	ldr	r1, [sp, #16]
   103e8:	f006 f8cd 	bl	16586 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17hab38770a21c0711cE>
   103ec:	f88d 0017 	strb.w	r0, [sp, #23]
   103f0:	e007      	b.n	10402 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hae4b9b613621b905E+0x5e>
   103f2:	9803      	ldr	r0, [sp, #12]
   103f4:	9904      	ldr	r1, [sp, #16]
   103f6:	f005 ffde 	bl	163b6 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17hde0faf7a053167a3E>
   103fa:	f88d 0017 	strb.w	r0, [sp, #23]
   103fe:	e7ff      	b.n	10400 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hae4b9b613621b905E+0x5c>
   10400:	e000      	b.n	10404 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hae4b9b613621b905E+0x60>
   10402:	e7ff      	b.n	10404 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hae4b9b613621b905E+0x60>
   10404:	e7ff      	b.n	10406 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hae4b9b613621b905E+0x62>
   10406:	f89d 0017 	ldrb.w	r0, [sp, #23]
   1040a:	b006      	add	sp, #24
   1040c:	bd80      	pop	{r7, pc}

0001040e <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hdac756b7c31413cfE>:
   1040e:	b580      	push	{r7, lr}
   10410:	b086      	sub	sp, #24
   10412:	9003      	str	r0, [sp, #12]
   10414:	9104      	str	r1, [sp, #16]
   10416:	9804      	ldr	r0, [sp, #16]
   10418:	f005 f9a3 	bl	15762 <_ZN4core3fmt9Formatter15debug_lower_hex17hd5a179b4f32396d1E>
   1041c:	9002      	str	r0, [sp, #8]
   1041e:	e7ff      	b.n	10420 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hdac756b7c31413cfE+0x12>
   10420:	9802      	ldr	r0, [sp, #8]
   10422:	07c1      	lsls	r1, r0, #31
   10424:	2900      	cmp	r1, #0
   10426:	d105      	bne.n	10434 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hdac756b7c31413cfE+0x26>
   10428:	e7ff      	b.n	1042a <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hdac756b7c31413cfE+0x1c>
   1042a:	9804      	ldr	r0, [sp, #16]
   1042c:	f005 f99d 	bl	1576a <_ZN4core3fmt9Formatter15debug_upper_hex17h16c8a6c8a304dceeE>
   10430:	9001      	str	r0, [sp, #4]
   10432:	e007      	b.n	10444 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hdac756b7c31413cfE+0x36>
   10434:	9803      	ldr	r0, [sp, #12]
   10436:	9904      	ldr	r1, [sp, #16]
   10438:	f005 ff52 	bl	162e0 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17h2a11dfdafa4f3e91E>
   1043c:	f88d 0017 	strb.w	r0, [sp, #23]
   10440:	e7ff      	b.n	10442 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hdac756b7c31413cfE+0x34>
   10442:	e015      	b.n	10470 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hdac756b7c31413cfE+0x62>
   10444:	9801      	ldr	r0, [sp, #4]
   10446:	07c1      	lsls	r1, r0, #31
   10448:	2900      	cmp	r1, #0
   1044a:	d107      	bne.n	1045c <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hdac756b7c31413cfE+0x4e>
   1044c:	e7ff      	b.n	1044e <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hdac756b7c31413cfE+0x40>
   1044e:	9803      	ldr	r0, [sp, #12]
   10450:	9904      	ldr	r1, [sp, #16]
   10452:	f006 f8a2 	bl	1659a <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h76e87fee82ab7b9eE>
   10456:	f88d 0017 	strb.w	r0, [sp, #23]
   1045a:	e007      	b.n	1046c <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hdac756b7c31413cfE+0x5e>
   1045c:	9803      	ldr	r0, [sp, #12]
   1045e:	9904      	ldr	r1, [sp, #16]
   10460:	f005 ffa9 	bl	163b6 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17hde0faf7a053167a3E>
   10464:	f88d 0017 	strb.w	r0, [sp, #23]
   10468:	e7ff      	b.n	1046a <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hdac756b7c31413cfE+0x5c>
   1046a:	e000      	b.n	1046e <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hdac756b7c31413cfE+0x60>
   1046c:	e7ff      	b.n	1046e <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hdac756b7c31413cfE+0x60>
   1046e:	e7ff      	b.n	10470 <_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17hdac756b7c31413cfE+0x62>
   10470:	f89d 0017 	ldrb.w	r0, [sp, #23]
   10474:	b006      	add	sp, #24
   10476:	bd80      	pop	{r7, pc}

00010478 <_ZN4core3str21_$LT$impl$u20$str$GT$3len17hb10ade17c01876c3E>:
   10478:	b580      	push	{r7, lr}
   1047a:	b08a      	sub	sp, #40	; 0x28
   1047c:	9004      	str	r0, [sp, #16]
   1047e:	9105      	str	r1, [sp, #20]
   10480:	9804      	ldr	r0, [sp, #16]
   10482:	9905      	ldr	r1, [sp, #20]
   10484:	9006      	str	r0, [sp, #24]
   10486:	9107      	str	r1, [sp, #28]
   10488:	9806      	ldr	r0, [sp, #24]
   1048a:	9907      	ldr	r1, [sp, #28]
   1048c:	9008      	str	r0, [sp, #32]
   1048e:	9109      	str	r1, [sp, #36]	; 0x24
   10490:	9808      	ldr	r0, [sp, #32]
   10492:	9909      	ldr	r1, [sp, #36]	; 0x24
   10494:	9003      	str	r0, [sp, #12]
   10496:	9102      	str	r1, [sp, #8]
   10498:	e7ff      	b.n	1049a <_ZN4core3str21_$LT$impl$u20$str$GT$3len17hb10ade17c01876c3E+0x22>
   1049a:	9803      	ldr	r0, [sp, #12]
   1049c:	9902      	ldr	r1, [sp, #8]
   1049e:	f7fa fc5c 	bl	ad5a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h4a5bc0e612dcb4a6E>
   104a2:	9001      	str	r0, [sp, #4]
   104a4:	e7ff      	b.n	104a6 <_ZN4core3str21_$LT$impl$u20$str$GT$3len17hb10ade17c01876c3E+0x2e>
   104a6:	9801      	ldr	r0, [sp, #4]
   104a8:	b00a      	add	sp, #40	; 0x28
   104aa:	bd80      	pop	{r7, pc}

000104ac <_ZN4core3str21_$LT$impl$u20$str$GT$6as_ptr17h3d3bebd801dbee98E>:
   104ac:	b082      	sub	sp, #8
   104ae:	9000      	str	r0, [sp, #0]
   104b0:	9101      	str	r1, [sp, #4]
   104b2:	9800      	ldr	r0, [sp, #0]
   104b4:	b002      	add	sp, #8
   104b6:	4770      	bx	lr

000104b8 <_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h1974a3e150d0d375E>:
   104b8:	b580      	push	{r7, lr}
   104ba:	b084      	sub	sp, #16
   104bc:	9002      	str	r0, [sp, #8]
   104be:	9103      	str	r1, [sp, #12]
   104c0:	9802      	ldr	r0, [sp, #8]
   104c2:	6800      	ldr	r0, [r0, #0]
   104c4:	9903      	ldr	r1, [sp, #12]
   104c6:	6809      	ldr	r1, [r1, #0]
   104c8:	f7ff ff2a 	bl	10320 <_ZN4core3cmp5impls53_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u8$GT$2eq17h798287cdaf387aa6E>
   104cc:	9001      	str	r0, [sp, #4]
   104ce:	e7ff      	b.n	104d0 <_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h1974a3e150d0d375E+0x18>
   104d0:	9801      	ldr	r0, [sp, #4]
   104d2:	f000 0001 	and.w	r0, r0, #1
   104d6:	b004      	add	sp, #16
   104d8:	bd80      	pop	{r7, pc}

000104da <_ZN4core3ptr18real_drop_in_place17h1ee024b34910d0e1E>:
   104da:	b081      	sub	sp, #4
   104dc:	9000      	str	r0, [sp, #0]
   104de:	b001      	add	sp, #4
   104e0:	4770      	bx	lr

000104e2 <_ZN4core3ptr18real_drop_in_place17h9ee06695bb8ca99bE>:
   104e2:	b081      	sub	sp, #4
   104e4:	9000      	str	r0, [sp, #0]
   104e6:	b001      	add	sp, #4
   104e8:	4770      	bx	lr

000104ea <_ZN78_$LT$mynewt..result..MynewtError$u20$as$u20$core..convert..From$LT$i32$GT$$GT$4from17h1152819df320558fE>:
        fn from(num: i32) -> Self {
   104ea:	b083      	sub	sp, #12
   104ec:	9001      	str	r0, [sp, #4]
                    (num)
   104ee:	9801      	ldr	r0, [sp, #4]
                ::core::mem::transmute::
   104f0:	9002      	str	r0, [sp, #8]
   104f2:	9802      	ldr	r0, [sp, #8]
   104f4:	9000      	str	r0, [sp, #0]
   104f6:	e7ff      	b.n	104f8 <_ZN78_$LT$mynewt..result..MynewtError$u20$as$u20$core..convert..From$LT$i32$GT$$GT$4from17h1152819df320558fE+0xe>
        }
   104f8:	9800      	ldr	r0, [sp, #0]
   104fa:	b003      	add	sp, #12
   104fc:	4770      	bx	lr

000104fe <_ZN83_$LT$mynewt..result..MynewtError$u20$as$u20$core..convert..From$LT$$LP$$RP$$GT$$GT$4from17heb2793981fcdfe68E>:
        fn from(_: ()) -> Self {
   104fe:	b081      	sub	sp, #4
   10500:	f06f 000c 	mvn.w	r0, #12
        }
   10504:	b001      	add	sp, #4
   10506:	4770      	bx	lr

00010508 <_ZN64_$LT$mynewt..result..MynewtError$u20$as$u20$core..fmt..Debug$GT$3fmt17hd546b12d711fd5d8E>:
        fn fmt(&self, _fmt: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
   10508:	b082      	sub	sp, #8
   1050a:	9000      	str	r0, [sp, #0]
   1050c:	9101      	str	r1, [sp, #4]
   1050e:	2000      	movs	r0, #0
        }
   10510:	b002      	add	sp, #8
   10512:	4770      	bx	lr

00010514 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE>:

/// Non-blocking SPI transfer callback values (not used)
static mut SPI_CALLBACK: SpiCallback = SpiCallback {};

/// Init non-blocking SPI transfer
pub fn spi_noblock_init() -> MynewtResult<()> {
   10514:	b5b0      	push	{r4, r5, r7, lr}
   10516:	f5ad 6da8 	sub.w	sp, sp, #1344	; 0x540
   1051a:	2000      	movs	r0, #0
    //  Disable SPI port
    unsafe { hal::hal_spi_disable(SPI_NUM) };
   1051c:	f006 feb2 	bl	17284 <hal_spi_disable>
   10520:	e7ff      	b.n	10522 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0xe>

    //  Configure SPI port for non-blocking SPI
    let rc = unsafe { hal::hal_spi_config(SPI_NUM, &mut SPI_SETTINGS) }; assert_eq!(rc, 0, "spi config fail");  //  TODO: Map to MynewtResult
   10522:	f240 01f0 	movw	r1, #240	; 0xf0
   10526:	f2c2 0100 	movt	r1, #8192	; 0x2000
   1052a:	2000      	movs	r0, #0
   1052c:	f006 fe68 	bl	17200 <hal_spi_config>
   10530:	9051      	str	r0, [sp, #324]	; 0x144
   10532:	e7ff      	b.n	10534 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x20>
   10534:	f64d 30e4 	movw	r0, #56292	; 0xdbe4
   10538:	f2c0 0001 	movt	r0, #1
   1053c:	6800      	ldr	r0, [r0, #0]
   1053e:	a951      	add	r1, sp, #324	; 0x144
   10540:	9152      	str	r1, [sp, #328]	; 0x148
   10542:	9053      	str	r0, [sp, #332]	; 0x14c
   10544:	9852      	ldr	r0, [sp, #328]	; 0x148
   10546:	9054      	str	r0, [sp, #336]	; 0x150
   10548:	9853      	ldr	r0, [sp, #332]	; 0x14c
   1054a:	9055      	str	r0, [sp, #340]	; 0x154
   1054c:	9854      	ldr	r0, [sp, #336]	; 0x150
   1054e:	6800      	ldr	r0, [r0, #0]
   10550:	9955      	ldr	r1, [sp, #340]	; 0x154
   10552:	6809      	ldr	r1, [r1, #0]
   10554:	4288      	cmp	r0, r1
   10556:	d106      	bne.n	10566 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x52>
   10558:	e7ff      	b.n	1055a <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x46>
    let arg = unsafe { core::mem::transmute(&mut SPI_CALLBACK) };
   1055a:	f640 60a4 	movw	r0, #3748	; 0xea4
   1055e:	f2c2 0000 	movt	r0, #8192	; 0x2000
   10562:	9070      	str	r0, [sp, #448]	; 0x1c0
   10564:	e074      	b.n	10650 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x13c>
    let rc = unsafe { hal::hal_spi_config(SPI_NUM, &mut SPI_SETTINGS) }; assert_eq!(rc, 0, "spi config fail");  //  TODO: Map to MynewtResult
   10566:	f64d 403c 	movw	r0, #56380	; 0xdc3c
   1056a:	f2c0 0001 	movt	r0, #1
   1056e:	6801      	ldr	r1, [r0, #0]
   10570:	9854      	ldr	r0, [sp, #336]	; 0x150
   10572:	9065      	str	r0, [sp, #404]	; 0x194
   10574:	9855      	ldr	r0, [sp, #340]	; 0x154
   10576:	9066      	str	r0, [sp, #408]	; 0x198
   10578:	f64d 4058 	movw	r0, #56408	; 0xdc58
   1057c:	f2c0 0001 	movt	r0, #1
   10580:	6800      	ldr	r0, [r0, #0]
   10582:	f64d 425c 	movw	r2, #56412	; 0xdc5c
   10586:	f2c0 0201 	movt	r2, #1
   1058a:	6813      	ldr	r3, [r2, #0]
   1058c:	466a      	mov	r2, sp
   1058e:	f04f 0c00 	mov.w	ip, #0
   10592:	f8c2 c000 	str.w	ip, [r2]
   10596:	aa67      	add	r2, sp, #412	; 0x19c
   10598:	f04f 0c01 	mov.w	ip, #1
   1059c:	904f      	str	r0, [sp, #316]	; 0x13c
   1059e:	4610      	mov	r0, r2
   105a0:	9a4f      	ldr	r2, [sp, #316]	; 0x13c
   105a2:	914e      	str	r1, [sp, #312]	; 0x138
   105a4:	4611      	mov	r1, r2
   105a6:	4662      	mov	r2, ip
   105a8:	f7fb fbb2 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
   105ac:	e7ff      	b.n	105ae <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x9a>
   105ae:	a865      	add	r0, sp, #404	; 0x194
   105b0:	9062      	str	r0, [sp, #392]	; 0x188
   105b2:	a866      	add	r0, sp, #408	; 0x198
   105b4:	9063      	str	r0, [sp, #396]	; 0x18c
   105b6:	a867      	add	r0, sp, #412	; 0x19c
   105b8:	9064      	str	r0, [sp, #400]	; 0x190
   105ba:	9862      	ldr	r0, [sp, #392]	; 0x188
   105bc:	906d      	str	r0, [sp, #436]	; 0x1b4
   105be:	9863      	ldr	r0, [sp, #396]	; 0x18c
   105c0:	906e      	str	r0, [sp, #440]	; 0x1b8
   105c2:	9864      	ldr	r0, [sp, #400]	; 0x190
   105c4:	906f      	str	r0, [sp, #444]	; 0x1bc
   105c6:	986d      	ldr	r0, [sp, #436]	; 0x1b4
   105c8:	f64b 5189 	movw	r1, #48521	; 0xbd89
   105cc:	f2c0 0100 	movt	r1, #0
   105d0:	f7fb fbfa 	bl	bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>
   105d4:	904d      	str	r0, [sp, #308]	; 0x134
   105d6:	914c      	str	r1, [sp, #304]	; 0x130
   105d8:	e7ff      	b.n	105da <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0xc6>
   105da:	986e      	ldr	r0, [sp, #440]	; 0x1b8
   105dc:	f64b 5189 	movw	r1, #48521	; 0xbd89
   105e0:	f2c0 0100 	movt	r1, #0
   105e4:	f7fb fbf0 	bl	bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>
   105e8:	904b      	str	r0, [sp, #300]	; 0x12c
   105ea:	914a      	str	r1, [sp, #296]	; 0x128
   105ec:	e7ff      	b.n	105ee <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0xda>
   105ee:	986f      	ldr	r0, [sp, #444]	; 0x1bc
   105f0:	f644 71c9 	movw	r1, #20425	; 0x4fc9
   105f4:	f2c0 0101 	movt	r1, #1
   105f8:	f7fb fc25 	bl	be46 <_ZN4core3fmt10ArgumentV13new17hd6e40bd932949712E>
   105fc:	9049      	str	r0, [sp, #292]	; 0x124
   105fe:	9148      	str	r1, [sp, #288]	; 0x120
   10600:	e7ff      	b.n	10602 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0xee>
   10602:	984d      	ldr	r0, [sp, #308]	; 0x134
   10604:	905c      	str	r0, [sp, #368]	; 0x170
   10606:	994c      	ldr	r1, [sp, #304]	; 0x130
   10608:	915d      	str	r1, [sp, #372]	; 0x174
   1060a:	9a4b      	ldr	r2, [sp, #300]	; 0x12c
   1060c:	925e      	str	r2, [sp, #376]	; 0x178
   1060e:	9b4a      	ldr	r3, [sp, #296]	; 0x128
   10610:	935f      	str	r3, [sp, #380]	; 0x17c
   10612:	f8dd c124 	ldr.w	ip, [sp, #292]	; 0x124
   10616:	f8cd c180 	str.w	ip, [sp, #384]	; 0x180
   1061a:	f8dd e120 	ldr.w	lr, [sp, #288]	; 0x120
   1061e:	f8cd e184 	str.w	lr, [sp, #388]	; 0x184
   10622:	466c      	mov	r4, sp
   10624:	2503      	movs	r5, #3
   10626:	6025      	str	r5, [r4, #0]
   10628:	a856      	add	r0, sp, #344	; 0x158
   1062a:	ab5c      	add	r3, sp, #368	; 0x170
   1062c:	994e      	ldr	r1, [sp, #312]	; 0x138
   1062e:	462a      	mov	r2, r5
   10630:	f7fb fb6e 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
   10634:	e7ff      	b.n	10636 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x122>
   10636:	f64d 4078 	movw	r0, #56440	; 0xdc78
   1063a:	f2c0 0001 	movt	r0, #1
   1063e:	f004 faa9 	bl	14b94 <_ZN4core5panic8Location6caller17h63e50e3e41b8f68eE>
   10642:	9047      	str	r0, [sp, #284]	; 0x11c
   10644:	e7ff      	b.n	10646 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x132>
   10646:	a856      	add	r0, sp, #344	; 0x158
   10648:	9947      	ldr	r1, [sp, #284]	; 0x11c
   1064a:	f004 fae0 	bl	14c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>
   1064e:	defe      	udf	#254	; 0xfe
    let rc = unsafe { hal::hal_spi_set_txrx_cb(
        SPI_NUM, 
        Some(spi_noblock_handler), 
   10650:	f641 202d 	movw	r0, #6701	; 0x1a2d
   10654:	f2c0 0001 	movt	r0, #1
   10658:	9072      	str	r0, [sp, #456]	; 0x1c8
        arg
   1065a:	9a70      	ldr	r2, [sp, #448]	; 0x1c0
    let rc = unsafe { hal::hal_spi_set_txrx_cb(
   1065c:	9972      	ldr	r1, [sp, #456]	; 0x1c8
   1065e:	2000      	movs	r0, #0
   10660:	f006 fe74 	bl	1734c <hal_spi_set_txrx_cb>
   10664:	9071      	str	r0, [sp, #452]	; 0x1c4
   10666:	e7ff      	b.n	10668 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x154>
    ) };
    assert_eq!(rc, 0, "spi cb fail");  //  TODO: Map to MynewtResult
   10668:	f64d 30e4 	movw	r0, #56292	; 0xdbe4
   1066c:	f2c0 0001 	movt	r0, #1
   10670:	6800      	ldr	r0, [r0, #0]
   10672:	a971      	add	r1, sp, #452	; 0x1c4
   10674:	9173      	str	r1, [sp, #460]	; 0x1cc
   10676:	9074      	str	r0, [sp, #464]	; 0x1d0
   10678:	9873      	ldr	r0, [sp, #460]	; 0x1cc
   1067a:	9075      	str	r0, [sp, #468]	; 0x1d4
   1067c:	9874      	ldr	r0, [sp, #464]	; 0x1d0
   1067e:	9076      	str	r0, [sp, #472]	; 0x1d8
   10680:	9875      	ldr	r0, [sp, #468]	; 0x1d4
   10682:	6800      	ldr	r0, [r0, #0]
   10684:	9976      	ldr	r1, [sp, #472]	; 0x1d8
   10686:	6809      	ldr	r1, [r1, #0]
   10688:	4288      	cmp	r0, r1
   1068a:	d105      	bne.n	10698 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x184>
   1068c:	e7ff      	b.n	1068e <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x17a>
   1068e:	2000      	movs	r0, #0

    //  Enable SPI port and set SS to high to disable SPI device
    let rc = unsafe { hal::hal_spi_enable(SPI_NUM) }; assert_eq!(rc, 0, "spi enable fail");  //  TODO: Map to MynewtResult
   10690:	f006 fdd2 	bl	17238 <hal_spi_enable>
   10694:	9091      	str	r0, [sp, #580]	; 0x244
   10696:	e074      	b.n	10782 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x26e>
    assert_eq!(rc, 0, "spi cb fail");  //  TODO: Map to MynewtResult
   10698:	f64d 403c 	movw	r0, #56380	; 0xdc3c
   1069c:	f2c0 0001 	movt	r0, #1
   106a0:	6801      	ldr	r1, [r0, #0]
   106a2:	9875      	ldr	r0, [sp, #468]	; 0x1d4
   106a4:	9086      	str	r0, [sp, #536]	; 0x218
   106a6:	9876      	ldr	r0, [sp, #472]	; 0x1d8
   106a8:	9087      	str	r0, [sp, #540]	; 0x21c
   106aa:	f64d 409c 	movw	r0, #56476	; 0xdc9c
   106ae:	f2c0 0001 	movt	r0, #1
   106b2:	6800      	ldr	r0, [r0, #0]
   106b4:	f64d 425c 	movw	r2, #56412	; 0xdc5c
   106b8:	f2c0 0201 	movt	r2, #1
   106bc:	6813      	ldr	r3, [r2, #0]
   106be:	466a      	mov	r2, sp
   106c0:	f04f 0c00 	mov.w	ip, #0
   106c4:	f8c2 c000 	str.w	ip, [r2]
   106c8:	aa88      	add	r2, sp, #544	; 0x220
   106ca:	f04f 0c01 	mov.w	ip, #1
   106ce:	9046      	str	r0, [sp, #280]	; 0x118
   106d0:	4610      	mov	r0, r2
   106d2:	9a46      	ldr	r2, [sp, #280]	; 0x118
   106d4:	9145      	str	r1, [sp, #276]	; 0x114
   106d6:	4611      	mov	r1, r2
   106d8:	4662      	mov	r2, ip
   106da:	f7fb fb19 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
   106de:	e7ff      	b.n	106e0 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x1cc>
   106e0:	a886      	add	r0, sp, #536	; 0x218
   106e2:	9083      	str	r0, [sp, #524]	; 0x20c
   106e4:	a887      	add	r0, sp, #540	; 0x21c
   106e6:	9084      	str	r0, [sp, #528]	; 0x210
   106e8:	a888      	add	r0, sp, #544	; 0x220
   106ea:	9085      	str	r0, [sp, #532]	; 0x214
   106ec:	9883      	ldr	r0, [sp, #524]	; 0x20c
   106ee:	908e      	str	r0, [sp, #568]	; 0x238
   106f0:	9884      	ldr	r0, [sp, #528]	; 0x210
   106f2:	908f      	str	r0, [sp, #572]	; 0x23c
   106f4:	9885      	ldr	r0, [sp, #532]	; 0x214
   106f6:	9090      	str	r0, [sp, #576]	; 0x240
   106f8:	988e      	ldr	r0, [sp, #568]	; 0x238
   106fa:	f64b 5189 	movw	r1, #48521	; 0xbd89
   106fe:	f2c0 0100 	movt	r1, #0
   10702:	f7fb fb61 	bl	bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>
   10706:	9044      	str	r0, [sp, #272]	; 0x110
   10708:	9143      	str	r1, [sp, #268]	; 0x10c
   1070a:	e7ff      	b.n	1070c <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x1f8>
   1070c:	988f      	ldr	r0, [sp, #572]	; 0x23c
   1070e:	f64b 5189 	movw	r1, #48521	; 0xbd89
   10712:	f2c0 0100 	movt	r1, #0
   10716:	f7fb fb57 	bl	bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>
   1071a:	9042      	str	r0, [sp, #264]	; 0x108
   1071c:	9141      	str	r1, [sp, #260]	; 0x104
   1071e:	e7ff      	b.n	10720 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x20c>
   10720:	9890      	ldr	r0, [sp, #576]	; 0x240
   10722:	f644 71c9 	movw	r1, #20425	; 0x4fc9
   10726:	f2c0 0101 	movt	r1, #1
   1072a:	f7fb fb8c 	bl	be46 <_ZN4core3fmt10ArgumentV13new17hd6e40bd932949712E>
   1072e:	9040      	str	r0, [sp, #256]	; 0x100
   10730:	913f      	str	r1, [sp, #252]	; 0xfc
   10732:	e7ff      	b.n	10734 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x220>
   10734:	9844      	ldr	r0, [sp, #272]	; 0x110
   10736:	907d      	str	r0, [sp, #500]	; 0x1f4
   10738:	9943      	ldr	r1, [sp, #268]	; 0x10c
   1073a:	917e      	str	r1, [sp, #504]	; 0x1f8
   1073c:	9a42      	ldr	r2, [sp, #264]	; 0x108
   1073e:	927f      	str	r2, [sp, #508]	; 0x1fc
   10740:	9b41      	ldr	r3, [sp, #260]	; 0x104
   10742:	9380      	str	r3, [sp, #512]	; 0x200
   10744:	f8dd c100 	ldr.w	ip, [sp, #256]	; 0x100
   10748:	f8cd c204 	str.w	ip, [sp, #516]	; 0x204
   1074c:	f8dd e0fc 	ldr.w	lr, [sp, #252]	; 0xfc
   10750:	f8cd e208 	str.w	lr, [sp, #520]	; 0x208
   10754:	466c      	mov	r4, sp
   10756:	2503      	movs	r5, #3
   10758:	6025      	str	r5, [r4, #0]
   1075a:	a877      	add	r0, sp, #476	; 0x1dc
   1075c:	ab7d      	add	r3, sp, #500	; 0x1f4
   1075e:	9945      	ldr	r1, [sp, #276]	; 0x114
   10760:	462a      	mov	r2, r5
   10762:	f7fb fad5 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
   10766:	e7ff      	b.n	10768 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x254>
   10768:	f64d 40a0 	movw	r0, #56480	; 0xdca0
   1076c:	f2c0 0001 	movt	r0, #1
   10770:	f004 fa10 	bl	14b94 <_ZN4core5panic8Location6caller17h63e50e3e41b8f68eE>
   10774:	903e      	str	r0, [sp, #248]	; 0xf8
   10776:	e7ff      	b.n	10778 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x264>
   10778:	a877      	add	r0, sp, #476	; 0x1dc
   1077a:	993e      	ldr	r1, [sp, #248]	; 0xf8
   1077c:	f004 fa47 	bl	14c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>
   10780:	defe      	udf	#254	; 0xfe
    let rc = unsafe { hal::hal_spi_enable(SPI_NUM) }; assert_eq!(rc, 0, "spi enable fail");  //  TODO: Map to MynewtResult
   10782:	f64d 30e4 	movw	r0, #56292	; 0xdbe4
   10786:	f2c0 0001 	movt	r0, #1
   1078a:	6800      	ldr	r0, [r0, #0]
   1078c:	a991      	add	r1, sp, #580	; 0x244
   1078e:	9192      	str	r1, [sp, #584]	; 0x248
   10790:	9093      	str	r0, [sp, #588]	; 0x24c
   10792:	9892      	ldr	r0, [sp, #584]	; 0x248
   10794:	9094      	str	r0, [sp, #592]	; 0x250
   10796:	9893      	ldr	r0, [sp, #588]	; 0x24c
   10798:	9095      	str	r0, [sp, #596]	; 0x254
   1079a:	9894      	ldr	r0, [sp, #592]	; 0x250
   1079c:	6800      	ldr	r0, [r0, #0]
   1079e:	9995      	ldr	r1, [sp, #596]	; 0x254
   107a0:	6809      	ldr	r1, [r1, #0]
   107a2:	4288      	cmp	r0, r1
   107a4:	d106      	bne.n	107b4 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x2a0>
   107a6:	e7ff      	b.n	107a8 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x294>
   107a8:	2019      	movs	r0, #25
   107aa:	2101      	movs	r1, #1
    let rc = unsafe { hal::hal_gpio_init_out(SPI_SS_PIN, 1) }; assert_eq!(rc, 0, "gpio fail");  //  TODO: Map to MynewtResult
   107ac:	f006 f91a 	bl	169e4 <hal_gpio_init_out>
   107b0:	90b0      	str	r0, [sp, #704]	; 0x2c0
   107b2:	e074      	b.n	1089e <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x38a>
    let rc = unsafe { hal::hal_spi_enable(SPI_NUM) }; assert_eq!(rc, 0, "spi enable fail");  //  TODO: Map to MynewtResult
   107b4:	f64d 403c 	movw	r0, #56380	; 0xdc3c
   107b8:	f2c0 0001 	movt	r0, #1
   107bc:	6801      	ldr	r1, [r0, #0]
   107be:	9894      	ldr	r0, [sp, #592]	; 0x250
   107c0:	90a5      	str	r0, [sp, #660]	; 0x294
   107c2:	9895      	ldr	r0, [sp, #596]	; 0x254
   107c4:	90a6      	str	r0, [sp, #664]	; 0x298
   107c6:	f64d 40c8 	movw	r0, #56520	; 0xdcc8
   107ca:	f2c0 0001 	movt	r0, #1
   107ce:	6800      	ldr	r0, [r0, #0]
   107d0:	f64d 425c 	movw	r2, #56412	; 0xdc5c
   107d4:	f2c0 0201 	movt	r2, #1
   107d8:	6813      	ldr	r3, [r2, #0]
   107da:	466a      	mov	r2, sp
   107dc:	f04f 0c00 	mov.w	ip, #0
   107e0:	f8c2 c000 	str.w	ip, [r2]
   107e4:	aaa7      	add	r2, sp, #668	; 0x29c
   107e6:	f04f 0c01 	mov.w	ip, #1
   107ea:	903d      	str	r0, [sp, #244]	; 0xf4
   107ec:	4610      	mov	r0, r2
   107ee:	9a3d      	ldr	r2, [sp, #244]	; 0xf4
   107f0:	913c      	str	r1, [sp, #240]	; 0xf0
   107f2:	4611      	mov	r1, r2
   107f4:	4662      	mov	r2, ip
   107f6:	f7fb fa8b 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
   107fa:	e7ff      	b.n	107fc <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x2e8>
   107fc:	a8a5      	add	r0, sp, #660	; 0x294
   107fe:	90a2      	str	r0, [sp, #648]	; 0x288
   10800:	a8a6      	add	r0, sp, #664	; 0x298
   10802:	90a3      	str	r0, [sp, #652]	; 0x28c
   10804:	a8a7      	add	r0, sp, #668	; 0x29c
   10806:	90a4      	str	r0, [sp, #656]	; 0x290
   10808:	98a2      	ldr	r0, [sp, #648]	; 0x288
   1080a:	90ad      	str	r0, [sp, #692]	; 0x2b4
   1080c:	98a3      	ldr	r0, [sp, #652]	; 0x28c
   1080e:	90ae      	str	r0, [sp, #696]	; 0x2b8
   10810:	98a4      	ldr	r0, [sp, #656]	; 0x290
   10812:	90af      	str	r0, [sp, #700]	; 0x2bc
   10814:	98ad      	ldr	r0, [sp, #692]	; 0x2b4
   10816:	f64b 5189 	movw	r1, #48521	; 0xbd89
   1081a:	f2c0 0100 	movt	r1, #0
   1081e:	f7fb fad3 	bl	bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>
   10822:	903b      	str	r0, [sp, #236]	; 0xec
   10824:	913a      	str	r1, [sp, #232]	; 0xe8
   10826:	e7ff      	b.n	10828 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x314>
   10828:	98ae      	ldr	r0, [sp, #696]	; 0x2b8
   1082a:	f64b 5189 	movw	r1, #48521	; 0xbd89
   1082e:	f2c0 0100 	movt	r1, #0
   10832:	f7fb fac9 	bl	bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>
   10836:	9039      	str	r0, [sp, #228]	; 0xe4
   10838:	9138      	str	r1, [sp, #224]	; 0xe0
   1083a:	e7ff      	b.n	1083c <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x328>
   1083c:	98af      	ldr	r0, [sp, #700]	; 0x2bc
   1083e:	f644 71c9 	movw	r1, #20425	; 0x4fc9
   10842:	f2c0 0101 	movt	r1, #1
   10846:	f7fb fafe 	bl	be46 <_ZN4core3fmt10ArgumentV13new17hd6e40bd932949712E>
   1084a:	9037      	str	r0, [sp, #220]	; 0xdc
   1084c:	9136      	str	r1, [sp, #216]	; 0xd8
   1084e:	e7ff      	b.n	10850 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x33c>
   10850:	983b      	ldr	r0, [sp, #236]	; 0xec
   10852:	909c      	str	r0, [sp, #624]	; 0x270
   10854:	993a      	ldr	r1, [sp, #232]	; 0xe8
   10856:	919d      	str	r1, [sp, #628]	; 0x274
   10858:	9a39      	ldr	r2, [sp, #228]	; 0xe4
   1085a:	929e      	str	r2, [sp, #632]	; 0x278
   1085c:	9b38      	ldr	r3, [sp, #224]	; 0xe0
   1085e:	939f      	str	r3, [sp, #636]	; 0x27c
   10860:	f8dd c0dc 	ldr.w	ip, [sp, #220]	; 0xdc
   10864:	f8cd c280 	str.w	ip, [sp, #640]	; 0x280
   10868:	f8dd e0d8 	ldr.w	lr, [sp, #216]	; 0xd8
   1086c:	f8cd e284 	str.w	lr, [sp, #644]	; 0x284
   10870:	466c      	mov	r4, sp
   10872:	2503      	movs	r5, #3
   10874:	6025      	str	r5, [r4, #0]
   10876:	a896      	add	r0, sp, #600	; 0x258
   10878:	ab9c      	add	r3, sp, #624	; 0x270
   1087a:	993c      	ldr	r1, [sp, #240]	; 0xf0
   1087c:	462a      	mov	r2, r5
   1087e:	f7fb fa47 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
   10882:	e7ff      	b.n	10884 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x370>
   10884:	f64d 40cc 	movw	r0, #56524	; 0xdccc
   10888:	f2c0 0001 	movt	r0, #1
   1088c:	f004 f982 	bl	14b94 <_ZN4core5panic8Location6caller17h63e50e3e41b8f68eE>
   10890:	9035      	str	r0, [sp, #212]	; 0xd4
   10892:	e7ff      	b.n	10894 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x380>
   10894:	a896      	add	r0, sp, #600	; 0x258
   10896:	9935      	ldr	r1, [sp, #212]	; 0xd4
   10898:	f004 f9b9 	bl	14c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>
   1089c:	defe      	udf	#254	; 0xfe
    let rc = unsafe { hal::hal_gpio_init_out(SPI_SS_PIN, 1) }; assert_eq!(rc, 0, "gpio fail");  //  TODO: Map to MynewtResult
   1089e:	f64d 30e4 	movw	r0, #56292	; 0xdbe4
   108a2:	f2c0 0001 	movt	r0, #1
   108a6:	6800      	ldr	r0, [r0, #0]
   108a8:	a9b0      	add	r1, sp, #704	; 0x2c0
   108aa:	91b1      	str	r1, [sp, #708]	; 0x2c4
   108ac:	90b2      	str	r0, [sp, #712]	; 0x2c8
   108ae:	98b1      	ldr	r0, [sp, #708]	; 0x2c4
   108b0:	90b3      	str	r0, [sp, #716]	; 0x2cc
   108b2:	98b2      	ldr	r0, [sp, #712]	; 0x2c8
   108b4:	90b4      	str	r0, [sp, #720]	; 0x2d0
   108b6:	98b3      	ldr	r0, [sp, #716]	; 0x2cc
   108b8:	6800      	ldr	r0, [r0, #0]
   108ba:	99b4      	ldr	r1, [sp, #720]	; 0x2d0
   108bc:	6809      	ldr	r1, [r1, #0]
   108be:	4288      	cmp	r0, r1
   108c0:	d106      	bne.n	108d0 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x3bc>
   108c2:	e7ff      	b.n	108c4 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x3b0>
   108c4:	2012      	movs	r0, #18
   108c6:	2101      	movs	r1, #1
    let rc = unsafe { hal::hal_gpio_init_out(SPI_DC_PIN, 1) }; assert_eq!(rc, 0, "gpio fail");  //  TODO: Map to MynewtResult
   108c8:	f006 f88c 	bl	169e4 <hal_gpio_init_out>
   108cc:	90cf      	str	r0, [sp, #828]	; 0x33c
   108ce:	e074      	b.n	109ba <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x4a6>
    let rc = unsafe { hal::hal_gpio_init_out(SPI_SS_PIN, 1) }; assert_eq!(rc, 0, "gpio fail");  //  TODO: Map to MynewtResult
   108d0:	f64d 403c 	movw	r0, #56380	; 0xdc3c
   108d4:	f2c0 0001 	movt	r0, #1
   108d8:	6801      	ldr	r1, [r0, #0]
   108da:	98b3      	ldr	r0, [sp, #716]	; 0x2cc
   108dc:	90c4      	str	r0, [sp, #784]	; 0x310
   108de:	98b4      	ldr	r0, [sp, #720]	; 0x2d0
   108e0:	90c5      	str	r0, [sp, #788]	; 0x314
   108e2:	f64d 40f0 	movw	r0, #56560	; 0xdcf0
   108e6:	f2c0 0001 	movt	r0, #1
   108ea:	6800      	ldr	r0, [r0, #0]
   108ec:	f64d 425c 	movw	r2, #56412	; 0xdc5c
   108f0:	f2c0 0201 	movt	r2, #1
   108f4:	6813      	ldr	r3, [r2, #0]
   108f6:	466a      	mov	r2, sp
   108f8:	f04f 0c00 	mov.w	ip, #0
   108fc:	f8c2 c000 	str.w	ip, [r2]
   10900:	aac6      	add	r2, sp, #792	; 0x318
   10902:	f04f 0c01 	mov.w	ip, #1
   10906:	9034      	str	r0, [sp, #208]	; 0xd0
   10908:	4610      	mov	r0, r2
   1090a:	9a34      	ldr	r2, [sp, #208]	; 0xd0
   1090c:	9133      	str	r1, [sp, #204]	; 0xcc
   1090e:	4611      	mov	r1, r2
   10910:	4662      	mov	r2, ip
   10912:	f7fb f9fd 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
   10916:	e7ff      	b.n	10918 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x404>
   10918:	a8c4      	add	r0, sp, #784	; 0x310
   1091a:	90c1      	str	r0, [sp, #772]	; 0x304
   1091c:	a8c5      	add	r0, sp, #788	; 0x314
   1091e:	90c2      	str	r0, [sp, #776]	; 0x308
   10920:	a8c6      	add	r0, sp, #792	; 0x318
   10922:	90c3      	str	r0, [sp, #780]	; 0x30c
   10924:	98c1      	ldr	r0, [sp, #772]	; 0x304
   10926:	90cc      	str	r0, [sp, #816]	; 0x330
   10928:	98c2      	ldr	r0, [sp, #776]	; 0x308
   1092a:	90cd      	str	r0, [sp, #820]	; 0x334
   1092c:	98c3      	ldr	r0, [sp, #780]	; 0x30c
   1092e:	90ce      	str	r0, [sp, #824]	; 0x338
   10930:	98cc      	ldr	r0, [sp, #816]	; 0x330
   10932:	f64b 5189 	movw	r1, #48521	; 0xbd89
   10936:	f2c0 0100 	movt	r1, #0
   1093a:	f7fb fa45 	bl	bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>
   1093e:	9032      	str	r0, [sp, #200]	; 0xc8
   10940:	9131      	str	r1, [sp, #196]	; 0xc4
   10942:	e7ff      	b.n	10944 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x430>
   10944:	98cd      	ldr	r0, [sp, #820]	; 0x334
   10946:	f64b 5189 	movw	r1, #48521	; 0xbd89
   1094a:	f2c0 0100 	movt	r1, #0
   1094e:	f7fb fa3b 	bl	bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>
   10952:	9030      	str	r0, [sp, #192]	; 0xc0
   10954:	912f      	str	r1, [sp, #188]	; 0xbc
   10956:	e7ff      	b.n	10958 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x444>
   10958:	98ce      	ldr	r0, [sp, #824]	; 0x338
   1095a:	f644 71c9 	movw	r1, #20425	; 0x4fc9
   1095e:	f2c0 0101 	movt	r1, #1
   10962:	f7fb fa70 	bl	be46 <_ZN4core3fmt10ArgumentV13new17hd6e40bd932949712E>
   10966:	902e      	str	r0, [sp, #184]	; 0xb8
   10968:	912d      	str	r1, [sp, #180]	; 0xb4
   1096a:	e7ff      	b.n	1096c <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x458>
   1096c:	9832      	ldr	r0, [sp, #200]	; 0xc8
   1096e:	90bb      	str	r0, [sp, #748]	; 0x2ec
   10970:	9931      	ldr	r1, [sp, #196]	; 0xc4
   10972:	91bc      	str	r1, [sp, #752]	; 0x2f0
   10974:	9a30      	ldr	r2, [sp, #192]	; 0xc0
   10976:	92bd      	str	r2, [sp, #756]	; 0x2f4
   10978:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
   1097a:	93be      	str	r3, [sp, #760]	; 0x2f8
   1097c:	f8dd c0b8 	ldr.w	ip, [sp, #184]	; 0xb8
   10980:	f8cd c2fc 	str.w	ip, [sp, #764]	; 0x2fc
   10984:	f8dd e0b4 	ldr.w	lr, [sp, #180]	; 0xb4
   10988:	f8cd e300 	str.w	lr, [sp, #768]	; 0x300
   1098c:	466c      	mov	r4, sp
   1098e:	2503      	movs	r5, #3
   10990:	6025      	str	r5, [r4, #0]
   10992:	a8b5      	add	r0, sp, #724	; 0x2d4
   10994:	abbb      	add	r3, sp, #748	; 0x2ec
   10996:	9933      	ldr	r1, [sp, #204]	; 0xcc
   10998:	462a      	mov	r2, r5
   1099a:	f7fb f9b9 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
   1099e:	e7ff      	b.n	109a0 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x48c>
   109a0:	f64d 40f4 	movw	r0, #56564	; 0xdcf4
   109a4:	f2c0 0001 	movt	r0, #1
   109a8:	f004 f8f4 	bl	14b94 <_ZN4core5panic8Location6caller17h63e50e3e41b8f68eE>
   109ac:	902c      	str	r0, [sp, #176]	; 0xb0
   109ae:	e7ff      	b.n	109b0 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x49c>
   109b0:	a8b5      	add	r0, sp, #724	; 0x2d4
   109b2:	992c      	ldr	r1, [sp, #176]	; 0xb0
   109b4:	f004 f92b 	bl	14c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>
   109b8:	defe      	udf	#254	; 0xfe
    let rc = unsafe { hal::hal_gpio_init_out(SPI_DC_PIN, 1) }; assert_eq!(rc, 0, "gpio fail");  //  TODO: Map to MynewtResult
   109ba:	f64d 30e4 	movw	r0, #56292	; 0xdbe4
   109be:	f2c0 0001 	movt	r0, #1
   109c2:	6800      	ldr	r0, [r0, #0]
   109c4:	a9cf      	add	r1, sp, #828	; 0x33c
   109c6:	91d0      	str	r1, [sp, #832]	; 0x340
   109c8:	90d1      	str	r0, [sp, #836]	; 0x344
   109ca:	98d0      	ldr	r0, [sp, #832]	; 0x340
   109cc:	90d2      	str	r0, [sp, #840]	; 0x348
   109ce:	98d1      	ldr	r0, [sp, #836]	; 0x344
   109d0:	90d3      	str	r0, [sp, #844]	; 0x34c
   109d2:	98d2      	ldr	r0, [sp, #840]	; 0x348
   109d4:	6800      	ldr	r0, [r0, #0]
   109d6:	99d3      	ldr	r1, [sp, #844]	; 0x34c
   109d8:	6809      	ldr	r1, [r1, #0]
   109da:	4288      	cmp	r0, r1
   109dc:	d107      	bne.n	109ee <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x4da>
   109de:	e7ff      	b.n	109e0 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x4cc>

    //  Create Event Queue and Mbuf (Data) Queue that will store the SPI requests
    unsafe { os::os_eventq_init(&mut SPI_EVENT_QUEUE) };
   109e0:	f640 2044 	movw	r0, #2628	; 0xa44
   109e4:	f2c2 0000 	movt	r0, #8192	; 0x2000
   109e8:	f007 f906 	bl	17bf8 <os_eventq_init>
   109ec:	e074      	b.n	10ad8 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x5c4>
    let rc = unsafe { hal::hal_gpio_init_out(SPI_DC_PIN, 1) }; assert_eq!(rc, 0, "gpio fail");  //  TODO: Map to MynewtResult
   109ee:	f64d 403c 	movw	r0, #56380	; 0xdc3c
   109f2:	f2c0 0001 	movt	r0, #1
   109f6:	6801      	ldr	r1, [r0, #0]
   109f8:	98d2      	ldr	r0, [sp, #840]	; 0x348
   109fa:	90e3      	str	r0, [sp, #908]	; 0x38c
   109fc:	98d3      	ldr	r0, [sp, #844]	; 0x34c
   109fe:	90e4      	str	r0, [sp, #912]	; 0x390
   10a00:	f64d 40f0 	movw	r0, #56560	; 0xdcf0
   10a04:	f2c0 0001 	movt	r0, #1
   10a08:	6800      	ldr	r0, [r0, #0]
   10a0a:	f64d 425c 	movw	r2, #56412	; 0xdc5c
   10a0e:	f2c0 0201 	movt	r2, #1
   10a12:	6813      	ldr	r3, [r2, #0]
   10a14:	466a      	mov	r2, sp
   10a16:	f04f 0c00 	mov.w	ip, #0
   10a1a:	f8c2 c000 	str.w	ip, [r2]
   10a1e:	aae5      	add	r2, sp, #916	; 0x394
   10a20:	f04f 0c01 	mov.w	ip, #1
   10a24:	902b      	str	r0, [sp, #172]	; 0xac
   10a26:	4610      	mov	r0, r2
   10a28:	9a2b      	ldr	r2, [sp, #172]	; 0xac
   10a2a:	912a      	str	r1, [sp, #168]	; 0xa8
   10a2c:	4611      	mov	r1, r2
   10a2e:	4662      	mov	r2, ip
   10a30:	f7fb f96e 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
   10a34:	e7ff      	b.n	10a36 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x522>
   10a36:	a8e3      	add	r0, sp, #908	; 0x38c
   10a38:	90e0      	str	r0, [sp, #896]	; 0x380
   10a3a:	a8e4      	add	r0, sp, #912	; 0x390
   10a3c:	90e1      	str	r0, [sp, #900]	; 0x384
   10a3e:	a8e5      	add	r0, sp, #916	; 0x394
   10a40:	90e2      	str	r0, [sp, #904]	; 0x388
   10a42:	98e0      	ldr	r0, [sp, #896]	; 0x380
   10a44:	90eb      	str	r0, [sp, #940]	; 0x3ac
   10a46:	98e1      	ldr	r0, [sp, #900]	; 0x384
   10a48:	90ec      	str	r0, [sp, #944]	; 0x3b0
   10a4a:	98e2      	ldr	r0, [sp, #904]	; 0x388
   10a4c:	90ed      	str	r0, [sp, #948]	; 0x3b4
   10a4e:	98eb      	ldr	r0, [sp, #940]	; 0x3ac
   10a50:	f64b 5189 	movw	r1, #48521	; 0xbd89
   10a54:	f2c0 0100 	movt	r1, #0
   10a58:	f7fb f9b6 	bl	bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>
   10a5c:	9029      	str	r0, [sp, #164]	; 0xa4
   10a5e:	9128      	str	r1, [sp, #160]	; 0xa0
   10a60:	e7ff      	b.n	10a62 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x54e>
   10a62:	98ec      	ldr	r0, [sp, #944]	; 0x3b0
   10a64:	f64b 5189 	movw	r1, #48521	; 0xbd89
   10a68:	f2c0 0100 	movt	r1, #0
   10a6c:	f7fb f9ac 	bl	bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>
   10a70:	9027      	str	r0, [sp, #156]	; 0x9c
   10a72:	9126      	str	r1, [sp, #152]	; 0x98
   10a74:	e7ff      	b.n	10a76 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x562>
   10a76:	98ed      	ldr	r0, [sp, #948]	; 0x3b4
   10a78:	f644 71c9 	movw	r1, #20425	; 0x4fc9
   10a7c:	f2c0 0101 	movt	r1, #1
   10a80:	f7fb f9e1 	bl	be46 <_ZN4core3fmt10ArgumentV13new17hd6e40bd932949712E>
   10a84:	9025      	str	r0, [sp, #148]	; 0x94
   10a86:	9124      	str	r1, [sp, #144]	; 0x90
   10a88:	e7ff      	b.n	10a8a <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x576>
   10a8a:	9829      	ldr	r0, [sp, #164]	; 0xa4
   10a8c:	90da      	str	r0, [sp, #872]	; 0x368
   10a8e:	9928      	ldr	r1, [sp, #160]	; 0xa0
   10a90:	91db      	str	r1, [sp, #876]	; 0x36c
   10a92:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   10a94:	92dc      	str	r2, [sp, #880]	; 0x370
   10a96:	9b26      	ldr	r3, [sp, #152]	; 0x98
   10a98:	93dd      	str	r3, [sp, #884]	; 0x374
   10a9a:	f8dd c094 	ldr.w	ip, [sp, #148]	; 0x94
   10a9e:	f8cd c378 	str.w	ip, [sp, #888]	; 0x378
   10aa2:	f8dd e090 	ldr.w	lr, [sp, #144]	; 0x90
   10aa6:	f8cd e37c 	str.w	lr, [sp, #892]	; 0x37c
   10aaa:	466c      	mov	r4, sp
   10aac:	2503      	movs	r5, #3
   10aae:	6025      	str	r5, [r4, #0]
   10ab0:	a8d4      	add	r0, sp, #848	; 0x350
   10ab2:	abda      	add	r3, sp, #872	; 0x368
   10ab4:	992a      	ldr	r1, [sp, #168]	; 0xa8
   10ab6:	462a      	mov	r2, r5
   10ab8:	f7fb f92a 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
   10abc:	e7ff      	b.n	10abe <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x5aa>
   10abe:	f64d 5004 	movw	r0, #56580	; 0xdd04
   10ac2:	f2c0 0001 	movt	r0, #1
   10ac6:	f004 f865 	bl	14b94 <_ZN4core5panic8Location6caller17h63e50e3e41b8f68eE>
   10aca:	9023      	str	r0, [sp, #140]	; 0x8c
   10acc:	e7ff      	b.n	10ace <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x5ba>
   10ace:	a8d4      	add	r0, sp, #848	; 0x350
   10ad0:	9923      	ldr	r1, [sp, #140]	; 0x8c
   10ad2:	f004 f89c 	bl	14c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>
   10ad6:	defe      	udf	#254	; 0xfe
    let rc = unsafe { os::os_mqueue_init(
        &mut SPI_DATA_QUEUE, 
        Some(spi_event_callback), 
   10ad8:	f241 4011 	movw	r0, #5137	; 0x1411
   10adc:	f2c0 0001 	movt	r0, #1
   10ae0:	90ef      	str	r0, [sp, #956]	; 0x3bc
    let rc = unsafe { os::os_mqueue_init(
   10ae2:	99ef      	ldr	r1, [sp, #956]	; 0x3bc
   10ae4:	f640 202c 	movw	r0, #2604	; 0xa2c
   10ae8:	f2c2 0000 	movt	r0, #8192	; 0x2000
   10aec:	2200      	movs	r2, #0
   10aee:	f007 f931 	bl	17d54 <os_mqueue_init>
   10af2:	90ee      	str	r0, [sp, #952]	; 0x3b8
   10af4:	e7ff      	b.n	10af6 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x5e2>
        NULL
    ) };
    assert_eq!(rc, 0, "mqueue fail");  //  TODO: Map to MynewtResult
   10af6:	f64d 30e4 	movw	r0, #56292	; 0xdbe4
   10afa:	f2c0 0001 	movt	r0, #1
   10afe:	6800      	ldr	r0, [r0, #0]
   10b00:	a9ee      	add	r1, sp, #952	; 0x3b8
   10b02:	91f0      	str	r1, [sp, #960]	; 0x3c0
   10b04:	90f1      	str	r0, [sp, #964]	; 0x3c4
   10b06:	98f0      	ldr	r0, [sp, #960]	; 0x3c0
   10b08:	90f2      	str	r0, [sp, #968]	; 0x3c8
   10b0a:	98f1      	ldr	r0, [sp, #964]	; 0x3c4
   10b0c:	90f3      	str	r0, [sp, #972]	; 0x3cc
   10b0e:	98f2      	ldr	r0, [sp, #968]	; 0x3c8
   10b10:	6800      	ldr	r0, [r0, #0]
   10b12:	99f3      	ldr	r1, [sp, #972]	; 0x3cc
   10b14:	6809      	ldr	r1, [r1, #0]
   10b16:	4288      	cmp	r0, r1
   10b18:	d10a      	bne.n	10b30 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x61c>
   10b1a:	e7ff      	b.n	10b1c <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x608>

    //  Create the Semaphore that will signal whether the SPI request has completed
    let rc = unsafe { os::os_sem_init(&mut SPI_SEM, 0) };  //  Init to 0 tokens, so caller will block until SPI request is completed.
   10b1c:	f640 201c 	movw	r0, #2588	; 0xa1c
   10b20:	f2c2 0000 	movt	r0, #8192	; 0x2000
   10b24:	2100      	movs	r1, #0
   10b26:	f007 fe0f 	bl	18748 <os_sem_init>
   10b2a:	f8cd 0438 	str.w	r0, [sp, #1080]	; 0x438
   10b2e:	e086      	b.n	10c3e <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x72a>
    assert_eq!(rc, 0, "mqueue fail");  //  TODO: Map to MynewtResult
   10b30:	f64d 403c 	movw	r0, #56380	; 0xdc3c
   10b34:	f2c0 0001 	movt	r0, #1
   10b38:	6801      	ldr	r1, [r0, #0]
   10b3a:	98f2      	ldr	r0, [sp, #968]	; 0x3c8
   10b3c:	f8cd 040c 	str.w	r0, [sp, #1036]	; 0x40c
   10b40:	98f3      	ldr	r0, [sp, #972]	; 0x3cc
   10b42:	f8cd 0410 	str.w	r0, [sp, #1040]	; 0x410
   10b46:	f64d 5028 	movw	r0, #56616	; 0xdd28
   10b4a:	f2c0 0001 	movt	r0, #1
   10b4e:	6800      	ldr	r0, [r0, #0]
   10b50:	f64d 425c 	movw	r2, #56412	; 0xdc5c
   10b54:	f2c0 0201 	movt	r2, #1
   10b58:	6813      	ldr	r3, [r2, #0]
   10b5a:	466a      	mov	r2, sp
   10b5c:	f04f 0c00 	mov.w	ip, #0
   10b60:	f8c2 c000 	str.w	ip, [r2]
   10b64:	f20d 4214 	addw	r2, sp, #1044	; 0x414
   10b68:	f04f 0c01 	mov.w	ip, #1
   10b6c:	9022      	str	r0, [sp, #136]	; 0x88
   10b6e:	4610      	mov	r0, r2
   10b70:	9a22      	ldr	r2, [sp, #136]	; 0x88
   10b72:	9121      	str	r1, [sp, #132]	; 0x84
   10b74:	4611      	mov	r1, r2
   10b76:	4662      	mov	r2, ip
   10b78:	f7fb f8ca 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
   10b7c:	e7ff      	b.n	10b7e <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x66a>
   10b7e:	f20d 400c 	addw	r0, sp, #1036	; 0x40c
   10b82:	f8cd 0400 	str.w	r0, [sp, #1024]	; 0x400
   10b86:	f50d 6082 	add.w	r0, sp, #1040	; 0x410
   10b8a:	f8cd 0404 	str.w	r0, [sp, #1028]	; 0x404
   10b8e:	f20d 4014 	addw	r0, sp, #1044	; 0x414
   10b92:	f8cd 0408 	str.w	r0, [sp, #1032]	; 0x408
   10b96:	f8dd 0400 	ldr.w	r0, [sp, #1024]	; 0x400
   10b9a:	f8cd 042c 	str.w	r0, [sp, #1068]	; 0x42c
   10b9e:	f8dd 0404 	ldr.w	r0, [sp, #1028]	; 0x404
   10ba2:	f8cd 0430 	str.w	r0, [sp, #1072]	; 0x430
   10ba6:	f8dd 0408 	ldr.w	r0, [sp, #1032]	; 0x408
   10baa:	f8cd 0434 	str.w	r0, [sp, #1076]	; 0x434
   10bae:	f8dd 042c 	ldr.w	r0, [sp, #1068]	; 0x42c
   10bb2:	f64b 5189 	movw	r1, #48521	; 0xbd89
   10bb6:	f2c0 0100 	movt	r1, #0
   10bba:	f7fb f905 	bl	bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>
   10bbe:	9020      	str	r0, [sp, #128]	; 0x80
   10bc0:	911f      	str	r1, [sp, #124]	; 0x7c
   10bc2:	e7ff      	b.n	10bc4 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x6b0>
   10bc4:	f8dd 0430 	ldr.w	r0, [sp, #1072]	; 0x430
   10bc8:	f64b 5189 	movw	r1, #48521	; 0xbd89
   10bcc:	f2c0 0100 	movt	r1, #0
   10bd0:	f7fb f8fa 	bl	bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>
   10bd4:	901e      	str	r0, [sp, #120]	; 0x78
   10bd6:	911d      	str	r1, [sp, #116]	; 0x74
   10bd8:	e7ff      	b.n	10bda <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x6c6>
   10bda:	f8dd 0434 	ldr.w	r0, [sp, #1076]	; 0x434
   10bde:	f644 71c9 	movw	r1, #20425	; 0x4fc9
   10be2:	f2c0 0101 	movt	r1, #1
   10be6:	f7fb f92e 	bl	be46 <_ZN4core3fmt10ArgumentV13new17hd6e40bd932949712E>
   10bea:	901c      	str	r0, [sp, #112]	; 0x70
   10bec:	911b      	str	r1, [sp, #108]	; 0x6c
   10bee:	e7ff      	b.n	10bf0 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x6dc>
   10bf0:	9820      	ldr	r0, [sp, #128]	; 0x80
   10bf2:	90fa      	str	r0, [sp, #1000]	; 0x3e8
   10bf4:	991f      	ldr	r1, [sp, #124]	; 0x7c
   10bf6:	91fb      	str	r1, [sp, #1004]	; 0x3ec
   10bf8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
   10bfa:	92fc      	str	r2, [sp, #1008]	; 0x3f0
   10bfc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   10bfe:	93fd      	str	r3, [sp, #1012]	; 0x3f4
   10c00:	f8dd c070 	ldr.w	ip, [sp, #112]	; 0x70
   10c04:	f8cd c3f8 	str.w	ip, [sp, #1016]	; 0x3f8
   10c08:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
   10c0c:	f8cd e3fc 	str.w	lr, [sp, #1020]	; 0x3fc
   10c10:	466c      	mov	r4, sp
   10c12:	2503      	movs	r5, #3
   10c14:	6025      	str	r5, [r4, #0]
   10c16:	a8f4      	add	r0, sp, #976	; 0x3d0
   10c18:	abfa      	add	r3, sp, #1000	; 0x3e8
   10c1a:	9921      	ldr	r1, [sp, #132]	; 0x84
   10c1c:	462a      	mov	r2, r5
   10c1e:	f7fb f877 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
   10c22:	e7ff      	b.n	10c24 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x710>
   10c24:	f64d 502c 	movw	r0, #56620	; 0xdd2c
   10c28:	f2c0 0001 	movt	r0, #1
   10c2c:	f003 ffb2 	bl	14b94 <_ZN4core5panic8Location6caller17h63e50e3e41b8f68eE>
   10c30:	901a      	str	r0, [sp, #104]	; 0x68
   10c32:	e7ff      	b.n	10c34 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x720>
   10c34:	a8f4      	add	r0, sp, #976	; 0x3d0
   10c36:	991a      	ldr	r1, [sp, #104]	; 0x68
   10c38:	f003 ffe9 	bl	14c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>
   10c3c:	defe      	udf	#254	; 0xfe
    assert_eq!(rc, 0, "sem fail");  //  TODO: Map to MynewtResult
   10c3e:	f64d 30e4 	movw	r0, #56292	; 0xdbe4
   10c42:	f2c0 0001 	movt	r0, #1
   10c46:	6800      	ldr	r0, [r0, #0]
   10c48:	f50d 6187 	add.w	r1, sp, #1080	; 0x438
   10c4c:	f8cd 143c 	str.w	r1, [sp, #1084]	; 0x43c
   10c50:	f8cd 0440 	str.w	r0, [sp, #1088]	; 0x440
   10c54:	f8dd 043c 	ldr.w	r0, [sp, #1084]	; 0x43c
   10c58:	f8cd 0444 	str.w	r0, [sp, #1092]	; 0x444
   10c5c:	f8dd 0440 	ldr.w	r0, [sp, #1088]	; 0x440
   10c60:	f8cd 0448 	str.w	r0, [sp, #1096]	; 0x448
   10c64:	f8dd 0444 	ldr.w	r0, [sp, #1092]	; 0x444
   10c68:	6800      	ldr	r0, [r0, #0]
   10c6a:	f8dd 1448 	ldr.w	r1, [sp, #1096]	; 0x448
   10c6e:	6809      	ldr	r1, [r1, #0]
   10c70:	4288      	cmp	r0, r1
   10c72:	d10a      	bne.n	10c8a <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x776>
   10c74:	e7ff      	b.n	10c76 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x762>

    //  Create the Semaphore that will throttle the number of queued SPI requests
    let rc = unsafe { os::os_sem_init(&mut SPI_THROTTLE_SEM, 2) };  //  Only max 2 requests queued, the next request will block
   10c76:	f640 2024 	movw	r0, #2596	; 0xa24
   10c7a:	f2c2 0000 	movt	r0, #8192	; 0x2000
   10c7e:	2102      	movs	r1, #2
   10c80:	f007 fd62 	bl	18748 <os_sem_init>
   10c84:	f8cd 04b4 	str.w	r0, [sp, #1204]	; 0x4b4
   10c88:	e08f      	b.n	10daa <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x896>
    assert_eq!(rc, 0, "sem fail");  //  TODO: Map to MynewtResult
   10c8a:	f64d 403c 	movw	r0, #56380	; 0xdc3c
   10c8e:	f2c0 0001 	movt	r0, #1
   10c92:	6801      	ldr	r1, [r0, #0]
   10c94:	f8dd 0444 	ldr.w	r0, [sp, #1092]	; 0x444
   10c98:	f8cd 0488 	str.w	r0, [sp, #1160]	; 0x488
   10c9c:	f8dd 0448 	ldr.w	r0, [sp, #1096]	; 0x448
   10ca0:	f8cd 048c 	str.w	r0, [sp, #1164]	; 0x48c
   10ca4:	f64d 5054 	movw	r0, #56660	; 0xdd54
   10ca8:	f2c0 0001 	movt	r0, #1
   10cac:	6800      	ldr	r0, [r0, #0]
   10cae:	f64d 425c 	movw	r2, #56412	; 0xdc5c
   10cb2:	f2c0 0201 	movt	r2, #1
   10cb6:	6813      	ldr	r3, [r2, #0]
   10cb8:	466a      	mov	r2, sp
   10cba:	f04f 0c00 	mov.w	ip, #0
   10cbe:	f8c2 c000 	str.w	ip, [r2]
   10cc2:	f50d 6292 	add.w	r2, sp, #1168	; 0x490
   10cc6:	f04f 0c01 	mov.w	ip, #1
   10cca:	9019      	str	r0, [sp, #100]	; 0x64
   10ccc:	4610      	mov	r0, r2
   10cce:	9a19      	ldr	r2, [sp, #100]	; 0x64
   10cd0:	9118      	str	r1, [sp, #96]	; 0x60
   10cd2:	4611      	mov	r1, r2
   10cd4:	4662      	mov	r2, ip
   10cd6:	f7fb f81b 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
   10cda:	e7ff      	b.n	10cdc <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x7c8>
   10cdc:	f50d 6091 	add.w	r0, sp, #1160	; 0x488
   10ce0:	f8cd 047c 	str.w	r0, [sp, #1148]	; 0x47c
   10ce4:	f20d 408c 	addw	r0, sp, #1164	; 0x48c
   10ce8:	f8cd 0480 	str.w	r0, [sp, #1152]	; 0x480
   10cec:	f50d 6092 	add.w	r0, sp, #1168	; 0x490
   10cf0:	f8cd 0484 	str.w	r0, [sp, #1156]	; 0x484
   10cf4:	f8dd 047c 	ldr.w	r0, [sp, #1148]	; 0x47c
   10cf8:	f8cd 04a8 	str.w	r0, [sp, #1192]	; 0x4a8
   10cfc:	f8dd 0480 	ldr.w	r0, [sp, #1152]	; 0x480
   10d00:	f8cd 04ac 	str.w	r0, [sp, #1196]	; 0x4ac
   10d04:	f8dd 0484 	ldr.w	r0, [sp, #1156]	; 0x484
   10d08:	f8cd 04b0 	str.w	r0, [sp, #1200]	; 0x4b0
   10d0c:	f8dd 04a8 	ldr.w	r0, [sp, #1192]	; 0x4a8
   10d10:	f64b 5169 	movw	r1, #48489	; 0xbd69
   10d14:	f2c0 0100 	movt	r1, #0
   10d18:	f7fb f880 	bl	be1c <_ZN4core3fmt10ArgumentV13new17h93c5bc3c3358d946E>
   10d1c:	9017      	str	r0, [sp, #92]	; 0x5c
   10d1e:	9116      	str	r1, [sp, #88]	; 0x58
   10d20:	e7ff      	b.n	10d22 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x80e>
   10d22:	f8dd 04ac 	ldr.w	r0, [sp, #1196]	; 0x4ac
   10d26:	f64b 5169 	movw	r1, #48489	; 0xbd69
   10d2a:	f2c0 0100 	movt	r1, #0
   10d2e:	f7fb f875 	bl	be1c <_ZN4core3fmt10ArgumentV13new17h93c5bc3c3358d946E>
   10d32:	9015      	str	r0, [sp, #84]	; 0x54
   10d34:	9114      	str	r1, [sp, #80]	; 0x50
   10d36:	e7ff      	b.n	10d38 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x824>
   10d38:	f8dd 04b0 	ldr.w	r0, [sp, #1200]	; 0x4b0
   10d3c:	f644 71c9 	movw	r1, #20425	; 0x4fc9
   10d40:	f2c0 0101 	movt	r1, #1
   10d44:	f7fb f87f 	bl	be46 <_ZN4core3fmt10ArgumentV13new17hd6e40bd932949712E>
   10d48:	9013      	str	r0, [sp, #76]	; 0x4c
   10d4a:	9112      	str	r1, [sp, #72]	; 0x48
   10d4c:	e7ff      	b.n	10d4e <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x83a>
   10d4e:	9817      	ldr	r0, [sp, #92]	; 0x5c
   10d50:	f8cd 0464 	str.w	r0, [sp, #1124]	; 0x464
   10d54:	9916      	ldr	r1, [sp, #88]	; 0x58
   10d56:	f8cd 1468 	str.w	r1, [sp, #1128]	; 0x468
   10d5a:	9a15      	ldr	r2, [sp, #84]	; 0x54
   10d5c:	f8cd 246c 	str.w	r2, [sp, #1132]	; 0x46c
   10d60:	9b14      	ldr	r3, [sp, #80]	; 0x50
   10d62:	f8cd 3470 	str.w	r3, [sp, #1136]	; 0x470
   10d66:	f8dd c04c 	ldr.w	ip, [sp, #76]	; 0x4c
   10d6a:	f8cd c474 	str.w	ip, [sp, #1140]	; 0x474
   10d6e:	f8dd e048 	ldr.w	lr, [sp, #72]	; 0x48
   10d72:	f8cd e478 	str.w	lr, [sp, #1144]	; 0x478
   10d76:	466c      	mov	r4, sp
   10d78:	2503      	movs	r5, #3
   10d7a:	6025      	str	r5, [r4, #0]
   10d7c:	f20d 404c 	addw	r0, sp, #1100	; 0x44c
   10d80:	f20d 4364 	addw	r3, sp, #1124	; 0x464
   10d84:	9918      	ldr	r1, [sp, #96]	; 0x60
   10d86:	462a      	mov	r2, r5
   10d88:	f7fa ffc2 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
   10d8c:	e7ff      	b.n	10d8e <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x87a>
   10d8e:	f64d 5058 	movw	r0, #56664	; 0xdd58
   10d92:	f2c0 0001 	movt	r0, #1
   10d96:	f003 fefd 	bl	14b94 <_ZN4core5panic8Location6caller17h63e50e3e41b8f68eE>
   10d9a:	9011      	str	r0, [sp, #68]	; 0x44
   10d9c:	e7ff      	b.n	10d9e <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x88a>
   10d9e:	f20d 404c 	addw	r0, sp, #1100	; 0x44c
   10da2:	9911      	ldr	r1, [sp, #68]	; 0x44
   10da4:	f003 ff33 	bl	14c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>
   10da8:	defe      	udf	#254	; 0xfe
    assert_eq!(rc, 0, "sem fail");  //  TODO: Map to MynewtResult
   10daa:	f64d 30e4 	movw	r0, #56292	; 0xdbe4
   10dae:	f2c0 0001 	movt	r0, #1
   10db2:	6800      	ldr	r0, [r0, #0]
   10db4:	f20d 41b4 	addw	r1, sp, #1204	; 0x4b4
   10db8:	f8cd 14b8 	str.w	r1, [sp, #1208]	; 0x4b8
   10dbc:	f8cd 04bc 	str.w	r0, [sp, #1212]	; 0x4bc
   10dc0:	f8dd 04b8 	ldr.w	r0, [sp, #1208]	; 0x4b8
   10dc4:	f8cd 04c0 	str.w	r0, [sp, #1216]	; 0x4c0
   10dc8:	f8dd 04bc 	ldr.w	r0, [sp, #1212]	; 0x4bc
   10dcc:	f8cd 04c4 	str.w	r0, [sp, #1220]	; 0x4c4
   10dd0:	f8dd 04c0 	ldr.w	r0, [sp, #1216]	; 0x4c0
   10dd4:	6800      	ldr	r0, [r0, #0]
   10dd6:	f8dd 14c4 	ldr.w	r1, [sp, #1220]	; 0x4c4
   10dda:	6809      	ldr	r1, [r1, #0]
   10ddc:	4288      	cmp	r0, r1
   10dde:	d125      	bne.n	10e2c <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x918>
   10de0:	e7ff      	b.n	10de2 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x8ce>
    
    //  Create a task to send SPI requests sequentially from the SPI Event Queue and Mbuf Queue
    os::task_init(                //  Create a new task and start it...
        unsafe { &mut SPI_TASK }, //  Task object will be saved here
        &init_strn!( "spi" ),     //  Name of task
   10de2:	f64d 5084 	movw	r0, #56708	; 0xdd84
   10de6:	f2c0 0001 	movt	r0, #1
   10dea:	6801      	ldr	r1, [r0, #0]
        Some( spi_task_func ),    //  Function to execute when task starts
   10dec:	f640 709f 	movw	r0, #3999	; 0xf9f
   10df0:	f2c0 0001 	movt	r0, #1
   10df4:	f8cd 0534 	str.w	r0, [sp, #1332]	; 0x534
    os::task_init(                //  Create a new task and start it...
   10df8:	f8dd 2534 	ldr.w	r2, [sp, #1332]	; 0x534
   10dfc:	4668      	mov	r0, sp
   10dfe:	f44f 7380 	mov.w	r3, #256	; 0x100
   10e02:	6103      	str	r3, [r0, #16]
   10e04:	60c3      	str	r3, [r0, #12]
   10e06:	f640 23a4 	movw	r3, #2724	; 0xaa4
   10e0a:	f2c2 0300 	movt	r3, #8192	; 0x2000
   10e0e:	6083      	str	r3, [r0, #8]
   10e10:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   10e14:	6043      	str	r3, [r0, #4]
   10e16:	230a      	movs	r3, #10
   10e18:	6003      	str	r3, [r0, #0]
   10e1a:	f640 2054 	movw	r0, #2644	; 0xa54
   10e1e:	f2c2 0000 	movt	r0, #8192	; 0x2000
   10e22:	2300      	movs	r3, #0
   10e24:	f7fa ff17 	bl	bc56 <_ZN6mynewt6kernel2os9task_init17h6d03a8a1e529263dE>
   10e28:	9010      	str	r0, [sp, #64]	; 0x40
   10e2a:	e08f      	b.n	10f4c <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0xa38>
    assert_eq!(rc, 0, "sem fail");  //  TODO: Map to MynewtResult
   10e2c:	f64d 403c 	movw	r0, #56380	; 0xdc3c
   10e30:	f2c0 0001 	movt	r0, #1
   10e34:	6801      	ldr	r1, [r0, #0]
   10e36:	f8dd 04c0 	ldr.w	r0, [sp, #1216]	; 0x4c0
   10e3a:	f8cd 0504 	str.w	r0, [sp, #1284]	; 0x504
   10e3e:	f8dd 04c4 	ldr.w	r0, [sp, #1220]	; 0x4c4
   10e42:	f8cd 0508 	str.w	r0, [sp, #1288]	; 0x508
   10e46:	f64d 5054 	movw	r0, #56660	; 0xdd54
   10e4a:	f2c0 0001 	movt	r0, #1
   10e4e:	6800      	ldr	r0, [r0, #0]
   10e50:	f64d 425c 	movw	r2, #56412	; 0xdc5c
   10e54:	f2c0 0201 	movt	r2, #1
   10e58:	6813      	ldr	r3, [r2, #0]
   10e5a:	466a      	mov	r2, sp
   10e5c:	f04f 0c00 	mov.w	ip, #0
   10e60:	f8c2 c000 	str.w	ip, [r2]
   10e64:	f20d 520c 	addw	r2, sp, #1292	; 0x50c
   10e68:	f04f 0c01 	mov.w	ip, #1
   10e6c:	900f      	str	r0, [sp, #60]	; 0x3c
   10e6e:	4610      	mov	r0, r2
   10e70:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   10e72:	910e      	str	r1, [sp, #56]	; 0x38
   10e74:	4611      	mov	r1, r2
   10e76:	4662      	mov	r2, ip
   10e78:	f7fa ff4a 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
   10e7c:	e7ff      	b.n	10e7e <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x96a>
   10e7e:	f20d 5004 	addw	r0, sp, #1284	; 0x504
   10e82:	f8cd 04f8 	str.w	r0, [sp, #1272]	; 0x4f8
   10e86:	f50d 60a1 	add.w	r0, sp, #1288	; 0x508
   10e8a:	f8cd 04fc 	str.w	r0, [sp, #1276]	; 0x4fc
   10e8e:	f20d 500c 	addw	r0, sp, #1292	; 0x50c
   10e92:	f8cd 0500 	str.w	r0, [sp, #1280]	; 0x500
   10e96:	f8dd 04f8 	ldr.w	r0, [sp, #1272]	; 0x4f8
   10e9a:	f8cd 0524 	str.w	r0, [sp, #1316]	; 0x524
   10e9e:	f8dd 04fc 	ldr.w	r0, [sp, #1276]	; 0x4fc
   10ea2:	f8cd 0528 	str.w	r0, [sp, #1320]	; 0x528
   10ea6:	f8dd 0500 	ldr.w	r0, [sp, #1280]	; 0x500
   10eaa:	f8cd 052c 	str.w	r0, [sp, #1324]	; 0x52c
   10eae:	f8dd 0524 	ldr.w	r0, [sp, #1316]	; 0x524
   10eb2:	f64b 5169 	movw	r1, #48489	; 0xbd69
   10eb6:	f2c0 0100 	movt	r1, #0
   10eba:	f7fa ffaf 	bl	be1c <_ZN4core3fmt10ArgumentV13new17h93c5bc3c3358d946E>
   10ebe:	900d      	str	r0, [sp, #52]	; 0x34
   10ec0:	910c      	str	r1, [sp, #48]	; 0x30
   10ec2:	e7ff      	b.n	10ec4 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x9b0>
   10ec4:	f8dd 0528 	ldr.w	r0, [sp, #1320]	; 0x528
   10ec8:	f64b 5169 	movw	r1, #48489	; 0xbd69
   10ecc:	f2c0 0100 	movt	r1, #0
   10ed0:	f7fa ffa4 	bl	be1c <_ZN4core3fmt10ArgumentV13new17h93c5bc3c3358d946E>
   10ed4:	900b      	str	r0, [sp, #44]	; 0x2c
   10ed6:	910a      	str	r1, [sp, #40]	; 0x28
   10ed8:	e7ff      	b.n	10eda <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x9c6>
   10eda:	f8dd 052c 	ldr.w	r0, [sp, #1324]	; 0x52c
   10ede:	f644 71c9 	movw	r1, #20425	; 0x4fc9
   10ee2:	f2c0 0101 	movt	r1, #1
   10ee6:	f7fa ffae 	bl	be46 <_ZN4core3fmt10ArgumentV13new17hd6e40bd932949712E>
   10eea:	9009      	str	r0, [sp, #36]	; 0x24
   10eec:	9108      	str	r1, [sp, #32]
   10eee:	e7ff      	b.n	10ef0 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0x9dc>
   10ef0:	980d      	ldr	r0, [sp, #52]	; 0x34
   10ef2:	f8cd 04e0 	str.w	r0, [sp, #1248]	; 0x4e0
   10ef6:	990c      	ldr	r1, [sp, #48]	; 0x30
   10ef8:	f8cd 14e4 	str.w	r1, [sp, #1252]	; 0x4e4
   10efc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   10efe:	f8cd 24e8 	str.w	r2, [sp, #1256]	; 0x4e8
   10f02:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   10f04:	f8cd 34ec 	str.w	r3, [sp, #1260]	; 0x4ec
   10f08:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   10f0c:	f8cd c4f0 	str.w	ip, [sp, #1264]	; 0x4f0
   10f10:	f8dd e020 	ldr.w	lr, [sp, #32]
   10f14:	f8cd e4f4 	str.w	lr, [sp, #1268]	; 0x4f4
   10f18:	466c      	mov	r4, sp
   10f1a:	2503      	movs	r5, #3
   10f1c:	6025      	str	r5, [r4, #0]
   10f1e:	f50d 6099 	add.w	r0, sp, #1224	; 0x4c8
   10f22:	f50d 639c 	add.w	r3, sp, #1248	; 0x4e0
   10f26:	990e      	ldr	r1, [sp, #56]	; 0x38
   10f28:	462a      	mov	r2, r5
   10f2a:	f7fa fef1 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
   10f2e:	e7ff      	b.n	10f30 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0xa1c>
   10f30:	f64d 5068 	movw	r0, #56680	; 0xdd68
   10f34:	f2c0 0001 	movt	r0, #1
   10f38:	f003 fe2c 	bl	14b94 <_ZN4core5panic8Location6caller17h63e50e3e41b8f68eE>
   10f3c:	9007      	str	r0, [sp, #28]
   10f3e:	e7ff      	b.n	10f40 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0xa2c>
   10f40:	f50d 6099 	add.w	r0, sp, #1224	; 0x4c8
   10f44:	9907      	ldr	r1, [sp, #28]
   10f46:	f003 fe62 	bl	14c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>
   10f4a:	defe      	udf	#254	; 0xfe
    os::task_init(                //  Create a new task and start it...
   10f4c:	9810      	ldr	r0, [sp, #64]	; 0x40
   10f4e:	f7fa fe65 	bl	bc1c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h547b8d3279e16ed9E>
   10f52:	f8cd 0530 	str.w	r0, [sp, #1328]	; 0x530
   10f56:	e7ff      	b.n	10f58 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0xa44>
        NULL,  //  Argument to be passed to above function
        10,    //  Task priority: highest is 0, lowest is 255 (main task is 127)
        os::OS_WAIT_FOREVER as u32,     //  Don't do sanity / watchdog checking
        unsafe { &mut SPI_TASK_STACK }, //  Stack space for the task
        SPI_TASK_STACK_SIZE as u16      //  Size of the stack (in 4-byte units)
    ) ? ;                               //  `?` means check for error
   10f58:	f8dd 0530 	ldr.w	r0, [sp, #1328]	; 0x530
   10f5c:	1e41      	subs	r1, r0, #1
   10f5e:	bf18      	it	ne
   10f60:	2101      	movne	r1, #1
   10f62:	2801      	cmp	r0, #1
   10f64:	d016      	beq.n	10f94 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0xa80>
   10f66:	e7ff      	b.n	10f68 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0xa54>
   10f68:	e000      	b.n	10f6c <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0xa58>
    os::task_init(                //  Create a new task and start it...
   10f6a:	defe      	udf	#254	; 0xfe
    ) ? ;                               //  `?` means check for error
   10f6c:	f8dd 0530 	ldr.w	r0, [sp, #1328]	; 0x530
   10f70:	f8cd 0538 	str.w	r0, [sp, #1336]	; 0x538
   10f74:	f8dd 0538 	ldr.w	r0, [sp, #1336]	; 0x538
   10f78:	f7fa fc08 	bl	b78c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h21b21b5ada625ccdE>
   10f7c:	9006      	str	r0, [sp, #24]
   10f7e:	e003      	b.n	10f88 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0xa74>
    Ok(())
}
   10f80:	9850      	ldr	r0, [sp, #320]	; 0x140
   10f82:	f50d 6da8 	add.w	sp, sp, #1344	; 0x540
   10f86:	bdb0      	pop	{r4, r5, r7, pc}
    ) ? ;                               //  `?` means check for error
   10f88:	9806      	ldr	r0, [sp, #24]
   10f8a:	f7fa fe38 	bl	bbfe <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9e096e948ad28d6eE>
   10f8e:	9050      	str	r0, [sp, #320]	; 0x140
   10f90:	e7ff      	b.n	10f92 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0xa7e>
   10f92:	e7f5      	b.n	10f80 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0xa6c>
   10f94:	2000      	movs	r0, #0
    Ok(())
   10f96:	9050      	str	r0, [sp, #320]	; 0x140
   10f98:	2001      	movs	r0, #1
   10f9a:	9050      	str	r0, [sp, #320]	; 0x140
}
   10f9c:	e7f0      	b.n	10f80 <_ZN6mynewt3spi16spi_noblock_init17h9f6263b4a39761efE+0xa6c>

00010f9e <_ZN6mynewt3spi13spi_task_func17h346af6cd785e337aE>:

/// SPI Task Function.  Execute sequentially each SPI request posted to our Event Queue.  When there are no requests to process, block until one arrives.
extern "C" fn spi_task_func(_arg: Ptr) {
   10f9e:	b580      	push	{r7, lr}
   10fa0:	b082      	sub	sp, #8
   10fa2:	9001      	str	r0, [sp, #4]
    loop {
   10fa4:	e7ff      	b.n	10fa6 <_ZN6mynewt3spi13spi_task_func17h346af6cd785e337aE+0x8>
        //  Forever read SPI requests and execute them. Will call spi_event_callback().
        os::eventq_run(
   10fa6:	f640 2044 	movw	r0, #2628	; 0xa44
   10faa:	f2c2 0000 	movt	r0, #8192	; 0x2000
   10fae:	f7fa fe3a 	bl	bc26 <_ZN6mynewt6kernel2os10eventq_run17h9194563dcf3a5798E>
   10fb2:	9000      	str	r0, [sp, #0]
   10fb4:	e7ff      	b.n	10fb6 <_ZN6mynewt3spi13spi_task_func17h346af6cd785e337aE+0x18>
   10fb6:	f64d 5188 	movw	r1, #56712	; 0xdd88
   10fba:	f2c0 0101 	movt	r1, #1
   10fbe:	f64d 5394 	movw	r3, #56724	; 0xdd94
   10fc2:	f2c0 0301 	movt	r3, #1
   10fc6:	220b      	movs	r2, #11
   10fc8:	9800      	ldr	r0, [sp, #0]
   10fca:	f7fa fde7 	bl	bb9c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hca4739a9a91ec005E>
   10fce:	e7ff      	b.n	10fd0 <_ZN6mynewt3spi13spi_task_func17h346af6cd785e337aE+0x32>
            unsafe { &mut SPI_EVENT_QUEUE }
        ).expect("eventq fail");

        //  Tickle the watchdog so that the Watchdog Timer doesn't expire. Mynewt assumes the process is hung if we don't tickle the watchdog.
        unsafe { hal_watchdog_tickle() };
   10fd0:	f006 faf4 	bl	175bc <hal_watchdog_tickle>
   10fd4:	e7ff      	b.n	10fd6 <_ZN6mynewt3spi13spi_task_func17h346af6cd785e337aE+0x38>
    loop {
   10fd6:	e7e6      	b.n	10fa6 <_ZN6mynewt3spi13spi_task_func17h346af6cd785e337aE+0x8>

00010fd8 <_ZN6mynewt3spi25spi_noblock_write_command17h2769e08b4f7b5ba8E>:
    }
}

/// Set pending request for non-blocking SPI write for Command Byte. Returns without waiting for write to complete.
pub fn spi_noblock_write_command(cmd: u8) -> MynewtResult<()> {
   10fd8:	b580      	push	{r7, lr}
   10fda:	b08c      	sub	sp, #48	; 0x30
   10fdc:	4601      	mov	r1, r0
   10fde:	f88d 0017 	strb.w	r0, [sp, #23]
    //  If there is a pending Command Byte, enqueue it.
    spi_noblock_write_flush() ? ;
   10fe2:	9104      	str	r1, [sp, #16]
   10fe4:	f000 f891 	bl	1110a <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E>
   10fe8:	9003      	str	r0, [sp, #12]
   10fea:	e7ff      	b.n	10fec <_ZN6mynewt3spi25spi_noblock_write_command17h2769e08b4f7b5ba8E+0x14>
   10fec:	9803      	ldr	r0, [sp, #12]
   10fee:	f7fa fe15 	bl	bc1c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h547b8d3279e16ed9E>
   10ff2:	9007      	str	r0, [sp, #28]
   10ff4:	e7ff      	b.n	10ff6 <_ZN6mynewt3spi25spi_noblock_write_command17h2769e08b4f7b5ba8E+0x1e>
   10ff6:	9807      	ldr	r0, [sp, #28]
   10ff8:	1e41      	subs	r1, r0, #1
   10ffa:	bf18      	it	ne
   10ffc:	2101      	movne	r1, #1
   10ffe:	2801      	cmp	r0, #1
   11000:	d012      	beq.n	11028 <_ZN6mynewt3spi25spi_noblock_write_command17h2769e08b4f7b5ba8E+0x50>
   11002:	e7ff      	b.n	11004 <_ZN6mynewt3spi25spi_noblock_write_command17h2769e08b4f7b5ba8E+0x2c>
   11004:	e000      	b.n	11008 <_ZN6mynewt3spi25spi_noblock_write_command17h2769e08b4f7b5ba8E+0x30>
   11006:	defe      	udf	#254	; 0xfe
   11008:	9807      	ldr	r0, [sp, #28]
   1100a:	9008      	str	r0, [sp, #32]
   1100c:	9808      	ldr	r0, [sp, #32]
   1100e:	f7fa fbbd 	bl	b78c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h21b21b5ada625ccdE>
   11012:	9002      	str	r0, [sp, #8]
   11014:	e002      	b.n	1101c <_ZN6mynewt3spi25spi_noblock_write_command17h2769e08b4f7b5ba8E+0x44>
    //  Set the pending Command Byte.
    if unsafe { PENDING_CMD.push(cmd).is_err() } {
        return Err(MynewtError::SYS_EINVAL);
    }
    Ok(())
}
   11016:	9806      	ldr	r0, [sp, #24]
   11018:	b00c      	add	sp, #48	; 0x30
   1101a:	bd80      	pop	{r7, pc}
    spi_noblock_write_flush() ? ;
   1101c:	9802      	ldr	r0, [sp, #8]
   1101e:	f7fa fdee 	bl	bbfe <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9e096e948ad28d6eE>
   11022:	9006      	str	r0, [sp, #24]
   11024:	e7ff      	b.n	11026 <_ZN6mynewt3spi25spi_noblock_write_command17h2769e08b4f7b5ba8E+0x4e>
   11026:	e7f6      	b.n	11016 <_ZN6mynewt3spi25spi_noblock_write_command17h2769e08b4f7b5ba8E+0x3e>
    if unsafe { PENDING_CMD.push(cmd).is_err() } {
   11028:	f89d 1017 	ldrb.w	r1, [sp, #23]
   1102c:	f240 2010 	movw	r0, #528	; 0x210
   11030:	f2c2 0000 	movt	r0, #8192	; 0x2000
   11034:	f002 fdd9 	bl	13bea <_ZN8heapless3vec16Vec$LT$T$C$N$GT$4push17h3ed85f9e34339aa3E>
   11038:	f88d 1029 	strb.w	r1, [sp, #41]	; 0x29
   1103c:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
   11040:	e7ff      	b.n	11042 <_ZN6mynewt3spi25spi_noblock_write_command17h2769e08b4f7b5ba8E+0x6a>
   11042:	a80a      	add	r0, sp, #40	; 0x28
   11044:	f7fa fdce 	bl	bbe4 <_ZN4core6result19Result$LT$T$C$E$GT$6is_err17hf4c96e8793ee7a23E>
   11048:	9001      	str	r0, [sp, #4]
   1104a:	e7ff      	b.n	1104c <_ZN6mynewt3spi25spi_noblock_write_command17h2769e08b4f7b5ba8E+0x74>
   1104c:	9801      	ldr	r0, [sp, #4]
   1104e:	07c1      	lsls	r1, r0, #31
   11050:	2900      	cmp	r1, #0
   11052:	d105      	bne.n	11060 <_ZN6mynewt3spi25spi_noblock_write_command17h2769e08b4f7b5ba8E+0x88>
   11054:	e7ff      	b.n	11056 <_ZN6mynewt3spi25spi_noblock_write_command17h2769e08b4f7b5ba8E+0x7e>
   11056:	2000      	movs	r0, #0
    Ok(())
   11058:	9006      	str	r0, [sp, #24]
   1105a:	2001      	movs	r0, #1
   1105c:	9006      	str	r0, [sp, #24]
}
   1105e:	e7da      	b.n	11016 <_ZN6mynewt3spi25spi_noblock_write_command17h2769e08b4f7b5ba8E+0x3e>
   11060:	f06f 0001 	mvn.w	r0, #1
        return Err(MynewtError::SYS_EINVAL);
   11064:	900b      	str	r0, [sp, #44]	; 0x2c
   11066:	980b      	ldr	r0, [sp, #44]	; 0x2c
   11068:	9006      	str	r0, [sp, #24]
   1106a:	e7d4      	b.n	11016 <_ZN6mynewt3spi25spi_noblock_write_command17h2769e08b4f7b5ba8E+0x3e>

0001106c <_ZN6mynewt3spi22spi_noblock_write_data17h5f91a9651edf2767E>:

/// Set pending request for non-blocking SPI write for Data Bytes. Returns without waiting for write to complete.
pub fn spi_noblock_write_data(data: &[u8]) -> MynewtResult<()> {
   1106c:	b580      	push	{r7, lr}
   1106e:	b08c      	sub	sp, #48	; 0x30
   11070:	9006      	str	r0, [sp, #24]
   11072:	9107      	str	r1, [sp, #28]
    assert!(unsafe { PENDING_CMD.len() } > 0);  //  Must have Command Byte before Data Bytes
   11074:	f240 2010 	movw	r0, #528	; 0x210
   11078:	f2c2 0000 	movt	r0, #8192	; 0x2000
   1107c:	f002 fd8a 	bl	13b94 <_ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h277d208a5f1142a9E>
   11080:	9005      	str	r0, [sp, #20]
   11082:	9104      	str	r1, [sp, #16]
   11084:	e7ff      	b.n	11086 <_ZN6mynewt3spi22spi_noblock_write_data17h5f91a9651edf2767E+0x1a>
   11086:	9805      	ldr	r0, [sp, #20]
   11088:	9904      	ldr	r1, [sp, #16]
   1108a:	f7f9 fe66 	bl	ad5a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h4a5bc0e612dcb4a6E>
   1108e:	9003      	str	r0, [sp, #12]
   11090:	e7ff      	b.n	11092 <_ZN6mynewt3spi22spi_noblock_write_data17h5f91a9651edf2767E+0x26>
   11092:	9803      	ldr	r0, [sp, #12]
   11094:	2800      	cmp	r0, #0
   11096:	d00a      	beq.n	110ae <_ZN6mynewt3spi22spi_noblock_write_data17h5f91a9651edf2767E+0x42>
   11098:	e7ff      	b.n	1109a <_ZN6mynewt3spi22spi_noblock_write_data17h5f91a9651edf2767E+0x2e>
    //  Append Data Bytes to Pending Data Bytes.
    unsafe { PENDING_DATA.extend_from_slice(data) } ? ;
   1109a:	9906      	ldr	r1, [sp, #24]
   1109c:	9a07      	ldr	r2, [sp, #28]
   1109e:	f240 2018 	movw	r0, #536	; 0x218
   110a2:	f2c2 0000 	movt	r0, #8192	; 0x2000
   110a6:	f002 fd8f 	bl	13bc8 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$17extend_from_slice17hc38f9607903b3f32E>
   110aa:	9002      	str	r0, [sp, #8]
   110ac:	e00b      	b.n	110c6 <_ZN6mynewt3spi22spi_noblock_write_data17h5f91a9651edf2767E+0x5a>
    assert!(unsafe { PENDING_CMD.len() } > 0);  //  Must have Command Byte before Data Bytes
   110ae:	f64d 50a4 	movw	r0, #56740	; 0xdda4
   110b2:	f2c0 0001 	movt	r0, #1
   110b6:	f64d 52d8 	movw	r2, #56792	; 0xddd8
   110ba:	f2c0 0201 	movt	r2, #1
   110be:	2132      	movs	r1, #50	; 0x32
   110c0:	f003 fd6f 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   110c4:	defe      	udf	#254	; 0xfe
    unsafe { PENDING_DATA.extend_from_slice(data) } ? ;
   110c6:	9802      	ldr	r0, [sp, #8]
   110c8:	f000 0001 	and.w	r0, r0, #1
   110cc:	f7fa fd9e 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
   110d0:	f88d 0027 	strb.w	r0, [sp, #39]	; 0x27
   110d4:	e7ff      	b.n	110d6 <_ZN6mynewt3spi22spi_noblock_write_data17h5f91a9651edf2767E+0x6a>
   110d6:	f89d 0027 	ldrb.w	r0, [sp, #39]	; 0x27
   110da:	07c1      	lsls	r1, r0, #31
   110dc:	2900      	cmp	r1, #0
   110de:	d00f      	beq.n	11100 <_ZN6mynewt3spi22spi_noblock_write_data17h5f91a9651edf2767E+0x94>
   110e0:	e7ff      	b.n	110e2 <_ZN6mynewt3spi22spi_noblock_write_data17h5f91a9651edf2767E+0x76>
   110e2:	e000      	b.n	110e6 <_ZN6mynewt3spi22spi_noblock_write_data17h5f91a9651edf2767E+0x7a>
   110e4:	defe      	udf	#254	; 0xfe
   110e6:	f7ff fa0a 	bl	104fe <_ZN83_$LT$mynewt..result..MynewtError$u20$as$u20$core..convert..From$LT$$LP$$RP$$GT$$GT$4from17heb2793981fcdfe68E>
   110ea:	9001      	str	r0, [sp, #4]
   110ec:	e002      	b.n	110f4 <_ZN6mynewt3spi22spi_noblock_write_data17h5f91a9651edf2767E+0x88>
    Ok(())
}
   110ee:	9808      	ldr	r0, [sp, #32]
   110f0:	b00c      	add	sp, #48	; 0x30
   110f2:	bd80      	pop	{r7, pc}
    unsafe { PENDING_DATA.extend_from_slice(data) } ? ;
   110f4:	9801      	ldr	r0, [sp, #4]
   110f6:	f7fa fd82 	bl	bbfe <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9e096e948ad28d6eE>
   110fa:	9008      	str	r0, [sp, #32]
   110fc:	e7ff      	b.n	110fe <_ZN6mynewt3spi22spi_noblock_write_data17h5f91a9651edf2767E+0x92>
   110fe:	e7f6      	b.n	110ee <_ZN6mynewt3spi22spi_noblock_write_data17h5f91a9651edf2767E+0x82>
   11100:	2000      	movs	r0, #0
    Ok(())
   11102:	9008      	str	r0, [sp, #32]
   11104:	2001      	movs	r0, #1
   11106:	9008      	str	r0, [sp, #32]
}
   11108:	e7f1      	b.n	110ee <_ZN6mynewt3spi22spi_noblock_write_data17h5f91a9651edf2767E+0x82>

0001110a <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E>:

/// Enqueue any pending request for non-blocking SPI write for Command Byte and Data Bytes. Returns without waiting for write to complete.
pub fn spi_noblock_write_flush() -> MynewtResult<()> {
   1110a:	b580      	push	{r7, lr}
   1110c:	b090      	sub	sp, #64	; 0x40
    //  If no pending request, quit.
    if unsafe { PENDING_CMD.len() } == 0 &&
   1110e:	f240 2010 	movw	r0, #528	; 0x210
   11112:	f2c2 0000 	movt	r0, #8192	; 0x2000
   11116:	f002 fd3d 	bl	13b94 <_ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h277d208a5f1142a9E>
   1111a:	900b      	str	r0, [sp, #44]	; 0x2c
   1111c:	910a      	str	r1, [sp, #40]	; 0x28
   1111e:	e016      	b.n	1114e <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E+0x44>
   11120:	2001      	movs	r0, #1
   11122:	f88d 0037 	strb.w	r0, [sp, #55]	; 0x37
   11126:	e00c      	b.n	11142 <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E+0x38>
   11128:	2000      	movs	r0, #0
   1112a:	f88d 0037 	strb.w	r0, [sp, #55]	; 0x37
   1112e:	e008      	b.n	11142 <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E+0x38>
        unsafe { PENDING_DATA.len() } == 0 {
   11130:	f240 2018 	movw	r0, #536	; 0x218
   11134:	f2c2 0000 	movt	r0, #8192	; 0x2000
   11138:	f002 fd39 	bl	13bae <_ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h88bd69a47c24cc54E>
   1113c:	9009      	str	r0, [sp, #36]	; 0x24
   1113e:	9108      	str	r1, [sp, #32]
   11140:	e00f      	b.n	11162 <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E+0x58>
    if unsafe { PENDING_CMD.len() } == 0 &&
   11142:	f89d 0037 	ldrb.w	r0, [sp, #55]	; 0x37
   11146:	07c0      	lsls	r0, r0, #31
   11148:	2800      	cmp	r0, #0
   1114a:	d11d      	bne.n	11188 <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E+0x7e>
   1114c:	e013      	b.n	11176 <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E+0x6c>
   1114e:	980b      	ldr	r0, [sp, #44]	; 0x2c
   11150:	990a      	ldr	r1, [sp, #40]	; 0x28
   11152:	f7f9 fe02 	bl	ad5a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h4a5bc0e612dcb4a6E>
   11156:	9007      	str	r0, [sp, #28]
   11158:	e7ff      	b.n	1115a <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E+0x50>
   1115a:	9807      	ldr	r0, [sp, #28]
   1115c:	2800      	cmp	r0, #0
   1115e:	d0e7      	beq.n	11130 <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E+0x26>
   11160:	e7e2      	b.n	11128 <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E+0x1e>
        unsafe { PENDING_DATA.len() } == 0 {
   11162:	9809      	ldr	r0, [sp, #36]	; 0x24
   11164:	9908      	ldr	r1, [sp, #32]
   11166:	f7f9 fdf8 	bl	ad5a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h4a5bc0e612dcb4a6E>
   1116a:	9006      	str	r0, [sp, #24]
   1116c:	e7ff      	b.n	1116e <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E+0x64>
    if unsafe { PENDING_CMD.len() } == 0 &&
   1116e:	9806      	ldr	r0, [sp, #24]
   11170:	2800      	cmp	r0, #0
   11172:	d0d5      	beq.n	11120 <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E+0x16>
   11174:	e7d8      	b.n	11128 <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E+0x1e>
        return Ok(());
    }
    //  Enqueue the pending SPI request into the Mbuf Queue
    if let Err(e) = spi_noblock_write(
        unsafe { PENDING_CMD[0] },  //  Command Byte
   11176:	f240 2010 	movw	r0, #528	; 0x210
   1117a:	f2c2 0000 	movt	r0, #8192	; 0x2000
   1117e:	f002 fd09 	bl	13b94 <_ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h277d208a5f1142a9E>
   11182:	9005      	str	r0, [sp, #20]
   11184:	9104      	str	r1, [sp, #16]
   11186:	e007      	b.n	11198 <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E+0x8e>
   11188:	2000      	movs	r0, #0
        return Ok(());
   1118a:	900c      	str	r0, [sp, #48]	; 0x30
   1118c:	2001      	movs	r0, #1
   1118e:	900c      	str	r0, [sp, #48]	; 0x30
   11190:	e7ff      	b.n	11192 <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E+0x88>
    }
    //  Else clear the pending request and return Ok.
    unsafe { PENDING_CMD.clear() };
    unsafe { PENDING_DATA.clear() };
    Ok(())
}
   11192:	980c      	ldr	r0, [sp, #48]	; 0x30
   11194:	b010      	add	sp, #64	; 0x40
   11196:	bd80      	pop	{r7, pc}
        unsafe { PENDING_CMD[0] },  //  Command Byte
   11198:	9804      	ldr	r0, [sp, #16]
   1119a:	2800      	cmp	r0, #0
   1119c:	d03d      	beq.n	1121a <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E+0x110>
   1119e:	e7ff      	b.n	111a0 <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E+0x96>
   111a0:	9805      	ldr	r0, [sp, #20]
   111a2:	7801      	ldrb	r1, [r0, #0]
        unsafe { &PENDING_DATA }    //  Data Bytes
   111a4:	f240 2018 	movw	r0, #536	; 0x218
   111a8:	f2c2 0000 	movt	r0, #8192	; 0x2000
   111ac:	9103      	str	r1, [sp, #12]
   111ae:	f002 fcfe 	bl	13bae <_ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h88bd69a47c24cc54E>
   111b2:	9002      	str	r0, [sp, #8]
   111b4:	9101      	str	r1, [sp, #4]
   111b6:	e7ff      	b.n	111b8 <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E+0xae>
    if let Err(e) = spi_noblock_write(
   111b8:	9803      	ldr	r0, [sp, #12]
   111ba:	9902      	ldr	r1, [sp, #8]
   111bc:	9a01      	ldr	r2, [sp, #4]
   111be:	f000 f835 	bl	1122c <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE>
   111c2:	900e      	str	r0, [sp, #56]	; 0x38
   111c4:	e7ff      	b.n	111c6 <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E+0xbc>
   111c6:	980e      	ldr	r0, [sp, #56]	; 0x38
   111c8:	2801      	cmp	r0, #1
   111ca:	d107      	bne.n	111dc <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E+0xd2>
   111cc:	e7ff      	b.n	111ce <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E+0xc4>
    unsafe { PENDING_CMD.clear() };
   111ce:	f240 2010 	movw	r0, #528	; 0x210
   111d2:	f2c2 0000 	movt	r0, #8192	; 0x2000
   111d6:	f002 fd1d 	bl	13c14 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17h31e57cb84b87bd6aE>
   111da:	e012      	b.n	11202 <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E+0xf8>
    if let Err(e) = spi_noblock_write(
   111dc:	980e      	ldr	r0, [sp, #56]	; 0x38
   111de:	900f      	str	r0, [sp, #60]	; 0x3c
        unsafe { PENDING_CMD.clear() };
   111e0:	f240 2010 	movw	r0, #528	; 0x210
   111e4:	f2c2 0000 	movt	r0, #8192	; 0x2000
   111e8:	f002 fd14 	bl	13c14 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17h31e57cb84b87bd6aE>
   111ec:	e7ff      	b.n	111ee <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E+0xe4>
        unsafe { PENDING_DATA.clear() };    
   111ee:	f240 2018 	movw	r0, #536	; 0x218
   111f2:	f2c2 0000 	movt	r0, #8192	; 0x2000
   111f6:	f002 fd16 	bl	13c26 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17h73cdeb4431a0dffdE>
   111fa:	e7ff      	b.n	111fc <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E+0xf2>
        return Err(e);
   111fc:	980f      	ldr	r0, [sp, #60]	; 0x3c
   111fe:	900c      	str	r0, [sp, #48]	; 0x30
   11200:	e7c7      	b.n	11192 <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E+0x88>
    unsafe { PENDING_DATA.clear() };
   11202:	f240 2018 	movw	r0, #536	; 0x218
   11206:	f2c2 0000 	movt	r0, #8192	; 0x2000
   1120a:	f002 fd0c 	bl	13c26 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17h73cdeb4431a0dffdE>
   1120e:	e7ff      	b.n	11210 <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E+0x106>
   11210:	2000      	movs	r0, #0
    Ok(())
   11212:	900c      	str	r0, [sp, #48]	; 0x30
   11214:	2001      	movs	r0, #1
   11216:	900c      	str	r0, [sp, #48]	; 0x30
}
   11218:	e7bb      	b.n	11192 <_ZN6mynewt3spi23spi_noblock_write_flush17ha02e871285215d63E+0x88>
        unsafe { PENDING_CMD[0] },  //  Command Byte
   1121a:	f64d 50e8 	movw	r0, #56808	; 0xdde8
   1121e:	f2c0 0001 	movt	r0, #1
   11222:	2100      	movs	r1, #0
   11224:	9a04      	ldr	r2, [sp, #16]
   11226:	f003 fcd2 	bl	14bce <_ZN4core9panicking18panic_bounds_check17h6547e9bb7dcebe69E>
   1122a:	defe      	udf	#254	; 0xfe

0001122c <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE>:

/// Enqueue request for non-blocking SPI write. Returns without waiting for write to complete.
/// Request must have a Command Byte, followed by optional Data Bytes.
fn spi_noblock_write(cmd: u8, data: &[u8]) -> MynewtResult<()> {
   1122c:	b580      	push	{r7, lr}
   1122e:	b09c      	sub	sp, #112	; 0x70
   11230:	4603      	mov	r3, r0
   11232:	f88d 0033 	strb.w	r0, [sp, #51]	; 0x33
   11236:	910d      	str	r1, [sp, #52]	; 0x34
   11238:	920e      	str	r2, [sp, #56]	; 0x38
   1123a:	f247 5030 	movw	r0, #30000	; 0x7530
    console::print("spi data "); ////
    console::dump(data.as_ptr(), data.len() as u32); console::print("\n"); ////
    console::flush(); */

    //  Throttle the number of queued SPI requests.
    let timeout = 30_000;
   1123e:	9010      	str	r0, [sp, #64]	; 0x40
    unsafe { os::os_sem_pend(&mut SPI_THROTTLE_SEM, timeout * OS_TICKS_PER_SEC / 1000) };
   11240:	9810      	ldr	r0, [sp, #64]	; 0x40
   11242:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
   11246:	fba0 0101 	umull	r0, r1, r0, r1
   1124a:	2900      	cmp	r1, #0
   1124c:	900b      	str	r0, [sp, #44]	; 0x2c
   1124e:	f040 80c7 	bne.w	113e0 <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x1b4>
   11252:	e7ff      	b.n	11254 <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x28>
   11254:	f644 50d3 	movw	r0, #19923	; 0x4dd3
   11258:	f2c1 0062 	movt	r0, #4194	; 0x1062
   1125c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   1125e:	fba1 0200 	umull	r0, r2, r1, r0
   11262:	0991      	lsrs	r1, r2, #6
   11264:	f640 2224 	movw	r2, #2596	; 0xa24
   11268:	f2c2 0200 	movt	r2, #8192	; 0x2000
   1126c:	900a      	str	r0, [sp, #40]	; 0x28
   1126e:	4610      	mov	r0, r2
   11270:	f007 faa4 	bl	187bc <os_sem_pend>
   11274:	e7ff      	b.n	11276 <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x4a>

    //  Allocate a new mbuf chain to copy the data to be sent.
    let len = data.len() as u16 + 1;  //  1 Command Byte + Multiple Data Bytes
   11276:	980d      	ldr	r0, [sp, #52]	; 0x34
   11278:	990e      	ldr	r1, [sp, #56]	; 0x38
   1127a:	f7f9 fd6e 	bl	ad5a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h4a5bc0e612dcb4a6E>
   1127e:	9009      	str	r0, [sp, #36]	; 0x24
   11280:	e7ff      	b.n	11282 <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x56>
   11282:	2001      	movs	r0, #1
   11284:	9909      	ldr	r1, [sp, #36]	; 0x24
   11286:	fa10 f081 	uxtah	r0, r0, r1
   1128a:	b282      	uxth	r2, r0
   1128c:	4603      	mov	r3, r0
   1128e:	4282      	cmp	r2, r0
   11290:	9308      	str	r3, [sp, #32]
   11292:	f040 80b1 	bne.w	113f8 <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x1cc>
   11296:	e7ff      	b.n	11298 <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x6c>
   11298:	9808      	ldr	r0, [sp, #32]
   1129a:	f8ad 0046 	strh.w	r0, [sp, #70]	; 0x46
    let mbuf = unsafe { os::os_msys_get_pkthdr(len, 0) };
   1129e:	f8bd 0046 	ldrh.w	r0, [sp, #70]	; 0x46
   112a2:	2100      	movs	r1, #0
   112a4:	f006 ff98 	bl	181d8 <os_msys_get_pkthdr>
   112a8:	9012      	str	r0, [sp, #72]	; 0x48
   112aa:	e7ff      	b.n	112ac <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x80>
    if mbuf.is_null() {  //  If out of memory, quit.
   112ac:	9812      	ldr	r0, [sp, #72]	; 0x48
   112ae:	f002 fc66 	bl	13b7e <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1e9126c9c19580b1E>
   112b2:	9007      	str	r0, [sp, #28]
   112b4:	e7ff      	b.n	112b6 <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x8a>
   112b6:	9807      	ldr	r0, [sp, #28]
   112b8:	07c1      	lsls	r1, r0, #31
   112ba:	2900      	cmp	r1, #0
   112bc:	d108      	bne.n	112d0 <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0xa4>
   112be:	e7ff      	b.n	112c0 <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x94>
        return Err(MynewtError::SYS_ENOMEM); 
    }

    //  Append the Command Byte to the mbuf chain.
    let rc = unsafe { os::os_mbuf_append(
        mbuf, 
   112c0:	9812      	ldr	r0, [sp, #72]	; 0x48
   112c2:	f10d 0133 	add.w	r1, sp, #51	; 0x33
        core::mem::transmute(&cmd), 
   112c6:	911a      	str	r1, [sp, #104]	; 0x68
   112c8:	991a      	ldr	r1, [sp, #104]	; 0x68
   112ca:	9006      	str	r0, [sp, #24]
   112cc:	9105      	str	r1, [sp, #20]
   112ce:	e010      	b.n	112f2 <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0xc6>
        unsafe { os::os_sem_release(&mut SPI_THROTTLE_SEM) };  //  Release the throttle
   112d0:	f640 2024 	movw	r0, #2596	; 0xa24
   112d4:	f2c2 0000 	movt	r0, #8192	; 0x2000
   112d8:	f007 fa3e 	bl	18758 <os_sem_release>
   112dc:	e7ff      	b.n	112de <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0xb2>
   112de:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
        return Err(MynewtError::SYS_ENOMEM); 
   112e2:	9013      	str	r0, [sp, #76]	; 0x4c
   112e4:	9813      	ldr	r0, [sp, #76]	; 0x4c
   112e6:	900f      	str	r0, [sp, #60]	; 0x3c
   112e8:	e002      	b.n	112f0 <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0xc4>
        unsafe { os::os_mbuf_free_chain(mbuf) };               //  Deallocate the mbuf chain
        unsafe { os::os_sem_release(&mut SPI_THROTTLE_SEM) };  //  Release the throttle
        return Err(MynewtError::SYS_EUNKNOWN); 
    }
    Ok(())
}
   112ea:	980f      	ldr	r0, [sp, #60]	; 0x3c
   112ec:	b01c      	add	sp, #112	; 0x70
   112ee:	bd80      	pop	{r7, pc}
        return Err(MynewtError::SYS_ENOMEM); 
   112f0:	e7fb      	b.n	112ea <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0xbe>
   112f2:	2201      	movs	r2, #1
    let rc = unsafe { os::os_mbuf_append(
   112f4:	9806      	ldr	r0, [sp, #24]
   112f6:	9905      	ldr	r1, [sp, #20]
   112f8:	f006 fdc6 	bl	17e88 <os_mbuf_append>
   112fc:	9014      	str	r0, [sp, #80]	; 0x50
   112fe:	e7ff      	b.n	11300 <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0xd4>
    if rc != 0 {  //  If out of memory, quit.
   11300:	9814      	ldr	r0, [sp, #80]	; 0x50
   11302:	2800      	cmp	r0, #0
   11304:	d10a      	bne.n	1131c <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0xf0>
   11306:	e7ff      	b.n	11308 <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0xdc>
        mbuf, 
   11308:	9812      	ldr	r0, [sp, #72]	; 0x48
        core::mem::transmute(data.as_ptr()), 
   1130a:	990d      	ldr	r1, [sp, #52]	; 0x34
   1130c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1130e:	9004      	str	r0, [sp, #16]
   11310:	4608      	mov	r0, r1
   11312:	4611      	mov	r1, r2
   11314:	f7f9 fd2b 	bl	ad6e <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hb15824c4ec226a1aE>
   11318:	9003      	str	r0, [sp, #12]
   1131a:	e011      	b.n	11340 <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x114>
        unsafe { os::os_mbuf_free_chain(mbuf) };               //  Deallocate the mbuf chain
   1131c:	9812      	ldr	r0, [sp, #72]	; 0x48
   1131e:	f006 fd97 	bl	17e50 <os_mbuf_free_chain>
   11322:	e7ff      	b.n	11324 <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0xf8>
        unsafe { os::os_sem_release(&mut SPI_THROTTLE_SEM) };  //  Release the throttle
   11324:	f640 2024 	movw	r0, #2596	; 0xa24
   11328:	f2c2 0000 	movt	r0, #8192	; 0x2000
   1132c:	f007 fa14 	bl	18758 <os_sem_release>
   11330:	e7ff      	b.n	11332 <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x106>
   11332:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
        return Err(MynewtError::SYS_ENOMEM); 
   11336:	9015      	str	r0, [sp, #84]	; 0x54
   11338:	9815      	ldr	r0, [sp, #84]	; 0x54
   1133a:	900f      	str	r0, [sp, #60]	; 0x3c
   1133c:	e7ff      	b.n	1133e <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x112>
   1133e:	e7d7      	b.n	112f0 <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0xc4>
        core::mem::transmute(data.as_ptr()), 
   11340:	9803      	ldr	r0, [sp, #12]
   11342:	901b      	str	r0, [sp, #108]	; 0x6c
   11344:	991b      	ldr	r1, [sp, #108]	; 0x6c
   11346:	9102      	str	r1, [sp, #8]
   11348:	e7ff      	b.n	1134a <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x11e>
        data.len() as u16
   1134a:	980d      	ldr	r0, [sp, #52]	; 0x34
   1134c:	990e      	ldr	r1, [sp, #56]	; 0x38
   1134e:	f7f9 fd04 	bl	ad5a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h4a5bc0e612dcb4a6E>
   11352:	9001      	str	r0, [sp, #4]
   11354:	e7ff      	b.n	11356 <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x12a>
    let rc = unsafe { os::os_mbuf_append(
   11356:	9801      	ldr	r0, [sp, #4]
   11358:	b282      	uxth	r2, r0
   1135a:	9804      	ldr	r0, [sp, #16]
   1135c:	9902      	ldr	r1, [sp, #8]
   1135e:	f006 fd93 	bl	17e88 <os_mbuf_append>
   11362:	9016      	str	r0, [sp, #88]	; 0x58
   11364:	e7ff      	b.n	11366 <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x13a>
    if rc != 0 {  //  If out of memory, quit.
   11366:	9816      	ldr	r0, [sp, #88]	; 0x58
   11368:	2800      	cmp	r0, #0
   1136a:	d10d      	bne.n	11388 <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x15c>
   1136c:	e7ff      	b.n	1136e <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x142>
        mbuf
   1136e:	9a12      	ldr	r2, [sp, #72]	; 0x48
    let rc = unsafe { os::os_mqueue_put(
   11370:	f640 202c 	movw	r0, #2604	; 0xa2c
   11374:	f2c2 0000 	movt	r0, #8192	; 0x2000
   11378:	f640 2144 	movw	r1, #2628	; 0xa44
   1137c:	f2c2 0100 	movt	r1, #8192	; 0x2000
   11380:	f006 fd04 	bl	17d8c <os_mqueue_put>
   11384:	9018      	str	r0, [sp, #96]	; 0x60
   11386:	e011      	b.n	113ac <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x180>
        unsafe { os::os_mbuf_free_chain(mbuf) };               //  Deallocate the mbuf chain
   11388:	9812      	ldr	r0, [sp, #72]	; 0x48
   1138a:	f006 fd61 	bl	17e50 <os_mbuf_free_chain>
   1138e:	e7ff      	b.n	11390 <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x164>
        unsafe { os::os_sem_release(&mut SPI_THROTTLE_SEM) };  //  Release the throttle
   11390:	f640 2024 	movw	r0, #2596	; 0xa24
   11394:	f2c2 0000 	movt	r0, #8192	; 0x2000
   11398:	f007 f9de 	bl	18758 <os_sem_release>
   1139c:	e7ff      	b.n	1139e <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x172>
   1139e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
        return Err(MynewtError::SYS_ENOMEM); 
   113a2:	9017      	str	r0, [sp, #92]	; 0x5c
   113a4:	9817      	ldr	r0, [sp, #92]	; 0x5c
   113a6:	900f      	str	r0, [sp, #60]	; 0x3c
   113a8:	e7ff      	b.n	113aa <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x17e>
   113aa:	e7c8      	b.n	1133e <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x112>
    if rc != 0 {  //  If out of memory, quit.
   113ac:	9818      	ldr	r0, [sp, #96]	; 0x60
   113ae:	2800      	cmp	r0, #0
   113b0:	d105      	bne.n	113be <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x192>
   113b2:	e7ff      	b.n	113b4 <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x188>
   113b4:	2000      	movs	r0, #0
    Ok(())
   113b6:	900f      	str	r0, [sp, #60]	; 0x3c
   113b8:	2001      	movs	r0, #1
   113ba:	900f      	str	r0, [sp, #60]	; 0x3c
}
   113bc:	e795      	b.n	112ea <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0xbe>
        unsafe { os::os_mbuf_free_chain(mbuf) };               //  Deallocate the mbuf chain
   113be:	9812      	ldr	r0, [sp, #72]	; 0x48
   113c0:	f006 fd46 	bl	17e50 <os_mbuf_free_chain>
   113c4:	e7ff      	b.n	113c6 <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x19a>
        unsafe { os::os_sem_release(&mut SPI_THROTTLE_SEM) };  //  Release the throttle
   113c6:	f640 2024 	movw	r0, #2596	; 0xa24
   113ca:	f2c2 0000 	movt	r0, #8192	; 0x2000
   113ce:	f007 f9c3 	bl	18758 <os_sem_release>
   113d2:	e7ff      	b.n	113d4 <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x1a8>
   113d4:	f06f 000c 	mvn.w	r0, #12
        return Err(MynewtError::SYS_EUNKNOWN); 
   113d8:	9019      	str	r0, [sp, #100]	; 0x64
   113da:	9819      	ldr	r0, [sp, #100]	; 0x64
   113dc:	900f      	str	r0, [sp, #60]	; 0x3c
   113de:	e7e4      	b.n	113aa <_ZN6mynewt3spi17spi_noblock_write17h588729f83c556afeE+0x17e>
    unsafe { os::os_sem_pend(&mut SPI_THROTTLE_SEM, timeout * OS_TICKS_PER_SEC / 1000) };
   113e0:	f64d 6010 	movw	r0, #56848	; 0xde10
   113e4:	f2c0 0001 	movt	r0, #1
   113e8:	f64d 52f8 	movw	r2, #56824	; 0xddf8
   113ec:	f2c0 0201 	movt	r2, #1
   113f0:	2121      	movs	r1, #33	; 0x21
   113f2:	f003 fbd6 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   113f6:	defe      	udf	#254	; 0xfe
    let len = data.len() as u16 + 1;  //  1 Command Byte + Multiple Data Bytes
   113f8:	f64d 6050 	movw	r0, #56912	; 0xde50
   113fc:	f2c0 0001 	movt	r0, #1
   11400:	f64d 6234 	movw	r2, #56884	; 0xde34
   11404:	f2c0 0201 	movt	r2, #1
   11408:	211c      	movs	r1, #28
   1140a:	f003 fbca 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   1140e:	defe      	udf	#254	; 0xfe

00011410 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE>:

/// Callback for the event that is triggered when an SPI request is added to the queue.
extern "C" fn spi_event_callback(_event: *mut os::os_event) {    
   11410:	b5b0      	push	{r4, r5, r7, lr}
   11412:	b0be      	sub	sp, #248	; 0xf8
   11414:	9016      	str	r0, [sp, #88]	; 0x58
   11416:	e7ff      	b.n	11418 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x8>
    loop {  //  For each mbuf chain found...
        //  Get the next SPI request, stored as an mbuf chain.
        let om = unsafe { os::os_mqueue_get(&mut SPI_DATA_QUEUE) };
   11418:	f640 202c 	movw	r0, #2604	; 0xa2c
   1141c:	f2c2 0000 	movt	r0, #8192	; 0x2000
   11420:	f006 fca1 	bl	17d66 <os_mqueue_get>
   11424:	9017      	str	r0, [sp, #92]	; 0x5c
   11426:	e7ff      	b.n	11428 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x18>
        if om.is_null() { break; }
   11428:	9817      	ldr	r0, [sp, #92]	; 0x5c
   1142a:	f002 fba8 	bl	13b7e <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1e9126c9c19580b1E>
   1142e:	9015      	str	r0, [sp, #84]	; 0x54
   11430:	e7ff      	b.n	11432 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x22>
   11432:	9815      	ldr	r0, [sp, #84]	; 0x54
   11434:	07c1      	lsls	r1, r0, #31
   11436:	2900      	cmp	r1, #0
   11438:	d106      	bne.n	11448 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x38>
   1143a:	e7ff      	b.n	1143c <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x2c>

        //  Send the mbuf chain.
        let mut m = om;
   1143c:	9817      	ldr	r0, [sp, #92]	; 0x5c
   1143e:	9018      	str	r0, [sp, #96]	; 0x60
   11440:	2001      	movs	r0, #1
        let mut first_byte = true;
   11442:	f88d 0067 	strb.w	r0, [sp, #103]	; 0x67
        while !m.is_null() {  //  For each mbuf in the chain...
   11446:	e001      	b.n	1144c <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x3c>

        //  Release the throttle semaphore to allow next request to be queued.
        let rc = unsafe { os::os_sem_release(&mut SPI_THROTTLE_SEM) };
        assert_eq!(rc, 0, "sem fail");    
    }
}
   11448:	b03e      	add	sp, #248	; 0xf8
   1144a:	bdb0      	pop	{r4, r5, r7, pc}
        while !m.is_null() {  //  For each mbuf in the chain...
   1144c:	9818      	ldr	r0, [sp, #96]	; 0x60
   1144e:	f002 fb96 	bl	13b7e <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1e9126c9c19580b1E>
   11452:	9014      	str	r0, [sp, #80]	; 0x50
   11454:	e7ff      	b.n	11456 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x46>
   11456:	9814      	ldr	r0, [sp, #80]	; 0x50
   11458:	07c1      	lsls	r1, r0, #31
   1145a:	2900      	cmp	r1, #0
   1145c:	d004      	beq.n	11468 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x58>
   1145e:	e7ff      	b.n	11460 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x50>
        unsafe { os::os_mbuf_free_chain(om) };
   11460:	9817      	ldr	r0, [sp, #92]	; 0x5c
   11462:	f006 fcf5 	bl	17e50 <os_mbuf_free_chain>
   11466:	e0a5      	b.n	115b4 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x1a4>
            let data = unsafe { (*m).om_data };  //  Fetch the data
   11468:	9818      	ldr	r0, [sp, #96]	; 0x60
   1146a:	6800      	ldr	r0, [r0, #0]
   1146c:	901a      	str	r0, [sp, #104]	; 0x68
            let len = unsafe { (*m).om_len };    //  Fetch the length
   1146e:	9818      	ldr	r0, [sp, #96]	; 0x60
   11470:	88c0      	ldrh	r0, [r0, #6]
   11472:	f8ad 006c 	strh.w	r0, [sp, #108]	; 0x6c
            if first_byte {  //  First byte of the mbuf chain is always Command Byte
   11476:	f89d 0067 	ldrb.w	r0, [sp, #103]	; 0x67
   1147a:	07c0      	lsls	r0, r0, #31
   1147c:	2800      	cmp	r0, #0
   1147e:	d105      	bne.n	1148c <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x7c>
   11480:	e7ff      	b.n	11482 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x72>
                    unsafe { core::mem::transmute(data) }, 
   11482:	981a      	ldr	r0, [sp, #104]	; 0x68
   11484:	903d      	str	r0, [sp, #244]	; 0xf4
   11486:	983d      	ldr	r0, [sp, #244]	; 0xf4
   11488:	9013      	str	r0, [sp, #76]	; 0x4c
   1148a:	e079      	b.n	11580 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x170>
   1148c:	2000      	movs	r0, #0
                first_byte = false;
   1148e:	f88d 0067 	strb.w	r0, [sp, #103]	; 0x67
                    unsafe { core::mem::transmute(data) }, 
   11492:	981a      	ldr	r0, [sp, #104]	; 0x68
   11494:	903b      	str	r0, [sp, #236]	; 0xec
   11496:	983b      	ldr	r0, [sp, #236]	; 0xec
   11498:	9012      	str	r0, [sp, #72]	; 0x48
   1149a:	e7ff      	b.n	1149c <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x8c>
   1149c:	2001      	movs	r0, #1
                internal_spi_noblock_write(
   1149e:	9912      	ldr	r1, [sp, #72]	; 0x48
   114a0:	9011      	str	r0, [sp, #68]	; 0x44
   114a2:	4608      	mov	r0, r1
   114a4:	9911      	ldr	r1, [sp, #68]	; 0x44
   114a6:	9a11      	ldr	r2, [sp, #68]	; 0x44
   114a8:	f000 f921 	bl	116ee <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E>
   114ac:	9010      	str	r0, [sp, #64]	; 0x40
   114ae:	e7ff      	b.n	114b0 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0xa0>
   114b0:	f64d 616c 	movw	r1, #56940	; 0xde6c
   114b4:	f2c0 0101 	movt	r1, #1
   114b8:	f64d 6378 	movw	r3, #56952	; 0xde78
   114bc:	f2c0 0301 	movt	r3, #1
   114c0:	220c      	movs	r2, #12
   114c2:	9810      	ldr	r0, [sp, #64]	; 0x40
   114c4:	f7fa fb6a 	bl	bb9c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hca4739a9a91ec005E>
   114c8:	e7ff      	b.n	114ca <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0xba>
                if  unsafe { *data } == 0x01 || //  SWRESET
   114ca:	981a      	ldr	r0, [sp, #104]	; 0x68
   114cc:	7800      	ldrb	r0, [r0, #0]
   114ce:	2801      	cmp	r0, #1
   114d0:	d013      	beq.n	114fa <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0xea>
   114d2:	e01a      	b.n	1150a <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0xfa>
   114d4:	2001      	movs	r0, #1
   114d6:	f88d 006e 	strb.w	r0, [sp, #110]	; 0x6e
   114da:	e008      	b.n	114ee <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0xde>
   114dc:	2000      	movs	r0, #0
   114de:	f88d 006e 	strb.w	r0, [sp, #110]	; 0x6e
   114e2:	e004      	b.n	114ee <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0xde>
                    unsafe { *data } == 0x29 {  //  DISPON
   114e4:	981a      	ldr	r0, [sp, #104]	; 0x68
   114e6:	7800      	ldrb	r0, [r0, #0]
                if  unsafe { *data } == 0x01 || //  SWRESET
   114e8:	2829      	cmp	r0, #41	; 0x29
   114ea:	d0f3      	beq.n	114d4 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0xc4>
   114ec:	e7f6      	b.n	114dc <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0xcc>
   114ee:	f89d 006e 	ldrb.w	r0, [sp, #110]	; 0x6e
   114f2:	07c0      	lsls	r0, r0, #31
   114f4:	2800      	cmp	r0, #0
   114f6:	d113      	bne.n	11520 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x110>
   114f8:	e017      	b.n	1152a <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x11a>
   114fa:	2001      	movs	r0, #1
   114fc:	f88d 006f 	strb.w	r0, [sp, #111]	; 0x6f
   11500:	e008      	b.n	11514 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x104>
   11502:	2000      	movs	r0, #0
   11504:	f88d 006f 	strb.w	r0, [sp, #111]	; 0x6f
   11508:	e004      	b.n	11514 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x104>
                    unsafe { *data } == 0x11 || //  SLPOUT
   1150a:	981a      	ldr	r0, [sp, #104]	; 0x68
   1150c:	7800      	ldrb	r0, [r0, #0]
                if  unsafe { *data } == 0x01 || //  SWRESET
   1150e:	2811      	cmp	r0, #17
   11510:	d0f3      	beq.n	114fa <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0xea>
   11512:	e7f6      	b.n	11502 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0xf2>
   11514:	f89d 006f 	ldrb.w	r0, [sp, #111]	; 0x6f
   11518:	07c0      	lsls	r0, r0, #31
   1151a:	2800      	cmp	r0, #0
   1151c:	d1da      	bne.n	114d4 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0xc4>
   1151e:	e7e1      	b.n	114e4 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0xd4>
   11520:	20c8      	movs	r0, #200	; 0xc8
                    delay_ms(200);
   11522:	f000 fb19 	bl	11b58 <_ZN6mynewt3spi8delay_ms17h72c5917ddd9111a5E>
   11526:	e7ff      	b.n	11528 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x118>
                if  unsafe { *data } == 0x01 || //  SWRESET
   11528:	e7ff      	b.n	1152a <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x11a>
                    unsafe { core::mem::transmute(data.add(1)) }, 
   1152a:	981a      	ldr	r0, [sp, #104]	; 0x68
   1152c:	2101      	movs	r1, #1
   1152e:	f7f8 fffe 	bl	a52e <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hd0429ebf735219dbE>
   11532:	900f      	str	r0, [sp, #60]	; 0x3c
   11534:	e7ff      	b.n	11536 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x126>
   11536:	980f      	ldr	r0, [sp, #60]	; 0x3c
   11538:	903c      	str	r0, [sp, #240]	; 0xf0
   1153a:	983c      	ldr	r0, [sp, #240]	; 0xf0
   1153c:	900e      	str	r0, [sp, #56]	; 0x38
   1153e:	e7ff      	b.n	11540 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x130>
                    (len - 1) as i32,  //  Then write 0 or more Data Bytes
   11540:	f8bd 006c 	ldrh.w	r0, [sp, #108]	; 0x6c
   11544:	3801      	subs	r0, #1
   11546:	b281      	uxth	r1, r0
   11548:	4602      	mov	r2, r0
   1154a:	4281      	cmp	r1, r0
   1154c:	920d      	str	r2, [sp, #52]	; 0x34
   1154e:	f040 80c2 	bne.w	116d6 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x2c6>
   11552:	e7ff      	b.n	11554 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x144>
   11554:	980d      	ldr	r0, [sp, #52]	; 0x34
   11556:	b281      	uxth	r1, r0
   11558:	2200      	movs	r2, #0
                internal_spi_noblock_write(
   1155a:	980e      	ldr	r0, [sp, #56]	; 0x38
   1155c:	f000 f8c7 	bl	116ee <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E>
   11560:	900c      	str	r0, [sp, #48]	; 0x30
   11562:	e7ff      	b.n	11564 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x154>
   11564:	f64d 616c 	movw	r1, #56940	; 0xde6c
   11568:	f2c0 0101 	movt	r1, #1
   1156c:	f64d 63c4 	movw	r3, #57028	; 0xdec4
   11570:	f2c0 0301 	movt	r3, #1
   11574:	220c      	movs	r2, #12
   11576:	980c      	ldr	r0, [sp, #48]	; 0x30
   11578:	f7fa fb10 	bl	bb9c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hca4739a9a91ec005E>
   1157c:	e7ff      	b.n	1157e <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x16e>
            if first_byte {  //  First byte of the mbuf chain is always Command Byte
   1157e:	e015      	b.n	115ac <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x19c>
                    len as i32,  //  Write all Data Bytes
   11580:	f8bd 106c 	ldrh.w	r1, [sp, #108]	; 0x6c
   11584:	2200      	movs	r2, #0
                internal_spi_noblock_write(
   11586:	9813      	ldr	r0, [sp, #76]	; 0x4c
   11588:	f000 f8b1 	bl	116ee <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E>
   1158c:	900b      	str	r0, [sp, #44]	; 0x2c
   1158e:	e7ff      	b.n	11590 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x180>
   11590:	f64d 616c 	movw	r1, #56940	; 0xde6c
   11594:	f2c0 0101 	movt	r1, #1
   11598:	f64d 63d4 	movw	r3, #57044	; 0xded4
   1159c:	f2c0 0301 	movt	r3, #1
   115a0:	220c      	movs	r2, #12
   115a2:	980b      	ldr	r0, [sp, #44]	; 0x2c
   115a4:	f7fa fafa 	bl	bb9c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17hca4739a9a91ec005E>
   115a8:	e7ff      	b.n	115aa <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x19a>
            if first_byte {  //  First byte of the mbuf chain is always Command Byte
   115aa:	e7ff      	b.n	115ac <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x19c>
            m = unsafe { (*m).om_next.sle_next };  //  Fetch next mbuf in the chain.
   115ac:	9818      	ldr	r0, [sp, #96]	; 0x60
   115ae:	68c0      	ldr	r0, [r0, #12]
   115b0:	9018      	str	r0, [sp, #96]	; 0x60
        while !m.is_null() {  //  For each mbuf in the chain...
   115b2:	e74b      	b.n	1144c <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x3c>
        let rc = unsafe { os::os_sem_release(&mut SPI_THROTTLE_SEM) };
   115b4:	f640 2024 	movw	r0, #2596	; 0xa24
   115b8:	f2c2 0000 	movt	r0, #8192	; 0x2000
   115bc:	f007 f8cc 	bl	18758 <os_sem_release>
   115c0:	901c      	str	r0, [sp, #112]	; 0x70
   115c2:	e7ff      	b.n	115c4 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x1b4>
        assert_eq!(rc, 0, "sem fail");    
   115c4:	f64d 30e4 	movw	r0, #56292	; 0xdbe4
   115c8:	f2c0 0001 	movt	r0, #1
   115cc:	6800      	ldr	r0, [r0, #0]
   115ce:	a91c      	add	r1, sp, #112	; 0x70
   115d0:	911d      	str	r1, [sp, #116]	; 0x74
   115d2:	901e      	str	r0, [sp, #120]	; 0x78
   115d4:	981d      	ldr	r0, [sp, #116]	; 0x74
   115d6:	901f      	str	r0, [sp, #124]	; 0x7c
   115d8:	981e      	ldr	r0, [sp, #120]	; 0x78
   115da:	9020      	str	r0, [sp, #128]	; 0x80
   115dc:	981f      	ldr	r0, [sp, #124]	; 0x7c
   115de:	6800      	ldr	r0, [r0, #0]
   115e0:	9920      	ldr	r1, [sp, #128]	; 0x80
   115e2:	6809      	ldr	r1, [r1, #0]
   115e4:	4288      	cmp	r0, r1
   115e6:	d101      	bne.n	115ec <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x1dc>
   115e8:	e7ff      	b.n	115ea <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x1da>
    loop {  //  For each mbuf chain found...
   115ea:	e715      	b.n	11418 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x8>
        assert_eq!(rc, 0, "sem fail");    
   115ec:	f64d 403c 	movw	r0, #56380	; 0xdc3c
   115f0:	f2c0 0001 	movt	r0, #1
   115f4:	6801      	ldr	r1, [r0, #0]
   115f6:	981f      	ldr	r0, [sp, #124]	; 0x7c
   115f8:	9030      	str	r0, [sp, #192]	; 0xc0
   115fa:	9820      	ldr	r0, [sp, #128]	; 0x80
   115fc:	9031      	str	r0, [sp, #196]	; 0xc4
   115fe:	f64d 5054 	movw	r0, #56660	; 0xdd54
   11602:	f2c0 0001 	movt	r0, #1
   11606:	6800      	ldr	r0, [r0, #0]
   11608:	f64d 425c 	movw	r2, #56412	; 0xdc5c
   1160c:	f2c0 0201 	movt	r2, #1
   11610:	6813      	ldr	r3, [r2, #0]
   11612:	466a      	mov	r2, sp
   11614:	f04f 0c00 	mov.w	ip, #0
   11618:	f8c2 c000 	str.w	ip, [r2]
   1161c:	aa32      	add	r2, sp, #200	; 0xc8
   1161e:	f04f 0c01 	mov.w	ip, #1
   11622:	900a      	str	r0, [sp, #40]	; 0x28
   11624:	4610      	mov	r0, r2
   11626:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   11628:	9109      	str	r1, [sp, #36]	; 0x24
   1162a:	4611      	mov	r1, r2
   1162c:	4662      	mov	r2, ip
   1162e:	f7fa fb6f 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
   11632:	e7ff      	b.n	11634 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x224>
   11634:	a830      	add	r0, sp, #192	; 0xc0
   11636:	902d      	str	r0, [sp, #180]	; 0xb4
   11638:	a831      	add	r0, sp, #196	; 0xc4
   1163a:	902e      	str	r0, [sp, #184]	; 0xb8
   1163c:	a832      	add	r0, sp, #200	; 0xc8
   1163e:	902f      	str	r0, [sp, #188]	; 0xbc
   11640:	982d      	ldr	r0, [sp, #180]	; 0xb4
   11642:	9038      	str	r0, [sp, #224]	; 0xe0
   11644:	982e      	ldr	r0, [sp, #184]	; 0xb8
   11646:	9039      	str	r0, [sp, #228]	; 0xe4
   11648:	982f      	ldr	r0, [sp, #188]	; 0xbc
   1164a:	903a      	str	r0, [sp, #232]	; 0xe8
   1164c:	9838      	ldr	r0, [sp, #224]	; 0xe0
   1164e:	f64b 5169 	movw	r1, #48489	; 0xbd69
   11652:	f2c0 0100 	movt	r1, #0
   11656:	f7fa fbe1 	bl	be1c <_ZN4core3fmt10ArgumentV13new17h93c5bc3c3358d946E>
   1165a:	9008      	str	r0, [sp, #32]
   1165c:	9107      	str	r1, [sp, #28]
   1165e:	e7ff      	b.n	11660 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x250>
   11660:	9839      	ldr	r0, [sp, #228]	; 0xe4
   11662:	f64b 5169 	movw	r1, #48489	; 0xbd69
   11666:	f2c0 0100 	movt	r1, #0
   1166a:	f7fa fbd7 	bl	be1c <_ZN4core3fmt10ArgumentV13new17h93c5bc3c3358d946E>
   1166e:	9006      	str	r0, [sp, #24]
   11670:	9105      	str	r1, [sp, #20]
   11672:	e7ff      	b.n	11674 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x264>
   11674:	983a      	ldr	r0, [sp, #232]	; 0xe8
   11676:	f644 71c9 	movw	r1, #20425	; 0x4fc9
   1167a:	f2c0 0101 	movt	r1, #1
   1167e:	f7fa fbe2 	bl	be46 <_ZN4core3fmt10ArgumentV13new17hd6e40bd932949712E>
   11682:	9004      	str	r0, [sp, #16]
   11684:	9103      	str	r1, [sp, #12]
   11686:	e7ff      	b.n	11688 <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x278>
   11688:	9808      	ldr	r0, [sp, #32]
   1168a:	9027      	str	r0, [sp, #156]	; 0x9c
   1168c:	9907      	ldr	r1, [sp, #28]
   1168e:	9128      	str	r1, [sp, #160]	; 0xa0
   11690:	9a06      	ldr	r2, [sp, #24]
   11692:	9229      	str	r2, [sp, #164]	; 0xa4
   11694:	9b05      	ldr	r3, [sp, #20]
   11696:	932a      	str	r3, [sp, #168]	; 0xa8
   11698:	f8dd c010 	ldr.w	ip, [sp, #16]
   1169c:	f8cd c0ac 	str.w	ip, [sp, #172]	; 0xac
   116a0:	f8dd e00c 	ldr.w	lr, [sp, #12]
   116a4:	f8cd e0b0 	str.w	lr, [sp, #176]	; 0xb0
   116a8:	466c      	mov	r4, sp
   116aa:	2503      	movs	r5, #3
   116ac:	6025      	str	r5, [r4, #0]
   116ae:	a821      	add	r0, sp, #132	; 0x84
   116b0:	ab27      	add	r3, sp, #156	; 0x9c
   116b2:	9909      	ldr	r1, [sp, #36]	; 0x24
   116b4:	462a      	mov	r2, r5
   116b6:	f7fa fb2b 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
   116ba:	e7ff      	b.n	116bc <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x2ac>
   116bc:	f64d 60e4 	movw	r0, #57060	; 0xdee4
   116c0:	f2c0 0001 	movt	r0, #1
   116c4:	f003 fa66 	bl	14b94 <_ZN4core5panic8Location6caller17h63e50e3e41b8f68eE>
   116c8:	9002      	str	r0, [sp, #8]
   116ca:	e7ff      	b.n	116cc <_ZN6mynewt3spi18spi_event_callback17h9c3b418394ec026cE+0x2bc>
   116cc:	a821      	add	r0, sp, #132	; 0x84
   116ce:	9902      	ldr	r1, [sp, #8]
   116d0:	f003 fa9d 	bl	14c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>
   116d4:	defe      	udf	#254	; 0xfe
                    (len - 1) as i32,  //  Then write 0 or more Data Bytes
   116d6:	f64d 60a0 	movw	r0, #56992	; 0xdea0
   116da:	f2c0 0001 	movt	r0, #1
   116de:	f64d 6288 	movw	r2, #56968	; 0xde88
   116e2:	f2c0 0201 	movt	r2, #1
   116e6:	2121      	movs	r1, #33	; 0x21
   116e8:	f003 fa5b 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   116ec:	defe      	udf	#254	; 0xfe

000116ee <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E>:

/// Perform non-blocking SPI write in Mynewt OS.  Blocks until SPI write completes.
fn internal_spi_noblock_write(buf: &'static u8, len: i32, is_command: bool) -> MynewtResult<()> {
   116ee:	b5b0      	push	{r4, r5, r7, lr}
   116f0:	b0e0      	sub	sp, #384	; 0x180
   116f2:	4613      	mov	r3, r2
   116f4:	901a      	str	r0, [sp, #104]	; 0x68
   116f6:	911b      	str	r1, [sp, #108]	; 0x6c
   116f8:	f88d 2073 	strb.w	r2, [sp, #115]	; 0x73
    if len == 0 { return Ok(()); }
   116fc:	981b      	ldr	r0, [sp, #108]	; 0x6c
   116fe:	2800      	cmp	r0, #0
   11700:	d004      	beq.n	1170c <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x1e>
   11702:	e7ff      	b.n	11704 <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x16>
    assert!(len > 0, "bad spi len");
   11704:	981b      	ldr	r0, [sp, #108]	; 0x6c
   11706:	2801      	cmp	r0, #1
   11708:	db0e      	blt.n	11728 <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x3a>
   1170a:	e007      	b.n	1171c <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x2e>
   1170c:	2000      	movs	r0, #0
    if len == 0 { return Ok(()); }
   1170e:	901d      	str	r0, [sp, #116]	; 0x74
   11710:	2001      	movs	r0, #1
   11712:	901d      	str	r0, [sp, #116]	; 0x74
   11714:	e7ff      	b.n	11716 <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x28>
    }

    //  Set SS Pin to high to stop the transfer.
    unsafe { hal::hal_gpio_write(SPI_SS_PIN, 1) };
    Ok(())
}
   11716:	981d      	ldr	r0, [sp, #116]	; 0x74
   11718:	b060      	add	sp, #384	; 0x180
   1171a:	bdb0      	pop	{r4, r5, r7, pc}
        if is_command { 0 }
   1171c:	f89d 0073 	ldrb.w	r0, [sp, #115]	; 0x73
   11720:	07c0      	lsls	r0, r0, #31
   11722:	2800      	cmp	r0, #0
   11724:	d10f      	bne.n	11746 <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x58>
   11726:	e00b      	b.n	11740 <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x52>
    assert!(len > 0, "bad spi len");
   11728:	f64d 60f4 	movw	r0, #57076	; 0xdef4
   1172c:	f2c0 0001 	movt	r0, #1
   11730:	f64d 7200 	movw	r2, #57088	; 0xdf00
   11734:	f2c0 0201 	movt	r2, #1
   11738:	210b      	movs	r1, #11
   1173a:	f003 fa32 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   1173e:	defe      	udf	#254	; 0xfe
   11740:	2001      	movs	r0, #1
        else { 1 }
   11742:	901e      	str	r0, [sp, #120]	; 0x78
        if is_command { 0 }
   11744:	e002      	b.n	1174c <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x5e>
   11746:	2000      	movs	r0, #0
   11748:	901e      	str	r0, [sp, #120]	; 0x78
   1174a:	e7ff      	b.n	1174c <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x5e>
    unsafe { hal::hal_gpio_write(
   1174c:	991e      	ldr	r1, [sp, #120]	; 0x78
   1174e:	2012      	movs	r0, #18
   11750:	f005 f964 	bl	16a1c <hal_gpio_write>
   11754:	e7ff      	b.n	11756 <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x68>
   11756:	2019      	movs	r0, #25
   11758:	2100      	movs	r1, #0
    unsafe { hal::hal_gpio_write(SPI_SS_PIN, 0) };
   1175a:	f005 f95f 	bl	16a1c <hal_gpio_write>
   1175e:	e7ff      	b.n	11760 <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x72>
    if len == 1 {  //  If writing only 1 byte...
   11760:	981b      	ldr	r0, [sp, #108]	; 0x6c
   11762:	2801      	cmp	r0, #1
   11764:	d005      	beq.n	11772 <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x84>
   11766:	e7ff      	b.n	11768 <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x7a>
            core::mem::transmute(buf), //  TX Buffer
   11768:	981a      	ldr	r0, [sp, #104]	; 0x68
   1176a:	905f      	str	r0, [sp, #380]	; 0x17c
   1176c:	995f      	ldr	r1, [sp, #380]	; 0x17c
   1176e:	9119      	str	r1, [sp, #100]	; 0x64
   11770:	e096      	b.n	118a0 <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x1b2>
            core::mem::transmute(buf), //  TX Buffer
   11772:	981a      	ldr	r0, [sp, #104]	; 0x68
   11774:	905e      	str	r0, [sp, #376]	; 0x178
   11776:	995e      	ldr	r1, [sp, #376]	; 0x178
   11778:	9118      	str	r1, [sp, #96]	; 0x60
   1177a:	e7ff      	b.n	1177c <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x8e>
            len) };
   1177c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   1177e:	2000      	movs	r0, #0
        let rc = unsafe { hal::hal_spi_txrx(
   11780:	9017      	str	r0, [sp, #92]	; 0x5c
   11782:	9918      	ldr	r1, [sp, #96]	; 0x60
   11784:	9a17      	ldr	r2, [sp, #92]	; 0x5c
   11786:	f005 fdf7 	bl	17378 <hal_spi_txrx>
   1178a:	901f      	str	r0, [sp, #124]	; 0x7c
   1178c:	e7ff      	b.n	1178e <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0xa0>
        assert_eq!(rc, 0, "spi fail");  //  TODO: Map to MynewtResult
   1178e:	f64d 30e4 	movw	r0, #56292	; 0xdbe4
   11792:	f2c0 0001 	movt	r0, #1
   11796:	6800      	ldr	r0, [r0, #0]
   11798:	a91f      	add	r1, sp, #124	; 0x7c
   1179a:	9120      	str	r1, [sp, #128]	; 0x80
   1179c:	9021      	str	r0, [sp, #132]	; 0x84
   1179e:	9820      	ldr	r0, [sp, #128]	; 0x80
   117a0:	9022      	str	r0, [sp, #136]	; 0x88
   117a2:	9821      	ldr	r0, [sp, #132]	; 0x84
   117a4:	9023      	str	r0, [sp, #140]	; 0x8c
   117a6:	9822      	ldr	r0, [sp, #136]	; 0x88
   117a8:	6800      	ldr	r0, [r0, #0]
   117aa:	9923      	ldr	r1, [sp, #140]	; 0x8c
   117ac:	6809      	ldr	r1, [r1, #0]
   117ae:	4288      	cmp	r0, r1
   117b0:	d101      	bne.n	117b6 <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0xc8>
   117b2:	e7ff      	b.n	117b4 <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0xc6>
    if len == 1 {  //  If writing only 1 byte...
   117b4:	e124      	b.n	11a00 <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x312>
        assert_eq!(rc, 0, "spi fail");  //  TODO: Map to MynewtResult
   117b6:	f64d 403c 	movw	r0, #56380	; 0xdc3c
   117ba:	f2c0 0001 	movt	r0, #1
   117be:	6801      	ldr	r1, [r0, #0]
   117c0:	9822      	ldr	r0, [sp, #136]	; 0x88
   117c2:	9033      	str	r0, [sp, #204]	; 0xcc
   117c4:	9823      	ldr	r0, [sp, #140]	; 0x8c
   117c6:	9034      	str	r0, [sp, #208]	; 0xd0
   117c8:	f64d 7018 	movw	r0, #57112	; 0xdf18
   117cc:	f2c0 0001 	movt	r0, #1
   117d0:	6800      	ldr	r0, [r0, #0]
   117d2:	f64d 425c 	movw	r2, #56412	; 0xdc5c
   117d6:	f2c0 0201 	movt	r2, #1
   117da:	6813      	ldr	r3, [r2, #0]
   117dc:	466a      	mov	r2, sp
   117de:	f04f 0c00 	mov.w	ip, #0
   117e2:	f8c2 c000 	str.w	ip, [r2]
   117e6:	aa35      	add	r2, sp, #212	; 0xd4
   117e8:	f04f 0c01 	mov.w	ip, #1
   117ec:	9016      	str	r0, [sp, #88]	; 0x58
   117ee:	4610      	mov	r0, r2
   117f0:	9a16      	ldr	r2, [sp, #88]	; 0x58
   117f2:	9115      	str	r1, [sp, #84]	; 0x54
   117f4:	4611      	mov	r1, r2
   117f6:	4662      	mov	r2, ip
   117f8:	f7fa fa8a 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
   117fc:	e7ff      	b.n	117fe <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x110>
   117fe:	a833      	add	r0, sp, #204	; 0xcc
   11800:	9030      	str	r0, [sp, #192]	; 0xc0
   11802:	a834      	add	r0, sp, #208	; 0xd0
   11804:	9031      	str	r0, [sp, #196]	; 0xc4
   11806:	a835      	add	r0, sp, #212	; 0xd4
   11808:	9032      	str	r0, [sp, #200]	; 0xc8
   1180a:	9830      	ldr	r0, [sp, #192]	; 0xc0
   1180c:	903b      	str	r0, [sp, #236]	; 0xec
   1180e:	9831      	ldr	r0, [sp, #196]	; 0xc4
   11810:	903c      	str	r0, [sp, #240]	; 0xf0
   11812:	9832      	ldr	r0, [sp, #200]	; 0xc8
   11814:	903d      	str	r0, [sp, #244]	; 0xf4
   11816:	983b      	ldr	r0, [sp, #236]	; 0xec
   11818:	f64b 5189 	movw	r1, #48521	; 0xbd89
   1181c:	f2c0 0100 	movt	r1, #0
   11820:	f7fa fad2 	bl	bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>
   11824:	9014      	str	r0, [sp, #80]	; 0x50
   11826:	9113      	str	r1, [sp, #76]	; 0x4c
   11828:	e7ff      	b.n	1182a <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x13c>
   1182a:	983c      	ldr	r0, [sp, #240]	; 0xf0
   1182c:	f64b 5189 	movw	r1, #48521	; 0xbd89
   11830:	f2c0 0100 	movt	r1, #0
   11834:	f7fa fac8 	bl	bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>
   11838:	9012      	str	r0, [sp, #72]	; 0x48
   1183a:	9111      	str	r1, [sp, #68]	; 0x44
   1183c:	e7ff      	b.n	1183e <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x150>
   1183e:	983d      	ldr	r0, [sp, #244]	; 0xf4
   11840:	f644 71c9 	movw	r1, #20425	; 0x4fc9
   11844:	f2c0 0101 	movt	r1, #1
   11848:	f7fa fafd 	bl	be46 <_ZN4core3fmt10ArgumentV13new17hd6e40bd932949712E>
   1184c:	9010      	str	r0, [sp, #64]	; 0x40
   1184e:	910f      	str	r1, [sp, #60]	; 0x3c
   11850:	e7ff      	b.n	11852 <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x164>
   11852:	9814      	ldr	r0, [sp, #80]	; 0x50
   11854:	902a      	str	r0, [sp, #168]	; 0xa8
   11856:	9913      	ldr	r1, [sp, #76]	; 0x4c
   11858:	912b      	str	r1, [sp, #172]	; 0xac
   1185a:	9a12      	ldr	r2, [sp, #72]	; 0x48
   1185c:	922c      	str	r2, [sp, #176]	; 0xb0
   1185e:	9b11      	ldr	r3, [sp, #68]	; 0x44
   11860:	932d      	str	r3, [sp, #180]	; 0xb4
   11862:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   11866:	f8cd c0b8 	str.w	ip, [sp, #184]	; 0xb8
   1186a:	f8dd e03c 	ldr.w	lr, [sp, #60]	; 0x3c
   1186e:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
   11872:	466c      	mov	r4, sp
   11874:	2503      	movs	r5, #3
   11876:	6025      	str	r5, [r4, #0]
   11878:	a824      	add	r0, sp, #144	; 0x90
   1187a:	ab2a      	add	r3, sp, #168	; 0xa8
   1187c:	9915      	ldr	r1, [sp, #84]	; 0x54
   1187e:	462a      	mov	r2, r5
   11880:	f7fa fa46 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
   11884:	e7ff      	b.n	11886 <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x198>
   11886:	f64d 701c 	movw	r0, #57116	; 0xdf1c
   1188a:	f2c0 0001 	movt	r0, #1
   1188e:	f003 f981 	bl	14b94 <_ZN4core5panic8Location6caller17h63e50e3e41b8f68eE>
   11892:	900e      	str	r0, [sp, #56]	; 0x38
   11894:	e7ff      	b.n	11896 <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x1a8>
   11896:	a824      	add	r0, sp, #144	; 0x90
   11898:	990e      	ldr	r1, [sp, #56]	; 0x38
   1189a:	f003 f9b8 	bl	14c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>
   1189e:	defe      	udf	#254	; 0xfe
            len) };
   118a0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   118a2:	2000      	movs	r0, #0
        let rc = unsafe { hal::hal_spi_txrx_noblock(
   118a4:	900d      	str	r0, [sp, #52]	; 0x34
   118a6:	9919      	ldr	r1, [sp, #100]	; 0x64
   118a8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   118aa:	f005 fdbb 	bl	17424 <hal_spi_txrx_noblock>
   118ae:	903e      	str	r0, [sp, #248]	; 0xf8
   118b0:	e7ff      	b.n	118b2 <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x1c4>
        assert_eq!(rc, 0, "spi fail");  //  TODO: Map to MynewtResult
   118b2:	f64d 30e4 	movw	r0, #56292	; 0xdbe4
   118b6:	f2c0 0001 	movt	r0, #1
   118ba:	6800      	ldr	r0, [r0, #0]
   118bc:	a93e      	add	r1, sp, #248	; 0xf8
   118be:	913f      	str	r1, [sp, #252]	; 0xfc
   118c0:	9040      	str	r0, [sp, #256]	; 0x100
   118c2:	983f      	ldr	r0, [sp, #252]	; 0xfc
   118c4:	9041      	str	r0, [sp, #260]	; 0x104
   118c6:	9840      	ldr	r0, [sp, #256]	; 0x100
   118c8:	9042      	str	r0, [sp, #264]	; 0x108
   118ca:	9841      	ldr	r0, [sp, #260]	; 0x104
   118cc:	6800      	ldr	r0, [r0, #0]
   118ce:	9942      	ldr	r1, [sp, #264]	; 0x108
   118d0:	6809      	ldr	r1, [r1, #0]
   118d2:	4288      	cmp	r0, r1
   118d4:	d10d      	bne.n	118f2 <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x204>
   118d6:	e7ff      	b.n	118d8 <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x1ea>
   118d8:	f247 5030 	movw	r0, #30000	; 0x7530
        let timeout = 30_000;
   118dc:	905d      	str	r0, [sp, #372]	; 0x174
        unsafe { os::os_sem_pend(&mut SPI_SEM, timeout * OS_TICKS_PER_SEC / 1000) };
   118de:	985d      	ldr	r0, [sp, #372]	; 0x174
   118e0:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
   118e4:	fba0 0101 	umull	r0, r1, r0, r1
   118e8:	2900      	cmp	r1, #0
   118ea:	900c      	str	r0, [sp, #48]	; 0x30
   118ec:	f040 8092 	bne.w	11a14 <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x326>
   118f0:	e074      	b.n	119dc <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x2ee>
        assert_eq!(rc, 0, "spi fail");  //  TODO: Map to MynewtResult
   118f2:	f64d 403c 	movw	r0, #56380	; 0xdc3c
   118f6:	f2c0 0001 	movt	r0, #1
   118fa:	6801      	ldr	r1, [r0, #0]
   118fc:	9841      	ldr	r0, [sp, #260]	; 0x104
   118fe:	9052      	str	r0, [sp, #328]	; 0x148
   11900:	9842      	ldr	r0, [sp, #264]	; 0x108
   11902:	9053      	str	r0, [sp, #332]	; 0x14c
   11904:	f64d 7018 	movw	r0, #57112	; 0xdf18
   11908:	f2c0 0001 	movt	r0, #1
   1190c:	6800      	ldr	r0, [r0, #0]
   1190e:	f64d 425c 	movw	r2, #56412	; 0xdc5c
   11912:	f2c0 0201 	movt	r2, #1
   11916:	6813      	ldr	r3, [r2, #0]
   11918:	466a      	mov	r2, sp
   1191a:	f04f 0c00 	mov.w	ip, #0
   1191e:	f8c2 c000 	str.w	ip, [r2]
   11922:	aa54      	add	r2, sp, #336	; 0x150
   11924:	f04f 0c01 	mov.w	ip, #1
   11928:	900b      	str	r0, [sp, #44]	; 0x2c
   1192a:	4610      	mov	r0, r2
   1192c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   1192e:	910a      	str	r1, [sp, #40]	; 0x28
   11930:	4611      	mov	r1, r2
   11932:	4662      	mov	r2, ip
   11934:	f7fa f9ec 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
   11938:	e7ff      	b.n	1193a <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x24c>
   1193a:	a852      	add	r0, sp, #328	; 0x148
   1193c:	904f      	str	r0, [sp, #316]	; 0x13c
   1193e:	a853      	add	r0, sp, #332	; 0x14c
   11940:	9050      	str	r0, [sp, #320]	; 0x140
   11942:	a854      	add	r0, sp, #336	; 0x150
   11944:	9051      	str	r0, [sp, #324]	; 0x144
   11946:	984f      	ldr	r0, [sp, #316]	; 0x13c
   11948:	905a      	str	r0, [sp, #360]	; 0x168
   1194a:	9850      	ldr	r0, [sp, #320]	; 0x140
   1194c:	905b      	str	r0, [sp, #364]	; 0x16c
   1194e:	9851      	ldr	r0, [sp, #324]	; 0x144
   11950:	905c      	str	r0, [sp, #368]	; 0x170
   11952:	985a      	ldr	r0, [sp, #360]	; 0x168
   11954:	f64b 5189 	movw	r1, #48521	; 0xbd89
   11958:	f2c0 0100 	movt	r1, #0
   1195c:	f7fa fa34 	bl	bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>
   11960:	9009      	str	r0, [sp, #36]	; 0x24
   11962:	9108      	str	r1, [sp, #32]
   11964:	e7ff      	b.n	11966 <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x278>
   11966:	985b      	ldr	r0, [sp, #364]	; 0x16c
   11968:	f64b 5189 	movw	r1, #48521	; 0xbd89
   1196c:	f2c0 0100 	movt	r1, #0
   11970:	f7fa fa2a 	bl	bdc8 <_ZN4core3fmt10ArgumentV13new17h4b28c4347f7800caE>
   11974:	9007      	str	r0, [sp, #28]
   11976:	9106      	str	r1, [sp, #24]
   11978:	e7ff      	b.n	1197a <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x28c>
   1197a:	985c      	ldr	r0, [sp, #368]	; 0x170
   1197c:	f644 71c9 	movw	r1, #20425	; 0x4fc9
   11980:	f2c0 0101 	movt	r1, #1
   11984:	f7fa fa5f 	bl	be46 <_ZN4core3fmt10ArgumentV13new17hd6e40bd932949712E>
   11988:	9005      	str	r0, [sp, #20]
   1198a:	9104      	str	r1, [sp, #16]
   1198c:	e7ff      	b.n	1198e <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x2a0>
   1198e:	9809      	ldr	r0, [sp, #36]	; 0x24
   11990:	9049      	str	r0, [sp, #292]	; 0x124
   11992:	9908      	ldr	r1, [sp, #32]
   11994:	914a      	str	r1, [sp, #296]	; 0x128
   11996:	9a07      	ldr	r2, [sp, #28]
   11998:	924b      	str	r2, [sp, #300]	; 0x12c
   1199a:	9b06      	ldr	r3, [sp, #24]
   1199c:	934c      	str	r3, [sp, #304]	; 0x130
   1199e:	f8dd c014 	ldr.w	ip, [sp, #20]
   119a2:	f8cd c134 	str.w	ip, [sp, #308]	; 0x134
   119a6:	f8dd e010 	ldr.w	lr, [sp, #16]
   119aa:	f8cd e138 	str.w	lr, [sp, #312]	; 0x138
   119ae:	466c      	mov	r4, sp
   119b0:	2503      	movs	r5, #3
   119b2:	6025      	str	r5, [r4, #0]
   119b4:	a843      	add	r0, sp, #268	; 0x10c
   119b6:	ab49      	add	r3, sp, #292	; 0x124
   119b8:	990a      	ldr	r1, [sp, #40]	; 0x28
   119ba:	462a      	mov	r2, r5
   119bc:	f7fa f9a8 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
   119c0:	e7ff      	b.n	119c2 <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x2d4>
   119c2:	f64d 702c 	movw	r0, #57132	; 0xdf2c
   119c6:	f2c0 0001 	movt	r0, #1
   119ca:	f003 f8e3 	bl	14b94 <_ZN4core5panic8Location6caller17h63e50e3e41b8f68eE>
   119ce:	9003      	str	r0, [sp, #12]
   119d0:	e7ff      	b.n	119d2 <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x2e4>
   119d2:	a843      	add	r0, sp, #268	; 0x10c
   119d4:	9903      	ldr	r1, [sp, #12]
   119d6:	f003 f91a 	bl	14c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>
   119da:	defe      	udf	#254	; 0xfe
   119dc:	f644 50d3 	movw	r0, #19923	; 0x4dd3
   119e0:	f2c1 0062 	movt	r0, #4194	; 0x1062
        unsafe { os::os_sem_pend(&mut SPI_SEM, timeout * OS_TICKS_PER_SEC / 1000) };
   119e4:	990c      	ldr	r1, [sp, #48]	; 0x30
   119e6:	fba1 0200 	umull	r0, r2, r1, r0
   119ea:	0991      	lsrs	r1, r2, #6
   119ec:	f640 221c 	movw	r2, #2588	; 0xa1c
   119f0:	f2c2 0200 	movt	r2, #8192	; 0x2000
   119f4:	9002      	str	r0, [sp, #8]
   119f6:	4610      	mov	r0, r2
   119f8:	f006 fee0 	bl	187bc <os_sem_pend>
   119fc:	e7ff      	b.n	119fe <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x310>
    if len == 1 {  //  If writing only 1 byte...
   119fe:	e7ff      	b.n	11a00 <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x312>
   11a00:	2019      	movs	r0, #25
   11a02:	2101      	movs	r1, #1
    unsafe { hal::hal_gpio_write(SPI_SS_PIN, 1) };
   11a04:	f005 f80a 	bl	16a1c <hal_gpio_write>
   11a08:	e7ff      	b.n	11a0a <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x31c>
   11a0a:	2000      	movs	r0, #0
    Ok(())
   11a0c:	901d      	str	r0, [sp, #116]	; 0x74
   11a0e:	2001      	movs	r0, #1
   11a10:	901d      	str	r0, [sp, #116]	; 0x74
}
   11a12:	e680      	b.n	11716 <_ZN6mynewt3spi26internal_spi_noblock_write17h2e73fb1a0ca632b8E+0x28>
        unsafe { os::os_sem_pend(&mut SPI_SEM, timeout * OS_TICKS_PER_SEC / 1000) };
   11a14:	f64d 6010 	movw	r0, #56848	; 0xde10
   11a18:	f2c0 0001 	movt	r0, #1
   11a1c:	f64d 723c 	movw	r2, #57148	; 0xdf3c
   11a20:	f2c0 0201 	movt	r2, #1
   11a24:	2121      	movs	r1, #33	; 0x21
   11a26:	f003 f8bc 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   11a2a:	defe      	udf	#254	; 0xfe

00011a2c <_ZN6mynewt3spi19spi_noblock_handler17hcdf172f93eaae99aE>:

/// Called by interrupt handler after Non-blocking SPI transfer has completed
extern "C" fn spi_noblock_handler(_arg: Ptr, _len: i32) {
   11a2c:	b5b0      	push	{r4, r5, r7, lr}
   11a2e:	b0ac      	sub	sp, #176	; 0xb0
   11a30:	900b      	str	r0, [sp, #44]	; 0x2c
   11a32:	910c      	str	r1, [sp, #48]	; 0x30
    //  Signal to internal_spi_noblock_write() that SPI request has been completed.
    let rc = unsafe { os::os_sem_release(&mut SPI_SEM) };
   11a34:	f640 201c 	movw	r0, #2588	; 0xa1c
   11a38:	f2c2 0000 	movt	r0, #8192	; 0x2000
   11a3c:	f006 fe8c 	bl	18758 <os_sem_release>
   11a40:	900d      	str	r0, [sp, #52]	; 0x34
   11a42:	e7ff      	b.n	11a44 <_ZN6mynewt3spi19spi_noblock_handler17hcdf172f93eaae99aE+0x18>
    assert_eq!(rc, 0, "sem fail");
   11a44:	f64d 30e4 	movw	r0, #56292	; 0xdbe4
   11a48:	f2c0 0001 	movt	r0, #1
   11a4c:	6800      	ldr	r0, [r0, #0]
   11a4e:	a90d      	add	r1, sp, #52	; 0x34
   11a50:	910e      	str	r1, [sp, #56]	; 0x38
   11a52:	900f      	str	r0, [sp, #60]	; 0x3c
   11a54:	980e      	ldr	r0, [sp, #56]	; 0x38
   11a56:	9010      	str	r0, [sp, #64]	; 0x40
   11a58:	980f      	ldr	r0, [sp, #60]	; 0x3c
   11a5a:	9011      	str	r0, [sp, #68]	; 0x44
   11a5c:	9810      	ldr	r0, [sp, #64]	; 0x40
   11a5e:	6800      	ldr	r0, [r0, #0]
   11a60:	9911      	ldr	r1, [sp, #68]	; 0x44
   11a62:	6809      	ldr	r1, [r1, #0]
   11a64:	4288      	cmp	r0, r1
   11a66:	d102      	bne.n	11a6e <_ZN6mynewt3spi19spi_noblock_handler17hcdf172f93eaae99aE+0x42>
   11a68:	e7ff      	b.n	11a6a <_ZN6mynewt3spi19spi_noblock_handler17hcdf172f93eaae99aE+0x3e>
}
   11a6a:	b02c      	add	sp, #176	; 0xb0
   11a6c:	bdb0      	pop	{r4, r5, r7, pc}
    assert_eq!(rc, 0, "sem fail");
   11a6e:	f64d 403c 	movw	r0, #56380	; 0xdc3c
   11a72:	f2c0 0001 	movt	r0, #1
   11a76:	6801      	ldr	r1, [r0, #0]
   11a78:	9810      	ldr	r0, [sp, #64]	; 0x40
   11a7a:	9021      	str	r0, [sp, #132]	; 0x84
   11a7c:	9811      	ldr	r0, [sp, #68]	; 0x44
   11a7e:	9022      	str	r0, [sp, #136]	; 0x88
   11a80:	f64d 5054 	movw	r0, #56660	; 0xdd54
   11a84:	f2c0 0001 	movt	r0, #1
   11a88:	6800      	ldr	r0, [r0, #0]
   11a8a:	f64d 425c 	movw	r2, #56412	; 0xdc5c
   11a8e:	f2c0 0201 	movt	r2, #1
   11a92:	6813      	ldr	r3, [r2, #0]
   11a94:	466a      	mov	r2, sp
   11a96:	f04f 0c00 	mov.w	ip, #0
   11a9a:	f8c2 c000 	str.w	ip, [r2]
   11a9e:	aa23      	add	r2, sp, #140	; 0x8c
   11aa0:	f04f 0c01 	mov.w	ip, #1
   11aa4:	900a      	str	r0, [sp, #40]	; 0x28
   11aa6:	4610      	mov	r0, r2
   11aa8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   11aaa:	9109      	str	r1, [sp, #36]	; 0x24
   11aac:	4611      	mov	r1, r2
   11aae:	4662      	mov	r2, ip
   11ab0:	f7fa f92e 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
   11ab4:	e7ff      	b.n	11ab6 <_ZN6mynewt3spi19spi_noblock_handler17hcdf172f93eaae99aE+0x8a>
   11ab6:	a821      	add	r0, sp, #132	; 0x84
   11ab8:	901e      	str	r0, [sp, #120]	; 0x78
   11aba:	a822      	add	r0, sp, #136	; 0x88
   11abc:	901f      	str	r0, [sp, #124]	; 0x7c
   11abe:	a823      	add	r0, sp, #140	; 0x8c
   11ac0:	9020      	str	r0, [sp, #128]	; 0x80
   11ac2:	981e      	ldr	r0, [sp, #120]	; 0x78
   11ac4:	9029      	str	r0, [sp, #164]	; 0xa4
   11ac6:	981f      	ldr	r0, [sp, #124]	; 0x7c
   11ac8:	902a      	str	r0, [sp, #168]	; 0xa8
   11aca:	9820      	ldr	r0, [sp, #128]	; 0x80
   11acc:	902b      	str	r0, [sp, #172]	; 0xac
   11ace:	9829      	ldr	r0, [sp, #164]	; 0xa4
   11ad0:	f64b 5169 	movw	r1, #48489	; 0xbd69
   11ad4:	f2c0 0100 	movt	r1, #0
   11ad8:	f7fa f9a0 	bl	be1c <_ZN4core3fmt10ArgumentV13new17h93c5bc3c3358d946E>
   11adc:	9008      	str	r0, [sp, #32]
   11ade:	9107      	str	r1, [sp, #28]
   11ae0:	e7ff      	b.n	11ae2 <_ZN6mynewt3spi19spi_noblock_handler17hcdf172f93eaae99aE+0xb6>
   11ae2:	982a      	ldr	r0, [sp, #168]	; 0xa8
   11ae4:	f64b 5169 	movw	r1, #48489	; 0xbd69
   11ae8:	f2c0 0100 	movt	r1, #0
   11aec:	f7fa f996 	bl	be1c <_ZN4core3fmt10ArgumentV13new17h93c5bc3c3358d946E>
   11af0:	9006      	str	r0, [sp, #24]
   11af2:	9105      	str	r1, [sp, #20]
   11af4:	e7ff      	b.n	11af6 <_ZN6mynewt3spi19spi_noblock_handler17hcdf172f93eaae99aE+0xca>
   11af6:	982b      	ldr	r0, [sp, #172]	; 0xac
   11af8:	f644 71c9 	movw	r1, #20425	; 0x4fc9
   11afc:	f2c0 0101 	movt	r1, #1
   11b00:	f7fa f9a1 	bl	be46 <_ZN4core3fmt10ArgumentV13new17hd6e40bd932949712E>
   11b04:	9004      	str	r0, [sp, #16]
   11b06:	9103      	str	r1, [sp, #12]
   11b08:	e7ff      	b.n	11b0a <_ZN6mynewt3spi19spi_noblock_handler17hcdf172f93eaae99aE+0xde>
   11b0a:	9808      	ldr	r0, [sp, #32]
   11b0c:	9018      	str	r0, [sp, #96]	; 0x60
   11b0e:	9907      	ldr	r1, [sp, #28]
   11b10:	9119      	str	r1, [sp, #100]	; 0x64
   11b12:	9a06      	ldr	r2, [sp, #24]
   11b14:	921a      	str	r2, [sp, #104]	; 0x68
   11b16:	9b05      	ldr	r3, [sp, #20]
   11b18:	931b      	str	r3, [sp, #108]	; 0x6c
   11b1a:	f8dd c010 	ldr.w	ip, [sp, #16]
   11b1e:	f8cd c070 	str.w	ip, [sp, #112]	; 0x70
   11b22:	f8dd e00c 	ldr.w	lr, [sp, #12]
   11b26:	f8cd e074 	str.w	lr, [sp, #116]	; 0x74
   11b2a:	466c      	mov	r4, sp
   11b2c:	2503      	movs	r5, #3
   11b2e:	6025      	str	r5, [r4, #0]
   11b30:	a812      	add	r0, sp, #72	; 0x48
   11b32:	ab18      	add	r3, sp, #96	; 0x60
   11b34:	9909      	ldr	r1, [sp, #36]	; 0x24
   11b36:	462a      	mov	r2, r5
   11b38:	f7fa f8ea 	bl	bd10 <_ZN4core3fmt9Arguments6new_v117h8933f0cfa6712b43E>
   11b3c:	e7ff      	b.n	11b3e <_ZN6mynewt3spi19spi_noblock_handler17hcdf172f93eaae99aE+0x112>
   11b3e:	f64d 704c 	movw	r0, #57164	; 0xdf4c
   11b42:	f2c0 0001 	movt	r0, #1
   11b46:	f003 f825 	bl	14b94 <_ZN4core5panic8Location6caller17h63e50e3e41b8f68eE>
   11b4a:	9002      	str	r0, [sp, #8]
   11b4c:	e7ff      	b.n	11b4e <_ZN6mynewt3spi19spi_noblock_handler17hcdf172f93eaae99aE+0x122>
   11b4e:	a812      	add	r0, sp, #72	; 0x48
   11b50:	9902      	ldr	r1, [sp, #8]
   11b52:	f003 f85c 	bl	14c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>
   11b56:	defe      	udf	#254	; 0xfe

00011b58 <_ZN6mynewt3spi8delay_ms17h72c5917ddd9111a5E>:

/// Sleep for the specified number of milliseconds
fn delay_ms(ms: u8) {
   11b58:	b580      	push	{r7, lr}
   11b5a:	b084      	sub	sp, #16
   11b5c:	4601      	mov	r1, r0
   11b5e:	f88d 000b 	strb.w	r0, [sp, #11]
    let delay_ticks = (ms as u32) * OS_TICKS_PER_SEC / 1000;
   11b62:	f89d 000b 	ldrb.w	r0, [sp, #11]
   11b66:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   11b6a:	fba0 0202 	umull	r0, r2, r0, r2
   11b6e:	2a00      	cmp	r2, #0
   11b70:	9001      	str	r0, [sp, #4]
   11b72:	d111      	bne.n	11b98 <_ZN6mynewt3spi8delay_ms17h72c5917ddd9111a5E+0x40>
   11b74:	e7ff      	b.n	11b76 <_ZN6mynewt3spi8delay_ms17h72c5917ddd9111a5E+0x1e>
   11b76:	f644 50d3 	movw	r0, #19923	; 0x4dd3
   11b7a:	f2c1 0062 	movt	r0, #4194	; 0x1062
   11b7e:	9901      	ldr	r1, [sp, #4]
   11b80:	fba1 0200 	umull	r0, r2, r1, r0
   11b84:	0992      	lsrs	r2, r2, #6
   11b86:	9203      	str	r2, [sp, #12]
    unsafe { os::os_time_delay(delay_ticks) };
   11b88:	9a03      	ldr	r2, [sp, #12]
   11b8a:	9000      	str	r0, [sp, #0]
   11b8c:	4610      	mov	r0, r2
   11b8e:	f006 ff63 	bl	18a58 <os_time_delay>
   11b92:	e7ff      	b.n	11b94 <_ZN6mynewt3spi8delay_ms17h72c5917ddd9111a5E+0x3c>
}
   11b94:	b004      	add	sp, #16
   11b96:	bd80      	pop	{r7, pc}
    let delay_ticks = (ms as u32) * OS_TICKS_PER_SEC / 1000;
   11b98:	f64d 6010 	movw	r0, #56848	; 0xde10
   11b9c:	f2c0 0001 	movt	r0, #1
   11ba0:	f64d 725c 	movw	r2, #57180	; 0xdf5c
   11ba4:	f2c0 0201 	movt	r2, #1
   11ba8:	2121      	movs	r1, #33	; 0x21
   11baa:	f002 fffa 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   11bae:	defe      	udf	#254	; 0xfe

00011bb0 <_ZN70_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h25529cf37f25b753E>:
impl<T, N> Clone for Vec<T, N>
where
    N: ArrayLength<T>,
    T: Clone,
{
    fn clone(&self) -> Self {
   11bb0:	b580      	push	{r7, lr}
   11bb2:	b09c      	sub	sp, #112	; 0x70
   11bb4:	9101      	str	r1, [sp, #4]
        Vec(self.0.clone())
   11bb6:	9901      	ldr	r1, [sp, #4]
   11bb8:	aa02      	add	r2, sp, #8
   11bba:	9000      	str	r0, [sp, #0]
   11bbc:	4610      	mov	r0, r2
   11bbe:	f001 fc01 	bl	133c4 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clone17hd0a55affb7a814dfE>
   11bc2:	e7ff      	b.n	11bc4 <_ZN70_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h25529cf37f25b753E+0x14>
   11bc4:	a902      	add	r1, sp, #8
   11bc6:	2268      	movs	r2, #104	; 0x68
   11bc8:	9800      	ldr	r0, [sp, #0]
   11bca:	f009 f98d 	bl	1aee8 <__aeabi_memcpy>
    }
   11bce:	b01c      	add	sp, #112	; 0x70
   11bd0:	bd80      	pop	{r7, pc}

00011bd2 <_ZN70_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hca8a7b49119f2322E>:
    fn clone(&self) -> Self {
   11bd2:	b580      	push	{r7, lr}
   11bd4:	b0b6      	sub	sp, #216	; 0xd8
   11bd6:	9102      	str	r1, [sp, #8]
        Vec(self.0.clone())
   11bd8:	9902      	ldr	r1, [sp, #8]
   11bda:	aa03      	add	r2, sp, #12
   11bdc:	9001      	str	r0, [sp, #4]
   11bde:	4610      	mov	r0, r2
   11be0:	f001 fbc9 	bl	13376 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clone17h332c8b5925589cb8E>
   11be4:	e7ff      	b.n	11be6 <_ZN70_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hca8a7b49119f2322E+0x14>
   11be6:	a903      	add	r1, sp, #12
   11be8:	22cc      	movs	r2, #204	; 0xcc
   11bea:	9801      	ldr	r0, [sp, #4]
   11bec:	f009 f97c 	bl	1aee8 <__aeabi_memcpy>
    }
   11bf0:	b036      	add	sp, #216	; 0xd8
   11bf2:	bd80      	pop	{r7, pc}

00011bf4 <_ZN73_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5669767cff00bda9E>:

impl<T, N> Drop for Vec<T, N>
where
    N: ArrayLength<T>,
{
    fn drop(&mut self) {
   11bf4:	b580      	push	{r7, lr}
   11bf6:	b088      	sub	sp, #32
   11bf8:	9004      	str	r0, [sp, #16]
        unsafe { ptr::drop_in_place(&mut self[..]) }
   11bfa:	9804      	ldr	r0, [sp, #16]
   11bfc:	f000 f861 	bl	11cc2 <_ZN78_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h3af65208eee74861E>
   11c00:	9003      	str	r0, [sp, #12]
   11c02:	9102      	str	r1, [sp, #8]
   11c04:	e7ff      	b.n	11c06 <_ZN73_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5669767cff00bda9E+0x12>
   11c06:	9803      	ldr	r0, [sp, #12]
   11c08:	9902      	ldr	r1, [sp, #8]
   11c0a:	f000 fa96 	bl	1213a <_ZN4core5slice77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hb9ee6c104d654751E>
   11c0e:	9001      	str	r0, [sp, #4]
   11c10:	9100      	str	r1, [sp, #0]
   11c12:	e7ff      	b.n	11c14 <_ZN73_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5669767cff00bda9E+0x20>
   11c14:	9801      	ldr	r0, [sp, #4]
   11c16:	9006      	str	r0, [sp, #24]
   11c18:	9900      	ldr	r1, [sp, #0]
   11c1a:	9107      	str	r1, [sp, #28]
   11c1c:	e7ff      	b.n	11c1e <_ZN73_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5669767cff00bda9E+0x2a>
    }
   11c1e:	b008      	add	sp, #32
   11c20:	bd80      	pop	{r7, pc}

00011c22 <_ZN73_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hadf269ac769c1fe1E>:
    fn drop(&mut self) {
   11c22:	b580      	push	{r7, lr}
   11c24:	b088      	sub	sp, #32
   11c26:	9004      	str	r0, [sp, #16]
        unsafe { ptr::drop_in_place(&mut self[..]) }
   11c28:	9804      	ldr	r0, [sp, #16]
   11c2a:	f000 f857 	bl	11cdc <_ZN78_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hba8c06863fbd064eE>
   11c2e:	9003      	str	r0, [sp, #12]
   11c30:	9102      	str	r1, [sp, #8]
   11c32:	e7ff      	b.n	11c34 <_ZN73_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hadf269ac769c1fe1E+0x12>
   11c34:	9803      	ldr	r0, [sp, #12]
   11c36:	9902      	ldr	r1, [sp, #8]
   11c38:	f000 fa7f 	bl	1213a <_ZN4core5slice77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hb9ee6c104d654751E>
   11c3c:	9001      	str	r0, [sp, #4]
   11c3e:	9100      	str	r1, [sp, #0]
   11c40:	e7ff      	b.n	11c42 <_ZN73_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hadf269ac769c1fe1E+0x20>
   11c42:	9801      	ldr	r0, [sp, #4]
   11c44:	9006      	str	r0, [sp, #24]
   11c46:	9900      	ldr	r1, [sp, #0]
   11c48:	9107      	str	r1, [sp, #28]
   11c4a:	e7ff      	b.n	11c4c <_ZN73_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hadf269ac769c1fe1E+0x2a>
    }
   11c4c:	b008      	add	sp, #32
   11c4e:	bd80      	pop	{r7, pc}

00011c50 <_ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6f8a869eff6f2bb3E>:
where
    N: ArrayLength<T>,
{
    type Target = [T];

    fn deref(&self) -> &[T] {
   11c50:	b580      	push	{r7, lr}
   11c52:	b084      	sub	sp, #16
   11c54:	9003      	str	r0, [sp, #12]
        self.0.as_slice()
   11c56:	9803      	ldr	r0, [sp, #12]
   11c58:	f001 fbdb 	bl	13412 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8as_slice17h94be6718d312c771E>
   11c5c:	9002      	str	r0, [sp, #8]
   11c5e:	9101      	str	r1, [sp, #4]
   11c60:	e7ff      	b.n	11c62 <_ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6f8a869eff6f2bb3E+0x12>
    }
   11c62:	9802      	ldr	r0, [sp, #8]
   11c64:	9901      	ldr	r1, [sp, #4]
   11c66:	b004      	add	sp, #16
   11c68:	bd80      	pop	{r7, pc}

00011c6a <_ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc8240d65537f11c4E>:
    fn deref(&self) -> &[T] {
   11c6a:	b580      	push	{r7, lr}
   11c6c:	b084      	sub	sp, #16
   11c6e:	9003      	str	r0, [sp, #12]
        self.0.as_slice()
   11c70:	9803      	ldr	r0, [sp, #12]
   11c72:	f001 fbe5 	bl	13440 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8as_slice17hd2887c0af1cc9236E>
   11c76:	9002      	str	r0, [sp, #8]
   11c78:	9101      	str	r1, [sp, #4]
   11c7a:	e7ff      	b.n	11c7c <_ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc8240d65537f11c4E+0x12>
    }
   11c7c:	9802      	ldr	r0, [sp, #8]
   11c7e:	9901      	ldr	r1, [sp, #4]
   11c80:	b004      	add	sp, #16
   11c82:	bd80      	pop	{r7, pc}

00011c84 <_ZN78_$LT$heapless..vec..IntoIter$LT$T$C$N$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he92b3e577649ec65E>:
    fn drop(&mut self) {
   11c84:	b580      	push	{r7, lr}
   11c86:	b088      	sub	sp, #32
   11c88:	9004      	str	r0, [sp, #16]
            ptr::drop_in_place(&mut self.vec[self.next..]);
   11c8a:	9804      	ldr	r0, [sp, #16]
   11c8c:	f000 f826 	bl	11cdc <_ZN78_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hba8c06863fbd064eE>
   11c90:	9003      	str	r0, [sp, #12]
   11c92:	9102      	str	r1, [sp, #8]
   11c94:	e7ff      	b.n	11c96 <_ZN78_$LT$heapless..vec..IntoIter$LT$T$C$N$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he92b3e577649ec65E+0x12>
   11c96:	9804      	ldr	r0, [sp, #16]
   11c98:	f8d0 00cc 	ldr.w	r0, [r0, #204]	; 0xcc
   11c9c:	9005      	str	r0, [sp, #20]
   11c9e:	9a05      	ldr	r2, [sp, #20]
   11ca0:	9803      	ldr	r0, [sp, #12]
   11ca2:	9902      	ldr	r1, [sp, #8]
   11ca4:	f000 fa38 	bl	12118 <_ZN4core5slice77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h938af987543fab79E>
   11ca8:	9001      	str	r0, [sp, #4]
   11caa:	9100      	str	r1, [sp, #0]
   11cac:	e7ff      	b.n	11cae <_ZN78_$LT$heapless..vec..IntoIter$LT$T$C$N$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he92b3e577649ec65E+0x2a>
   11cae:	9801      	ldr	r0, [sp, #4]
   11cb0:	9006      	str	r0, [sp, #24]
   11cb2:	9900      	ldr	r1, [sp, #0]
   11cb4:	9107      	str	r1, [sp, #28]
   11cb6:	e7ff      	b.n	11cb8 <_ZN78_$LT$heapless..vec..IntoIter$LT$T$C$N$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he92b3e577649ec65E+0x34>
            self.vec.0.len = 0;
   11cb8:	9804      	ldr	r0, [sp, #16]
   11cba:	2100      	movs	r1, #0
   11cbc:	6001      	str	r1, [r0, #0]
    }
   11cbe:	b008      	add	sp, #32
   11cc0:	bd80      	pop	{r7, pc}

00011cc2 <_ZN78_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h3af65208eee74861E>:

impl<T, N> ops::DerefMut for Vec<T, N>
where
    N: ArrayLength<T>,
{
    fn deref_mut(&mut self) -> &mut [T] {
   11cc2:	b580      	push	{r7, lr}
   11cc4:	b084      	sub	sp, #16
   11cc6:	9003      	str	r0, [sp, #12]
        self.0.as_mut_slice()
   11cc8:	9803      	ldr	r0, [sp, #12]
   11cca:	f001 f9c4 	bl	13056 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$12as_mut_slice17hd7a3ad965fa56823E>
   11cce:	9002      	str	r0, [sp, #8]
   11cd0:	9101      	str	r1, [sp, #4]
   11cd2:	e7ff      	b.n	11cd4 <_ZN78_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h3af65208eee74861E+0x12>
    }
   11cd4:	9802      	ldr	r0, [sp, #8]
   11cd6:	9901      	ldr	r1, [sp, #4]
   11cd8:	b004      	add	sp, #16
   11cda:	bd80      	pop	{r7, pc}

00011cdc <_ZN78_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hba8c06863fbd064eE>:
    fn deref_mut(&mut self) -> &mut [T] {
   11cdc:	b580      	push	{r7, lr}
   11cde:	b084      	sub	sp, #16
   11ce0:	9003      	str	r0, [sp, #12]
        self.0.as_mut_slice()
   11ce2:	9803      	ldr	r0, [sp, #12]
   11ce4:	f001 f9a0 	bl	13028 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$12as_mut_slice17h423181f0fc191f3bE>
   11ce8:	9002      	str	r0, [sp, #8]
   11cea:	9101      	str	r1, [sp, #4]
   11cec:	e7ff      	b.n	11cee <_ZN78_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hba8c06863fbd064eE+0x12>
    }
   11cee:	9802      	ldr	r0, [sp, #8]
   11cf0:	9901      	ldr	r1, [sp, #4]
   11cf2:	b004      	add	sp, #16
   11cf4:	bd80      	pop	{r7, pc}

00011cf6 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$17extend_from_slice17h03dd1eb3e64396cdE>:
    pub fn extend_from_slice(&mut self, other: &[T]) -> Result<(), ()>
   11cf6:	b580      	push	{r7, lr}
   11cf8:	b084      	sub	sp, #16
   11cfa:	9001      	str	r0, [sp, #4]
   11cfc:	9102      	str	r1, [sp, #8]
   11cfe:	9203      	str	r2, [sp, #12]
        self.0.extend_from_slice(other)
   11d00:	9801      	ldr	r0, [sp, #4]
   11d02:	9902      	ldr	r1, [sp, #8]
   11d04:	9a03      	ldr	r2, [sp, #12]
   11d06:	f001 fa25 	bl	13154 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h779f12bc5c972a6aE>
   11d0a:	9000      	str	r0, [sp, #0]
   11d0c:	e7ff      	b.n	11d0e <_ZN8heapless3vec16Vec$LT$T$C$N$GT$17extend_from_slice17h03dd1eb3e64396cdE+0x18>
    }
   11d0e:	9800      	ldr	r0, [sp, #0]
   11d10:	f000 0001 	and.w	r0, r0, #1
   11d14:	b004      	add	sp, #16
   11d16:	bd80      	pop	{r7, pc}

00011d18 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$3new17h34731c8dc462e1a2E>:
    pub fn new() -> Self {
   11d18:	b580      	push	{r7, lr}
   11d1a:	b0b4      	sub	sp, #208	; 0xd0
   11d1c:	a901      	add	r1, sp, #4
        Vec(crate::i::Vec::new())
   11d1e:	9000      	str	r0, [sp, #0]
   11d20:	4608      	mov	r0, r1
   11d22:	f001 f963 	bl	12fec <_ZN8heapless3vec43_$LT$impl$u20$heapless..i..Vec$LT$A$GT$$GT$3new17h04e2eec77c4dd0eaE>
   11d26:	e7ff      	b.n	11d28 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$3new17h34731c8dc462e1a2E+0x10>
   11d28:	a901      	add	r1, sp, #4
   11d2a:	22cc      	movs	r2, #204	; 0xcc
   11d2c:	9800      	ldr	r0, [sp, #0]
   11d2e:	f009 f8db 	bl	1aee8 <__aeabi_memcpy>
    }
   11d32:	b034      	add	sp, #208	; 0xd0
   11d34:	bd80      	pop	{r7, pc}

00011d36 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$3new17h538fc545c007851eE>:
    pub fn new() -> Self {
   11d36:	b580      	push	{r7, lr}
   11d38:	b09c      	sub	sp, #112	; 0x70
   11d3a:	a902      	add	r1, sp, #8
        Vec(crate::i::Vec::new())
   11d3c:	9001      	str	r0, [sp, #4]
   11d3e:	4608      	mov	r0, r1
   11d40:	f001 f963 	bl	1300a <_ZN8heapless3vec43_$LT$impl$u20$heapless..i..Vec$LT$A$GT$$GT$3new17hf28c8bb9ce5859bfE>
   11d44:	e7ff      	b.n	11d46 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$3new17h538fc545c007851eE+0x10>
   11d46:	a902      	add	r1, sp, #8
   11d48:	2268      	movs	r2, #104	; 0x68
   11d4a:	9801      	ldr	r0, [sp, #4]
   11d4c:	f009 f8cc 	bl	1aee8 <__aeabi_memcpy>
    }
   11d50:	b01c      	add	sp, #112	; 0x70
   11d52:	bd80      	pop	{r7, pc}

00011d54 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$4push17h7bde6d5f42a64645E>:
    pub fn push(&mut self, item: T) -> Result<(), T> {
   11d54:	b580      	push	{r7, lr}
   11d56:	b086      	sub	sp, #24
   11d58:	460a      	mov	r2, r1
   11d5a:	9004      	str	r0, [sp, #16]
   11d5c:	f8ad 1016 	strh.w	r1, [sp, #22]
        self.0.push(item)
   11d60:	9804      	ldr	r0, [sp, #16]
   11d62:	f8bd 1016 	ldrh.w	r1, [sp, #22]
   11d66:	9203      	str	r2, [sp, #12]
   11d68:	f001 fac6 	bl	132f8 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$4push17h754f60661e90a90bE>
   11d6c:	9002      	str	r0, [sp, #8]
   11d6e:	9101      	str	r1, [sp, #4]
   11d70:	e7ff      	b.n	11d72 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$4push17h7bde6d5f42a64645E+0x1e>
    }
   11d72:	9802      	ldr	r0, [sp, #8]
   11d74:	9901      	ldr	r1, [sp, #4]
   11d76:	b006      	add	sp, #24
   11d78:	bd80      	pop	{r7, pc}

00011d7a <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17h345da7541567fd72E>:
    pub fn clear(&mut self) {
   11d7a:	b580      	push	{r7, lr}
   11d7c:	b082      	sub	sp, #8
   11d7e:	9001      	str	r0, [sp, #4]
        self.0.clear()
   11d80:	9801      	ldr	r0, [sp, #4]
   11d82:	f001 fae4 	bl	1334e <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clear17h08f42ada9e8c2da3E>
   11d86:	e7ff      	b.n	11d88 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17h345da7541567fd72E+0xe>
    }
   11d88:	b002      	add	sp, #8
   11d8a:	bd80      	pop	{r7, pc}

00011d8c <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17hfc6c59a7d142150bE>:
    pub fn clear(&mut self) {
   11d8c:	b580      	push	{r7, lr}
   11d8e:	b082      	sub	sp, #8
   11d90:	9001      	str	r0, [sp, #4]
        self.0.clear()
   11d92:	9801      	ldr	r0, [sp, #4]
   11d94:	f001 fae5 	bl	13362 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clear17h53693887508266c2E>
   11d98:	e7ff      	b.n	11d9a <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17hfc6c59a7d142150bE+0xe>
    }
   11d9a:	b002      	add	sp, #8
   11d9c:	bd80      	pop	{r7, pc}

00011d9e <_ZN93_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hde6c4b3aab66bceaE>:
    fn into_iter(self) -> Self::IntoIter {
   11d9e:	b580      	push	{r7, lr}
   11da0:	b0b6      	sub	sp, #216	; 0xd8
   11da2:	aa03      	add	r2, sp, #12
   11da4:	23cc      	movs	r3, #204	; 0xcc
        IntoIter { vec: self, next: 0 }
   11da6:	9002      	str	r0, [sp, #8]
   11da8:	4610      	mov	r0, r2
   11daa:	9201      	str	r2, [sp, #4]
   11dac:	461a      	mov	r2, r3
   11dae:	9300      	str	r3, [sp, #0]
   11db0:	f009 f89a 	bl	1aee8 <__aeabi_memcpy>
   11db4:	9802      	ldr	r0, [sp, #8]
   11db6:	9901      	ldr	r1, [sp, #4]
   11db8:	9a00      	ldr	r2, [sp, #0]
   11dba:	f009 f895 	bl	1aee8 <__aeabi_memcpy>
   11dbe:	2000      	movs	r0, #0
   11dc0:	9902      	ldr	r1, [sp, #8]
   11dc2:	f8c1 00cc 	str.w	r0, [r1, #204]	; 0xcc
    }
   11dc6:	b036      	add	sp, #216	; 0xd8
   11dc8:	bd80      	pop	{r7, pc}

00011dca <_ZN95_$LT$heapless..vec..IntoIter$LT$T$C$N$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6bac9bf84e5ace24E>:
    fn next(&mut self) -> Option<Self::Item> {
   11dca:	b580      	push	{r7, lr}
   11dcc:	b08c      	sub	sp, #48	; 0x30
   11dce:	9007      	str	r0, [sp, #28]
        if self.next < self.vec.len() {
   11dd0:	9807      	ldr	r0, [sp, #28]
   11dd2:	f8d0 10cc 	ldr.w	r1, [r0, #204]	; 0xcc
   11dd6:	9106      	str	r1, [sp, #24]
   11dd8:	f7ff ff47 	bl	11c6a <_ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hc8240d65537f11c4E>
   11ddc:	9005      	str	r0, [sp, #20]
   11dde:	9104      	str	r1, [sp, #16]
   11de0:	e7ff      	b.n	11de2 <_ZN95_$LT$heapless..vec..IntoIter$LT$T$C$N$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6bac9bf84e5ace24E+0x18>
   11de2:	9805      	ldr	r0, [sp, #20]
   11de4:	9904      	ldr	r1, [sp, #16]
   11de6:	f000 f93e 	bl	12066 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hec67cb8a299117cdE>
   11dea:	9003      	str	r0, [sp, #12]
   11dec:	e7ff      	b.n	11dee <_ZN95_$LT$heapless..vec..IntoIter$LT$T$C$N$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6bac9bf84e5ace24E+0x24>
   11dee:	9806      	ldr	r0, [sp, #24]
   11df0:	9903      	ldr	r1, [sp, #12]
   11df2:	4288      	cmp	r0, r1
   11df4:	d304      	bcc.n	11e00 <_ZN95_$LT$heapless..vec..IntoIter$LT$T$C$N$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6bac9bf84e5ace24E+0x36>
   11df6:	e7ff      	b.n	11df8 <_ZN95_$LT$heapless..vec..IntoIter$LT$T$C$N$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6bac9bf84e5ace24E+0x2e>
   11df8:	2000      	movs	r0, #0
            None
   11dfa:	f8ad 0020 	strh.w	r0, [sp, #32]
        if self.next < self.vec.len() {
   11dfe:	e02a      	b.n	11e56 <_ZN95_$LT$heapless..vec..IntoIter$LT$T$C$N$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6bac9bf84e5ace24E+0x8c>
                (self.vec.0.buffer.as_ptr() as *const T)
   11e00:	9807      	ldr	r0, [sp, #28]
   11e02:	3004      	adds	r0, #4
   11e04:	900a      	str	r0, [sp, #40]	; 0x28
   11e06:	980a      	ldr	r0, [sp, #40]	; 0x28
   11e08:	900b      	str	r0, [sp, #44]	; 0x2c
   11e0a:	980b      	ldr	r0, [sp, #44]	; 0x2c
   11e0c:	9002      	str	r0, [sp, #8]
   11e0e:	e7ff      	b.n	11e10 <_ZN95_$LT$heapless..vec..IntoIter$LT$T$C$N$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6bac9bf84e5ace24E+0x46>
                    .add(self.next)
   11e10:	9807      	ldr	r0, [sp, #28]
   11e12:	f8d0 10cc 	ldr.w	r1, [r0, #204]	; 0xcc
                (self.vec.0.buffer.as_ptr() as *const T)
   11e16:	9802      	ldr	r0, [sp, #8]
   11e18:	f001 f8ab 	bl	12f72 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h3fb04b13b5ec248cE>
   11e1c:	9001      	str	r0, [sp, #4]
   11e1e:	e7ff      	b.n	11e20 <_ZN95_$LT$heapless..vec..IntoIter$LT$T$C$N$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6bac9bf84e5ace24E+0x56>
   11e20:	9801      	ldr	r0, [sp, #4]
   11e22:	f001 f8b3 	bl	12f8c <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4read17ha30847483b011195E>
   11e26:	f8ad 0026 	strh.w	r0, [sp, #38]	; 0x26
   11e2a:	e7ff      	b.n	11e2c <_ZN95_$LT$heapless..vec..IntoIter$LT$T$C$N$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6bac9bf84e5ace24E+0x62>
            self.next += 1;
   11e2c:	9807      	ldr	r0, [sp, #28]
   11e2e:	f8d0 00cc 	ldr.w	r0, [r0, #204]	; 0xcc
   11e32:	1c41      	adds	r1, r0, #1
   11e34:	460a      	mov	r2, r1
   11e36:	4281      	cmp	r1, r0
   11e38:	9200      	str	r2, [sp, #0]
   11e3a:	d312      	bcc.n	11e62 <_ZN95_$LT$heapless..vec..IntoIter$LT$T$C$N$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6bac9bf84e5ace24E+0x98>
   11e3c:	e7ff      	b.n	11e3e <_ZN95_$LT$heapless..vec..IntoIter$LT$T$C$N$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6bac9bf84e5ace24E+0x74>
   11e3e:	9807      	ldr	r0, [sp, #28]
   11e40:	9900      	ldr	r1, [sp, #0]
   11e42:	f8c0 10cc 	str.w	r1, [r0, #204]	; 0xcc
            Some(item)
   11e46:	f8bd 0026 	ldrh.w	r0, [sp, #38]	; 0x26
   11e4a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
   11e4e:	2001      	movs	r0, #1
   11e50:	f8ad 0020 	strh.w	r0, [sp, #32]
        if self.next < self.vec.len() {
   11e54:	e7ff      	b.n	11e56 <_ZN95_$LT$heapless..vec..IntoIter$LT$T$C$N$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6bac9bf84e5ace24E+0x8c>
    }
   11e56:	f8bd 0020 	ldrh.w	r0, [sp, #32]
   11e5a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
   11e5e:	b00c      	add	sp, #48	; 0x30
   11e60:	bd80      	pop	{r7, pc}
            self.next += 1;
   11e62:	f64d 70e0 	movw	r0, #57312	; 0xdfe0
   11e66:	f2c0 0001 	movt	r0, #1
   11e6a:	f64d 72c4 	movw	r2, #57284	; 0xdfc4
   11e6e:	f2c0 0201 	movt	r2, #1
   11e72:	211c      	movs	r1, #28
   11e74:	f002 fe95 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   11e78:	defe      	udf	#254	; 0xfe

00011e7a <_ZN77_$LT$core..marker..PhantomData$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17h4cc5371e08991940E>:
   11e7a:	4770      	bx	lr

00011e7c <_ZN4core3str21_$LT$impl$u20$str$GT$3len17h967c81645c2e5378E>:
   11e7c:	b580      	push	{r7, lr}
   11e7e:	b08a      	sub	sp, #40	; 0x28
   11e80:	9004      	str	r0, [sp, #16]
   11e82:	9105      	str	r1, [sp, #20]
   11e84:	9804      	ldr	r0, [sp, #16]
   11e86:	9905      	ldr	r1, [sp, #20]
   11e88:	9006      	str	r0, [sp, #24]
   11e8a:	9107      	str	r1, [sp, #28]
   11e8c:	9806      	ldr	r0, [sp, #24]
   11e8e:	9907      	ldr	r1, [sp, #28]
   11e90:	9008      	str	r0, [sp, #32]
   11e92:	9109      	str	r1, [sp, #36]	; 0x24
   11e94:	9808      	ldr	r0, [sp, #32]
   11e96:	9909      	ldr	r1, [sp, #36]	; 0x24
   11e98:	9003      	str	r0, [sp, #12]
   11e9a:	9102      	str	r1, [sp, #8]
   11e9c:	e7ff      	b.n	11e9e <_ZN4core3str21_$LT$impl$u20$str$GT$3len17h967c81645c2e5378E+0x22>
   11e9e:	9803      	ldr	r0, [sp, #12]
   11ea0:	9902      	ldr	r1, [sp, #8]
   11ea2:	f7f8 ff5a 	bl	ad5a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h4a5bc0e612dcb4a6E>
   11ea6:	9001      	str	r0, [sp, #4]
   11ea8:	e7ff      	b.n	11eaa <_ZN4core3str21_$LT$impl$u20$str$GT$3len17h967c81645c2e5378E+0x2e>
   11eaa:	9801      	ldr	r0, [sp, #4]
   11eac:	b00a      	add	sp, #40	; 0x28
   11eae:	bd80      	pop	{r7, pc}

00011eb0 <_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h742b67cfa2d04962E>:
   11eb0:	b580      	push	{r7, lr}
   11eb2:	b08c      	sub	sp, #48	; 0x30
   11eb4:	9004      	str	r0, [sp, #16]
   11eb6:	9105      	str	r1, [sp, #20]
   11eb8:	9804      	ldr	r0, [sp, #16]
   11eba:	9905      	ldr	r1, [sp, #20]
   11ebc:	9008      	str	r0, [sp, #32]
   11ebe:	9109      	str	r1, [sp, #36]	; 0x24
   11ec0:	9808      	ldr	r0, [sp, #32]
   11ec2:	9909      	ldr	r1, [sp, #36]	; 0x24
   11ec4:	900a      	str	r0, [sp, #40]	; 0x28
   11ec6:	910b      	str	r1, [sp, #44]	; 0x2c
   11ec8:	980a      	ldr	r0, [sp, #40]	; 0x28
   11eca:	990b      	ldr	r1, [sp, #44]	; 0x2c
   11ecc:	9003      	str	r0, [sp, #12]
   11ece:	9102      	str	r1, [sp, #8]
   11ed0:	e7ff      	b.n	11ed2 <_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h742b67cfa2d04962E+0x22>
   11ed2:	9803      	ldr	r0, [sp, #12]
   11ed4:	9902      	ldr	r1, [sp, #8]
   11ed6:	f7f8 fbca 	bl	a66e <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hb8f72590c3536eeeE>
   11eda:	9001      	str	r0, [sp, #4]
   11edc:	9100      	str	r1, [sp, #0]
   11ede:	e7ff      	b.n	11ee0 <_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h742b67cfa2d04962E+0x30>
   11ee0:	9801      	ldr	r0, [sp, #4]
   11ee2:	9006      	str	r0, [sp, #24]
   11ee4:	9900      	ldr	r1, [sp, #0]
   11ee6:	9107      	str	r1, [sp, #28]
   11ee8:	9806      	ldr	r0, [sp, #24]
   11eea:	9907      	ldr	r1, [sp, #28]
   11eec:	b00c      	add	sp, #48	; 0x30
   11eee:	bd80      	pop	{r7, pc}

00011ef0 <_ZN75_$LT$core..str..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h352f4b6bf2822697E>:
   11ef0:	b580      	push	{r7, lr}
   11ef2:	b084      	sub	sp, #16
   11ef4:	9003      	str	r0, [sp, #12]
   11ef6:	9803      	ldr	r0, [sp, #12]
   11ef8:	f002 f817 	bl	13f2a <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E>
   11efc:	9002      	str	r0, [sp, #8]
   11efe:	9101      	str	r1, [sp, #4]
   11f00:	e7ff      	b.n	11f02 <_ZN75_$LT$core..str..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h352f4b6bf2822697E+0x12>
   11f02:	9802      	ldr	r0, [sp, #8]
   11f04:	9901      	ldr	r1, [sp, #4]
   11f06:	f002 f8d0 	bl	140aa <_ZN4core6option15Option$LT$T$GT$3map17ha55d1d84e69fac8aE>
   11f0a:	9000      	str	r0, [sp, #0]
   11f0c:	e7ff      	b.n	11f0e <_ZN75_$LT$core..str..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h352f4b6bf2822697E+0x1e>
   11f0e:	9800      	ldr	r0, [sp, #0]
   11f10:	b004      	add	sp, #16
   11f12:	bd80      	pop	{r7, pc}

00011f14 <_ZN4core5slice14from_raw_parts17hac284bbd2a634d55E>:
   11f14:	b580      	push	{r7, lr}
   11f16:	b088      	sub	sp, #32
   11f18:	9005      	str	r0, [sp, #20]
   11f1a:	9106      	str	r1, [sp, #24]
   11f1c:	2001      	movs	r0, #1
   11f1e:	2800      	cmp	r0, #0
   11f20:	d117      	bne.n	11f52 <_ZN4core5slice14from_raw_parts17hac284bbd2a634d55E+0x3e>
   11f22:	e7ff      	b.n	11f24 <_ZN4core5slice14from_raw_parts17hac284bbd2a634d55E+0x10>
   11f24:	9805      	ldr	r0, [sp, #20]
   11f26:	f002 fa27 	bl	14378 <_ZN4core10intrinsics23is_aligned_and_not_null17h092cc9a98ec71aefE>
   11f2a:	9004      	str	r0, [sp, #16]
   11f2c:	e7ff      	b.n	11f2e <_ZN4core5slice14from_raw_parts17hac284bbd2a634d55E+0x1a>
   11f2e:	9804      	ldr	r0, [sp, #16]
   11f30:	07c1      	lsls	r1, r0, #31
   11f32:	2900      	cmp	r1, #0
   11f34:	d001      	beq.n	11f3a <_ZN4core5slice14from_raw_parts17hac284bbd2a634d55E+0x26>
   11f36:	e7ff      	b.n	11f38 <_ZN4core5slice14from_raw_parts17hac284bbd2a634d55E+0x24>
   11f38:	e00b      	b.n	11f52 <_ZN4core5slice14from_raw_parts17hac284bbd2a634d55E+0x3e>
   11f3a:	f64d 70fc 	movw	r0, #57340	; 0xdffc
   11f3e:	f2c0 0001 	movt	r0, #1
   11f42:	f24e 0270 	movw	r2, #57456	; 0xe070
   11f46:	f2c0 0201 	movt	r2, #1
   11f4a:	2129      	movs	r1, #41	; 0x29
   11f4c:	f002 fe29 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   11f50:	defe      	udf	#254	; 0xfe
   11f52:	2001      	movs	r0, #1
   11f54:	2800      	cmp	r0, #0
   11f56:	d11c      	bne.n	11f92 <_ZN4core5slice14from_raw_parts17hac284bbd2a634d55E+0x7e>
   11f58:	e7ff      	b.n	11f5a <_ZN4core5slice14from_raw_parts17hac284bbd2a634d55E+0x46>
   11f5a:	2002      	movs	r0, #2
   11f5c:	9007      	str	r0, [sp, #28]
   11f5e:	9807      	ldr	r0, [sp, #28]
   11f60:	9003      	str	r0, [sp, #12]
   11f62:	e7ff      	b.n	11f64 <_ZN4core5slice14from_raw_parts17hac284bbd2a634d55E+0x50>
   11f64:	9906      	ldr	r1, [sp, #24]
   11f66:	9803      	ldr	r0, [sp, #12]
   11f68:	f000 f9be 	bl	122e8 <_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17h67ee851dbf84985eE>
   11f6c:	9002      	str	r0, [sp, #8]
   11f6e:	e7ff      	b.n	11f70 <_ZN4core5slice14from_raw_parts17hac284bbd2a634d55E+0x5c>
   11f70:	9802      	ldr	r0, [sp, #8]
   11f72:	2800      	cmp	r0, #0
   11f74:	d401      	bmi.n	11f7a <_ZN4core5slice14from_raw_parts17hac284bbd2a634d55E+0x66>
   11f76:	e7ff      	b.n	11f78 <_ZN4core5slice14from_raw_parts17hac284bbd2a634d55E+0x64>
   11f78:	e00b      	b.n	11f92 <_ZN4core5slice14from_raw_parts17hac284bbd2a634d55E+0x7e>
   11f7a:	f24e 0080 	movw	r0, #57472	; 0xe080
   11f7e:	f2c0 0001 	movt	r0, #1
   11f82:	f24e 0270 	movw	r2, #57456	; 0xe070
   11f86:	f2c0 0201 	movt	r2, #1
   11f8a:	2140      	movs	r1, #64	; 0x40
   11f8c:	f002 fe09 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   11f90:	defe      	udf	#254	; 0xfe
   11f92:	9805      	ldr	r0, [sp, #20]
   11f94:	9906      	ldr	r1, [sp, #24]
   11f96:	f000 fa74 	bl	12482 <_ZN4core3ptr20slice_from_raw_parts17h21ae5ff9721c6ac1E>
   11f9a:	9001      	str	r0, [sp, #4]
   11f9c:	9100      	str	r1, [sp, #0]
   11f9e:	e7ff      	b.n	11fa0 <_ZN4core5slice14from_raw_parts17hac284bbd2a634d55E+0x8c>
   11fa0:	9801      	ldr	r0, [sp, #4]
   11fa2:	9900      	ldr	r1, [sp, #0]
   11fa4:	b008      	add	sp, #32
   11fa6:	bd80      	pop	{r7, pc}

00011fa8 <_ZN4core5slice18from_raw_parts_mut17h47a86ba558f64211E>:
   11fa8:	b580      	push	{r7, lr}
   11faa:	b088      	sub	sp, #32
   11fac:	9005      	str	r0, [sp, #20]
   11fae:	9106      	str	r1, [sp, #24]
   11fb0:	2001      	movs	r0, #1
   11fb2:	2800      	cmp	r0, #0
   11fb4:	d117      	bne.n	11fe6 <_ZN4core5slice18from_raw_parts_mut17h47a86ba558f64211E+0x3e>
   11fb6:	e7ff      	b.n	11fb8 <_ZN4core5slice18from_raw_parts_mut17h47a86ba558f64211E+0x10>
   11fb8:	9805      	ldr	r0, [sp, #20]
   11fba:	f002 f9dd 	bl	14378 <_ZN4core10intrinsics23is_aligned_and_not_null17h092cc9a98ec71aefE>
   11fbe:	9004      	str	r0, [sp, #16]
   11fc0:	e7ff      	b.n	11fc2 <_ZN4core5slice18from_raw_parts_mut17h47a86ba558f64211E+0x1a>
   11fc2:	9804      	ldr	r0, [sp, #16]
   11fc4:	07c1      	lsls	r1, r0, #31
   11fc6:	2900      	cmp	r1, #0
   11fc8:	d001      	beq.n	11fce <_ZN4core5slice18from_raw_parts_mut17h47a86ba558f64211E+0x26>
   11fca:	e7ff      	b.n	11fcc <_ZN4core5slice18from_raw_parts_mut17h47a86ba558f64211E+0x24>
   11fcc:	e00b      	b.n	11fe6 <_ZN4core5slice18from_raw_parts_mut17h47a86ba558f64211E+0x3e>
   11fce:	f64d 70fc 	movw	r0, #57340	; 0xdffc
   11fd2:	f2c0 0001 	movt	r0, #1
   11fd6:	f24e 0270 	movw	r2, #57456	; 0xe070
   11fda:	f2c0 0201 	movt	r2, #1
   11fde:	2129      	movs	r1, #41	; 0x29
   11fe0:	f002 fddf 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   11fe4:	defe      	udf	#254	; 0xfe
   11fe6:	2001      	movs	r0, #1
   11fe8:	2800      	cmp	r0, #0
   11fea:	d11c      	bne.n	12026 <_ZN4core5slice18from_raw_parts_mut17h47a86ba558f64211E+0x7e>
   11fec:	e7ff      	b.n	11fee <_ZN4core5slice18from_raw_parts_mut17h47a86ba558f64211E+0x46>
   11fee:	2002      	movs	r0, #2
   11ff0:	9007      	str	r0, [sp, #28]
   11ff2:	9807      	ldr	r0, [sp, #28]
   11ff4:	9003      	str	r0, [sp, #12]
   11ff6:	e7ff      	b.n	11ff8 <_ZN4core5slice18from_raw_parts_mut17h47a86ba558f64211E+0x50>
   11ff8:	9906      	ldr	r1, [sp, #24]
   11ffa:	9803      	ldr	r0, [sp, #12]
   11ffc:	f000 f974 	bl	122e8 <_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17h67ee851dbf84985eE>
   12000:	9002      	str	r0, [sp, #8]
   12002:	e7ff      	b.n	12004 <_ZN4core5slice18from_raw_parts_mut17h47a86ba558f64211E+0x5c>
   12004:	9802      	ldr	r0, [sp, #8]
   12006:	2800      	cmp	r0, #0
   12008:	d401      	bmi.n	1200e <_ZN4core5slice18from_raw_parts_mut17h47a86ba558f64211E+0x66>
   1200a:	e7ff      	b.n	1200c <_ZN4core5slice18from_raw_parts_mut17h47a86ba558f64211E+0x64>
   1200c:	e00b      	b.n	12026 <_ZN4core5slice18from_raw_parts_mut17h47a86ba558f64211E+0x7e>
   1200e:	f24e 0080 	movw	r0, #57472	; 0xe080
   12012:	f2c0 0001 	movt	r0, #1
   12016:	f24e 0270 	movw	r2, #57456	; 0xe070
   1201a:	f2c0 0201 	movt	r2, #1
   1201e:	2140      	movs	r1, #64	; 0x40
   12020:	f002 fdbf 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   12024:	defe      	udf	#254	; 0xfe
   12026:	9805      	ldr	r0, [sp, #20]
   12028:	9906      	ldr	r1, [sp, #24]
   1202a:	f000 fa39 	bl	124a0 <_ZN4core3ptr24slice_from_raw_parts_mut17h23a5c97e9f46f4a9E>
   1202e:	9001      	str	r0, [sp, #4]
   12030:	9100      	str	r1, [sp, #0]
   12032:	e7ff      	b.n	12034 <_ZN4core5slice18from_raw_parts_mut17h47a86ba558f64211E+0x8c>
   12034:	9801      	ldr	r0, [sp, #4]
   12036:	9900      	ldr	r1, [sp, #0]
   12038:	b008      	add	sp, #32
   1203a:	bd80      	pop	{r7, pc}

0001203c <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h08d74de1a683ec08E>:
   1203c:	b082      	sub	sp, #8
   1203e:	9000      	str	r0, [sp, #0]
   12040:	9101      	str	r1, [sp, #4]
   12042:	9800      	ldr	r0, [sp, #0]
   12044:	b002      	add	sp, #8
   12046:	4770      	bx	lr

00012048 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17hc6674c70ef030218E>:
   12048:	b580      	push	{r7, lr}
   1204a:	b084      	sub	sp, #16
   1204c:	9001      	str	r0, [sp, #4]
   1204e:	9102      	str	r1, [sp, #8]
   12050:	9203      	str	r2, [sp, #12]
   12052:	9803      	ldr	r0, [sp, #12]
   12054:	9901      	ldr	r1, [sp, #4]
   12056:	9a02      	ldr	r2, [sp, #8]
   12058:	f000 f88d 	bl	12176 <_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h034cb670fef91178E>
   1205c:	9000      	str	r0, [sp, #0]
   1205e:	e7ff      	b.n	12060 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17hc6674c70ef030218E+0x18>
   12060:	9800      	ldr	r0, [sp, #0]
   12062:	b004      	add	sp, #16
   12064:	bd80      	pop	{r7, pc}

00012066 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hec67cb8a299117cdE>:
   12066:	b084      	sub	sp, #16
   12068:	9000      	str	r0, [sp, #0]
   1206a:	9101      	str	r1, [sp, #4]
   1206c:	9800      	ldr	r0, [sp, #0]
   1206e:	9901      	ldr	r1, [sp, #4]
   12070:	9002      	str	r0, [sp, #8]
   12072:	9103      	str	r1, [sp, #12]
   12074:	9803      	ldr	r0, [sp, #12]
   12076:	b004      	add	sp, #16
   12078:	4770      	bx	lr

0001207a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf6d26c6ed4aacdc5E>:
   1207a:	b580      	push	{r7, lr}
   1207c:	b090      	sub	sp, #64	; 0x40
   1207e:	9008      	str	r0, [sp, #32]
   12080:	9109      	str	r1, [sp, #36]	; 0x24
   12082:	9808      	ldr	r0, [sp, #32]
   12084:	9909      	ldr	r1, [sp, #36]	; 0x24
   12086:	f000 f841 	bl	1210c <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hed615d24ba34d680E>
   1208a:	900c      	str	r0, [sp, #48]	; 0x30
   1208c:	e7ff      	b.n	1208e <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf6d26c6ed4aacdc5E+0x14>
   1208e:	980c      	ldr	r0, [sp, #48]	; 0x30
   12090:	f000 ff95 	bl	12fbe <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h9c1881d8c7d72ca4E>
   12094:	e7ff      	b.n	12096 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf6d26c6ed4aacdc5E+0x1c>
   12096:	e7ff      	b.n	12098 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf6d26c6ed4aacdc5E+0x1e>
   12098:	2002      	movs	r0, #2
   1209a:	900f      	str	r0, [sp, #60]	; 0x3c
   1209c:	980f      	ldr	r0, [sp, #60]	; 0x3c
   1209e:	9007      	str	r0, [sp, #28]
   120a0:	e7ff      	b.n	120a2 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf6d26c6ed4aacdc5E+0x28>
   120a2:	9807      	ldr	r0, [sp, #28]
   120a4:	2800      	cmp	r0, #0
   120a6:	d00a      	beq.n	120be <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf6d26c6ed4aacdc5E+0x44>
   120a8:	e7ff      	b.n	120aa <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf6d26c6ed4aacdc5E+0x30>
   120aa:	980c      	ldr	r0, [sp, #48]	; 0x30
   120ac:	9908      	ldr	r1, [sp, #32]
   120ae:	9a09      	ldr	r2, [sp, #36]	; 0x24
   120b0:	9006      	str	r0, [sp, #24]
   120b2:	4608      	mov	r0, r1
   120b4:	4611      	mov	r1, r2
   120b6:	f7ff ffd6 	bl	12066 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hec67cb8a299117cdE>
   120ba:	9005      	str	r0, [sp, #20]
   120bc:	e012      	b.n	120e4 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf6d26c6ed4aacdc5E+0x6a>
   120be:	980c      	ldr	r0, [sp, #48]	; 0x30
   120c0:	9908      	ldr	r1, [sp, #32]
   120c2:	9a09      	ldr	r2, [sp, #36]	; 0x24
   120c4:	9004      	str	r0, [sp, #16]
   120c6:	4608      	mov	r0, r1
   120c8:	4611      	mov	r1, r2
   120ca:	f7ff ffcc 	bl	12066 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hec67cb8a299117cdE>
   120ce:	9003      	str	r0, [sp, #12]
   120d0:	e7ff      	b.n	120d2 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf6d26c6ed4aacdc5E+0x58>
   120d2:	9804      	ldr	r0, [sp, #16]
   120d4:	9903      	ldr	r1, [sp, #12]
   120d6:	f7f8 fa5b 	bl	a590 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h5512600c5ffe3ca1E>
   120da:	9002      	str	r0, [sp, #8]
   120dc:	e7ff      	b.n	120de <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf6d26c6ed4aacdc5E+0x64>
   120de:	9802      	ldr	r0, [sp, #8]
   120e0:	900d      	str	r0, [sp, #52]	; 0x34
   120e2:	e006      	b.n	120f2 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf6d26c6ed4aacdc5E+0x78>
   120e4:	9806      	ldr	r0, [sp, #24]
   120e6:	9905      	ldr	r1, [sp, #20]
   120e8:	f000 ff43 	bl	12f72 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h3fb04b13b5ec248cE>
   120ec:	900d      	str	r0, [sp, #52]	; 0x34
   120ee:	e7ff      	b.n	120f0 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf6d26c6ed4aacdc5E+0x76>
   120f0:	e7ff      	b.n	120f2 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf6d26c6ed4aacdc5E+0x78>
   120f2:	980c      	ldr	r0, [sp, #48]	; 0x30
   120f4:	f000 ff6e 	bl	12fd4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h6facc8ab36e62850E>
   120f8:	9001      	str	r0, [sp, #4]
   120fa:	e7ff      	b.n	120fc <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf6d26c6ed4aacdc5E+0x82>
   120fc:	980d      	ldr	r0, [sp, #52]	; 0x34
   120fe:	9901      	ldr	r1, [sp, #4]
   12100:	910a      	str	r1, [sp, #40]	; 0x28
   12102:	900b      	str	r0, [sp, #44]	; 0x2c
   12104:	980a      	ldr	r0, [sp, #40]	; 0x28
   12106:	990b      	ldr	r1, [sp, #44]	; 0x2c
   12108:	b010      	add	sp, #64	; 0x40
   1210a:	bd80      	pop	{r7, pc}

0001210c <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hed615d24ba34d680E>:
   1210c:	b082      	sub	sp, #8
   1210e:	9000      	str	r0, [sp, #0]
   12110:	9101      	str	r1, [sp, #4]
   12112:	9800      	ldr	r0, [sp, #0]
   12114:	b002      	add	sp, #8
   12116:	4770      	bx	lr

00012118 <_ZN4core5slice77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h938af987543fab79E>:
   12118:	b580      	push	{r7, lr}
   1211a:	b086      	sub	sp, #24
   1211c:	9003      	str	r0, [sp, #12]
   1211e:	9104      	str	r1, [sp, #16]
   12120:	9205      	str	r2, [sp, #20]
   12122:	9805      	ldr	r0, [sp, #20]
   12124:	9903      	ldr	r1, [sp, #12]
   12126:	9a04      	ldr	r2, [sp, #16]
   12128:	f000 fe78 	bl	12e1c <_ZN103_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hc882d0d360c765c6E>
   1212c:	9002      	str	r0, [sp, #8]
   1212e:	9101      	str	r1, [sp, #4]
   12130:	e7ff      	b.n	12132 <_ZN4core5slice77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h938af987543fab79E+0x1a>
   12132:	9802      	ldr	r0, [sp, #8]
   12134:	9901      	ldr	r1, [sp, #4]
   12136:	b006      	add	sp, #24
   12138:	bd80      	pop	{r7, pc}

0001213a <_ZN4core5slice77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hb9ee6c104d654751E>:
   1213a:	b580      	push	{r7, lr}
   1213c:	b086      	sub	sp, #24
   1213e:	9003      	str	r0, [sp, #12]
   12140:	9104      	str	r1, [sp, #16]
   12142:	9803      	ldr	r0, [sp, #12]
   12144:	9904      	ldr	r1, [sp, #16]
   12146:	f000 fe89 	bl	12e5c <_ZN90_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hb142eb468439cd19E>
   1214a:	9002      	str	r0, [sp, #8]
   1214c:	9101      	str	r1, [sp, #4]
   1214e:	e7ff      	b.n	12150 <_ZN4core5slice77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hb9ee6c104d654751E+0x16>
   12150:	9802      	ldr	r0, [sp, #8]
   12152:	9901      	ldr	r1, [sp, #4]
   12154:	b006      	add	sp, #24
   12156:	bd80      	pop	{r7, pc}

00012158 <_ZN4core5slice87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h5098eed5a9d9f67cE>:
   12158:	b580      	push	{r7, lr}
   1215a:	b084      	sub	sp, #16
   1215c:	9002      	str	r0, [sp, #8]
   1215e:	9103      	str	r1, [sp, #12]
   12160:	9802      	ldr	r0, [sp, #8]
   12162:	9903      	ldr	r1, [sp, #12]
   12164:	f7ff ff89 	bl	1207a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf6d26c6ed4aacdc5E>
   12168:	9001      	str	r0, [sp, #4]
   1216a:	9100      	str	r1, [sp, #0]
   1216c:	e7ff      	b.n	1216e <_ZN4core5slice87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h5098eed5a9d9f67cE+0x16>
   1216e:	9801      	ldr	r0, [sp, #4]
   12170:	9900      	ldr	r1, [sp, #0]
   12172:	b004      	add	sp, #16
   12174:	bd80      	pop	{r7, pc}

00012176 <_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h034cb670fef91178E>:
   12176:	b580      	push	{r7, lr}
   12178:	b086      	sub	sp, #24
   1217a:	9003      	str	r0, [sp, #12]
   1217c:	9104      	str	r1, [sp, #16]
   1217e:	9205      	str	r2, [sp, #20]
   12180:	9804      	ldr	r0, [sp, #16]
   12182:	9905      	ldr	r1, [sp, #20]
   12184:	f7ff ff5a 	bl	1203c <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h08d74de1a683ec08E>
   12188:	9002      	str	r0, [sp, #8]
   1218a:	e7ff      	b.n	1218c <_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h034cb670fef91178E+0x16>
   1218c:	9903      	ldr	r1, [sp, #12]
   1218e:	9802      	ldr	r0, [sp, #8]
   12190:	f000 f8e6 	bl	12360 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hbc622ca7bdac324fE>
   12194:	9001      	str	r0, [sp, #4]
   12196:	e7ff      	b.n	12198 <_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h034cb670fef91178E+0x22>
   12198:	9801      	ldr	r0, [sp, #4]
   1219a:	b006      	add	sp, #24
   1219c:	bd80      	pop	{r7, pc}

0001219e <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9833ca70ef8b4c89E>:
   1219e:	b580      	push	{r7, lr}
   121a0:	b08c      	sub	sp, #48	; 0x30
   121a2:	9004      	str	r0, [sp, #16]
   121a4:	9804      	ldr	r0, [sp, #16]
   121a6:	6800      	ldr	r0, [r0, #0]
   121a8:	f000 ff1b 	bl	12fe2 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h62416eeff0482c5eE>
   121ac:	9003      	str	r0, [sp, #12]
   121ae:	e7ff      	b.n	121b0 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9833ca70ef8b4c89E+0x12>
   121b0:	9803      	ldr	r0, [sp, #12]
   121b2:	f000 f8ff 	bl	123b4 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hbefed46fd651323cE>
   121b6:	e7ff      	b.n	121b8 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9833ca70ef8b4c89E+0x1a>
   121b8:	e7ff      	b.n	121ba <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9833ca70ef8b4c89E+0x1c>
   121ba:	2002      	movs	r0, #2
   121bc:	9006      	str	r0, [sp, #24]
   121be:	9806      	ldr	r0, [sp, #24]
   121c0:	9002      	str	r0, [sp, #8]
   121c2:	e7ff      	b.n	121c4 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9833ca70ef8b4c89E+0x26>
   121c4:	9802      	ldr	r0, [sp, #8]
   121c6:	2800      	cmp	r0, #0
   121c8:	d007      	beq.n	121da <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9833ca70ef8b4c89E+0x3c>
   121ca:	e7ff      	b.n	121cc <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9833ca70ef8b4c89E+0x2e>
   121cc:	9804      	ldr	r0, [sp, #16]
   121ce:	6840      	ldr	r0, [r0, #4]
   121d0:	f000 fef5 	bl	12fbe <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h9c1881d8c7d72ca4E>
   121d4:	e7ff      	b.n	121d6 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9833ca70ef8b4c89E+0x38>
   121d6:	e7ff      	b.n	121d8 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9833ca70ef8b4c89E+0x3a>
   121d8:	e7ff      	b.n	121da <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9833ca70ef8b4c89E+0x3c>
   121da:	9804      	ldr	r0, [sp, #16]
   121dc:	6800      	ldr	r0, [r0, #0]
   121de:	f000 ff00 	bl	12fe2 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h62416eeff0482c5eE>
   121e2:	9001      	str	r0, [sp, #4]
   121e4:	e7ff      	b.n	121e6 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9833ca70ef8b4c89E+0x48>
   121e6:	9804      	ldr	r0, [sp, #16]
   121e8:	6840      	ldr	r0, [r0, #4]
   121ea:	9901      	ldr	r1, [sp, #4]
   121ec:	4281      	cmp	r1, r0
   121ee:	d02e      	beq.n	1224e <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9833ca70ef8b4c89E+0xb0>
   121f0:	e7ff      	b.n	121f2 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9833ca70ef8b4c89E+0x54>
   121f2:	9804      	ldr	r0, [sp, #16]
   121f4:	9007      	str	r0, [sp, #28]
   121f6:	2001      	movs	r0, #1
   121f8:	9008      	str	r0, [sp, #32]
   121fa:	2002      	movs	r0, #2
   121fc:	900b      	str	r0, [sp, #44]	; 0x2c
   121fe:	980b      	ldr	r0, [sp, #44]	; 0x2c
   12200:	2800      	cmp	r0, #0
   12202:	d013      	beq.n	1222c <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9833ca70ef8b4c89E+0x8e>
   12204:	e7ff      	b.n	12206 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9833ca70ef8b4c89E+0x68>
   12206:	9807      	ldr	r0, [sp, #28]
   12208:	6800      	ldr	r0, [r0, #0]
   1220a:	f000 feea 	bl	12fe2 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h62416eeff0482c5eE>
   1220e:	900a      	str	r0, [sp, #40]	; 0x28
   12210:	9807      	ldr	r0, [sp, #28]
   12212:	6800      	ldr	r0, [r0, #0]
   12214:	f000 fee5 	bl	12fe2 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h62416eeff0482c5eE>
   12218:	9908      	ldr	r1, [sp, #32]
   1221a:	f000 f8bd 	bl	12398 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hd3cd0d149a7fdfbaE>
   1221e:	f000 fed9 	bl	12fd4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h6facc8ab36e62850E>
   12222:	9907      	ldr	r1, [sp, #28]
   12224:	6008      	str	r0, [r1, #0]
   12226:	980a      	ldr	r0, [sp, #40]	; 0x28
   12228:	9009      	str	r0, [sp, #36]	; 0x24
   1222a:	e00d      	b.n	12248 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9833ca70ef8b4c89E+0xaa>
   1222c:	9807      	ldr	r0, [sp, #28]
   1222e:	6840      	ldr	r0, [r0, #4]
   12230:	9908      	ldr	r1, [sp, #32]
   12232:	4249      	negs	r1, r1
   12234:	f7f8 f9b9 	bl	a5aa <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17hbbdc43338149cfd8E>
   12238:	9907      	ldr	r1, [sp, #28]
   1223a:	6048      	str	r0, [r1, #4]
   1223c:	9807      	ldr	r0, [sp, #28]
   1223e:	6800      	ldr	r0, [r0, #0]
   12240:	f000 fecf 	bl	12fe2 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h62416eeff0482c5eE>
   12244:	9009      	str	r0, [sp, #36]	; 0x24
   12246:	e7ff      	b.n	12248 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9833ca70ef8b4c89E+0xaa>
   12248:	9809      	ldr	r0, [sp, #36]	; 0x24
   1224a:	9000      	str	r0, [sp, #0]
   1224c:	e002      	b.n	12254 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9833ca70ef8b4c89E+0xb6>
   1224e:	2000      	movs	r0, #0
   12250:	9005      	str	r0, [sp, #20]
   12252:	e002      	b.n	1225a <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9833ca70ef8b4c89E+0xbc>
   12254:	9800      	ldr	r0, [sp, #0]
   12256:	9005      	str	r0, [sp, #20]
   12258:	e7ff      	b.n	1225a <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9833ca70ef8b4c89E+0xbc>
   1225a:	9805      	ldr	r0, [sp, #20]
   1225c:	b00c      	add	sp, #48	; 0x30
   1225e:	bd80      	pop	{r7, pc}

00012260 <_ZN4core3num21_$LT$impl$u20$u16$GT$10swap_bytes17h16a3ed1ea6eb745cE>:
   12260:	b082      	sub	sp, #8
   12262:	4601      	mov	r1, r0
   12264:	f8ad 0004 	strh.w	r0, [sp, #4]
   12268:	f8bd 0004 	ldrh.w	r0, [sp, #4]
   1226c:	ba00      	rev	r0, r0
   1226e:	0c00      	lsrs	r0, r0, #16
   12270:	f8ad 0006 	strh.w	r0, [sp, #6]
   12274:	f8bd 0006 	ldrh.w	r0, [sp, #6]
   12278:	9000      	str	r0, [sp, #0]
   1227a:	e7ff      	b.n	1227c <_ZN4core3num21_$LT$impl$u20$u16$GT$10swap_bytes17h16a3ed1ea6eb745cE+0x1c>
   1227c:	9800      	ldr	r0, [sp, #0]
   1227e:	b002      	add	sp, #8
   12280:	4770      	bx	lr

00012282 <_ZN4core3num21_$LT$impl$u20$u16$GT$5to_be17hf8daed3a42341b94E>:
   12282:	b580      	push	{r7, lr}
   12284:	b084      	sub	sp, #16
   12286:	4601      	mov	r1, r0
   12288:	f8ad 000e 	strh.w	r0, [sp, #14]
   1228c:	f8bd 000e 	ldrh.w	r0, [sp, #14]
   12290:	9102      	str	r1, [sp, #8]
   12292:	f7ff ffe5 	bl	12260 <_ZN4core3num21_$LT$impl$u20$u16$GT$10swap_bytes17h16a3ed1ea6eb745cE>
   12296:	9001      	str	r0, [sp, #4]
   12298:	e7ff      	b.n	1229a <_ZN4core3num21_$LT$impl$u20$u16$GT$5to_be17hf8daed3a42341b94E+0x18>
   1229a:	9801      	ldr	r0, [sp, #4]
   1229c:	b004      	add	sp, #16
   1229e:	bd80      	pop	{r7, pc}

000122a0 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h02a1c8bc393706ceE>:
   122a0:	b580      	push	{r7, lr}
   122a2:	b088      	sub	sp, #32
   122a4:	9002      	str	r0, [sp, #8]
   122a6:	9103      	str	r1, [sp, #12]
   122a8:	9802      	ldr	r0, [sp, #8]
   122aa:	9903      	ldr	r1, [sp, #12]
   122ac:	f000 f833 	bl	12316 <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17ha28c0b1aafc724b3E>
   122b0:	9001      	str	r0, [sp, #4]
   122b2:	9100      	str	r1, [sp, #0]
   122b4:	e7ff      	b.n	122b6 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h02a1c8bc393706ceE+0x16>
   122b6:	9801      	ldr	r0, [sp, #4]
   122b8:	9006      	str	r0, [sp, #24]
   122ba:	9900      	ldr	r1, [sp, #0]
   122bc:	f001 0201 	and.w	r2, r1, #1
   122c0:	f88d 201f 	strb.w	r2, [sp, #31]
   122c4:	f89d 201f 	ldrb.w	r2, [sp, #31]
   122c8:	07d2      	lsls	r2, r2, #31
   122ca:	2a00      	cmp	r2, #0
   122cc:	d105      	bne.n	122da <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h02a1c8bc393706ceE+0x3a>
   122ce:	e7ff      	b.n	122d0 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h02a1c8bc393706ceE+0x30>
   122d0:	9806      	ldr	r0, [sp, #24]
   122d2:	9005      	str	r0, [sp, #20]
   122d4:	2001      	movs	r0, #1
   122d6:	9004      	str	r0, [sp, #16]
   122d8:	e002      	b.n	122e0 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h02a1c8bc393706ceE+0x40>
   122da:	2000      	movs	r0, #0
   122dc:	9004      	str	r0, [sp, #16]
   122de:	e7ff      	b.n	122e0 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h02a1c8bc393706ceE+0x40>
   122e0:	9804      	ldr	r0, [sp, #16]
   122e2:	9905      	ldr	r1, [sp, #20]
   122e4:	b008      	add	sp, #32
   122e6:	bd80      	pop	{r7, pc}

000122e8 <_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17h67ee851dbf84985eE>:
   122e8:	b580      	push	{r7, lr}
   122ea:	b086      	sub	sp, #24
   122ec:	9004      	str	r0, [sp, #16]
   122ee:	9105      	str	r1, [sp, #20]
   122f0:	9804      	ldr	r0, [sp, #16]
   122f2:	9905      	ldr	r1, [sp, #20]
   122f4:	f7ff ffd4 	bl	122a0 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h02a1c8bc393706ceE>
   122f8:	9003      	str	r0, [sp, #12]
   122fa:	9102      	str	r1, [sp, #8]
   122fc:	e7ff      	b.n	122fe <_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17h67ee851dbf84985eE+0x16>
   122fe:	e7ff      	b.n	12300 <_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17h67ee851dbf84985eE+0x18>
   12300:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   12304:	9803      	ldr	r0, [sp, #12]
   12306:	9902      	ldr	r1, [sp, #8]
   12308:	f001 fb41 	bl	1398e <_ZN4core6option15Option$LT$T$GT$9unwrap_or17he29cde0de98952e1E>
   1230c:	9001      	str	r0, [sp, #4]
   1230e:	e7ff      	b.n	12310 <_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17h67ee851dbf84985eE+0x28>
   12310:	9801      	ldr	r0, [sp, #4]
   12312:	b006      	add	sp, #24
   12314:	bd80      	pop	{r7, pc}

00012316 <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17ha28c0b1aafc724b3E>:
   12316:	b08a      	sub	sp, #40	; 0x28
   12318:	9002      	str	r0, [sp, #8]
   1231a:	9103      	str	r1, [sp, #12]
   1231c:	9802      	ldr	r0, [sp, #8]
   1231e:	9903      	ldr	r1, [sp, #12]
   12320:	fba0 0101 	umull	r0, r1, r0, r1
   12324:	2900      	cmp	r1, #0
   12326:	bf18      	it	ne
   12328:	2101      	movne	r1, #1
   1232a:	9008      	str	r0, [sp, #32]
   1232c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
   12330:	9808      	ldr	r0, [sp, #32]
   12332:	f89d 1024 	ldrb.w	r1, [sp, #36]	; 0x24
   12336:	9001      	str	r0, [sp, #4]
   12338:	9100      	str	r1, [sp, #0]
   1233a:	e7ff      	b.n	1233c <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17ha28c0b1aafc724b3E+0x26>
   1233c:	9801      	ldr	r0, [sp, #4]
   1233e:	9006      	str	r0, [sp, #24]
   12340:	9900      	ldr	r1, [sp, #0]
   12342:	f001 0201 	and.w	r2, r1, #1
   12346:	f88d 201f 	strb.w	r2, [sp, #31]
   1234a:	9a06      	ldr	r2, [sp, #24]
   1234c:	f89d 301f 	ldrb.w	r3, [sp, #31]
   12350:	9204      	str	r2, [sp, #16]
   12352:	f88d 3014 	strb.w	r3, [sp, #20]
   12356:	9804      	ldr	r0, [sp, #16]
   12358:	f89d 1014 	ldrb.w	r1, [sp, #20]
   1235c:	b00a      	add	sp, #40	; 0x28
   1235e:	4770      	bx	lr

00012360 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hbc622ca7bdac324fE>:
   12360:	b580      	push	{r7, lr}
   12362:	b084      	sub	sp, #16
   12364:	9002      	str	r0, [sp, #8]
   12366:	9103      	str	r1, [sp, #12]
   12368:	9802      	ldr	r0, [sp, #8]
   1236a:	9903      	ldr	r1, [sp, #12]
   1236c:	f000 f814 	bl	12398 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hd3cd0d149a7fdfbaE>
   12370:	9001      	str	r0, [sp, #4]
   12372:	e7ff      	b.n	12374 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hbc622ca7bdac324fE+0x14>
   12374:	9801      	ldr	r0, [sp, #4]
   12376:	b004      	add	sp, #16
   12378:	bd80      	pop	{r7, pc}

0001237a <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$5write17hc9dc45cef6ac5c46E>:
   1237a:	b580      	push	{r7, lr}
   1237c:	b084      	sub	sp, #16
   1237e:	460a      	mov	r2, r1
   12380:	9002      	str	r0, [sp, #8]
   12382:	f8ad 100e 	strh.w	r1, [sp, #14]
   12386:	9802      	ldr	r0, [sp, #8]
   12388:	f8bd 100e 	ldrh.w	r1, [sp, #14]
   1238c:	9201      	str	r2, [sp, #4]
   1238e:	f000 f8bc 	bl	1250a <_ZN4core3ptr5write17hc4f2efad913317d2E>
   12392:	e7ff      	b.n	12394 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$5write17hc9dc45cef6ac5c46E+0x1a>
   12394:	b004      	add	sp, #16
   12396:	bd80      	pop	{r7, pc}

00012398 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hd3cd0d149a7fdfbaE>:
   12398:	b084      	sub	sp, #16
   1239a:	9001      	str	r0, [sp, #4]
   1239c:	9102      	str	r1, [sp, #8]
   1239e:	9801      	ldr	r0, [sp, #4]
   123a0:	9902      	ldr	r1, [sp, #8]
   123a2:	eb00 0041 	add.w	r0, r0, r1, lsl #1
   123a6:	9003      	str	r0, [sp, #12]
   123a8:	9803      	ldr	r0, [sp, #12]
   123aa:	9000      	str	r0, [sp, #0]
   123ac:	e7ff      	b.n	123ae <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hd3cd0d149a7fdfbaE+0x16>
   123ae:	9800      	ldr	r0, [sp, #0]
   123b0:	b004      	add	sp, #16
   123b2:	4770      	bx	lr

000123b4 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hbefed46fd651323cE>:
   123b4:	b082      	sub	sp, #8
   123b6:	9001      	str	r0, [sp, #4]
   123b8:	9801      	ldr	r0, [sp, #4]
   123ba:	9000      	str	r0, [sp, #0]
   123bc:	e7ff      	b.n	123be <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hbefed46fd651323cE+0xa>
   123be:	9800      	ldr	r0, [sp, #0]
   123c0:	fab0 f180 	clz	r1, r0
   123c4:	0948      	lsrs	r0, r1, #5
   123c6:	b002      	add	sp, #8
   123c8:	4770      	bx	lr

000123ca <_ZN4core4iter6traits8iterator8Iterator3nth17h94e89f04838976dfE>:
   123ca:	b580      	push	{r7, lr}
   123cc:	b08a      	sub	sp, #40	; 0x28
   123ce:	9002      	str	r0, [sp, #8]
   123d0:	9103      	str	r1, [sp, #12]
   123d2:	9802      	ldr	r0, [sp, #8]
   123d4:	f000 f844 	bl	12460 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17ha6b3afe99a3a0ff5E>
   123d8:	9001      	str	r0, [sp, #4]
   123da:	e7ff      	b.n	123dc <_ZN4core4iter6traits8iterator8Iterator3nth17h94e89f04838976dfE+0x12>
   123dc:	9801      	ldr	r0, [sp, #4]
   123de:	9005      	str	r0, [sp, #20]
   123e0:	e7ff      	b.n	123e2 <_ZN4core4iter6traits8iterator8Iterator3nth17h94e89f04838976dfE+0x18>
   123e2:	a805      	add	r0, sp, #20
   123e4:	f000 f841 	bl	1246a <_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7eec27646fdb67fdE>
   123e8:	9007      	str	r0, [sp, #28]
   123ea:	e7ff      	b.n	123ec <_ZN4core4iter6traits8iterator8Iterator3nth17h94e89f04838976dfE+0x22>
   123ec:	9807      	ldr	r0, [sp, #28]
   123ee:	f5b0 1188 	subs.w	r1, r0, #1114112	; 0x110000
   123f2:	bf18      	it	ne
   123f4:	2101      	movne	r1, #1
   123f6:	f5b0 1f88 	cmp.w	r0, #1114112	; 0x110000
   123fa:	d001      	beq.n	12400 <_ZN4core4iter6traits8iterator8Iterator3nth17h94e89f04838976dfE+0x36>
   123fc:	e7ff      	b.n	123fe <_ZN4core4iter6traits8iterator8Iterator3nth17h94e89f04838976dfE+0x34>
   123fe:	e001      	b.n	12404 <_ZN4core4iter6traits8iterator8Iterator3nth17h94e89f04838976dfE+0x3a>
   12400:	e009      	b.n	12416 <_ZN4core4iter6traits8iterator8Iterator3nth17h94e89f04838976dfE+0x4c>
   12402:	defe      	udf	#254	; 0xfe
   12404:	9807      	ldr	r0, [sp, #28]
   12406:	9008      	str	r0, [sp, #32]
   12408:	9808      	ldr	r0, [sp, #32]
   1240a:	9006      	str	r0, [sp, #24]
   1240c:	9807      	ldr	r0, [sp, #28]
   1240e:	f5b0 1f88 	cmp.w	r0, #1114112	; 0x110000
   12412:	d111      	bne.n	12438 <_ZN4core4iter6traits8iterator8Iterator3nth17h94e89f04838976dfE+0x6e>
   12414:	e016      	b.n	12444 <_ZN4core4iter6traits8iterator8Iterator3nth17h94e89f04838976dfE+0x7a>
   12416:	2000      	movs	r0, #0
   12418:	9004      	str	r0, [sp, #16]
   1241a:	f44f 1088 	mov.w	r0, #1114112	; 0x110000
   1241e:	9004      	str	r0, [sp, #16]
   12420:	e006      	b.n	12430 <_ZN4core4iter6traits8iterator8Iterator3nth17h94e89f04838976dfE+0x66>
   12422:	9803      	ldr	r0, [sp, #12]
   12424:	3801      	subs	r0, #1
   12426:	9003      	str	r0, [sp, #12]
   12428:	e005      	b.n	12436 <_ZN4core4iter6traits8iterator8Iterator3nth17h94e89f04838976dfE+0x6c>
   1242a:	9809      	ldr	r0, [sp, #36]	; 0x24
   1242c:	9004      	str	r0, [sp, #16]
   1242e:	e7ff      	b.n	12430 <_ZN4core4iter6traits8iterator8Iterator3nth17h94e89f04838976dfE+0x66>
   12430:	9804      	ldr	r0, [sp, #16]
   12432:	b00a      	add	sp, #40	; 0x28
   12434:	bd80      	pop	{r7, pc}
   12436:	e7d4      	b.n	123e2 <_ZN4core4iter6traits8iterator8Iterator3nth17h94e89f04838976dfE+0x18>
   12438:	9806      	ldr	r0, [sp, #24]
   1243a:	9009      	str	r0, [sp, #36]	; 0x24
   1243c:	9803      	ldr	r0, [sp, #12]
   1243e:	2800      	cmp	r0, #0
   12440:	d0f3      	beq.n	1242a <_ZN4core4iter6traits8iterator8Iterator3nth17h94e89f04838976dfE+0x60>
   12442:	e7ee      	b.n	12422 <_ZN4core4iter6traits8iterator8Iterator3nth17h94e89f04838976dfE+0x58>
   12444:	e7f8      	b.n	12438 <_ZN4core4iter6traits8iterator8Iterator3nth17h94e89f04838976dfE+0x6e>

00012446 <_ZN4core4iter6traits8iterator8Iterator4skip17he38dcab674d2207aE>:
   12446:	b580      	push	{r7, lr}
   12448:	b084      	sub	sp, #16
   1244a:	9101      	str	r1, [sp, #4]
   1244c:	9202      	str	r2, [sp, #8]
   1244e:	9303      	str	r3, [sp, #12]
   12450:	9901      	ldr	r1, [sp, #4]
   12452:	9a02      	ldr	r2, [sp, #8]
   12454:	9b03      	ldr	r3, [sp, #12]
   12456:	f000 fd62 	bl	12f1e <_ZN4core4iter8adapters13Skip$LT$I$GT$3new17h49836a358a94eed7E>
   1245a:	e7ff      	b.n	1245c <_ZN4core4iter6traits8iterator8Iterator4skip17he38dcab674d2207aE+0x16>
   1245c:	b004      	add	sp, #16
   1245e:	bd80      	pop	{r7, pc}

00012460 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17ha6b3afe99a3a0ff5E>:
   12460:	b081      	sub	sp, #4
   12462:	9000      	str	r0, [sp, #0]
   12464:	9800      	ldr	r0, [sp, #0]
   12466:	b001      	add	sp, #4
   12468:	4770      	bx	lr

0001246a <_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7eec27646fdb67fdE>:
   1246a:	b580      	push	{r7, lr}
   1246c:	b082      	sub	sp, #8
   1246e:	9001      	str	r0, [sp, #4]
   12470:	9801      	ldr	r0, [sp, #4]
   12472:	6800      	ldr	r0, [r0, #0]
   12474:	f7ff fd3c 	bl	11ef0 <_ZN75_$LT$core..str..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h352f4b6bf2822697E>
   12478:	9000      	str	r0, [sp, #0]
   1247a:	e7ff      	b.n	1247c <_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7eec27646fdb67fdE+0x12>
   1247c:	9800      	ldr	r0, [sp, #0]
   1247e:	b002      	add	sp, #8
   12480:	bd80      	pop	{r7, pc}

00012482 <_ZN4core3ptr20slice_from_raw_parts17h21ae5ff9721c6ac1E>:
   12482:	b086      	sub	sp, #24
   12484:	9000      	str	r0, [sp, #0]
   12486:	9101      	str	r1, [sp, #4]
   12488:	9800      	ldr	r0, [sp, #0]
   1248a:	9901      	ldr	r1, [sp, #4]
   1248c:	9004      	str	r0, [sp, #16]
   1248e:	9105      	str	r1, [sp, #20]
   12490:	9804      	ldr	r0, [sp, #16]
   12492:	9905      	ldr	r1, [sp, #20]
   12494:	9002      	str	r0, [sp, #8]
   12496:	9103      	str	r1, [sp, #12]
   12498:	9802      	ldr	r0, [sp, #8]
   1249a:	9903      	ldr	r1, [sp, #12]
   1249c:	b006      	add	sp, #24
   1249e:	4770      	bx	lr

000124a0 <_ZN4core3ptr24slice_from_raw_parts_mut17h23a5c97e9f46f4a9E>:
   124a0:	b086      	sub	sp, #24
   124a2:	9000      	str	r0, [sp, #0]
   124a4:	9101      	str	r1, [sp, #4]
   124a6:	9800      	ldr	r0, [sp, #0]
   124a8:	9901      	ldr	r1, [sp, #4]
   124aa:	9004      	str	r0, [sp, #16]
   124ac:	9105      	str	r1, [sp, #20]
   124ae:	9804      	ldr	r0, [sp, #16]
   124b0:	9905      	ldr	r1, [sp, #20]
   124b2:	9002      	str	r0, [sp, #8]
   124b4:	9103      	str	r1, [sp, #12]
   124b6:	9802      	ldr	r0, [sp, #8]
   124b8:	9903      	ldr	r1, [sp, #12]
   124ba:	b006      	add	sp, #24
   124bc:	4770      	bx	lr

000124be <_ZN4core3ptr4read17haf4f0ceffd7a00beE>:
   124be:	b580      	push	{r7, lr}
   124c0:	b088      	sub	sp, #32
   124c2:	9003      	str	r0, [sp, #12]
   124c4:	f8bd 0012 	ldrh.w	r0, [sp, #18]
   124c8:	f8ad 0010 	strh.w	r0, [sp, #16]
   124cc:	e7ff      	b.n	124ce <_ZN4core3ptr4read17haf4f0ceffd7a00beE+0x10>
   124ce:	9803      	ldr	r0, [sp, #12]
   124d0:	a904      	add	r1, sp, #16
   124d2:	9106      	str	r1, [sp, #24]
   124d4:	9906      	ldr	r1, [sp, #24]
   124d6:	9107      	str	r1, [sp, #28]
   124d8:	9907      	ldr	r1, [sp, #28]
   124da:	9002      	str	r0, [sp, #8]
   124dc:	9101      	str	r1, [sp, #4]
   124de:	e7ff      	b.n	124e0 <_ZN4core3ptr4read17haf4f0ceffd7a00beE+0x22>
   124e0:	2201      	movs	r2, #1
   124e2:	9802      	ldr	r0, [sp, #8]
   124e4:	9901      	ldr	r1, [sp, #4]
   124e6:	f001 fee6 	bl	142b6 <_ZN4core10intrinsics19copy_nonoverlapping17h6c37ccc604552341E>
   124ea:	e7ff      	b.n	124ec <_ZN4core3ptr4read17haf4f0ceffd7a00beE+0x2e>
   124ec:	f8bd 0010 	ldrh.w	r0, [sp, #16]
   124f0:	f8ad 0014 	strh.w	r0, [sp, #20]
   124f4:	f8bd 0014 	ldrh.w	r0, [sp, #20]
   124f8:	f8ad 0016 	strh.w	r0, [sp, #22]
   124fc:	f8bd 0016 	ldrh.w	r0, [sp, #22]
   12500:	9000      	str	r0, [sp, #0]
   12502:	e7ff      	b.n	12504 <_ZN4core3ptr4read17haf4f0ceffd7a00beE+0x46>
   12504:	9800      	ldr	r0, [sp, #0]
   12506:	b008      	add	sp, #32
   12508:	bd80      	pop	{r7, pc}

0001250a <_ZN4core3ptr5write17hc4f2efad913317d2E>:
   1250a:	b082      	sub	sp, #8
   1250c:	460a      	mov	r2, r1
   1250e:	9000      	str	r0, [sp, #0]
   12510:	f8ad 1006 	strh.w	r1, [sp, #6]
   12514:	9800      	ldr	r0, [sp, #0]
   12516:	f8bd 1006 	ldrh.w	r1, [sp, #6]
   1251a:	8001      	strh	r1, [r0, #0]
   1251c:	b002      	add	sp, #8
   1251e:	4770      	bx	lr

00012520 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2be0a647423ea656E>:
   12520:	b580      	push	{r7, lr}
   12522:	f44f 72b6 	mov.w	r2, #364	; 0x16c
   12526:	f008 fcdf 	bl	1aee8 <__aeabi_memcpy>
   1252a:	bd80      	pop	{r7, pc}

0001252c <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E>:
pub fn draw_blocks<SPI, DC, RST, T>(display: &mut ST7735<SPI, DC, RST>, item_pixels: T) -> Result<(),()>
   1252c:	b5b0      	push	{r4, r5, r7, lr}
   1252e:	f5ad 6d48 	sub.w	sp, sp, #3200	; 0xc80
   12532:	b082      	sub	sp, #8
   12534:	9010      	str	r0, [sp, #64]	; 0x40
   12536:	a81b      	add	r0, sp, #108	; 0x6c
    let pixels = item_pixels.into_iter();
   12538:	4602      	mov	r2, r0
   1253a:	e8b1 5008 	ldmia.w	r1!, {r3, ip, lr}
   1253e:	e8a2 5008 	stmia.w	r2!, {r3, ip, lr}
   12542:	e891 5018 	ldmia.w	r1, {r3, r4, ip, lr}
   12546:	e882 5018 	stmia.w	r2, {r3, r4, ip, lr}
   1254a:	a912      	add	r1, sp, #72	; 0x48
   1254c:	900f      	str	r0, [sp, #60]	; 0x3c
   1254e:	4608      	mov	r0, r1
   12550:	990f      	ldr	r1, [sp, #60]	; 0x3c
   12552:	f7fa fa15 	bl	c980 <_ZN122_$LT$embedded_graphics..primitives..rectangle..Rectangle$LT$C$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17he5f1ada0d1660827E>
   12556:	e7ff      	b.n	12558 <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E+0x2c>
   12558:	a812      	add	r0, sp, #72	; 0x48
   1255a:	a947      	add	r1, sp, #284	; 0x11c
    let rows = to_rows(pixels);
   1255c:	460a      	mov	r2, r1
   1255e:	e8b0 5018 	ldmia.w	r0!, {r3, r4, ip, lr}
   12562:	e8a2 5018 	stmia.w	r2!, {r3, r4, ip, lr}
   12566:	e890 5038 	ldmia.w	r0, {r3, r4, r5, ip, lr}
   1256a:	e882 5038 	stmia.w	r2, {r3, r4, r5, ip, lr}
   1256e:	a822      	add	r0, sp, #136	; 0x88
   12570:	f000 f8c3 	bl	126fa <_ZN22piet_embedded_graphics5batch7to_rows17hb83a45ea5841b509E>
   12574:	e7ff      	b.n	12576 <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E+0x4a>
   12576:	a8ab      	add	r0, sp, #684	; 0x2ac
   12578:	a922      	add	r1, sp, #136	; 0x88
   1257a:	2294      	movs	r2, #148	; 0x94
    let blocks = to_blocks(rows);
   1257c:	900e      	str	r0, [sp, #56]	; 0x38
   1257e:	f008 fcb3 	bl	1aee8 <__aeabi_memcpy>
   12582:	a850      	add	r0, sp, #320	; 0x140
   12584:	990e      	ldr	r1, [sp, #56]	; 0x38
   12586:	f000 f8e7 	bl	12758 <_ZN22piet_embedded_graphics5batch9to_blocks17h87470b8860c6829eE>
   1258a:	e7ff      	b.n	1258c <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E+0x60>
   1258c:	f20d 40ac 	addw	r0, sp, #1196	; 0x4ac
   12590:	a950      	add	r1, sp, #320	; 0x140
   12592:	f44f 72b6 	mov.w	r2, #364	; 0x16c
    for PixelBlock { x_left, x_right, y_top, y_bottom, colors, .. } in blocks {
   12596:	900d      	str	r0, [sp, #52]	; 0x34
   12598:	f008 fca6 	bl	1aee8 <__aeabi_memcpy>
   1259c:	a8d0      	add	r0, sp, #832	; 0x340
   1259e:	990d      	ldr	r1, [sp, #52]	; 0x34
   125a0:	f7ff ffbe 	bl	12520 <_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2be0a647423ea656E>
   125a4:	e7ff      	b.n	125a6 <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E+0x7a>
   125a6:	f50d 60c3 	add.w	r0, sp, #1560	; 0x618
   125aa:	a9d0      	add	r1, sp, #832	; 0x340
   125ac:	f44f 72b6 	mov.w	r2, #364	; 0x16c
   125b0:	f008 fc9a 	bl	1aee8 <__aeabi_memcpy>
   125b4:	e7ff      	b.n	125b6 <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E+0x8a>
   125b6:	f60d 0058 	addw	r0, sp, #2136	; 0x858
   125ba:	f50d 61c3 	add.w	r1, sp, #1560	; 0x618
   125be:	f000 fa52 	bl	12a66 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E>
   125c2:	e7ff      	b.n	125c4 <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E+0x98>
   125c4:	f8dd 0858 	ldr.w	r0, [sp, #2136]	; 0x858
   125c8:	2800      	cmp	r0, #0
   125ca:	d001      	beq.n	125d0 <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E+0xa4>
   125cc:	e7ff      	b.n	125ce <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E+0xa2>
   125ce:	e005      	b.n	125dc <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E+0xb0>
   125d0:	f60d 0058 	addw	r0, sp, #2136	; 0x858
   125d4:	f7fa fdb9 	bl	d14a <_ZN4core3ptr18real_drop_in_place17h95d35041511b8a18E>
   125d8:	e01c      	b.n	12614 <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E+0xe8>
   125da:	defe      	udf	#254	; 0xfe
   125dc:	f60d 0058 	addw	r0, sp, #2136	; 0x858
   125e0:	1d01      	adds	r1, r0, #4
   125e2:	f50d 6013 	add.w	r0, sp, #2352	; 0x930
   125e6:	22d4      	movs	r2, #212	; 0xd4
   125e8:	900c      	str	r0, [sp, #48]	; 0x30
   125ea:	920b      	str	r2, [sp, #44]	; 0x2c
   125ec:	f008 fc7c 	bl	1aee8 <__aeabi_memcpy>
   125f0:	f60d 2004 	addw	r0, sp, #2564	; 0xa04
   125f4:	900a      	str	r0, [sp, #40]	; 0x28
   125f6:	990c      	ldr	r1, [sp, #48]	; 0x30
   125f8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   125fa:	f008 fc75 	bl	1aee8 <__aeabi_memcpy>
   125fe:	f20d 7084 	addw	r0, sp, #1924	; 0x784
   12602:	990a      	ldr	r1, [sp, #40]	; 0x28
   12604:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   12606:	f008 fc6f 	bl	1aee8 <__aeabi_memcpy>
   1260a:	f8dd 0858 	ldr.w	r0, [sp, #2136]	; 0x858
   1260e:	2801      	cmp	r0, #1
   12610:	d02d      	beq.n	1266e <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E+0x142>
   12612:	e06d      	b.n	126f0 <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E+0x1c4>
   12614:	f50d 60c3 	add.w	r0, sp, #1560	; 0x618
    }
   12618:	f7fa fd89 	bl	d12e <_ZN4core3ptr18real_drop_in_place17h88dc89cecd06f140E>
   1261c:	e023      	b.n	12666 <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E+0x13a>
        display.set_pixels(
   1261e:	f89d 0baf 	ldrb.w	r0, [sp, #2991]	; 0xbaf
   12622:	f7f9 faf3 	bl	bc0c <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h39a520318b49128dE>
   12626:	f88d 0bae 	strb.w	r0, [sp, #2990]	; 0xbae
   1262a:	e7ff      	b.n	1262c <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E+0x100>
            colors) ? ;
   1262c:	f89d 0bae 	ldrb.w	r0, [sp, #2990]	; 0xbae
   12630:	07c1      	lsls	r1, r0, #31
   12632:	2900      	cmp	r1, #0
   12634:	d016      	beq.n	12664 <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E+0x138>
   12636:	e7ff      	b.n	12638 <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E+0x10c>
   12638:	e000      	b.n	1263c <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E+0x110>
        display.set_pixels(
   1263a:	defe      	udf	#254	; 0xfe
            colors) ? ;
   1263c:	f7fd fda6 	bl	1018c <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17haeb5c6e90d9f6724E>
   12640:	e005      	b.n	1264e <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E+0x122>
}
   12642:	f89d 0047 	ldrb.w	r0, [sp, #71]	; 0x47
   12646:	f50d 6d48 	add.w	sp, sp, #3200	; 0xc80
   1264a:	b002      	add	sp, #8
   1264c:	bdb0      	pop	{r4, r5, r7, pc}
            colors) ? ;
   1264e:	f7f9 fe45 	bl	c2dc <_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h9118a01a54953e5aE>
   12652:	f88d 0047 	strb.w	r0, [sp, #71]	; 0x47
   12656:	e7ff      	b.n	12658 <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E+0x12c>
   12658:	f50d 60c3 	add.w	r0, sp, #1560	; 0x618
    }
   1265c:	f7fa fd67 	bl	d12e <_ZN4core3ptr18real_drop_in_place17h88dc89cecd06f140E>
   12660:	e7ff      	b.n	12662 <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E+0x136>
}
   12662:	e7ee      	b.n	12642 <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E+0x116>
    for PixelBlock { x_left, x_right, y_top, y_bottom, colors, .. } in blocks {
   12664:	e7a7      	b.n	125b6 <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E+0x8a>
   12666:	2000      	movs	r0, #0
    Ok(())
   12668:	f88d 0047 	strb.w	r0, [sp, #71]	; 0x47
}
   1266c:	e7e9      	b.n	12642 <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E+0x116>
    for PixelBlock { x_left, x_right, y_top, y_bottom, colors, .. } in blocks {
   1266e:	f8bd 0850 	ldrh.w	r0, [sp, #2128]	; 0x850
   12672:	f8ad 0ad8 	strh.w	r0, [sp, #2776]	; 0xad8
   12676:	f8bd 0852 	ldrh.w	r0, [sp, #2130]	; 0x852
   1267a:	f8ad 0ada 	strh.w	r0, [sp, #2778]	; 0xada
   1267e:	f8bd 0854 	ldrh.w	r0, [sp, #2132]	; 0x854
   12682:	f8ad 0adc 	strh.w	r0, [sp, #2780]	; 0xadc
   12686:	f8bd 0856 	ldrh.w	r0, [sp, #2134]	; 0x856
   1268a:	f8ad 0ade 	strh.w	r0, [sp, #2782]	; 0xade
   1268e:	f50d 602e 	add.w	r0, sp, #2784	; 0xae0
   12692:	f20d 7184 	addw	r1, sp, #1924	; 0x784
   12696:	22cc      	movs	r2, #204	; 0xcc
   12698:	9009      	str	r0, [sp, #36]	; 0x24
   1269a:	9208      	str	r2, [sp, #32]
   1269c:	f008 fc24 	bl	1aee8 <__aeabi_memcpy>
        display.set_pixels(
   126a0:	9810      	ldr	r0, [sp, #64]	; 0x40
   126a2:	f8bd 3ada 	ldrh.w	r3, [sp, #2778]	; 0xada
   126a6:	f8bd 2adc 	ldrh.w	r2, [sp, #2780]	; 0xadc
   126aa:	f8bd 1ad8 	ldrh.w	r1, [sp, #2776]	; 0xad8
   126ae:	f8bd cade 	ldrh.w	ip, [sp, #2782]	; 0xade
   126b2:	f50d 6e3b 	add.w	lr, sp, #2992	; 0xbb0
            colors) ? ;
   126b6:	9007      	str	r0, [sp, #28]
   126b8:	4670      	mov	r0, lr
   126ba:	9c09      	ldr	r4, [sp, #36]	; 0x24
   126bc:	9106      	str	r1, [sp, #24]
   126be:	4621      	mov	r1, r4
   126c0:	9d08      	ldr	r5, [sp, #32]
   126c2:	9205      	str	r2, [sp, #20]
   126c4:	462a      	mov	r2, r5
   126c6:	9304      	str	r3, [sp, #16]
   126c8:	f8cd c00c 	str.w	ip, [sp, #12]
   126cc:	f8cd e008 	str.w	lr, [sp, #8]
   126d0:	f008 fc0a 	bl	1aee8 <__aeabi_memcpy>
        display.set_pixels(
   126d4:	4668      	mov	r0, sp
   126d6:	9902      	ldr	r1, [sp, #8]
   126d8:	6041      	str	r1, [r0, #4]
   126da:	9a03      	ldr	r2, [sp, #12]
   126dc:	6002      	str	r2, [r0, #0]
   126de:	9807      	ldr	r0, [sp, #28]
   126e0:	9906      	ldr	r1, [sp, #24]
   126e2:	9a05      	ldr	r2, [sp, #20]
   126e4:	9b04      	ldr	r3, [sp, #16]
   126e6:	f7fb fad4 	bl	dc92 <_ZN10st7735_lcd28ST7735$LT$SPI$C$DC$C$RST$GT$10set_pixels17he93f8e3062d655baE>
   126ea:	f88d 0baf 	strb.w	r0, [sp, #2991]	; 0xbaf
   126ee:	e796      	b.n	1261e <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E+0xf2>
   126f0:	f60d 0058 	addw	r0, sp, #2136	; 0x858
    for PixelBlock { x_left, x_right, y_top, y_bottom, colors, .. } in blocks {
   126f4:	f7fa fd29 	bl	d14a <_ZN4core3ptr18real_drop_in_place17h95d35041511b8a18E>
   126f8:	e7b9      	b.n	1266e <_ZN22piet_embedded_graphics5batch11draw_blocks17h81a270459995d492E+0x142>

000126fa <_ZN22piet_embedded_graphics5batch7to_rows17hb83a45ea5841b509E>:
fn to_rows<P>(pixels: P) -> RowIterator<P>
   126fa:	b5b0      	push	{r4, r5, r7, lr}
   126fc:	b0a4      	sub	sp, #144	; 0x90
   126fe:	aa01      	add	r2, sp, #4
        pixels,
   12700:	e8b1 5018 	ldmia.w	r1!, {r3, r4, ip, lr}
   12704:	e8a2 5018 	stmia.w	r2!, {r3, r4, ip, lr}
   12708:	e891 5038 	ldmia.w	r1, {r3, r4, r5, ip, lr}
   1270c:	e882 5038 	stmia.w	r2, {r3, r4, r5, ip, lr}
   12710:	a90a      	add	r1, sp, #40	; 0x28
        colors: RowColors::new(),
   12712:	9000      	str	r0, [sp, #0]
   12714:	4608      	mov	r0, r1
   12716:	f7ff fb0e 	bl	11d36 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$3new17h538fc545c007851eE>
   1271a:	e7ff      	b.n	1271c <_ZN22piet_embedded_graphics5batch7to_rows17hb83a45ea5841b509E+0x22>
   1271c:	a801      	add	r0, sp, #4
    RowIterator::<P> {
   1271e:	9900      	ldr	r1, [sp, #0]
   12720:	e8b0 500c 	ldmia.w	r0!, {r2, r3, ip, lr}
   12724:	e8a1 500c 	stmia.w	r1!, {r2, r3, ip, lr}
   12728:	e890 501c 	ldmia.w	r0, {r2, r3, r4, ip, lr}
   1272c:	e881 501c 	stmia.w	r1, {r2, r3, r4, ip, lr}
   12730:	2000      	movs	r0, #0
   12732:	9900      	ldr	r1, [sp, #0]
   12734:	f8a1 008c 	strh.w	r0, [r1, #140]	; 0x8c
   12738:	f8a1 008e 	strh.w	r0, [r1, #142]	; 0x8e
   1273c:	f8a1 0090 	strh.w	r0, [r1, #144]	; 0x90
   12740:	f101 0024 	add.w	r0, r1, #36	; 0x24
   12744:	a90a      	add	r1, sp, #40	; 0x28
   12746:	2268      	movs	r2, #104	; 0x68
   12748:	f008 fbce 	bl	1aee8 <__aeabi_memcpy>
   1274c:	2001      	movs	r0, #1
   1274e:	9900      	ldr	r1, [sp, #0]
   12750:	f881 0092 	strb.w	r0, [r1, #146]	; 0x92
}
   12754:	b024      	add	sp, #144	; 0x90
   12756:	bdb0      	pop	{r4, r5, r7, pc}

00012758 <_ZN22piet_embedded_graphics5batch9to_blocks17h87470b8860c6829eE>:
fn to_blocks<R>(rows: R) -> BlockIterator<R>
   12758:	b580      	push	{r7, lr}
   1275a:	b0da      	sub	sp, #360	; 0x168
   1275c:	aa02      	add	r2, sp, #8
   1275e:	2394      	movs	r3, #148	; 0x94
        rows,
   12760:	9001      	str	r0, [sp, #4]
   12762:	4610      	mov	r0, r2
   12764:	461a      	mov	r2, r3
   12766:	f008 fbbf 	bl	1aee8 <__aeabi_memcpy>
   1276a:	a827      	add	r0, sp, #156	; 0x9c
        colors: BlockColors::new(),
   1276c:	f7ff fad4 	bl	11d18 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$3new17h34731c8dc462e1a2E>
   12770:	e7ff      	b.n	12772 <_ZN22piet_embedded_graphics5batch9to_blocks17h87470b8860c6829eE+0x1a>
   12772:	a902      	add	r1, sp, #8
   12774:	2294      	movs	r2, #148	; 0x94
    BlockIterator::<R> {
   12776:	9801      	ldr	r0, [sp, #4]
   12778:	f008 fbb6 	bl	1aee8 <__aeabi_memcpy>
   1277c:	2000      	movs	r0, #0
   1277e:	9901      	ldr	r1, [sp, #4]
   12780:	f8a1 0160 	strh.w	r0, [r1, #352]	; 0x160
   12784:	f8a1 0162 	strh.w	r0, [r1, #354]	; 0x162
   12788:	f8a1 0164 	strh.w	r0, [r1, #356]	; 0x164
   1278c:	f8a1 0166 	strh.w	r0, [r1, #358]	; 0x166
   12790:	f101 0094 	add.w	r0, r1, #148	; 0x94
   12794:	a927      	add	r1, sp, #156	; 0x9c
   12796:	22cc      	movs	r2, #204	; 0xcc
   12798:	f008 fba6 	bl	1aee8 <__aeabi_memcpy>
   1279c:	2001      	movs	r0, #1
   1279e:	9901      	ldr	r1, [sp, #4]
   127a0:	f881 0168 	strb.w	r0, [r1, #360]	; 0x168
}    
   127a4:	b05a      	add	sp, #360	; 0x168
   127a6:	bd80      	pop	{r7, pc}

000127a8 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E>:
    fn next(&mut self) -> Option<Self::Item> {
   127a8:	b580      	push	{r7, lr}
   127aa:	f5ad 7d46 	sub.w	sp, sp, #792	; 0x318
   127ae:	9117      	str	r1, [sp, #92]	; 0x5c
        loop {
   127b0:	9016      	str	r0, [sp, #88]	; 0x58
   127b2:	e7ff      	b.n	127b4 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0xc>
            let next_pixel = self.pixels.next();
   127b4:	9917      	ldr	r1, [sp, #92]	; 0x5c
   127b6:	a818      	add	r0, sp, #96	; 0x60
   127b8:	f7fa f942 	bl	ca40 <_ZN127_$LT$embedded_graphics..primitives..rectangle..RectangleIterator$LT$C$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8936e463579dc11E>
   127bc:	e7ff      	b.n	127be <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x16>
                None => {  //  If no more pixels...
   127be:	9818      	ldr	r0, [sp, #96]	; 0x60
   127c0:	2800      	cmp	r0, #0
   127c2:	d002      	beq.n	127ca <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x22>
   127c4:	e7ff      	b.n	127c6 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x1e>
   127c6:	e04e      	b.n	12866 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0xbe>
            match next_pixel {
   127c8:	defe      	udf	#254	; 0xfe
                    if self.first_pixel {
   127ca:	9817      	ldr	r0, [sp, #92]	; 0x5c
   127cc:	f890 0092 	ldrb.w	r0, [r0, #146]	; 0x92
   127d0:	07c0      	lsls	r0, r0, #31
   127d2:	2800      	cmp	r0, #0
   127d4:	d115      	bne.n	12802 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x5a>
   127d6:	e7ff      	b.n	127d8 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x30>
                        x_left: self.x_left,
   127d8:	9817      	ldr	r0, [sp, #92]	; 0x5c
   127da:	f8b0 108c 	ldrh.w	r1, [r0, #140]	; 0x8c
                        x_right: self.x_right,
   127de:	f8b0 208e 	ldrh.w	r2, [r0, #142]	; 0x8e
                        y: self.y,
   127e2:	f8b0 3090 	ldrh.w	r3, [r0, #144]	; 0x90
                        colors: self.colors.clone(),
   127e6:	3024      	adds	r0, #36	; 0x24
   127e8:	f10d 0ce0 	add.w	ip, sp, #224	; 0xe0
   127ec:	9015      	str	r0, [sp, #84]	; 0x54
   127ee:	4660      	mov	r0, ip
   127f0:	f8dd c054 	ldr.w	ip, [sp, #84]	; 0x54
   127f4:	9114      	str	r1, [sp, #80]	; 0x50
   127f6:	4661      	mov	r1, ip
   127f8:	9213      	str	r2, [sp, #76]	; 0x4c
   127fa:	9312      	str	r3, [sp, #72]	; 0x48
   127fc:	f7ff f9d8 	bl	11bb0 <_ZN70_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h25529cf37f25b753E>
   12800:	e006      	b.n	12810 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x68>
   12802:	2000      	movs	r0, #0
                        return None;  //  No pixels to group
   12804:	9916      	ldr	r1, [sp, #88]	; 0x58
   12806:	6008      	str	r0, [r1, #0]
   12808:	e7ff      	b.n	1280a <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x62>
    }
   1280a:	f50d 7d46 	add.w	sp, sp, #792	; 0x318
   1280e:	bd80      	pop	{r7, pc}
                    let row = PixelRow {
   12810:	9814      	ldr	r0, [sp, #80]	; 0x50
   12812:	f8ad 00d8 	strh.w	r0, [sp, #216]	; 0xd8
   12816:	9913      	ldr	r1, [sp, #76]	; 0x4c
   12818:	f8ad 10da 	strh.w	r1, [sp, #218]	; 0xda
   1281c:	9a12      	ldr	r2, [sp, #72]	; 0x48
   1281e:	f8ad 20dc 	strh.w	r2, [sp, #220]	; 0xdc
   12822:	a81c      	add	r0, sp, #112	; 0x70
   12824:	a938      	add	r1, sp, #224	; 0xe0
   12826:	2268      	movs	r2, #104	; 0x68
   12828:	f008 fb5e 	bl	1aee8 <__aeabi_memcpy>
                    self.colors.clear();
   1282c:	9817      	ldr	r0, [sp, #92]	; 0x5c
   1282e:	3024      	adds	r0, #36	; 0x24
   12830:	f7ff faac 	bl	11d8c <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17hfc6c59a7d142150bE>
   12834:	e7ff      	b.n	12836 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x8e>
                    self.first_pixel = true;
   12836:	9817      	ldr	r0, [sp, #92]	; 0x5c
   12838:	2101      	movs	r1, #1
   1283a:	f880 1092 	strb.w	r1, [r0, #146]	; 0x92
   1283e:	a852      	add	r0, sp, #328	; 0x148
   12840:	aa1c      	add	r2, sp, #112	; 0x70
   12842:	2370      	movs	r3, #112	; 0x70
                    return Some(row);
   12844:	9011      	str	r0, [sp, #68]	; 0x44
   12846:	9110      	str	r1, [sp, #64]	; 0x40
   12848:	4611      	mov	r1, r2
   1284a:	461a      	mov	r2, r3
   1284c:	930f      	str	r3, [sp, #60]	; 0x3c
   1284e:	f008 fb4b 	bl	1aee8 <__aeabi_memcpy>
   12852:	9816      	ldr	r0, [sp, #88]	; 0x58
   12854:	3004      	adds	r0, #4
   12856:	9911      	ldr	r1, [sp, #68]	; 0x44
   12858:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   1285a:	f008 fb45 	bl	1aee8 <__aeabi_memcpy>
   1285e:	9810      	ldr	r0, [sp, #64]	; 0x40
   12860:	9916      	ldr	r1, [sp, #88]	; 0x58
   12862:	6008      	str	r0, [r1, #0]
   12864:	e7d1      	b.n	1280a <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x62>
                Some(Pixel(coord, color)) => {  //  If there is a pixel...
   12866:	9819      	ldr	r0, [sp, #100]	; 0x64
   12868:	991a      	ldr	r1, [sp, #104]	; 0x68
   1286a:	906e      	str	r0, [sp, #440]	; 0x1b8
   1286c:	916f      	str	r1, [sp, #444]	; 0x1bc
   1286e:	f8bd 006c 	ldrh.w	r0, [sp, #108]	; 0x6c
   12872:	f8ad 01c2 	strh.w	r0, [sp, #450]	; 0x1c2
                    let x = coord.0 as u16;
   12876:	986e      	ldr	r0, [sp, #440]	; 0x1b8
   12878:	f8ad 01c4 	strh.w	r0, [sp, #452]	; 0x1c4
                    let y = coord.1 as u16;
   1287c:	986f      	ldr	r0, [sp, #444]	; 0x1bc
   1287e:	f8ad 01c6 	strh.w	r0, [sp, #454]	; 0x1c6
                    let color = color.0;
   12882:	f8bd 01c2 	ldrh.w	r0, [sp, #450]	; 0x1c2
   12886:	f8ad 01c8 	strh.w	r0, [sp, #456]	; 0x1c8
                    if self.first_pixel {
   1288a:	9817      	ldr	r0, [sp, #92]	; 0x5c
   1288c:	f890 0092 	ldrb.w	r0, [r0, #146]	; 0x92
   12890:	07c0      	lsls	r0, r0, #31
   12892:	2800      	cmp	r0, #0
   12894:	d10e      	bne.n	128b4 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x10c>
   12896:	e7ff      	b.n	12898 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0xf0>
                    if x == self.x_right + 1 && y == self.y {
   12898:	f8bd 01c4 	ldrh.w	r0, [sp, #452]	; 0x1c4
   1289c:	9917      	ldr	r1, [sp, #92]	; 0x5c
   1289e:	f8b1 108e 	ldrh.w	r1, [r1, #142]	; 0x8e
   128a2:	3101      	adds	r1, #1
   128a4:	b28a      	uxth	r2, r1
   128a6:	460b      	mov	r3, r1
   128a8:	428a      	cmp	r2, r1
   128aa:	900e      	str	r0, [sp, #56]	; 0x38
   128ac:	930d      	str	r3, [sp, #52]	; 0x34
   128ae:	f040 80ce 	bne.w	12a4e <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x2a6>
   128b2:	e048      	b.n	12946 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x19e>
                        self.first_pixel = false;
   128b4:	9817      	ldr	r0, [sp, #92]	; 0x5c
   128b6:	2100      	movs	r1, #0
   128b8:	f880 1092 	strb.w	r1, [r0, #146]	; 0x92
                        self.x_left = x;
   128bc:	f8bd 01c4 	ldrh.w	r0, [sp, #452]	; 0x1c4
   128c0:	9917      	ldr	r1, [sp, #92]	; 0x5c
   128c2:	f8a1 008c 	strh.w	r0, [r1, #140]	; 0x8c
                        self.x_right = x;
   128c6:	f8bd 01c4 	ldrh.w	r0, [sp, #452]	; 0x1c4
   128ca:	9917      	ldr	r1, [sp, #92]	; 0x5c
   128cc:	f8a1 008e 	strh.w	r0, [r1, #142]	; 0x8e
                        self.y = y;
   128d0:	f8bd 01c6 	ldrh.w	r0, [sp, #454]	; 0x1c6
   128d4:	9917      	ldr	r1, [sp, #92]	; 0x5c
   128d6:	f8a1 0090 	strh.w	r0, [r1, #144]	; 0x90
                        self.colors.clear();
   128da:	9817      	ldr	r0, [sp, #92]	; 0x5c
   128dc:	3024      	adds	r0, #36	; 0x24
   128de:	f7ff fa55 	bl	11d8c <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17hfc6c59a7d142150bE>
   128e2:	e7ff      	b.n	128e4 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x13c>
                        self.colors.push(color)
   128e4:	9817      	ldr	r0, [sp, #92]	; 0x5c
   128e6:	3024      	adds	r0, #36	; 0x24
   128e8:	f8bd 11c8 	ldrh.w	r1, [sp, #456]	; 0x1c8
   128ec:	f7ff fa32 	bl	11d54 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$4push17h7bde6d5f42a64645E>
   128f0:	900c      	str	r0, [sp, #48]	; 0x30
   128f2:	910b      	str	r1, [sp, #44]	; 0x2c
   128f4:	e7ff      	b.n	128f6 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x14e>
   128f6:	f24e 00fc 	movw	r0, #57596	; 0xe0fc
   128fa:	f2c0 0001 	movt	r0, #1
   128fe:	4669      	mov	r1, sp
   12900:	6008      	str	r0, [r1, #0]
   12902:	f24e 02c0 	movw	r2, #57536	; 0xe0c0
   12906:	f2c0 0201 	movt	r2, #1
   1290a:	2305      	movs	r3, #5
   1290c:	980c      	ldr	r0, [sp, #48]	; 0x30
   1290e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   12910:	f7f9 fb64 	bl	bfdc <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h5ae14e54a9cca8d6E>
   12914:	e7ff      	b.n	12916 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x16e>
                        continue;
   12916:	e7ff      	b.n	12918 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x170>
   12918:	e74c      	b.n	127b4 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0xc>
   1291a:	2001      	movs	r0, #1
                    if x == self.x_right + 1 && y == self.y {
   1291c:	f88d 01cb 	strb.w	r0, [sp, #459]	; 0x1cb
   12920:	e00b      	b.n	1293a <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x192>
   12922:	2000      	movs	r0, #0
   12924:	f88d 01cb 	strb.w	r0, [sp, #459]	; 0x1cb
   12928:	e007      	b.n	1293a <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x192>
   1292a:	f8bd 01c6 	ldrh.w	r0, [sp, #454]	; 0x1c6
   1292e:	9917      	ldr	r1, [sp, #92]	; 0x5c
   12930:	f8b1 1090 	ldrh.w	r1, [r1, #144]	; 0x90
   12934:	4288      	cmp	r0, r1
   12936:	d0f0      	beq.n	1291a <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x172>
   12938:	e7f3      	b.n	12922 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x17a>
   1293a:	f89d 01cb 	ldrb.w	r0, [sp, #459]	; 0x1cb
   1293e:	07c0      	lsls	r0, r0, #31
   12940:	2800      	cmp	r0, #0
   12942:	d107      	bne.n	12954 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x1ac>
   12944:	e022      	b.n	1298c <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x1e4>
   12946:	980d      	ldr	r0, [sp, #52]	; 0x34
   12948:	b281      	uxth	r1, r0
   1294a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1294c:	b293      	uxth	r3, r2
   1294e:	428b      	cmp	r3, r1
   12950:	d0eb      	beq.n	1292a <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x182>
   12952:	e7e6      	b.n	12922 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x17a>
                        if self.colors.push(color).is_ok() {
   12954:	9817      	ldr	r0, [sp, #92]	; 0x5c
   12956:	3024      	adds	r0, #36	; 0x24
   12958:	f8bd 11c8 	ldrh.w	r1, [sp, #456]	; 0x1c8
   1295c:	f7ff f9fa 	bl	11d54 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$4push17h7bde6d5f42a64645E>
   12960:	f8ad 11ce 	strh.w	r1, [sp, #462]	; 0x1ce
   12964:	f8ad 01cc 	strh.w	r0, [sp, #460]	; 0x1cc
   12968:	e7ff      	b.n	1296a <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x1c2>
   1296a:	a873      	add	r0, sp, #460	; 0x1cc
   1296c:	f7f9 fb0f 	bl	bf8e <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h2b593d74deb7b9abE>
   12970:	900a      	str	r0, [sp, #40]	; 0x28
   12972:	e7ff      	b.n	12974 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x1cc>
   12974:	980a      	ldr	r0, [sp, #40]	; 0x28
   12976:	07c1      	lsls	r1, r0, #31
   12978:	2900      	cmp	r1, #0
   1297a:	d101      	bne.n	12980 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x1d8>
   1297c:	e7ff      	b.n	1297e <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x1d6>
                    if x == self.x_right + 1 && y == self.y {
   1297e:	e005      	b.n	1298c <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x1e4>
                            self.x_right = x;
   12980:	f8bd 01c4 	ldrh.w	r0, [sp, #452]	; 0x1c4
   12984:	9917      	ldr	r1, [sp, #92]	; 0x5c
   12986:	f8a1 008e 	strh.w	r0, [r1, #142]	; 0x8e
                            continue;
   1298a:	e7c5      	b.n	12918 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x170>
                        x_left: self.x_left,
   1298c:	9817      	ldr	r0, [sp, #92]	; 0x5c
   1298e:	f8b0 108c 	ldrh.w	r1, [r0, #140]	; 0x8c
                        x_right: self.x_right,
   12992:	f8b0 208e 	ldrh.w	r2, [r0, #142]	; 0x8e
                        y: self.y,
   12996:	f8b0 3090 	ldrh.w	r3, [r0, #144]	; 0x90
                        colors: self.colors.clone(),
   1299a:	3024      	adds	r0, #36	; 0x24
   1299c:	f50d 7c10 	add.w	ip, sp, #576	; 0x240
   129a0:	9009      	str	r0, [sp, #36]	; 0x24
   129a2:	4660      	mov	r0, ip
   129a4:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   129a8:	9108      	str	r1, [sp, #32]
   129aa:	4661      	mov	r1, ip
   129ac:	9207      	str	r2, [sp, #28]
   129ae:	9306      	str	r3, [sp, #24]
   129b0:	f7ff f8fe 	bl	11bb0 <_ZN70_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h25529cf37f25b753E>
   129b4:	e7ff      	b.n	129b6 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x20e>
                    let row = PixelRow {
   129b6:	9808      	ldr	r0, [sp, #32]
   129b8:	f8ad 0238 	strh.w	r0, [sp, #568]	; 0x238
   129bc:	9907      	ldr	r1, [sp, #28]
   129be:	f8ad 123a 	strh.w	r1, [sp, #570]	; 0x23a
   129c2:	9a06      	ldr	r2, [sp, #24]
   129c4:	f8ad 223c 	strh.w	r2, [sp, #572]	; 0x23c
   129c8:	a874      	add	r0, sp, #464	; 0x1d0
   129ca:	a990      	add	r1, sp, #576	; 0x240
   129cc:	2268      	movs	r2, #104	; 0x68
   129ce:	f008 fa8b 	bl	1aee8 <__aeabi_memcpy>
                    self.x_left = x;
   129d2:	f8bd 01c4 	ldrh.w	r0, [sp, #452]	; 0x1c4
   129d6:	9917      	ldr	r1, [sp, #92]	; 0x5c
   129d8:	f8a1 008c 	strh.w	r0, [r1, #140]	; 0x8c
                    self.x_right = x;
   129dc:	f8bd 01c4 	ldrh.w	r0, [sp, #452]	; 0x1c4
   129e0:	9917      	ldr	r1, [sp, #92]	; 0x5c
   129e2:	f8a1 008e 	strh.w	r0, [r1, #142]	; 0x8e
                    self.y = y;
   129e6:	f8bd 01c6 	ldrh.w	r0, [sp, #454]	; 0x1c6
   129ea:	9917      	ldr	r1, [sp, #92]	; 0x5c
   129ec:	f8a1 0090 	strh.w	r0, [r1, #144]	; 0x90
                    self.colors.clear();
   129f0:	9817      	ldr	r0, [sp, #92]	; 0x5c
   129f2:	3024      	adds	r0, #36	; 0x24
   129f4:	f7ff f9ca 	bl	11d8c <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17hfc6c59a7d142150bE>
   129f8:	e7ff      	b.n	129fa <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x252>
                    self.colors.push(color)
   129fa:	9817      	ldr	r0, [sp, #92]	; 0x5c
   129fc:	3024      	adds	r0, #36	; 0x24
   129fe:	f8bd 11c8 	ldrh.w	r1, [sp, #456]	; 0x1c8
   12a02:	f7ff f9a7 	bl	11d54 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$4push17h7bde6d5f42a64645E>
   12a06:	9005      	str	r0, [sp, #20]
   12a08:	9104      	str	r1, [sp, #16]
   12a0a:	e7ff      	b.n	12a0c <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x264>
   12a0c:	f24e 103c 	movw	r0, #57660	; 0xe13c
   12a10:	f2c0 0001 	movt	r0, #1
   12a14:	4669      	mov	r1, sp
   12a16:	6008      	str	r0, [r1, #0]
   12a18:	f24e 02c0 	movw	r2, #57536	; 0xe0c0
   12a1c:	f2c0 0201 	movt	r2, #1
   12a20:	2305      	movs	r3, #5
   12a22:	9805      	ldr	r0, [sp, #20]
   12a24:	9904      	ldr	r1, [sp, #16]
   12a26:	f7f9 fad9 	bl	bfdc <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h5ae14e54a9cca8d6E>
   12a2a:	e7ff      	b.n	12a2c <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x284>
   12a2c:	a8aa      	add	r0, sp, #680	; 0x2a8
   12a2e:	a974      	add	r1, sp, #464	; 0x1d0
   12a30:	2270      	movs	r2, #112	; 0x70
                    return Some(row);
   12a32:	9003      	str	r0, [sp, #12]
   12a34:	9202      	str	r2, [sp, #8]
   12a36:	f008 fa57 	bl	1aee8 <__aeabi_memcpy>
   12a3a:	9816      	ldr	r0, [sp, #88]	; 0x58
   12a3c:	3004      	adds	r0, #4
   12a3e:	9903      	ldr	r1, [sp, #12]
   12a40:	9a02      	ldr	r2, [sp, #8]
   12a42:	f008 fa51 	bl	1aee8 <__aeabi_memcpy>
   12a46:	2001      	movs	r0, #1
   12a48:	9916      	ldr	r1, [sp, #88]	; 0x58
   12a4a:	6008      	str	r0, [r1, #0]
   12a4c:	e6dd      	b.n	1280a <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E+0x62>
                    if x == self.x_right + 1 && y == self.y {
   12a4e:	f24e 1020 	movw	r0, #57632	; 0xe120
   12a52:	f2c0 0001 	movt	r0, #1
   12a56:	f24e 120c 	movw	r2, #57612	; 0xe10c
   12a5a:	f2c0 0201 	movt	r2, #1
   12a5e:	211c      	movs	r1, #28
   12a60:	f002 f89f 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   12a64:	defe      	udf	#254	; 0xfe

00012a66 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E>:
    fn next(&mut self) -> Option<Self::Item> {
   12a66:	b580      	push	{r7, lr}
   12a68:	f5ad 6dca 	sub.w	sp, sp, #1616	; 0x650
   12a6c:	911e      	str	r1, [sp, #120]	; 0x78
   12a6e:	2100      	movs	r1, #0
        loop {
   12a70:	f88d 164f 	strb.w	r1, [sp, #1615]	; 0x64f
   12a74:	901d      	str	r0, [sp, #116]	; 0x74
   12a76:	e7ff      	b.n	12a78 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x12>
            let next_row = self.rows.next();
   12a78:	991e      	ldr	r1, [sp, #120]	; 0x78
   12a7a:	2001      	movs	r0, #1
   12a7c:	f88d 064f 	strb.w	r0, [sp, #1615]	; 0x64f
   12a80:	a81f      	add	r0, sp, #124	; 0x7c
   12a82:	f7ff fe91 	bl	127a8 <_ZN110_$LT$piet_embedded_graphics..batch..RowIterator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9a0185929ec7e289E>
   12a86:	e7ff      	b.n	12a88 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x22>
                None => {  //  If no more Pixel Rows...
   12a88:	981f      	ldr	r0, [sp, #124]	; 0x7c
   12a8a:	2800      	cmp	r0, #0
   12a8c:	d002      	beq.n	12a94 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x2e>
   12a8e:	e7ff      	b.n	12a90 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x2a>
   12a90:	e052      	b.n	12b38 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0xd2>
            match next_row {
   12a92:	defe      	udf	#254	; 0xfe
                    if self.first_row {
   12a94:	981e      	ldr	r0, [sp, #120]	; 0x78
   12a96:	f890 0168 	ldrb.w	r0, [r0, #360]	; 0x168
   12a9a:	07c0      	lsls	r0, r0, #31
   12a9c:	2800      	cmp	r0, #0
   12a9e:	d119      	bne.n	12ad4 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x6e>
   12aa0:	e7ff      	b.n	12aa2 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x3c>
                        x_left: self.x_left,
   12aa2:	981e      	ldr	r0, [sp, #120]	; 0x78
   12aa4:	f8b0 1160 	ldrh.w	r1, [r0, #352]	; 0x160
                        x_right: self.x_right,
   12aa8:	f8b0 2162 	ldrh.w	r2, [r0, #354]	; 0x162
                        y_top: self.y_top,
   12aac:	f8b0 3164 	ldrh.w	r3, [r0, #356]	; 0x164
                        y_bottom: self.y_bottom,
   12ab0:	f8b0 c166 	ldrh.w	ip, [r0, #358]	; 0x166
                        colors: self.colors.clone(),
   12ab4:	3094      	adds	r0, #148	; 0x94
   12ab6:	f50d 7ee2 	add.w	lr, sp, #452	; 0x1c4
   12aba:	901c      	str	r0, [sp, #112]	; 0x70
   12abc:	4670      	mov	r0, lr
   12abe:	f8dd e070 	ldr.w	lr, [sp, #112]	; 0x70
   12ac2:	911b      	str	r1, [sp, #108]	; 0x6c
   12ac4:	4671      	mov	r1, lr
   12ac6:	921a      	str	r2, [sp, #104]	; 0x68
   12ac8:	9319      	str	r3, [sp, #100]	; 0x64
   12aca:	f8cd c060 	str.w	ip, [sp, #96]	; 0x60
   12ace:	f7ff f880 	bl	11bd2 <_ZN70_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hca8a7b49119f2322E>
   12ad2:	e003      	b.n	12adc <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x76>
   12ad4:	2000      	movs	r0, #0
                        return None;  //  No rows to group
   12ad6:	991d      	ldr	r1, [sp, #116]	; 0x74
   12ad8:	6008      	str	r0, [r1, #0]
   12ada:	e187      	b.n	12dec <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x386>
                    let row = PixelBlock {
   12adc:	981b      	ldr	r0, [sp, #108]	; 0x6c
   12ade:	f8ad 01bc 	strh.w	r0, [sp, #444]	; 0x1bc
   12ae2:	991a      	ldr	r1, [sp, #104]	; 0x68
   12ae4:	f8ad 11be 	strh.w	r1, [sp, #446]	; 0x1be
   12ae8:	9a19      	ldr	r2, [sp, #100]	; 0x64
   12aea:	f8ad 21c0 	strh.w	r2, [sp, #448]	; 0x1c0
   12aee:	9b18      	ldr	r3, [sp, #96]	; 0x60
   12af0:	f8ad 31c2 	strh.w	r3, [sp, #450]	; 0x1c2
   12af4:	a83c      	add	r0, sp, #240	; 0xf0
   12af6:	a971      	add	r1, sp, #452	; 0x1c4
   12af8:	22cc      	movs	r2, #204	; 0xcc
   12afa:	f008 f9f5 	bl	1aee8 <__aeabi_memcpy>
                    self.colors.clear();
   12afe:	981e      	ldr	r0, [sp, #120]	; 0x78
   12b00:	3094      	adds	r0, #148	; 0x94
   12b02:	f7ff f93a 	bl	11d7a <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17h345da7541567fd72E>
   12b06:	e7ff      	b.n	12b08 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0xa2>
                    self.first_row = true;
   12b08:	981e      	ldr	r0, [sp, #120]	; 0x78
   12b0a:	2101      	movs	r1, #1
   12b0c:	f880 1168 	strb.w	r1, [r0, #360]	; 0x168
   12b10:	a8a4      	add	r0, sp, #656	; 0x290
   12b12:	aa3c      	add	r2, sp, #240	; 0xf0
   12b14:	23d4      	movs	r3, #212	; 0xd4
                    return Some(row);
   12b16:	9017      	str	r0, [sp, #92]	; 0x5c
   12b18:	9116      	str	r1, [sp, #88]	; 0x58
   12b1a:	4611      	mov	r1, r2
   12b1c:	461a      	mov	r2, r3
   12b1e:	9315      	str	r3, [sp, #84]	; 0x54
   12b20:	f008 f9e2 	bl	1aee8 <__aeabi_memcpy>
   12b24:	981d      	ldr	r0, [sp, #116]	; 0x74
   12b26:	3004      	adds	r0, #4
   12b28:	9917      	ldr	r1, [sp, #92]	; 0x5c
   12b2a:	9a15      	ldr	r2, [sp, #84]	; 0x54
   12b2c:	f008 f9dc 	bl	1aee8 <__aeabi_memcpy>
   12b30:	9816      	ldr	r0, [sp, #88]	; 0x58
   12b32:	991d      	ldr	r1, [sp, #116]	; 0x74
   12b34:	6008      	str	r0, [r1, #0]
   12b36:	e159      	b.n	12dec <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x386>
   12b38:	a81f      	add	r0, sp, #124	; 0x7c
                Some(PixelRow { x_left, x_right, y, colors, .. }) => {  //  If there is a Pixel Row...
   12b3a:	1d01      	adds	r1, r0, #4
   12b3c:	f8bd 00e8 	ldrh.w	r0, [sp, #232]	; 0xe8
   12b40:	f8ad 0366 	strh.w	r0, [sp, #870]	; 0x366
   12b44:	f8bd 00ea 	ldrh.w	r0, [sp, #234]	; 0xea
   12b48:	f8ad 0368 	strh.w	r0, [sp, #872]	; 0x368
   12b4c:	f8bd 00ec 	ldrh.w	r0, [sp, #236]	; 0xec
   12b50:	f8ad 036a 	strh.w	r0, [sp, #874]	; 0x36a
   12b54:	2000      	movs	r0, #0
   12b56:	f88d 064f 	strb.w	r0, [sp, #1615]	; 0x64f
   12b5a:	a8db      	add	r0, sp, #876	; 0x36c
   12b5c:	2268      	movs	r2, #104	; 0x68
   12b5e:	f008 f9c3 	bl	1aee8 <__aeabi_memcpy>
                    if self.first_row {
   12b62:	981e      	ldr	r0, [sp, #120]	; 0x78
   12b64:	f890 0168 	ldrb.w	r0, [r0, #360]	; 0x168
   12b68:	07c0      	lsls	r0, r0, #31
   12b6a:	2800      	cmp	r0, #0
   12b6c:	d10e      	bne.n	12b8c <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x126>
   12b6e:	e7ff      	b.n	12b70 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x10a>
                    if y == self.y_bottom + 1 && x_left == self.x_left && x_right == self.x_right {                        
   12b70:	f8bd 036a 	ldrh.w	r0, [sp, #874]	; 0x36a
   12b74:	991e      	ldr	r1, [sp, #120]	; 0x78
   12b76:	f8b1 1166 	ldrh.w	r1, [r1, #358]	; 0x166
   12b7a:	3101      	adds	r1, #1
   12b7c:	b28a      	uxth	r2, r1
   12b7e:	460b      	mov	r3, r1
   12b80:	428a      	cmp	r2, r1
   12b82:	9014      	str	r0, [sp, #80]	; 0x50
   12b84:	9313      	str	r3, [sp, #76]	; 0x4c
   12b86:	f040 813d 	bne.w	12e04 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x39e>
   12b8a:	e072      	b.n	12c72 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x20c>
                        self.first_row = false;
   12b8c:	981e      	ldr	r0, [sp, #120]	; 0x78
   12b8e:	2100      	movs	r1, #0
   12b90:	f880 1168 	strb.w	r1, [r0, #360]	; 0x168
                        self.x_left = x_left;
   12b94:	f8bd 0366 	ldrh.w	r0, [sp, #870]	; 0x366
   12b98:	991e      	ldr	r1, [sp, #120]	; 0x78
   12b9a:	f8a1 0160 	strh.w	r0, [r1, #352]	; 0x160
                        self.x_right = x_right;
   12b9e:	f8bd 0368 	ldrh.w	r0, [sp, #872]	; 0x368
   12ba2:	991e      	ldr	r1, [sp, #120]	; 0x78
   12ba4:	f8a1 0162 	strh.w	r0, [r1, #354]	; 0x162
                        self.y_top = y;
   12ba8:	f8bd 036a 	ldrh.w	r0, [sp, #874]	; 0x36a
   12bac:	991e      	ldr	r1, [sp, #120]	; 0x78
   12bae:	f8a1 0164 	strh.w	r0, [r1, #356]	; 0x164
                        self.y_bottom = y;
   12bb2:	f8bd 036a 	ldrh.w	r0, [sp, #874]	; 0x36a
   12bb6:	991e      	ldr	r1, [sp, #120]	; 0x78
   12bb8:	f8a1 0166 	strh.w	r0, [r1, #358]	; 0x166
                        self.colors.clear();
   12bbc:	981e      	ldr	r0, [sp, #120]	; 0x78
   12bbe:	3094      	adds	r0, #148	; 0x94
   12bc0:	f7ff f8db 	bl	11d7a <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17h345da7541567fd72E>
   12bc4:	e7ff      	b.n	12bc6 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x160>
                        self.colors.extend_from_slice(&colors)
   12bc6:	981e      	ldr	r0, [sp, #120]	; 0x78
   12bc8:	3094      	adds	r0, #148	; 0x94
   12bca:	a9db      	add	r1, sp, #876	; 0x36c
   12bcc:	9012      	str	r0, [sp, #72]	; 0x48
   12bce:	4608      	mov	r0, r1
   12bd0:	f7ff f83e 	bl	11c50 <_ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6f8a869eff6f2bb3E>
   12bd4:	9011      	str	r0, [sp, #68]	; 0x44
   12bd6:	9110      	str	r1, [sp, #64]	; 0x40
   12bd8:	e7ff      	b.n	12bda <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x174>
   12bda:	9812      	ldr	r0, [sp, #72]	; 0x48
   12bdc:	9911      	ldr	r1, [sp, #68]	; 0x44
   12bde:	9a10      	ldr	r2, [sp, #64]	; 0x40
   12be0:	f7ff f889 	bl	11cf6 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$17extend_from_slice17h03dd1eb3e64396cdE>
   12be4:	900f      	str	r0, [sp, #60]	; 0x3c
   12be6:	e7ff      	b.n	12be8 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x182>
   12be8:	980f      	ldr	r0, [sp, #60]	; 0x3c
   12bea:	f000 0001 	and.w	r0, r0, #1
   12bee:	f24e 01c0 	movw	r1, #57536	; 0xe0c0
   12bf2:	f2c0 0101 	movt	r1, #1
   12bf6:	f24e 134c 	movw	r3, #57676	; 0xe14c
   12bfa:	f2c0 0301 	movt	r3, #1
   12bfe:	2205      	movs	r2, #5
   12c00:	f7f9 fa1c 	bl	c03c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h76d1a1cb65ecbf07E>
   12c04:	e7ff      	b.n	12c06 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x1a0>
                        continue;
   12c06:	e7ff      	b.n	12c08 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x1a2>
   12c08:	a8db      	add	r0, sp, #876	; 0x36c
            }
   12c0a:	f7fa fac3 	bl	d194 <_ZN4core3ptr18real_drop_in_place17hcb51ffffa77a350eE>
   12c0e:	e7ff      	b.n	12c10 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x1aa>
        }
   12c10:	981f      	ldr	r0, [sp, #124]	; 0x7c
   12c12:	2801      	cmp	r0, #1
   12c14:	f000 80ee 	beq.w	12df4 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x38e>
   12c18:	e0f0      	b.n	12dfc <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x396>
   12c1a:	2001      	movs	r0, #1
                    if y == self.y_bottom + 1 && x_left == self.x_left && x_right == self.x_right {                        
   12c1c:	f88d 03d5 	strb.w	r0, [sp, #981]	; 0x3d5
   12c20:	e00b      	b.n	12c3a <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x1d4>
   12c22:	2000      	movs	r0, #0
   12c24:	f88d 03d5 	strb.w	r0, [sp, #981]	; 0x3d5
   12c28:	e007      	b.n	12c3a <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x1d4>
   12c2a:	f8bd 0368 	ldrh.w	r0, [sp, #872]	; 0x368
   12c2e:	991e      	ldr	r1, [sp, #120]	; 0x78
   12c30:	f8b1 1162 	ldrh.w	r1, [r1, #354]	; 0x162
   12c34:	4288      	cmp	r0, r1
   12c36:	d0f0      	beq.n	12c1a <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x1b4>
   12c38:	e7f3      	b.n	12c22 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x1bc>
   12c3a:	f89d 03d5 	ldrb.w	r0, [sp, #981]	; 0x3d5
   12c3e:	07c0      	lsls	r0, r0, #31
   12c40:	2800      	cmp	r0, #0
   12c42:	d11d      	bne.n	12c80 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x21a>
   12c44:	e040      	b.n	12cc8 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x262>
   12c46:	2001      	movs	r0, #1
   12c48:	f88d 03d6 	strb.w	r0, [sp, #982]	; 0x3d6
   12c4c:	e00b      	b.n	12c66 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x200>
   12c4e:	2000      	movs	r0, #0
   12c50:	f88d 03d6 	strb.w	r0, [sp, #982]	; 0x3d6
   12c54:	e007      	b.n	12c66 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x200>
   12c56:	f8bd 0366 	ldrh.w	r0, [sp, #870]	; 0x366
   12c5a:	991e      	ldr	r1, [sp, #120]	; 0x78
   12c5c:	f8b1 1160 	ldrh.w	r1, [r1, #352]	; 0x160
   12c60:	4288      	cmp	r0, r1
   12c62:	d0f0      	beq.n	12c46 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x1e0>
   12c64:	e7f3      	b.n	12c4e <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x1e8>
   12c66:	f89d 03d6 	ldrb.w	r0, [sp, #982]	; 0x3d6
   12c6a:	07c0      	lsls	r0, r0, #31
   12c6c:	2800      	cmp	r0, #0
   12c6e:	d1dc      	bne.n	12c2a <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x1c4>
   12c70:	e7d7      	b.n	12c22 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x1bc>
   12c72:	9813      	ldr	r0, [sp, #76]	; 0x4c
   12c74:	b281      	uxth	r1, r0
   12c76:	9a14      	ldr	r2, [sp, #80]	; 0x50
   12c78:	b293      	uxth	r3, r2
   12c7a:	428b      	cmp	r3, r1
   12c7c:	d0eb      	beq.n	12c56 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x1f0>
   12c7e:	e7e6      	b.n	12c4e <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x1e8>
                        if self.colors.extend_from_slice(&colors).is_ok() {
   12c80:	981e      	ldr	r0, [sp, #120]	; 0x78
   12c82:	3094      	adds	r0, #148	; 0x94
   12c84:	a9db      	add	r1, sp, #876	; 0x36c
   12c86:	900e      	str	r0, [sp, #56]	; 0x38
   12c88:	4608      	mov	r0, r1
   12c8a:	f7fe ffe1 	bl	11c50 <_ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6f8a869eff6f2bb3E>
   12c8e:	900d      	str	r0, [sp, #52]	; 0x34
   12c90:	910c      	str	r1, [sp, #48]	; 0x30
   12c92:	e7ff      	b.n	12c94 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x22e>
   12c94:	980e      	ldr	r0, [sp, #56]	; 0x38
   12c96:	990d      	ldr	r1, [sp, #52]	; 0x34
   12c98:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   12c9a:	f7ff f82c 	bl	11cf6 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$17extend_from_slice17h03dd1eb3e64396cdE>
   12c9e:	f88d 03d7 	strb.w	r0, [sp, #983]	; 0x3d7
   12ca2:	e7ff      	b.n	12ca4 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x23e>
   12ca4:	f20d 30d7 	addw	r0, sp, #983	; 0x3d7
   12ca8:	f7f9 f984 	bl	bfb4 <_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h6eebeb2a9c50ab48E>
   12cac:	900b      	str	r0, [sp, #44]	; 0x2c
   12cae:	e7ff      	b.n	12cb0 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x24a>
   12cb0:	980b      	ldr	r0, [sp, #44]	; 0x2c
   12cb2:	07c1      	lsls	r1, r0, #31
   12cb4:	2900      	cmp	r1, #0
   12cb6:	d101      	bne.n	12cbc <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x256>
   12cb8:	e7ff      	b.n	12cba <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x254>
                    if y == self.y_bottom + 1 && x_left == self.x_left && x_right == self.x_right {                        
   12cba:	e005      	b.n	12cc8 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x262>
                            self.y_bottom = y;
   12cbc:	f8bd 036a 	ldrh.w	r0, [sp, #874]	; 0x36a
   12cc0:	991e      	ldr	r1, [sp, #120]	; 0x78
   12cc2:	f8a1 0166 	strh.w	r0, [r1, #358]	; 0x166
                            continue;    
   12cc6:	e79f      	b.n	12c08 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x1a2>
                        x_left: self.x_left,
   12cc8:	981e      	ldr	r0, [sp, #120]	; 0x78
   12cca:	f8b0 1160 	ldrh.w	r1, [r0, #352]	; 0x160
                        x_right: self.x_right,
   12cce:	f8b0 2162 	ldrh.w	r2, [r0, #354]	; 0x162
                        y_top: self.y_top,
   12cd2:	f8b0 3164 	ldrh.w	r3, [r0, #356]	; 0x164
                        y_bottom: self.y_bottom,
   12cd6:	f8b0 c166 	ldrh.w	ip, [r0, #358]	; 0x166
                        colors: self.colors.clone(),
   12cda:	3094      	adds	r0, #148	; 0x94
   12cdc:	f20d 4eac 	addw	lr, sp, #1196	; 0x4ac
   12ce0:	900a      	str	r0, [sp, #40]	; 0x28
   12ce2:	4670      	mov	r0, lr
   12ce4:	f8dd e028 	ldr.w	lr, [sp, #40]	; 0x28
   12ce8:	9109      	str	r1, [sp, #36]	; 0x24
   12cea:	4671      	mov	r1, lr
   12cec:	9208      	str	r2, [sp, #32]
   12cee:	9307      	str	r3, [sp, #28]
   12cf0:	f8cd c018 	str.w	ip, [sp, #24]
   12cf4:	f7fe ff6d 	bl	11bd2 <_ZN70_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hca8a7b49119f2322E>
   12cf8:	e7ff      	b.n	12cfa <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x294>
                    let row = PixelBlock {
   12cfa:	9809      	ldr	r0, [sp, #36]	; 0x24
   12cfc:	f8ad 04a4 	strh.w	r0, [sp, #1188]	; 0x4a4
   12d00:	9908      	ldr	r1, [sp, #32]
   12d02:	f8ad 14a6 	strh.w	r1, [sp, #1190]	; 0x4a6
   12d06:	9a07      	ldr	r2, [sp, #28]
   12d08:	f8ad 24a8 	strh.w	r2, [sp, #1192]	; 0x4a8
   12d0c:	9b06      	ldr	r3, [sp, #24]
   12d0e:	f8ad 34aa 	strh.w	r3, [sp, #1194]	; 0x4aa
   12d12:	a8f6      	add	r0, sp, #984	; 0x3d8
   12d14:	f20d 41ac 	addw	r1, sp, #1196	; 0x4ac
   12d18:	22cc      	movs	r2, #204	; 0xcc
   12d1a:	f008 f8e5 	bl	1aee8 <__aeabi_memcpy>
                    self.x_left = x_left;
   12d1e:	f8bd 0366 	ldrh.w	r0, [sp, #870]	; 0x366
   12d22:	991e      	ldr	r1, [sp, #120]	; 0x78
   12d24:	f8a1 0160 	strh.w	r0, [r1, #352]	; 0x160
                    self.x_right = x_right;
   12d28:	f8bd 0368 	ldrh.w	r0, [sp, #872]	; 0x368
   12d2c:	991e      	ldr	r1, [sp, #120]	; 0x78
   12d2e:	f8a1 0162 	strh.w	r0, [r1, #354]	; 0x162
                    self.y_top = y;
   12d32:	f8bd 036a 	ldrh.w	r0, [sp, #874]	; 0x36a
   12d36:	991e      	ldr	r1, [sp, #120]	; 0x78
   12d38:	f8a1 0164 	strh.w	r0, [r1, #356]	; 0x164
                    self.y_bottom = y;
   12d3c:	f8bd 036a 	ldrh.w	r0, [sp, #874]	; 0x36a
   12d40:	991e      	ldr	r1, [sp, #120]	; 0x78
   12d42:	f8a1 0166 	strh.w	r0, [r1, #358]	; 0x166
                    self.colors.clear();
   12d46:	981e      	ldr	r0, [sp, #120]	; 0x78
   12d48:	3094      	adds	r0, #148	; 0x94
   12d4a:	f7ff f816 	bl	11d7a <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17h345da7541567fd72E>
   12d4e:	e7ff      	b.n	12d50 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x2ea>
                    self.colors.extend_from_slice(&colors)
   12d50:	981e      	ldr	r0, [sp, #120]	; 0x78
   12d52:	3094      	adds	r0, #148	; 0x94
   12d54:	a9db      	add	r1, sp, #876	; 0x36c
   12d56:	9005      	str	r0, [sp, #20]
   12d58:	4608      	mov	r0, r1
   12d5a:	f7fe ff79 	bl	11c50 <_ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6f8a869eff6f2bb3E>
   12d5e:	9004      	str	r0, [sp, #16]
   12d60:	9103      	str	r1, [sp, #12]
   12d62:	e7ff      	b.n	12d64 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x2fe>
   12d64:	9805      	ldr	r0, [sp, #20]
   12d66:	9904      	ldr	r1, [sp, #16]
   12d68:	9a03      	ldr	r2, [sp, #12]
   12d6a:	f7fe ffc4 	bl	11cf6 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$17extend_from_slice17h03dd1eb3e64396cdE>
   12d6e:	9002      	str	r0, [sp, #8]
   12d70:	e7ff      	b.n	12d72 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x30c>
   12d72:	9802      	ldr	r0, [sp, #8]
   12d74:	f000 0001 	and.w	r0, r0, #1
   12d78:	f24e 01c0 	movw	r1, #57536	; 0xe0c0
   12d7c:	f2c0 0101 	movt	r1, #1
   12d80:	f24e 136c 	movw	r3, #57708	; 0xe16c
   12d84:	f2c0 0301 	movt	r3, #1
   12d88:	2205      	movs	r2, #5
   12d8a:	f7f9 f957 	bl	c03c <_ZN4core6result19Result$LT$T$C$E$GT$6expect17h76d1a1cb65ecbf07E>
   12d8e:	e7ff      	b.n	12d90 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x32a>
   12d90:	f50d 60af 	add.w	r0, sp, #1400	; 0x578
   12d94:	a9f6      	add	r1, sp, #984	; 0x3d8
   12d96:	22d4      	movs	r2, #212	; 0xd4
                    return Some(row);
   12d98:	9001      	str	r0, [sp, #4]
   12d9a:	9200      	str	r2, [sp, #0]
   12d9c:	f008 f8a4 	bl	1aee8 <__aeabi_memcpy>
   12da0:	981d      	ldr	r0, [sp, #116]	; 0x74
   12da2:	3004      	adds	r0, #4
   12da4:	9901      	ldr	r1, [sp, #4]
   12da6:	9a00      	ldr	r2, [sp, #0]
   12da8:	f008 f89e 	bl	1aee8 <__aeabi_memcpy>
   12dac:	2001      	movs	r0, #1
   12dae:	991d      	ldr	r1, [sp, #116]	; 0x74
   12db0:	6008      	str	r0, [r1, #0]
   12db2:	a8db      	add	r0, sp, #876	; 0x36c
            }
   12db4:	f7fa f9ee 	bl	d194 <_ZN4core3ptr18real_drop_in_place17hcb51ffffa77a350eE>
   12db8:	e7ff      	b.n	12dba <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x354>
                    return Some(row);
   12dba:	e017      	b.n	12dec <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x386>
   12dbc:	2000      	movs	r0, #0
        }
   12dbe:	f88d 064f 	strb.w	r0, [sp, #1615]	; 0x64f
    }
   12dc2:	f50d 6dca 	add.w	sp, sp, #1616	; 0x650
   12dc6:	bd80      	pop	{r7, pc}
        }
   12dc8:	f89d 064f 	ldrb.w	r0, [sp, #1615]	; 0x64f
   12dcc:	07c0      	lsls	r0, r0, #31
   12dce:	2800      	cmp	r0, #0
   12dd0:	d0f4      	beq.n	12dbc <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x356>
   12dd2:	e7ff      	b.n	12dd4 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x36e>
   12dd4:	2000      	movs	r0, #0
   12dd6:	f88d 064f 	strb.w	r0, [sp, #1615]	; 0x64f
   12dda:	a81f      	add	r0, sp, #124	; 0x7c
   12ddc:	3004      	adds	r0, #4
   12dde:	f7fa f9d9 	bl	d194 <_ZN4core3ptr18real_drop_in_place17hcb51ffffa77a350eE>
   12de2:	e7eb      	b.n	12dbc <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x356>
   12de4:	a81f      	add	r0, sp, #124	; 0x7c
   12de6:	f7fa f9de 	bl	d1a6 <_ZN4core3ptr18real_drop_in_place17hdab79d49bcbb0c7bE>
   12dea:	e7e7      	b.n	12dbc <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x356>
   12dec:	981f      	ldr	r0, [sp, #124]	; 0x7c
   12dee:	2801      	cmp	r0, #1
   12df0:	d0ea      	beq.n	12dc8 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x362>
   12df2:	e7f7      	b.n	12de4 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x37e>
   12df4:	2000      	movs	r0, #0
   12df6:	f88d 064f 	strb.w	r0, [sp, #1615]	; 0x64f
                        continue;
   12dfa:	e63d      	b.n	12a78 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x12>
   12dfc:	a81f      	add	r0, sp, #124	; 0x7c
        }
   12dfe:	f7fa f9d2 	bl	d1a6 <_ZN4core3ptr18real_drop_in_place17hdab79d49bcbb0c7bE>
   12e02:	e7f7      	b.n	12df4 <_ZN112_$LT$piet_embedded_graphics..batch..BlockIterator$LT$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0c27fd2bba1d99a6E+0x38e>
                    if y == self.y_bottom + 1 && x_left == self.x_left && x_right == self.x_right {                        
   12e04:	f24e 1020 	movw	r0, #57632	; 0xe120
   12e08:	f2c0 0001 	movt	r0, #1
   12e0c:	f24e 125c 	movw	r2, #57692	; 0xe15c
   12e10:	f2c0 0201 	movt	r2, #1
   12e14:	211c      	movs	r1, #28
   12e16:	f001 fec4 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   12e1a:	defe      	udf	#254	; 0xfe

00012e1c <_ZN103_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hc882d0d360c765c6E>:
   12e1c:	b580      	push	{r7, lr}
   12e1e:	b08a      	sub	sp, #40	; 0x28
   12e20:	9005      	str	r0, [sp, #20]
   12e22:	9106      	str	r1, [sp, #24]
   12e24:	9207      	str	r2, [sp, #28]
   12e26:	9805      	ldr	r0, [sp, #20]
   12e28:	9906      	ldr	r1, [sp, #24]
   12e2a:	9a07      	ldr	r2, [sp, #28]
   12e2c:	9004      	str	r0, [sp, #16]
   12e2e:	4608      	mov	r0, r1
   12e30:	4611      	mov	r1, r2
   12e32:	f7ff f918 	bl	12066 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hec67cb8a299117cdE>
   12e36:	9003      	str	r0, [sp, #12]
   12e38:	e7ff      	b.n	12e3a <_ZN103_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hc882d0d360c765c6E+0x1e>
   12e3a:	9804      	ldr	r0, [sp, #16]
   12e3c:	9008      	str	r0, [sp, #32]
   12e3e:	9903      	ldr	r1, [sp, #12]
   12e40:	9109      	str	r1, [sp, #36]	; 0x24
   12e42:	9a06      	ldr	r2, [sp, #24]
   12e44:	9b07      	ldr	r3, [sp, #28]
   12e46:	9808      	ldr	r0, [sp, #32]
   12e48:	9909      	ldr	r1, [sp, #36]	; 0x24
   12e4a:	f000 f82d 	bl	12ea8 <_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17haa30316eb972f719E>
   12e4e:	9002      	str	r0, [sp, #8]
   12e50:	9101      	str	r1, [sp, #4]
   12e52:	e7ff      	b.n	12e54 <_ZN103_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hc882d0d360c765c6E+0x38>
   12e54:	9802      	ldr	r0, [sp, #8]
   12e56:	9901      	ldr	r1, [sp, #4]
   12e58:	b00a      	add	sp, #40	; 0x28
   12e5a:	bd80      	pop	{r7, pc}

00012e5c <_ZN90_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hb142eb468439cd19E>:
   12e5c:	b083      	sub	sp, #12
   12e5e:	9001      	str	r0, [sp, #4]
   12e60:	9102      	str	r1, [sp, #8]
   12e62:	9801      	ldr	r0, [sp, #4]
   12e64:	9902      	ldr	r1, [sp, #8]
   12e66:	b003      	add	sp, #12
   12e68:	4770      	bx	lr

00012e6a <_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he97719504a72e39cE>:
   12e6a:	b580      	push	{r7, lr}
   12e6c:	b088      	sub	sp, #32
   12e6e:	9004      	str	r0, [sp, #16]
   12e70:	9105      	str	r1, [sp, #20]
   12e72:	9206      	str	r2, [sp, #24]
   12e74:	9307      	str	r3, [sp, #28]
   12e76:	9806      	ldr	r0, [sp, #24]
   12e78:	9907      	ldr	r1, [sp, #28]
   12e7a:	f7ff f8df 	bl	1203c <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h08d74de1a683ec08E>
   12e7e:	9003      	str	r0, [sp, #12]
   12e80:	e7ff      	b.n	12e82 <_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he97719504a72e39cE+0x18>
   12e82:	9904      	ldr	r1, [sp, #16]
   12e84:	9803      	ldr	r0, [sp, #12]
   12e86:	f7ff fa6b 	bl	12360 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hbc622ca7bdac324fE>
   12e8a:	9002      	str	r0, [sp, #8]
   12e8c:	e7ff      	b.n	12e8e <_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he97719504a72e39cE+0x24>
   12e8e:	9804      	ldr	r0, [sp, #16]
   12e90:	9905      	ldr	r1, [sp, #20]
   12e92:	1a09      	subs	r1, r1, r0
   12e94:	9802      	ldr	r0, [sp, #8]
   12e96:	f7ff f887 	bl	11fa8 <_ZN4core5slice18from_raw_parts_mut17h47a86ba558f64211E>
   12e9a:	9001      	str	r0, [sp, #4]
   12e9c:	9100      	str	r1, [sp, #0]
   12e9e:	e7ff      	b.n	12ea0 <_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he97719504a72e39cE+0x36>
   12ea0:	9801      	ldr	r0, [sp, #4]
   12ea2:	9900      	ldr	r1, [sp, #0]
   12ea4:	b008      	add	sp, #32
   12ea6:	bd80      	pop	{r7, pc}

00012ea8 <_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17haa30316eb972f719E>:
   12ea8:	b580      	push	{r7, lr}
   12eaa:	b08a      	sub	sp, #40	; 0x28
   12eac:	9006      	str	r0, [sp, #24]
   12eae:	9107      	str	r1, [sp, #28]
   12eb0:	9208      	str	r2, [sp, #32]
   12eb2:	9309      	str	r3, [sp, #36]	; 0x24
   12eb4:	9806      	ldr	r0, [sp, #24]
   12eb6:	9907      	ldr	r1, [sp, #28]
   12eb8:	4288      	cmp	r0, r1
   12eba:	d80a      	bhi.n	12ed2 <_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17haa30316eb972f719E+0x2a>
   12ebc:	e7ff      	b.n	12ebe <_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17haa30316eb972f719E+0x16>
   12ebe:	9807      	ldr	r0, [sp, #28]
   12ec0:	9908      	ldr	r1, [sp, #32]
   12ec2:	9a09      	ldr	r2, [sp, #36]	; 0x24
   12ec4:	9005      	str	r0, [sp, #20]
   12ec6:	4608      	mov	r0, r1
   12ec8:	4611      	mov	r1, r2
   12eca:	f7ff f8cc 	bl	12066 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hec67cb8a299117cdE>
   12ece:	9004      	str	r0, [sp, #16]
   12ed0:	e004      	b.n	12edc <_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17haa30316eb972f719E+0x34>
   12ed2:	9806      	ldr	r0, [sp, #24]
   12ed4:	9907      	ldr	r1, [sp, #28]
   12ed6:	f002 fd8d 	bl	159f4 <_ZN4core5slice22slice_index_order_fail17h87a4944411ec7c0eE>
   12eda:	defe      	udf	#254	; 0xfe
   12edc:	9805      	ldr	r0, [sp, #20]
   12ede:	9904      	ldr	r1, [sp, #16]
   12ee0:	4288      	cmp	r0, r1
   12ee2:	d809      	bhi.n	12ef8 <_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17haa30316eb972f719E+0x50>
   12ee4:	e7ff      	b.n	12ee6 <_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17haa30316eb972f719E+0x3e>
   12ee6:	9806      	ldr	r0, [sp, #24]
   12ee8:	9907      	ldr	r1, [sp, #28]
   12eea:	9a08      	ldr	r2, [sp, #32]
   12eec:	9b09      	ldr	r3, [sp, #36]	; 0x24
   12eee:	f7ff ffbc 	bl	12e6a <_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he97719504a72e39cE>
   12ef2:	9003      	str	r0, [sp, #12]
   12ef4:	9102      	str	r1, [sp, #8]
   12ef6:	e00e      	b.n	12f16 <_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17haa30316eb972f719E+0x6e>
   12ef8:	9807      	ldr	r0, [sp, #28]
   12efa:	9908      	ldr	r1, [sp, #32]
   12efc:	9a09      	ldr	r2, [sp, #36]	; 0x24
   12efe:	9001      	str	r0, [sp, #4]
   12f00:	4608      	mov	r0, r1
   12f02:	4611      	mov	r1, r2
   12f04:	f7ff f8af 	bl	12066 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hec67cb8a299117cdE>
   12f08:	9000      	str	r0, [sp, #0]
   12f0a:	e7ff      	b.n	12f0c <_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17haa30316eb972f719E+0x64>
   12f0c:	9801      	ldr	r0, [sp, #4]
   12f0e:	9900      	ldr	r1, [sp, #0]
   12f10:	f002 fd4e 	bl	159b0 <_ZN4core5slice20slice_index_len_fail17h8346664e6cc144e9E>
   12f14:	defe      	udf	#254	; 0xfe
   12f16:	9803      	ldr	r0, [sp, #12]
   12f18:	9902      	ldr	r1, [sp, #8]
   12f1a:	b00a      	add	sp, #40	; 0x28
   12f1c:	bd80      	pop	{r7, pc}

00012f1e <_ZN4core4iter8adapters13Skip$LT$I$GT$3new17h49836a358a94eed7E>:
   12f1e:	b083      	sub	sp, #12
   12f20:	9100      	str	r1, [sp, #0]
   12f22:	9201      	str	r2, [sp, #4]
   12f24:	9302      	str	r3, [sp, #8]
   12f26:	9900      	ldr	r1, [sp, #0]
   12f28:	9a01      	ldr	r2, [sp, #4]
   12f2a:	9b02      	ldr	r3, [sp, #8]
   12f2c:	6001      	str	r1, [r0, #0]
   12f2e:	6042      	str	r2, [r0, #4]
   12f30:	6083      	str	r3, [r0, #8]
   12f32:	b003      	add	sp, #12
   12f34:	4770      	bx	lr

00012f36 <_ZN94_$LT$core..iter..adapters..Skip$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5dfb2ac71c34bd52E>:
   12f36:	b580      	push	{r7, lr}
   12f38:	b084      	sub	sp, #16
   12f3a:	9001      	str	r0, [sp, #4]
   12f3c:	9801      	ldr	r0, [sp, #4]
   12f3e:	6880      	ldr	r0, [r0, #8]
   12f40:	2800      	cmp	r0, #0
   12f42:	d00c      	beq.n	12f5e <_ZN94_$LT$core..iter..adapters..Skip$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5dfb2ac71c34bd52E+0x28>
   12f44:	e7ff      	b.n	12f46 <_ZN94_$LT$core..iter..adapters..Skip$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5dfb2ac71c34bd52E+0x10>
   12f46:	9801      	ldr	r0, [sp, #4]
   12f48:	6880      	ldr	r0, [r0, #8]
   12f4a:	9003      	str	r0, [sp, #12]
   12f4c:	9801      	ldr	r0, [sp, #4]
   12f4e:	2100      	movs	r1, #0
   12f50:	6081      	str	r1, [r0, #8]
   12f52:	9801      	ldr	r0, [sp, #4]
   12f54:	9903      	ldr	r1, [sp, #12]
   12f56:	f7ff fa38 	bl	123ca <_ZN4core4iter6traits8iterator8Iterator3nth17h94e89f04838976dfE>
   12f5a:	9002      	str	r0, [sp, #8]
   12f5c:	e005      	b.n	12f6a <_ZN94_$LT$core..iter..adapters..Skip$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5dfb2ac71c34bd52E+0x34>
   12f5e:	9801      	ldr	r0, [sp, #4]
   12f60:	f7fe ffc6 	bl	11ef0 <_ZN75_$LT$core..str..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h352f4b6bf2822697E>
   12f64:	9002      	str	r0, [sp, #8]
   12f66:	e7ff      	b.n	12f68 <_ZN94_$LT$core..iter..adapters..Skip$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5dfb2ac71c34bd52E+0x32>
   12f68:	e000      	b.n	12f6c <_ZN94_$LT$core..iter..adapters..Skip$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5dfb2ac71c34bd52E+0x36>
   12f6a:	e7ff      	b.n	12f6c <_ZN94_$LT$core..iter..adapters..Skip$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5dfb2ac71c34bd52E+0x36>
   12f6c:	9802      	ldr	r0, [sp, #8]
   12f6e:	b004      	add	sp, #16
   12f70:	bd80      	pop	{r7, pc}

00012f72 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h3fb04b13b5ec248cE>:
   12f72:	b580      	push	{r7, lr}
   12f74:	b084      	sub	sp, #16
   12f76:	9002      	str	r0, [sp, #8]
   12f78:	9103      	str	r1, [sp, #12]
   12f7a:	9802      	ldr	r0, [sp, #8]
   12f7c:	9903      	ldr	r1, [sp, #12]
   12f7e:	f000 f810 	bl	12fa2 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h7a427e4902d8aacdE>
   12f82:	9001      	str	r0, [sp, #4]
   12f84:	e7ff      	b.n	12f86 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h3fb04b13b5ec248cE+0x14>
   12f86:	9801      	ldr	r0, [sp, #4]
   12f88:	b004      	add	sp, #16
   12f8a:	bd80      	pop	{r7, pc}

00012f8c <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4read17ha30847483b011195E>:
   12f8c:	b580      	push	{r7, lr}
   12f8e:	b082      	sub	sp, #8
   12f90:	9001      	str	r0, [sp, #4]
   12f92:	9801      	ldr	r0, [sp, #4]
   12f94:	f7ff fa93 	bl	124be <_ZN4core3ptr4read17haf4f0ceffd7a00beE>
   12f98:	9000      	str	r0, [sp, #0]
   12f9a:	e7ff      	b.n	12f9c <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4read17ha30847483b011195E+0x10>
   12f9c:	9800      	ldr	r0, [sp, #0]
   12f9e:	b002      	add	sp, #8
   12fa0:	bd80      	pop	{r7, pc}

00012fa2 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h7a427e4902d8aacdE>:
   12fa2:	b084      	sub	sp, #16
   12fa4:	9001      	str	r0, [sp, #4]
   12fa6:	9102      	str	r1, [sp, #8]
   12fa8:	9801      	ldr	r0, [sp, #4]
   12faa:	9902      	ldr	r1, [sp, #8]
   12fac:	eb00 0041 	add.w	r0, r0, r1, lsl #1
   12fb0:	9003      	str	r0, [sp, #12]
   12fb2:	9803      	ldr	r0, [sp, #12]
   12fb4:	9000      	str	r0, [sp, #0]
   12fb6:	e7ff      	b.n	12fb8 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h7a427e4902d8aacdE+0x16>
   12fb8:	9800      	ldr	r0, [sp, #0]
   12fba:	b004      	add	sp, #16
   12fbc:	4770      	bx	lr

00012fbe <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h9c1881d8c7d72ca4E>:
   12fbe:	b082      	sub	sp, #8
   12fc0:	9001      	str	r0, [sp, #4]
   12fc2:	9801      	ldr	r0, [sp, #4]
   12fc4:	9000      	str	r0, [sp, #0]
   12fc6:	e7ff      	b.n	12fc8 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h9c1881d8c7d72ca4E+0xa>
   12fc8:	9800      	ldr	r0, [sp, #0]
   12fca:	fab0 f180 	clz	r1, r0
   12fce:	0948      	lsrs	r0, r1, #5
   12fd0:	b002      	add	sp, #8
   12fd2:	4770      	bx	lr

00012fd4 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h6facc8ab36e62850E>:
   12fd4:	b082      	sub	sp, #8
   12fd6:	9000      	str	r0, [sp, #0]
   12fd8:	9800      	ldr	r0, [sp, #0]
   12fda:	9001      	str	r0, [sp, #4]
   12fdc:	9801      	ldr	r0, [sp, #4]
   12fde:	b002      	add	sp, #8
   12fe0:	4770      	bx	lr

00012fe2 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h62416eeff0482c5eE>:
   12fe2:	b081      	sub	sp, #4
   12fe4:	9000      	str	r0, [sp, #0]
   12fe6:	9800      	ldr	r0, [sp, #0]
   12fe8:	b001      	add	sp, #4
   12fea:	4770      	bx	lr

00012fec <_ZN8heapless3vec43_$LT$impl$u20$heapless..i..Vec$LT$A$GT$$GT$3new17h04e2eec77c4dd0eaE>:
    pub const fn new() -> Self {
   12fec:	b580      	push	{r7, lr}
   12fee:	b0b4      	sub	sp, #208	; 0xd0
            buffer: MaybeUninit::uninit(),
   12ff0:	9001      	str	r0, [sp, #4]
   12ff2:	e7ff      	b.n	12ff4 <_ZN8heapless3vec43_$LT$impl$u20$heapless..i..Vec$LT$A$GT$$GT$3new17h04e2eec77c4dd0eaE+0x8>
        Self {
   12ff4:	9801      	ldr	r0, [sp, #4]
   12ff6:	3004      	adds	r0, #4
   12ff8:	a902      	add	r1, sp, #8
   12ffa:	22c8      	movs	r2, #200	; 0xc8
   12ffc:	f007 ff74 	bl	1aee8 <__aeabi_memcpy>
   13000:	2100      	movs	r1, #0
   13002:	9a01      	ldr	r2, [sp, #4]
   13004:	6011      	str	r1, [r2, #0]
    }
   13006:	b034      	add	sp, #208	; 0xd0
   13008:	bd80      	pop	{r7, pc}

0001300a <_ZN8heapless3vec43_$LT$impl$u20$heapless..i..Vec$LT$A$GT$$GT$3new17hf28c8bb9ce5859bfE>:
    pub const fn new() -> Self {
   1300a:	b580      	push	{r7, lr}
   1300c:	b09a      	sub	sp, #104	; 0x68
            buffer: MaybeUninit::uninit(),
   1300e:	9000      	str	r0, [sp, #0]
   13010:	e7ff      	b.n	13012 <_ZN8heapless3vec43_$LT$impl$u20$heapless..i..Vec$LT$A$GT$$GT$3new17hf28c8bb9ce5859bfE+0x8>
        Self {
   13012:	9800      	ldr	r0, [sp, #0]
   13014:	3004      	adds	r0, #4
   13016:	a901      	add	r1, sp, #4
   13018:	2264      	movs	r2, #100	; 0x64
   1301a:	f007 ff65 	bl	1aee8 <__aeabi_memcpy>
   1301e:	2100      	movs	r1, #0
   13020:	9a00      	ldr	r2, [sp, #0]
   13022:	6011      	str	r1, [r2, #0]
    }
   13024:	b01a      	add	sp, #104	; 0x68
   13026:	bd80      	pop	{r7, pc}

00013028 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$12as_mut_slice17h423181f0fc191f3bE>:
    pub(crate) fn as_mut_slice(&mut self) -> &mut [T] {
   13028:	b580      	push	{r7, lr}
   1302a:	b086      	sub	sp, #24
   1302c:	9003      	str	r0, [sp, #12]
        unsafe { slice::from_raw_parts_mut(self.buffer.as_mut_ptr() as *mut T, self.len) }
   1302e:	9803      	ldr	r0, [sp, #12]
   13030:	3004      	adds	r0, #4
   13032:	9004      	str	r0, [sp, #16]
   13034:	9804      	ldr	r0, [sp, #16]
   13036:	9005      	str	r0, [sp, #20]
   13038:	9805      	ldr	r0, [sp, #20]
   1303a:	9002      	str	r0, [sp, #8]
   1303c:	e7ff      	b.n	1303e <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$12as_mut_slice17h423181f0fc191f3bE+0x16>
   1303e:	9803      	ldr	r0, [sp, #12]
   13040:	6801      	ldr	r1, [r0, #0]
   13042:	9802      	ldr	r0, [sp, #8]
   13044:	f7fe ffb0 	bl	11fa8 <_ZN4core5slice18from_raw_parts_mut17h47a86ba558f64211E>
   13048:	9001      	str	r0, [sp, #4]
   1304a:	9100      	str	r1, [sp, #0]
   1304c:	e7ff      	b.n	1304e <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$12as_mut_slice17h423181f0fc191f3bE+0x26>
    }
   1304e:	9801      	ldr	r0, [sp, #4]
   13050:	9900      	ldr	r1, [sp, #0]
   13052:	b006      	add	sp, #24
   13054:	bd80      	pop	{r7, pc}

00013056 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$12as_mut_slice17hd7a3ad965fa56823E>:
    pub(crate) fn as_mut_slice(&mut self) -> &mut [T] {
   13056:	b580      	push	{r7, lr}
   13058:	b086      	sub	sp, #24
   1305a:	9003      	str	r0, [sp, #12]
        unsafe { slice::from_raw_parts_mut(self.buffer.as_mut_ptr() as *mut T, self.len) }
   1305c:	9803      	ldr	r0, [sp, #12]
   1305e:	3004      	adds	r0, #4
   13060:	9004      	str	r0, [sp, #16]
   13062:	9804      	ldr	r0, [sp, #16]
   13064:	9005      	str	r0, [sp, #20]
   13066:	9805      	ldr	r0, [sp, #20]
   13068:	9002      	str	r0, [sp, #8]
   1306a:	e7ff      	b.n	1306c <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$12as_mut_slice17hd7a3ad965fa56823E+0x16>
   1306c:	9803      	ldr	r0, [sp, #12]
   1306e:	6801      	ldr	r1, [r0, #0]
   13070:	9802      	ldr	r0, [sp, #8]
   13072:	f7fe ff99 	bl	11fa8 <_ZN4core5slice18from_raw_parts_mut17h47a86ba558f64211E>
   13076:	9001      	str	r0, [sp, #4]
   13078:	9100      	str	r1, [sp, #0]
   1307a:	e7ff      	b.n	1307c <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$12as_mut_slice17hd7a3ad965fa56823E+0x26>
    }
   1307c:	9801      	ldr	r0, [sp, #4]
   1307e:	9900      	ldr	r1, [sp, #0]
   13080:	b006      	add	sp, #24
   13082:	bd80      	pop	{r7, pc}

00013084 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17h0dd49d59041e1de6E>:
    pub(crate) unsafe fn push_unchecked(&mut self, item: T) {
   13084:	b580      	push	{r7, lr}
   13086:	b088      	sub	sp, #32
   13088:	460a      	mov	r2, r1
   1308a:	9004      	str	r0, [sp, #16]
   1308c:	f8ad 1016 	strh.w	r1, [sp, #22]
        (self.buffer.as_mut_ptr() as *mut T)
   13090:	9804      	ldr	r0, [sp, #16]
   13092:	3004      	adds	r0, #4
   13094:	9006      	str	r0, [sp, #24]
   13096:	9806      	ldr	r0, [sp, #24]
   13098:	9007      	str	r0, [sp, #28]
   1309a:	9807      	ldr	r0, [sp, #28]
   1309c:	9003      	str	r0, [sp, #12]
   1309e:	e7ff      	b.n	130a0 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17h0dd49d59041e1de6E+0x1c>
            .add(self.len)
   130a0:	9804      	ldr	r0, [sp, #16]
   130a2:	6801      	ldr	r1, [r0, #0]
        (self.buffer.as_mut_ptr() as *mut T)
   130a4:	9803      	ldr	r0, [sp, #12]
   130a6:	f7ff f95b 	bl	12360 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hbc622ca7bdac324fE>
   130aa:	9002      	str	r0, [sp, #8]
   130ac:	e7ff      	b.n	130ae <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17h0dd49d59041e1de6E+0x2a>
   130ae:	f8bd 1016 	ldrh.w	r1, [sp, #22]
   130b2:	9802      	ldr	r0, [sp, #8]
   130b4:	f7ff f961 	bl	1237a <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$5write17hc9dc45cef6ac5c46E>
   130b8:	e7ff      	b.n	130ba <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17h0dd49d59041e1de6E+0x36>
        self.len += 1;
   130ba:	9804      	ldr	r0, [sp, #16]
   130bc:	6800      	ldr	r0, [r0, #0]
   130be:	1c41      	adds	r1, r0, #1
   130c0:	460a      	mov	r2, r1
   130c2:	4281      	cmp	r1, r0
   130c4:	9201      	str	r2, [sp, #4]
   130c6:	d305      	bcc.n	130d4 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17h0dd49d59041e1de6E+0x50>
   130c8:	e7ff      	b.n	130ca <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17h0dd49d59041e1de6E+0x46>
   130ca:	9804      	ldr	r0, [sp, #16]
   130cc:	9901      	ldr	r1, [sp, #4]
   130ce:	6001      	str	r1, [r0, #0]
    }
   130d0:	b008      	add	sp, #32
   130d2:	bd80      	pop	{r7, pc}
        self.len += 1;
   130d4:	f24e 2020 	movw	r0, #57888	; 0xe220
   130d8:	f2c0 0001 	movt	r0, #1
   130dc:	f24e 2204 	movw	r2, #57860	; 0xe204
   130e0:	f2c0 0201 	movt	r2, #1
   130e4:	211c      	movs	r1, #28
   130e6:	f001 fd5c 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   130ea:	defe      	udf	#254	; 0xfe

000130ec <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17ha1430f0b0f6ac01fE>:
    pub(crate) unsafe fn push_unchecked(&mut self, item: T) {
   130ec:	b580      	push	{r7, lr}
   130ee:	b088      	sub	sp, #32
   130f0:	460a      	mov	r2, r1
   130f2:	9004      	str	r0, [sp, #16]
   130f4:	f8ad 1016 	strh.w	r1, [sp, #22]
        (self.buffer.as_mut_ptr() as *mut T)
   130f8:	9804      	ldr	r0, [sp, #16]
   130fa:	3004      	adds	r0, #4
   130fc:	9006      	str	r0, [sp, #24]
   130fe:	9806      	ldr	r0, [sp, #24]
   13100:	9007      	str	r0, [sp, #28]
   13102:	9807      	ldr	r0, [sp, #28]
   13104:	9003      	str	r0, [sp, #12]
   13106:	e7ff      	b.n	13108 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17ha1430f0b0f6ac01fE+0x1c>
            .add(self.len)
   13108:	9804      	ldr	r0, [sp, #16]
   1310a:	6801      	ldr	r1, [r0, #0]
        (self.buffer.as_mut_ptr() as *mut T)
   1310c:	9803      	ldr	r0, [sp, #12]
   1310e:	f7ff f927 	bl	12360 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hbc622ca7bdac324fE>
   13112:	9002      	str	r0, [sp, #8]
   13114:	e7ff      	b.n	13116 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17ha1430f0b0f6ac01fE+0x2a>
   13116:	f8bd 1016 	ldrh.w	r1, [sp, #22]
   1311a:	9802      	ldr	r0, [sp, #8]
   1311c:	f7ff f92d 	bl	1237a <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$5write17hc9dc45cef6ac5c46E>
   13120:	e7ff      	b.n	13122 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17ha1430f0b0f6ac01fE+0x36>
        self.len += 1;
   13122:	9804      	ldr	r0, [sp, #16]
   13124:	6800      	ldr	r0, [r0, #0]
   13126:	1c41      	adds	r1, r0, #1
   13128:	460a      	mov	r2, r1
   1312a:	4281      	cmp	r1, r0
   1312c:	9201      	str	r2, [sp, #4]
   1312e:	d305      	bcc.n	1313c <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17ha1430f0b0f6ac01fE+0x50>
   13130:	e7ff      	b.n	13132 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17ha1430f0b0f6ac01fE+0x46>
   13132:	9804      	ldr	r0, [sp, #16]
   13134:	9901      	ldr	r1, [sp, #4]
   13136:	6001      	str	r1, [r0, #0]
    }
   13138:	b008      	add	sp, #32
   1313a:	bd80      	pop	{r7, pc}
        self.len += 1;
   1313c:	f24e 2020 	movw	r0, #57888	; 0xe220
   13140:	f2c0 0001 	movt	r0, #1
   13144:	f24e 2204 	movw	r2, #57860	; 0xe204
   13148:	f2c0 0201 	movt	r2, #1
   1314c:	211c      	movs	r1, #28
   1314e:	f001 fd28 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   13152:	defe      	udf	#254	; 0xfe

00013154 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h779f12bc5c972a6aE>:
    pub(crate) fn extend_from_slice(&mut self, other: &[T]) -> Result<(), ()>
   13154:	b580      	push	{r7, lr}
   13156:	b094      	sub	sp, #80	; 0x50
   13158:	9008      	str	r0, [sp, #32]
   1315a:	9109      	str	r1, [sp, #36]	; 0x24
   1315c:	920a      	str	r2, [sp, #40]	; 0x28
        if self.len + other.len() > self.capacity() {
   1315e:	9808      	ldr	r0, [sp, #32]
   13160:	6800      	ldr	r0, [r0, #0]
   13162:	9909      	ldr	r1, [sp, #36]	; 0x24
   13164:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   13166:	9007      	str	r0, [sp, #28]
   13168:	4608      	mov	r0, r1
   1316a:	4611      	mov	r1, r2
   1316c:	f7fe ff7b 	bl	12066 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hec67cb8a299117cdE>
   13170:	9006      	str	r0, [sp, #24]
   13172:	e7ff      	b.n	13174 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h779f12bc5c972a6aE+0x20>
   13174:	9807      	ldr	r0, [sp, #28]
   13176:	9906      	ldr	r1, [sp, #24]
   13178:	1842      	adds	r2, r0, r1
   1317a:	4613      	mov	r3, r2
   1317c:	4282      	cmp	r2, r0
   1317e:	9305      	str	r3, [sp, #20]
   13180:	d345      	bcc.n	1320e <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h779f12bc5c972a6aE+0xba>
   13182:	e7ff      	b.n	13184 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h779f12bc5c972a6aE+0x30>
   13184:	9808      	ldr	r0, [sp, #32]
   13186:	f000 f972 	bl	1346e <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8capacity17h74febb62c2e95899E>
   1318a:	9004      	str	r0, [sp, #16]
   1318c:	e7ff      	b.n	1318e <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h779f12bc5c972a6aE+0x3a>
   1318e:	9805      	ldr	r0, [sp, #20]
   13190:	9904      	ldr	r1, [sp, #16]
   13192:	4288      	cmp	r0, r1
   13194:	d807      	bhi.n	131a6 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h779f12bc5c972a6aE+0x52>
   13196:	e7ff      	b.n	13198 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h779f12bc5c972a6aE+0x44>
            for elem in other {
   13198:	9809      	ldr	r0, [sp, #36]	; 0x24
   1319a:	990a      	ldr	r1, [sp, #40]	; 0x28
   1319c:	f7fe ffdc 	bl	12158 <_ZN4core5slice87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h5098eed5a9d9f67cE>
   131a0:	9003      	str	r0, [sp, #12]
   131a2:	9102      	str	r1, [sp, #8]
   131a4:	e003      	b.n	131ae <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h779f12bc5c972a6aE+0x5a>
   131a6:	2001      	movs	r0, #1
            Err(())
   131a8:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
        if self.len + other.len() > self.capacity() {
   131ac:	e02b      	b.n	13206 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h779f12bc5c972a6aE+0xb2>
            for elem in other {
   131ae:	9803      	ldr	r0, [sp, #12]
   131b0:	900d      	str	r0, [sp, #52]	; 0x34
   131b2:	9902      	ldr	r1, [sp, #8]
   131b4:	910e      	str	r1, [sp, #56]	; 0x38
   131b6:	e7ff      	b.n	131b8 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h779f12bc5c972a6aE+0x64>
   131b8:	a80d      	add	r0, sp, #52	; 0x34
   131ba:	f7fe fff0 	bl	1219e <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9833ca70ef8b4c89E>
   131be:	9010      	str	r0, [sp, #64]	; 0x40
   131c0:	e7ff      	b.n	131c2 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h779f12bc5c972a6aE+0x6e>
   131c2:	9810      	ldr	r0, [sp, #64]	; 0x40
   131c4:	2800      	cmp	r0, #0
   131c6:	4601      	mov	r1, r0
   131c8:	bf18      	it	ne
   131ca:	2101      	movne	r1, #1
   131cc:	2800      	cmp	r0, #0
   131ce:	d001      	beq.n	131d4 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h779f12bc5c972a6aE+0x80>
   131d0:	e7ff      	b.n	131d2 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h779f12bc5c972a6aE+0x7e>
   131d2:	e004      	b.n	131de <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h779f12bc5c972a6aE+0x8a>
   131d4:	2000      	movs	r0, #0
            Ok(())
   131d6:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
        if self.len + other.len() > self.capacity() {
   131da:	e014      	b.n	13206 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h779f12bc5c972a6aE+0xb2>
            for elem in other {
   131dc:	defe      	udf	#254	; 0xfe
   131de:	9810      	ldr	r0, [sp, #64]	; 0x40
   131e0:	9011      	str	r0, [sp, #68]	; 0x44
   131e2:	9811      	ldr	r0, [sp, #68]	; 0x44
   131e4:	900f      	str	r0, [sp, #60]	; 0x3c
   131e6:	980f      	ldr	r0, [sp, #60]	; 0x3c
   131e8:	9012      	str	r0, [sp, #72]	; 0x48
                    self.push_unchecked(elem.clone());
   131ea:	9808      	ldr	r0, [sp, #32]
   131ec:	9912      	ldr	r1, [sp, #72]	; 0x48
   131ee:	9001      	str	r0, [sp, #4]
   131f0:	4608      	mov	r0, r1
   131f2:	f7f9 fa89 	bl	c708 <_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u16$GT$5clone17h80d7c832b773feaeE>
   131f6:	9000      	str	r0, [sp, #0]
   131f8:	e7ff      	b.n	131fa <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h779f12bc5c972a6aE+0xa6>
   131fa:	9801      	ldr	r0, [sp, #4]
   131fc:	9900      	ldr	r1, [sp, #0]
   131fe:	f7ff ff41 	bl	13084 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17h0dd49d59041e1de6E>
   13202:	e7ff      	b.n	13204 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h779f12bc5c972a6aE+0xb0>
            for elem in other {
   13204:	e7d8      	b.n	131b8 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h779f12bc5c972a6aE+0x64>
    }
   13206:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
   1320a:	b014      	add	sp, #80	; 0x50
   1320c:	bd80      	pop	{r7, pc}
        if self.len + other.len() > self.capacity() {
   1320e:	f24e 2020 	movw	r0, #57888	; 0xe220
   13212:	f2c0 0001 	movt	r0, #1
   13216:	f24e 223c 	movw	r2, #57916	; 0xe23c
   1321a:	f2c0 0201 	movt	r2, #1
   1321e:	211c      	movs	r1, #28
   13220:	f001 fcbf 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   13224:	defe      	udf	#254	; 0xfe

00013226 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17hdd6ea2e2d6dd3eeaE>:
    pub(crate) fn extend_from_slice(&mut self, other: &[T]) -> Result<(), ()>
   13226:	b580      	push	{r7, lr}
   13228:	b094      	sub	sp, #80	; 0x50
   1322a:	9008      	str	r0, [sp, #32]
   1322c:	9109      	str	r1, [sp, #36]	; 0x24
   1322e:	920a      	str	r2, [sp, #40]	; 0x28
        if self.len + other.len() > self.capacity() {
   13230:	9808      	ldr	r0, [sp, #32]
   13232:	6800      	ldr	r0, [r0, #0]
   13234:	9909      	ldr	r1, [sp, #36]	; 0x24
   13236:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   13238:	9007      	str	r0, [sp, #28]
   1323a:	4608      	mov	r0, r1
   1323c:	4611      	mov	r1, r2
   1323e:	f7fe ff12 	bl	12066 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hec67cb8a299117cdE>
   13242:	9006      	str	r0, [sp, #24]
   13244:	e7ff      	b.n	13246 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17hdd6ea2e2d6dd3eeaE+0x20>
   13246:	9807      	ldr	r0, [sp, #28]
   13248:	9906      	ldr	r1, [sp, #24]
   1324a:	1842      	adds	r2, r0, r1
   1324c:	4613      	mov	r3, r2
   1324e:	4282      	cmp	r2, r0
   13250:	9305      	str	r3, [sp, #20]
   13252:	d345      	bcc.n	132e0 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17hdd6ea2e2d6dd3eeaE+0xba>
   13254:	e7ff      	b.n	13256 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17hdd6ea2e2d6dd3eeaE+0x30>
   13256:	9808      	ldr	r0, [sp, #32]
   13258:	f000 f913 	bl	13482 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8capacity17hba5250b1ad301f74E>
   1325c:	9004      	str	r0, [sp, #16]
   1325e:	e7ff      	b.n	13260 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17hdd6ea2e2d6dd3eeaE+0x3a>
   13260:	9805      	ldr	r0, [sp, #20]
   13262:	9904      	ldr	r1, [sp, #16]
   13264:	4288      	cmp	r0, r1
   13266:	d807      	bhi.n	13278 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17hdd6ea2e2d6dd3eeaE+0x52>
   13268:	e7ff      	b.n	1326a <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17hdd6ea2e2d6dd3eeaE+0x44>
            for elem in other {
   1326a:	9809      	ldr	r0, [sp, #36]	; 0x24
   1326c:	990a      	ldr	r1, [sp, #40]	; 0x28
   1326e:	f7fe ff73 	bl	12158 <_ZN4core5slice87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h5098eed5a9d9f67cE>
   13272:	9003      	str	r0, [sp, #12]
   13274:	9102      	str	r1, [sp, #8]
   13276:	e003      	b.n	13280 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17hdd6ea2e2d6dd3eeaE+0x5a>
   13278:	2001      	movs	r0, #1
            Err(())
   1327a:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
        if self.len + other.len() > self.capacity() {
   1327e:	e02b      	b.n	132d8 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17hdd6ea2e2d6dd3eeaE+0xb2>
            for elem in other {
   13280:	9803      	ldr	r0, [sp, #12]
   13282:	900d      	str	r0, [sp, #52]	; 0x34
   13284:	9902      	ldr	r1, [sp, #8]
   13286:	910e      	str	r1, [sp, #56]	; 0x38
   13288:	e7ff      	b.n	1328a <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17hdd6ea2e2d6dd3eeaE+0x64>
   1328a:	a80d      	add	r0, sp, #52	; 0x34
   1328c:	f7fe ff87 	bl	1219e <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9833ca70ef8b4c89E>
   13290:	9010      	str	r0, [sp, #64]	; 0x40
   13292:	e7ff      	b.n	13294 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17hdd6ea2e2d6dd3eeaE+0x6e>
   13294:	9810      	ldr	r0, [sp, #64]	; 0x40
   13296:	2800      	cmp	r0, #0
   13298:	4601      	mov	r1, r0
   1329a:	bf18      	it	ne
   1329c:	2101      	movne	r1, #1
   1329e:	2800      	cmp	r0, #0
   132a0:	d001      	beq.n	132a6 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17hdd6ea2e2d6dd3eeaE+0x80>
   132a2:	e7ff      	b.n	132a4 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17hdd6ea2e2d6dd3eeaE+0x7e>
   132a4:	e004      	b.n	132b0 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17hdd6ea2e2d6dd3eeaE+0x8a>
   132a6:	2000      	movs	r0, #0
            Ok(())
   132a8:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
        if self.len + other.len() > self.capacity() {
   132ac:	e014      	b.n	132d8 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17hdd6ea2e2d6dd3eeaE+0xb2>
            for elem in other {
   132ae:	defe      	udf	#254	; 0xfe
   132b0:	9810      	ldr	r0, [sp, #64]	; 0x40
   132b2:	9011      	str	r0, [sp, #68]	; 0x44
   132b4:	9811      	ldr	r0, [sp, #68]	; 0x44
   132b6:	900f      	str	r0, [sp, #60]	; 0x3c
   132b8:	980f      	ldr	r0, [sp, #60]	; 0x3c
   132ba:	9012      	str	r0, [sp, #72]	; 0x48
                    self.push_unchecked(elem.clone());
   132bc:	9808      	ldr	r0, [sp, #32]
   132be:	9912      	ldr	r1, [sp, #72]	; 0x48
   132c0:	9001      	str	r0, [sp, #4]
   132c2:	4608      	mov	r0, r1
   132c4:	f7f9 fa20 	bl	c708 <_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u16$GT$5clone17h80d7c832b773feaeE>
   132c8:	9000      	str	r0, [sp, #0]
   132ca:	e7ff      	b.n	132cc <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17hdd6ea2e2d6dd3eeaE+0xa6>
   132cc:	9801      	ldr	r0, [sp, #4]
   132ce:	9900      	ldr	r1, [sp, #0]
   132d0:	f7ff ff0c 	bl	130ec <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17ha1430f0b0f6ac01fE>
   132d4:	e7ff      	b.n	132d6 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17hdd6ea2e2d6dd3eeaE+0xb0>
            for elem in other {
   132d6:	e7d8      	b.n	1328a <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17hdd6ea2e2d6dd3eeaE+0x64>
    }
   132d8:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
   132dc:	b014      	add	sp, #80	; 0x50
   132de:	bd80      	pop	{r7, pc}
        if self.len + other.len() > self.capacity() {
   132e0:	f24e 2020 	movw	r0, #57888	; 0xe220
   132e4:	f2c0 0001 	movt	r0, #1
   132e8:	f24e 223c 	movw	r2, #57916	; 0xe23c
   132ec:	f2c0 0201 	movt	r2, #1
   132f0:	211c      	movs	r1, #28
   132f2:	f001 fc56 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   132f6:	defe      	udf	#254	; 0xfe

000132f8 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$4push17h754f60661e90a90bE>:
    pub(crate) fn push(&mut self, item: T) -> Result<(), T> {
   132f8:	b580      	push	{r7, lr}
   132fa:	b088      	sub	sp, #32
   132fc:	460a      	mov	r2, r1
   132fe:	9004      	str	r0, [sp, #16]
   13300:	f8ad 1016 	strh.w	r1, [sp, #22]
        if self.len < self.capacity() {
   13304:	9804      	ldr	r0, [sp, #16]
   13306:	6801      	ldr	r1, [r0, #0]
   13308:	9203      	str	r2, [sp, #12]
   1330a:	9102      	str	r1, [sp, #8]
   1330c:	f000 f8b9 	bl	13482 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8capacity17hba5250b1ad301f74E>
   13310:	9001      	str	r0, [sp, #4]
   13312:	e7ff      	b.n	13314 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$4push17h754f60661e90a90bE+0x1c>
   13314:	9802      	ldr	r0, [sp, #8]
   13316:	9901      	ldr	r1, [sp, #4]
   13318:	4288      	cmp	r0, r1
   1331a:	d308      	bcc.n	1332e <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$4push17h754f60661e90a90bE+0x36>
   1331c:	e7ff      	b.n	1331e <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$4push17h754f60661e90a90bE+0x26>
            Err(item)
   1331e:	f8bd 0016 	ldrh.w	r0, [sp, #22]
   13322:	f8ad 001a 	strh.w	r0, [sp, #26]
   13326:	2001      	movs	r0, #1
   13328:	f8ad 0018 	strh.w	r0, [sp, #24]
        if self.len < self.capacity() {
   1332c:	e009      	b.n	13342 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$4push17h754f60661e90a90bE+0x4a>
            unsafe { self.push_unchecked(item) }
   1332e:	9804      	ldr	r0, [sp, #16]
   13330:	f8bd 1016 	ldrh.w	r1, [sp, #22]
   13334:	f7ff feda 	bl	130ec <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17ha1430f0b0f6ac01fE>
   13338:	e7ff      	b.n	1333a <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$4push17h754f60661e90a90bE+0x42>
   1333a:	2000      	movs	r0, #0
            Ok(())
   1333c:	f8ad 0018 	strh.w	r0, [sp, #24]
        if self.len < self.capacity() {
   13340:	e7ff      	b.n	13342 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$4push17h754f60661e90a90bE+0x4a>
    }
   13342:	f8bd 0018 	ldrh.w	r0, [sp, #24]
   13346:	f8bd 101a 	ldrh.w	r1, [sp, #26]
   1334a:	b008      	add	sp, #32
   1334c:	bd80      	pop	{r7, pc}

0001334e <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clear17h08f42ada9e8c2da3E>:
    pub(crate) fn clear(&mut self) {
   1334e:	b580      	push	{r7, lr}
   13350:	b082      	sub	sp, #8
   13352:	9001      	str	r0, [sp, #4]
        self.truncate(0);
   13354:	9801      	ldr	r0, [sp, #4]
   13356:	2100      	movs	r1, #0
   13358:	f000 f8d4 	bl	13504 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17ha4b1953e89f4ba37E>
   1335c:	e7ff      	b.n	1335e <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clear17h08f42ada9e8c2da3E+0x10>
    }
   1335e:	b002      	add	sp, #8
   13360:	bd80      	pop	{r7, pc}

00013362 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clear17h53693887508266c2E>:
    pub(crate) fn clear(&mut self) {
   13362:	b580      	push	{r7, lr}
   13364:	b082      	sub	sp, #8
   13366:	9001      	str	r0, [sp, #4]
        self.truncate(0);
   13368:	9801      	ldr	r0, [sp, #4]
   1336a:	2100      	movs	r1, #0
   1336c:	f000 f893 	bl	13496 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17h0097793e247b2fd6E>
   13370:	e7ff      	b.n	13372 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clear17h53693887508266c2E+0x10>
    }
   13372:	b002      	add	sp, #8
   13374:	bd80      	pop	{r7, pc}

00013376 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clone17h332c8b5925589cb8E>:
    pub(crate) fn clone(&self) -> Self
   13376:	b580      	push	{r7, lr}
   13378:	b0b8      	sub	sp, #224	; 0xe0
   1337a:	9104      	str	r1, [sp, #16]
   1337c:	a905      	add	r1, sp, #20
        let mut new = Self::new();
   1337e:	9003      	str	r0, [sp, #12]
   13380:	4608      	mov	r0, r1
   13382:	f7ff fe33 	bl	12fec <_ZN8heapless3vec43_$LT$impl$u20$heapless..i..Vec$LT$A$GT$$GT$3new17h04e2eec77c4dd0eaE>
   13386:	e7ff      	b.n	13388 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clone17h332c8b5925589cb8E+0x12>
        new.extend_from_slice(self.as_slice()).unwrap();
   13388:	9804      	ldr	r0, [sp, #16]
   1338a:	f000 f859 	bl	13440 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8as_slice17hd2887c0af1cc9236E>
   1338e:	9002      	str	r0, [sp, #8]
   13390:	9101      	str	r1, [sp, #4]
   13392:	e7ff      	b.n	13394 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clone17h332c8b5925589cb8E+0x1e>
   13394:	a805      	add	r0, sp, #20
   13396:	9902      	ldr	r1, [sp, #8]
   13398:	9a01      	ldr	r2, [sp, #4]
   1339a:	f7ff fedb 	bl	13154 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h779f12bc5c972a6aE>
   1339e:	9000      	str	r0, [sp, #0]
   133a0:	e7ff      	b.n	133a2 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clone17h332c8b5925589cb8E+0x2c>
   133a2:	9800      	ldr	r0, [sp, #0]
   133a4:	f000 0001 	and.w	r0, r0, #1
   133a8:	f24e 214c 	movw	r1, #57932	; 0xe24c
   133ac:	f2c0 0101 	movt	r1, #1
   133b0:	f7f8 fe69 	bl	c086 <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h3f4d72a8eb60b230E>
   133b4:	e7ff      	b.n	133b6 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clone17h332c8b5925589cb8E+0x40>
   133b6:	a905      	add	r1, sp, #20
   133b8:	22cc      	movs	r2, #204	; 0xcc
        new
   133ba:	9803      	ldr	r0, [sp, #12]
   133bc:	f007 fd94 	bl	1aee8 <__aeabi_memcpy>
    }
   133c0:	b038      	add	sp, #224	; 0xe0
   133c2:	bd80      	pop	{r7, pc}

000133c4 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clone17hd0a55affb7a814dfE>:
    pub(crate) fn clone(&self) -> Self
   133c4:	b580      	push	{r7, lr}
   133c6:	b0a0      	sub	sp, #128	; 0x80
   133c8:	9105      	str	r1, [sp, #20]
   133ca:	a906      	add	r1, sp, #24
        let mut new = Self::new();
   133cc:	9004      	str	r0, [sp, #16]
   133ce:	4608      	mov	r0, r1
   133d0:	f7ff fe1b 	bl	1300a <_ZN8heapless3vec43_$LT$impl$u20$heapless..i..Vec$LT$A$GT$$GT$3new17hf28c8bb9ce5859bfE>
   133d4:	e7ff      	b.n	133d6 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clone17hd0a55affb7a814dfE+0x12>
        new.extend_from_slice(self.as_slice()).unwrap();
   133d6:	9805      	ldr	r0, [sp, #20]
   133d8:	f000 f81b 	bl	13412 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8as_slice17h94be6718d312c771E>
   133dc:	9003      	str	r0, [sp, #12]
   133de:	9102      	str	r1, [sp, #8]
   133e0:	e7ff      	b.n	133e2 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clone17hd0a55affb7a814dfE+0x1e>
   133e2:	a806      	add	r0, sp, #24
   133e4:	9903      	ldr	r1, [sp, #12]
   133e6:	9a02      	ldr	r2, [sp, #8]
   133e8:	f7ff ff1d 	bl	13226 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17hdd6ea2e2d6dd3eeaE>
   133ec:	9001      	str	r0, [sp, #4]
   133ee:	e7ff      	b.n	133f0 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clone17hd0a55affb7a814dfE+0x2c>
   133f0:	9801      	ldr	r0, [sp, #4]
   133f2:	f000 0001 	and.w	r0, r0, #1
   133f6:	f24e 214c 	movw	r1, #57932	; 0xe24c
   133fa:	f2c0 0101 	movt	r1, #1
   133fe:	f7f8 fe42 	bl	c086 <_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h3f4d72a8eb60b230E>
   13402:	e7ff      	b.n	13404 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clone17hd0a55affb7a814dfE+0x40>
   13404:	a906      	add	r1, sp, #24
   13406:	2268      	movs	r2, #104	; 0x68
        new
   13408:	9804      	ldr	r0, [sp, #16]
   1340a:	f007 fd6d 	bl	1aee8 <__aeabi_memcpy>
    }
   1340e:	b020      	add	sp, #128	; 0x80
   13410:	bd80      	pop	{r7, pc}

00013412 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8as_slice17h94be6718d312c771E>:
    pub(crate) fn as_slice(&self) -> &[T] {
   13412:	b580      	push	{r7, lr}
   13414:	b086      	sub	sp, #24
   13416:	9003      	str	r0, [sp, #12]
        unsafe { slice::from_raw_parts(self.buffer.as_ptr() as *const T, self.len) }
   13418:	9803      	ldr	r0, [sp, #12]
   1341a:	3004      	adds	r0, #4
   1341c:	9004      	str	r0, [sp, #16]
   1341e:	9804      	ldr	r0, [sp, #16]
   13420:	9005      	str	r0, [sp, #20]
   13422:	9805      	ldr	r0, [sp, #20]
   13424:	9002      	str	r0, [sp, #8]
   13426:	e7ff      	b.n	13428 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8as_slice17h94be6718d312c771E+0x16>
   13428:	9803      	ldr	r0, [sp, #12]
   1342a:	6801      	ldr	r1, [r0, #0]
   1342c:	9802      	ldr	r0, [sp, #8]
   1342e:	f7fe fd71 	bl	11f14 <_ZN4core5slice14from_raw_parts17hac284bbd2a634d55E>
   13432:	9001      	str	r0, [sp, #4]
   13434:	9100      	str	r1, [sp, #0]
   13436:	e7ff      	b.n	13438 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8as_slice17h94be6718d312c771E+0x26>
    }
   13438:	9801      	ldr	r0, [sp, #4]
   1343a:	9900      	ldr	r1, [sp, #0]
   1343c:	b006      	add	sp, #24
   1343e:	bd80      	pop	{r7, pc}

00013440 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8as_slice17hd2887c0af1cc9236E>:
    pub(crate) fn as_slice(&self) -> &[T] {
   13440:	b580      	push	{r7, lr}
   13442:	b086      	sub	sp, #24
   13444:	9003      	str	r0, [sp, #12]
        unsafe { slice::from_raw_parts(self.buffer.as_ptr() as *const T, self.len) }
   13446:	9803      	ldr	r0, [sp, #12]
   13448:	3004      	adds	r0, #4
   1344a:	9004      	str	r0, [sp, #16]
   1344c:	9804      	ldr	r0, [sp, #16]
   1344e:	9005      	str	r0, [sp, #20]
   13450:	9805      	ldr	r0, [sp, #20]
   13452:	9002      	str	r0, [sp, #8]
   13454:	e7ff      	b.n	13456 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8as_slice17hd2887c0af1cc9236E+0x16>
   13456:	9803      	ldr	r0, [sp, #12]
   13458:	6801      	ldr	r1, [r0, #0]
   1345a:	9802      	ldr	r0, [sp, #8]
   1345c:	f7fe fd5a 	bl	11f14 <_ZN4core5slice14from_raw_parts17hac284bbd2a634d55E>
   13460:	9001      	str	r0, [sp, #4]
   13462:	9100      	str	r1, [sp, #0]
   13464:	e7ff      	b.n	13466 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8as_slice17hd2887c0af1cc9236E+0x26>
    }
   13466:	9801      	ldr	r0, [sp, #4]
   13468:	9900      	ldr	r1, [sp, #0]
   1346a:	b006      	add	sp, #24
   1346c:	bd80      	pop	{r7, pc}

0001346e <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8capacity17h74febb62c2e95899E>:
    pub(crate) fn capacity(&self) -> usize {
   1346e:	b580      	push	{r7, lr}
   13470:	b082      	sub	sp, #8
   13472:	9001      	str	r0, [sp, #4]
        N::to_usize()
   13474:	f001 f838 	bl	144e8 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h560ecc478561b89bE>
   13478:	9000      	str	r0, [sp, #0]
   1347a:	e7ff      	b.n	1347c <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8capacity17h74febb62c2e95899E+0xe>
    }
   1347c:	9800      	ldr	r0, [sp, #0]
   1347e:	b002      	add	sp, #8
   13480:	bd80      	pop	{r7, pc}

00013482 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8capacity17hba5250b1ad301f74E>:
    pub(crate) fn capacity(&self) -> usize {
   13482:	b580      	push	{r7, lr}
   13484:	b082      	sub	sp, #8
   13486:	9001      	str	r0, [sp, #4]
        N::to_usize()
   13488:	f001 f846 	bl	14518 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h8d0b5f40d3d6b738E>
   1348c:	9000      	str	r0, [sp, #0]
   1348e:	e7ff      	b.n	13490 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8capacity17hba5250b1ad301f74E+0xe>
    }
   13490:	9800      	ldr	r0, [sp, #0]
   13492:	b002      	add	sp, #8
   13494:	bd80      	pop	{r7, pc}

00013496 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17h0097793e247b2fd6E>:
    pub(crate) fn truncate(&mut self, len: usize) {
   13496:	b580      	push	{r7, lr}
   13498:	b088      	sub	sp, #32
   1349a:	9004      	str	r0, [sp, #16]
   1349c:	9105      	str	r1, [sp, #20]
   1349e:	e7ff      	b.n	134a0 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17h0097793e247b2fd6E+0xa>
            while len < self.len {
   134a0:	9805      	ldr	r0, [sp, #20]
   134a2:	9904      	ldr	r1, [sp, #16]
   134a4:	6809      	ldr	r1, [r1, #0]
   134a6:	4288      	cmp	r0, r1
   134a8:	d302      	bcc.n	134b0 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17h0097793e247b2fd6E+0x1a>
   134aa:	e7ff      	b.n	134ac <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17h0097793e247b2fd6E+0x16>
    }
   134ac:	b008      	add	sp, #32
   134ae:	bd80      	pop	{r7, pc}
                self.len -= 1;
   134b0:	9804      	ldr	r0, [sp, #16]
   134b2:	6800      	ldr	r0, [r0, #0]
   134b4:	1e41      	subs	r1, r0, #1
   134b6:	2801      	cmp	r0, #1
   134b8:	9103      	str	r1, [sp, #12]
   134ba:	d317      	bcc.n	134ec <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17h0097793e247b2fd6E+0x56>
   134bc:	e7ff      	b.n	134be <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17h0097793e247b2fd6E+0x28>
   134be:	9804      	ldr	r0, [sp, #16]
   134c0:	9903      	ldr	r1, [sp, #12]
   134c2:	6001      	str	r1, [r0, #0]
                let len = self.len;
   134c4:	9804      	ldr	r0, [sp, #16]
   134c6:	6800      	ldr	r0, [r0, #0]
   134c8:	9006      	str	r0, [sp, #24]
                ptr::drop_in_place(self.as_mut_slice().get_unchecked_mut(len));
   134ca:	9804      	ldr	r0, [sp, #16]
   134cc:	f7ff fdc3 	bl	13056 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$12as_mut_slice17hd7a3ad965fa56823E>
   134d0:	9002      	str	r0, [sp, #8]
   134d2:	9101      	str	r1, [sp, #4]
   134d4:	e7ff      	b.n	134d6 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17h0097793e247b2fd6E+0x40>
   134d6:	9a06      	ldr	r2, [sp, #24]
   134d8:	9802      	ldr	r0, [sp, #8]
   134da:	9901      	ldr	r1, [sp, #4]
   134dc:	f7fe fdb4 	bl	12048 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17hc6674c70ef030218E>
   134e0:	9000      	str	r0, [sp, #0]
   134e2:	e7ff      	b.n	134e4 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17h0097793e247b2fd6E+0x4e>
   134e4:	9800      	ldr	r0, [sp, #0]
   134e6:	9007      	str	r0, [sp, #28]
   134e8:	e7ff      	b.n	134ea <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17h0097793e247b2fd6E+0x54>
            while len < self.len {
   134ea:	e7d9      	b.n	134a0 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17h0097793e247b2fd6E+0xa>
                self.len -= 1;
   134ec:	f24e 10e0 	movw	r0, #57824	; 0xe1e0
   134f0:	f2c0 0001 	movt	r0, #1
   134f4:	f24e 225c 	movw	r2, #57948	; 0xe25c
   134f8:	f2c0 0201 	movt	r2, #1
   134fc:	2121      	movs	r1, #33	; 0x21
   134fe:	f001 fb50 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   13502:	defe      	udf	#254	; 0xfe

00013504 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17ha4b1953e89f4ba37E>:
    pub(crate) fn truncate(&mut self, len: usize) {
   13504:	b580      	push	{r7, lr}
   13506:	b088      	sub	sp, #32
   13508:	9004      	str	r0, [sp, #16]
   1350a:	9105      	str	r1, [sp, #20]
   1350c:	e7ff      	b.n	1350e <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17ha4b1953e89f4ba37E+0xa>
            while len < self.len {
   1350e:	9805      	ldr	r0, [sp, #20]
   13510:	9904      	ldr	r1, [sp, #16]
   13512:	6809      	ldr	r1, [r1, #0]
   13514:	4288      	cmp	r0, r1
   13516:	d302      	bcc.n	1351e <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17ha4b1953e89f4ba37E+0x1a>
   13518:	e7ff      	b.n	1351a <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17ha4b1953e89f4ba37E+0x16>
    }
   1351a:	b008      	add	sp, #32
   1351c:	bd80      	pop	{r7, pc}
                self.len -= 1;
   1351e:	9804      	ldr	r0, [sp, #16]
   13520:	6800      	ldr	r0, [r0, #0]
   13522:	1e41      	subs	r1, r0, #1
   13524:	2801      	cmp	r0, #1
   13526:	9103      	str	r1, [sp, #12]
   13528:	d317      	bcc.n	1355a <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17ha4b1953e89f4ba37E+0x56>
   1352a:	e7ff      	b.n	1352c <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17ha4b1953e89f4ba37E+0x28>
   1352c:	9804      	ldr	r0, [sp, #16]
   1352e:	9903      	ldr	r1, [sp, #12]
   13530:	6001      	str	r1, [r0, #0]
                let len = self.len;
   13532:	9804      	ldr	r0, [sp, #16]
   13534:	6800      	ldr	r0, [r0, #0]
   13536:	9006      	str	r0, [sp, #24]
                ptr::drop_in_place(self.as_mut_slice().get_unchecked_mut(len));
   13538:	9804      	ldr	r0, [sp, #16]
   1353a:	f7ff fd75 	bl	13028 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$12as_mut_slice17h423181f0fc191f3bE>
   1353e:	9002      	str	r0, [sp, #8]
   13540:	9101      	str	r1, [sp, #4]
   13542:	e7ff      	b.n	13544 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17ha4b1953e89f4ba37E+0x40>
   13544:	9a06      	ldr	r2, [sp, #24]
   13546:	9802      	ldr	r0, [sp, #8]
   13548:	9901      	ldr	r1, [sp, #4]
   1354a:	f7fe fd7d 	bl	12048 <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17hc6674c70ef030218E>
   1354e:	9000      	str	r0, [sp, #0]
   13550:	e7ff      	b.n	13552 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17ha4b1953e89f4ba37E+0x4e>
   13552:	9800      	ldr	r0, [sp, #0]
   13554:	9007      	str	r0, [sp, #28]
   13556:	e7ff      	b.n	13558 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17ha4b1953e89f4ba37E+0x54>
            while len < self.len {
   13558:	e7d9      	b.n	1350e <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17ha4b1953e89f4ba37E+0xa>
                self.len -= 1;
   1355a:	f24e 10e0 	movw	r0, #57824	; 0xe1e0
   1355e:	f2c0 0001 	movt	r0, #1
   13562:	f24e 225c 	movw	r2, #57948	; 0xe25c
   13566:	f2c0 0201 	movt	r2, #1
   1356a:	2121      	movs	r1, #33	; 0x21
   1356c:	f001 fb19 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   13570:	defe      	udf	#254	; 0xfe

00013572 <_ZN10num_traits4cast11ToPrimitive5to_u817h633c568fdabc8347E>:
    fn to_u8(&self) -> Option<u8> {
   13572:	b580      	push	{r7, lr}
   13574:	b088      	sub	sp, #32
   13576:	9003      	str	r0, [sp, #12]
        self.to_u64().as_ref().and_then(ToPrimitive::to_u8)
   13578:	9803      	ldr	r0, [sp, #12]
   1357a:	f000 f9e3 	bl	13944 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_u6417h9f0efbcd41c695f4E>
   1357e:	9307      	str	r3, [sp, #28]
   13580:	9206      	str	r2, [sp, #24]
   13582:	9105      	str	r1, [sp, #20]
   13584:	9004      	str	r0, [sp, #16]
   13586:	e7ff      	b.n	13588 <_ZN10num_traits4cast11ToPrimitive5to_u817h633c568fdabc8347E+0x16>
   13588:	a804      	add	r0, sp, #16
   1358a:	f7f8 ff1f 	bl	c3cc <_ZN4core6option15Option$LT$T$GT$6as_ref17h79a8461e0a72edefE>
   1358e:	9002      	str	r0, [sp, #8]
   13590:	e7ff      	b.n	13592 <_ZN10num_traits4cast11ToPrimitive5to_u817h633c568fdabc8347E+0x20>
   13592:	9802      	ldr	r0, [sp, #8]
   13594:	f7f8 fff3 	bl	c57e <_ZN4core6option15Option$LT$T$GT$8and_then17h104a7692ca71586eE>
   13598:	9001      	str	r0, [sp, #4]
   1359a:	9100      	str	r1, [sp, #0]
   1359c:	e7ff      	b.n	1359e <_ZN10num_traits4cast11ToPrimitive5to_u817h633c568fdabc8347E+0x2c>
    }
   1359e:	9801      	ldr	r0, [sp, #4]
   135a0:	f000 0001 	and.w	r0, r0, #1
   135a4:	9900      	ldr	r1, [sp, #0]
   135a6:	b008      	add	sp, #32
   135a8:	bd80      	pop	{r7, pc}
	...

000135ac <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E>:
   135ac:	b088      	sub	sp, #32
   135ae:	9001      	str	r0, [sp, #4]
pub enum Instruction {
   135b0:	9801      	ldr	r0, [sp, #4]
   135b2:	7800      	ldrb	r0, [r0, #0]
   135b4:	9000      	str	r0, [sp, #0]
   135b6:	9900      	ldr	r1, [sp, #0]
   135b8:	e8df f011 	tbh	[pc, r1, lsl #1]
   135bc:	01070103 	.word	0x01070103
   135c0:	01020102 	.word	0x01020102
   135c4:	0102010c 	.word	0x0102010c
   135c8:	01020102 	.word	0x01020102
   135cc:	01110102 	.word	0x01110102
   135d0:	01020102 	.word	0x01020102
   135d4:	01020102 	.word	0x01020102
   135d8:	01020102 	.word	0x01020102
   135dc:	011b0116 	.word	0x011b0116
   135e0:	01250120 	.word	0x01250120
   135e4:	01020102 	.word	0x01020102
   135e8:	01020102 	.word	0x01020102
   135ec:	01020102 	.word	0x01020102
   135f0:	01020102 	.word	0x01020102
   135f4:	01020102 	.word	0x01020102
   135f8:	01020102 	.word	0x01020102
   135fc:	012f012a 	.word	0x012f012a
   13600:	01020102 	.word	0x01020102
   13604:	01020102 	.word	0x01020102
   13608:	01020102 	.word	0x01020102
   1360c:	01390134 	.word	0x01390134
   13610:	0143013e 	.word	0x0143013e
   13614:	01020148 	.word	0x01020148
   13618:	0102014d 	.word	0x0102014d
   1361c:	01020152 	.word	0x01020152
   13620:	01020102 	.word	0x01020102
   13624:	01020102 	.word	0x01020102
   13628:	0102015c 	.word	0x0102015c
   1362c:	01020102 	.word	0x01020102
   13630:	01020157 	.word	0x01020157
   13634:	01020102 	.word	0x01020102
   13638:	01020102 	.word	0x01020102
   1363c:	01020102 	.word	0x01020102
   13640:	01020102 	.word	0x01020102
   13644:	01020102 	.word	0x01020102
   13648:	01020102 	.word	0x01020102
   1364c:	01020102 	.word	0x01020102
   13650:	01020102 	.word	0x01020102
   13654:	01020102 	.word	0x01020102
   13658:	01020102 	.word	0x01020102
   1365c:	01020102 	.word	0x01020102
   13660:	01020102 	.word	0x01020102
   13664:	01020102 	.word	0x01020102
   13668:	01020102 	.word	0x01020102
   1366c:	01020102 	.word	0x01020102
   13670:	01020102 	.word	0x01020102
   13674:	01020102 	.word	0x01020102
   13678:	01020102 	.word	0x01020102
   1367c:	01020102 	.word	0x01020102
   13680:	01020102 	.word	0x01020102
   13684:	01020102 	.word	0x01020102
   13688:	01020102 	.word	0x01020102
   1368c:	01020102 	.word	0x01020102
   13690:	01020102 	.word	0x01020102
   13694:	01020102 	.word	0x01020102
   13698:	01020102 	.word	0x01020102
   1369c:	01020102 	.word	0x01020102
   136a0:	01020102 	.word	0x01020102
   136a4:	01020102 	.word	0x01020102
   136a8:	01020102 	.word	0x01020102
   136ac:	01020102 	.word	0x01020102
   136b0:	01020102 	.word	0x01020102
   136b4:	01020102 	.word	0x01020102
   136b8:	01020102 	.word	0x01020102
   136bc:	01020102 	.word	0x01020102
   136c0:	01020102 	.word	0x01020102
   136c4:	01020102 	.word	0x01020102
   136c8:	01020102 	.word	0x01020102
   136cc:	01020102 	.word	0x01020102
   136d0:	01020102 	.word	0x01020102
   136d4:	01020102 	.word	0x01020102
   136d8:	01020102 	.word	0x01020102
   136dc:	01020102 	.word	0x01020102
   136e0:	01020102 	.word	0x01020102
   136e4:	01020102 	.word	0x01020102
   136e8:	01020102 	.word	0x01020102
   136ec:	01020102 	.word	0x01020102
   136f0:	01020102 	.word	0x01020102
   136f4:	01020102 	.word	0x01020102
   136f8:	01020102 	.word	0x01020102
   136fc:	01020102 	.word	0x01020102
   13700:	01020102 	.word	0x01020102
   13704:	01020102 	.word	0x01020102
   13708:	01020102 	.word	0x01020102
   1370c:	01020102 	.word	0x01020102
   13710:	01020102 	.word	0x01020102
   13714:	01020102 	.word	0x01020102
   13718:	01020102 	.word	0x01020102
   1371c:	01610102 	.word	0x01610102
   13720:	016b0166 	.word	0x016b0166
   13724:	01020170 	.word	0x01020170
   13728:	01020175 	.word	0x01020175
   1372c:	01020102 	.word	0x01020102
   13730:	01020102 	.word	0x01020102
   13734:	01020102 	.word	0x01020102
   13738:	01020102 	.word	0x01020102
   1373c:	017f017a 	.word	0x017f017a
   13740:	01890184 	.word	0x01890184
   13744:	0193018e 	.word	0x0193018e
   13748:	01020102 	.word	0x01020102
   1374c:	01020102 	.word	0x01020102
   13750:	01020102 	.word	0x01020102
   13754:	01020102 	.word	0x01020102
   13758:	01020102 	.word	0x01020102
   1375c:	01020102 	.word	0x01020102
   13760:	01020102 	.word	0x01020102
   13764:	01020102 	.word	0x01020102
   13768:	01020102 	.word	0x01020102
   1376c:	01020102 	.word	0x01020102
   13770:	019d0198 	.word	0x019d0198
   13774:	01a701a2 	.word	0x01a701a2
   13778:	01020102 	.word	0x01020102
   1377c:	00fd01b1 	.word	0x00fd01b1
   13780:	01020102 	.word	0x01020102
   13784:	01020102 	.word	0x01020102
   13788:	01020102 	.word	0x01020102
   1378c:	01020102 	.word	0x01020102
   13790:	01020102 	.word	0x01020102
   13794:	01020102 	.word	0x01020102
   13798:	01020102 	.word	0x01020102
   1379c:	01020102 	.word	0x01020102
   137a0:	01020102 	.word	0x01020102
   137a4:	01020102 	.word	0x01020102
   137a8:	01020102 	.word	0x01020102
   137ac:	01020102 	.word	0x01020102
   137b0:	01020102 	.word	0x01020102
   137b4:	01ac      	.short	0x01ac
   137b6:	2000      	movs	r0, #0
#[derive(ToPrimitive)]
   137b8:	9007      	str	r0, [sp, #28]
   137ba:	20e1      	movs	r0, #225	; 0xe1
   137bc:	9006      	str	r0, [sp, #24]
   137be:	e0b3      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   137c0:	defe      	udf	#254	; 0xfe
   137c2:	2000      	movs	r0, #0
   137c4:	9007      	str	r0, [sp, #28]
   137c6:	9006      	str	r0, [sp, #24]
   137c8:	e0ae      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   137ca:	2000      	movs	r0, #0
   137cc:	9007      	str	r0, [sp, #28]
   137ce:	2001      	movs	r0, #1
   137d0:	9006      	str	r0, [sp, #24]
   137d2:	e0a9      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   137d4:	2000      	movs	r0, #0
   137d6:	9007      	str	r0, [sp, #28]
   137d8:	2004      	movs	r0, #4
   137da:	9006      	str	r0, [sp, #24]
   137dc:	e0a4      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   137de:	2000      	movs	r0, #0
   137e0:	9007      	str	r0, [sp, #28]
   137e2:	2009      	movs	r0, #9
   137e4:	9006      	str	r0, [sp, #24]
   137e6:	e09f      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   137e8:	2000      	movs	r0, #0
   137ea:	9007      	str	r0, [sp, #28]
   137ec:	2010      	movs	r0, #16
   137ee:	9006      	str	r0, [sp, #24]
   137f0:	e09a      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   137f2:	2000      	movs	r0, #0
   137f4:	9007      	str	r0, [sp, #28]
   137f6:	2011      	movs	r0, #17
   137f8:	9006      	str	r0, [sp, #24]
   137fa:	e095      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   137fc:	2000      	movs	r0, #0
   137fe:	9007      	str	r0, [sp, #28]
   13800:	2012      	movs	r0, #18
   13802:	9006      	str	r0, [sp, #24]
   13804:	e090      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   13806:	2000      	movs	r0, #0
   13808:	9007      	str	r0, [sp, #28]
   1380a:	2013      	movs	r0, #19
   1380c:	9006      	str	r0, [sp, #24]
   1380e:	e08b      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   13810:	2000      	movs	r0, #0
   13812:	9007      	str	r0, [sp, #28]
   13814:	2020      	movs	r0, #32
   13816:	9006      	str	r0, [sp, #24]
   13818:	e086      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   1381a:	2000      	movs	r0, #0
   1381c:	9007      	str	r0, [sp, #28]
   1381e:	2021      	movs	r0, #33	; 0x21
   13820:	9006      	str	r0, [sp, #24]
   13822:	e081      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   13824:	2000      	movs	r0, #0
   13826:	9007      	str	r0, [sp, #28]
   13828:	2028      	movs	r0, #40	; 0x28
   1382a:	9006      	str	r0, [sp, #24]
   1382c:	e07c      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   1382e:	2000      	movs	r0, #0
   13830:	9007      	str	r0, [sp, #28]
   13832:	2029      	movs	r0, #41	; 0x29
   13834:	9006      	str	r0, [sp, #24]
   13836:	e077      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   13838:	2000      	movs	r0, #0
   1383a:	9007      	str	r0, [sp, #28]
   1383c:	202a      	movs	r0, #42	; 0x2a
   1383e:	9006      	str	r0, [sp, #24]
   13840:	e072      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   13842:	2000      	movs	r0, #0
   13844:	9007      	str	r0, [sp, #28]
   13846:	202b      	movs	r0, #43	; 0x2b
   13848:	9006      	str	r0, [sp, #24]
   1384a:	e06d      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   1384c:	2000      	movs	r0, #0
   1384e:	9007      	str	r0, [sp, #28]
   13850:	202c      	movs	r0, #44	; 0x2c
   13852:	9006      	str	r0, [sp, #24]
   13854:	e068      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   13856:	2000      	movs	r0, #0
   13858:	9007      	str	r0, [sp, #28]
   1385a:	202e      	movs	r0, #46	; 0x2e
   1385c:	9006      	str	r0, [sp, #24]
   1385e:	e063      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   13860:	2000      	movs	r0, #0
   13862:	9007      	str	r0, [sp, #28]
   13864:	2030      	movs	r0, #48	; 0x30
   13866:	9006      	str	r0, [sp, #24]
   13868:	e05e      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   1386a:	2000      	movs	r0, #0
   1386c:	9007      	str	r0, [sp, #28]
   1386e:	203a      	movs	r0, #58	; 0x3a
   13870:	9006      	str	r0, [sp, #24]
   13872:	e059      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   13874:	2000      	movs	r0, #0
   13876:	9007      	str	r0, [sp, #28]
   13878:	2036      	movs	r0, #54	; 0x36
   1387a:	9006      	str	r0, [sp, #24]
   1387c:	e054      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   1387e:	2000      	movs	r0, #0
   13880:	9007      	str	r0, [sp, #28]
   13882:	20b1      	movs	r0, #177	; 0xb1
   13884:	9006      	str	r0, [sp, #24]
   13886:	e04f      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   13888:	2000      	movs	r0, #0
   1388a:	9007      	str	r0, [sp, #28]
   1388c:	20b2      	movs	r0, #178	; 0xb2
   1388e:	9006      	str	r0, [sp, #24]
   13890:	e04a      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   13892:	2000      	movs	r0, #0
   13894:	9007      	str	r0, [sp, #28]
   13896:	20b3      	movs	r0, #179	; 0xb3
   13898:	9006      	str	r0, [sp, #24]
   1389a:	e045      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   1389c:	2000      	movs	r0, #0
   1389e:	9007      	str	r0, [sp, #28]
   138a0:	20b4      	movs	r0, #180	; 0xb4
   138a2:	9006      	str	r0, [sp, #24]
   138a4:	e040      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   138a6:	2000      	movs	r0, #0
   138a8:	9007      	str	r0, [sp, #28]
   138aa:	20b6      	movs	r0, #182	; 0xb6
   138ac:	9006      	str	r0, [sp, #24]
   138ae:	e03b      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   138b0:	2000      	movs	r0, #0
   138b2:	9007      	str	r0, [sp, #28]
   138b4:	20c0      	movs	r0, #192	; 0xc0
   138b6:	9006      	str	r0, [sp, #24]
   138b8:	e036      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   138ba:	2000      	movs	r0, #0
   138bc:	9007      	str	r0, [sp, #28]
   138be:	20c1      	movs	r0, #193	; 0xc1
   138c0:	9006      	str	r0, [sp, #24]
   138c2:	e031      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   138c4:	2000      	movs	r0, #0
   138c6:	9007      	str	r0, [sp, #28]
   138c8:	20c2      	movs	r0, #194	; 0xc2
   138ca:	9006      	str	r0, [sp, #24]
   138cc:	e02c      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   138ce:	2000      	movs	r0, #0
   138d0:	9007      	str	r0, [sp, #28]
   138d2:	20c3      	movs	r0, #195	; 0xc3
   138d4:	9006      	str	r0, [sp, #24]
   138d6:	e027      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   138d8:	2000      	movs	r0, #0
   138da:	9007      	str	r0, [sp, #28]
   138dc:	20c4      	movs	r0, #196	; 0xc4
   138de:	9006      	str	r0, [sp, #24]
   138e0:	e022      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   138e2:	2000      	movs	r0, #0
   138e4:	9007      	str	r0, [sp, #28]
   138e6:	20c5      	movs	r0, #197	; 0xc5
   138e8:	9006      	str	r0, [sp, #24]
   138ea:	e01d      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   138ec:	2000      	movs	r0, #0
   138ee:	9007      	str	r0, [sp, #28]
   138f0:	20da      	movs	r0, #218	; 0xda
   138f2:	9006      	str	r0, [sp, #24]
   138f4:	e018      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   138f6:	2000      	movs	r0, #0
   138f8:	9007      	str	r0, [sp, #28]
   138fa:	20db      	movs	r0, #219	; 0xdb
   138fc:	9006      	str	r0, [sp, #24]
   138fe:	e013      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   13900:	2000      	movs	r0, #0
   13902:	9007      	str	r0, [sp, #28]
   13904:	20dc      	movs	r0, #220	; 0xdc
   13906:	9006      	str	r0, [sp, #24]
   13908:	e00e      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   1390a:	2000      	movs	r0, #0
   1390c:	9007      	str	r0, [sp, #28]
   1390e:	20dd      	movs	r0, #221	; 0xdd
   13910:	9006      	str	r0, [sp, #24]
   13912:	e009      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   13914:	2000      	movs	r0, #0
   13916:	9007      	str	r0, [sp, #28]
   13918:	20fc      	movs	r0, #252	; 0xfc
   1391a:	9006      	str	r0, [sp, #24]
   1391c:	e004      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   1391e:	2000      	movs	r0, #0
   13920:	9007      	str	r0, [sp, #28]
   13922:	20e0      	movs	r0, #224	; 0xe0
   13924:	9006      	str	r0, [sp, #24]
   13926:	e7ff      	b.n	13928 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E+0x37c>
   13928:	9806      	ldr	r0, [sp, #24]
   1392a:	9907      	ldr	r1, [sp, #28]
   1392c:	9105      	str	r1, [sp, #20]
   1392e:	9004      	str	r0, [sp, #16]
   13930:	2000      	movs	r0, #0
   13932:	9003      	str	r0, [sp, #12]
   13934:	2001      	movs	r0, #1
   13936:	9002      	str	r0, [sp, #8]
   13938:	9802      	ldr	r0, [sp, #8]
   1393a:	9903      	ldr	r1, [sp, #12]
   1393c:	9a04      	ldr	r2, [sp, #16]
   1393e:	9b05      	ldr	r3, [sp, #20]
   13940:	b008      	add	sp, #32
   13942:	4770      	bx	lr

00013944 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_u6417h9f0efbcd41c695f4E>:
   13944:	b580      	push	{r7, lr}
   13946:	b08a      	sub	sp, #40	; 0x28
   13948:	9009      	str	r0, [sp, #36]	; 0x24
   1394a:	9809      	ldr	r0, [sp, #36]	; 0x24
   1394c:	f7ff fe2e 	bl	135ac <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_i6417h32ae7e1eb364cb55E>
   13950:	9108      	str	r1, [sp, #32]
   13952:	9007      	str	r0, [sp, #28]
   13954:	9306      	str	r3, [sp, #24]
   13956:	9205      	str	r2, [sp, #20]
   13958:	e7ff      	b.n	1395a <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_u6417h9f0efbcd41c695f4E+0x16>
   1395a:	9807      	ldr	r0, [sp, #28]
   1395c:	9908      	ldr	r1, [sp, #32]
   1395e:	9a05      	ldr	r2, [sp, #20]
   13960:	9b06      	ldr	r3, [sp, #24]
   13962:	f7fb f9a6 	bl	ecb2 <_ZN4core6option15Option$LT$T$GT$3map17h58469dc4acfae8f6E>
   13966:	9104      	str	r1, [sp, #16]
   13968:	9003      	str	r0, [sp, #12]
   1396a:	9302      	str	r3, [sp, #8]
   1396c:	9201      	str	r2, [sp, #4]
   1396e:	e7ff      	b.n	13970 <_ZN10st7735_lcd11instruction37_IMPL_NUM_ToPrimitive_FOR_Instruction96_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..instruction..Instruction$GT$6to_u6417h9f0efbcd41c695f4E+0x2c>
   13970:	9803      	ldr	r0, [sp, #12]
   13972:	9904      	ldr	r1, [sp, #16]
   13974:	9a01      	ldr	r2, [sp, #4]
   13976:	9b02      	ldr	r3, [sp, #8]
   13978:	b00a      	add	sp, #40	; 0x28
   1397a:	bd80      	pop	{r7, pc}

0001397c <_ZN10st7735_lcd37_IMPL_NUM_ToPrimitive_FOR_Orientation83_$LT$impl$u20$num_traits..cast..ToPrimitive$u20$for$u20$st7735_lcd..Orientation$GT$6to_u6428_$u7b$$u7b$closure$u7d$$u7d$17h9ae575ee4543bc51E>:
   1397c:	b084      	sub	sp, #16
   1397e:	460a      	mov	r2, r1
   13980:	4603      	mov	r3, r0
   13982:	9103      	str	r1, [sp, #12]
   13984:	9002      	str	r0, [sp, #8]
   13986:	9802      	ldr	r0, [sp, #8]
   13988:	9903      	ldr	r1, [sp, #12]
   1398a:	b004      	add	sp, #16
   1398c:	4770      	bx	lr

0001398e <_ZN4core6option15Option$LT$T$GT$9unwrap_or17he29cde0de98952e1E>:
   1398e:	b086      	sub	sp, #24
   13990:	9000      	str	r0, [sp, #0]
   13992:	9101      	str	r1, [sp, #4]
   13994:	9202      	str	r2, [sp, #8]
   13996:	2000      	movs	r0, #0
   13998:	f88d 0016 	strb.w	r0, [sp, #22]
   1399c:	f88d 0017 	strb.w	r0, [sp, #23]
   139a0:	2001      	movs	r0, #1
   139a2:	f88d 0017 	strb.w	r0, [sp, #23]
   139a6:	f88d 0016 	strb.w	r0, [sp, #22]
   139aa:	9800      	ldr	r0, [sp, #0]
   139ac:	2800      	cmp	r0, #0
   139ae:	d001      	beq.n	139b4 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17he29cde0de98952e1E+0x26>
   139b0:	e7ff      	b.n	139b2 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17he29cde0de98952e1E+0x24>
   139b2:	e006      	b.n	139c2 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17he29cde0de98952e1E+0x34>
   139b4:	2000      	movs	r0, #0
   139b6:	f88d 0016 	strb.w	r0, [sp, #22]
   139ba:	9802      	ldr	r0, [sp, #8]
   139bc:	9003      	str	r0, [sp, #12]
   139be:	e010      	b.n	139e2 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17he29cde0de98952e1E+0x54>
   139c0:	defe      	udf	#254	; 0xfe
   139c2:	2000      	movs	r0, #0
   139c4:	f88d 0017 	strb.w	r0, [sp, #23]
   139c8:	9801      	ldr	r0, [sp, #4]
   139ca:	9004      	str	r0, [sp, #16]
   139cc:	9804      	ldr	r0, [sp, #16]
   139ce:	9003      	str	r0, [sp, #12]
   139d0:	e007      	b.n	139e2 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17he29cde0de98952e1E+0x54>
   139d2:	9800      	ldr	r0, [sp, #0]
   139d4:	2801      	cmp	r0, #1
   139d6:	d00d      	beq.n	139f4 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17he29cde0de98952e1E+0x66>
   139d8:	e016      	b.n	13a08 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17he29cde0de98952e1E+0x7a>
   139da:	2000      	movs	r0, #0
   139dc:	f88d 0016 	strb.w	r0, [sp, #22]
   139e0:	e7f7      	b.n	139d2 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17he29cde0de98952e1E+0x44>
   139e2:	f89d 0016 	ldrb.w	r0, [sp, #22]
   139e6:	07c0      	lsls	r0, r0, #31
   139e8:	2800      	cmp	r0, #0
   139ea:	d1f6      	bne.n	139da <_ZN4core6option15Option$LT$T$GT$9unwrap_or17he29cde0de98952e1E+0x4c>
   139ec:	e7f1      	b.n	139d2 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17he29cde0de98952e1E+0x44>
   139ee:	9803      	ldr	r0, [sp, #12]
   139f0:	b006      	add	sp, #24
   139f2:	4770      	bx	lr
   139f4:	f89d 0017 	ldrb.w	r0, [sp, #23]
   139f8:	07c0      	lsls	r0, r0, #31
   139fa:	2800      	cmp	r0, #0
   139fc:	d0f7      	beq.n	139ee <_ZN4core6option15Option$LT$T$GT$9unwrap_or17he29cde0de98952e1E+0x60>
   139fe:	e7ff      	b.n	13a00 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17he29cde0de98952e1E+0x72>
   13a00:	2000      	movs	r0, #0
   13a02:	f88d 0017 	strb.w	r0, [sp, #23]
   13a06:	e7f2      	b.n	139ee <_ZN4core6option15Option$LT$T$GT$9unwrap_or17he29cde0de98952e1E+0x60>
   13a08:	e7f1      	b.n	139ee <_ZN4core6option15Option$LT$T$GT$9unwrap_or17he29cde0de98952e1E+0x60>

00013a0a <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h5de8f7a2703bfbb0E>:
   13a0a:	b580      	push	{r7, lr}
   13a0c:	b088      	sub	sp, #32
   13a0e:	9002      	str	r0, [sp, #8]
   13a10:	9103      	str	r1, [sp, #12]
   13a12:	9802      	ldr	r0, [sp, #8]
   13a14:	9903      	ldr	r1, [sp, #12]
   13a16:	f000 f857 	bl	13ac8 <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h60b3428d3914c85fE>
   13a1a:	9001      	str	r0, [sp, #4]
   13a1c:	9100      	str	r1, [sp, #0]
   13a1e:	e7ff      	b.n	13a20 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h5de8f7a2703bfbb0E+0x16>
   13a20:	9801      	ldr	r0, [sp, #4]
   13a22:	9006      	str	r0, [sp, #24]
   13a24:	9900      	ldr	r1, [sp, #0]
   13a26:	f001 0201 	and.w	r2, r1, #1
   13a2a:	f88d 201f 	strb.w	r2, [sp, #31]
   13a2e:	f89d 201f 	ldrb.w	r2, [sp, #31]
   13a32:	07d2      	lsls	r2, r2, #31
   13a34:	2a00      	cmp	r2, #0
   13a36:	d105      	bne.n	13a44 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h5de8f7a2703bfbb0E+0x3a>
   13a38:	e7ff      	b.n	13a3a <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h5de8f7a2703bfbb0E+0x30>
   13a3a:	9806      	ldr	r0, [sp, #24]
   13a3c:	9005      	str	r0, [sp, #20]
   13a3e:	2001      	movs	r0, #1
   13a40:	9004      	str	r0, [sp, #16]
   13a42:	e002      	b.n	13a4a <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h5de8f7a2703bfbb0E+0x40>
   13a44:	2000      	movs	r0, #0
   13a46:	9004      	str	r0, [sp, #16]
   13a48:	e7ff      	b.n	13a4a <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h5de8f7a2703bfbb0E+0x40>
   13a4a:	9804      	ldr	r0, [sp, #16]
   13a4c:	9905      	ldr	r1, [sp, #20]
   13a4e:	b008      	add	sp, #32
   13a50:	bd80      	pop	{r7, pc}

00013a52 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17hc8f9824cf921e64fE>:
   13a52:	b580      	push	{r7, lr}
   13a54:	b088      	sub	sp, #32
   13a56:	9002      	str	r0, [sp, #8]
   13a58:	9103      	str	r1, [sp, #12]
   13a5a:	9802      	ldr	r0, [sp, #8]
   13a5c:	9903      	ldr	r1, [sp, #12]
   13a5e:	f000 f858 	bl	13b12 <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_sub17h28d689dafd2552e9E>
   13a62:	9001      	str	r0, [sp, #4]
   13a64:	9100      	str	r1, [sp, #0]
   13a66:	e7ff      	b.n	13a68 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17hc8f9824cf921e64fE+0x16>
   13a68:	9801      	ldr	r0, [sp, #4]
   13a6a:	9006      	str	r0, [sp, #24]
   13a6c:	9900      	ldr	r1, [sp, #0]
   13a6e:	f001 0201 	and.w	r2, r1, #1
   13a72:	f88d 201f 	strb.w	r2, [sp, #31]
   13a76:	f89d 201f 	ldrb.w	r2, [sp, #31]
   13a7a:	07d2      	lsls	r2, r2, #31
   13a7c:	2a00      	cmp	r2, #0
   13a7e:	d105      	bne.n	13a8c <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17hc8f9824cf921e64fE+0x3a>
   13a80:	e7ff      	b.n	13a82 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17hc8f9824cf921e64fE+0x30>
   13a82:	9806      	ldr	r0, [sp, #24]
   13a84:	9005      	str	r0, [sp, #20]
   13a86:	2001      	movs	r0, #1
   13a88:	9004      	str	r0, [sp, #16]
   13a8a:	e002      	b.n	13a92 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17hc8f9824cf921e64fE+0x40>
   13a8c:	2000      	movs	r0, #0
   13a8e:	9004      	str	r0, [sp, #16]
   13a90:	e7ff      	b.n	13a92 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17hc8f9824cf921e64fE+0x40>
   13a92:	9804      	ldr	r0, [sp, #16]
   13a94:	9905      	ldr	r1, [sp, #20]
   13a96:	b008      	add	sp, #32
   13a98:	bd80      	pop	{r7, pc}

00013a9a <_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17h1ec8abe4e9cc3871E>:
   13a9a:	b580      	push	{r7, lr}
   13a9c:	b086      	sub	sp, #24
   13a9e:	9004      	str	r0, [sp, #16]
   13aa0:	9105      	str	r1, [sp, #20]
   13aa2:	9804      	ldr	r0, [sp, #16]
   13aa4:	9905      	ldr	r1, [sp, #20]
   13aa6:	f7ff ffb0 	bl	13a0a <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h5de8f7a2703bfbb0E>
   13aaa:	9003      	str	r0, [sp, #12]
   13aac:	9102      	str	r1, [sp, #8]
   13aae:	e7ff      	b.n	13ab0 <_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17h1ec8abe4e9cc3871E+0x16>
   13ab0:	e7ff      	b.n	13ab2 <_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17h1ec8abe4e9cc3871E+0x18>
   13ab2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   13ab6:	9803      	ldr	r0, [sp, #12]
   13ab8:	9902      	ldr	r1, [sp, #8]
   13aba:	f7f7 fb89 	bl	b1d0 <_ZN4core6option15Option$LT$T$GT$9unwrap_or17hc2347d9007cef407E>
   13abe:	9001      	str	r0, [sp, #4]
   13ac0:	e7ff      	b.n	13ac2 <_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17h1ec8abe4e9cc3871E+0x28>
   13ac2:	9801      	ldr	r0, [sp, #4]
   13ac4:	b006      	add	sp, #24
   13ac6:	bd80      	pop	{r7, pc}

00013ac8 <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h60b3428d3914c85fE>:
   13ac8:	b08a      	sub	sp, #40	; 0x28
   13aca:	9002      	str	r0, [sp, #8]
   13acc:	9103      	str	r1, [sp, #12]
   13ace:	9802      	ldr	r0, [sp, #8]
   13ad0:	9903      	ldr	r1, [sp, #12]
   13ad2:	fba0 0101 	umull	r0, r1, r0, r1
   13ad6:	2900      	cmp	r1, #0
   13ad8:	bf18      	it	ne
   13ada:	2101      	movne	r1, #1
   13adc:	9008      	str	r0, [sp, #32]
   13ade:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
   13ae2:	9808      	ldr	r0, [sp, #32]
   13ae4:	f89d 1024 	ldrb.w	r1, [sp, #36]	; 0x24
   13ae8:	9001      	str	r0, [sp, #4]
   13aea:	9100      	str	r1, [sp, #0]
   13aec:	e7ff      	b.n	13aee <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h60b3428d3914c85fE+0x26>
   13aee:	9801      	ldr	r0, [sp, #4]
   13af0:	9006      	str	r0, [sp, #24]
   13af2:	9900      	ldr	r1, [sp, #0]
   13af4:	f001 0201 	and.w	r2, r1, #1
   13af8:	f88d 201f 	strb.w	r2, [sp, #31]
   13afc:	9a06      	ldr	r2, [sp, #24]
   13afe:	f89d 301f 	ldrb.w	r3, [sp, #31]
   13b02:	9204      	str	r2, [sp, #16]
   13b04:	f88d 3014 	strb.w	r3, [sp, #20]
   13b08:	9804      	ldr	r0, [sp, #16]
   13b0a:	f89d 1014 	ldrb.w	r1, [sp, #20]
   13b0e:	b00a      	add	sp, #40	; 0x28
   13b10:	4770      	bx	lr

00013b12 <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_sub17h28d689dafd2552e9E>:
   13b12:	b08a      	sub	sp, #40	; 0x28
   13b14:	9002      	str	r0, [sp, #8]
   13b16:	9103      	str	r1, [sp, #12]
   13b18:	9802      	ldr	r0, [sp, #8]
   13b1a:	9903      	ldr	r1, [sp, #12]
   13b1c:	1a40      	subs	r0, r0, r1
   13b1e:	f04f 0100 	mov.w	r1, #0
   13b22:	f141 0100 	adc.w	r1, r1, #0
   13b26:	f1c1 0101 	rsb	r1, r1, #1
   13b2a:	9008      	str	r0, [sp, #32]
   13b2c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
   13b30:	9808      	ldr	r0, [sp, #32]
   13b32:	f89d 1024 	ldrb.w	r1, [sp, #36]	; 0x24
   13b36:	9001      	str	r0, [sp, #4]
   13b38:	9100      	str	r1, [sp, #0]
   13b3a:	e7ff      	b.n	13b3c <_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_sub17h28d689dafd2552e9E+0x2a>
   13b3c:	9801      	ldr	r0, [sp, #4]
   13b3e:	9006      	str	r0, [sp, #24]
   13b40:	9900      	ldr	r1, [sp, #0]
   13b42:	f001 0201 	and.w	r2, r1, #1
   13b46:	f88d 201f 	strb.w	r2, [sp, #31]
   13b4a:	9a06      	ldr	r2, [sp, #24]
   13b4c:	f89d 301f 	ldrb.w	r3, [sp, #31]
   13b50:	9204      	str	r2, [sp, #16]
   13b52:	f88d 3014 	strb.w	r3, [sp, #20]
   13b56:	9804      	ldr	r0, [sp, #16]
   13b58:	f89d 1014 	ldrb.w	r1, [sp, #20]
   13b5c:	b00a      	add	sp, #40	; 0x28
   13b5e:	4770      	bx	lr

00013b60 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$5write17h4246feee8b3787a8E>:
   13b60:	b580      	push	{r7, lr}
   13b62:	b084      	sub	sp, #16
   13b64:	460a      	mov	r2, r1
   13b66:	9002      	str	r0, [sp, #8]
   13b68:	f88d 100f 	strb.w	r1, [sp, #15]
   13b6c:	9802      	ldr	r0, [sp, #8]
   13b6e:	f89d 100f 	ldrb.w	r1, [sp, #15]
   13b72:	9201      	str	r2, [sp, #4]
   13b74:	f7f7 fff3 	bl	bb5e <_ZN4core3ptr5write17hb115c52c9adc8ae7E>
   13b78:	e7ff      	b.n	13b7a <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$5write17h4246feee8b3787a8E+0x1a>
   13b7a:	b004      	add	sp, #16
   13b7c:	bd80      	pop	{r7, pc}

00013b7e <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1e9126c9c19580b1E>:
   13b7e:	b082      	sub	sp, #8
   13b80:	9001      	str	r0, [sp, #4]
   13b82:	9801      	ldr	r0, [sp, #4]
   13b84:	9000      	str	r0, [sp, #0]
   13b86:	e7ff      	b.n	13b88 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h1e9126c9c19580b1E+0xa>
   13b88:	9800      	ldr	r0, [sp, #0]
   13b8a:	fab0 f180 	clz	r1, r0
   13b8e:	0948      	lsrs	r0, r1, #5
   13b90:	b002      	add	sp, #8
   13b92:	4770      	bx	lr

00013b94 <_ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h277d208a5f1142a9E>:
    fn deref(&self) -> &[T] {
   13b94:	b580      	push	{r7, lr}
   13b96:	b084      	sub	sp, #16
   13b98:	9003      	str	r0, [sp, #12]
        self.0.as_slice()
   13b9a:	9803      	ldr	r0, [sp, #12]
   13b9c:	f000 fe45 	bl	1482a <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8as_slice17hfbfd13bfb0e1955bE>
   13ba0:	9002      	str	r0, [sp, #8]
   13ba2:	9101      	str	r1, [sp, #4]
   13ba4:	e7ff      	b.n	13ba6 <_ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h277d208a5f1142a9E+0x12>
    }
   13ba6:	9802      	ldr	r0, [sp, #8]
   13ba8:	9901      	ldr	r1, [sp, #4]
   13baa:	b004      	add	sp, #16
   13bac:	bd80      	pop	{r7, pc}

00013bae <_ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h88bd69a47c24cc54E>:
    fn deref(&self) -> &[T] {
   13bae:	b580      	push	{r7, lr}
   13bb0:	b084      	sub	sp, #16
   13bb2:	9003      	str	r0, [sp, #12]
        self.0.as_slice()
   13bb4:	9803      	ldr	r0, [sp, #12]
   13bb6:	f000 fe21 	bl	147fc <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8as_slice17hea35f4eb18510315E>
   13bba:	9002      	str	r0, [sp, #8]
   13bbc:	9101      	str	r1, [sp, #4]
   13bbe:	e7ff      	b.n	13bc0 <_ZN75_$LT$heapless..vec..Vec$LT$T$C$N$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h88bd69a47c24cc54E+0x12>
    }
   13bc0:	9802      	ldr	r0, [sp, #8]
   13bc2:	9901      	ldr	r1, [sp, #4]
   13bc4:	b004      	add	sp, #16
   13bc6:	bd80      	pop	{r7, pc}

00013bc8 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$17extend_from_slice17hc38f9607903b3f32E>:
    pub fn extend_from_slice(&mut self, other: &[T]) -> Result<(), ()>
   13bc8:	b580      	push	{r7, lr}
   13bca:	b084      	sub	sp, #16
   13bcc:	9001      	str	r0, [sp, #4]
   13bce:	9102      	str	r1, [sp, #8]
   13bd0:	9203      	str	r2, [sp, #12]
        self.0.extend_from_slice(other)
   13bd2:	9801      	ldr	r0, [sp, #4]
   13bd4:	9902      	ldr	r1, [sp, #8]
   13bd6:	9a03      	ldr	r2, [sp, #12]
   13bd8:	f000 fd68 	bl	146ac <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h1f7d0b76fcd4eec8E>
   13bdc:	9000      	str	r0, [sp, #0]
   13bde:	e7ff      	b.n	13be0 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$17extend_from_slice17hc38f9607903b3f32E+0x18>
    }
   13be0:	9800      	ldr	r0, [sp, #0]
   13be2:	f000 0001 	and.w	r0, r0, #1
   13be6:	b004      	add	sp, #16
   13be8:	bd80      	pop	{r7, pc}

00013bea <_ZN8heapless3vec16Vec$LT$T$C$N$GT$4push17h3ed85f9e34339aa3E>:
    pub fn push(&mut self, item: T) -> Result<(), T> {
   13bea:	b580      	push	{r7, lr}
   13bec:	b086      	sub	sp, #24
   13bee:	460a      	mov	r2, r1
   13bf0:	9004      	str	r0, [sp, #16]
   13bf2:	f88d 1017 	strb.w	r1, [sp, #23]
        self.0.push(item)
   13bf6:	9804      	ldr	r0, [sp, #16]
   13bf8:	f89d 1017 	ldrb.w	r1, [sp, #23]
   13bfc:	9203      	str	r2, [sp, #12]
   13bfe:	f000 fdbe 	bl	1477e <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$4push17h1141aea5446b44ecE>
   13c02:	9002      	str	r0, [sp, #8]
   13c04:	9101      	str	r1, [sp, #4]
   13c06:	e7ff      	b.n	13c08 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$4push17h3ed85f9e34339aa3E+0x1e>
    }
   13c08:	9802      	ldr	r0, [sp, #8]
   13c0a:	f000 0001 	and.w	r0, r0, #1
   13c0e:	9901      	ldr	r1, [sp, #4]
   13c10:	b006      	add	sp, #24
   13c12:	bd80      	pop	{r7, pc}

00013c14 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17h31e57cb84b87bd6aE>:
    pub fn clear(&mut self) {
   13c14:	b580      	push	{r7, lr}
   13c16:	b082      	sub	sp, #8
   13c18:	9001      	str	r0, [sp, #4]
        self.0.clear()
   13c1a:	9801      	ldr	r0, [sp, #4]
   13c1c:	f000 fdda 	bl	147d4 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clear17h724c31e668914486E>
   13c20:	e7ff      	b.n	13c22 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17h31e57cb84b87bd6aE+0xe>
    }
   13c22:	b002      	add	sp, #8
   13c24:	bd80      	pop	{r7, pc}

00013c26 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17h73cdeb4431a0dffdE>:
    pub fn clear(&mut self) {
   13c26:	b580      	push	{r7, lr}
   13c28:	b082      	sub	sp, #8
   13c2a:	9001      	str	r0, [sp, #4]
        self.0.clear()
   13c2c:	9801      	ldr	r0, [sp, #4]
   13c2e:	f000 fddb 	bl	147e8 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clear17h8b136725d3404812E>
   13c32:	e7ff      	b.n	13c34 <_ZN8heapless3vec16Vec$LT$T$C$N$GT$5clear17h73cdeb4431a0dffdE+0xe>
    }
   13c34:	b002      	add	sp, #8
   13c36:	bd80      	pop	{r7, pc}

00013c38 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h06f40786ef79ca88E>:
    #[inline]
    fn to_u128() -> u128 {
        u128::from(B::to_u8()) | U::to_u128() << 1
    }
    #[inline]
    fn to_usize() -> usize {
   13c38:	b580      	push	{r7, lr}
   13c3a:	b084      	sub	sp, #16
        usize::from(B::to_u8()) | U::to_usize() << 1
   13c3c:	f000 fc9e 	bl	1457c <_ZN64_$LT$typenum..bit..B1$u20$as$u20$typenum..marker_traits..Bit$GT$5to_u817h206eb3d5ce0562b8E>
   13c40:	9003      	str	r0, [sp, #12]
   13c42:	e7ff      	b.n	13c44 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h06f40786ef79ca88E+0xc>
   13c44:	9803      	ldr	r0, [sp, #12]
   13c46:	f000 fe89 	bl	1495c <_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17h42518d20db38c567E>
   13c4a:	9002      	str	r0, [sp, #8]
   13c4c:	e7ff      	b.n	13c4e <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h06f40786ef79ca88E+0x16>
   13c4e:	f000 fe8d 	bl	1496c <_ZN73_$LT$typenum..uint..UTerm$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h594c176a361f806bE>
   13c52:	9001      	str	r0, [sp, #4]
   13c54:	e7ff      	b.n	13c56 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h06f40786ef79ca88E+0x1e>
   13c56:	9801      	ldr	r0, [sp, #4]
   13c58:	0041      	lsls	r1, r0, #1
   13c5a:	9100      	str	r1, [sp, #0]
   13c5c:	e7ff      	b.n	13c5e <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h06f40786ef79ca88E+0x26>
   13c5e:	9802      	ldr	r0, [sp, #8]
   13c60:	9900      	ldr	r1, [sp, #0]
   13c62:	4308      	orrs	r0, r1
    }
   13c64:	b004      	add	sp, #16
   13c66:	bd80      	pop	{r7, pc}

00013c68 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h1c5a8a075ee325dcE>:
    fn to_usize() -> usize {
   13c68:	b580      	push	{r7, lr}
   13c6a:	b084      	sub	sp, #16
        usize::from(B::to_u8()) | U::to_usize() << 1
   13c6c:	f000 fc84 	bl	14578 <_ZN64_$LT$typenum..bit..B0$u20$as$u20$typenum..marker_traits..Bit$GT$5to_u817h9f54ebcf7805587aE>
   13c70:	9003      	str	r0, [sp, #12]
   13c72:	e7ff      	b.n	13c74 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h1c5a8a075ee325dcE+0xc>
   13c74:	9803      	ldr	r0, [sp, #12]
   13c76:	f000 fe71 	bl	1495c <_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17h42518d20db38c567E>
   13c7a:	9002      	str	r0, [sp, #8]
   13c7c:	e7ff      	b.n	13c7e <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h1c5a8a075ee325dcE+0x16>
   13c7e:	f000 f8e3 	bl	13e48 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17hf52b7ac7b97083edE>
   13c82:	9001      	str	r0, [sp, #4]
   13c84:	e7ff      	b.n	13c86 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h1c5a8a075ee325dcE+0x1e>
   13c86:	9801      	ldr	r0, [sp, #4]
   13c88:	0041      	lsls	r1, r0, #1
   13c8a:	9100      	str	r1, [sp, #0]
   13c8c:	e7ff      	b.n	13c8e <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h1c5a8a075ee325dcE+0x26>
   13c8e:	9802      	ldr	r0, [sp, #8]
   13c90:	9900      	ldr	r1, [sp, #0]
   13c92:	4308      	orrs	r0, r1
    }
   13c94:	b004      	add	sp, #16
   13c96:	bd80      	pop	{r7, pc}

00013c98 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h2210a8a7d93c4d1eE>:
    fn to_usize() -> usize {
   13c98:	b580      	push	{r7, lr}
   13c9a:	b084      	sub	sp, #16
        usize::from(B::to_u8()) | U::to_usize() << 1
   13c9c:	f000 fc6c 	bl	14578 <_ZN64_$LT$typenum..bit..B0$u20$as$u20$typenum..marker_traits..Bit$GT$5to_u817h9f54ebcf7805587aE>
   13ca0:	9003      	str	r0, [sp, #12]
   13ca2:	e7ff      	b.n	13ca4 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h2210a8a7d93c4d1eE+0xc>
   13ca4:	9803      	ldr	r0, [sp, #12]
   13ca6:	f000 fe59 	bl	1495c <_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17h42518d20db38c567E>
   13caa:	9002      	str	r0, [sp, #8]
   13cac:	e7ff      	b.n	13cae <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h2210a8a7d93c4d1eE+0x16>
   13cae:	f000 f853 	bl	13d58 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h85ffd7bcac7d566dE>
   13cb2:	9001      	str	r0, [sp, #4]
   13cb4:	e7ff      	b.n	13cb6 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h2210a8a7d93c4d1eE+0x1e>
   13cb6:	9801      	ldr	r0, [sp, #4]
   13cb8:	0041      	lsls	r1, r0, #1
   13cba:	9100      	str	r1, [sp, #0]
   13cbc:	e7ff      	b.n	13cbe <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h2210a8a7d93c4d1eE+0x26>
   13cbe:	9802      	ldr	r0, [sp, #8]
   13cc0:	9900      	ldr	r1, [sp, #0]
   13cc2:	4308      	orrs	r0, r1
    }
   13cc4:	b004      	add	sp, #16
   13cc6:	bd80      	pop	{r7, pc}

00013cc8 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h2ff45d78d4e129a3E>:
    fn to_usize() -> usize {
   13cc8:	b580      	push	{r7, lr}
   13cca:	b084      	sub	sp, #16
        usize::from(B::to_u8()) | U::to_usize() << 1
   13ccc:	f000 fc54 	bl	14578 <_ZN64_$LT$typenum..bit..B0$u20$as$u20$typenum..marker_traits..Bit$GT$5to_u817h9f54ebcf7805587aE>
   13cd0:	9003      	str	r0, [sp, #12]
   13cd2:	e7ff      	b.n	13cd4 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h2ff45d78d4e129a3E+0xc>
   13cd4:	9803      	ldr	r0, [sp, #12]
   13cd6:	f000 fe41 	bl	1495c <_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17h42518d20db38c567E>
   13cda:	9002      	str	r0, [sp, #8]
   13cdc:	e7ff      	b.n	13cde <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h2ff45d78d4e129a3E+0x16>
   13cde:	f7ff ffab 	bl	13c38 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h06f40786ef79ca88E>
   13ce2:	9001      	str	r0, [sp, #4]
   13ce4:	e7ff      	b.n	13ce6 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h2ff45d78d4e129a3E+0x1e>
   13ce6:	9801      	ldr	r0, [sp, #4]
   13ce8:	0041      	lsls	r1, r0, #1
   13cea:	9100      	str	r1, [sp, #0]
   13cec:	e7ff      	b.n	13cee <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h2ff45d78d4e129a3E+0x26>
   13cee:	9802      	ldr	r0, [sp, #8]
   13cf0:	9900      	ldr	r1, [sp, #0]
   13cf2:	4308      	orrs	r0, r1
    }
   13cf4:	b004      	add	sp, #16
   13cf6:	bd80      	pop	{r7, pc}

00013cf8 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h5172e26c2722662fE>:
    fn to_usize() -> usize {
   13cf8:	b580      	push	{r7, lr}
   13cfa:	b084      	sub	sp, #16
        usize::from(B::to_u8()) | U::to_usize() << 1
   13cfc:	f000 fc3c 	bl	14578 <_ZN64_$LT$typenum..bit..B0$u20$as$u20$typenum..marker_traits..Bit$GT$5to_u817h9f54ebcf7805587aE>
   13d00:	9003      	str	r0, [sp, #12]
   13d02:	e7ff      	b.n	13d04 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h5172e26c2722662fE+0xc>
   13d04:	9803      	ldr	r0, [sp, #12]
   13d06:	f000 fe29 	bl	1495c <_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17h42518d20db38c567E>
   13d0a:	9002      	str	r0, [sp, #8]
   13d0c:	e7ff      	b.n	13d0e <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h5172e26c2722662fE+0x16>
   13d0e:	f7ff ffc3 	bl	13c98 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h2210a8a7d93c4d1eE>
   13d12:	9001      	str	r0, [sp, #4]
   13d14:	e7ff      	b.n	13d16 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h5172e26c2722662fE+0x1e>
   13d16:	9801      	ldr	r0, [sp, #4]
   13d18:	0041      	lsls	r1, r0, #1
   13d1a:	9100      	str	r1, [sp, #0]
   13d1c:	e7ff      	b.n	13d1e <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h5172e26c2722662fE+0x26>
   13d1e:	9802      	ldr	r0, [sp, #8]
   13d20:	9900      	ldr	r1, [sp, #0]
   13d22:	4308      	orrs	r0, r1
    }
   13d24:	b004      	add	sp, #16
   13d26:	bd80      	pop	{r7, pc}

00013d28 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h7a9c2e0c71a7bcc0E>:
    fn to_usize() -> usize {
   13d28:	b580      	push	{r7, lr}
   13d2a:	b084      	sub	sp, #16
        usize::from(B::to_u8()) | U::to_usize() << 1
   13d2c:	f000 fc24 	bl	14578 <_ZN64_$LT$typenum..bit..B0$u20$as$u20$typenum..marker_traits..Bit$GT$5to_u817h9f54ebcf7805587aE>
   13d30:	9003      	str	r0, [sp, #12]
   13d32:	e7ff      	b.n	13d34 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h7a9c2e0c71a7bcc0E+0xc>
   13d34:	9803      	ldr	r0, [sp, #12]
   13d36:	f000 fe11 	bl	1495c <_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17h42518d20db38c567E>
   13d3a:	9002      	str	r0, [sp, #8]
   13d3c:	e7ff      	b.n	13d3e <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h7a9c2e0c71a7bcc0E+0x16>
   13d3e:	f7ff ff93 	bl	13c68 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h1c5a8a075ee325dcE>
   13d42:	9001      	str	r0, [sp, #4]
   13d44:	e7ff      	b.n	13d46 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h7a9c2e0c71a7bcc0E+0x1e>
   13d46:	9801      	ldr	r0, [sp, #4]
   13d48:	0041      	lsls	r1, r0, #1
   13d4a:	9100      	str	r1, [sp, #0]
   13d4c:	e7ff      	b.n	13d4e <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h7a9c2e0c71a7bcc0E+0x26>
   13d4e:	9802      	ldr	r0, [sp, #8]
   13d50:	9900      	ldr	r1, [sp, #0]
   13d52:	4308      	orrs	r0, r1
    }
   13d54:	b004      	add	sp, #16
   13d56:	bd80      	pop	{r7, pc}

00013d58 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h85ffd7bcac7d566dE>:
    fn to_usize() -> usize {
   13d58:	b580      	push	{r7, lr}
   13d5a:	b084      	sub	sp, #16
        usize::from(B::to_u8()) | U::to_usize() << 1
   13d5c:	f000 fc0c 	bl	14578 <_ZN64_$LT$typenum..bit..B0$u20$as$u20$typenum..marker_traits..Bit$GT$5to_u817h9f54ebcf7805587aE>
   13d60:	9003      	str	r0, [sp, #12]
   13d62:	e7ff      	b.n	13d64 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h85ffd7bcac7d566dE+0xc>
   13d64:	9803      	ldr	r0, [sp, #12]
   13d66:	f000 fdf9 	bl	1495c <_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17h42518d20db38c567E>
   13d6a:	9002      	str	r0, [sp, #8]
   13d6c:	e7ff      	b.n	13d6e <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h85ffd7bcac7d566dE+0x16>
   13d6e:	f000 f853 	bl	13e18 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17he59e107f276aaab3E>
   13d72:	9001      	str	r0, [sp, #4]
   13d74:	e7ff      	b.n	13d76 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h85ffd7bcac7d566dE+0x1e>
   13d76:	9801      	ldr	r0, [sp, #4]
   13d78:	0041      	lsls	r1, r0, #1
   13d7a:	9100      	str	r1, [sp, #0]
   13d7c:	e7ff      	b.n	13d7e <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h85ffd7bcac7d566dE+0x26>
   13d7e:	9802      	ldr	r0, [sp, #8]
   13d80:	9900      	ldr	r1, [sp, #0]
   13d82:	4308      	orrs	r0, r1
    }
   13d84:	b004      	add	sp, #16
   13d86:	bd80      	pop	{r7, pc}

00013d88 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h8ee361872c582e57E>:
    fn to_usize() -> usize {
   13d88:	b580      	push	{r7, lr}
   13d8a:	b084      	sub	sp, #16
        usize::from(B::to_u8()) | U::to_usize() << 1
   13d8c:	f000 fbf4 	bl	14578 <_ZN64_$LT$typenum..bit..B0$u20$as$u20$typenum..marker_traits..Bit$GT$5to_u817h9f54ebcf7805587aE>
   13d90:	9003      	str	r0, [sp, #12]
   13d92:	e7ff      	b.n	13d94 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h8ee361872c582e57E+0xc>
   13d94:	9803      	ldr	r0, [sp, #12]
   13d96:	f000 fde1 	bl	1495c <_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17h42518d20db38c567E>
   13d9a:	9002      	str	r0, [sp, #8]
   13d9c:	e7ff      	b.n	13d9e <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h8ee361872c582e57E+0x16>
   13d9e:	f7ff ffc3 	bl	13d28 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h7a9c2e0c71a7bcc0E>
   13da2:	9001      	str	r0, [sp, #4]
   13da4:	e7ff      	b.n	13da6 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h8ee361872c582e57E+0x1e>
   13da6:	9801      	ldr	r0, [sp, #4]
   13da8:	0041      	lsls	r1, r0, #1
   13daa:	9100      	str	r1, [sp, #0]
   13dac:	e7ff      	b.n	13dae <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h8ee361872c582e57E+0x26>
   13dae:	9802      	ldr	r0, [sp, #8]
   13db0:	9900      	ldr	r1, [sp, #0]
   13db2:	4308      	orrs	r0, r1
    }
   13db4:	b004      	add	sp, #16
   13db6:	bd80      	pop	{r7, pc}

00013db8 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17hc06e4a52f29c62b5E>:
    fn to_usize() -> usize {
   13db8:	b580      	push	{r7, lr}
   13dba:	b084      	sub	sp, #16
        usize::from(B::to_u8()) | U::to_usize() << 1
   13dbc:	f000 fbdc 	bl	14578 <_ZN64_$LT$typenum..bit..B0$u20$as$u20$typenum..marker_traits..Bit$GT$5to_u817h9f54ebcf7805587aE>
   13dc0:	9003      	str	r0, [sp, #12]
   13dc2:	e7ff      	b.n	13dc4 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17hc06e4a52f29c62b5E+0xc>
   13dc4:	9803      	ldr	r0, [sp, #12]
   13dc6:	f000 fdc9 	bl	1495c <_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17h42518d20db38c567E>
   13dca:	9002      	str	r0, [sp, #8]
   13dcc:	e7ff      	b.n	13dce <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17hc06e4a52f29c62b5E+0x16>
   13dce:	f7ff ffdb 	bl	13d88 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h8ee361872c582e57E>
   13dd2:	9001      	str	r0, [sp, #4]
   13dd4:	e7ff      	b.n	13dd6 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17hc06e4a52f29c62b5E+0x1e>
   13dd6:	9801      	ldr	r0, [sp, #4]
   13dd8:	0041      	lsls	r1, r0, #1
   13dda:	9100      	str	r1, [sp, #0]
   13ddc:	e7ff      	b.n	13dde <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17hc06e4a52f29c62b5E+0x26>
   13dde:	9802      	ldr	r0, [sp, #8]
   13de0:	9900      	ldr	r1, [sp, #0]
   13de2:	4308      	orrs	r0, r1
    }
   13de4:	b004      	add	sp, #16
   13de6:	bd80      	pop	{r7, pc}

00013de8 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17hc3f12fa243921862E>:
    fn to_usize() -> usize {
   13de8:	b580      	push	{r7, lr}
   13dea:	b084      	sub	sp, #16
        usize::from(B::to_u8()) | U::to_usize() << 1
   13dec:	f000 fbc4 	bl	14578 <_ZN64_$LT$typenum..bit..B0$u20$as$u20$typenum..marker_traits..Bit$GT$5to_u817h9f54ebcf7805587aE>
   13df0:	9003      	str	r0, [sp, #12]
   13df2:	e7ff      	b.n	13df4 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17hc3f12fa243921862E+0xc>
   13df4:	9803      	ldr	r0, [sp, #12]
   13df6:	f000 fdb1 	bl	1495c <_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17h42518d20db38c567E>
   13dfa:	9002      	str	r0, [sp, #8]
   13dfc:	e7ff      	b.n	13dfe <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17hc3f12fa243921862E+0x16>
   13dfe:	f7ff ff63 	bl	13cc8 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h2ff45d78d4e129a3E>
   13e02:	9001      	str	r0, [sp, #4]
   13e04:	e7ff      	b.n	13e06 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17hc3f12fa243921862E+0x1e>
   13e06:	9801      	ldr	r0, [sp, #4]
   13e08:	0041      	lsls	r1, r0, #1
   13e0a:	9100      	str	r1, [sp, #0]
   13e0c:	e7ff      	b.n	13e0e <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17hc3f12fa243921862E+0x26>
   13e0e:	9802      	ldr	r0, [sp, #8]
   13e10:	9900      	ldr	r1, [sp, #0]
   13e12:	4308      	orrs	r0, r1
    }
   13e14:	b004      	add	sp, #16
   13e16:	bd80      	pop	{r7, pc}

00013e18 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17he59e107f276aaab3E>:
    fn to_usize() -> usize {
   13e18:	b580      	push	{r7, lr}
   13e1a:	b084      	sub	sp, #16
        usize::from(B::to_u8()) | U::to_usize() << 1
   13e1c:	f000 fbac 	bl	14578 <_ZN64_$LT$typenum..bit..B0$u20$as$u20$typenum..marker_traits..Bit$GT$5to_u817h9f54ebcf7805587aE>
   13e20:	9003      	str	r0, [sp, #12]
   13e22:	e7ff      	b.n	13e24 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17he59e107f276aaab3E+0xc>
   13e24:	9803      	ldr	r0, [sp, #12]
   13e26:	f000 fd99 	bl	1495c <_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17h42518d20db38c567E>
   13e2a:	9002      	str	r0, [sp, #8]
   13e2c:	e7ff      	b.n	13e2e <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17he59e107f276aaab3E+0x16>
   13e2e:	f7ff ffc3 	bl	13db8 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17hc06e4a52f29c62b5E>
   13e32:	9001      	str	r0, [sp, #4]
   13e34:	e7ff      	b.n	13e36 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17he59e107f276aaab3E+0x1e>
   13e36:	9801      	ldr	r0, [sp, #4]
   13e38:	0041      	lsls	r1, r0, #1
   13e3a:	9100      	str	r1, [sp, #0]
   13e3c:	e7ff      	b.n	13e3e <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17he59e107f276aaab3E+0x26>
   13e3e:	9802      	ldr	r0, [sp, #8]
   13e40:	9900      	ldr	r1, [sp, #0]
   13e42:	4308      	orrs	r0, r1
    }
   13e44:	b004      	add	sp, #16
   13e46:	bd80      	pop	{r7, pc}

00013e48 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17hf52b7ac7b97083edE>:
    fn to_usize() -> usize {
   13e48:	b580      	push	{r7, lr}
   13e4a:	b084      	sub	sp, #16
        usize::from(B::to_u8()) | U::to_usize() << 1
   13e4c:	f000 fb94 	bl	14578 <_ZN64_$LT$typenum..bit..B0$u20$as$u20$typenum..marker_traits..Bit$GT$5to_u817h9f54ebcf7805587aE>
   13e50:	9003      	str	r0, [sp, #12]
   13e52:	e7ff      	b.n	13e54 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17hf52b7ac7b97083edE+0xc>
   13e54:	9803      	ldr	r0, [sp, #12]
   13e56:	f000 fd81 	bl	1495c <_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17h42518d20db38c567E>
   13e5a:	9002      	str	r0, [sp, #8]
   13e5c:	e7ff      	b.n	13e5e <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17hf52b7ac7b97083edE+0x16>
   13e5e:	f7ff ffc3 	bl	13de8 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17hc3f12fa243921862E>
   13e62:	9001      	str	r0, [sp, #4]
   13e64:	e7ff      	b.n	13e66 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17hf52b7ac7b97083edE+0x1e>
   13e66:	9801      	ldr	r0, [sp, #4]
   13e68:	0041      	lsls	r1, r0, #1
   13e6a:	9100      	str	r1, [sp, #0]
   13e6c:	e7ff      	b.n	13e6e <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17hf52b7ac7b97083edE+0x26>
   13e6e:	9802      	ldr	r0, [sp, #8]
   13e70:	9900      	ldr	r1, [sp, #0]
   13e72:	4308      	orrs	r0, r1
    }
   13e74:	b004      	add	sp, #16
   13e76:	bd80      	pop	{r7, pc}

00013e78 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hfdc04c931b4d8a66E>:
   13e78:	b084      	sub	sp, #16
   13e7a:	9001      	str	r0, [sp, #4]
   13e7c:	9102      	str	r1, [sp, #8]
   13e7e:	9801      	ldr	r0, [sp, #4]
   13e80:	9902      	ldr	r1, [sp, #8]
   13e82:	4408      	add	r0, r1
   13e84:	9003      	str	r0, [sp, #12]
   13e86:	9803      	ldr	r0, [sp, #12]
   13e88:	9000      	str	r0, [sp, #0]
   13e8a:	e7ff      	b.n	13e8c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hfdc04c931b4d8a66E+0x14>
   13e8c:	9800      	ldr	r0, [sp, #0]
   13e8e:	b004      	add	sp, #16
   13e90:	4770      	bx	lr

00013e92 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h66cfaa3aed13a9dcE>:
   13e92:	b082      	sub	sp, #8
   13e94:	9001      	str	r0, [sp, #4]
   13e96:	9801      	ldr	r0, [sp, #4]
   13e98:	9000      	str	r0, [sp, #0]
   13e9a:	e7ff      	b.n	13e9c <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h66cfaa3aed13a9dcE+0xa>
   13e9c:	9800      	ldr	r0, [sp, #0]
   13e9e:	fab0 f180 	clz	r1, r0
   13ea2:	0948      	lsrs	r0, r1, #5
   13ea4:	b002      	add	sp, #8
   13ea6:	4770      	bx	lr

00013ea8 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hddf4425cdc540121E>:
   13ea8:	b082      	sub	sp, #8
   13eaa:	9000      	str	r0, [sp, #0]
   13eac:	9800      	ldr	r0, [sp, #0]
   13eae:	9001      	str	r0, [sp, #4]
   13eb0:	9801      	ldr	r0, [sp, #4]
   13eb2:	b002      	add	sp, #8
   13eb4:	4770      	bx	lr

00013eb6 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h87bc43ad826ab7a0E>:
   13eb6:	b081      	sub	sp, #4
   13eb8:	9000      	str	r0, [sp, #0]
   13eba:	9800      	ldr	r0, [sp, #0]
   13ebc:	b001      	add	sp, #4
   13ebe:	4770      	bx	lr

00013ec0 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17hbccadf1346c9eb57E>:
   13ec0:	b084      	sub	sp, #16
   13ec2:	9001      	str	r0, [sp, #4]
   13ec4:	9102      	str	r1, [sp, #8]
   13ec6:	9801      	ldr	r0, [sp, #4]
   13ec8:	9902      	ldr	r1, [sp, #8]
   13eca:	4408      	add	r0, r1
   13ecc:	9003      	str	r0, [sp, #12]
   13ece:	9803      	ldr	r0, [sp, #12]
   13ed0:	9000      	str	r0, [sp, #0]
   13ed2:	e7ff      	b.n	13ed4 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17hbccadf1346c9eb57E+0x14>
   13ed4:	9800      	ldr	r0, [sp, #0]
   13ed6:	b004      	add	sp, #16
   13ed8:	4770      	bx	lr

00013eda <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hdb831d5e1fe0a122E>:
   13eda:	b082      	sub	sp, #8
   13edc:	9001      	str	r0, [sp, #4]
   13ede:	9801      	ldr	r0, [sp, #4]
   13ee0:	9000      	str	r0, [sp, #0]
   13ee2:	e7ff      	b.n	13ee4 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hdb831d5e1fe0a122E+0xa>
   13ee4:	9800      	ldr	r0, [sp, #0]
   13ee6:	fab0 f180 	clz	r1, r0
   13eea:	0948      	lsrs	r0, r1, #5
   13eec:	b002      	add	sp, #8
   13eee:	4770      	bx	lr

00013ef0 <_ZN4core3str11unwrap_or_017h8ed666a77c5c89c4E>:
   13ef0:	b082      	sub	sp, #8
   13ef2:	9000      	str	r0, [sp, #0]
   13ef4:	9800      	ldr	r0, [sp, #0]
   13ef6:	2800      	cmp	r0, #0
   13ef8:	4601      	mov	r1, r0
   13efa:	bf18      	it	ne
   13efc:	2101      	movne	r1, #1
   13efe:	2800      	cmp	r0, #0
   13f00:	d001      	beq.n	13f06 <_ZN4core3str11unwrap_or_017h8ed666a77c5c89c4E+0x16>
   13f02:	e7ff      	b.n	13f04 <_ZN4core3str11unwrap_or_017h8ed666a77c5c89c4E+0x14>
   13f04:	e004      	b.n	13f10 <_ZN4core3str11unwrap_or_017h8ed666a77c5c89c4E+0x20>
   13f06:	2000      	movs	r0, #0
   13f08:	f88d 0006 	strb.w	r0, [sp, #6]
   13f0c:	e009      	b.n	13f22 <_ZN4core3str11unwrap_or_017h8ed666a77c5c89c4E+0x32>
   13f0e:	defe      	udf	#254	; 0xfe
   13f10:	9800      	ldr	r0, [sp, #0]
   13f12:	7800      	ldrb	r0, [r0, #0]
   13f14:	f88d 0007 	strb.w	r0, [sp, #7]
   13f18:	f89d 0007 	ldrb.w	r0, [sp, #7]
   13f1c:	f88d 0006 	strb.w	r0, [sp, #6]
   13f20:	e7ff      	b.n	13f22 <_ZN4core3str11unwrap_or_017h8ed666a77c5c89c4E+0x32>
   13f22:	f89d 0006 	ldrb.w	r0, [sp, #6]
   13f26:	b002      	add	sp, #8
   13f28:	4770      	bx	lr

00013f2a <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E>:
   13f2a:	b580      	push	{r7, lr}
   13f2c:	b094      	sub	sp, #80	; 0x50
   13f2e:	9007      	str	r0, [sp, #28]
   13f30:	9807      	ldr	r0, [sp, #28]
   13f32:	f000 f960 	bl	141f6 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9c8db2e9c9694c09E>
   13f36:	9006      	str	r0, [sp, #24]
   13f38:	e7ff      	b.n	13f3a <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0x10>
   13f3a:	9806      	ldr	r0, [sp, #24]
   13f3c:	f000 f945 	bl	141ca <_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h29c6a57fea4db82fE>
   13f40:	900b      	str	r0, [sp, #44]	; 0x2c
   13f42:	e7ff      	b.n	13f44 <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0x1a>
   13f44:	980b      	ldr	r0, [sp, #44]	; 0x2c
   13f46:	fab0 f180 	clz	r1, r0
   13f4a:	0949      	lsrs	r1, r1, #5
   13f4c:	2800      	cmp	r0, #0
   13f4e:	d110      	bne.n	13f72 <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0x48>
   13f50:	e7ff      	b.n	13f52 <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0x28>
   13f52:	e000      	b.n	13f56 <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0x2c>
   13f54:	defe      	udf	#254	; 0xfe
   13f56:	f000 f92e 	bl	141b6 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h54e18c0ae376abfdE>
   13f5a:	e003      	b.n	13f64 <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0x3a>
   13f5c:	9808      	ldr	r0, [sp, #32]
   13f5e:	9909      	ldr	r1, [sp, #36]	; 0x24
   13f60:	b014      	add	sp, #80	; 0x50
   13f62:	bd80      	pop	{r7, pc}
   13f64:	f000 f92a 	bl	141bc <_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h929a3648e5ff460fE>
   13f68:	9109      	str	r1, [sp, #36]	; 0x24
   13f6a:	9008      	str	r0, [sp, #32]
   13f6c:	e7ff      	b.n	13f6e <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0x44>
   13f6e:	e7ff      	b.n	13f70 <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0x46>
   13f70:	e7f4      	b.n	13f5c <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0x32>
   13f72:	980b      	ldr	r0, [sp, #44]	; 0x2c
   13f74:	900d      	str	r0, [sp, #52]	; 0x34
   13f76:	980d      	ldr	r0, [sp, #52]	; 0x34
   13f78:	7800      	ldrb	r0, [r0, #0]
   13f7a:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
   13f7e:	f99d 002b 	ldrsb.w	r0, [sp, #43]	; 0x2b
   13f82:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
   13f86:	dc07      	bgt.n	13f98 <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0x6e>
   13f88:	e7ff      	b.n	13f8a <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0x60>
   13f8a:	f89d 002b 	ldrb.w	r0, [sp, #43]	; 0x2b
   13f8e:	2102      	movs	r1, #2
   13f90:	f000 f863 	bl	1405a <_ZN4core3str15utf8_first_byte17hbfb743244c0d0905E>
   13f94:	900e      	str	r0, [sp, #56]	; 0x38
   13f96:	e005      	b.n	13fa4 <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0x7a>
   13f98:	f89d 002b 	ldrb.w	r0, [sp, #43]	; 0x2b
   13f9c:	9009      	str	r0, [sp, #36]	; 0x24
   13f9e:	2001      	movs	r0, #1
   13fa0:	9008      	str	r0, [sp, #32]
   13fa2:	e7e5      	b.n	13f70 <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0x46>
   13fa4:	9807      	ldr	r0, [sp, #28]
   13fa6:	f000 f926 	bl	141f6 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9c8db2e9c9694c09E>
   13faa:	9005      	str	r0, [sp, #20]
   13fac:	e7ff      	b.n	13fae <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0x84>
   13fae:	9805      	ldr	r0, [sp, #20]
   13fb0:	f7ff ff9e 	bl	13ef0 <_ZN4core3str11unwrap_or_017h8ed666a77c5c89c4E>
   13fb4:	f88d 003f 	strb.w	r0, [sp, #63]	; 0x3f
   13fb8:	e7ff      	b.n	13fba <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0x90>
   13fba:	980e      	ldr	r0, [sp, #56]	; 0x38
   13fbc:	f89d 103f 	ldrb.w	r1, [sp, #63]	; 0x3f
   13fc0:	f000 f85b 	bl	1407a <_ZN4core3str18utf8_acc_cont_byte17hd06c82ebbca406d8E>
   13fc4:	9010      	str	r0, [sp, #64]	; 0x40
   13fc6:	e7ff      	b.n	13fc8 <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0x9e>
   13fc8:	f89d 002b 	ldrb.w	r0, [sp, #43]	; 0x2b
   13fcc:	28e0      	cmp	r0, #224	; 0xe0
   13fce:	d33f      	bcc.n	14050 <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0x126>
   13fd0:	e7ff      	b.n	13fd2 <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0xa8>
   13fd2:	9807      	ldr	r0, [sp, #28]
   13fd4:	f000 f90f 	bl	141f6 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9c8db2e9c9694c09E>
   13fd8:	9004      	str	r0, [sp, #16]
   13fda:	e7ff      	b.n	13fdc <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0xb2>
   13fdc:	9804      	ldr	r0, [sp, #16]
   13fde:	f7ff ff87 	bl	13ef0 <_ZN4core3str11unwrap_or_017h8ed666a77c5c89c4E>
   13fe2:	f88d 0047 	strb.w	r0, [sp, #71]	; 0x47
   13fe6:	e7ff      	b.n	13fe8 <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0xbe>
   13fe8:	f89d 003f 	ldrb.w	r0, [sp, #63]	; 0x3f
   13fec:	f000 003f 	and.w	r0, r0, #63	; 0x3f
   13ff0:	f89d 1047 	ldrb.w	r1, [sp, #71]	; 0x47
   13ff4:	f000 f841 	bl	1407a <_ZN4core3str18utf8_acc_cont_byte17hd06c82ebbca406d8E>
   13ff8:	9012      	str	r0, [sp, #72]	; 0x48
   13ffa:	e7ff      	b.n	13ffc <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0xd2>
   13ffc:	980e      	ldr	r0, [sp, #56]	; 0x38
   13ffe:	9912      	ldr	r1, [sp, #72]	; 0x48
   14000:	ea41 3000 	orr.w	r0, r1, r0, lsl #12
   14004:	9010      	str	r0, [sp, #64]	; 0x40
   14006:	f89d 002b 	ldrb.w	r0, [sp, #43]	; 0x2b
   1400a:	28f0      	cmp	r0, #240	; 0xf0
   1400c:	d31f      	bcc.n	1404e <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0x124>
   1400e:	e7ff      	b.n	14010 <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0xe6>
   14010:	9807      	ldr	r0, [sp, #28]
   14012:	f000 f8f0 	bl	141f6 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9c8db2e9c9694c09E>
   14016:	9003      	str	r0, [sp, #12]
   14018:	e7ff      	b.n	1401a <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0xf0>
   1401a:	9803      	ldr	r0, [sp, #12]
   1401c:	f7ff ff68 	bl	13ef0 <_ZN4core3str11unwrap_or_017h8ed666a77c5c89c4E>
   14020:	f88d 004f 	strb.w	r0, [sp, #79]	; 0x4f
   14024:	e7ff      	b.n	14026 <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0xfc>
   14026:	980e      	ldr	r0, [sp, #56]	; 0x38
   14028:	f000 0007 	and.w	r0, r0, #7
   1402c:	0480      	lsls	r0, r0, #18
   1402e:	9912      	ldr	r1, [sp, #72]	; 0x48
   14030:	f89d 204f 	ldrb.w	r2, [sp, #79]	; 0x4f
   14034:	9002      	str	r0, [sp, #8]
   14036:	4608      	mov	r0, r1
   14038:	4611      	mov	r1, r2
   1403a:	f000 f81e 	bl	1407a <_ZN4core3str18utf8_acc_cont_byte17hd06c82ebbca406d8E>
   1403e:	9001      	str	r0, [sp, #4]
   14040:	e7ff      	b.n	14042 <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0x118>
   14042:	9802      	ldr	r0, [sp, #8]
   14044:	9901      	ldr	r1, [sp, #4]
   14046:	ea40 0201 	orr.w	r2, r0, r1
   1404a:	9210      	str	r2, [sp, #64]	; 0x40
   1404c:	e7ff      	b.n	1404e <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0x124>
   1404e:	e7ff      	b.n	14050 <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0x126>
   14050:	9810      	ldr	r0, [sp, #64]	; 0x40
   14052:	9009      	str	r0, [sp, #36]	; 0x24
   14054:	2001      	movs	r0, #1
   14056:	9008      	str	r0, [sp, #32]
   14058:	e780      	b.n	13f5c <_ZN4core3str15next_code_point17h7c77bcb79b5e4a28E+0x32>

0001405a <_ZN4core3str15utf8_first_byte17hbfb743244c0d0905E>:
   1405a:	b082      	sub	sp, #8
   1405c:	4602      	mov	r2, r0
   1405e:	f88d 0003 	strb.w	r0, [sp, #3]
   14062:	9101      	str	r1, [sp, #4]
   14064:	f89d 0003 	ldrb.w	r0, [sp, #3]
   14068:	9901      	ldr	r1, [sp, #4]
   1406a:	f001 0107 	and.w	r1, r1, #7
   1406e:	237f      	movs	r3, #127	; 0x7f
   14070:	fa23 f101 	lsr.w	r1, r3, r1
   14074:	4008      	ands	r0, r1
   14076:	b002      	add	sp, #8
   14078:	4770      	bx	lr

0001407a <_ZN4core3str18utf8_acc_cont_byte17hd06c82ebbca406d8E>:
   1407a:	b082      	sub	sp, #8
   1407c:	460a      	mov	r2, r1
   1407e:	9000      	str	r0, [sp, #0]
   14080:	f88d 1007 	strb.w	r1, [sp, #7]
   14084:	9800      	ldr	r0, [sp, #0]
   14086:	f89d 1007 	ldrb.w	r1, [sp, #7]
   1408a:	f001 013f 	and.w	r1, r1, #63	; 0x3f
   1408e:	ea41 1080 	orr.w	r0, r1, r0, lsl #6
   14092:	b002      	add	sp, #8
   14094:	4770      	bx	lr

00014096 <_ZN4core4char7convert18from_u32_unchecked17haed10aaf6679bedaE>:
   14096:	b083      	sub	sp, #12
   14098:	9001      	str	r0, [sp, #4]
   1409a:	9801      	ldr	r0, [sp, #4]
   1409c:	9002      	str	r0, [sp, #8]
   1409e:	9802      	ldr	r0, [sp, #8]
   140a0:	9000      	str	r0, [sp, #0]
   140a2:	e7ff      	b.n	140a4 <_ZN4core4char7convert18from_u32_unchecked17haed10aaf6679bedaE+0xe>
   140a4:	9800      	ldr	r0, [sp, #0]
   140a6:	b003      	add	sp, #12
   140a8:	4770      	bx	lr

000140aa <_ZN4core6option15Option$LT$T$GT$3map17ha55d1d84e69fac8aE>:
   140aa:	b580      	push	{r7, lr}
   140ac:	b088      	sub	sp, #32
   140ae:	9001      	str	r0, [sp, #4]
   140b0:	9102      	str	r1, [sp, #8]
   140b2:	2000      	movs	r0, #0
   140b4:	f88d 001e 	strb.w	r0, [sp, #30]
   140b8:	f88d 001f 	strb.w	r0, [sp, #31]
   140bc:	2001      	movs	r0, #1
   140be:	f88d 001f 	strb.w	r0, [sp, #31]
   140c2:	f88d 001e 	strb.w	r0, [sp, #30]
   140c6:	9801      	ldr	r0, [sp, #4]
   140c8:	2800      	cmp	r0, #0
   140ca:	d001      	beq.n	140d0 <_ZN4core6option15Option$LT$T$GT$3map17ha55d1d84e69fac8aE+0x26>
   140cc:	e7ff      	b.n	140ce <_ZN4core6option15Option$LT$T$GT$3map17ha55d1d84e69fac8aE+0x24>
   140ce:	e006      	b.n	140de <_ZN4core6option15Option$LT$T$GT$3map17ha55d1d84e69fac8aE+0x34>
   140d0:	2000      	movs	r0, #0
   140d2:	9004      	str	r0, [sp, #16]
   140d4:	f44f 1088 	mov.w	r0, #1114112	; 0x110000
   140d8:	9004      	str	r0, [sp, #16]
   140da:	e019      	b.n	14110 <_ZN4core6option15Option$LT$T$GT$3map17ha55d1d84e69fac8aE+0x66>
   140dc:	defe      	udf	#254	; 0xfe
   140de:	2000      	movs	r0, #0
   140e0:	f88d 001f 	strb.w	r0, [sp, #31]
   140e4:	9902      	ldr	r1, [sp, #8]
   140e6:	9105      	str	r1, [sp, #20]
   140e8:	f88d 001e 	strb.w	r0, [sp, #30]
   140ec:	9805      	ldr	r0, [sp, #20]
   140ee:	9006      	str	r0, [sp, #24]
   140f0:	9806      	ldr	r0, [sp, #24]
   140f2:	f000 f875 	bl	141e0 <_ZN75_$LT$core..str..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h2dd188741ca33977E>
   140f6:	9000      	str	r0, [sp, #0]
   140f8:	e7ff      	b.n	140fa <_ZN4core6option15Option$LT$T$GT$3map17ha55d1d84e69fac8aE+0x50>
   140fa:	9800      	ldr	r0, [sp, #0]
   140fc:	9004      	str	r0, [sp, #16]
   140fe:	e007      	b.n	14110 <_ZN4core6option15Option$LT$T$GT$3map17ha55d1d84e69fac8aE+0x66>
   14100:	9801      	ldr	r0, [sp, #4]
   14102:	2801      	cmp	r0, #1
   14104:	d00d      	beq.n	14122 <_ZN4core6option15Option$LT$T$GT$3map17ha55d1d84e69fac8aE+0x78>
   14106:	e016      	b.n	14136 <_ZN4core6option15Option$LT$T$GT$3map17ha55d1d84e69fac8aE+0x8c>
   14108:	2000      	movs	r0, #0
   1410a:	f88d 001e 	strb.w	r0, [sp, #30]
   1410e:	e7f7      	b.n	14100 <_ZN4core6option15Option$LT$T$GT$3map17ha55d1d84e69fac8aE+0x56>
   14110:	f89d 001e 	ldrb.w	r0, [sp, #30]
   14114:	07c0      	lsls	r0, r0, #31
   14116:	2800      	cmp	r0, #0
   14118:	d1f6      	bne.n	14108 <_ZN4core6option15Option$LT$T$GT$3map17ha55d1d84e69fac8aE+0x5e>
   1411a:	e7f1      	b.n	14100 <_ZN4core6option15Option$LT$T$GT$3map17ha55d1d84e69fac8aE+0x56>
   1411c:	9804      	ldr	r0, [sp, #16]
   1411e:	b008      	add	sp, #32
   14120:	bd80      	pop	{r7, pc}
   14122:	f89d 001f 	ldrb.w	r0, [sp, #31]
   14126:	07c0      	lsls	r0, r0, #31
   14128:	2800      	cmp	r0, #0
   1412a:	d0f7      	beq.n	1411c <_ZN4core6option15Option$LT$T$GT$3map17ha55d1d84e69fac8aE+0x72>
   1412c:	e7ff      	b.n	1412e <_ZN4core6option15Option$LT$T$GT$3map17ha55d1d84e69fac8aE+0x84>
   1412e:	2000      	movs	r0, #0
   14130:	f88d 001f 	strb.w	r0, [sp, #31]
   14134:	e7f2      	b.n	1411c <_ZN4core6option15Option$LT$T$GT$3map17ha55d1d84e69fac8aE+0x72>
   14136:	e7f1      	b.n	1411c <_ZN4core6option15Option$LT$T$GT$3map17ha55d1d84e69fac8aE+0x72>

00014138 <_ZN4core6option15Option$LT$T$GT$5ok_or17ha6c815d903c44f14E>:
   14138:	b085      	sub	sp, #20
   1413a:	9000      	str	r0, [sp, #0]
   1413c:	2000      	movs	r0, #0
   1413e:	f88d 0013 	strb.w	r0, [sp, #19]
   14142:	f88d 0012 	strb.w	r0, [sp, #18]
   14146:	2001      	movs	r0, #1
   14148:	f88d 0013 	strb.w	r0, [sp, #19]
   1414c:	f88d 0012 	strb.w	r0, [sp, #18]
   14150:	9800      	ldr	r0, [sp, #0]
   14152:	2800      	cmp	r0, #0
   14154:	4601      	mov	r1, r0
   14156:	bf18      	it	ne
   14158:	2101      	movne	r1, #1
   1415a:	2800      	cmp	r0, #0
   1415c:	d001      	beq.n	14162 <_ZN4core6option15Option$LT$T$GT$5ok_or17ha6c815d903c44f14E+0x2a>
   1415e:	e7ff      	b.n	14160 <_ZN4core6option15Option$LT$T$GT$5ok_or17ha6c815d903c44f14E+0x28>
   14160:	e005      	b.n	1416e <_ZN4core6option15Option$LT$T$GT$5ok_or17ha6c815d903c44f14E+0x36>
   14162:	2000      	movs	r0, #0
   14164:	f88d 0012 	strb.w	r0, [sp, #18]
   14168:	9002      	str	r0, [sp, #8]
   1416a:	e008      	b.n	1417e <_ZN4core6option15Option$LT$T$GT$5ok_or17ha6c815d903c44f14E+0x46>
   1416c:	defe      	udf	#254	; 0xfe
   1416e:	2000      	movs	r0, #0
   14170:	f88d 0013 	strb.w	r0, [sp, #19]
   14174:	9800      	ldr	r0, [sp, #0]
   14176:	9003      	str	r0, [sp, #12]
   14178:	9803      	ldr	r0, [sp, #12]
   1417a:	9002      	str	r0, [sp, #8]
   1417c:	e7ff      	b.n	1417e <_ZN4core6option15Option$LT$T$GT$5ok_or17ha6c815d903c44f14E+0x46>
   1417e:	f89d 0012 	ldrb.w	r0, [sp, #18]
   14182:	07c0      	lsls	r0, r0, #31
   14184:	2800      	cmp	r0, #0
   14186:	d104      	bne.n	14192 <_ZN4core6option15Option$LT$T$GT$5ok_or17ha6c815d903c44f14E+0x5a>
   14188:	e7ff      	b.n	1418a <_ZN4core6option15Option$LT$T$GT$5ok_or17ha6c815d903c44f14E+0x52>
   1418a:	9800      	ldr	r0, [sp, #0]
   1418c:	2800      	cmp	r0, #0
   1418e:	d107      	bne.n	141a0 <_ZN4core6option15Option$LT$T$GT$5ok_or17ha6c815d903c44f14E+0x68>
   14190:	e010      	b.n	141b4 <_ZN4core6option15Option$LT$T$GT$5ok_or17ha6c815d903c44f14E+0x7c>
   14192:	2000      	movs	r0, #0
   14194:	f88d 0012 	strb.w	r0, [sp, #18]
   14198:	e7f7      	b.n	1418a <_ZN4core6option15Option$LT$T$GT$5ok_or17ha6c815d903c44f14E+0x52>
   1419a:	9802      	ldr	r0, [sp, #8]
   1419c:	b005      	add	sp, #20
   1419e:	4770      	bx	lr
   141a0:	f89d 0013 	ldrb.w	r0, [sp, #19]
   141a4:	07c0      	lsls	r0, r0, #31
   141a6:	2800      	cmp	r0, #0
   141a8:	d0f7      	beq.n	1419a <_ZN4core6option15Option$LT$T$GT$5ok_or17ha6c815d903c44f14E+0x62>
   141aa:	e7ff      	b.n	141ac <_ZN4core6option15Option$LT$T$GT$5ok_or17ha6c815d903c44f14E+0x74>
   141ac:	2000      	movs	r0, #0
   141ae:	f88d 0013 	strb.w	r0, [sp, #19]
   141b2:	e7f2      	b.n	1419a <_ZN4core6option15Option$LT$T$GT$5ok_or17ha6c815d903c44f14E+0x62>
   141b4:	e7f1      	b.n	1419a <_ZN4core6option15Option$LT$T$GT$5ok_or17ha6c815d903c44f14E+0x62>

000141b6 <_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h54e18c0ae376abfdE>:
   141b6:	b081      	sub	sp, #4
   141b8:	b001      	add	sp, #4
   141ba:	4770      	bx	lr

000141bc <_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h929a3648e5ff460fE>:
   141bc:	b083      	sub	sp, #12
   141be:	2000      	movs	r0, #0
   141c0:	9001      	str	r0, [sp, #4]
   141c2:	9801      	ldr	r0, [sp, #4]
   141c4:	9902      	ldr	r1, [sp, #8]
   141c6:	b003      	add	sp, #12
   141c8:	4770      	bx	lr

000141ca <_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h29c6a57fea4db82fE>:
   141ca:	b580      	push	{r7, lr}
   141cc:	b084      	sub	sp, #16
   141ce:	9002      	str	r0, [sp, #8]
   141d0:	9802      	ldr	r0, [sp, #8]
   141d2:	f7ff ffb1 	bl	14138 <_ZN4core6option15Option$LT$T$GT$5ok_or17ha6c815d903c44f14E>
   141d6:	9001      	str	r0, [sp, #4]
   141d8:	e7ff      	b.n	141da <_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h29c6a57fea4db82fE+0x10>
   141da:	9801      	ldr	r0, [sp, #4]
   141dc:	b004      	add	sp, #16
   141de:	bd80      	pop	{r7, pc}

000141e0 <_ZN75_$LT$core..str..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h2dd188741ca33977E>:
   141e0:	b580      	push	{r7, lr}
   141e2:	b084      	sub	sp, #16
   141e4:	9003      	str	r0, [sp, #12]
   141e6:	9803      	ldr	r0, [sp, #12]
   141e8:	f7ff ff55 	bl	14096 <_ZN4core4char7convert18from_u32_unchecked17haed10aaf6679bedaE>
   141ec:	9001      	str	r0, [sp, #4]
   141ee:	e7ff      	b.n	141f0 <_ZN75_$LT$core..str..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h2dd188741ca33977E+0x10>
   141f0:	9801      	ldr	r0, [sp, #4]
   141f2:	b004      	add	sp, #16
   141f4:	bd80      	pop	{r7, pc}

000141f6 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9c8db2e9c9694c09E>:
   141f6:	b580      	push	{r7, lr}
   141f8:	b08c      	sub	sp, #48	; 0x30
   141fa:	9004      	str	r0, [sp, #16]
   141fc:	9804      	ldr	r0, [sp, #16]
   141fe:	6800      	ldr	r0, [r0, #0]
   14200:	f7ff fe59 	bl	13eb6 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h87bc43ad826ab7a0E>
   14204:	9003      	str	r0, [sp, #12]
   14206:	e7ff      	b.n	14208 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9c8db2e9c9694c09E+0x12>
   14208:	9803      	ldr	r0, [sp, #12]
   1420a:	f7ff fe42 	bl	13e92 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h66cfaa3aed13a9dcE>
   1420e:	e7ff      	b.n	14210 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9c8db2e9c9694c09E+0x1a>
   14210:	e7ff      	b.n	14212 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9c8db2e9c9694c09E+0x1c>
   14212:	2001      	movs	r0, #1
   14214:	9006      	str	r0, [sp, #24]
   14216:	9806      	ldr	r0, [sp, #24]
   14218:	9002      	str	r0, [sp, #8]
   1421a:	e7ff      	b.n	1421c <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9c8db2e9c9694c09E+0x26>
   1421c:	9802      	ldr	r0, [sp, #8]
   1421e:	2800      	cmp	r0, #0
   14220:	d007      	beq.n	14232 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9c8db2e9c9694c09E+0x3c>
   14222:	e7ff      	b.n	14224 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9c8db2e9c9694c09E+0x2e>
   14224:	9804      	ldr	r0, [sp, #16]
   14226:	6840      	ldr	r0, [r0, #4]
   14228:	f7ff fe57 	bl	13eda <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hdb831d5e1fe0a122E>
   1422c:	e7ff      	b.n	1422e <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9c8db2e9c9694c09E+0x38>
   1422e:	e7ff      	b.n	14230 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9c8db2e9c9694c09E+0x3a>
   14230:	e7ff      	b.n	14232 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9c8db2e9c9694c09E+0x3c>
   14232:	9804      	ldr	r0, [sp, #16]
   14234:	6800      	ldr	r0, [r0, #0]
   14236:	f7ff fe3e 	bl	13eb6 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h87bc43ad826ab7a0E>
   1423a:	9001      	str	r0, [sp, #4]
   1423c:	e7ff      	b.n	1423e <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9c8db2e9c9694c09E+0x48>
   1423e:	9804      	ldr	r0, [sp, #16]
   14240:	6840      	ldr	r0, [r0, #4]
   14242:	9901      	ldr	r1, [sp, #4]
   14244:	4281      	cmp	r1, r0
   14246:	d02d      	beq.n	142a4 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9c8db2e9c9694c09E+0xae>
   14248:	e7ff      	b.n	1424a <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9c8db2e9c9694c09E+0x54>
   1424a:	9804      	ldr	r0, [sp, #16]
   1424c:	9007      	str	r0, [sp, #28]
   1424e:	2001      	movs	r0, #1
   14250:	9008      	str	r0, [sp, #32]
   14252:	900b      	str	r0, [sp, #44]	; 0x2c
   14254:	980b      	ldr	r0, [sp, #44]	; 0x2c
   14256:	2800      	cmp	r0, #0
   14258:	d013      	beq.n	14282 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9c8db2e9c9694c09E+0x8c>
   1425a:	e7ff      	b.n	1425c <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9c8db2e9c9694c09E+0x66>
   1425c:	9807      	ldr	r0, [sp, #28]
   1425e:	6800      	ldr	r0, [r0, #0]
   14260:	f7ff fe29 	bl	13eb6 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h87bc43ad826ab7a0E>
   14264:	900a      	str	r0, [sp, #40]	; 0x28
   14266:	9807      	ldr	r0, [sp, #28]
   14268:	6800      	ldr	r0, [r0, #0]
   1426a:	f7ff fe24 	bl	13eb6 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h87bc43ad826ab7a0E>
   1426e:	9908      	ldr	r1, [sp, #32]
   14270:	f7ff fe02 	bl	13e78 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hfdc04c931b4d8a66E>
   14274:	f7ff fe18 	bl	13ea8 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hddf4425cdc540121E>
   14278:	9907      	ldr	r1, [sp, #28]
   1427a:	6008      	str	r0, [r1, #0]
   1427c:	980a      	ldr	r0, [sp, #40]	; 0x28
   1427e:	9009      	str	r0, [sp, #36]	; 0x24
   14280:	e00d      	b.n	1429e <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9c8db2e9c9694c09E+0xa8>
   14282:	9807      	ldr	r0, [sp, #28]
   14284:	6840      	ldr	r0, [r0, #4]
   14286:	9908      	ldr	r1, [sp, #32]
   14288:	4249      	negs	r1, r1
   1428a:	f7ff fe19 	bl	13ec0 <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17hbccadf1346c9eb57E>
   1428e:	9907      	ldr	r1, [sp, #28]
   14290:	6048      	str	r0, [r1, #4]
   14292:	9807      	ldr	r0, [sp, #28]
   14294:	6800      	ldr	r0, [r0, #0]
   14296:	f7ff fe0e 	bl	13eb6 <_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h87bc43ad826ab7a0E>
   1429a:	9009      	str	r0, [sp, #36]	; 0x24
   1429c:	e7ff      	b.n	1429e <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9c8db2e9c9694c09E+0xa8>
   1429e:	9809      	ldr	r0, [sp, #36]	; 0x24
   142a0:	9000      	str	r0, [sp, #0]
   142a2:	e002      	b.n	142aa <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9c8db2e9c9694c09E+0xb4>
   142a4:	2000      	movs	r0, #0
   142a6:	9005      	str	r0, [sp, #20]
   142a8:	e002      	b.n	142b0 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9c8db2e9c9694c09E+0xba>
   142aa:	9800      	ldr	r0, [sp, #0]
   142ac:	9005      	str	r0, [sp, #20]
   142ae:	e7ff      	b.n	142b0 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9c8db2e9c9694c09E+0xba>
   142b0:	9805      	ldr	r0, [sp, #20]
   142b2:	b00c      	add	sp, #48	; 0x30
   142b4:	bd80      	pop	{r7, pc}

000142b6 <_ZN4core10intrinsics19copy_nonoverlapping17h6c37ccc604552341E>:
   142b6:	b580      	push	{r7, lr}
   142b8:	b086      	sub	sp, #24
   142ba:	9003      	str	r0, [sp, #12]
   142bc:	9104      	str	r1, [sp, #16]
   142be:	9205      	str	r2, [sp, #20]
   142c0:	2001      	movs	r0, #1
   142c2:	2800      	cmp	r0, #0
   142c4:	d117      	bne.n	142f6 <_ZN4core10intrinsics19copy_nonoverlapping17h6c37ccc604552341E+0x40>
   142c6:	e7ff      	b.n	142c8 <_ZN4core10intrinsics19copy_nonoverlapping17h6c37ccc604552341E+0x12>
   142c8:	9803      	ldr	r0, [sp, #12]
   142ca:	f000 f855 	bl	14378 <_ZN4core10intrinsics23is_aligned_and_not_null17h092cc9a98ec71aefE>
   142ce:	9002      	str	r0, [sp, #8]
   142d0:	e7ff      	b.n	142d2 <_ZN4core10intrinsics19copy_nonoverlapping17h6c37ccc604552341E+0x1c>
   142d2:	9802      	ldr	r0, [sp, #8]
   142d4:	07c1      	lsls	r1, r0, #31
   142d6:	2900      	cmp	r1, #0
   142d8:	d001      	beq.n	142de <_ZN4core10intrinsics19copy_nonoverlapping17h6c37ccc604552341E+0x28>
   142da:	e7ff      	b.n	142dc <_ZN4core10intrinsics19copy_nonoverlapping17h6c37ccc604552341E+0x26>
   142dc:	e00b      	b.n	142f6 <_ZN4core10intrinsics19copy_nonoverlapping17h6c37ccc604552341E+0x40>
   142de:	f24e 206c 	movw	r0, #57964	; 0xe26c
   142e2:	f2c0 0001 	movt	r0, #1
   142e6:	f24e 22e4 	movw	r2, #58084	; 0xe2e4
   142ea:	f2c0 0201 	movt	r2, #1
   142ee:	212e      	movs	r1, #46	; 0x2e
   142f0:	f000 fc57 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   142f4:	defe      	udf	#254	; 0xfe
   142f6:	2001      	movs	r0, #1
   142f8:	2800      	cmp	r0, #0
   142fa:	d117      	bne.n	1432c <_ZN4core10intrinsics19copy_nonoverlapping17h6c37ccc604552341E+0x76>
   142fc:	e7ff      	b.n	142fe <_ZN4core10intrinsics19copy_nonoverlapping17h6c37ccc604552341E+0x48>
   142fe:	9804      	ldr	r0, [sp, #16]
   14300:	f000 f83a 	bl	14378 <_ZN4core10intrinsics23is_aligned_and_not_null17h092cc9a98ec71aefE>
   14304:	9001      	str	r0, [sp, #4]
   14306:	e7ff      	b.n	14308 <_ZN4core10intrinsics19copy_nonoverlapping17h6c37ccc604552341E+0x52>
   14308:	9801      	ldr	r0, [sp, #4]
   1430a:	07c1      	lsls	r1, r0, #31
   1430c:	2900      	cmp	r1, #0
   1430e:	d001      	beq.n	14314 <_ZN4core10intrinsics19copy_nonoverlapping17h6c37ccc604552341E+0x5e>
   14310:	e7ff      	b.n	14312 <_ZN4core10intrinsics19copy_nonoverlapping17h6c37ccc604552341E+0x5c>
   14312:	e00b      	b.n	1432c <_ZN4core10intrinsics19copy_nonoverlapping17h6c37ccc604552341E+0x76>
   14314:	f24e 20f4 	movw	r0, #58100	; 0xe2f4
   14318:	f2c0 0001 	movt	r0, #1
   1431c:	f24e 22e4 	movw	r2, #58084	; 0xe2e4
   14320:	f2c0 0201 	movt	r2, #1
   14324:	212c      	movs	r1, #44	; 0x2c
   14326:	f000 fc3c 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   1432a:	defe      	udf	#254	; 0xfe
   1432c:	2001      	movs	r0, #1
   1432e:	2800      	cmp	r0, #0
   14330:	d119      	bne.n	14366 <_ZN4core10intrinsics19copy_nonoverlapping17h6c37ccc604552341E+0xb0>
   14332:	e7ff      	b.n	14334 <_ZN4core10intrinsics19copy_nonoverlapping17h6c37ccc604552341E+0x7e>
   14334:	9803      	ldr	r0, [sp, #12]
   14336:	9904      	ldr	r1, [sp, #16]
   14338:	9a05      	ldr	r2, [sp, #20]
   1433a:	f000 f856 	bl	143ea <_ZN4core10intrinsics8overlaps17h7598687d5e04a320E>
   1433e:	9000      	str	r0, [sp, #0]
   14340:	e7ff      	b.n	14342 <_ZN4core10intrinsics19copy_nonoverlapping17h6c37ccc604552341E+0x8c>
   14342:	9800      	ldr	r0, [sp, #0]
   14344:	07c1      	lsls	r1, r0, #31
   14346:	2900      	cmp	r1, #0
   14348:	d101      	bne.n	1434e <_ZN4core10intrinsics19copy_nonoverlapping17h6c37ccc604552341E+0x98>
   1434a:	e7ff      	b.n	1434c <_ZN4core10intrinsics19copy_nonoverlapping17h6c37ccc604552341E+0x96>
   1434c:	e00b      	b.n	14366 <_ZN4core10intrinsics19copy_nonoverlapping17h6c37ccc604552341E+0xb0>
   1434e:	f24e 3020 	movw	r0, #58144	; 0xe320
   14352:	f2c0 0001 	movt	r0, #1
   14356:	f24e 22e4 	movw	r2, #58084	; 0xe2e4
   1435a:	f2c0 0201 	movt	r2, #1
   1435e:	2125      	movs	r1, #37	; 0x25
   14360:	f000 fc1f 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   14364:	defe      	udf	#254	; 0xfe
   14366:	9903      	ldr	r1, [sp, #12]
   14368:	9804      	ldr	r0, [sp, #16]
   1436a:	9a05      	ldr	r2, [sp, #20]
   1436c:	0052      	lsls	r2, r2, #1
   1436e:	f006 fdbb 	bl	1aee8 <__aeabi_memcpy>
   14372:	e7ff      	b.n	14374 <_ZN4core10intrinsics19copy_nonoverlapping17h6c37ccc604552341E+0xbe>
   14374:	b006      	add	sp, #24
   14376:	bd80      	pop	{r7, pc}

00014378 <_ZN4core10intrinsics23is_aligned_and_not_null17h092cc9a98ec71aefE>:
   14378:	b580      	push	{r7, lr}
   1437a:	b086      	sub	sp, #24
   1437c:	9003      	str	r0, [sp, #12]
   1437e:	9803      	ldr	r0, [sp, #12]
   14380:	f7fe fe1d 	bl	12fbe <_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h9c1881d8c7d72ca4E>
   14384:	9002      	str	r0, [sp, #8]
   14386:	e012      	b.n	143ae <_ZN4core10intrinsics23is_aligned_and_not_null17h092cc9a98ec71aefE+0x36>
   14388:	2001      	movs	r0, #1
   1438a:	f88d 0013 	strb.w	r0, [sp, #19]
   1438e:	e00a      	b.n	143a6 <_ZN4core10intrinsics23is_aligned_and_not_null17h092cc9a98ec71aefE+0x2e>
   14390:	2000      	movs	r0, #0
   14392:	f88d 0013 	strb.w	r0, [sp, #19]
   14396:	e006      	b.n	143a6 <_ZN4core10intrinsics23is_aligned_and_not_null17h092cc9a98ec71aefE+0x2e>
   14398:	9803      	ldr	r0, [sp, #12]
   1439a:	2102      	movs	r1, #2
   1439c:	9105      	str	r1, [sp, #20]
   1439e:	9905      	ldr	r1, [sp, #20]
   143a0:	9001      	str	r0, [sp, #4]
   143a2:	9100      	str	r1, [sp, #0]
   143a4:	e008      	b.n	143b8 <_ZN4core10intrinsics23is_aligned_and_not_null17h092cc9a98ec71aefE+0x40>
   143a6:	f89d 0013 	ldrb.w	r0, [sp, #19]
   143aa:	b006      	add	sp, #24
   143ac:	bd80      	pop	{r7, pc}
   143ae:	9802      	ldr	r0, [sp, #8]
   143b0:	07c1      	lsls	r1, r0, #31
   143b2:	2900      	cmp	r1, #0
   143b4:	d0f0      	beq.n	14398 <_ZN4core10intrinsics23is_aligned_and_not_null17h092cc9a98ec71aefE+0x20>
   143b6:	e7eb      	b.n	14390 <_ZN4core10intrinsics23is_aligned_and_not_null17h092cc9a98ec71aefE+0x18>
   143b8:	9800      	ldr	r0, [sp, #0]
   143ba:	2800      	cmp	r0, #0
   143bc:	d009      	beq.n	143d2 <_ZN4core10intrinsics23is_aligned_and_not_null17h092cc9a98ec71aefE+0x5a>
   143be:	e7ff      	b.n	143c0 <_ZN4core10intrinsics23is_aligned_and_not_null17h092cc9a98ec71aefE+0x48>
   143c0:	9801      	ldr	r0, [sp, #4]
   143c2:	9900      	ldr	r1, [sp, #0]
   143c4:	fbb0 f2f1 	udiv	r2, r0, r1
   143c8:	fb02 0211 	mls	r2, r2, r1, r0
   143cc:	2a00      	cmp	r2, #0
   143ce:	d0db      	beq.n	14388 <_ZN4core10intrinsics23is_aligned_and_not_null17h092cc9a98ec71aefE+0x10>
   143d0:	e7de      	b.n	14390 <_ZN4core10intrinsics23is_aligned_and_not_null17h092cc9a98ec71aefE+0x18>
   143d2:	f24e 30a0 	movw	r0, #58272	; 0xe3a0
   143d6:	f2c0 0001 	movt	r0, #1
   143da:	f24e 3290 	movw	r2, #58256	; 0xe390
   143de:	f2c0 0201 	movt	r2, #1
   143e2:	2139      	movs	r1, #57	; 0x39
   143e4:	f000 fbdd 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   143e8:	defe      	udf	#254	; 0xfe

000143ea <_ZN4core10intrinsics8overlaps17h7598687d5e04a320E>:
   143ea:	b580      	push	{r7, lr}
   143ec:	b08c      	sub	sp, #48	; 0x30
   143ee:	9004      	str	r0, [sp, #16]
   143f0:	9105      	str	r1, [sp, #20]
   143f2:	9206      	str	r2, [sp, #24]
   143f4:	9804      	ldr	r0, [sp, #16]
   143f6:	9007      	str	r0, [sp, #28]
   143f8:	9805      	ldr	r0, [sp, #20]
   143fa:	9008      	str	r0, [sp, #32]
   143fc:	2002      	movs	r0, #2
   143fe:	900b      	str	r0, [sp, #44]	; 0x2c
   14400:	980b      	ldr	r0, [sp, #44]	; 0x2c
   14402:	9003      	str	r0, [sp, #12]
   14404:	e7ff      	b.n	14406 <_ZN4core10intrinsics8overlaps17h7598687d5e04a320E+0x1c>
   14406:	9906      	ldr	r1, [sp, #24]
   14408:	9803      	ldr	r0, [sp, #12]
   1440a:	f7fd ff49 	bl	122a0 <_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h02a1c8bc393706ceE>
   1440e:	9002      	str	r0, [sp, #8]
   14410:	9101      	str	r1, [sp, #4]
   14412:	e7ff      	b.n	14414 <_ZN4core10intrinsics8overlaps17h7598687d5e04a320E+0x2a>
   14414:	f24e 32dc 	movw	r2, #58332	; 0xe3dc
   14418:	f2c0 0201 	movt	r2, #1
   1441c:	9802      	ldr	r0, [sp, #8]
   1441e:	9901      	ldr	r1, [sp, #4]
   14420:	f7f6 fcab 	bl	ad7a <_ZN4core6option15Option$LT$T$GT$6unwrap17h255bcb8f00b38aa5E>
   14424:	9009      	str	r0, [sp, #36]	; 0x24
   14426:	e7ff      	b.n	14428 <_ZN4core10intrinsics8overlaps17h7598687d5e04a320E+0x3e>
   14428:	9807      	ldr	r0, [sp, #28]
   1442a:	9908      	ldr	r1, [sp, #32]
   1442c:	4288      	cmp	r0, r1
   1442e:	d805      	bhi.n	1443c <_ZN4core10intrinsics8overlaps17h7598687d5e04a320E+0x52>
   14430:	e7ff      	b.n	14432 <_ZN4core10intrinsics8overlaps17h7598687d5e04a320E+0x48>
   14432:	9808      	ldr	r0, [sp, #32]
   14434:	9907      	ldr	r1, [sp, #28]
   14436:	1a40      	subs	r0, r0, r1
   14438:	900a      	str	r0, [sp, #40]	; 0x28
   1443a:	e004      	b.n	14446 <_ZN4core10intrinsics8overlaps17h7598687d5e04a320E+0x5c>
   1443c:	9807      	ldr	r0, [sp, #28]
   1443e:	9908      	ldr	r1, [sp, #32]
   14440:	1a40      	subs	r0, r0, r1
   14442:	900a      	str	r0, [sp, #40]	; 0x28
   14444:	e7ff      	b.n	14446 <_ZN4core10intrinsics8overlaps17h7598687d5e04a320E+0x5c>
   14446:	9809      	ldr	r0, [sp, #36]	; 0x24
   14448:	990a      	ldr	r1, [sp, #40]	; 0x28
   1444a:	2200      	movs	r2, #0
   1444c:	4288      	cmp	r0, r1
   1444e:	bf88      	it	hi
   14450:	2201      	movhi	r2, #1
   14452:	4610      	mov	r0, r2
   14454:	b00c      	add	sp, #48	; 0x30
   14456:	bd80      	pop	{r7, pc}

00014458 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h028b6b859f57cf6fE>:
    fn to_usize() -> usize {
   14458:	b580      	push	{r7, lr}
   1445a:	b084      	sub	sp, #16
        usize::from(B::to_u8()) | U::to_usize() << 1
   1445c:	f000 fa88 	bl	14970 <_ZN64_$LT$typenum..bit..B0$u20$as$u20$typenum..marker_traits..Bit$GT$5to_u817h83f5bc3d5e19564cE>
   14460:	9003      	str	r0, [sp, #12]
   14462:	e7ff      	b.n	14464 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h028b6b859f57cf6fE+0xc>
   14464:	9803      	ldr	r0, [sp, #12]
   14466:	f000 fa87 	bl	14978 <_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17he06d1fcd7b341624E>
   1446a:	9002      	str	r0, [sp, #8]
   1446c:	e7ff      	b.n	1446e <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h028b6b859f57cf6fE+0x16>
   1446e:	f000 f86b 	bl	14548 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h967898b6b7c42b0dE>
   14472:	9001      	str	r0, [sp, #4]
   14474:	e7ff      	b.n	14476 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h028b6b859f57cf6fE+0x1e>
   14476:	9801      	ldr	r0, [sp, #4]
   14478:	0041      	lsls	r1, r0, #1
   1447a:	9100      	str	r1, [sp, #0]
   1447c:	e7ff      	b.n	1447e <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h028b6b859f57cf6fE+0x26>
   1447e:	9802      	ldr	r0, [sp, #8]
   14480:	9900      	ldr	r1, [sp, #0]
   14482:	4308      	orrs	r0, r1
    }
   14484:	b004      	add	sp, #16
   14486:	bd80      	pop	{r7, pc}

00014488 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h2c117e562d1c7762E>:
    fn to_usize() -> usize {
   14488:	b580      	push	{r7, lr}
   1448a:	b084      	sub	sp, #16
        usize::from(B::to_u8()) | U::to_usize() << 1
   1448c:	f000 fa72 	bl	14974 <_ZN64_$LT$typenum..bit..B1$u20$as$u20$typenum..marker_traits..Bit$GT$5to_u817h1ff049713abe6e29E>
   14490:	9003      	str	r0, [sp, #12]
   14492:	e7ff      	b.n	14494 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h2c117e562d1c7762E+0xc>
   14494:	9803      	ldr	r0, [sp, #12]
   14496:	f000 fa6f 	bl	14978 <_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17he06d1fcd7b341624E>
   1449a:	9002      	str	r0, [sp, #8]
   1449c:	e7ff      	b.n	1449e <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h2c117e562d1c7762E+0x16>
   1449e:	f7ff fbcb 	bl	13c38 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h06f40786ef79ca88E>
   144a2:	9001      	str	r0, [sp, #4]
   144a4:	e7ff      	b.n	144a6 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h2c117e562d1c7762E+0x1e>
   144a6:	9801      	ldr	r0, [sp, #4]
   144a8:	0041      	lsls	r1, r0, #1
   144aa:	9100      	str	r1, [sp, #0]
   144ac:	e7ff      	b.n	144ae <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h2c117e562d1c7762E+0x26>
   144ae:	9802      	ldr	r0, [sp, #8]
   144b0:	9900      	ldr	r1, [sp, #0]
   144b2:	4308      	orrs	r0, r1
    }
   144b4:	b004      	add	sp, #16
   144b6:	bd80      	pop	{r7, pc}

000144b8 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h3b394a0cab6101e2E>:
    fn to_usize() -> usize {
   144b8:	b580      	push	{r7, lr}
   144ba:	b084      	sub	sp, #16
        usize::from(B::to_u8()) | U::to_usize() << 1
   144bc:	f000 fa5a 	bl	14974 <_ZN64_$LT$typenum..bit..B1$u20$as$u20$typenum..marker_traits..Bit$GT$5to_u817h1ff049713abe6e29E>
   144c0:	9003      	str	r0, [sp, #12]
   144c2:	e7ff      	b.n	144c4 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h3b394a0cab6101e2E+0xc>
   144c4:	9803      	ldr	r0, [sp, #12]
   144c6:	f000 fa57 	bl	14978 <_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17he06d1fcd7b341624E>
   144ca:	9002      	str	r0, [sp, #8]
   144cc:	e7ff      	b.n	144ce <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h3b394a0cab6101e2E+0x16>
   144ce:	f7ff ffc3 	bl	14458 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h028b6b859f57cf6fE>
   144d2:	9001      	str	r0, [sp, #4]
   144d4:	e7ff      	b.n	144d6 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h3b394a0cab6101e2E+0x1e>
   144d6:	9801      	ldr	r0, [sp, #4]
   144d8:	0041      	lsls	r1, r0, #1
   144da:	9100      	str	r1, [sp, #0]
   144dc:	e7ff      	b.n	144de <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h3b394a0cab6101e2E+0x26>
   144de:	9802      	ldr	r0, [sp, #8]
   144e0:	9900      	ldr	r1, [sp, #0]
   144e2:	4308      	orrs	r0, r1
    }
   144e4:	b004      	add	sp, #16
   144e6:	bd80      	pop	{r7, pc}

000144e8 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h560ecc478561b89bE>:
    fn to_usize() -> usize {
   144e8:	b580      	push	{r7, lr}
   144ea:	b084      	sub	sp, #16
        usize::from(B::to_u8()) | U::to_usize() << 1
   144ec:	f000 fa40 	bl	14970 <_ZN64_$LT$typenum..bit..B0$u20$as$u20$typenum..marker_traits..Bit$GT$5to_u817h83f5bc3d5e19564cE>
   144f0:	9003      	str	r0, [sp, #12]
   144f2:	e7ff      	b.n	144f4 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h560ecc478561b89bE+0xc>
   144f4:	9803      	ldr	r0, [sp, #12]
   144f6:	f000 fa3f 	bl	14978 <_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17he06d1fcd7b341624E>
   144fa:	9002      	str	r0, [sp, #8]
   144fc:	e7ff      	b.n	144fe <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h560ecc478561b89bE+0x16>
   144fe:	f000 f80b 	bl	14518 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h8d0b5f40d3d6b738E>
   14502:	9001      	str	r0, [sp, #4]
   14504:	e7ff      	b.n	14506 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h560ecc478561b89bE+0x1e>
   14506:	9801      	ldr	r0, [sp, #4]
   14508:	0041      	lsls	r1, r0, #1
   1450a:	9100      	str	r1, [sp, #0]
   1450c:	e7ff      	b.n	1450e <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h560ecc478561b89bE+0x26>
   1450e:	9802      	ldr	r0, [sp, #8]
   14510:	9900      	ldr	r1, [sp, #0]
   14512:	4308      	orrs	r0, r1
    }
   14514:	b004      	add	sp, #16
   14516:	bd80      	pop	{r7, pc}

00014518 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h8d0b5f40d3d6b738E>:
    fn to_usize() -> usize {
   14518:	b580      	push	{r7, lr}
   1451a:	b084      	sub	sp, #16
        usize::from(B::to_u8()) | U::to_usize() << 1
   1451c:	f000 fa28 	bl	14970 <_ZN64_$LT$typenum..bit..B0$u20$as$u20$typenum..marker_traits..Bit$GT$5to_u817h83f5bc3d5e19564cE>
   14520:	9003      	str	r0, [sp, #12]
   14522:	e7ff      	b.n	14524 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h8d0b5f40d3d6b738E+0xc>
   14524:	9803      	ldr	r0, [sp, #12]
   14526:	f000 fa27 	bl	14978 <_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17he06d1fcd7b341624E>
   1452a:	9002      	str	r0, [sp, #8]
   1452c:	e7ff      	b.n	1452e <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h8d0b5f40d3d6b738E+0x16>
   1452e:	f7ff ffc3 	bl	144b8 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h3b394a0cab6101e2E>
   14532:	9001      	str	r0, [sp, #4]
   14534:	e7ff      	b.n	14536 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h8d0b5f40d3d6b738E+0x1e>
   14536:	9801      	ldr	r0, [sp, #4]
   14538:	0041      	lsls	r1, r0, #1
   1453a:	9100      	str	r1, [sp, #0]
   1453c:	e7ff      	b.n	1453e <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h8d0b5f40d3d6b738E+0x26>
   1453e:	9802      	ldr	r0, [sp, #8]
   14540:	9900      	ldr	r1, [sp, #0]
   14542:	4308      	orrs	r0, r1
    }
   14544:	b004      	add	sp, #16
   14546:	bd80      	pop	{r7, pc}

00014548 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h967898b6b7c42b0dE>:
    fn to_usize() -> usize {
   14548:	b580      	push	{r7, lr}
   1454a:	b084      	sub	sp, #16
        usize::from(B::to_u8()) | U::to_usize() << 1
   1454c:	f000 fa10 	bl	14970 <_ZN64_$LT$typenum..bit..B0$u20$as$u20$typenum..marker_traits..Bit$GT$5to_u817h83f5bc3d5e19564cE>
   14550:	9003      	str	r0, [sp, #12]
   14552:	e7ff      	b.n	14554 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h967898b6b7c42b0dE+0xc>
   14554:	9803      	ldr	r0, [sp, #12]
   14556:	f000 fa0f 	bl	14978 <_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17he06d1fcd7b341624E>
   1455a:	9002      	str	r0, [sp, #8]
   1455c:	e7ff      	b.n	1455e <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h967898b6b7c42b0dE+0x16>
   1455e:	f7ff ff93 	bl	14488 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h2c117e562d1c7762E>
   14562:	9001      	str	r0, [sp, #4]
   14564:	e7ff      	b.n	14566 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h967898b6b7c42b0dE+0x1e>
   14566:	9801      	ldr	r0, [sp, #4]
   14568:	0041      	lsls	r1, r0, #1
   1456a:	9100      	str	r1, [sp, #0]
   1456c:	e7ff      	b.n	1456e <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h967898b6b7c42b0dE+0x26>
   1456e:	9802      	ldr	r0, [sp, #8]
   14570:	9900      	ldr	r1, [sp, #0]
   14572:	4308      	orrs	r0, r1
    }
   14574:	b004      	add	sp, #16
   14576:	bd80      	pop	{r7, pc}

00014578 <_ZN64_$LT$typenum..bit..B0$u20$as$u20$typenum..marker_traits..Bit$GT$5to_u817h9f54ebcf7805587aE>:
impl Bit for B0 {
    const U8: u8 = 0;
    const BOOL: bool = false;

    #[inline]
    fn to_u8() -> u8 {
   14578:	2000      	movs	r0, #0
        0
    }
   1457a:	4770      	bx	lr

0001457c <_ZN64_$LT$typenum..bit..B1$u20$as$u20$typenum..marker_traits..Bit$GT$5to_u817h206eb3d5ce0562b8E>:
impl Bit for B1 {
    const U8: u8 = 1;
    const BOOL: bool = true;

    #[inline]
    fn to_u8() -> u8 {
   1457c:	2001      	movs	r0, #1
        1
    }
   1457e:	4770      	bx	lr

00014580 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$12as_mut_slice17h7a70d44bfd847e68E>:
    pub(crate) fn as_mut_slice(&mut self) -> &mut [T] {
   14580:	b580      	push	{r7, lr}
   14582:	b086      	sub	sp, #24
   14584:	9003      	str	r0, [sp, #12]
        unsafe { slice::from_raw_parts_mut(self.buffer.as_mut_ptr() as *mut T, self.len) }
   14586:	9803      	ldr	r0, [sp, #12]
   14588:	3004      	adds	r0, #4
   1458a:	9004      	str	r0, [sp, #16]
   1458c:	9804      	ldr	r0, [sp, #16]
   1458e:	9005      	str	r0, [sp, #20]
   14590:	9805      	ldr	r0, [sp, #20]
   14592:	9002      	str	r0, [sp, #8]
   14594:	e7ff      	b.n	14596 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$12as_mut_slice17h7a70d44bfd847e68E+0x16>
   14596:	9803      	ldr	r0, [sp, #12]
   14598:	6801      	ldr	r1, [r0, #0]
   1459a:	9802      	ldr	r0, [sp, #8]
   1459c:	f7fb fdf9 	bl	10192 <_ZN4core5slice18from_raw_parts_mut17hd2635851eae679a9E>
   145a0:	9001      	str	r0, [sp, #4]
   145a2:	9100      	str	r1, [sp, #0]
   145a4:	e7ff      	b.n	145a6 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$12as_mut_slice17h7a70d44bfd847e68E+0x26>
    }
   145a6:	9801      	ldr	r0, [sp, #4]
   145a8:	9900      	ldr	r1, [sp, #0]
   145aa:	b006      	add	sp, #24
   145ac:	bd80      	pop	{r7, pc}

000145ae <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$12as_mut_slice17hb644b8a5c9694ef1E>:
    pub(crate) fn as_mut_slice(&mut self) -> &mut [T] {
   145ae:	b580      	push	{r7, lr}
   145b0:	b086      	sub	sp, #24
   145b2:	9003      	str	r0, [sp, #12]
        unsafe { slice::from_raw_parts_mut(self.buffer.as_mut_ptr() as *mut T, self.len) }
   145b4:	9803      	ldr	r0, [sp, #12]
   145b6:	3004      	adds	r0, #4
   145b8:	9004      	str	r0, [sp, #16]
   145ba:	9804      	ldr	r0, [sp, #16]
   145bc:	9005      	str	r0, [sp, #20]
   145be:	9805      	ldr	r0, [sp, #20]
   145c0:	9002      	str	r0, [sp, #8]
   145c2:	e7ff      	b.n	145c4 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$12as_mut_slice17hb644b8a5c9694ef1E+0x16>
   145c4:	9803      	ldr	r0, [sp, #12]
   145c6:	6801      	ldr	r1, [r0, #0]
   145c8:	9802      	ldr	r0, [sp, #8]
   145ca:	f7fb fde2 	bl	10192 <_ZN4core5slice18from_raw_parts_mut17hd2635851eae679a9E>
   145ce:	9001      	str	r0, [sp, #4]
   145d0:	9100      	str	r1, [sp, #0]
   145d2:	e7ff      	b.n	145d4 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$12as_mut_slice17hb644b8a5c9694ef1E+0x26>
    }
   145d4:	9801      	ldr	r0, [sp, #4]
   145d6:	9900      	ldr	r1, [sp, #0]
   145d8:	b006      	add	sp, #24
   145da:	bd80      	pop	{r7, pc}

000145dc <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17h26656857a0566bbcE>:
    pub(crate) unsafe fn push_unchecked(&mut self, item: T) {
   145dc:	b580      	push	{r7, lr}
   145de:	b088      	sub	sp, #32
   145e0:	460a      	mov	r2, r1
   145e2:	9004      	str	r0, [sp, #16]
   145e4:	f88d 1017 	strb.w	r1, [sp, #23]
        (self.buffer.as_mut_ptr() as *mut T)
   145e8:	9804      	ldr	r0, [sp, #16]
   145ea:	3004      	adds	r0, #4
   145ec:	9006      	str	r0, [sp, #24]
   145ee:	9806      	ldr	r0, [sp, #24]
   145f0:	9007      	str	r0, [sp, #28]
   145f2:	9807      	ldr	r0, [sp, #28]
   145f4:	9003      	str	r0, [sp, #12]
   145f6:	e7ff      	b.n	145f8 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17h26656857a0566bbcE+0x1c>
            .add(self.len)
   145f8:	9804      	ldr	r0, [sp, #16]
   145fa:	6801      	ldr	r1, [r0, #0]
        (self.buffer.as_mut_ptr() as *mut T)
   145fc:	9803      	ldr	r0, [sp, #12]
   145fe:	f7f5 ff96 	bl	a52e <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hd0429ebf735219dbE>
   14602:	9002      	str	r0, [sp, #8]
   14604:	e7ff      	b.n	14606 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17h26656857a0566bbcE+0x2a>
   14606:	f89d 1017 	ldrb.w	r1, [sp, #23]
   1460a:	9802      	ldr	r0, [sp, #8]
   1460c:	f7ff faa8 	bl	13b60 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$5write17h4246feee8b3787a8E>
   14610:	e7ff      	b.n	14612 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17h26656857a0566bbcE+0x36>
        self.len += 1;
   14612:	9804      	ldr	r0, [sp, #16]
   14614:	6800      	ldr	r0, [r0, #0]
   14616:	1c41      	adds	r1, r0, #1
   14618:	460a      	mov	r2, r1
   1461a:	4281      	cmp	r1, r0
   1461c:	9201      	str	r2, [sp, #4]
   1461e:	d305      	bcc.n	1462c <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17h26656857a0566bbcE+0x50>
   14620:	e7ff      	b.n	14622 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17h26656857a0566bbcE+0x46>
   14622:	9804      	ldr	r0, [sp, #16]
   14624:	9901      	ldr	r1, [sp, #4]
   14626:	6001      	str	r1, [r0, #0]
    }
   14628:	b008      	add	sp, #32
   1462a:	bd80      	pop	{r7, pc}
        self.len += 1;
   1462c:	f24e 4060 	movw	r0, #58464	; 0xe460
   14630:	f2c0 0001 	movt	r0, #1
   14634:	f24e 4244 	movw	r2, #58436	; 0xe444
   14638:	f2c0 0201 	movt	r2, #1
   1463c:	211c      	movs	r1, #28
   1463e:	f000 fab0 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   14642:	defe      	udf	#254	; 0xfe

00014644 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17h9b4cc1eaaf69cbc4E>:
    pub(crate) unsafe fn push_unchecked(&mut self, item: T) {
   14644:	b580      	push	{r7, lr}
   14646:	b088      	sub	sp, #32
   14648:	460a      	mov	r2, r1
   1464a:	9004      	str	r0, [sp, #16]
   1464c:	f88d 1017 	strb.w	r1, [sp, #23]
        (self.buffer.as_mut_ptr() as *mut T)
   14650:	9804      	ldr	r0, [sp, #16]
   14652:	3004      	adds	r0, #4
   14654:	9006      	str	r0, [sp, #24]
   14656:	9806      	ldr	r0, [sp, #24]
   14658:	9007      	str	r0, [sp, #28]
   1465a:	9807      	ldr	r0, [sp, #28]
   1465c:	9003      	str	r0, [sp, #12]
   1465e:	e7ff      	b.n	14660 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17h9b4cc1eaaf69cbc4E+0x1c>
            .add(self.len)
   14660:	9804      	ldr	r0, [sp, #16]
   14662:	6801      	ldr	r1, [r0, #0]
        (self.buffer.as_mut_ptr() as *mut T)
   14664:	9803      	ldr	r0, [sp, #12]
   14666:	f7f5 ff62 	bl	a52e <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hd0429ebf735219dbE>
   1466a:	9002      	str	r0, [sp, #8]
   1466c:	e7ff      	b.n	1466e <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17h9b4cc1eaaf69cbc4E+0x2a>
   1466e:	f89d 1017 	ldrb.w	r1, [sp, #23]
   14672:	9802      	ldr	r0, [sp, #8]
   14674:	f7ff fa74 	bl	13b60 <_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$5write17h4246feee8b3787a8E>
   14678:	e7ff      	b.n	1467a <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17h9b4cc1eaaf69cbc4E+0x36>
        self.len += 1;
   1467a:	9804      	ldr	r0, [sp, #16]
   1467c:	6800      	ldr	r0, [r0, #0]
   1467e:	1c41      	adds	r1, r0, #1
   14680:	460a      	mov	r2, r1
   14682:	4281      	cmp	r1, r0
   14684:	9201      	str	r2, [sp, #4]
   14686:	d305      	bcc.n	14694 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17h9b4cc1eaaf69cbc4E+0x50>
   14688:	e7ff      	b.n	1468a <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17h9b4cc1eaaf69cbc4E+0x46>
   1468a:	9804      	ldr	r0, [sp, #16]
   1468c:	9901      	ldr	r1, [sp, #4]
   1468e:	6001      	str	r1, [r0, #0]
    }
   14690:	b008      	add	sp, #32
   14692:	bd80      	pop	{r7, pc}
        self.len += 1;
   14694:	f24e 4060 	movw	r0, #58464	; 0xe460
   14698:	f2c0 0001 	movt	r0, #1
   1469c:	f24e 4244 	movw	r2, #58436	; 0xe444
   146a0:	f2c0 0201 	movt	r2, #1
   146a4:	211c      	movs	r1, #28
   146a6:	f000 fa7c 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   146aa:	defe      	udf	#254	; 0xfe

000146ac <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h1f7d0b76fcd4eec8E>:
    pub(crate) fn extend_from_slice(&mut self, other: &[T]) -> Result<(), ()>
   146ac:	b580      	push	{r7, lr}
   146ae:	b094      	sub	sp, #80	; 0x50
   146b0:	9008      	str	r0, [sp, #32]
   146b2:	9109      	str	r1, [sp, #36]	; 0x24
   146b4:	920a      	str	r2, [sp, #40]	; 0x28
        if self.len + other.len() > self.capacity() {
   146b6:	9808      	ldr	r0, [sp, #32]
   146b8:	6800      	ldr	r0, [r0, #0]
   146ba:	9909      	ldr	r1, [sp, #36]	; 0x24
   146bc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   146be:	9007      	str	r0, [sp, #28]
   146c0:	4608      	mov	r0, r1
   146c2:	4611      	mov	r1, r2
   146c4:	f7f6 fb49 	bl	ad5a <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h4a5bc0e612dcb4a6E>
   146c8:	9006      	str	r0, [sp, #24]
   146ca:	e7ff      	b.n	146cc <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h1f7d0b76fcd4eec8E+0x20>
   146cc:	9807      	ldr	r0, [sp, #28]
   146ce:	9906      	ldr	r1, [sp, #24]
   146d0:	1842      	adds	r2, r0, r1
   146d2:	4613      	mov	r3, r2
   146d4:	4282      	cmp	r2, r0
   146d6:	9305      	str	r3, [sp, #20]
   146d8:	d345      	bcc.n	14766 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h1f7d0b76fcd4eec8E+0xba>
   146da:	e7ff      	b.n	146dc <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h1f7d0b76fcd4eec8E+0x30>
   146dc:	9808      	ldr	r0, [sp, #32]
   146de:	f000 f8c5 	bl	1486c <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8capacity17hf1256bee4c402771E>
   146e2:	9004      	str	r0, [sp, #16]
   146e4:	e7ff      	b.n	146e6 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h1f7d0b76fcd4eec8E+0x3a>
   146e6:	9805      	ldr	r0, [sp, #20]
   146e8:	9904      	ldr	r1, [sp, #16]
   146ea:	4288      	cmp	r0, r1
   146ec:	d807      	bhi.n	146fe <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h1f7d0b76fcd4eec8E+0x52>
   146ee:	e7ff      	b.n	146f0 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h1f7d0b76fcd4eec8E+0x44>
            for elem in other {
   146f0:	9809      	ldr	r0, [sp, #36]	; 0x24
   146f2:	990a      	ldr	r1, [sp, #40]	; 0x28
   146f4:	f7fb fde1 	bl	102ba <_ZN4core5slice87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17hff816b0e36a79e61E>
   146f8:	9003      	str	r0, [sp, #12]
   146fa:	9102      	str	r1, [sp, #8]
   146fc:	e003      	b.n	14706 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h1f7d0b76fcd4eec8E+0x5a>
   146fe:	2001      	movs	r0, #1
            Err(())
   14700:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
        if self.len + other.len() > self.capacity() {
   14704:	e02b      	b.n	1475e <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h1f7d0b76fcd4eec8E+0xb2>
            for elem in other {
   14706:	9803      	ldr	r0, [sp, #12]
   14708:	900d      	str	r0, [sp, #52]	; 0x34
   1470a:	9902      	ldr	r1, [sp, #8]
   1470c:	910e      	str	r1, [sp, #56]	; 0x38
   1470e:	e7ff      	b.n	14710 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h1f7d0b76fcd4eec8E+0x64>
   14710:	a80d      	add	r0, sp, #52	; 0x34
   14712:	f7f6 f815 	bl	a740 <_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3fbae9ba036185a9E>
   14716:	9010      	str	r0, [sp, #64]	; 0x40
   14718:	e7ff      	b.n	1471a <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h1f7d0b76fcd4eec8E+0x6e>
   1471a:	9810      	ldr	r0, [sp, #64]	; 0x40
   1471c:	2800      	cmp	r0, #0
   1471e:	4601      	mov	r1, r0
   14720:	bf18      	it	ne
   14722:	2101      	movne	r1, #1
   14724:	2800      	cmp	r0, #0
   14726:	d001      	beq.n	1472c <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h1f7d0b76fcd4eec8E+0x80>
   14728:	e7ff      	b.n	1472a <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h1f7d0b76fcd4eec8E+0x7e>
   1472a:	e004      	b.n	14736 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h1f7d0b76fcd4eec8E+0x8a>
   1472c:	2000      	movs	r0, #0
            Ok(())
   1472e:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
        if self.len + other.len() > self.capacity() {
   14732:	e014      	b.n	1475e <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h1f7d0b76fcd4eec8E+0xb2>
            for elem in other {
   14734:	defe      	udf	#254	; 0xfe
   14736:	9810      	ldr	r0, [sp, #64]	; 0x40
   14738:	9011      	str	r0, [sp, #68]	; 0x44
   1473a:	9811      	ldr	r0, [sp, #68]	; 0x44
   1473c:	900f      	str	r0, [sp, #60]	; 0x3c
   1473e:	980f      	ldr	r0, [sp, #60]	; 0x3c
   14740:	9012      	str	r0, [sp, #72]	; 0x48
                    self.push_unchecked(elem.clone());
   14742:	9808      	ldr	r0, [sp, #32]
   14744:	9912      	ldr	r1, [sp, #72]	; 0x48
   14746:	9001      	str	r0, [sp, #4]
   14748:	4608      	mov	r0, r1
   1474a:	f000 f91d 	bl	14988 <_ZN4core5clone5impls51_$LT$impl$u20$core..clone..Clone$u20$for$u20$u8$GT$5clone17ha9b310a840f5f5a4E>
   1474e:	9000      	str	r0, [sp, #0]
   14750:	e7ff      	b.n	14752 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h1f7d0b76fcd4eec8E+0xa6>
   14752:	9801      	ldr	r0, [sp, #4]
   14754:	9900      	ldr	r1, [sp, #0]
   14756:	f7ff ff75 	bl	14644 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17h9b4cc1eaaf69cbc4E>
   1475a:	e7ff      	b.n	1475c <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h1f7d0b76fcd4eec8E+0xb0>
            for elem in other {
   1475c:	e7d8      	b.n	14710 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$17extend_from_slice17h1f7d0b76fcd4eec8E+0x64>
    }
   1475e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
   14762:	b014      	add	sp, #80	; 0x50
   14764:	bd80      	pop	{r7, pc}
        if self.len + other.len() > self.capacity() {
   14766:	f24e 4060 	movw	r0, #58464	; 0xe460
   1476a:	f2c0 0001 	movt	r0, #1
   1476e:	f24e 427c 	movw	r2, #58492	; 0xe47c
   14772:	f2c0 0201 	movt	r2, #1
   14776:	211c      	movs	r1, #28
   14778:	f000 fa13 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   1477c:	defe      	udf	#254	; 0xfe

0001477e <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$4push17h1141aea5446b44ecE>:
    pub(crate) fn push(&mut self, item: T) -> Result<(), T> {
   1477e:	b580      	push	{r7, lr}
   14780:	b088      	sub	sp, #32
   14782:	460a      	mov	r2, r1
   14784:	9004      	str	r0, [sp, #16]
   14786:	f88d 1017 	strb.w	r1, [sp, #23]
        if self.len < self.capacity() {
   1478a:	9804      	ldr	r0, [sp, #16]
   1478c:	6801      	ldr	r1, [r0, #0]
   1478e:	9203      	str	r2, [sp, #12]
   14790:	9102      	str	r1, [sp, #8]
   14792:	f000 f861 	bl	14858 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8capacity17hdfd7d7694fef851eE>
   14796:	9001      	str	r0, [sp, #4]
   14798:	e7ff      	b.n	1479a <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$4push17h1141aea5446b44ecE+0x1c>
   1479a:	9802      	ldr	r0, [sp, #8]
   1479c:	9901      	ldr	r1, [sp, #4]
   1479e:	4288      	cmp	r0, r1
   147a0:	d308      	bcc.n	147b4 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$4push17h1141aea5446b44ecE+0x36>
   147a2:	e7ff      	b.n	147a4 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$4push17h1141aea5446b44ecE+0x26>
            Err(item)
   147a4:	f89d 0017 	ldrb.w	r0, [sp, #23]
   147a8:	f88d 0019 	strb.w	r0, [sp, #25]
   147ac:	2001      	movs	r0, #1
   147ae:	f88d 0018 	strb.w	r0, [sp, #24]
        if self.len < self.capacity() {
   147b2:	e009      	b.n	147c8 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$4push17h1141aea5446b44ecE+0x4a>
            unsafe { self.push_unchecked(item) }
   147b4:	9804      	ldr	r0, [sp, #16]
   147b6:	f89d 1017 	ldrb.w	r1, [sp, #23]
   147ba:	f7ff ff0f 	bl	145dc <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$14push_unchecked17h26656857a0566bbcE>
   147be:	e7ff      	b.n	147c0 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$4push17h1141aea5446b44ecE+0x42>
   147c0:	2000      	movs	r0, #0
            Ok(())
   147c2:	f88d 0018 	strb.w	r0, [sp, #24]
        if self.len < self.capacity() {
   147c6:	e7ff      	b.n	147c8 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$4push17h1141aea5446b44ecE+0x4a>
    }
   147c8:	f89d 0018 	ldrb.w	r0, [sp, #24]
   147cc:	f89d 1019 	ldrb.w	r1, [sp, #25]
   147d0:	b008      	add	sp, #32
   147d2:	bd80      	pop	{r7, pc}

000147d4 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clear17h724c31e668914486E>:
    pub(crate) fn clear(&mut self) {
   147d4:	b580      	push	{r7, lr}
   147d6:	b082      	sub	sp, #8
   147d8:	9001      	str	r0, [sp, #4]
        self.truncate(0);
   147da:	9801      	ldr	r0, [sp, #4]
   147dc:	2100      	movs	r1, #0
   147de:	f000 f886 	bl	148ee <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17hf03f9c80d20767abE>
   147e2:	e7ff      	b.n	147e4 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clear17h724c31e668914486E+0x10>
    }
   147e4:	b002      	add	sp, #8
   147e6:	bd80      	pop	{r7, pc}

000147e8 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clear17h8b136725d3404812E>:
    pub(crate) fn clear(&mut self) {
   147e8:	b580      	push	{r7, lr}
   147ea:	b082      	sub	sp, #8
   147ec:	9001      	str	r0, [sp, #4]
        self.truncate(0);
   147ee:	9801      	ldr	r0, [sp, #4]
   147f0:	2100      	movs	r1, #0
   147f2:	f000 f845 	bl	14880 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17h2f43da7fb83d7881E>
   147f6:	e7ff      	b.n	147f8 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$5clear17h8b136725d3404812E+0x10>
    }
   147f8:	b002      	add	sp, #8
   147fa:	bd80      	pop	{r7, pc}

000147fc <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8as_slice17hea35f4eb18510315E>:
    pub(crate) fn as_slice(&self) -> &[T] {
   147fc:	b580      	push	{r7, lr}
   147fe:	b086      	sub	sp, #24
   14800:	9003      	str	r0, [sp, #12]
        unsafe { slice::from_raw_parts(self.buffer.as_ptr() as *const T, self.len) }
   14802:	9803      	ldr	r0, [sp, #12]
   14804:	3004      	adds	r0, #4
   14806:	9004      	str	r0, [sp, #16]
   14808:	9804      	ldr	r0, [sp, #16]
   1480a:	9005      	str	r0, [sp, #20]
   1480c:	9805      	ldr	r0, [sp, #20]
   1480e:	9002      	str	r0, [sp, #8]
   14810:	e7ff      	b.n	14812 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8as_slice17hea35f4eb18510315E+0x16>
   14812:	9803      	ldr	r0, [sp, #12]
   14814:	6801      	ldr	r1, [r0, #0]
   14816:	9802      	ldr	r0, [sp, #8]
   14818:	f7f6 fc61 	bl	b0de <_ZN4core5slice14from_raw_parts17h6405d6dfab25f666E>
   1481c:	9001      	str	r0, [sp, #4]
   1481e:	9100      	str	r1, [sp, #0]
   14820:	e7ff      	b.n	14822 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8as_slice17hea35f4eb18510315E+0x26>
    }
   14822:	9801      	ldr	r0, [sp, #4]
   14824:	9900      	ldr	r1, [sp, #0]
   14826:	b006      	add	sp, #24
   14828:	bd80      	pop	{r7, pc}

0001482a <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8as_slice17hfbfd13bfb0e1955bE>:
    pub(crate) fn as_slice(&self) -> &[T] {
   1482a:	b580      	push	{r7, lr}
   1482c:	b086      	sub	sp, #24
   1482e:	9003      	str	r0, [sp, #12]
        unsafe { slice::from_raw_parts(self.buffer.as_ptr() as *const T, self.len) }
   14830:	9803      	ldr	r0, [sp, #12]
   14832:	3004      	adds	r0, #4
   14834:	9004      	str	r0, [sp, #16]
   14836:	9804      	ldr	r0, [sp, #16]
   14838:	9005      	str	r0, [sp, #20]
   1483a:	9805      	ldr	r0, [sp, #20]
   1483c:	9002      	str	r0, [sp, #8]
   1483e:	e7ff      	b.n	14840 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8as_slice17hfbfd13bfb0e1955bE+0x16>
   14840:	9803      	ldr	r0, [sp, #12]
   14842:	6801      	ldr	r1, [r0, #0]
   14844:	9802      	ldr	r0, [sp, #8]
   14846:	f7f6 fc4a 	bl	b0de <_ZN4core5slice14from_raw_parts17h6405d6dfab25f666E>
   1484a:	9001      	str	r0, [sp, #4]
   1484c:	9100      	str	r1, [sp, #0]
   1484e:	e7ff      	b.n	14850 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8as_slice17hfbfd13bfb0e1955bE+0x26>
    }
   14850:	9801      	ldr	r0, [sp, #4]
   14852:	9900      	ldr	r1, [sp, #0]
   14854:	b006      	add	sp, #24
   14856:	bd80      	pop	{r7, pc}

00014858 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8capacity17hdfd7d7694fef851eE>:
    pub(crate) fn capacity(&self) -> usize {
   14858:	b580      	push	{r7, lr}
   1485a:	b082      	sub	sp, #8
   1485c:	9001      	str	r0, [sp, #4]
        N::to_usize()
   1485e:	f7ff f9eb 	bl	13c38 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h06f40786ef79ca88E>
   14862:	9000      	str	r0, [sp, #0]
   14864:	e7ff      	b.n	14866 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8capacity17hdfd7d7694fef851eE+0xe>
    }
   14866:	9800      	ldr	r0, [sp, #0]
   14868:	b002      	add	sp, #8
   1486a:	bd80      	pop	{r7, pc}

0001486c <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8capacity17hf1256bee4c402771E>:
    pub(crate) fn capacity(&self) -> usize {
   1486c:	b580      	push	{r7, lr}
   1486e:	b082      	sub	sp, #8
   14870:	9001      	str	r0, [sp, #4]
        N::to_usize()
   14872:	f7ff fa41 	bl	13cf8 <_ZN85_$LT$typenum..uint..UInt$LT$U$C$B$GT$$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h5172e26c2722662fE>
   14876:	9000      	str	r0, [sp, #0]
   14878:	e7ff      	b.n	1487a <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8capacity17hf1256bee4c402771E+0xe>
    }
   1487a:	9800      	ldr	r0, [sp, #0]
   1487c:	b002      	add	sp, #8
   1487e:	bd80      	pop	{r7, pc}

00014880 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17h2f43da7fb83d7881E>:
    pub(crate) fn truncate(&mut self, len: usize) {
   14880:	b580      	push	{r7, lr}
   14882:	b088      	sub	sp, #32
   14884:	9004      	str	r0, [sp, #16]
   14886:	9105      	str	r1, [sp, #20]
   14888:	e7ff      	b.n	1488a <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17h2f43da7fb83d7881E+0xa>
            while len < self.len {
   1488a:	9805      	ldr	r0, [sp, #20]
   1488c:	9904      	ldr	r1, [sp, #16]
   1488e:	6809      	ldr	r1, [r1, #0]
   14890:	4288      	cmp	r0, r1
   14892:	d302      	bcc.n	1489a <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17h2f43da7fb83d7881E+0x1a>
   14894:	e7ff      	b.n	14896 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17h2f43da7fb83d7881E+0x16>
    }
   14896:	b008      	add	sp, #32
   14898:	bd80      	pop	{r7, pc}
                self.len -= 1;
   1489a:	9804      	ldr	r0, [sp, #16]
   1489c:	6800      	ldr	r0, [r0, #0]
   1489e:	1e41      	subs	r1, r0, #1
   148a0:	2801      	cmp	r0, #1
   148a2:	9103      	str	r1, [sp, #12]
   148a4:	d317      	bcc.n	148d6 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17h2f43da7fb83d7881E+0x56>
   148a6:	e7ff      	b.n	148a8 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17h2f43da7fb83d7881E+0x28>
   148a8:	9804      	ldr	r0, [sp, #16]
   148aa:	9903      	ldr	r1, [sp, #12]
   148ac:	6001      	str	r1, [r0, #0]
                let len = self.len;
   148ae:	9804      	ldr	r0, [sp, #16]
   148b0:	6800      	ldr	r0, [r0, #0]
   148b2:	9006      	str	r0, [sp, #24]
                ptr::drop_in_place(self.as_mut_slice().get_unchecked_mut(len));
   148b4:	9804      	ldr	r0, [sp, #16]
   148b6:	f7ff fe7a 	bl	145ae <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$12as_mut_slice17hb644b8a5c9694ef1E>
   148ba:	9002      	str	r0, [sp, #8]
   148bc:	9101      	str	r1, [sp, #4]
   148be:	e7ff      	b.n	148c0 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17h2f43da7fb83d7881E+0x40>
   148c0:	9a06      	ldr	r2, [sp, #24]
   148c2:	9802      	ldr	r0, [sp, #8]
   148c4:	9901      	ldr	r1, [sp, #4]
   148c6:	f7f6 fa39 	bl	ad3c <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h459978f2c2e84b39E>
   148ca:	9000      	str	r0, [sp, #0]
   148cc:	e7ff      	b.n	148ce <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17h2f43da7fb83d7881E+0x4e>
   148ce:	9800      	ldr	r0, [sp, #0]
   148d0:	9007      	str	r0, [sp, #28]
   148d2:	e7ff      	b.n	148d4 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17h2f43da7fb83d7881E+0x54>
            while len < self.len {
   148d4:	e7d9      	b.n	1488a <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17h2f43da7fb83d7881E+0xa>
                self.len -= 1;
   148d6:	f24e 40a0 	movw	r0, #58528	; 0xe4a0
   148da:	f2c0 0001 	movt	r0, #1
   148de:	f24e 428c 	movw	r2, #58508	; 0xe48c
   148e2:	f2c0 0201 	movt	r2, #1
   148e6:	2121      	movs	r1, #33	; 0x21
   148e8:	f000 f95b 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   148ec:	defe      	udf	#254	; 0xfe

000148ee <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17hf03f9c80d20767abE>:
    pub(crate) fn truncate(&mut self, len: usize) {
   148ee:	b580      	push	{r7, lr}
   148f0:	b088      	sub	sp, #32
   148f2:	9004      	str	r0, [sp, #16]
   148f4:	9105      	str	r1, [sp, #20]
   148f6:	e7ff      	b.n	148f8 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17hf03f9c80d20767abE+0xa>
            while len < self.len {
   148f8:	9805      	ldr	r0, [sp, #20]
   148fa:	9904      	ldr	r1, [sp, #16]
   148fc:	6809      	ldr	r1, [r1, #0]
   148fe:	4288      	cmp	r0, r1
   14900:	d302      	bcc.n	14908 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17hf03f9c80d20767abE+0x1a>
   14902:	e7ff      	b.n	14904 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17hf03f9c80d20767abE+0x16>
    }
   14904:	b008      	add	sp, #32
   14906:	bd80      	pop	{r7, pc}
                self.len -= 1;
   14908:	9804      	ldr	r0, [sp, #16]
   1490a:	6800      	ldr	r0, [r0, #0]
   1490c:	1e41      	subs	r1, r0, #1
   1490e:	2801      	cmp	r0, #1
   14910:	9103      	str	r1, [sp, #12]
   14912:	d317      	bcc.n	14944 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17hf03f9c80d20767abE+0x56>
   14914:	e7ff      	b.n	14916 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17hf03f9c80d20767abE+0x28>
   14916:	9804      	ldr	r0, [sp, #16]
   14918:	9903      	ldr	r1, [sp, #12]
   1491a:	6001      	str	r1, [r0, #0]
                let len = self.len;
   1491c:	9804      	ldr	r0, [sp, #16]
   1491e:	6800      	ldr	r0, [r0, #0]
   14920:	9006      	str	r0, [sp, #24]
                ptr::drop_in_place(self.as_mut_slice().get_unchecked_mut(len));
   14922:	9804      	ldr	r0, [sp, #16]
   14924:	f7ff fe2c 	bl	14580 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$12as_mut_slice17h7a70d44bfd847e68E>
   14928:	9002      	str	r0, [sp, #8]
   1492a:	9101      	str	r1, [sp, #4]
   1492c:	e7ff      	b.n	1492e <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17hf03f9c80d20767abE+0x40>
   1492e:	9a06      	ldr	r2, [sp, #24]
   14930:	9802      	ldr	r0, [sp, #8]
   14932:	9901      	ldr	r1, [sp, #4]
   14934:	f7f6 fa02 	bl	ad3c <_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h459978f2c2e84b39E>
   14938:	9000      	str	r0, [sp, #0]
   1493a:	e7ff      	b.n	1493c <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17hf03f9c80d20767abE+0x4e>
   1493c:	9800      	ldr	r0, [sp, #0]
   1493e:	9007      	str	r0, [sp, #28]
   14940:	e7ff      	b.n	14942 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17hf03f9c80d20767abE+0x54>
            while len < self.len {
   14942:	e7d9      	b.n	148f8 <_ZN8heapless3vec82_$LT$impl$u20$heapless..i..Vec$LT$generic_array..GenericArray$LT$T$C$N$GT$$GT$$GT$8truncate17hf03f9c80d20767abE+0xa>
                self.len -= 1;
   14944:	f24e 40a0 	movw	r0, #58528	; 0xe4a0
   14948:	f2c0 0001 	movt	r0, #1
   1494c:	f24e 428c 	movw	r2, #58508	; 0xe48c
   14950:	f2c0 0201 	movt	r2, #1
   14954:	2121      	movs	r1, #33	; 0x21
   14956:	f000 f924 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   1495a:	defe      	udf	#254	; 0xfe

0001495c <_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17h42518d20db38c567E>:
   1495c:	b081      	sub	sp, #4
   1495e:	4601      	mov	r1, r0
   14960:	f88d 0003 	strb.w	r0, [sp, #3]
   14964:	f89d 0003 	ldrb.w	r0, [sp, #3]
   14968:	b001      	add	sp, #4
   1496a:	4770      	bx	lr

0001496c <_ZN73_$LT$typenum..uint..UTerm$u20$as$u20$typenum..marker_traits..Unsigned$GT$8to_usize17h594c176a361f806bE>:
    fn to_usize() -> usize {
   1496c:	2000      	movs	r0, #0
    }
   1496e:	4770      	bx	lr

00014970 <_ZN64_$LT$typenum..bit..B0$u20$as$u20$typenum..marker_traits..Bit$GT$5to_u817h83f5bc3d5e19564cE>:
    fn to_u8() -> u8 {
   14970:	2000      	movs	r0, #0
    }
   14972:	4770      	bx	lr

00014974 <_ZN64_$LT$typenum..bit..B1$u20$as$u20$typenum..marker_traits..Bit$GT$5to_u817h1ff049713abe6e29E>:
    fn to_u8() -> u8 {
   14974:	2001      	movs	r0, #1
    }
   14976:	4770      	bx	lr

00014978 <_ZN4core7convert3num65_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$usize$GT$4from17he06d1fcd7b341624E>:
   14978:	b081      	sub	sp, #4
   1497a:	4601      	mov	r1, r0
   1497c:	f88d 0003 	strb.w	r0, [sp, #3]
   14980:	f89d 0003 	ldrb.w	r0, [sp, #3]
   14984:	b001      	add	sp, #4
   14986:	4770      	bx	lr

00014988 <_ZN4core5clone5impls51_$LT$impl$u20$core..clone..Clone$u20$for$u20$u8$GT$5clone17ha9b310a840f5f5a4E>:
   14988:	b081      	sub	sp, #4
   1498a:	9000      	str	r0, [sp, #0]
   1498c:	9800      	ldr	r0, [sp, #0]
   1498e:	7800      	ldrb	r0, [r0, #0]
   14990:	b001      	add	sp, #4
   14992:	4770      	bx	lr

00014994 <_ZN4core3ptr18real_drop_in_place17h66642d4248444ac6E>:
   14994:	4770      	bx	lr

00014996 <_ZN4core3ptr18real_drop_in_place17h70f4fbf921cd1192E>:
   14996:	4770      	bx	lr

00014998 <_ZN71_$LT$core..ops..range..Range$LT$Idx$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h2ce8d4809e3d47b7E>:
   14998:	b5b0      	push	{r4, r5, r7, lr}
   1499a:	b086      	sub	sp, #24
   1499c:	460c      	mov	r4, r1
   1499e:	4605      	mov	r5, r0
   149a0:	f001 faca 	bl	15f38 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hfcb4a8ce4055cd12E>
   149a4:	b9a8      	cbnz	r0, 149d2 <_ZN71_$LT$core..ops..range..Range$LT$Idx$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h2ce8d4809e3d47b7E+0x3a>
   149a6:	f24e 43c4 	movw	r3, #58564	; 0xe4c4
   149aa:	2200      	movs	r2, #0
   149ac:	f2c0 0301 	movt	r3, #1
   149b0:	e9d4 0106 	ldrd	r0, r1, [r4, #24]
   149b4:	9205      	str	r2, [sp, #20]
   149b6:	9304      	str	r3, [sp, #16]
   149b8:	e9cd 2202 	strd	r2, r2, [sp, #8]
   149bc:	2201      	movs	r2, #1
   149be:	9201      	str	r2, [sp, #4]
   149c0:	f24e 5228 	movw	r2, #58664	; 0xe528
   149c4:	f2c0 0201 	movt	r2, #1
   149c8:	9200      	str	r2, [sp, #0]
   149ca:	466a      	mov	r2, sp
   149cc:	f000 fb0e 	bl	14fec <_ZN4core3fmt5write17hbcc7905081934c36E>
   149d0:	b110      	cbz	r0, 149d8 <_ZN71_$LT$core..ops..range..Range$LT$Idx$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h2ce8d4809e3d47b7E+0x40>
   149d2:	2001      	movs	r0, #1
   149d4:	b006      	add	sp, #24
   149d6:	bdb0      	pop	{r4, r5, r7, pc}
   149d8:	1d28      	adds	r0, r5, #4
   149da:	4621      	mov	r1, r4
   149dc:	b006      	add	sp, #24
   149de:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
   149e2:	f001 baa9 	b.w	15f38 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hfcb4a8ce4055cd12E>

000149e6 <_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h28b985403c61fed8E>:
   149e6:	f64e 40a4 	movw	r0, #60580	; 0xeca4
   149ea:	f241 417e 	movw	r1, #5246	; 0x147e
   149ee:	f2cb 6080 	movt	r0, #46720	; 0xb680
   149f2:	f6c5 612c 	movt	r1, #24108	; 0x5e2c
   149f6:	4770      	bx	lr

000149f8 <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h24e62ae33d04dcb5E>:
   149f8:	b570      	push	{r4, r5, r6, lr}
   149fa:	460e      	mov	r6, r1
   149fc:	3909      	subs	r1, #9
   149fe:	4604      	mov	r4, r0
   14a00:	291e      	cmp	r1, #30
   14a02:	d818      	bhi.n	14a36 <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h24e62ae33d04dcb5E+0x3e>
   14a04:	2002      	movs	r0, #2
   14a06:	2574      	movs	r5, #116	; 0x74
   14a08:	e8df f001 	tbb	[pc, r1]
   14a0c:	1c1c1019 	.word	0x1c1c1019
   14a10:	1c1c1c29 	.word	0x1c1c1c29
   14a14:	1c1c1c1c 	.word	0x1c1c1c1c
   14a18:	1c1c1c1c 	.word	0x1c1c1c1c
   14a1c:	1c1c1c1c 	.word	0x1c1c1c1c
   14a20:	1c1c1c1c 	.word	0x1c1c1c1c
   14a24:	1c1c171c 	.word	0x1c1c171c
   14a28:	00171c1c 	.word	0x00171c1c
   14a2c:	2002      	movs	r0, #2
   14a2e:	256e      	movs	r5, #110	; 0x6e
   14a30:	e884 5021 	stmia.w	r4, {r0, r5, ip, lr}
   14a34:	bd70      	pop	{r4, r5, r6, pc}
   14a36:	2e5c      	cmp	r6, #92	; 0x5c
   14a38:	d104      	bne.n	14a44 <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h24e62ae33d04dcb5E+0x4c>
   14a3a:	2002      	movs	r0, #2
   14a3c:	4635      	mov	r5, r6
   14a3e:	e884 5021 	stmia.w	r4, {r0, r5, ip, lr}
   14a42:	bd70      	pop	{r4, r5, r6, pc}
   14a44:	2a00      	cmp	r2, #0
   14a46:	d040      	beq.n	14aca <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h24e62ae33d04dcb5E+0xd2>
   14a48:	f3c6 1083 	ubfx	r0, r6, #6, #4
   14a4c:	0ab1      	lsrs	r1, r6, #10
   14a4e:	f5b6 3ff6 	cmp.w	r6, #125952	; 0x1ec00
   14a52:	d309      	bcc.n	14a68 <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h24e62ae33d04dcb5E+0x70>
   14a54:	f5b1 7f60 	cmp.w	r1, #896	; 0x380
   14a58:	d137      	bne.n	14aca <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h24e62ae33d04dcb5E+0xd2>
   14a5a:	211e      	movs	r1, #30
   14a5c:	e00b      	b.n	14a76 <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h24e62ae33d04dcb5E+0x7e>
   14a5e:	2002      	movs	r0, #2
   14a60:	2572      	movs	r5, #114	; 0x72
   14a62:	e884 5021 	stmia.w	r4, {r0, r5, ip, lr}
   14a66:	bd70      	pop	{r4, r5, r6, pc}
   14a68:	f64e 72ac 	movw	r2, #61356	; 0xefac
   14a6c:	f2c0 0201 	movt	r2, #1
   14a70:	5c51      	ldrb	r1, [r2, r1]
   14a72:	291e      	cmp	r1, #30
   14a74:	d842      	bhi.n	14afc <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h24e62ae33d04dcb5E+0x104>
   14a76:	f24f 0227 	movw	r2, #61479	; 0xf027
   14a7a:	f2c0 0201 	movt	r2, #1
   14a7e:	eb02 1101 	add.w	r1, r2, r1, lsl #4
   14a82:	5c09      	ldrb	r1, [r1, r0]
   14a84:	298b      	cmp	r1, #139	; 0x8b
   14a86:	d231      	bcs.n	14aec <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h24e62ae33d04dcb5E+0xf4>
   14a88:	f24f 2018 	movw	r0, #61976	; 0xf218
   14a8c:	2301      	movs	r3, #1
   14a8e:	f2c0 0001 	movt	r0, #1
   14a92:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
   14a96:	f850 0031 	ldr.w	r0, [r0, r1, lsl #3]
   14a9a:	f006 013f 	and.w	r1, r6, #63	; 0x3f
   14a9e:	f8d2 c004 	ldr.w	ip, [r2, #4]
   14aa2:	fa03 f501 	lsl.w	r5, r3, r1
   14aa6:	f1b1 0220 	subs.w	r2, r1, #32
   14aaa:	f1c1 0120 	rsb	r1, r1, #32
   14aae:	bf58      	it	pl
   14ab0:	2500      	movpl	r5, #0
   14ab2:	2a00      	cmp	r2, #0
   14ab4:	ea00 0005 	and.w	r0, r0, r5
   14ab8:	fa23 f101 	lsr.w	r1, r3, r1
   14abc:	bf58      	it	pl
   14abe:	fa03 f102 	lslpl.w	r1, r3, r2
   14ac2:	ea01 010c 	and.w	r1, r1, ip
   14ac6:	4308      	orrs	r0, r1
   14ac8:	d105      	bne.n	14ad6 <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h24e62ae33d04dcb5E+0xde>
   14aca:	4630      	mov	r0, r6
   14acc:	f001 f9bb 	bl	15e46 <_ZN4core7unicode9printable12is_printable17hd3cc4e85a138e855E>
   14ad0:	b108      	cbz	r0, 14ad6 <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h24e62ae33d04dcb5E+0xde>
   14ad2:	2001      	movs	r0, #1
   14ad4:	e7b2      	b.n	14a3c <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h24e62ae33d04dcb5E+0x44>
   14ad6:	f046 0001 	orr.w	r0, r6, #1
   14ada:	2107      	movs	r1, #7
   14adc:	fab0 f080 	clz	r0, r0
   14ae0:	f04f 0e05 	mov.w	lr, #5
   14ae4:	ea81 0c90 	eor.w	ip, r1, r0, lsr #2
   14ae8:	2003      	movs	r0, #3
   14aea:	e7a7      	b.n	14a3c <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h24e62ae33d04dcb5E+0x44>
   14aec:	f64e 709c 	movw	r0, #61340	; 0xef9c
   14af0:	228b      	movs	r2, #139	; 0x8b
   14af2:	f2c0 0001 	movt	r0, #1
   14af6:	f000 f86a 	bl	14bce <_ZN4core9panicking18panic_bounds_check17h6547e9bb7dcebe69E>
   14afa:	defe      	udf	#254	; 0xfe
   14afc:	f64e 708c 	movw	r0, #61324	; 0xef8c
   14b00:	221f      	movs	r2, #31
   14b02:	f2c0 0001 	movt	r0, #1
   14b06:	f000 f862 	bl	14bce <_ZN4core9panicking18panic_bounds_check17h6547e9bb7dcebe69E>
   14b0a:	defe      	udf	#254	; 0xfe

00014b0c <_ZN63_$LT$core..ffi..VaListImpl$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2e0046197fcff935E>:
   14b0c:	4770      	bx	lr

00014b0e <_ZN4core6option13expect_failed17ha956789ed39c5576E>:
   14b0e:	b08a      	sub	sp, #40	; 0x28
   14b10:	e9cd 0100 	strd	r0, r1, [sp]
   14b14:	2001      	movs	r0, #1
   14b16:	a908      	add	r1, sp, #32
   14b18:	9007      	str	r0, [sp, #28]
   14b1a:	9106      	str	r1, [sp, #24]
   14b1c:	2100      	movs	r1, #0
   14b1e:	9105      	str	r1, [sp, #20]
   14b20:	e9cd 0103 	strd	r0, r1, [sp, #12]
   14b24:	f24e 602c 	movw	r0, #58924	; 0xe62c
   14b28:	f2c0 0001 	movt	r0, #1
   14b2c:	4611      	mov	r1, r2
   14b2e:	9002      	str	r0, [sp, #8]
   14b30:	f246 50af 	movw	r0, #26031	; 0x65af
   14b34:	f2c0 0001 	movt	r0, #1
   14b38:	9009      	str	r0, [sp, #36]	; 0x24
   14b3a:	4668      	mov	r0, sp
   14b3c:	9008      	str	r0, [sp, #32]
   14b3e:	a802      	add	r0, sp, #8
   14b40:	f000 f865 	bl	14c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>
   14b44:	defe      	udf	#254	; 0xfe

00014b46 <_ZN4core6option18expect_none_failed17h2665e7008169a3baE>:
   14b46:	b08e      	sub	sp, #56	; 0x38
   14b48:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
   14b4c:	2002      	movs	r0, #2
   14b4e:	a90a      	add	r1, sp, #40	; 0x28
   14b50:	9009      	str	r0, [sp, #36]	; 0x24
   14b52:	9108      	str	r1, [sp, #32]
   14b54:	2100      	movs	r1, #0
   14b56:	9107      	str	r1, [sp, #28]
   14b58:	e9cd 0105 	strd	r0, r1, [sp, #20]
   14b5c:	f24e 6038 	movw	r0, #58936	; 0xe638
   14b60:	f2c0 0001 	movt	r0, #1
   14b64:	f8dd c038 	ldr.w	ip, [sp, #56]	; 0x38
   14b68:	9004      	str	r0, [sp, #16]
   14b6a:	f246 50a5 	movw	r0, #26021	; 0x65a5
   14b6e:	f2c0 0001 	movt	r0, #1
   14b72:	900d      	str	r0, [sp, #52]	; 0x34
   14b74:	a802      	add	r0, sp, #8
   14b76:	900c      	str	r0, [sp, #48]	; 0x30
   14b78:	f246 50af 	movw	r0, #26031	; 0x65af
   14b7c:	f2c0 0001 	movt	r0, #1
   14b80:	4661      	mov	r1, ip
   14b82:	900b      	str	r0, [sp, #44]	; 0x2c
   14b84:	4668      	mov	r0, sp
   14b86:	900a      	str	r0, [sp, #40]	; 0x28
   14b88:	a804      	add	r0, sp, #16
   14b8a:	f000 f840 	bl	14c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>
   14b8e:	defe      	udf	#254	; 0xfe

00014b90 <_ZN4core5panic9PanicInfo8location17h6d10e5dd7f0a464cE>:
   14b90:	68c0      	ldr	r0, [r0, #12]
   14b92:	4770      	bx	lr

00014b94 <_ZN4core5panic8Location6caller17h63e50e3e41b8f68eE>:
   14b94:	4770      	bx	lr

00014b96 <_ZN4core5panic8Location4file17h12b926f8213cef5cE>:
   14b96:	e9d0 2100 	ldrd	r2, r1, [r0]
   14b9a:	4610      	mov	r0, r2
   14b9c:	4770      	bx	lr

00014b9e <_ZN4core5panic8Location4line17h87c6504a14567921E>:
   14b9e:	6880      	ldr	r0, [r0, #8]
   14ba0:	4770      	bx	lr

00014ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>:
   14ba2:	b088      	sub	sp, #32
   14ba4:	4694      	mov	ip, r2
   14ba6:	f24e 42c4 	movw	r2, #58564	; 0xe4c4
   14baa:	2300      	movs	r3, #0
   14bac:	f2c0 0201 	movt	r2, #1
   14bb0:	e9cd 0106 	strd	r0, r1, [sp, #24]
   14bb4:	4668      	mov	r0, sp
   14bb6:	9305      	str	r3, [sp, #20]
   14bb8:	4661      	mov	r1, ip
   14bba:	9204      	str	r2, [sp, #16]
   14bbc:	2201      	movs	r2, #1
   14bbe:	e9cd 3302 	strd	r3, r3, [sp, #8]
   14bc2:	9201      	str	r2, [sp, #4]
   14bc4:	aa06      	add	r2, sp, #24
   14bc6:	9200      	str	r2, [sp, #0]
   14bc8:	f000 f821 	bl	14c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>
   14bcc:	defe      	udf	#254	; 0xfe

00014bce <_ZN4core9panicking18panic_bounds_check17h6547e9bb7dcebe69E>:
   14bce:	b08c      	sub	sp, #48	; 0x30
   14bd0:	4603      	mov	r3, r0
   14bd2:	e9cd 1200 	strd	r1, r2, [sp]
   14bd6:	2002      	movs	r0, #2
   14bd8:	a908      	add	r1, sp, #32
   14bda:	9007      	str	r0, [sp, #28]
   14bdc:	9106      	str	r1, [sp, #24]
   14bde:	2100      	movs	r1, #0
   14be0:	9105      	str	r1, [sp, #20]
   14be2:	e9cd 0103 	strd	r0, r1, [sp, #12]
   14be6:	f24e 606c 	movw	r0, #58988	; 0xe66c
   14bea:	f2c0 0001 	movt	r0, #1
   14bee:	4669      	mov	r1, sp
   14bf0:	9002      	str	r0, [sp, #8]
   14bf2:	f246 509b 	movw	r0, #26011	; 0x659b
   14bf6:	f2c0 0001 	movt	r0, #1
   14bfa:	900b      	str	r0, [sp, #44]	; 0x2c
   14bfc:	e9cd 0109 	strd	r0, r1, [sp, #36]	; 0x24
   14c00:	a801      	add	r0, sp, #4
   14c02:	9008      	str	r0, [sp, #32]
   14c04:	a802      	add	r0, sp, #8
   14c06:	4619      	mov	r1, r3
   14c08:	f000 f801 	bl	14c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>
   14c0c:	defe      	udf	#254	; 0xfe

00014c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>:
   14c0e:	b084      	sub	sp, #16
   14c10:	e9cd 0102 	strd	r0, r1, [sp, #8]
   14c14:	f24e 6048 	movw	r0, #58952	; 0xe648
   14c18:	f2c0 0001 	movt	r0, #1
   14c1c:	9001      	str	r0, [sp, #4]
   14c1e:	f24e 40c4 	movw	r0, #58564	; 0xe4c4
   14c22:	f2c0 0001 	movt	r0, #1
   14c26:	9000      	str	r0, [sp, #0]
   14c28:	4668      	mov	r0, sp
   14c2a:	f7f3 fd68 	bl	86fe <rust_begin_unwind>
   14c2e:	defe      	udf	#254	; 0xfe

00014c30 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E>:
   14c30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c34:	b089      	sub	sp, #36	; 0x24
   14c36:	2700      	movs	r7, #0
   14c38:	2a00      	cmp	r2, #0
   14c3a:	f000 8090 	beq.w	14d5e <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E+0x12e>
   14c3e:	4683      	mov	fp, r0
   14c40:	a802      	add	r0, sp, #8
   14c42:	4692      	mov	sl, r2
   14c44:	460d      	mov	r5, r1
   14c46:	3018      	adds	r0, #24
   14c48:	9001      	str	r0, [sp, #4]
   14c4a:	e006      	b.n	14c5a <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E+0x2a>
   14c4c:	4425      	add	r5, r4
   14c4e:	2e00      	cmp	r6, #0
   14c50:	46b2      	mov	sl, r6
   14c52:	f04f 0700 	mov.w	r7, #0
   14c56:	f000 8081 	beq.w	14d5c <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E+0x12c>
   14c5a:	f8db 0008 	ldr.w	r0, [fp, #8]
   14c5e:	7800      	ldrb	r0, [r0, #0]
   14c60:	b150      	cbz	r0, 14c78 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E+0x48>
   14c62:	e9db 0100 	ldrd	r0, r1, [fp]
   14c66:	2204      	movs	r2, #4
   14c68:	68cb      	ldr	r3, [r1, #12]
   14c6a:	f24e 5184 	movw	r1, #58756	; 0xe584
   14c6e:	f2c0 0101 	movt	r1, #1
   14c72:	4798      	blx	r3
   14c74:	2800      	cmp	r0, #0
   14c76:	d16f      	bne.n	14d58 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E+0x128>
   14c78:	200a      	movs	r0, #10
   14c7a:	2101      	movs	r1, #1
   14c7c:	9008      	str	r0, [sp, #32]
   14c7e:	4652      	mov	r2, sl
   14c80:	e9cd 0106 	strd	r0, r1, [sp, #24]
   14c84:	200a      	movs	r0, #10
   14c86:	4629      	mov	r1, r5
   14c88:	e9cd 7a04 	strd	r7, sl, [sp, #16]
   14c8c:	e9cd 5a02 	strd	r5, sl, [sp, #8]
   14c90:	e006      	b.n	14ca0 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E+0x70>
   14c92:	eba0 0209 	sub.w	r2, r0, r9
   14c96:	a802      	add	r0, sp, #8
   14c98:	9902      	ldr	r1, [sp, #8]
   14c9a:	4420      	add	r0, r4
   14c9c:	7dc0      	ldrb	r0, [r0, #23]
   14c9e:	4449      	add	r1, r9
   14ca0:	f000 fdde 	bl	15860 <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE>
   14ca4:	2801      	cmp	r0, #1
   14ca6:	d14e      	bne.n	14d46 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E+0x116>
   14ca8:	9804      	ldr	r0, [sp, #16]
   14caa:	9c07      	ldr	r4, [sp, #28]
   14cac:	4408      	add	r0, r1
   14cae:	f100 0901 	add.w	r9, r0, #1
   14cb2:	f8cd 9010 	str.w	r9, [sp, #16]
   14cb6:	45a1      	cmp	r9, r4
   14cb8:	d202      	bcs.n	14cc0 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E+0x90>
   14cba:	f8dd 800c 	ldr.w	r8, [sp, #12]
   14cbe:	e016      	b.n	14cee <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E+0xbe>
   14cc0:	f8dd 800c 	ldr.w	r8, [sp, #12]
   14cc4:	4620      	mov	r0, r4
   14cc6:	45c8      	cmp	r8, r9
   14cc8:	bf38      	it	cc
   14cca:	2000      	movcc	r0, #0
   14ccc:	d30f      	bcc.n	14cee <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E+0xbe>
   14cce:	2c05      	cmp	r4, #5
   14cd0:	d249      	bcs.n	14d66 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E+0x136>
   14cd2:	42a0      	cmp	r0, r4
   14cd4:	d10b      	bne.n	14cee <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E+0xbe>
   14cd6:	9802      	ldr	r0, [sp, #8]
   14cd8:	eba9 0604 	sub.w	r6, r9, r4
   14cdc:	9901      	ldr	r1, [sp, #4]
   14cde:	4430      	add	r0, r6
   14ce0:	4288      	cmp	r0, r1
   14ce2:	d033      	beq.n	14d4c <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E+0x11c>
   14ce4:	9901      	ldr	r1, [sp, #4]
   14ce6:	4622      	mov	r2, r4
   14ce8:	f004 f844 	bl	18d74 <memcmp>
   14cec:	b370      	cbz	r0, 14d4c <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E+0x11c>
   14cee:	9805      	ldr	r0, [sp, #20]
   14cf0:	4548      	cmp	r0, r9
   14cf2:	bf28      	it	cs
   14cf4:	4580      	cmpcs	r8, r0
   14cf6:	d2cc      	bcs.n	14c92 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E+0x62>
   14cf8:	f8db 0008 	ldr.w	r0, [fp, #8]
   14cfc:	4654      	mov	r4, sl
   14cfe:	7007      	strb	r7, [r0, #0]
   14d00:	ebaa 0604 	sub.w	r6, sl, r4
   14d04:	fab4 f384 	clz	r3, r4
   14d08:	fab6 f286 	clz	r2, r6
   14d0c:	e9db 0100 	ldrd	r0, r1, [fp]
   14d10:	095b      	lsrs	r3, r3, #5
   14d12:	0952      	lsrs	r2, r2, #5
   14d14:	ea53 0702 	orrs.w	r7, r3, r2
   14d18:	d105      	bne.n	14d26 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E+0xf6>
   14d1a:	45a2      	cmp	sl, r4
   14d1c:	d928      	bls.n	14d70 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E+0x140>
   14d1e:	572a      	ldrsb	r2, [r5, r4]
   14d20:	f112 0f41 	cmn.w	r2, #65	; 0x41
   14d24:	dd24      	ble.n	14d70 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E+0x140>
   14d26:	68cb      	ldr	r3, [r1, #12]
   14d28:	4629      	mov	r1, r5
   14d2a:	4622      	mov	r2, r4
   14d2c:	4798      	blx	r3
   14d2e:	b998      	cbnz	r0, 14d58 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E+0x128>
   14d30:	2f00      	cmp	r7, #0
   14d32:	f47f af8b 	bne.w	14c4c <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E+0x1c>
   14d36:	45a2      	cmp	sl, r4
   14d38:	d921      	bls.n	14d7e <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E+0x14e>
   14d3a:	5728      	ldrsb	r0, [r5, r4]
   14d3c:	f110 0f41 	cmn.w	r0, #65	; 0x41
   14d40:	f73f af84 	bgt.w	14c4c <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E+0x1c>
   14d44:	e01b      	b.n	14d7e <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E+0x14e>
   14d46:	9805      	ldr	r0, [sp, #20]
   14d48:	9004      	str	r0, [sp, #16]
   14d4a:	e7d5      	b.n	14cf8 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E+0xc8>
   14d4c:	f8db 0008 	ldr.w	r0, [fp, #8]
   14d50:	1c74      	adds	r4, r6, #1
   14d52:	2101      	movs	r1, #1
   14d54:	7001      	strb	r1, [r0, #0]
   14d56:	e7d3      	b.n	14d00 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E+0xd0>
   14d58:	2701      	movs	r7, #1
   14d5a:	e000      	b.n	14d5e <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E+0x12e>
   14d5c:	2700      	movs	r7, #0
   14d5e:	4638      	mov	r0, r7
   14d60:	b009      	add	sp, #36	; 0x24
   14d62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d66:	4620      	mov	r0, r4
   14d68:	2104      	movs	r1, #4
   14d6a:	f000 fe21 	bl	159b0 <_ZN4core5slice20slice_index_len_fail17h8346664e6cc144e9E>
   14d6e:	defe      	udf	#254	; 0xfe
   14d70:	4628      	mov	r0, r5
   14d72:	4651      	mov	r1, sl
   14d74:	2200      	movs	r2, #0
   14d76:	4623      	mov	r3, r4
   14d78:	f000 fe5e 	bl	15a38 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE>
   14d7c:	defe      	udf	#254	; 0xfe
   14d7e:	4628      	mov	r0, r5
   14d80:	4651      	mov	r1, sl
   14d82:	4622      	mov	r2, r4
   14d84:	4653      	mov	r3, sl
   14d86:	f000 fe57 	bl	15a38 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE>
   14d8a:	defe      	udf	#254	; 0xfe

00014d8c <_ZN4core3fmt8builders10DebugTuple5field17h0b2f5267a2ac1347E>:
   14d8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d90:	b091      	sub	sp, #68	; 0x44
   14d92:	4604      	mov	r4, r0
   14d94:	7a00      	ldrb	r0, [r0, #8]
   14d96:	b140      	cbz	r0, 14daa <_ZN4core3fmt8builders10DebugTuple5field17h0b2f5267a2ac1347E+0x1e>
   14d98:	2001      	movs	r0, #1
   14d9a:	6861      	ldr	r1, [r4, #4]
   14d9c:	7220      	strb	r0, [r4, #8]
   14d9e:	1c48      	adds	r0, r1, #1
   14da0:	6060      	str	r0, [r4, #4]
   14da2:	4620      	mov	r0, r4
   14da4:	b011      	add	sp, #68	; 0x44
   14da6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14daa:	4616      	mov	r6, r2
   14dac:	460d      	mov	r5, r1
   14dae:	e9d4 1200 	ldrd	r1, r2, [r4]
   14db2:	7808      	ldrb	r0, [r1, #0]
   14db4:	0740      	lsls	r0, r0, #29
   14db6:	d419      	bmi.n	14dec <_ZN4core3fmt8builders10DebugTuple5field17h0b2f5267a2ac1347E+0x60>
   14db8:	e9d1 0306 	ldrd	r0, r3, [r1, #24]
   14dbc:	f24e 6196 	movw	r1, #59030	; 0xe696
   14dc0:	f24e 6c9a 	movw	ip, #59034	; 0xe69a
   14dc4:	f2c0 0101 	movt	r1, #1
   14dc8:	2a00      	cmp	r2, #0
   14dca:	f2c0 0c01 	movt	ip, #1
   14dce:	bf08      	it	eq
   14dd0:	4661      	moveq	r1, ip
   14dd2:	68db      	ldr	r3, [r3, #12]
   14dd4:	f04f 0202 	mov.w	r2, #2
   14dd8:	bf08      	it	eq
   14dda:	2201      	moveq	r2, #1
   14ddc:	4798      	blx	r3
   14dde:	2800      	cmp	r0, #0
   14de0:	d1da      	bne.n	14d98 <_ZN4core3fmt8builders10DebugTuple5field17h0b2f5267a2ac1347E+0xc>
   14de2:	68f2      	ldr	r2, [r6, #12]
   14de4:	4628      	mov	r0, r5
   14de6:	6821      	ldr	r1, [r4, #0]
   14de8:	4790      	blx	r2
   14dea:	e7d6      	b.n	14d9a <_ZN4core3fmt8builders10DebugTuple5field17h0b2f5267a2ac1347E+0xe>
   14dec:	b95a      	cbnz	r2, 14e06 <_ZN4core3fmt8builders10DebugTuple5field17h0b2f5267a2ac1347E+0x7a>
   14dee:	e9d1 0106 	ldrd	r0, r1, [r1, #24]
   14df2:	2202      	movs	r2, #2
   14df4:	68cb      	ldr	r3, [r1, #12]
   14df6:	f24e 6198 	movw	r1, #59032	; 0xe698
   14dfa:	f2c0 0101 	movt	r1, #1
   14dfe:	4798      	blx	r3
   14e00:	2800      	cmp	r0, #0
   14e02:	d1c9      	bne.n	14d98 <_ZN4core3fmt8builders10DebugTuple5field17h0b2f5267a2ac1347E+0xc>
   14e04:	6821      	ldr	r1, [r4, #0]
   14e06:	2001      	movs	r0, #1
   14e08:	f10d 030f 	add.w	r3, sp, #15
   14e0c:	f88d 000f 	strb.w	r0, [sp, #15]
   14e10:	e9d1 0206 	ldrd	r0, r2, [r1, #24]
   14e14:	e88d 000d 	stmia.w	sp, {r0, r2, r3}
   14e18:	e891 5c00 	ldmia.w	r1, {sl, fp, ip, lr}
   14e1c:	e9d1 8904 	ldrd	r8, r9, [r1, #16]
   14e20:	e9d1 3708 	ldrd	r3, r7, [r1, #32]
   14e24:	e9d1 020a 	ldrd	r0, r2, [r1, #40]	; 0x28
   14e28:	f891 1030 	ldrb.w	r1, [r1, #48]	; 0x30
   14e2c:	f88d 1040 	strb.w	r1, [sp, #64]	; 0x40
   14e30:	a904      	add	r1, sp, #16
   14e32:	e9cd ab04 	strd	sl, fp, [sp, #16]
   14e36:	e9cd 020e 	strd	r0, r2, [sp, #56]	; 0x38
   14e3a:	f24e 607c 	movw	r0, #59004	; 0xe67c
   14e3e:	f2c0 0001 	movt	r0, #1
   14e42:	68f2      	ldr	r2, [r6, #12]
   14e44:	e9cd 370c 	strd	r3, r7, [sp, #48]	; 0x30
   14e48:	900b      	str	r0, [sp, #44]	; 0x2c
   14e4a:	4668      	mov	r0, sp
   14e4c:	900a      	str	r0, [sp, #40]	; 0x28
   14e4e:	4628      	mov	r0, r5
   14e50:	e9cd 8908 	strd	r8, r9, [sp, #32]
   14e54:	e9cd ce06 	strd	ip, lr, [sp, #24]
   14e58:	4790      	blx	r2
   14e5a:	2800      	cmp	r0, #0
   14e5c:	d19c      	bne.n	14d98 <_ZN4core3fmt8builders10DebugTuple5field17h0b2f5267a2ac1347E+0xc>
   14e5e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   14e62:	2202      	movs	r2, #2
   14e64:	68cb      	ldr	r3, [r1, #12]
   14e66:	f24e 6194 	movw	r1, #59028	; 0xe694
   14e6a:	f2c0 0101 	movt	r1, #1
   14e6e:	4798      	blx	r3
   14e70:	e793      	b.n	14d9a <_ZN4core3fmt8builders10DebugTuple5field17h0b2f5267a2ac1347E+0xe>

00014e72 <_ZN4core3fmt8builders10DebugTuple6finish17heb8e742f7f30d0e3E>:
   14e72:	b5b0      	push	{r4, r5, r7, lr}
   14e74:	4604      	mov	r4, r0
   14e76:	7a05      	ldrb	r5, [r0, #8]
   14e78:	6840      	ldr	r0, [r0, #4]
   14e7a:	b308      	cbz	r0, 14ec0 <_ZN4core3fmt8builders10DebugTuple6finish17heb8e742f7f30d0e3E+0x4e>
   14e7c:	b10d      	cbz	r5, 14e82 <_ZN4core3fmt8builders10DebugTuple6finish17heb8e742f7f30d0e3E+0x10>
   14e7e:	2501      	movs	r5, #1
   14e80:	e01d      	b.n	14ebe <_ZN4core3fmt8builders10DebugTuple6finish17heb8e742f7f30d0e3E+0x4c>
   14e82:	2801      	cmp	r0, #1
   14e84:	d110      	bne.n	14ea8 <_ZN4core3fmt8builders10DebugTuple6finish17heb8e742f7f30d0e3E+0x36>
   14e86:	7a60      	ldrb	r0, [r4, #9]
   14e88:	b170      	cbz	r0, 14ea8 <_ZN4core3fmt8builders10DebugTuple6finish17heb8e742f7f30d0e3E+0x36>
   14e8a:	6821      	ldr	r1, [r4, #0]
   14e8c:	7808      	ldrb	r0, [r1, #0]
   14e8e:	0740      	lsls	r0, r0, #29
   14e90:	d40a      	bmi.n	14ea8 <_ZN4core3fmt8builders10DebugTuple6finish17heb8e742f7f30d0e3E+0x36>
   14e92:	e9d1 0106 	ldrd	r0, r1, [r1, #24]
   14e96:	2201      	movs	r2, #1
   14e98:	68cb      	ldr	r3, [r1, #12]
   14e9a:	f24e 619b 	movw	r1, #59035	; 0xe69b
   14e9e:	f2c0 0101 	movt	r1, #1
   14ea2:	2501      	movs	r5, #1
   14ea4:	4798      	blx	r3
   14ea6:	b950      	cbnz	r0, 14ebe <_ZN4core3fmt8builders10DebugTuple6finish17heb8e742f7f30d0e3E+0x4c>
   14ea8:	6821      	ldr	r1, [r4, #0]
   14eaa:	2201      	movs	r2, #1
   14eac:	e9d1 0106 	ldrd	r0, r1, [r1, #24]
   14eb0:	68cb      	ldr	r3, [r1, #12]
   14eb2:	f24e 619c 	movw	r1, #59036	; 0xe69c
   14eb6:	f2c0 0101 	movt	r1, #1
   14eba:	4798      	blx	r3
   14ebc:	4605      	mov	r5, r0
   14ebe:	7225      	strb	r5, [r4, #8]
   14ec0:	2d00      	cmp	r5, #0
   14ec2:	bf18      	it	ne
   14ec4:	2501      	movne	r5, #1
   14ec6:	4628      	mov	r0, r5
   14ec8:	bdb0      	pop	{r4, r5, r7, pc}

00014eca <_ZN4core3fmt5Write10write_char17hb65abc09113a440eE>:
   14eca:	b580      	push	{r7, lr}
   14ecc:	b082      	sub	sp, #8
   14ece:	468c      	mov	ip, r1
   14ed0:	2100      	movs	r1, #0
   14ed2:	f1bc 0f80 	cmp.w	ip, #128	; 0x80
   14ed6:	9101      	str	r1, [sp, #4]
   14ed8:	d204      	bcs.n	14ee4 <_ZN4core3fmt5Write10write_char17hb65abc09113a440eE+0x1a>
   14eda:	f88d c004 	strb.w	ip, [sp, #4]
   14ede:	a901      	add	r1, sp, #4
   14ee0:	2201      	movs	r2, #1
   14ee2:	e03d      	b.n	14f60 <_ZN4core3fmt5Write10write_char17hb65abc09113a440eE+0x96>
   14ee4:	f5bc 6f00 	cmp.w	ip, #2048	; 0x800
   14ee8:	d20d      	bcs.n	14f06 <_ZN4core3fmt5Write10write_char17hb65abc09113a440eE+0x3c>
   14eea:	ea4f 119c 	mov.w	r1, ip, lsr #6
   14eee:	2306      	movs	r3, #6
   14ef0:	2202      	movs	r2, #2
   14ef2:	f363 115f 	bfi	r1, r3, #5, #27
   14ef6:	f362 1c9f 	bfi	ip, r2, #6, #26
   14efa:	f88d c005 	strb.w	ip, [sp, #5]
   14efe:	f88d 1004 	strb.w	r1, [sp, #4]
   14f02:	a901      	add	r1, sp, #4
   14f04:	e02c      	b.n	14f60 <_ZN4core3fmt5Write10write_char17hb65abc09113a440eE+0x96>
   14f06:	2202      	movs	r2, #2
   14f08:	4663      	mov	r3, ip
   14f0a:	a901      	add	r1, sp, #4
   14f0c:	f362 139f 	bfi	r3, r2, #6, #26
   14f10:	f5bc 3f80 	cmp.w	ip, #65536	; 0x10000
   14f14:	d210      	bcs.n	14f38 <_ZN4core3fmt5Write10write_char17hb65abc09113a440eE+0x6e>
   14f16:	f88d 3006 	strb.w	r3, [sp, #6]
   14f1a:	ea4f 139c 	mov.w	r3, ip, lsr #6
   14f1e:	f362 139f 	bfi	r3, r2, #6, #26
   14f22:	f88d 3005 	strb.w	r3, [sp, #5]
   14f26:	ea4f 321c 	mov.w	r2, ip, lsr #12
   14f2a:	230e      	movs	r3, #14
   14f2c:	f363 121f 	bfi	r2, r3, #4, #28
   14f30:	f88d 2004 	strb.w	r2, [sp, #4]
   14f34:	2203      	movs	r2, #3
   14f36:	e013      	b.n	14f60 <_ZN4core3fmt5Write10write_char17hb65abc09113a440eE+0x96>
   14f38:	f88d 3007 	strb.w	r3, [sp, #7]
   14f3c:	ea4f 139c 	mov.w	r3, ip, lsr #6
   14f40:	f362 139f 	bfi	r3, r2, #6, #26
   14f44:	f88d 3006 	strb.w	r3, [sp, #6]
   14f48:	ea4f 331c 	mov.w	r3, ip, lsr #12
   14f4c:	f362 139f 	bfi	r3, r2, #6, #26
   14f50:	22f0      	movs	r2, #240	; 0xf0
   14f52:	ea42 429c 	orr.w	r2, r2, ip, lsr #18
   14f56:	f88d 3005 	strb.w	r3, [sp, #5]
   14f5a:	f88d 2004 	strb.w	r2, [sp, #4]
   14f5e:	2204      	movs	r2, #4
   14f60:	f7ff fe66 	bl	14c30 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E>
   14f64:	b002      	add	sp, #8
   14f66:	bd80      	pop	{r7, pc}

00014f68 <_ZN4core3fmt5Write9write_fmt17he5afe79f8ffd6051E>:
   14f68:	b570      	push	{r4, r5, r6, lr}
   14f6a:	b088      	sub	sp, #32
   14f6c:	9001      	str	r0, [sp, #4]
   14f6e:	aa02      	add	r2, sp, #8
   14f70:	e891 5078 	ldmia.w	r1, {r3, r4, r5, r6, ip, lr}
   14f74:	f24e 7168 	movw	r1, #59240	; 0xe768
   14f78:	4610      	mov	r0, r2
   14f7a:	f2c0 0101 	movt	r1, #1
   14f7e:	e880 5078 	stmia.w	r0, {r3, r4, r5, r6, ip, lr}
   14f82:	a801      	add	r0, sp, #4
   14f84:	f000 f832 	bl	14fec <_ZN4core3fmt5write17hbcc7905081934c36E>
   14f88:	b008      	add	sp, #32
   14f8a:	bd70      	pop	{r4, r5, r6, pc}

00014f8c <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h6344e1076413cfafE>:
   14f8c:	6800      	ldr	r0, [r0, #0]
   14f8e:	f7ff be4f 	b.w	14c30 <_ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h0f921d2524ef4479E>

00014f92 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hc8a4cdc36790d416E>:
   14f92:	6800      	ldr	r0, [r0, #0]
   14f94:	f7ff bf99 	b.w	14eca <_ZN4core3fmt5Write10write_char17hb65abc09113a440eE>

00014f98 <_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h6dfcc0cfc5e4394aE>:
   14f98:	b570      	push	{r4, r5, r6, lr}
   14f9a:	b088      	sub	sp, #32
   14f9c:	6800      	ldr	r0, [r0, #0]
   14f9e:	aa02      	add	r2, sp, #8
   14fa0:	9001      	str	r0, [sp, #4]
   14fa2:	e891 5078 	ldmia.w	r1, {r3, r4, r5, r6, ip, lr}
   14fa6:	4610      	mov	r0, r2
   14fa8:	f24e 7168 	movw	r1, #59240	; 0xe768
   14fac:	f2c0 0101 	movt	r1, #1
   14fb0:	e880 5078 	stmia.w	r0, {r3, r4, r5, r6, ip, lr}
   14fb4:	a801      	add	r0, sp, #4
   14fb6:	f000 f819 	bl	14fec <_ZN4core3fmt5write17hbcc7905081934c36E>
   14fba:	b008      	add	sp, #32
   14fbc:	bd70      	pop	{r4, r5, r6, pc}

00014fbe <_ZN4core3fmt10ArgumentV110show_usize17h66188139494b9d4cE>:
   14fbe:	6800      	ldr	r0, [r0, #0]
   14fc0:	460a      	mov	r2, r1
   14fc2:	2101      	movs	r1, #1
   14fc4:	f001 ba62 	b.w	1648c <_ZN4core3fmt3num3imp7fmt_u3217h19c42a593c756fd4E>

00014fc8 <_ZN59_$LT$core..fmt..Arguments$u20$as$u20$core..fmt..Display$GT$3fmt17hbae1f6800a942be8E>:
   14fc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   14fcc:	b086      	sub	sp, #24
   14fce:	e9d1 c106 	ldrd	ip, r1, [r1, #24]
   14fd2:	466a      	mov	r2, sp
   14fd4:	e890 41f0 	ldmia.w	r0, {r4, r5, r6, r7, r8, lr}
   14fd8:	4613      	mov	r3, r2
   14fda:	4660      	mov	r0, ip
   14fdc:	e883 41f0 	stmia.w	r3, {r4, r5, r6, r7, r8, lr}
   14fe0:	f000 f804 	bl	14fec <_ZN4core3fmt5write17hbcc7905081934c36E>
   14fe4:	b006      	add	sp, #24
   14fe6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

00014fec <_ZN4core3fmt5write17hbcc7905081934c36E>:
   14fec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ff0:	b08d      	sub	sp, #52	; 0x34
   14ff2:	2303      	movs	r3, #3
   14ff4:	6897      	ldr	r7, [r2, #8]
   14ff6:	e9d2 5604 	ldrd	r5, r6, [r2, #16]
   14ffa:	f10d 0c18 	add.w	ip, sp, #24
   14ffe:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
   15002:	2320      	movs	r3, #32
   15004:	9301      	str	r3, [sp, #4]
   15006:	2300      	movs	r3, #0
   15008:	2f00      	cmp	r7, #0
   1500a:	9300      	str	r3, [sp, #0]
   1500c:	e9cd 560a 	strd	r5, r6, [sp, #40]	; 0x28
   15010:	e88c 0023 	stmia.w	ip, {r0, r1, r5}
   15014:	9304      	str	r3, [sp, #16]
   15016:	9302      	str	r3, [sp, #8]
   15018:	eb05 03c6 	add.w	r3, r5, r6, lsl #3
   1501c:	9309      	str	r3, [sp, #36]	; 0x24
   1501e:	f000 809d 	beq.w	1515c <_ZN4core3fmt5write17hbcc7905081934c36E+0x170>
   15022:	68d4      	ldr	r4, [r2, #12]
   15024:	e9d2 b900 	ldrd	fp, r9, [r2]
   15028:	454c      	cmp	r4, r9
   1502a:	bf88      	it	hi
   1502c:	464c      	movhi	r4, r9
   1502e:	2c00      	cmp	r4, #0
   15030:	f000 80ba 	beq.w	151a8 <_ZN4core3fmt5write17hbcc7905081934c36E+0x1bc>
   15034:	e9db 3200 	ldrd	r3, r2, [fp]
   15038:	68ce      	ldr	r6, [r1, #12]
   1503a:	4619      	mov	r1, r3
   1503c:	47b0      	blx	r6
   1503e:	2800      	cmp	r0, #0
   15040:	f040 80c0 	bne.w	151c4 <_ZN4core3fmt5write17hbcc7905081934c36E+0x1d8>
   15044:	f107 0610 	add.w	r6, r7, #16
   15048:	f644 77bf 	movw	r7, #20415	; 0x4fbf
   1504c:	2500      	movs	r5, #0
   1504e:	46e8      	mov	r8, sp
   15050:	f2c0 0701 	movt	r7, #1
   15054:	f856 0c08 	ldr.w	r0, [r6, #-8]
   15058:	f105 0a01 	add.w	sl, r5, #1
   1505c:	9001      	str	r0, [sp, #4]
   1505e:	7c30      	ldrb	r0, [r6, #16]
   15060:	f88d 0030 	strb.w	r0, [sp, #48]	; 0x30
   15064:	f856 0c04 	ldr.w	r0, [r6, #-4]
   15068:	9000      	str	r0, [sp, #0]
   1506a:	2000      	movs	r0, #0
   1506c:	68b2      	ldr	r2, [r6, #8]
   1506e:	e8df f002 	tbb	[pc, r2]
   15072:	0402      	.short	0x0402
   15074:	2112      	.short	0x2112
   15076:	68f1      	ldr	r1, [r6, #12]
   15078:	e019      	b.n	150ae <_ZN4core3fmt5write17hbcc7905081934c36E+0xc2>
   1507a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   1507c:	68f1      	ldr	r1, [r6, #12]
   1507e:	4291      	cmp	r1, r2
   15080:	f080 80a8 	bcs.w	151d4 <_ZN4core3fmt5write17hbcc7905081934c36E+0x1e8>
   15084:	980a      	ldr	r0, [sp, #40]	; 0x28
   15086:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
   1508a:	6852      	ldr	r2, [r2, #4]
   1508c:	42ba      	cmp	r2, r7
   1508e:	d110      	bne.n	150b2 <_ZN4core3fmt5write17hbcc7905081934c36E+0xc6>
   15090:	f850 0031 	ldr.w	r0, [r0, r1, lsl #3]
   15094:	e00a      	b.n	150ac <_ZN4core3fmt5write17hbcc7905081934c36E+0xc0>
   15096:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   1509a:	4288      	cmp	r0, r1
   1509c:	d009      	beq.n	150b2 <_ZN4core3fmt5write17hbcc7905081934c36E+0xc6>
   1509e:	f100 0108 	add.w	r1, r0, #8
   150a2:	9108      	str	r1, [sp, #32]
   150a4:	6841      	ldr	r1, [r0, #4]
   150a6:	42b9      	cmp	r1, r7
   150a8:	d103      	bne.n	150b2 <_ZN4core3fmt5write17hbcc7905081934c36E+0xc6>
   150aa:	6800      	ldr	r0, [r0, #0]
   150ac:	6801      	ldr	r1, [r0, #0]
   150ae:	2001      	movs	r0, #1
   150b0:	e000      	b.n	150b4 <_ZN4core3fmt5write17hbcc7905081934c36E+0xc8>
   150b2:	2000      	movs	r0, #0
   150b4:	e9cd 0102 	strd	r0, r1, [sp, #8]
   150b8:	2000      	movs	r0, #0
   150ba:	6832      	ldr	r2, [r6, #0]
   150bc:	e8df f002 	tbb	[pc, r2]
   150c0:	21120402 	.word	0x21120402
   150c4:	6871      	ldr	r1, [r6, #4]
   150c6:	e019      	b.n	150fc <_ZN4core3fmt5write17hbcc7905081934c36E+0x110>
   150c8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   150ca:	6871      	ldr	r1, [r6, #4]
   150cc:	4291      	cmp	r1, r2
   150ce:	f080 8081 	bcs.w	151d4 <_ZN4core3fmt5write17hbcc7905081934c36E+0x1e8>
   150d2:	980a      	ldr	r0, [sp, #40]	; 0x28
   150d4:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
   150d8:	6852      	ldr	r2, [r2, #4]
   150da:	42ba      	cmp	r2, r7
   150dc:	d110      	bne.n	15100 <_ZN4core3fmt5write17hbcc7905081934c36E+0x114>
   150de:	f850 0031 	ldr.w	r0, [r0, r1, lsl #3]
   150e2:	e00a      	b.n	150fa <_ZN4core3fmt5write17hbcc7905081934c36E+0x10e>
   150e4:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   150e8:	4288      	cmp	r0, r1
   150ea:	d009      	beq.n	15100 <_ZN4core3fmt5write17hbcc7905081934c36E+0x114>
   150ec:	f100 0108 	add.w	r1, r0, #8
   150f0:	9108      	str	r1, [sp, #32]
   150f2:	6841      	ldr	r1, [r0, #4]
   150f4:	42b9      	cmp	r1, r7
   150f6:	d103      	bne.n	15100 <_ZN4core3fmt5write17hbcc7905081934c36E+0x114>
   150f8:	6800      	ldr	r0, [r0, #0]
   150fa:	6801      	ldr	r1, [r0, #0]
   150fc:	2001      	movs	r0, #1
   150fe:	e000      	b.n	15102 <_ZN4core3fmt5write17hbcc7905081934c36E+0x116>
   15100:	2000      	movs	r0, #0
   15102:	e9cd 0104 	strd	r0, r1, [sp, #16]
   15106:	f856 0c10 	ldr.w	r0, [r6, #-16]
   1510a:	2801      	cmp	r0, #1
   1510c:	d108      	bne.n	15120 <_ZN4core3fmt5write17hbcc7905081934c36E+0x134>
   1510e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   15110:	f856 1c0c 	ldr.w	r1, [r6, #-12]
   15114:	4291      	cmp	r1, r2
   15116:	d264      	bcs.n	151e2 <_ZN4core3fmt5write17hbcc7905081934c36E+0x1f6>
   15118:	980a      	ldr	r0, [sp, #40]	; 0x28
   1511a:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
   1511e:	e006      	b.n	1512e <_ZN4core3fmt5write17hbcc7905081934c36E+0x142>
   15120:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   15124:	4288      	cmp	r0, r1
   15126:	d063      	beq.n	151f0 <_ZN4core3fmt5write17hbcc7905081934c36E+0x204>
   15128:	f100 0108 	add.w	r1, r0, #8
   1512c:	9108      	str	r1, [sp, #32]
   1512e:	1d01      	adds	r1, r0, #4
   15130:	6800      	ldr	r0, [r0, #0]
   15132:	680a      	ldr	r2, [r1, #0]
   15134:	4641      	mov	r1, r8
   15136:	4790      	blx	r2
   15138:	2800      	cmp	r0, #0
   1513a:	d143      	bne.n	151c4 <_ZN4core3fmt5write17hbcc7905081934c36E+0x1d8>
   1513c:	45a2      	cmp	sl, r4
   1513e:	d235      	bcs.n	151ac <_ZN4core3fmt5write17hbcc7905081934c36E+0x1c0>
   15140:	e9dd 0306 	ldrd	r0, r3, [sp, #24]
   15144:	eb0b 02c5 	add.w	r2, fp, r5, lsl #3
   15148:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
   1514c:	68db      	ldr	r3, [r3, #12]
   1514e:	4798      	blx	r3
   15150:	3624      	adds	r6, #36	; 0x24
   15152:	2800      	cmp	r0, #0
   15154:	4655      	mov	r5, sl
   15156:	f43f af7d 	beq.w	15054 <_ZN4core3fmt5write17hbcc7905081934c36E+0x68>
   1515a:	e033      	b.n	151c4 <_ZN4core3fmt5write17hbcc7905081934c36E+0x1d8>
   1515c:	e9d2 b900 	ldrd	fp, r9, [r2]
   15160:	454e      	cmp	r6, r9
   15162:	bf88      	it	hi
   15164:	464e      	movhi	r6, r9
   15166:	b1fe      	cbz	r6, 151a8 <_ZN4core3fmt5write17hbcc7905081934c36E+0x1bc>
   15168:	e9db 3200 	ldrd	r3, r2, [fp]
   1516c:	68cf      	ldr	r7, [r1, #12]
   1516e:	4619      	mov	r1, r3
   15170:	47b8      	blx	r7
   15172:	bb38      	cbnz	r0, 151c4 <_ZN4core3fmt5write17hbcc7905081934c36E+0x1d8>
   15174:	2700      	movs	r7, #0
   15176:	466c      	mov	r4, sp
   15178:	eb05 01c7 	add.w	r1, r5, r7, lsl #3
   1517c:	f855 0037 	ldr.w	r0, [r5, r7, lsl #3]
   15180:	684a      	ldr	r2, [r1, #4]
   15182:	4621      	mov	r1, r4
   15184:	4790      	blx	r2
   15186:	b9e8      	cbnz	r0, 151c4 <_ZN4core3fmt5write17hbcc7905081934c36E+0x1d8>
   15188:	f107 0a01 	add.w	sl, r7, #1
   1518c:	45b2      	cmp	sl, r6
   1518e:	d20d      	bcs.n	151ac <_ZN4core3fmt5write17hbcc7905081934c36E+0x1c0>
   15190:	e9dd 0306 	ldrd	r0, r3, [sp, #24]
   15194:	eb0b 02c7 	add.w	r2, fp, r7, lsl #3
   15198:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
   1519c:	68db      	ldr	r3, [r3, #12]
   1519e:	4798      	blx	r3
   151a0:	2800      	cmp	r0, #0
   151a2:	4657      	mov	r7, sl
   151a4:	d0e8      	beq.n	15178 <_ZN4core3fmt5write17hbcc7905081934c36E+0x18c>
   151a6:	e00d      	b.n	151c4 <_ZN4core3fmt5write17hbcc7905081934c36E+0x1d8>
   151a8:	f04f 0a00 	mov.w	sl, #0
   151ac:	45d1      	cmp	r9, sl
   151ae:	d90d      	bls.n	151cc <_ZN4core3fmt5write17hbcc7905081934c36E+0x1e0>
   151b0:	eb0b 02ca 	add.w	r2, fp, sl, lsl #3
   151b4:	e9dd 0306 	ldrd	r0, r3, [sp, #24]
   151b8:	f85b 103a 	ldr.w	r1, [fp, sl, lsl #3]
   151bc:	6852      	ldr	r2, [r2, #4]
   151be:	68db      	ldr	r3, [r3, #12]
   151c0:	4798      	blx	r3
   151c2:	b118      	cbz	r0, 151cc <_ZN4core3fmt5write17hbcc7905081934c36E+0x1e0>
   151c4:	2001      	movs	r0, #1
   151c6:	b00d      	add	sp, #52	; 0x34
   151c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   151cc:	2000      	movs	r0, #0
   151ce:	b00d      	add	sp, #52	; 0x34
   151d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   151d4:	f24e 70b8 	movw	r0, #59320	; 0xe7b8
   151d8:	f2c0 0001 	movt	r0, #1
   151dc:	f7ff fcf7 	bl	14bce <_ZN4core9panicking18panic_bounds_check17h6547e9bb7dcebe69E>
   151e0:	defe      	udf	#254	; 0xfe
   151e2:	f24e 7098 	movw	r0, #59288	; 0xe798
   151e6:	f2c0 0001 	movt	r0, #1
   151ea:	f7ff fcf0 	bl	14bce <_ZN4core9panicking18panic_bounds_check17h6547e9bb7dcebe69E>
   151ee:	defe      	udf	#254	; 0xfe
   151f0:	f24e 6000 	movw	r0, #58880	; 0xe600
   151f4:	f24e 72a8 	movw	r2, #59304	; 0xe7a8
   151f8:	f2c0 0001 	movt	r0, #1
   151fc:	f2c0 0201 	movt	r2, #1
   15200:	212b      	movs	r1, #43	; 0x2b
   15202:	f7ff fcce 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   15206:	defe      	udf	#254	; 0xfe

00015208 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E>:
   15208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1520c:	b083      	sub	sp, #12
   1520e:	e9dd 570c 	ldrd	r5, r7, [sp, #48]	; 0x30
   15212:	469a      	mov	sl, r3
   15214:	4604      	mov	r4, r0
   15216:	b1e1      	cbz	r1, 15252 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x4a>
   15218:	f8d4 e000 	ldr.w	lr, [r4]
   1521c:	f04f 082b 	mov.w	r8, #43	; 0x2b
   15220:	f01e 0101 	ands.w	r1, lr, #1
   15224:	bf08      	it	eq
   15226:	f44f 1888 	moveq.w	r8, #1114112	; 0x110000
   1522a:	eb01 0907 	add.w	r9, r1, r7
   1522e:	ea5f 714e 	movs.w	r1, lr, lsl #29
   15232:	d517      	bpl.n	15264 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x5c>
   15234:	f1ba 0f00 	cmp.w	sl, #0
   15238:	d018      	beq.n	1526c <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x64>
   1523a:	f1aa 0101 	sub.w	r1, sl, #1
   1523e:	f00a 0c03 	and.w	ip, sl, #3
   15242:	2903      	cmp	r1, #3
   15244:	d214      	bcs.n	15270 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x68>
   15246:	2100      	movs	r1, #0
   15248:	4613      	mov	r3, r2
   1524a:	f1bc 0f00 	cmp.w	ip, #0
   1524e:	d137      	bne.n	152c0 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0xb8>
   15250:	e04e      	b.n	152f0 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0xe8>
   15252:	f8d4 e000 	ldr.w	lr, [r4]
   15256:	f107 0901 	add.w	r9, r7, #1
   1525a:	f04f 082d 	mov.w	r8, #45	; 0x2d
   1525e:	ea5f 714e 	movs.w	r1, lr, lsl #29
   15262:	d4e7      	bmi.n	15234 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x2c>
   15264:	f04f 0a00 	mov.w	sl, #0
   15268:	2200      	movs	r2, #0
   1526a:	e045      	b.n	152f8 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0xf0>
   1526c:	2100      	movs	r1, #0
   1526e:	e03f      	b.n	152f0 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0xe8>
   15270:	ebac 060a 	sub.w	r6, ip, sl
   15274:	2100      	movs	r1, #0
   15276:	4693      	mov	fp, r2
   15278:	4613      	mov	r3, r2
   1527a:	e9cd 7501 	strd	r7, r5, [sp, #4]
   1527e:	781a      	ldrb	r2, [r3, #0]
   15280:	785d      	ldrb	r5, [r3, #1]
   15282:	7898      	ldrb	r0, [r3, #2]
   15284:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
   15288:	78df      	ldrb	r7, [r3, #3]
   1528a:	2a80      	cmp	r2, #128	; 0x80
   1528c:	f005 02c0 	and.w	r2, r5, #192	; 0xc0
   15290:	bf08      	it	eq
   15292:	3101      	addeq	r1, #1
   15294:	2a80      	cmp	r2, #128	; 0x80
   15296:	f000 00c0 	and.w	r0, r0, #192	; 0xc0
   1529a:	bf08      	it	eq
   1529c:	3101      	addeq	r1, #1
   1529e:	2880      	cmp	r0, #128	; 0x80
   152a0:	f007 00c0 	and.w	r0, r7, #192	; 0xc0
   152a4:	bf08      	it	eq
   152a6:	3101      	addeq	r1, #1
   152a8:	2880      	cmp	r0, #128	; 0x80
   152aa:	bf08      	it	eq
   152ac:	3101      	addeq	r1, #1
   152ae:	3304      	adds	r3, #4
   152b0:	3604      	adds	r6, #4
   152b2:	d1e4      	bne.n	1527e <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x76>
   152b4:	e9dd 7501 	ldrd	r7, r5, [sp, #4]
   152b8:	465a      	mov	r2, fp
   152ba:	f1bc 0f00 	cmp.w	ip, #0
   152be:	d017      	beq.n	152f0 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0xe8>
   152c0:	7818      	ldrb	r0, [r3, #0]
   152c2:	f000 00c0 	and.w	r0, r0, #192	; 0xc0
   152c6:	2880      	cmp	r0, #128	; 0x80
   152c8:	bf08      	it	eq
   152ca:	3101      	addeq	r1, #1
   152cc:	f1bc 0f01 	cmp.w	ip, #1
   152d0:	d00e      	beq.n	152f0 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0xe8>
   152d2:	7858      	ldrb	r0, [r3, #1]
   152d4:	f000 00c0 	and.w	r0, r0, #192	; 0xc0
   152d8:	2880      	cmp	r0, #128	; 0x80
   152da:	bf08      	it	eq
   152dc:	3101      	addeq	r1, #1
   152de:	f1bc 0f02 	cmp.w	ip, #2
   152e2:	d005      	beq.n	152f0 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0xe8>
   152e4:	7898      	ldrb	r0, [r3, #2]
   152e6:	f000 00c0 	and.w	r0, r0, #192	; 0xc0
   152ea:	2880      	cmp	r0, #128	; 0x80
   152ec:	bf08      	it	eq
   152ee:	3101      	addeq	r1, #1
   152f0:	eb09 000a 	add.w	r0, r9, sl
   152f4:	eba0 0901 	sub.w	r9, r0, r1
   152f8:	68a0      	ldr	r0, [r4, #8]
   152fa:	2801      	cmp	r0, #1
   152fc:	d118      	bne.n	15330 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x128>
   152fe:	f8d4 b00c 	ldr.w	fp, [r4, #12]
   15302:	45cb      	cmp	fp, r9
   15304:	d914      	bls.n	15330 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x128>
   15306:	ea5f 700e 	movs.w	r0, lr, lsl #28
   1530a:	d425      	bmi.n	15358 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x150>
   1530c:	9202      	str	r2, [sp, #8]
   1530e:	ebab 0109 	sub.w	r1, fp, r9
   15312:	f894 2030 	ldrb.w	r2, [r4, #48]	; 0x30
   15316:	2000      	movs	r0, #0
   15318:	46a9      	mov	r9, r5
   1531a:	460e      	mov	r6, r1
   1531c:	2a03      	cmp	r2, #3
   1531e:	bf08      	it	eq
   15320:	2201      	moveq	r2, #1
   15322:	e8df f002 	tbb	[pc, r2]
   15326:	023e      	.short	0x023e
   15328:	023b      	.short	0x023b
   1532a:	2600      	movs	r6, #0
   1532c:	4608      	mov	r0, r1
   1532e:	e038      	b.n	153a2 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x19a>
   15330:	4620      	mov	r0, r4
   15332:	4641      	mov	r1, r8
   15334:	4653      	mov	r3, sl
   15336:	f000 f88d 	bl	15454 <_ZN4core3fmt9Formatter12pad_integral12write_prefix17h128bd5e3ca3e5bc3E>
   1533a:	b120      	cbz	r0, 15346 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x13e>
   1533c:	2601      	movs	r6, #1
   1533e:	4630      	mov	r0, r6
   15340:	b003      	add	sp, #12
   15342:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15346:	69e1      	ldr	r1, [r4, #28]
   15348:	463a      	mov	r2, r7
   1534a:	69a0      	ldr	r0, [r4, #24]
   1534c:	68cb      	ldr	r3, [r1, #12]
   1534e:	4629      	mov	r1, r5
   15350:	b003      	add	sp, #12
   15352:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15356:	4718      	bx	r3
   15358:	6860      	ldr	r0, [r4, #4]
   1535a:	2601      	movs	r6, #1
   1535c:	9002      	str	r0, [sp, #8]
   1535e:	2030      	movs	r0, #48	; 0x30
   15360:	f894 1030 	ldrb.w	r1, [r4, #48]	; 0x30
   15364:	4653      	mov	r3, sl
   15366:	6060      	str	r0, [r4, #4]
   15368:	4620      	mov	r0, r4
   1536a:	9101      	str	r1, [sp, #4]
   1536c:	4641      	mov	r1, r8
   1536e:	f884 6030 	strb.w	r6, [r4, #48]	; 0x30
   15372:	f000 f86f 	bl	15454 <_ZN4core3fmt9Formatter12pad_integral12write_prefix17h128bd5e3ca3e5bc3E>
   15376:	2800      	cmp	r0, #0
   15378:	d1e1      	bne.n	1533e <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x136>
   1537a:	f894 2030 	ldrb.w	r2, [r4, #48]	; 0x30
   1537e:	ebab 0109 	sub.w	r1, fp, r9
   15382:	2000      	movs	r0, #0
   15384:	46a9      	mov	r9, r5
   15386:	2a03      	cmp	r2, #3
   15388:	bf08      	it	eq
   1538a:	2201      	moveq	r2, #1
   1538c:	460e      	mov	r6, r1
   1538e:	e8df f002 	tbb	[pc, r2]
   15392:	0235      	.short	0x0235
   15394:	0232      	.short	0x0232
   15396:	2600      	movs	r6, #0
   15398:	4608      	mov	r0, r1
   1539a:	e02f      	b.n	153fc <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x1f4>
   1539c:	0848      	lsrs	r0, r1, #1
   1539e:	3101      	adds	r1, #1
   153a0:	084e      	lsrs	r6, r1, #1
   153a2:	1c45      	adds	r5, r0, #1
   153a4:	3d01      	subs	r5, #1
   153a6:	d007      	beq.n	153b8 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x1b0>
   153a8:	e9d4 0206 	ldrd	r0, r2, [r4, #24]
   153ac:	6861      	ldr	r1, [r4, #4]
   153ae:	6912      	ldr	r2, [r2, #16]
   153b0:	4790      	blx	r2
   153b2:	2800      	cmp	r0, #0
   153b4:	d0f6      	beq.n	153a4 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x19c>
   153b6:	e7c1      	b.n	1533c <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x134>
   153b8:	9a02      	ldr	r2, [sp, #8]
   153ba:	4620      	mov	r0, r4
   153bc:	4641      	mov	r1, r8
   153be:	4653      	mov	r3, sl
   153c0:	f8d4 b004 	ldr.w	fp, [r4, #4]
   153c4:	f000 f846 	bl	15454 <_ZN4core3fmt9Formatter12pad_integral12write_prefix17h128bd5e3ca3e5bc3E>
   153c8:	2800      	cmp	r0, #0
   153ca:	d1b7      	bne.n	1533c <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x134>
   153cc:	e9d4 0106 	ldrd	r0, r1, [r4, #24]
   153d0:	463a      	mov	r2, r7
   153d2:	68cb      	ldr	r3, [r1, #12]
   153d4:	4649      	mov	r1, r9
   153d6:	4798      	blx	r3
   153d8:	2800      	cmp	r0, #0
   153da:	d1af      	bne.n	1533c <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x134>
   153dc:	e9d4 5406 	ldrd	r5, r4, [r4, #24]
   153e0:	1c77      	adds	r7, r6, #1
   153e2:	2601      	movs	r6, #1
   153e4:	3f01      	subs	r7, #1
   153e6:	d02c      	beq.n	15442 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x23a>
   153e8:	6922      	ldr	r2, [r4, #16]
   153ea:	4628      	mov	r0, r5
   153ec:	4659      	mov	r1, fp
   153ee:	4790      	blx	r2
   153f0:	2800      	cmp	r0, #0
   153f2:	d0f7      	beq.n	153e4 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x1dc>
   153f4:	e7a3      	b.n	1533e <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x136>
   153f6:	0848      	lsrs	r0, r1, #1
   153f8:	3101      	adds	r1, #1
   153fa:	084e      	lsrs	r6, r1, #1
   153fc:	1c45      	adds	r5, r0, #1
   153fe:	3d01      	subs	r5, #1
   15400:	d007      	beq.n	15412 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x20a>
   15402:	e9d4 0206 	ldrd	r0, r2, [r4, #24]
   15406:	6861      	ldr	r1, [r4, #4]
   15408:	6912      	ldr	r2, [r2, #16]
   1540a:	4790      	blx	r2
   1540c:	2800      	cmp	r0, #0
   1540e:	d0f6      	beq.n	153fe <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x1f6>
   15410:	e794      	b.n	1533c <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x134>
   15412:	e9d4 0106 	ldrd	r0, r1, [r4, #24]
   15416:	463a      	mov	r2, r7
   15418:	68cb      	ldr	r3, [r1, #12]
   1541a:	4649      	mov	r1, r9
   1541c:	f8d4 8004 	ldr.w	r8, [r4, #4]
   15420:	4798      	blx	r3
   15422:	2800      	cmp	r0, #0
   15424:	f47f af8a 	bne.w	1533c <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x134>
   15428:	e9d4 9506 	ldrd	r9, r5, [r4, #24]
   1542c:	1c77      	adds	r7, r6, #1
   1542e:	2601      	movs	r6, #1
   15430:	3f01      	subs	r7, #1
   15432:	d008      	beq.n	15446 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x23e>
   15434:	692a      	ldr	r2, [r5, #16]
   15436:	4648      	mov	r0, r9
   15438:	4641      	mov	r1, r8
   1543a:	4790      	blx	r2
   1543c:	2800      	cmp	r0, #0
   1543e:	d0f7      	beq.n	15430 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x228>
   15440:	e77d      	b.n	1533e <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x136>
   15442:	2600      	movs	r6, #0
   15444:	e77b      	b.n	1533e <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x136>
   15446:	9801      	ldr	r0, [sp, #4]
   15448:	2600      	movs	r6, #0
   1544a:	f884 0030 	strb.w	r0, [r4, #48]	; 0x30
   1544e:	9802      	ldr	r0, [sp, #8]
   15450:	6060      	str	r0, [r4, #4]
   15452:	e774      	b.n	1533e <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E+0x136>

00015454 <_ZN4core3fmt9Formatter12pad_integral12write_prefix17h128bd5e3ca3e5bc3E>:
   15454:	b570      	push	{r4, r5, r6, lr}
   15456:	461c      	mov	r4, r3
   15458:	4615      	mov	r5, r2
   1545a:	4606      	mov	r6, r0
   1545c:	f5b1 1f88 	cmp.w	r1, #1114112	; 0x110000
   15460:	d006      	beq.n	15470 <_ZN4core3fmt9Formatter12pad_integral12write_prefix17h128bd5e3ca3e5bc3E+0x1c>
   15462:	e9d6 0206 	ldrd	r0, r2, [r6, #24]
   15466:	6912      	ldr	r2, [r2, #16]
   15468:	4790      	blx	r2
   1546a:	b108      	cbz	r0, 15470 <_ZN4core3fmt9Formatter12pad_integral12write_prefix17h128bd5e3ca3e5bc3E+0x1c>
   1546c:	2001      	movs	r0, #1
   1546e:	bd70      	pop	{r4, r5, r6, pc}
   15470:	b13d      	cbz	r5, 15482 <_ZN4core3fmt9Formatter12pad_integral12write_prefix17h128bd5e3ca3e5bc3E+0x2e>
   15472:	e9d6 0106 	ldrd	r0, r1, [r6, #24]
   15476:	4622      	mov	r2, r4
   15478:	68cb      	ldr	r3, [r1, #12]
   1547a:	4629      	mov	r1, r5
   1547c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   15480:	4718      	bx	r3
   15482:	2000      	movs	r0, #0
   15484:	bd70      	pop	{r4, r5, r6, pc}
	...

00015488 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E>:
   15488:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1548c:	b081      	sub	sp, #4
   1548e:	f8d0 e008 	ldr.w	lr, [r0, #8]
   15492:	4682      	mov	sl, r0
   15494:	6900      	ldr	r0, [r0, #16]
   15496:	4691      	mov	r9, r2
   15498:	4688      	mov	r8, r1
   1549a:	f1be 0f01 	cmp.w	lr, #1
   1549e:	d10f      	bne.n	154c0 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x38>
   154a0:	b988      	cbnz	r0, 154c6 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x3e>
   154a2:	f1b9 0f00 	cmp.w	r9, #0
   154a6:	f000 80ab 	beq.w	15600 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x178>
   154aa:	f1a9 0101 	sub.w	r1, r9, #1
   154ae:	f009 0003 	and.w	r0, r9, #3
   154b2:	2903      	cmp	r1, #3
   154b4:	d260      	bcs.n	15578 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0xf0>
   154b6:	2100      	movs	r1, #0
   154b8:	4642      	mov	r2, r8
   154ba:	2800      	cmp	r0, #0
   154bc:	d17c      	bne.n	155b8 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x130>
   154be:	e0a0      	b.n	15602 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x17a>
   154c0:	2800      	cmp	r0, #0
   154c2:	f000 80b3 	beq.w	1562c <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x1a4>
   154c6:	f1b9 0f00 	cmp.w	r9, #0
   154ca:	d04e      	beq.n	1556a <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0xe2>
   154cc:	f8da 0014 	ldr.w	r0, [sl, #20]
   154d0:	eb08 0109 	add.w	r1, r8, r9
   154d4:	2200      	movs	r2, #0
   154d6:	4647      	mov	r7, r8
   154d8:	1c43      	adds	r3, r0, #1
   154da:	4646      	mov	r6, r8
   154dc:	463c      	mov	r4, r7
   154de:	f914 5b01 	ldrsb.w	r5, [r4], #1
   154e2:	f1b5 3fff 	cmp.w	r5, #4294967295	; 0xffffffff
   154e6:	b2e8      	uxtb	r0, r5
   154e8:	dc28      	bgt.n	1553c <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0xb4>
   154ea:	428c      	cmp	r4, r1
   154ec:	d005      	beq.n	154fa <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x72>
   154ee:	787d      	ldrb	r5, [r7, #1]
   154f0:	1cbc      	adds	r4, r7, #2
   154f2:	f005 053f 	and.w	r5, r5, #63	; 0x3f
   154f6:	4627      	mov	r7, r4
   154f8:	e001      	b.n	154fe <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x76>
   154fa:	2500      	movs	r5, #0
   154fc:	460f      	mov	r7, r1
   154fe:	f000 0b1f 	and.w	fp, r0, #31
   15502:	28df      	cmp	r0, #223	; 0xdf
   15504:	d907      	bls.n	15516 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x8e>
   15506:	428f      	cmp	r7, r1
   15508:	d008      	beq.n	1551c <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x94>
   1550a:	f817 4b01 	ldrb.w	r4, [r7], #1
   1550e:	f004 0c3f 	and.w	ip, r4, #63	; 0x3f
   15512:	463c      	mov	r4, r7
   15514:	e005      	b.n	15522 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x9a>
   15516:	ea45 108b 	orr.w	r0, r5, fp, lsl #6
   1551a:	e00f      	b.n	1553c <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0xb4>
   1551c:	f04f 0c00 	mov.w	ip, #0
   15520:	460f      	mov	r7, r1
   15522:	ea4c 1585 	orr.w	r5, ip, r5, lsl #6
   15526:	28f0      	cmp	r0, #240	; 0xf0
   15528:	d306      	bcc.n	15538 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0xb0>
   1552a:	428f      	cmp	r7, r1
   1552c:	d010      	beq.n	15550 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0xc8>
   1552e:	f817 0b01 	ldrb.w	r0, [r7], #1
   15532:	f000 003f 	and.w	r0, r0, #63	; 0x3f
   15536:	e00d      	b.n	15554 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0xcc>
   15538:	ea45 300b 	orr.w	r0, r5, fp, lsl #12
   1553c:	4627      	mov	r7, r4
   1553e:	3b01      	subs	r3, #1
   15540:	d051      	beq.n	155e6 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x15e>
   15542:	1b90      	subs	r0, r2, r6
   15544:	42b9      	cmp	r1, r7
   15546:	eb00 0207 	add.w	r2, r0, r7
   1554a:	463e      	mov	r6, r7
   1554c:	d1c6      	bne.n	154dc <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x54>
   1554e:	e04e      	b.n	155ee <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x166>
   15550:	2000      	movs	r0, #0
   15552:	4627      	mov	r7, r4
   15554:	f44f 14e0 	mov.w	r4, #1835008	; 0x1c0000
   15558:	ea04 448b 	and.w	r4, r4, fp, lsl #18
   1555c:	ea44 1585 	orr.w	r5, r4, r5, lsl #6
   15560:	4428      	add	r0, r5
   15562:	f5b0 1f88 	cmp.w	r0, #1114112	; 0x110000
   15566:	d1ea      	bne.n	1553e <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0xb6>
   15568:	e041      	b.n	155ee <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x166>
   1556a:	2200      	movs	r2, #0
   1556c:	f1be 0f00 	cmp.w	lr, #0
   15570:	d141      	bne.n	155f6 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x16e>
   15572:	e9da 0106 	ldrd	r0, r1, [sl, #24]
   15576:	e05e      	b.n	15636 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x1ae>
   15578:	eba0 0309 	sub.w	r3, r0, r9
   1557c:	2100      	movs	r1, #0
   1557e:	4642      	mov	r2, r8
   15580:	7817      	ldrb	r7, [r2, #0]
   15582:	7856      	ldrb	r6, [r2, #1]
   15584:	f007 07c0 	and.w	r7, r7, #192	; 0xc0
   15588:	7895      	ldrb	r5, [r2, #2]
   1558a:	78d4      	ldrb	r4, [r2, #3]
   1558c:	2f80      	cmp	r7, #128	; 0x80
   1558e:	f006 07c0 	and.w	r7, r6, #192	; 0xc0
   15592:	bf08      	it	eq
   15594:	3101      	addeq	r1, #1
   15596:	2f80      	cmp	r7, #128	; 0x80
   15598:	f005 07c0 	and.w	r7, r5, #192	; 0xc0
   1559c:	bf08      	it	eq
   1559e:	3101      	addeq	r1, #1
   155a0:	2f80      	cmp	r7, #128	; 0x80
   155a2:	f004 07c0 	and.w	r7, r4, #192	; 0xc0
   155a6:	bf08      	it	eq
   155a8:	3101      	addeq	r1, #1
   155aa:	2f80      	cmp	r7, #128	; 0x80
   155ac:	bf08      	it	eq
   155ae:	3101      	addeq	r1, #1
   155b0:	3204      	adds	r2, #4
   155b2:	3304      	adds	r3, #4
   155b4:	d1e4      	bne.n	15580 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0xf8>
   155b6:	b320      	cbz	r0, 15602 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x17a>
   155b8:	7813      	ldrb	r3, [r2, #0]
   155ba:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   155be:	2b80      	cmp	r3, #128	; 0x80
   155c0:	bf08      	it	eq
   155c2:	3101      	addeq	r1, #1
   155c4:	2801      	cmp	r0, #1
   155c6:	d01c      	beq.n	15602 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x17a>
   155c8:	7853      	ldrb	r3, [r2, #1]
   155ca:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   155ce:	2b80      	cmp	r3, #128	; 0x80
   155d0:	bf08      	it	eq
   155d2:	3101      	addeq	r1, #1
   155d4:	2802      	cmp	r0, #2
   155d6:	d014      	beq.n	15602 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x17a>
   155d8:	7890      	ldrb	r0, [r2, #2]
   155da:	f000 00c0 	and.w	r0, r0, #192	; 0xc0
   155de:	2880      	cmp	r0, #128	; 0x80
   155e0:	bf08      	it	eq
   155e2:	3101      	addeq	r1, #1
   155e4:	e00d      	b.n	15602 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x17a>
   155e6:	f5b0 1f88 	cmp.w	r0, #1114112	; 0x110000
   155ea:	f040 8077 	bne.w	156dc <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x254>
   155ee:	464a      	mov	r2, r9
   155f0:	f1be 0f00 	cmp.w	lr, #0
   155f4:	d0bd      	beq.n	15572 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0xea>
   155f6:	4691      	mov	r9, r2
   155f8:	f1b9 0f00 	cmp.w	r9, #0
   155fc:	f47f af55 	bne.w	154aa <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x22>
   15600:	2100      	movs	r1, #0
   15602:	f8da 000c 	ldr.w	r0, [sl, #12]
   15606:	eba9 0101 	sub.w	r1, r9, r1
   1560a:	4281      	cmp	r1, r0
   1560c:	d20e      	bcs.n	1562c <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x1a4>
   1560e:	f1b9 0f00 	cmp.w	r9, #0
   15612:	d016      	beq.n	15642 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x1ba>
   15614:	f1a9 0101 	sub.w	r1, r9, #1
   15618:	f009 0c03 	and.w	ip, r9, #3
   1561c:	2903      	cmp	r1, #3
   1561e:	d212      	bcs.n	15646 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x1be>
   15620:	2100      	movs	r1, #0
   15622:	4643      	mov	r3, r8
   15624:	f1bc 0f00 	cmp.w	ip, #0
   15628:	d12f      	bne.n	1568a <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x202>
   1562a:	e046      	b.n	156ba <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x232>
   1562c:	f8da 101c 	ldr.w	r1, [sl, #28]
   15630:	464a      	mov	r2, r9
   15632:	f8da 0018 	ldr.w	r0, [sl, #24]
   15636:	68cb      	ldr	r3, [r1, #12]
   15638:	4641      	mov	r1, r8
   1563a:	b001      	add	sp, #4
   1563c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15640:	4718      	bx	r3
   15642:	2100      	movs	r1, #0
   15644:	e039      	b.n	156ba <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x232>
   15646:	ebac 0709 	sub.w	r7, ip, r9
   1564a:	2100      	movs	r1, #0
   1564c:	4643      	mov	r3, r8
   1564e:	781e      	ldrb	r6, [r3, #0]
   15650:	785d      	ldrb	r5, [r3, #1]
   15652:	f006 06c0 	and.w	r6, r6, #192	; 0xc0
   15656:	789c      	ldrb	r4, [r3, #2]
   15658:	78da      	ldrb	r2, [r3, #3]
   1565a:	2e80      	cmp	r6, #128	; 0x80
   1565c:	f005 06c0 	and.w	r6, r5, #192	; 0xc0
   15660:	bf08      	it	eq
   15662:	3101      	addeq	r1, #1
   15664:	2e80      	cmp	r6, #128	; 0x80
   15666:	f004 06c0 	and.w	r6, r4, #192	; 0xc0
   1566a:	bf08      	it	eq
   1566c:	3101      	addeq	r1, #1
   1566e:	2e80      	cmp	r6, #128	; 0x80
   15670:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
   15674:	bf08      	it	eq
   15676:	3101      	addeq	r1, #1
   15678:	2a80      	cmp	r2, #128	; 0x80
   1567a:	bf08      	it	eq
   1567c:	3101      	addeq	r1, #1
   1567e:	3304      	adds	r3, #4
   15680:	3704      	adds	r7, #4
   15682:	d1e4      	bne.n	1564e <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x1c6>
   15684:	f1bc 0f00 	cmp.w	ip, #0
   15688:	d017      	beq.n	156ba <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x232>
   1568a:	781a      	ldrb	r2, [r3, #0]
   1568c:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
   15690:	2a80      	cmp	r2, #128	; 0x80
   15692:	bf08      	it	eq
   15694:	3101      	addeq	r1, #1
   15696:	f1bc 0f01 	cmp.w	ip, #1
   1569a:	d00e      	beq.n	156ba <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x232>
   1569c:	785a      	ldrb	r2, [r3, #1]
   1569e:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
   156a2:	2a80      	cmp	r2, #128	; 0x80
   156a4:	bf08      	it	eq
   156a6:	3101      	addeq	r1, #1
   156a8:	f1bc 0f02 	cmp.w	ip, #2
   156ac:	d005      	beq.n	156ba <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x232>
   156ae:	789a      	ldrb	r2, [r3, #2]
   156b0:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
   156b4:	2a80      	cmp	r2, #128	; 0x80
   156b6:	bf08      	it	eq
   156b8:	3101      	addeq	r1, #1
   156ba:	f89a 3030 	ldrb.w	r3, [sl, #48]	; 0x30
   156be:	eba1 0109 	sub.w	r1, r1, r9
   156c2:	4401      	add	r1, r0
   156c4:	2000      	movs	r0, #0
   156c6:	1eda      	subs	r2, r3, #3
   156c8:	bf18      	it	ne
   156ca:	461a      	movne	r2, r3
   156cc:	460e      	mov	r6, r1
   156ce:	e8df f002 	tbb	[pc, r2]
   156d2:	020e      	.short	0x020e
   156d4:	020b      	.short	0x020b
   156d6:	2600      	movs	r6, #0
   156d8:	4608      	mov	r0, r1
   156da:	e008      	b.n	156ee <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x266>
   156dc:	2a00      	cmp	r2, #0
   156de:	bf18      	it	ne
   156e0:	454a      	cmpne	r2, r9
   156e2:	d12c      	bne.n	1573e <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x2b6>
   156e4:	4640      	mov	r0, r8
   156e6:	e033      	b.n	15750 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x2c8>
   156e8:	0848      	lsrs	r0, r1, #1
   156ea:	3101      	adds	r1, #1
   156ec:	084e      	lsrs	r6, r1, #1
   156ee:	1c44      	adds	r4, r0, #1
   156f0:	3c01      	subs	r4, #1
   156f2:	d008      	beq.n	15706 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x27e>
   156f4:	e9da 0206 	ldrd	r0, r2, [sl, #24]
   156f8:	f8da 1004 	ldr.w	r1, [sl, #4]
   156fc:	6912      	ldr	r2, [r2, #16]
   156fe:	4790      	blx	r2
   15700:	2800      	cmp	r0, #0
   15702:	d0f5      	beq.n	156f0 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x268>
   15704:	e013      	b.n	1572e <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x2a6>
   15706:	e9da 0106 	ldrd	r0, r1, [sl, #24]
   1570a:	464a      	mov	r2, r9
   1570c:	68cb      	ldr	r3, [r1, #12]
   1570e:	4641      	mov	r1, r8
   15710:	f8da 7004 	ldr.w	r7, [sl, #4]
   15714:	4798      	blx	r3
   15716:	b950      	cbnz	r0, 1572e <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x2a6>
   15718:	e9da 4506 	ldrd	r4, r5, [sl, #24]
   1571c:	3601      	adds	r6, #1
   1571e:	3e01      	subs	r6, #1
   15720:	d009      	beq.n	15736 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x2ae>
   15722:	692a      	ldr	r2, [r5, #16]
   15724:	4620      	mov	r0, r4
   15726:	4639      	mov	r1, r7
   15728:	4790      	blx	r2
   1572a:	2800      	cmp	r0, #0
   1572c:	d0f7      	beq.n	1571e <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x296>
   1572e:	2001      	movs	r0, #1
   15730:	b001      	add	sp, #4
   15732:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15736:	2000      	movs	r0, #0
   15738:	b001      	add	sp, #4
   1573a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1573e:	454a      	cmp	r2, r9
   15740:	d204      	bcs.n	1574c <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x2c4>
   15742:	f918 0002 	ldrsb.w	r0, [r8, r2]
   15746:	f110 0f40 	cmn.w	r0, #64	; 0x40
   1574a:	dacb      	bge.n	156e4 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x25c>
   1574c:	2000      	movs	r0, #0
   1574e:	2200      	movs	r2, #0
   15750:	2800      	cmp	r0, #0
   15752:	bf0c      	ite	eq
   15754:	464a      	moveq	r2, r9
   15756:	4680      	movne	r8, r0
   15758:	f1be 0f00 	cmp.w	lr, #0
   1575c:	f47f af4b 	bne.w	155f6 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0x16e>
   15760:	e707      	b.n	15572 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E+0xea>

00015762 <_ZN4core3fmt9Formatter15debug_lower_hex17hd5a179b4f32396d1E>:
   15762:	7800      	ldrb	r0, [r0, #0]
   15764:	f3c0 1000 	ubfx	r0, r0, #4, #1
   15768:	4770      	bx	lr

0001576a <_ZN4core3fmt9Formatter15debug_upper_hex17h16c8a6c8a304dceeE>:
   1576a:	7800      	ldrb	r0, [r0, #0]
   1576c:	f3c0 1040 	ubfx	r0, r0, #5, #1
   15770:	4770      	bx	lr

00015772 <_ZN4core3fmt9Formatter11debug_tuple17hf6765ecb88050890E>:
   15772:	b570      	push	{r4, r5, r6, lr}
   15774:	460d      	mov	r5, r1
   15776:	4606      	mov	r6, r0
   15778:	e9d1 0106 	ldrd	r0, r1, [r1, #24]
   1577c:	461c      	mov	r4, r3
   1577e:	68cb      	ldr	r3, [r1, #12]
   15780:	4611      	mov	r1, r2
   15782:	4622      	mov	r2, r4
   15784:	4798      	blx	r3
   15786:	7230      	strb	r0, [r6, #8]
   15788:	fab4 f084 	clz	r0, r4
   1578c:	0940      	lsrs	r0, r0, #5
   1578e:	7270      	strb	r0, [r6, #9]
   15790:	2000      	movs	r0, #0
   15792:	e9c6 5000 	strd	r5, r0, [r6]
   15796:	bd70      	pop	{r4, r5, r6, pc}

00015798 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17h78e97941b68807b1E>:
   15798:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1579c:	b085      	sub	sp, #20
   1579e:	460c      	mov	r4, r1
   157a0:	4605      	mov	r5, r0
   157a2:	e9d1 0106 	ldrd	r0, r1, [r1, #24]
   157a6:	690a      	ldr	r2, [r1, #16]
   157a8:	2127      	movs	r1, #39	; 0x27
   157aa:	4790      	blx	r2
   157ac:	b118      	cbz	r0, 157b6 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17h78e97941b68807b1E+0x1e>
   157ae:	2001      	movs	r0, #1
   157b0:	b005      	add	sp, #20
   157b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   157b6:	6829      	ldr	r1, [r5, #0]
   157b8:	a801      	add	r0, sp, #4
   157ba:	2201      	movs	r2, #1
   157bc:	f7ff f91c 	bl	149f8 <_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h24e62ae33d04dcb5E>
   157c0:	e9dd 6501 	ldrd	r6, r5, [sp, #4]
   157c4:	f04f 081c 	mov.w	r8, #28
   157c8:	f8dd 900c 	ldr.w	r9, [sp, #12]
   157cc:	f89d 7010 	ldrb.w	r7, [sp, #16]
   157d0:	e005      	b.n	157de <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17h78e97941b68807b1E+0x46>
   157d2:	e9d4 0206 	ldrd	r0, r2, [r4, #24]
   157d6:	6912      	ldr	r2, [r2, #16]
   157d8:	4790      	blx	r2
   157da:	2800      	cmp	r0, #0
   157dc:	d1e7      	bne.n	157ae <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17h78e97941b68807b1E+0x16>
   157de:	4630      	mov	r0, r6
   157e0:	2601      	movs	r6, #1
   157e2:	215c      	movs	r1, #92	; 0x5c
   157e4:	e8df f000 	tbb	[pc, r0]
   157e8:	09020334 	.word	0x09020334
   157ec:	e7f1      	b.n	157d2 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17h78e97941b68807b1E+0x3a>
   157ee:	f5b5 1f88 	cmp.w	r5, #1114112	; 0x110000
   157f2:	d02d      	beq.n	15850 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17h78e97941b68807b1E+0xb8>
   157f4:	2600      	movs	r6, #0
   157f6:	4629      	mov	r1, r5
   157f8:	e7eb      	b.n	157d2 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17h78e97941b68807b1E+0x3a>
   157fa:	b2f8      	uxtb	r0, r7
   157fc:	2704      	movs	r7, #4
   157fe:	2603      	movs	r6, #3
   15800:	215c      	movs	r1, #92	; 0x5c
   15802:	e8df f000 	tbb	[pc, r0]
   15806:	0825      	.short	0x0825
   15808:	0304210c 	.word	0x0304210c
   1580c:	e7e1      	b.n	157d2 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17h78e97941b68807b1E+0x3a>
   1580e:	2603      	movs	r6, #3
   15810:	2175      	movs	r1, #117	; 0x75
   15812:	2703      	movs	r7, #3
   15814:	e7dd      	b.n	157d2 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17h78e97941b68807b1E+0x3a>
   15816:	2700      	movs	r7, #0
   15818:	2603      	movs	r6, #3
   1581a:	217d      	movs	r1, #125	; 0x7d
   1581c:	e7d9      	b.n	157d2 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17h78e97941b68807b1E+0x3a>
   1581e:	ea08 0089 	and.w	r0, r8, r9, lsl #2
   15822:	2702      	movs	r7, #2
   15824:	2603      	movs	r6, #3
   15826:	fa25 f000 	lsr.w	r0, r5, r0
   1582a:	f000 000f 	and.w	r0, r0, #15
   1582e:	f100 0157 	add.w	r1, r0, #87	; 0x57
   15832:	280a      	cmp	r0, #10
   15834:	bf38      	it	cc
   15836:	f100 0130 	addcc.w	r1, r0, #48	; 0x30
   1583a:	f1b9 0f00 	cmp.w	r9, #0
   1583e:	bf0c      	ite	eq
   15840:	2701      	moveq	r7, #1
   15842:	f1a9 0901 	subne.w	r9, r9, #1
   15846:	e7c4      	b.n	157d2 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17h78e97941b68807b1E+0x3a>
   15848:	2702      	movs	r7, #2
   1584a:	2603      	movs	r6, #3
   1584c:	217b      	movs	r1, #123	; 0x7b
   1584e:	e7c0      	b.n	157d2 <_ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17h78e97941b68807b1E+0x3a>
   15850:	e9d4 0106 	ldrd	r0, r1, [r4, #24]
   15854:	690a      	ldr	r2, [r1, #16]
   15856:	2127      	movs	r1, #39	; 0x27
   15858:	b005      	add	sp, #20
   1585a:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1585e:	4710      	bx	r2

00015860 <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE>:
   15860:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   15864:	b081      	sub	sp, #4
   15866:	f011 0303 	ands.w	r3, r1, #3
   1586a:	4684      	mov	ip, r0
   1586c:	f04f 0000 	mov.w	r0, #0
   15870:	bf18      	it	ne
   15872:	f1d3 0e04 	rsbsne	lr, r3, #4
   15876:	d159      	bne.n	1592c <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE+0xcc>
   15878:	fa5f fc8c 	uxtb.w	ip, ip
   1587c:	2a08      	cmp	r2, #8
   1587e:	d31d      	bcc.n	158bc <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE+0x5c>
   15880:	f1a2 0308 	sub.w	r3, r2, #8
   15884:	4298      	cmp	r0, r3
   15886:	d819      	bhi.n	158bc <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE+0x5c>
   15888:	f04f 3701 	mov.w	r7, #16843009	; 0x1010101
   1588c:	fb0c f607 	mul.w	r6, ip, r7
   15890:	580f      	ldr	r7, [r1, r0]
   15892:	180d      	adds	r5, r1, r0
   15894:	686d      	ldr	r5, [r5, #4]
   15896:	4077      	eors	r7, r6
   15898:	f1a7 3401 	sub.w	r4, r7, #16843009	; 0x1010101
   1589c:	4075      	eors	r5, r6
   1589e:	ea24 0707 	bic.w	r7, r4, r7
   158a2:	f1a5 3401 	sub.w	r4, r5, #16843009	; 0x1010101
   158a6:	ea24 0505 	bic.w	r5, r4, r5
   158aa:	432f      	orrs	r7, r5
   158ac:	f017 3f80 	tst.w	r7, #2155905152	; 0x80808080
   158b0:	d102      	bne.n	158b8 <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE+0x58>
   158b2:	3008      	adds	r0, #8
   158b4:	4298      	cmp	r0, r3
   158b6:	d9eb      	bls.n	15890 <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE+0x30>
   158b8:	4290      	cmp	r0, r2
   158ba:	d875      	bhi.n	159a8 <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE+0x148>
   158bc:	180b      	adds	r3, r1, r0
   158be:	eb01 0e02 	add.w	lr, r1, r2
   158c2:	1a11      	subs	r1, r2, r0
   158c4:	2200      	movs	r2, #0
   158c6:	b371      	cbz	r1, 15926 <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE+0xc6>
   158c8:	461c      	mov	r4, r3
   158ca:	f814 5b01 	ldrb.w	r5, [r4], #1
   158ce:	ebb5 060c 	subs.w	r6, r5, ip
   158d2:	bf18      	it	ne
   158d4:	2601      	movne	r6, #1
   158d6:	4432      	add	r2, r6
   158d8:	4565      	cmp	r5, ip
   158da:	d021      	beq.n	15920 <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE+0xc0>
   158dc:	4574      	cmp	r4, lr
   158de:	d022      	beq.n	15926 <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE+0xc6>
   158e0:	785c      	ldrb	r4, [r3, #1]
   158e2:	ebb4 050c 	subs.w	r5, r4, ip
   158e6:	bf18      	it	ne
   158e8:	2501      	movne	r5, #1
   158ea:	442a      	add	r2, r5
   158ec:	4564      	cmp	r4, ip
   158ee:	d017      	beq.n	15920 <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE+0xc0>
   158f0:	1c9c      	adds	r4, r3, #2
   158f2:	4574      	cmp	r4, lr
   158f4:	d017      	beq.n	15926 <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE+0xc6>
   158f6:	789c      	ldrb	r4, [r3, #2]
   158f8:	ebb4 050c 	subs.w	r5, r4, ip
   158fc:	bf18      	it	ne
   158fe:	2501      	movne	r5, #1
   15900:	442a      	add	r2, r5
   15902:	4564      	cmp	r4, ip
   15904:	d00c      	beq.n	15920 <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE+0xc0>
   15906:	1cdc      	adds	r4, r3, #3
   15908:	4574      	cmp	r4, lr
   1590a:	d00c      	beq.n	15926 <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE+0xc6>
   1590c:	78dc      	ldrb	r4, [r3, #3]
   1590e:	3904      	subs	r1, #4
   15910:	3304      	adds	r3, #4
   15912:	ebb4 050c 	subs.w	r5, r4, ip
   15916:	bf18      	it	ne
   15918:	2501      	movne	r5, #1
   1591a:	442a      	add	r2, r5
   1591c:	4564      	cmp	r4, ip
   1591e:	d1d2      	bne.n	158c6 <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE+0x66>
   15920:	2101      	movs	r1, #1
   15922:	1813      	adds	r3, r2, r0
   15924:	e039      	b.n	1599a <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE+0x13a>
   15926:	2100      	movs	r1, #0
   15928:	1813      	adds	r3, r2, r0
   1592a:	e036      	b.n	1599a <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE+0x13a>
   1592c:	4596      	cmp	lr, r2
   1592e:	bf88      	it	hi
   15930:	4696      	movhi	lr, r2
   15932:	eb01 080e 	add.w	r8, r1, lr
   15936:	2300      	movs	r3, #0
   15938:	46f1      	mov	r9, lr
   1593a:	460d      	mov	r5, r1
   1593c:	f1b9 0f00 	cmp.w	r9, #0
   15940:	d030      	beq.n	159a4 <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE+0x144>
   15942:	462f      	mov	r7, r5
   15944:	fa5f f68c 	uxtb.w	r6, ip
   15948:	f817 0b01 	ldrb.w	r0, [r7], #1
   1594c:	1b84      	subs	r4, r0, r6
   1594e:	bf18      	it	ne
   15950:	2401      	movne	r4, #1
   15952:	4423      	add	r3, r4
   15954:	42b0      	cmp	r0, r6
   15956:	d01f      	beq.n	15998 <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE+0x138>
   15958:	4547      	cmp	r7, r8
   1595a:	d023      	beq.n	159a4 <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE+0x144>
   1595c:	7868      	ldrb	r0, [r5, #1]
   1595e:	1b84      	subs	r4, r0, r6
   15960:	bf18      	it	ne
   15962:	2401      	movne	r4, #1
   15964:	4423      	add	r3, r4
   15966:	42b0      	cmp	r0, r6
   15968:	d016      	beq.n	15998 <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE+0x138>
   1596a:	1ca8      	adds	r0, r5, #2
   1596c:	4540      	cmp	r0, r8
   1596e:	d019      	beq.n	159a4 <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE+0x144>
   15970:	78a8      	ldrb	r0, [r5, #2]
   15972:	1b84      	subs	r4, r0, r6
   15974:	bf18      	it	ne
   15976:	2401      	movne	r4, #1
   15978:	4423      	add	r3, r4
   1597a:	42b0      	cmp	r0, r6
   1597c:	d00c      	beq.n	15998 <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE+0x138>
   1597e:	1ce8      	adds	r0, r5, #3
   15980:	4540      	cmp	r0, r8
   15982:	d00f      	beq.n	159a4 <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE+0x144>
   15984:	78e8      	ldrb	r0, [r5, #3]
   15986:	f1a9 0904 	sub.w	r9, r9, #4
   1598a:	3504      	adds	r5, #4
   1598c:	1b84      	subs	r4, r0, r6
   1598e:	bf18      	it	ne
   15990:	2401      	movne	r4, #1
   15992:	4423      	add	r3, r4
   15994:	42b0      	cmp	r0, r6
   15996:	d1d1      	bne.n	1593c <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE+0xdc>
   15998:	2101      	movs	r1, #1
   1599a:	4608      	mov	r0, r1
   1599c:	4619      	mov	r1, r3
   1599e:	b001      	add	sp, #4
   159a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   159a4:	4670      	mov	r0, lr
   159a6:	e767      	b.n	15878 <_ZN4core5slice6memchr6memchr17h600cdbaaef35c5feE+0x18>
   159a8:	4611      	mov	r1, r2
   159aa:	f000 f823 	bl	159f4 <_ZN4core5slice22slice_index_order_fail17h87a4944411ec7c0eE>
   159ae:	defe      	udf	#254	; 0xfe

000159b0 <_ZN4core5slice20slice_index_len_fail17h8346664e6cc144e9E>:
   159b0:	b08c      	sub	sp, #48	; 0x30
   159b2:	e9cd 0100 	strd	r0, r1, [sp]
   159b6:	2002      	movs	r0, #2
   159b8:	a908      	add	r1, sp, #32
   159ba:	9007      	str	r0, [sp, #28]
   159bc:	9106      	str	r1, [sp, #24]
   159be:	2100      	movs	r1, #0
   159c0:	9105      	str	r1, [sp, #20]
   159c2:	e9cd 0103 	strd	r0, r1, [sp, #12]
   159c6:	f64e 0008 	movw	r0, #59400	; 0xe808
   159ca:	f2c0 0001 	movt	r0, #1
   159ce:	a901      	add	r1, sp, #4
   159d0:	9002      	str	r0, [sp, #8]
   159d2:	f246 509b 	movw	r0, #26011	; 0x659b
   159d6:	f2c0 0001 	movt	r0, #1
   159da:	900b      	str	r0, [sp, #44]	; 0x2c
   159dc:	e9cd 0109 	strd	r0, r1, [sp, #36]	; 0x24
   159e0:	4668      	mov	r0, sp
   159e2:	f64e 0118 	movw	r1, #59416	; 0xe818
   159e6:	9008      	str	r0, [sp, #32]
   159e8:	a802      	add	r0, sp, #8
   159ea:	f2c0 0101 	movt	r1, #1
   159ee:	f7ff f90e 	bl	14c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>
   159f2:	defe      	udf	#254	; 0xfe

000159f4 <_ZN4core5slice22slice_index_order_fail17h87a4944411ec7c0eE>:
   159f4:	b08c      	sub	sp, #48	; 0x30
   159f6:	e9cd 0100 	strd	r0, r1, [sp]
   159fa:	2002      	movs	r0, #2
   159fc:	a908      	add	r1, sp, #32
   159fe:	9007      	str	r0, [sp, #28]
   15a00:	9106      	str	r1, [sp, #24]
   15a02:	2100      	movs	r1, #0
   15a04:	9105      	str	r1, [sp, #20]
   15a06:	e9cd 0103 	strd	r0, r1, [sp, #12]
   15a0a:	f64e 004c 	movw	r0, #59468	; 0xe84c
   15a0e:	f2c0 0001 	movt	r0, #1
   15a12:	a901      	add	r1, sp, #4
   15a14:	9002      	str	r0, [sp, #8]
   15a16:	f246 509b 	movw	r0, #26011	; 0x659b
   15a1a:	f2c0 0001 	movt	r0, #1
   15a1e:	900b      	str	r0, [sp, #44]	; 0x2c
   15a20:	e9cd 0109 	strd	r0, r1, [sp, #36]	; 0x24
   15a24:	4668      	mov	r0, sp
   15a26:	f64e 015c 	movw	r1, #59484	; 0xe85c
   15a2a:	9008      	str	r0, [sp, #32]
   15a2c:	a802      	add	r0, sp, #8
   15a2e:	f2c0 0101 	movt	r1, #1
   15a32:	f7ff f8ec 	bl	14c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>
   15a36:	defe      	udf	#254	; 0xfe

00015a38 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE>:
   15a38:	b09a      	sub	sp, #104	; 0x68
   15a3a:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
   15a3e:	e9cd 2300 	strd	r2, r3, [sp]
   15a42:	d802      	bhi.n	15a4a <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x12>
   15a44:	2501      	movs	r5, #1
   15a46:	468c      	mov	ip, r1
   15a48:	e03e      	b.n	15ac8 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x90>
   15a4a:	f1c1 0e00 	rsb	lr, r1, #0
   15a4e:	f44f 7c80 	mov.w	ip, #256	; 0x100
   15a52:	458c      	cmp	ip, r1
   15a54:	d205      	bcs.n	15a62 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x2a>
   15a56:	f910 400c 	ldrsb.w	r4, [r0, ip]
   15a5a:	f114 0f41 	cmn.w	r4, #65	; 0x41
   15a5e:	f300 80f1 	bgt.w	15c44 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x20c>
   15a62:	eb0e 040c 	add.w	r4, lr, ip
   15a66:	f1ac 0601 	sub.w	r6, ip, #1
   15a6a:	2c01      	cmp	r4, #1
   15a6c:	d02a      	beq.n	15ac4 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x8c>
   15a6e:	428e      	cmp	r6, r1
   15a70:	d206      	bcs.n	15a80 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x48>
   15a72:	eb00 050c 	add.w	r5, r0, ip
   15a76:	f915 5c01 	ldrsb.w	r5, [r5, #-1]
   15a7a:	f115 0f41 	cmn.w	r5, #65	; 0x41
   15a7e:	dc21      	bgt.n	15ac4 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x8c>
   15a80:	f1ac 0602 	sub.w	r6, ip, #2
   15a84:	2c02      	cmp	r4, #2
   15a86:	d01d      	beq.n	15ac4 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x8c>
   15a88:	428e      	cmp	r6, r1
   15a8a:	d206      	bcs.n	15a9a <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x62>
   15a8c:	eb00 050c 	add.w	r5, r0, ip
   15a90:	f915 5c02 	ldrsb.w	r5, [r5, #-2]
   15a94:	f115 0f41 	cmn.w	r5, #65	; 0x41
   15a98:	dc14      	bgt.n	15ac4 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x8c>
   15a9a:	f1ac 0603 	sub.w	r6, ip, #3
   15a9e:	2c03      	cmp	r4, #3
   15aa0:	d010      	beq.n	15ac4 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x8c>
   15aa2:	428e      	cmp	r6, r1
   15aa4:	d206      	bcs.n	15ab4 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x7c>
   15aa6:	eb00 050c 	add.w	r5, r0, ip
   15aaa:	f915 5c03 	ldrsb.w	r5, [r5, #-3]
   15aae:	f115 0f41 	cmn.w	r5, #65	; 0x41
   15ab2:	dc07      	bgt.n	15ac4 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x8c>
   15ab4:	f1bc 0c04 	subs.w	ip, ip, #4
   15ab8:	f04f 0500 	mov.w	r5, #0
   15abc:	d004      	beq.n	15ac8 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x90>
   15abe:	2c04      	cmp	r4, #4
   15ac0:	d1c7      	bne.n	15a52 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x1a>
   15ac2:	e001      	b.n	15ac8 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x90>
   15ac4:	2500      	movs	r5, #0
   15ac6:	46b4      	mov	ip, r6
   15ac8:	2605      	movs	r6, #5
   15aca:	2d00      	cmp	r5, #0
   15acc:	f64e 152a 	movw	r5, #59690	; 0xe92a
   15ad0:	e9cd 0c02 	strd	r0, ip, [sp, #8]
   15ad4:	bf18      	it	ne
   15ad6:	2600      	movne	r6, #0
   15ad8:	9605      	str	r6, [sp, #20]
   15ada:	f24e 46c4 	movw	r6, #58564	; 0xe4c4
   15ade:	f2c0 0501 	movt	r5, #1
   15ae2:	f2c0 0601 	movt	r6, #1
   15ae6:	bf18      	it	ne
   15ae8:	4635      	movne	r5, r6
   15aea:	428a      	cmp	r2, r1
   15aec:	9504      	str	r5, [sp, #16]
   15aee:	bf98      	it	ls
   15af0:	428b      	cmpls	r3, r1
   15af2:	d926      	bls.n	15b42 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x10a>
   15af4:	428a      	cmp	r2, r1
   15af6:	f04f 0003 	mov.w	r0, #3
   15afa:	a910      	add	r1, sp, #64	; 0x40
   15afc:	bf88      	it	hi
   15afe:	4613      	movhi	r3, r2
   15b00:	900f      	str	r0, [sp, #60]	; 0x3c
   15b02:	910e      	str	r1, [sp, #56]	; 0x38
   15b04:	2100      	movs	r1, #0
   15b06:	910d      	str	r1, [sp, #52]	; 0x34
   15b08:	e9cd 010b 	strd	r0, r1, [sp, #44]	; 0x2c
   15b0c:	f64e 1050 	movw	r0, #59728	; 0xe950
   15b10:	f2c0 0001 	movt	r0, #1
   15b14:	a904      	add	r1, sp, #16
   15b16:	900a      	str	r0, [sp, #40]	; 0x28
   15b18:	f246 50af 	movw	r0, #26031	; 0x65af
   15b1c:	f2c0 0001 	movt	r0, #1
   15b20:	9308      	str	r3, [sp, #32]
   15b22:	9015      	str	r0, [sp, #84]	; 0x54
   15b24:	e9cd 0113 	strd	r0, r1, [sp, #76]	; 0x4c
   15b28:	a802      	add	r0, sp, #8
   15b2a:	f64e 1168 	movw	r1, #59752	; 0xe968
   15b2e:	9012      	str	r0, [sp, #72]	; 0x48
   15b30:	f246 509b 	movw	r0, #26011	; 0x659b
   15b34:	f2c0 0101 	movt	r1, #1
   15b38:	f2c0 0001 	movt	r0, #1
   15b3c:	9011      	str	r0, [sp, #68]	; 0x44
   15b3e:	a808      	add	r0, sp, #32
   15b40:	e0de      	b.n	15d00 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x2c8>
   15b42:	429a      	cmp	r2, r3
   15b44:	f200 80e1 	bhi.w	15d0a <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x2d2>
   15b48:	2a00      	cmp	r2, #0
   15b4a:	bf18      	it	ne
   15b4c:	4291      	cmpne	r1, r2
   15b4e:	d15c      	bne.n	15c0a <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x1d2>
   15b50:	461a      	mov	r2, r3
   15b52:	2a00      	cmp	r2, #0
   15b54:	9206      	str	r2, [sp, #24]
   15b56:	bf18      	it	ne
   15b58:	428a      	cmpne	r2, r1
   15b5a:	d103      	bne.n	15b64 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x12c>
   15b5c:	4613      	mov	r3, r2
   15b5e:	428b      	cmp	r3, r1
   15b60:	d148      	bne.n	15bf4 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x1bc>
   15b62:	e03b      	b.n	15bdc <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x1a4>
   15b64:	f1a0 0c01 	sub.w	ip, r0, #1
   15b68:	f101 0e02 	add.w	lr, r1, #2
   15b6c:	1ccc      	adds	r4, r1, #3
   15b6e:	1c4d      	adds	r5, r1, #1
   15b70:	1d0e      	adds	r6, r1, #4
   15b72:	428a      	cmp	r2, r1
   15b74:	d206      	bcs.n	15b84 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x14c>
   15b76:	eb0c 0302 	add.w	r3, ip, r2
   15b7a:	f993 3001 	ldrsb.w	r3, [r3, #1]
   15b7e:	f113 0f41 	cmn.w	r3, #65	; 0x41
   15b82:	dceb      	bgt.n	15b5c <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x124>
   15b84:	1e53      	subs	r3, r2, #1
   15b86:	bf18      	it	ne
   15b88:	4295      	cmpne	r5, r2
   15b8a:	d025      	beq.n	15bd8 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x1a0>
   15b8c:	428b      	cmp	r3, r1
   15b8e:	d204      	bcs.n	15b9a <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x162>
   15b90:	f91c 7002 	ldrsb.w	r7, [ip, r2]
   15b94:	f117 0f41 	cmn.w	r7, #65	; 0x41
   15b98:	dc1e      	bgt.n	15bd8 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x1a0>
   15b9a:	1e93      	subs	r3, r2, #2
   15b9c:	bf18      	it	ne
   15b9e:	4596      	cmpne	lr, r2
   15ba0:	d01a      	beq.n	15bd8 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x1a0>
   15ba2:	428b      	cmp	r3, r1
   15ba4:	d206      	bcs.n	15bb4 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x17c>
   15ba6:	eb0c 0702 	add.w	r7, ip, r2
   15baa:	f917 7c01 	ldrsb.w	r7, [r7, #-1]
   15bae:	f117 0f41 	cmn.w	r7, #65	; 0x41
   15bb2:	dc11      	bgt.n	15bd8 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x1a0>
   15bb4:	1ed3      	subs	r3, r2, #3
   15bb6:	bf18      	it	ne
   15bb8:	4294      	cmpne	r4, r2
   15bba:	d00d      	beq.n	15bd8 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x1a0>
   15bbc:	428b      	cmp	r3, r1
   15bbe:	d206      	bcs.n	15bce <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x196>
   15bc0:	eb0c 0702 	add.w	r7, ip, r2
   15bc4:	f917 7c02 	ldrsb.w	r7, [r7, #-2]
   15bc8:	f117 0f41 	cmn.w	r7, #65	; 0x41
   15bcc:	dc04      	bgt.n	15bd8 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x1a0>
   15bce:	1f13      	subs	r3, r2, #4
   15bd0:	d002      	beq.n	15bd8 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x1a0>
   15bd2:	4296      	cmp	r6, r2
   15bd4:	461a      	mov	r2, r3
   15bd6:	d1cc      	bne.n	15b72 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x13a>
   15bd8:	428b      	cmp	r3, r1
   15bda:	d10b      	bne.n	15bf4 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x1bc>
   15bdc:	f24e 6000 	movw	r0, #58880	; 0xe600
   15be0:	f64e 12b8 	movw	r2, #59832	; 0xe9b8
   15be4:	f2c0 0001 	movt	r0, #1
   15be8:	f2c0 0201 	movt	r2, #1
   15bec:	212b      	movs	r1, #43	; 0x2b
   15bee:	f7fe ffd8 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   15bf2:	defe      	udf	#254	; 0xfe
   15bf4:	18c5      	adds	r5, r0, r3
   15bf6:	462e      	mov	r6, r5
   15bf8:	f916 4b01 	ldrsb.w	r4, [r6], #1
   15bfc:	f1b4 3fff 	cmp.w	r4, #4294967295	; 0xffffffff
   15c00:	b2e2      	uxtb	r2, r4
   15c02:	dd09      	ble.n	15c18 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x1e0>
   15c04:	9207      	str	r2, [sp, #28]
   15c06:	2101      	movs	r1, #1
   15c08:	e048      	b.n	15c9c <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x264>
   15c0a:	d9a2      	bls.n	15b52 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x11a>
   15c0c:	5686      	ldrsb	r6, [r0, r2]
   15c0e:	f116 0f40 	cmn.w	r6, #64	; 0x40
   15c12:	bfa8      	it	ge
   15c14:	461a      	movge	r2, r3
   15c16:	e79c      	b.n	15b52 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x11a>
   15c18:	4408      	add	r0, r1
   15c1a:	4286      	cmp	r6, r0
   15c1c:	d102      	bne.n	15c24 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x1ec>
   15c1e:	2500      	movs	r5, #0
   15c20:	4606      	mov	r6, r0
   15c22:	e003      	b.n	15c2c <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x1f4>
   15c24:	7869      	ldrb	r1, [r5, #1]
   15c26:	1cae      	adds	r6, r5, #2
   15c28:	f001 053f 	and.w	r5, r1, #63	; 0x3f
   15c2c:	f002 011f 	and.w	r1, r2, #31
   15c30:	2adf      	cmp	r2, #223	; 0xdf
   15c32:	d904      	bls.n	15c3e <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x206>
   15c34:	4286      	cmp	r6, r0
   15c36:	d107      	bne.n	15c48 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x210>
   15c38:	2400      	movs	r4, #0
   15c3a:	4606      	mov	r6, r0
   15c3c:	e008      	b.n	15c50 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x218>
   15c3e:	ea45 1081 	orr.w	r0, r5, r1, lsl #6
   15c42:	e01c      	b.n	15c7e <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x246>
   15c44:	2500      	movs	r5, #0
   15c46:	e73f      	b.n	15ac8 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x90>
   15c48:	f816 4b01 	ldrb.w	r4, [r6], #1
   15c4c:	f004 043f 	and.w	r4, r4, #63	; 0x3f
   15c50:	ea44 1585 	orr.w	r5, r4, r5, lsl #6
   15c54:	2af0      	cmp	r2, #240	; 0xf0
   15c56:	d310      	bcc.n	15c7a <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x242>
   15c58:	f44f 12e0 	mov.w	r2, #1835008	; 0x1c0000
   15c5c:	ea02 4181 	and.w	r1, r2, r1, lsl #18
   15c60:	4286      	cmp	r6, r0
   15c62:	bf1a      	itte	ne
   15c64:	7830      	ldrbne	r0, [r6, #0]
   15c66:	f000 003f 	andne.w	r0, r0, #63	; 0x3f
   15c6a:	2000      	moveq	r0, #0
   15c6c:	ea41 1185 	orr.w	r1, r1, r5, lsl #6
   15c70:	4408      	add	r0, r1
   15c72:	f5b0 1f88 	cmp.w	r0, #1114112	; 0x110000
   15c76:	d102      	bne.n	15c7e <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x246>
   15c78:	e7b0      	b.n	15bdc <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x1a4>
   15c7a:	ea45 3001 	orr.w	r0, r5, r1, lsl #12
   15c7e:	2880      	cmp	r0, #128	; 0x80
   15c80:	9007      	str	r0, [sp, #28]
   15c82:	d201      	bcs.n	15c88 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x250>
   15c84:	2101      	movs	r1, #1
   15c86:	e009      	b.n	15c9c <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x264>
   15c88:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
   15c8c:	d201      	bcs.n	15c92 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x25a>
   15c8e:	2102      	movs	r1, #2
   15c90:	e004      	b.n	15c9c <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x264>
   15c92:	2104      	movs	r1, #4
   15c94:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
   15c98:	bf38      	it	cc
   15c9a:	2103      	movcc	r1, #3
   15c9c:	4419      	add	r1, r3
   15c9e:	aa10      	add	r2, sp, #64	; 0x40
   15ca0:	a808      	add	r0, sp, #32
   15ca2:	e9cd 3108 	strd	r3, r1, [sp, #32]
   15ca6:	2105      	movs	r1, #5
   15ca8:	910f      	str	r1, [sp, #60]	; 0x3c
   15caa:	920e      	str	r2, [sp, #56]	; 0x38
   15cac:	2200      	movs	r2, #0
   15cae:	920d      	str	r2, [sp, #52]	; 0x34
   15cb0:	e9cd 120b 	strd	r1, r2, [sp, #44]	; 0x2c
   15cb4:	f64e 11f4 	movw	r1, #59892	; 0xe9f4
   15cb8:	f2c0 0101 	movt	r1, #1
   15cbc:	aa04      	add	r2, sp, #16
   15cbe:	910a      	str	r1, [sp, #40]	; 0x28
   15cc0:	f246 51af 	movw	r1, #26031	; 0x65af
   15cc4:	f2c0 0101 	movt	r1, #1
   15cc8:	9119      	str	r1, [sp, #100]	; 0x64
   15cca:	e9cd 1217 	strd	r1, r2, [sp, #92]	; 0x5c
   15cce:	a902      	add	r1, sp, #8
   15cd0:	9116      	str	r1, [sp, #88]	; 0x58
   15cd2:	f644 1199 	movw	r1, #18841	; 0x4999
   15cd6:	f2c0 0101 	movt	r1, #1
   15cda:	e9cd 0114 	strd	r0, r1, [sp, #80]	; 0x50
   15cde:	f245 7099 	movw	r0, #22425	; 0x5799
   15ce2:	f2c0 0001 	movt	r0, #1
   15ce6:	f64e 211c 	movw	r1, #59932	; 0xea1c
   15cea:	9013      	str	r0, [sp, #76]	; 0x4c
   15cec:	a807      	add	r0, sp, #28
   15cee:	9012      	str	r0, [sp, #72]	; 0x48
   15cf0:	f246 509b 	movw	r0, #26011	; 0x659b
   15cf4:	f2c0 0001 	movt	r0, #1
   15cf8:	f2c0 0101 	movt	r1, #1
   15cfc:	9011      	str	r0, [sp, #68]	; 0x44
   15cfe:	a806      	add	r0, sp, #24
   15d00:	9010      	str	r0, [sp, #64]	; 0x40
   15d02:	a80a      	add	r0, sp, #40	; 0x28
   15d04:	f7fe ff83 	bl	14c0e <_ZN4core9panicking9panic_fmt17h5a7bfa34ea11a251E>
   15d08:	defe      	udf	#254	; 0xfe
   15d0a:	2004      	movs	r0, #4
   15d0c:	a910      	add	r1, sp, #64	; 0x40
   15d0e:	900f      	str	r0, [sp, #60]	; 0x3c
   15d10:	910e      	str	r1, [sp, #56]	; 0x38
   15d12:	2100      	movs	r1, #0
   15d14:	910d      	str	r1, [sp, #52]	; 0x34
   15d16:	e9cd 010b 	strd	r0, r1, [sp, #44]	; 0x2c
   15d1a:	f64e 1088 	movw	r0, #59784	; 0xe988
   15d1e:	f2c0 0001 	movt	r0, #1
   15d22:	a904      	add	r1, sp, #16
   15d24:	900a      	str	r0, [sp, #40]	; 0x28
   15d26:	f246 50af 	movw	r0, #26031	; 0x65af
   15d2a:	f2c0 0001 	movt	r0, #1
   15d2e:	9017      	str	r0, [sp, #92]	; 0x5c
   15d30:	e9cd 0115 	strd	r0, r1, [sp, #84]	; 0x54
   15d34:	a802      	add	r0, sp, #8
   15d36:	9014      	str	r0, [sp, #80]	; 0x50
   15d38:	f246 509b 	movw	r0, #26011	; 0x659b
   15d3c:	a901      	add	r1, sp, #4
   15d3e:	f2c0 0001 	movt	r0, #1
   15d42:	9013      	str	r0, [sp, #76]	; 0x4c
   15d44:	e9cd 0111 	strd	r0, r1, [sp, #68]	; 0x44
   15d48:	f64e 11a8 	movw	r1, #59816	; 0xe9a8
   15d4c:	4668      	mov	r0, sp
   15d4e:	f2c0 0101 	movt	r1, #1
   15d52:	e7d5      	b.n	15d00 <_ZN4core3str16slice_error_fail17hcca866e859bef9ccE+0x2c8>

00015d54 <_ZN4core7unicode9printable5check17hac556c3839dbb898E>:
   15d54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d58:	b081      	sub	sp, #4
   15d5a:	fa1f fa80 	uxth.w	sl, r0
   15d5e:	b3a2      	cbz	r2, 15dca <_ZN4core7unicode9printable5check17hac556c3839dbb898E+0x76>
   15d60:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
   15d64:	eb01 0842 	add.w	r8, r1, r2, lsl #1
   15d68:	ea4f 291a 	mov.w	r9, sl, lsr #8
   15d6c:	f04f 0e00 	mov.w	lr, #0
   15d70:	784f      	ldrb	r7, [r1, #1]
   15d72:	4672      	mov	r2, lr
   15d74:	780c      	ldrb	r4, [r1, #0]
   15d76:	3102      	adds	r1, #2
   15d78:	44be      	add	lr, r7
   15d7a:	454c      	cmp	r4, r9
   15d7c:	d122      	bne.n	15dc4 <_ZN4core7unicode9printable5check17hac556c3839dbb898E+0x70>
   15d7e:	4596      	cmp	lr, r2
   15d80:	d357      	bcc.n	15e32 <_ZN4core7unicode9printable5check17hac556c3839dbb898E+0xde>
   15d82:	45e6      	cmp	lr, ip
   15d84:	d85a      	bhi.n	15e3c <_ZN4core7unicode9printable5check17hac556c3839dbb898E+0xe8>
   15d86:	189c      	adds	r4, r3, r2
   15d88:	eb04 0b07 	add.w	fp, r4, r7
   15d8c:	b1df      	cbz	r7, 15dc6 <_ZN4core7unicode9printable5check17hac556c3839dbb898E+0x72>
   15d8e:	4625      	mov	r5, r4
   15d90:	b2c6      	uxtb	r6, r0
   15d92:	f815 2b01 	ldrb.w	r2, [r5], #1
   15d96:	42b2      	cmp	r2, r6
   15d98:	d037      	beq.n	15e0a <_ZN4core7unicode9printable5check17hac556c3839dbb898E+0xb6>
   15d9a:	455d      	cmp	r5, fp
   15d9c:	d013      	beq.n	15dc6 <_ZN4core7unicode9printable5check17hac556c3839dbb898E+0x72>
   15d9e:	7862      	ldrb	r2, [r4, #1]
   15da0:	42b2      	cmp	r2, r6
   15da2:	d032      	beq.n	15e0a <_ZN4core7unicode9printable5check17hac556c3839dbb898E+0xb6>
   15da4:	1ca2      	adds	r2, r4, #2
   15da6:	455a      	cmp	r2, fp
   15da8:	d00d      	beq.n	15dc6 <_ZN4core7unicode9printable5check17hac556c3839dbb898E+0x72>
   15daa:	78a2      	ldrb	r2, [r4, #2]
   15dac:	42b2      	cmp	r2, r6
   15dae:	d02c      	beq.n	15e0a <_ZN4core7unicode9printable5check17hac556c3839dbb898E+0xb6>
   15db0:	1ce2      	adds	r2, r4, #3
   15db2:	455a      	cmp	r2, fp
   15db4:	d007      	beq.n	15dc6 <_ZN4core7unicode9printable5check17hac556c3839dbb898E+0x72>
   15db6:	1d22      	adds	r2, r4, #4
   15db8:	78e4      	ldrb	r4, [r4, #3]
   15dba:	3f04      	subs	r7, #4
   15dbc:	42b4      	cmp	r4, r6
   15dbe:	4614      	mov	r4, r2
   15dc0:	d1e4      	bne.n	15d8c <_ZN4core7unicode9printable5check17hac556c3839dbb898E+0x38>
   15dc2:	e022      	b.n	15e0a <_ZN4core7unicode9printable5check17hac556c3839dbb898E+0xb6>
   15dc4:	d801      	bhi.n	15dca <_ZN4core7unicode9printable5check17hac556c3839dbb898E+0x76>
   15dc6:	4541      	cmp	r1, r8
   15dc8:	d1d2      	bne.n	15d70 <_ZN4core7unicode9printable5check17hac556c3839dbb898E+0x1c>
   15dca:	980c      	ldr	r0, [sp, #48]	; 0x30
   15dcc:	b1f8      	cbz	r0, 15e0e <_ZN4core7unicode9printable5check17hac556c3839dbb898E+0xba>
   15dce:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
   15dd0:	1831      	adds	r1, r6, r0
   15dd2:	2001      	movs	r0, #1
   15dd4:	4632      	mov	r2, r6
   15dd6:	f812 3b01 	ldrb.w	r3, [r2], #1
   15dda:	b25f      	sxtb	r7, r3
   15ddc:	2f00      	cmp	r7, #0
   15dde:	d404      	bmi.n	15dea <_ZN4core7unicode9printable5check17hac556c3839dbb898E+0x96>
   15de0:	4616      	mov	r6, r2
   15de2:	ebba 0a03 	subs.w	sl, sl, r3
   15de6:	d50b      	bpl.n	15e00 <_ZN4core7unicode9printable5check17hac556c3839dbb898E+0xac>
   15de8:	e012      	b.n	15e10 <_ZN4core7unicode9printable5check17hac556c3839dbb898E+0xbc>
   15dea:	428a      	cmp	r2, r1
   15dec:	d015      	beq.n	15e1a <_ZN4core7unicode9printable5check17hac556c3839dbb898E+0xc6>
   15dee:	7872      	ldrb	r2, [r6, #1]
   15df0:	f007 037f 	and.w	r3, r7, #127	; 0x7f
   15df4:	3602      	adds	r6, #2
   15df6:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
   15dfa:	ebba 0a03 	subs.w	sl, sl, r3
   15dfe:	d407      	bmi.n	15e10 <_ZN4core7unicode9printable5check17hac556c3839dbb898E+0xbc>
   15e00:	f080 0001 	eor.w	r0, r0, #1
   15e04:	428e      	cmp	r6, r1
   15e06:	d1e5      	bne.n	15dd4 <_ZN4core7unicode9printable5check17hac556c3839dbb898E+0x80>
   15e08:	e002      	b.n	15e10 <_ZN4core7unicode9printable5check17hac556c3839dbb898E+0xbc>
   15e0a:	2000      	movs	r0, #0
   15e0c:	e000      	b.n	15e10 <_ZN4core7unicode9printable5check17hac556c3839dbb898E+0xbc>
   15e0e:	2001      	movs	r0, #1
   15e10:	f000 0001 	and.w	r0, r0, #1
   15e14:	b001      	add	sp, #4
   15e16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e1a:	f24e 6000 	movw	r0, #58880	; 0xe600
   15e1e:	f64e 222c 	movw	r2, #59948	; 0xea2c
   15e22:	f2c0 0001 	movt	r0, #1
   15e26:	f2c0 0201 	movt	r2, #1
   15e2a:	212b      	movs	r1, #43	; 0x2b
   15e2c:	f7fe feb9 	bl	14ba2 <_ZN4core9panicking5panic17h8da07452522b21beE>
   15e30:	defe      	udf	#254	; 0xfe
   15e32:	4610      	mov	r0, r2
   15e34:	4671      	mov	r1, lr
   15e36:	f7ff fddd 	bl	159f4 <_ZN4core5slice22slice_index_order_fail17h87a4944411ec7c0eE>
   15e3a:	defe      	udf	#254	; 0xfe
   15e3c:	4670      	mov	r0, lr
   15e3e:	4661      	mov	r1, ip
   15e40:	f7ff fdb6 	bl	159b0 <_ZN4core5slice20slice_index_len_fail17h8346664e6cc144e9E>
   15e44:	defe      	udf	#254	; 0xfe

00015e46 <_ZN4core7unicode9printable12is_printable17hd3cc4e85a138e855E>:
   15e46:	b580      	push	{r7, lr}
   15e48:	b084      	sub	sp, #16
   15e4a:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
   15e4e:	d214      	bcs.n	15e7a <_ZN4core7unicode9printable12is_printable17hd3cc4e85a138e855E+0x34>
   15e50:	f64e 32b3 	movw	r2, #60339	; 0xebb3
   15e54:	f44f 719d 	mov.w	r1, #314	; 0x13a
   15e58:	f2c0 0201 	movt	r2, #1
   15e5c:	f240 1325 	movw	r3, #293	; 0x125
   15e60:	e9cd 3200 	strd	r3, r2, [sp]
   15e64:	f64e 238e 	movw	r3, #60046	; 0xea8e
   15e68:	9102      	str	r1, [sp, #8]
   15e6a:	f64e 213c 	movw	r1, #59964	; 0xea3c
   15e6e:	f2c0 0101 	movt	r1, #1
   15e72:	f2c0 0301 	movt	r3, #1
   15e76:	2229      	movs	r2, #41	; 0x29
   15e78:	e015      	b.n	15ea6 <_ZN4core7unicode9printable12is_printable17hd3cc4e85a138e855E+0x60>
   15e7a:	f5b0 3f00 	cmp.w	r0, #131072	; 0x20000
   15e7e:	d216      	bcs.n	15eae <_ZN4core7unicode9printable12is_printable17hd3cc4e85a138e855E+0x68>
   15e80:	f64e 52d9 	movw	r2, #60889	; 0xedd9
   15e84:	f44f 71cc 	mov.w	r1, #408	; 0x198
   15e88:	f2c0 0201 	movt	r2, #1
   15e8c:	23a6      	movs	r3, #166	; 0xa6
   15e8e:	e9cd 3200 	strd	r3, r2, [sp]
   15e92:	f64e 5333 	movw	r3, #60723	; 0xed33
   15e96:	9102      	str	r1, [sp, #8]
   15e98:	f64e 41ed 	movw	r1, #60653	; 0xeced
   15e9c:	f2c0 0101 	movt	r1, #1
   15ea0:	f2c0 0301 	movt	r3, #1
   15ea4:	2223      	movs	r2, #35	; 0x23
   15ea6:	f7ff ff55 	bl	15d54 <_ZN4core7unicode9printable5check17hac556c3839dbb898E>
   15eaa:	b004      	add	sp, #16
   15eac:	bd80      	pop	{r7, pc}
   15eae:	f240 51e2 	movw	r1, #1506	; 0x5e2
   15eb2:	f240 62e2 	movw	r2, #1762	; 0x6e2
   15eb6:	f6cf 71fd 	movt	r1, #65533	; 0xfffd
   15eba:	f2c0 020b 	movt	r2, #11
   15ebe:	4401      	add	r1, r0
   15ec0:	4291      	cmp	r1, r2
   15ec2:	d30f      	bcc.n	15ee4 <_ZN4core7unicode9printable12is_printable17hd3cc4e85a138e855E+0x9e>
   15ec4:	f241 411f 	movw	r1, #5151	; 0x141f
   15ec8:	f640 421f 	movw	r2, #3103	; 0xc1f
   15ecc:	f6cf 71fd 	movt	r1, #65533	; 0xfffd
   15ed0:	4401      	add	r1, r0
   15ed2:	4291      	cmp	r1, r2
   15ed4:	bf21      	itttt	cs
   15ed6:	f243 115e 	movwcs	r1, #12638	; 0x315e
   15eda:	f6cf 71fd 	movtcs	r1, #65533	; 0xfffd
   15ede:	4401      	addcs	r1, r0
   15ee0:	290e      	cmpcs	r1, #14
   15ee2:	d202      	bcs.n	15eea <_ZN4core7unicode9printable12is_printable17hd3cc4e85a138e855E+0xa4>
   15ee4:	2000      	movs	r0, #0
   15ee6:	b004      	add	sp, #16
   15ee8:	bd80      	pop	{r7, pc}
   15eea:	f64f 71fe 	movw	r1, #65534	; 0xfffe
   15eee:	f64b 021e 	movw	r2, #47134	; 0xb81e
   15ef2:	f2c0 011f 	movt	r1, #31
   15ef6:	f2c0 0202 	movt	r2, #2
   15efa:	4001      	ands	r1, r0
   15efc:	4291      	cmp	r1, r2
   15efe:	d0f1      	beq.n	15ee4 <_ZN4core7unicode9printable12is_printable17hd3cc4e85a138e855E+0x9e>
   15f00:	f645 1129 	movw	r1, #22825	; 0x5929
   15f04:	f6cf 71fd 	movt	r1, #65533	; 0xfffd
   15f08:	4401      	add	r1, r0
   15f0a:	2929      	cmp	r1, #41	; 0x29
   15f0c:	bf21      	itttt	cs
   15f0e:	f644 01cb 	movwcs	r1, #18635	; 0x48cb
   15f12:	f6cf 71fd 	movtcs	r1, #65533	; 0xfffd
   15f16:	4401      	addcs	r1, r0
   15f18:	290b      	cmpcs	r1, #11
   15f1a:	d3e3      	bcc.n	15ee4 <_ZN4core7unicode9printable12is_printable17hd3cc4e85a138e855E+0x9e>
   15f1c:	f5a0 2060 	sub.w	r0, r0, #917504	; 0xe0000
   15f20:	f64f 620f 	movw	r2, #65039	; 0xfe0f
   15f24:	f5a0 71f8 	sub.w	r1, r0, #496	; 0x1f0
   15f28:	2000      	movs	r0, #0
   15f2a:	f2c0 0202 	movt	r2, #2
   15f2e:	4291      	cmp	r1, r2
   15f30:	bf88      	it	hi
   15f32:	2001      	movhi	r0, #1
   15f34:	b004      	add	sp, #16
   15f36:	bd80      	pop	{r7, pc}

00015f38 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hfcb4a8ce4055cd12E>:
   15f38:	b5b0      	push	{r4, r5, r7, lr}
   15f3a:	b0a2      	sub	sp, #136	; 0x88
   15f3c:	468c      	mov	ip, r1
   15f3e:	6809      	ldr	r1, [r1, #0]
   15f40:	06ca      	lsls	r2, r1, #27
   15f42:	d409      	bmi.n	15f58 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hfcb4a8ce4055cd12E+0x20>
   15f44:	6800      	ldr	r0, [r0, #0]
   15f46:	0689      	lsls	r1, r1, #26
   15f48:	d448      	bmi.n	15fdc <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hfcb4a8ce4055cd12E+0xa4>
   15f4a:	2101      	movs	r1, #1
   15f4c:	4662      	mov	r2, ip
   15f4e:	b022      	add	sp, #136	; 0x88
   15f50:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
   15f54:	f000 ba9a 	b.w	1648c <_ZN4core3fmt3num3imp7fmt_u3217h19c42a593c756fd4E>
   15f58:	6800      	ldr	r0, [r0, #0]
   15f5a:	f10d 0e08 	add.w	lr, sp, #8
   15f5e:	2281      	movs	r2, #129	; 0x81
   15f60:	2300      	movs	r3, #0
   15f62:	f000 010f 	and.w	r1, r0, #15
   15f66:	f101 0457 	add.w	r4, r1, #87	; 0x57
   15f6a:	290a      	cmp	r1, #10
   15f6c:	bf38      	it	cc
   15f6e:	f101 0430 	addcc.w	r4, r1, #48	; 0x30
   15f72:	eb0e 0102 	add.w	r1, lr, r2
   15f76:	ebb3 1f10 	cmp.w	r3, r0, lsr #4
   15f7a:	f801 4c02 	strb.w	r4, [r1, #-2]
   15f7e:	d071      	beq.n	16064 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hfcb4a8ce4055cd12E+0x12c>
   15f80:	0904      	lsrs	r4, r0, #4
   15f82:	f004 040f 	and.w	r4, r4, #15
   15f86:	f104 0557 	add.w	r5, r4, #87	; 0x57
   15f8a:	2c0a      	cmp	r4, #10
   15f8c:	bf38      	it	cc
   15f8e:	f104 0530 	addcc.w	r5, r4, #48	; 0x30
   15f92:	ebb3 2f10 	cmp.w	r3, r0, lsr #8
   15f96:	f801 5c03 	strb.w	r5, [r1, #-3]
   15f9a:	d078      	beq.n	1608e <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hfcb4a8ce4055cd12E+0x156>
   15f9c:	0a04      	lsrs	r4, r0, #8
   15f9e:	f004 040f 	and.w	r4, r4, #15
   15fa2:	f104 0557 	add.w	r5, r4, #87	; 0x57
   15fa6:	2c0a      	cmp	r4, #10
   15fa8:	bf38      	it	cc
   15faa:	f104 0530 	addcc.w	r5, r4, #48	; 0x30
   15fae:	ebb3 3f10 	cmp.w	r3, r0, lsr #12
   15fb2:	f801 5c04 	strb.w	r5, [r1, #-4]
   15fb6:	d072      	beq.n	1609e <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hfcb4a8ce4055cd12E+0x166>
   15fb8:	0b04      	lsrs	r4, r0, #12
   15fba:	3a04      	subs	r2, #4
   15fbc:	f004 040f 	and.w	r4, r4, #15
   15fc0:	f104 0557 	add.w	r5, r4, #87	; 0x57
   15fc4:	2c0a      	cmp	r4, #10
   15fc6:	bf38      	it	cc
   15fc8:	f104 0530 	addcc.w	r5, r4, #48	; 0x30
   15fcc:	f801 5c05 	strb.w	r5, [r1, #-5]
   15fd0:	0c01      	lsrs	r1, r0, #16
   15fd2:	ebb3 4f10 	cmp.w	r3, r0, lsr #16
   15fd6:	4608      	mov	r0, r1
   15fd8:	d1c3      	bne.n	15f62 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hfcb4a8ce4055cd12E+0x2a>
   15fda:	e03f      	b.n	1605c <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hfcb4a8ce4055cd12E+0x124>
   15fdc:	f10d 0e08 	add.w	lr, sp, #8
   15fe0:	2281      	movs	r2, #129	; 0x81
   15fe2:	2300      	movs	r3, #0
   15fe4:	f000 010f 	and.w	r1, r0, #15
   15fe8:	f101 0437 	add.w	r4, r1, #55	; 0x37
   15fec:	290a      	cmp	r1, #10
   15fee:	bf38      	it	cc
   15ff0:	f101 0430 	addcc.w	r4, r1, #48	; 0x30
   15ff4:	eb0e 0102 	add.w	r1, lr, r2
   15ff8:	ebb3 1f10 	cmp.w	r3, r0, lsr #4
   15ffc:	f801 4c02 	strb.w	r4, [r1, #-2]
   16000:	d030      	beq.n	16064 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hfcb4a8ce4055cd12E+0x12c>
   16002:	0904      	lsrs	r4, r0, #4
   16004:	f004 040f 	and.w	r4, r4, #15
   16008:	f104 0537 	add.w	r5, r4, #55	; 0x37
   1600c:	2c0a      	cmp	r4, #10
   1600e:	bf38      	it	cc
   16010:	f104 0530 	addcc.w	r5, r4, #48	; 0x30
   16014:	ebb3 2f10 	cmp.w	r3, r0, lsr #8
   16018:	f801 5c03 	strb.w	r5, [r1, #-3]
   1601c:	d037      	beq.n	1608e <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hfcb4a8ce4055cd12E+0x156>
   1601e:	0a04      	lsrs	r4, r0, #8
   16020:	f004 040f 	and.w	r4, r4, #15
   16024:	f104 0537 	add.w	r5, r4, #55	; 0x37
   16028:	2c0a      	cmp	r4, #10
   1602a:	bf38      	it	cc
   1602c:	f104 0530 	addcc.w	r5, r4, #48	; 0x30
   16030:	ebb3 3f10 	cmp.w	r3, r0, lsr #12
   16034:	f801 5c04 	strb.w	r5, [r1, #-4]
   16038:	d031      	beq.n	1609e <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hfcb4a8ce4055cd12E+0x166>
   1603a:	0b04      	lsrs	r4, r0, #12
   1603c:	3a04      	subs	r2, #4
   1603e:	f004 040f 	and.w	r4, r4, #15
   16042:	f104 0537 	add.w	r5, r4, #55	; 0x37
   16046:	2c0a      	cmp	r4, #10
   16048:	bf38      	it	cc
   1604a:	f104 0530 	addcc.w	r5, r4, #48	; 0x30
   1604e:	f801 5c05 	strb.w	r5, [r1, #-5]
   16052:	0c01      	lsrs	r1, r0, #16
   16054:	ebb3 4f10 	cmp.w	r3, r0, lsr #16
   16058:	4608      	mov	r0, r1
   1605a:	d1c3      	bne.n	15fe4 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hfcb4a8ce4055cd12E+0xac>
   1605c:	1e50      	subs	r0, r2, #1
   1605e:	2881      	cmp	r0, #129	; 0x81
   16060:	d305      	bcc.n	1606e <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hfcb4a8ce4055cd12E+0x136>
   16062:	e018      	b.n	16096 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hfcb4a8ce4055cd12E+0x15e>
   16064:	1e51      	subs	r1, r2, #1
   16066:	1e90      	subs	r0, r2, #2
   16068:	460a      	mov	r2, r1
   1606a:	2881      	cmp	r0, #129	; 0x81
   1606c:	d213      	bcs.n	16096 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hfcb4a8ce4055cd12E+0x15e>
   1606e:	f1c2 0181 	rsb	r1, r2, #129	; 0x81
   16072:	f24e 629d 	movw	r2, #59037	; 0xe69d
   16076:	4470      	add	r0, lr
   16078:	f2c0 0201 	movt	r2, #1
   1607c:	e9cd 0100 	strd	r0, r1, [sp]
   16080:	4660      	mov	r0, ip
   16082:	2101      	movs	r1, #1
   16084:	2302      	movs	r3, #2
   16086:	f7ff f8bf 	bl	15208 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E>
   1608a:	b022      	add	sp, #136	; 0x88
   1608c:	bdb0      	pop	{r4, r5, r7, pc}
   1608e:	1ed0      	subs	r0, r2, #3
   16090:	3a02      	subs	r2, #2
   16092:	2881      	cmp	r0, #129	; 0x81
   16094:	d3eb      	bcc.n	1606e <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hfcb4a8ce4055cd12E+0x136>
   16096:	2180      	movs	r1, #128	; 0x80
   16098:	f7ff fcac 	bl	159f4 <_ZN4core5slice22slice_index_order_fail17h87a4944411ec7c0eE>
   1609c:	defe      	udf	#254	; 0xfe
   1609e:	1f10      	subs	r0, r2, #4
   160a0:	3a03      	subs	r2, #3
   160a2:	2881      	cmp	r0, #129	; 0x81
   160a4:	d3e3      	bcc.n	1606e <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hfcb4a8ce4055cd12E+0x136>
   160a6:	e7f6      	b.n	16096 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hfcb4a8ce4055cd12E+0x15e>

000160a8 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i8$GT$3fmt17hcf02db6b661d0d51E>:
   160a8:	b580      	push	{r7, lr}
   160aa:	b0a2      	sub	sp, #136	; 0x88
   160ac:	7802      	ldrb	r2, [r0, #0]
   160ae:	468c      	mov	ip, r1
   160b0:	f002 030f 	and.w	r3, r2, #15
   160b4:	f103 0057 	add.w	r0, r3, #87	; 0x57
   160b8:	2b0a      	cmp	r3, #10
   160ba:	bf38      	it	cc
   160bc:	f103 0030 	addcc.w	r0, r3, #48	; 0x30
   160c0:	2300      	movs	r3, #0
   160c2:	ebb3 1f12 	cmp.w	r3, r2, lsr #4
   160c6:	d00b      	beq.n	160e0 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i8$GT$3fmt17hcf02db6b661d0d51E+0x38>
   160c8:	0913      	lsrs	r3, r2, #4
   160ca:	f103 0157 	add.w	r1, r3, #87	; 0x57
   160ce:	2aa0      	cmp	r2, #160	; 0xa0
   160d0:	bf38      	it	cc
   160d2:	f103 0130 	addcc.w	r1, r3, #48	; 0x30
   160d6:	f88d 1086 	strb.w	r1, [sp, #134]	; 0x86
   160da:	227e      	movs	r2, #126	; 0x7e
   160dc:	2302      	movs	r3, #2
   160de:	e001      	b.n	160e4 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i8$GT$3fmt17hcf02db6b661d0d51E+0x3c>
   160e0:	227f      	movs	r2, #127	; 0x7f
   160e2:	2301      	movs	r3, #1
   160e4:	f88d 0087 	strb.w	r0, [sp, #135]	; 0x87
   160e8:	a802      	add	r0, sp, #8
   160ea:	4410      	add	r0, r2
   160ec:	f24e 629d 	movw	r2, #59037	; 0xe69d
   160f0:	e9cd 0300 	strd	r0, r3, [sp]
   160f4:	f2c0 0201 	movt	r2, #1
   160f8:	4660      	mov	r0, ip
   160fa:	2101      	movs	r1, #1
   160fc:	2302      	movs	r3, #2
   160fe:	f7ff f883 	bl	15208 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E>
   16102:	b022      	add	sp, #136	; 0x88
   16104:	bd80      	pop	{r7, pc}

00016106 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i8$GT$3fmt17h46ba2fad91bd7442E>:
   16106:	b580      	push	{r7, lr}
   16108:	b0a2      	sub	sp, #136	; 0x88
   1610a:	7802      	ldrb	r2, [r0, #0]
   1610c:	468c      	mov	ip, r1
   1610e:	f002 030f 	and.w	r3, r2, #15
   16112:	f103 0037 	add.w	r0, r3, #55	; 0x37
   16116:	2b0a      	cmp	r3, #10
   16118:	bf38      	it	cc
   1611a:	f103 0030 	addcc.w	r0, r3, #48	; 0x30
   1611e:	2300      	movs	r3, #0
   16120:	ebb3 1f12 	cmp.w	r3, r2, lsr #4
   16124:	d00b      	beq.n	1613e <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i8$GT$3fmt17h46ba2fad91bd7442E+0x38>
   16126:	0913      	lsrs	r3, r2, #4
   16128:	f103 0137 	add.w	r1, r3, #55	; 0x37
   1612c:	2aa0      	cmp	r2, #160	; 0xa0
   1612e:	bf38      	it	cc
   16130:	f103 0130 	addcc.w	r1, r3, #48	; 0x30
   16134:	f88d 1086 	strb.w	r1, [sp, #134]	; 0x86
   16138:	227e      	movs	r2, #126	; 0x7e
   1613a:	2302      	movs	r3, #2
   1613c:	e001      	b.n	16142 <_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i8$GT$3fmt17h46ba2fad91bd7442E+0x3c>
   1613e:	227f      	movs	r2, #127	; 0x7f
   16140:	2301      	movs	r3, #1
   16142:	f88d 0087 	strb.w	r0, [sp, #135]	; 0x87
   16146:	a802      	add	r0, sp, #8
   16148:	4410      	add	r0, r2
   1614a:	f24e 629d 	movw	r2, #59037	; 0xe69d
   1614e:	e9cd 0300 	strd	r0, r3, [sp]
   16152:	f2c0 0201 	movt	r2, #1
   16156:	4660      	mov	r0, ip
   16158:	2101      	movs	r1, #1
   1615a:	2302      	movs	r3, #2
   1615c:	f7ff f854 	bl	15208 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E>
   16160:	b022      	add	sp, #136	; 0x88
   16162:	bd80      	pop	{r7, pc}

00016164 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i16$GT$3fmt17hc369865b6cebf8b5E>:
   16164:	b580      	push	{r7, lr}
   16166:	b0a2      	sub	sp, #136	; 0x88
   16168:	8800      	ldrh	r0, [r0, #0]
   1616a:	468c      	mov	ip, r1
   1616c:	f000 020f 	and.w	r2, r0, #15
   16170:	f102 0357 	add.w	r3, r2, #87	; 0x57
   16174:	2a0a      	cmp	r2, #10
   16176:	bf38      	it	cc
   16178:	f102 0330 	addcc.w	r3, r2, #48	; 0x30
   1617c:	2200      	movs	r2, #0
   1617e:	ebb2 1f10 	cmp.w	r2, r0, lsr #4
   16182:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
   16186:	d02a      	beq.n	161de <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i16$GT$3fmt17hc369865b6cebf8b5E+0x7a>
   16188:	0903      	lsrs	r3, r0, #4
   1618a:	f003 030f 	and.w	r3, r3, #15
   1618e:	f103 0157 	add.w	r1, r3, #87	; 0x57
   16192:	2b0a      	cmp	r3, #10
   16194:	bf38      	it	cc
   16196:	f103 0130 	addcc.w	r1, r3, #48	; 0x30
   1619a:	ebb2 2f10 	cmp.w	r2, r0, lsr #8
   1619e:	f88d 1086 	strb.w	r1, [sp, #134]	; 0x86
   161a2:	d031      	beq.n	16208 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i16$GT$3fmt17hc369865b6cebf8b5E+0xa4>
   161a4:	0a01      	lsrs	r1, r0, #8
   161a6:	f001 010f 	and.w	r1, r1, #15
   161aa:	f101 0257 	add.w	r2, r1, #87	; 0x57
   161ae:	290a      	cmp	r1, #10
   161b0:	bf38      	it	cc
   161b2:	f101 0230 	addcc.w	r2, r1, #48	; 0x30
   161b6:	2100      	movs	r1, #0
   161b8:	ebb1 3f10 	cmp.w	r1, r0, lsr #12
   161bc:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
   161c0:	d027      	beq.n	16212 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i16$GT$3fmt17hc369865b6cebf8b5E+0xae>
   161c2:	0b00      	lsrs	r0, r0, #12
   161c4:	f100 0157 	add.w	r1, r0, #87	; 0x57
   161c8:	280a      	cmp	r0, #10
   161ca:	bf38      	it	cc
   161cc:	f100 0130 	addcc.w	r1, r0, #48	; 0x30
   161d0:	f88d 1084 	strb.w	r1, [sp, #132]	; 0x84
   161d4:	227d      	movs	r2, #125	; 0x7d
   161d6:	207c      	movs	r0, #124	; 0x7c
   161d8:	2881      	cmp	r0, #129	; 0x81
   161da:	d304      	bcc.n	161e6 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i16$GT$3fmt17hc369865b6cebf8b5E+0x82>
   161dc:	e01d      	b.n	1621a <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i16$GT$3fmt17hc369865b6cebf8b5E+0xb6>
   161de:	2280      	movs	r2, #128	; 0x80
   161e0:	207f      	movs	r0, #127	; 0x7f
   161e2:	2881      	cmp	r0, #129	; 0x81
   161e4:	d219      	bcs.n	1621a <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i16$GT$3fmt17hc369865b6cebf8b5E+0xb6>
   161e6:	f1c2 0281 	rsb	r2, r2, #129	; 0x81
   161ea:	ab02      	add	r3, sp, #8
   161ec:	4418      	add	r0, r3
   161ee:	2101      	movs	r1, #1
   161f0:	e9cd 0200 	strd	r0, r2, [sp]
   161f4:	f24e 629d 	movw	r2, #59037	; 0xe69d
   161f8:	f2c0 0201 	movt	r2, #1
   161fc:	4660      	mov	r0, ip
   161fe:	2302      	movs	r3, #2
   16200:	f7ff f802 	bl	15208 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E>
   16204:	b022      	add	sp, #136	; 0x88
   16206:	bd80      	pop	{r7, pc}
   16208:	207e      	movs	r0, #126	; 0x7e
   1620a:	227f      	movs	r2, #127	; 0x7f
   1620c:	2881      	cmp	r0, #129	; 0x81
   1620e:	d3ea      	bcc.n	161e6 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i16$GT$3fmt17hc369865b6cebf8b5E+0x82>
   16210:	e003      	b.n	1621a <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i16$GT$3fmt17hc369865b6cebf8b5E+0xb6>
   16212:	207d      	movs	r0, #125	; 0x7d
   16214:	227e      	movs	r2, #126	; 0x7e
   16216:	2881      	cmp	r0, #129	; 0x81
   16218:	d3e5      	bcc.n	161e6 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i16$GT$3fmt17hc369865b6cebf8b5E+0x82>
   1621a:	2180      	movs	r1, #128	; 0x80
   1621c:	f7ff fbea 	bl	159f4 <_ZN4core5slice22slice_index_order_fail17h87a4944411ec7c0eE>
   16220:	defe      	udf	#254	; 0xfe

00016222 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i16$GT$3fmt17h41ec04e122043a13E>:
   16222:	b580      	push	{r7, lr}
   16224:	b0a2      	sub	sp, #136	; 0x88
   16226:	8800      	ldrh	r0, [r0, #0]
   16228:	468c      	mov	ip, r1
   1622a:	f000 020f 	and.w	r2, r0, #15
   1622e:	f102 0337 	add.w	r3, r2, #55	; 0x37
   16232:	2a0a      	cmp	r2, #10
   16234:	bf38      	it	cc
   16236:	f102 0330 	addcc.w	r3, r2, #48	; 0x30
   1623a:	2200      	movs	r2, #0
   1623c:	ebb2 1f10 	cmp.w	r2, r0, lsr #4
   16240:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
   16244:	d02a      	beq.n	1629c <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i16$GT$3fmt17h41ec04e122043a13E+0x7a>
   16246:	0903      	lsrs	r3, r0, #4
   16248:	f003 030f 	and.w	r3, r3, #15
   1624c:	f103 0137 	add.w	r1, r3, #55	; 0x37
   16250:	2b0a      	cmp	r3, #10
   16252:	bf38      	it	cc
   16254:	f103 0130 	addcc.w	r1, r3, #48	; 0x30
   16258:	ebb2 2f10 	cmp.w	r2, r0, lsr #8
   1625c:	f88d 1086 	strb.w	r1, [sp, #134]	; 0x86
   16260:	d031      	beq.n	162c6 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i16$GT$3fmt17h41ec04e122043a13E+0xa4>
   16262:	0a01      	lsrs	r1, r0, #8
   16264:	f001 010f 	and.w	r1, r1, #15
   16268:	f101 0237 	add.w	r2, r1, #55	; 0x37
   1626c:	290a      	cmp	r1, #10
   1626e:	bf38      	it	cc
   16270:	f101 0230 	addcc.w	r2, r1, #48	; 0x30
   16274:	2100      	movs	r1, #0
   16276:	ebb1 3f10 	cmp.w	r1, r0, lsr #12
   1627a:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
   1627e:	d027      	beq.n	162d0 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i16$GT$3fmt17h41ec04e122043a13E+0xae>
   16280:	0b00      	lsrs	r0, r0, #12
   16282:	f100 0137 	add.w	r1, r0, #55	; 0x37
   16286:	280a      	cmp	r0, #10
   16288:	bf38      	it	cc
   1628a:	f100 0130 	addcc.w	r1, r0, #48	; 0x30
   1628e:	f88d 1084 	strb.w	r1, [sp, #132]	; 0x84
   16292:	227d      	movs	r2, #125	; 0x7d
   16294:	207c      	movs	r0, #124	; 0x7c
   16296:	2881      	cmp	r0, #129	; 0x81
   16298:	d304      	bcc.n	162a4 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i16$GT$3fmt17h41ec04e122043a13E+0x82>
   1629a:	e01d      	b.n	162d8 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i16$GT$3fmt17h41ec04e122043a13E+0xb6>
   1629c:	2280      	movs	r2, #128	; 0x80
   1629e:	207f      	movs	r0, #127	; 0x7f
   162a0:	2881      	cmp	r0, #129	; 0x81
   162a2:	d219      	bcs.n	162d8 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i16$GT$3fmt17h41ec04e122043a13E+0xb6>
   162a4:	f1c2 0281 	rsb	r2, r2, #129	; 0x81
   162a8:	ab02      	add	r3, sp, #8
   162aa:	4418      	add	r0, r3
   162ac:	2101      	movs	r1, #1
   162ae:	e9cd 0200 	strd	r0, r2, [sp]
   162b2:	f24e 629d 	movw	r2, #59037	; 0xe69d
   162b6:	f2c0 0201 	movt	r2, #1
   162ba:	4660      	mov	r0, ip
   162bc:	2302      	movs	r3, #2
   162be:	f7fe ffa3 	bl	15208 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E>
   162c2:	b022      	add	sp, #136	; 0x88
   162c4:	bd80      	pop	{r7, pc}
   162c6:	207e      	movs	r0, #126	; 0x7e
   162c8:	227f      	movs	r2, #127	; 0x7f
   162ca:	2881      	cmp	r0, #129	; 0x81
   162cc:	d3ea      	bcc.n	162a4 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i16$GT$3fmt17h41ec04e122043a13E+0x82>
   162ce:	e003      	b.n	162d8 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i16$GT$3fmt17h41ec04e122043a13E+0xb6>
   162d0:	207d      	movs	r0, #125	; 0x7d
   162d2:	227e      	movs	r2, #126	; 0x7e
   162d4:	2881      	cmp	r0, #129	; 0x81
   162d6:	d3e5      	bcc.n	162a4 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i16$GT$3fmt17h41ec04e122043a13E+0x82>
   162d8:	2180      	movs	r1, #128	; 0x80
   162da:	f7ff fb8b 	bl	159f4 <_ZN4core5slice22slice_index_order_fail17h87a4944411ec7c0eE>
   162de:	defe      	udf	#254	; 0xfe

000162e0 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17h2a11dfdafa4f3e91E>:
   162e0:	b5b0      	push	{r4, r5, r7, lr}
   162e2:	b0a2      	sub	sp, #136	; 0x88
   162e4:	6800      	ldr	r0, [r0, #0]
   162e6:	f10d 0e08 	add.w	lr, sp, #8
   162ea:	468c      	mov	ip, r1
   162ec:	2381      	movs	r3, #129	; 0x81
   162ee:	2100      	movs	r1, #0
   162f0:	f000 020f 	and.w	r2, r0, #15
   162f4:	f102 0457 	add.w	r4, r2, #87	; 0x57
   162f8:	2a0a      	cmp	r2, #10
   162fa:	bf38      	it	cc
   162fc:	f102 0430 	addcc.w	r4, r2, #48	; 0x30
   16300:	eb0e 0203 	add.w	r2, lr, r3
   16304:	ebb1 1f10 	cmp.w	r1, r0, lsr #4
   16308:	f802 4c02 	strb.w	r4, [r2, #-2]
   1630c:	d030      	beq.n	16370 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17h2a11dfdafa4f3e91E+0x90>
   1630e:	0904      	lsrs	r4, r0, #4
   16310:	f004 040f 	and.w	r4, r4, #15
   16314:	f104 0557 	add.w	r5, r4, #87	; 0x57
   16318:	2c0a      	cmp	r4, #10
   1631a:	bf38      	it	cc
   1631c:	f104 0530 	addcc.w	r5, r4, #48	; 0x30
   16320:	ebb1 2f10 	cmp.w	r1, r0, lsr #8
   16324:	f802 5c03 	strb.w	r5, [r2, #-3]
   16328:	d028      	beq.n	1637c <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17h2a11dfdafa4f3e91E+0x9c>
   1632a:	0a04      	lsrs	r4, r0, #8
   1632c:	f004 040f 	and.w	r4, r4, #15
   16330:	f104 0557 	add.w	r5, r4, #87	; 0x57
   16334:	2c0a      	cmp	r4, #10
   16336:	bf38      	it	cc
   16338:	f104 0530 	addcc.w	r5, r4, #48	; 0x30
   1633c:	ebb1 3f10 	cmp.w	r1, r0, lsr #12
   16340:	f802 5c04 	strb.w	r5, [r2, #-4]
   16344:	d01f      	beq.n	16386 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17h2a11dfdafa4f3e91E+0xa6>
   16346:	0b04      	lsrs	r4, r0, #12
   16348:	3b04      	subs	r3, #4
   1634a:	f004 040f 	and.w	r4, r4, #15
   1634e:	f104 0557 	add.w	r5, r4, #87	; 0x57
   16352:	2c0a      	cmp	r4, #10
   16354:	bf38      	it	cc
   16356:	f104 0530 	addcc.w	r5, r4, #48	; 0x30
   1635a:	f802 5c05 	strb.w	r5, [r2, #-5]
   1635e:	0c02      	lsrs	r2, r0, #16
   16360:	ebb1 4f10 	cmp.w	r1, r0, lsr #16
   16364:	4610      	mov	r0, r2
   16366:	d1c3      	bne.n	162f0 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17h2a11dfdafa4f3e91E+0x10>
   16368:	1e58      	subs	r0, r3, #1
   1636a:	2881      	cmp	r0, #129	; 0x81
   1636c:	d30f      	bcc.n	1638e <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17h2a11dfdafa4f3e91E+0xae>
   1636e:	e01e      	b.n	163ae <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17h2a11dfdafa4f3e91E+0xce>
   16370:	1e59      	subs	r1, r3, #1
   16372:	1e98      	subs	r0, r3, #2
   16374:	460b      	mov	r3, r1
   16376:	2881      	cmp	r0, #129	; 0x81
   16378:	d309      	bcc.n	1638e <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17h2a11dfdafa4f3e91E+0xae>
   1637a:	e018      	b.n	163ae <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17h2a11dfdafa4f3e91E+0xce>
   1637c:	1ed8      	subs	r0, r3, #3
   1637e:	3b02      	subs	r3, #2
   16380:	2881      	cmp	r0, #129	; 0x81
   16382:	d304      	bcc.n	1638e <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17h2a11dfdafa4f3e91E+0xae>
   16384:	e013      	b.n	163ae <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17h2a11dfdafa4f3e91E+0xce>
   16386:	1f18      	subs	r0, r3, #4
   16388:	3b03      	subs	r3, #3
   1638a:	2881      	cmp	r0, #129	; 0x81
   1638c:	d20f      	bcs.n	163ae <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17h2a11dfdafa4f3e91E+0xce>
   1638e:	f1c3 0181 	rsb	r1, r3, #129	; 0x81
   16392:	f24e 629d 	movw	r2, #59037	; 0xe69d
   16396:	4470      	add	r0, lr
   16398:	f2c0 0201 	movt	r2, #1
   1639c:	e9cd 0100 	strd	r0, r1, [sp]
   163a0:	4660      	mov	r0, ip
   163a2:	2101      	movs	r1, #1
   163a4:	2302      	movs	r3, #2
   163a6:	f7fe ff2f 	bl	15208 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E>
   163aa:	b022      	add	sp, #136	; 0x88
   163ac:	bdb0      	pop	{r4, r5, r7, pc}
   163ae:	2180      	movs	r1, #128	; 0x80
   163b0:	f7ff fb20 	bl	159f4 <_ZN4core5slice22slice_index_order_fail17h87a4944411ec7c0eE>
   163b4:	defe      	udf	#254	; 0xfe

000163b6 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17hde0faf7a053167a3E>:
   163b6:	b5b0      	push	{r4, r5, r7, lr}
   163b8:	b0a2      	sub	sp, #136	; 0x88
   163ba:	6800      	ldr	r0, [r0, #0]
   163bc:	f10d 0e08 	add.w	lr, sp, #8
   163c0:	468c      	mov	ip, r1
   163c2:	2381      	movs	r3, #129	; 0x81
   163c4:	2100      	movs	r1, #0
   163c6:	f000 020f 	and.w	r2, r0, #15
   163ca:	f102 0437 	add.w	r4, r2, #55	; 0x37
   163ce:	2a0a      	cmp	r2, #10
   163d0:	bf38      	it	cc
   163d2:	f102 0430 	addcc.w	r4, r2, #48	; 0x30
   163d6:	eb0e 0203 	add.w	r2, lr, r3
   163da:	ebb1 1f10 	cmp.w	r1, r0, lsr #4
   163de:	f802 4c02 	strb.w	r4, [r2, #-2]
   163e2:	d030      	beq.n	16446 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17hde0faf7a053167a3E+0x90>
   163e4:	0904      	lsrs	r4, r0, #4
   163e6:	f004 040f 	and.w	r4, r4, #15
   163ea:	f104 0537 	add.w	r5, r4, #55	; 0x37
   163ee:	2c0a      	cmp	r4, #10
   163f0:	bf38      	it	cc
   163f2:	f104 0530 	addcc.w	r5, r4, #48	; 0x30
   163f6:	ebb1 2f10 	cmp.w	r1, r0, lsr #8
   163fa:	f802 5c03 	strb.w	r5, [r2, #-3]
   163fe:	d028      	beq.n	16452 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17hde0faf7a053167a3E+0x9c>
   16400:	0a04      	lsrs	r4, r0, #8
   16402:	f004 040f 	and.w	r4, r4, #15
   16406:	f104 0537 	add.w	r5, r4, #55	; 0x37
   1640a:	2c0a      	cmp	r4, #10
   1640c:	bf38      	it	cc
   1640e:	f104 0530 	addcc.w	r5, r4, #48	; 0x30
   16412:	ebb1 3f10 	cmp.w	r1, r0, lsr #12
   16416:	f802 5c04 	strb.w	r5, [r2, #-4]
   1641a:	d01f      	beq.n	1645c <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17hde0faf7a053167a3E+0xa6>
   1641c:	0b04      	lsrs	r4, r0, #12
   1641e:	3b04      	subs	r3, #4
   16420:	f004 040f 	and.w	r4, r4, #15
   16424:	f104 0537 	add.w	r5, r4, #55	; 0x37
   16428:	2c0a      	cmp	r4, #10
   1642a:	bf38      	it	cc
   1642c:	f104 0530 	addcc.w	r5, r4, #48	; 0x30
   16430:	f802 5c05 	strb.w	r5, [r2, #-5]
   16434:	0c02      	lsrs	r2, r0, #16
   16436:	ebb1 4f10 	cmp.w	r1, r0, lsr #16
   1643a:	4610      	mov	r0, r2
   1643c:	d1c3      	bne.n	163c6 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17hde0faf7a053167a3E+0x10>
   1643e:	1e58      	subs	r0, r3, #1
   16440:	2881      	cmp	r0, #129	; 0x81
   16442:	d30f      	bcc.n	16464 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17hde0faf7a053167a3E+0xae>
   16444:	e01e      	b.n	16484 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17hde0faf7a053167a3E+0xce>
   16446:	1e59      	subs	r1, r3, #1
   16448:	1e98      	subs	r0, r3, #2
   1644a:	460b      	mov	r3, r1
   1644c:	2881      	cmp	r0, #129	; 0x81
   1644e:	d309      	bcc.n	16464 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17hde0faf7a053167a3E+0xae>
   16450:	e018      	b.n	16484 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17hde0faf7a053167a3E+0xce>
   16452:	1ed8      	subs	r0, r3, #3
   16454:	3b02      	subs	r3, #2
   16456:	2881      	cmp	r0, #129	; 0x81
   16458:	d304      	bcc.n	16464 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17hde0faf7a053167a3E+0xae>
   1645a:	e013      	b.n	16484 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17hde0faf7a053167a3E+0xce>
   1645c:	1f18      	subs	r0, r3, #4
   1645e:	3b03      	subs	r3, #3
   16460:	2881      	cmp	r0, #129	; 0x81
   16462:	d20f      	bcs.n	16484 <_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17hde0faf7a053167a3E+0xce>
   16464:	f1c3 0181 	rsb	r1, r3, #129	; 0x81
   16468:	f24e 629d 	movw	r2, #59037	; 0xe69d
   1646c:	4470      	add	r0, lr
   1646e:	f2c0 0201 	movt	r2, #1
   16472:	e9cd 0100 	strd	r0, r1, [sp]
   16476:	4660      	mov	r0, ip
   16478:	2101      	movs	r1, #1
   1647a:	2302      	movs	r3, #2
   1647c:	f7fe fec4 	bl	15208 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E>
   16480:	b022      	add	sp, #136	; 0x88
   16482:	bdb0      	pop	{r4, r5, r7, pc}
   16484:	2180      	movs	r1, #128	; 0x80
   16486:	f7ff fab5 	bl	159f4 <_ZN4core5slice22slice_index_order_fail17h87a4944411ec7c0eE>
   1648a:	defe      	udf	#254	; 0xfe

0001648c <_ZN4core3fmt3num3imp7fmt_u3217h19c42a593c756fd4E>:
   1648c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16490:	b08f      	sub	sp, #60	; 0x3c
   16492:	f24e 6e9f 	movw	lr, #59039	; 0xe69f
   16496:	4617      	mov	r7, r2
   16498:	f248 521f 	movw	r2, #34079	; 0x851f
   1649c:	460d      	mov	r5, r1
   1649e:	f242 7110 	movw	r1, #10000	; 0x2710
   164a2:	4288      	cmp	r0, r1
   164a4:	f2c5 12eb 	movt	r2, #20971	; 0x51eb
   164a8:	f2c0 0e01 	movt	lr, #1
   164ac:	d339      	bcc.n	16522 <_ZN4core3fmt3num3imp7fmt_u3217h19c42a593c756fd4E+0x96>
   164ae:	f241 7959 	movw	r9, #5977	; 0x1759
   164b2:	f24e 08ff 	movw	r8, #57599	; 0xe0ff
   164b6:	f10d 0b14 	add.w	fp, sp, #20
   164ba:	2400      	movs	r4, #0
   164bc:	f2cd 19b7 	movt	r9, #53687	; 0xd1b7
   164c0:	f04f 0a64 	mov.w	sl, #100	; 0x64
   164c4:	f2c0 58f5 	movt	r8, #1525	; 0x5f5
   164c8:	e9cd 5703 	strd	r5, r7, [sp, #12]
   164cc:	fba0 5609 	umull	r5, r6, r0, r9
   164d0:	eb0b 0304 	add.w	r3, fp, r4
   164d4:	3c04      	subs	r4, #4
   164d6:	4540      	cmp	r0, r8
   164d8:	ea4f 3556 	mov.w	r5, r6, lsr #13
   164dc:	fb05 0611 	mls	r6, r5, r1, r0
   164e0:	4628      	mov	r0, r5
   164e2:	b2b7      	uxth	r7, r6
   164e4:	fba7 7c02 	umull	r7, ip, r7, r2
   164e8:	ea4f 175c 	mov.w	r7, ip, lsr #5
   164ec:	fb07 661a 	mls	r6, r7, sl, r6
   164f0:	f83e 7017 	ldrh.w	r7, [lr, r7, lsl #1]
   164f4:	f8a3 7023 	strh.w	r7, [r3, #35]	; 0x23
   164f8:	b2b6      	uxth	r6, r6
   164fa:	f83e 6016 	ldrh.w	r6, [lr, r6, lsl #1]
   164fe:	f8a3 6025 	strh.w	r6, [r3, #37]	; 0x25
   16502:	d8e3      	bhi.n	164cc <_ZN4core3fmt3num3imp7fmt_u3217h19c42a593c756fd4E+0x40>
   16504:	4628      	mov	r0, r5
   16506:	e9dd 5703 	ldrd	r5, r7, [sp, #12]
   1650a:	3427      	adds	r4, #39	; 0x27
   1650c:	2863      	cmp	r0, #99	; 0x63
   1650e:	dc0b      	bgt.n	16528 <_ZN4core3fmt3num3imp7fmt_u3217h19c42a593c756fd4E+0x9c>
   16510:	4603      	mov	r3, r0
   16512:	2b0a      	cmp	r3, #10
   16514:	db17      	blt.n	16546 <_ZN4core3fmt3num3imp7fmt_u3217h19c42a593c756fd4E+0xba>
   16516:	1ea0      	subs	r0, r4, #2
   16518:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
   1651c:	aa05      	add	r2, sp, #20
   1651e:	5213      	strh	r3, [r2, r0]
   16520:	e015      	b.n	1654e <_ZN4core3fmt3num3imp7fmt_u3217h19c42a593c756fd4E+0xc2>
   16522:	2427      	movs	r4, #39	; 0x27
   16524:	2863      	cmp	r0, #99	; 0x63
   16526:	ddf3      	ble.n	16510 <_ZN4core3fmt3num3imp7fmt_u3217h19c42a593c756fd4E+0x84>
   16528:	b283      	uxth	r3, r0
   1652a:	3c02      	subs	r4, #2
   1652c:	fba3 6302 	umull	r6, r3, r3, r2
   16530:	2664      	movs	r6, #100	; 0x64
   16532:	095b      	lsrs	r3, r3, #5
   16534:	fb03 0016 	mls	r0, r3, r6, r0
   16538:	ae05      	add	r6, sp, #20
   1653a:	b280      	uxth	r0, r0
   1653c:	f83e 0010 	ldrh.w	r0, [lr, r0, lsl #1]
   16540:	5330      	strh	r0, [r6, r4]
   16542:	2b0a      	cmp	r3, #10
   16544:	dae7      	bge.n	16516 <_ZN4core3fmt3num3imp7fmt_u3217h19c42a593c756fd4E+0x8a>
   16546:	1e60      	subs	r0, r4, #1
   16548:	aa05      	add	r2, sp, #20
   1654a:	3330      	adds	r3, #48	; 0x30
   1654c:	5413      	strb	r3, [r2, r0]
   1654e:	f1c0 0327 	rsb	r3, r0, #39	; 0x27
   16552:	aa05      	add	r2, sp, #20
   16554:	4410      	add	r0, r2
   16556:	f24e 42c4 	movw	r2, #58564	; 0xe4c4
   1655a:	e9cd 0300 	strd	r0, r3, [sp]
   1655e:	f2c0 0201 	movt	r2, #1
   16562:	4638      	mov	r0, r7
   16564:	4629      	mov	r1, r5
   16566:	2300      	movs	r3, #0
   16568:	f7fe fe4e 	bl	15208 <_ZN4core3fmt9Formatter12pad_integral17h3364dc6b383fe3f6E>
   1656c:	b00f      	add	sp, #60	; 0x3c
   1656e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016572 <_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17h4566d0879df4660bE>:
   16572:	7800      	ldrb	r0, [r0, #0]
   16574:	460a      	mov	r2, r1
   16576:	2101      	movs	r1, #1
   16578:	f7ff bf88 	b.w	1648c <_ZN4core3fmt3num3imp7fmt_u3217h19c42a593c756fd4E>

0001657c <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u16$GT$3fmt17hc285ae8ae8f8c6d5E>:
   1657c:	8800      	ldrh	r0, [r0, #0]
   1657e:	460a      	mov	r2, r1
   16580:	2101      	movs	r1, #1
   16582:	f7ff bf83 	b.w	1648c <_ZN4core3fmt3num3imp7fmt_u3217h19c42a593c756fd4E>

00016586 <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17hab38770a21c0711cE>:
   16586:	460a      	mov	r2, r1
   16588:	6801      	ldr	r1, [r0, #0]
   1658a:	2900      	cmp	r1, #0
   1658c:	4608      	mov	r0, r1
   1658e:	bf48      	it	mi
   16590:	4248      	negmi	r0, r1
   16592:	43c9      	mvns	r1, r1
   16594:	0fc9      	lsrs	r1, r1, #31
   16596:	f7ff bf79 	b.w	1648c <_ZN4core3fmt3num3imp7fmt_u3217h19c42a593c756fd4E>

0001659a <_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h76e87fee82ab7b9eE>:
   1659a:	6800      	ldr	r0, [r0, #0]
   1659c:	460a      	mov	r2, r1
   1659e:	2101      	movs	r1, #1
   165a0:	f7ff bf74 	b.w	1648c <_ZN4core3fmt3num3imp7fmt_u3217h19c42a593c756fd4E>

000165a4 <_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17he57ec37cab302575E>:
   165a4:	e9d0 2000 	ldrd	r2, r0, [r0]
   165a8:	68c3      	ldr	r3, [r0, #12]
   165aa:	4610      	mov	r0, r2
   165ac:	4718      	bx	r3

000165ae <_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17ha4d5af40e4a389ffE>:
   165ae:	460b      	mov	r3, r1
   165b0:	e9d0 1200 	ldrd	r1, r2, [r0]
   165b4:	4618      	mov	r0, r3
   165b6:	f7fe bf67 	b.w	15488 <_ZN4core3fmt9Formatter3pad17h8e6ba82623bc9d41E>
	...

000165bc <__semihost>:
	//    openocd -f interface/stlink-v2.cfg -f target/stm32f1x.cfg -f scripts/debug.ocd

	//  Warning: This code will trigger a breakpoint and hang unless a debugger is connected.
	//  That's how ARM Semihosting sends a command to the debugger to print a message.
	//  This code MUST be disabled on production devices.
    if (!log_enabled) return -1;
   165bc:	4b07      	ldr	r3, [pc, #28]	; (165dc <__semihost+0x20>)
   165be:	781b      	ldrb	r3, [r3, #0]
   165c0:	b14b      	cbz	r3, 165d6 <__semihost+0x1a>
static int __semihost(int command, void* message) {
   165c2:	b410      	push	{r4}
   165c4:	4602      	mov	r2, r0
   165c6:	460c      	mov	r4, r1
    __asm( 
   165c8:	4610      	mov	r0, r2
   165ca:	4621      	mov	r1, r4
   165cc:	beab      	bkpt	0x00ab
		[cmd] "r" (command), 
		[msg] "r" (message)
	:  //  Clobbered register list:
		"r0", "r1", "memory"
	);
	return 0;  //  TODO
   165ce:	2000      	movs	r0, #0
}
   165d0:	f85d 4b04 	ldr.w	r4, [sp], #4
   165d4:	4770      	bx	lr
    if (!log_enabled) return -1;
   165d6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
}
   165da:	4770      	bx	lr
   165dc:	200000f8 	.word	0x200000f8

000165e0 <debugger_connected>:
// #define SYS_RENAME (0xf)
// #define SYS_EXIT   (0x18)

static int debugger_connected(void) {
    //  Return non-zero if debugger is connected. From repos/apache-mynewt-core/hw/mcu/ambiq/apollo2/src/hal_system.c
    return CoreDebug->DHCSR & CoreDebug_DHCSR_C_DEBUGEN_Msk;
   165e0:	4b02      	ldr	r3, [pc, #8]	; (165ec <debugger_connected+0xc>)
   165e2:	6818      	ldr	r0, [r3, #0]
}
   165e4:	f000 0001 	and.w	r0, r0, #1
   165e8:	4770      	bx	lr
   165ea:	bf00      	nop
   165ec:	e000edf0 	.word	0xe000edf0

000165f0 <semihost_write>:
#endif  //  !DISABLE_SEMIHOSTING

// We normally set the file handle to 2 to write to the debugger's stderr output.
#define SEMIHOST_HANDLE 2

static int semihost_write(uint32_t fh, const unsigned char *buffer, unsigned int length) {
   165f0:	b570      	push	{r4, r5, r6, lr}
   165f2:	b084      	sub	sp, #16
   165f4:	4606      	mov	r6, r0
   165f6:	460d      	mov	r5, r1
   165f8:	4614      	mov	r4, r2
    //  Write "length" number of bytes from "buffer" to the debugger's file handle fh.
    //  We normally set fh=2 to write to the debugger's stderr output.
#ifdef DISABLE_SEMIHOSTING  //  If Arm Semihosting is disabled...
    return 0;               //  Don't write debug messages.
#else                       //  If Arm Semihosting is enabled...
    if (!debugger_connected()) { return 0; }  //  If debugger is not connected, quit.
   165fa:	f7ff fff1 	bl	165e0 <debugger_connected>
   165fe:	4603      	mov	r3, r0
   16600:	b108      	cbz	r0, 16606 <semihost_write+0x16>
    if (length == 0) { return 0; }
   16602:	b91c      	cbnz	r4, 1660c <semihost_write+0x1c>
   16604:	2300      	movs	r3, #0
    args[0] = (uint32_t)fh;
    args[1] = (uint32_t)buffer;
    args[2] = (uint32_t)length;
    return __semihost(SYS_WRITE, args);
#endif  //  DISABLE_SEMIHOSTING
}
   16606:	4618      	mov	r0, r3
   16608:	b004      	add	sp, #16
   1660a:	bd70      	pop	{r4, r5, r6, pc}
    args[0] = (uint32_t)fh;
   1660c:	9601      	str	r6, [sp, #4]
    args[1] = (uint32_t)buffer;
   1660e:	9502      	str	r5, [sp, #8]
    args[2] = (uint32_t)length;
   16610:	9403      	str	r4, [sp, #12]
    return __semihost(SYS_WRITE, args);
   16612:	a901      	add	r1, sp, #4
   16614:	2005      	movs	r0, #5
   16616:	f7ff ffd1 	bl	165bc <__semihost>
   1661a:	4603      	mov	r3, r0
   1661c:	e7f3      	b.n	16606 <semihost_write+0x16>
	...

00016620 <console_flush>:

static struct os_mbuf *semihost_mbuf = NULL;

void console_flush(void) {
   16620:	b538      	push	{r3, r4, r5, lr}
    //  Flush output buffer to the console log.  This will be slow.
    if (!log_enabled) { return; }       //  Skip if log not enabled.
   16622:	4b0e      	ldr	r3, [pc, #56]	; (1665c <console_flush+0x3c>)
   16624:	781b      	ldrb	r3, [r3, #0]
   16626:	b1bb      	cbz	r3, 16658 <console_flush+0x38>
    if (!semihost_mbuf) { return; }     //  Buffer is empty, nothing to write.
   16628:	4b0d      	ldr	r3, [pc, #52]	; (16660 <console_flush+0x40>)
   1662a:	681d      	ldr	r5, [r3, #0]
   1662c:	b1a5      	cbz	r5, 16658 <console_flush+0x38>
#endif

static inline int
os_arch_in_isr(void)
{
    return (SCB->ICSR & SCB_ICSR_VECTACTIVE_Msk) != 0;
   1662e:	4b0d      	ldr	r3, [pc, #52]	; (16664 <console_flush+0x44>)
   16630:	685b      	ldr	r3, [r3, #4]
   16632:	f3c3 0308 	ubfx	r3, r3, #0, #9
    if (os_arch_in_isr()) { return; }   //  Don't flush if we are called during an interrupt.
   16636:	b97b      	cbnz	r3, 16658 <console_flush+0x38>

    //  Swap mbufs first to prevent concurrency problems.
    struct os_mbuf *old = semihost_mbuf;
    semihost_mbuf = NULL;
   16638:	4b09      	ldr	r3, [pc, #36]	; (16660 <console_flush+0x40>)
   1663a:	2200      	movs	r2, #0
   1663c:	601a      	str	r2, [r3, #0]

    struct os_mbuf *m = old;
   1663e:	462c      	mov	r4, r5
    while (m) {  //  For each mbuf in the chain...
   16640:	e005      	b.n	1664e <console_flush+0x2e>
        const unsigned char *data = OS_MBUF_DATA(m, const unsigned char *);  //  Fetch the data.
        int size = m->om_len;                         //  Fetch the size.
        semihost_write(SEMIHOST_HANDLE, data, size);  //  Write the data to Semihosting output.
   16642:	88e2      	ldrh	r2, [r4, #6]
   16644:	6821      	ldr	r1, [r4, #0]
   16646:	2002      	movs	r0, #2
   16648:	f7ff ffd2 	bl	165f0 <semihost_write>
        m = m->om_next.sle_next;                      //  Fetch next mbuf in the chain.
   1664c:	68e4      	ldr	r4, [r4, #12]
    while (m) {  //  For each mbuf in the chain...
   1664e:	2c00      	cmp	r4, #0
   16650:	d1f7      	bne.n	16642 <console_flush+0x22>
    }
    if (old) { os_mbuf_free_chain(old); }  //  Deallocate the old chain.
   16652:	4628      	mov	r0, r5
   16654:	f001 fbfc 	bl	17e50 <os_mbuf_free_chain>
}
   16658:	bd38      	pop	{r3, r4, r5, pc}
   1665a:	bf00      	nop
   1665c:	200000f8 	.word	0x200000f8
   16660:	20000ea4 	.word	0x20000ea4
   16664:	e000ed00 	.word	0xe000ed00

00016668 <disable_buffer>:
void disable_buffer(void) { buffer_enabled = false; console_flush(); }  //  Disable buffering.
   16668:	b508      	push	{r3, lr}
   1666a:	f7ff ffd9 	bl	16620 <console_flush>
   1666e:	bd08      	pop	{r3, pc}

00016670 <console_buffer>:

void console_buffer(const char *buffer, unsigned int length) {
   16670:	b538      	push	{r3, r4, r5, lr}
    //  Append "length" number of bytes from "buffer" to the output buffer.
#ifdef DISABLE_SEMIHOSTING  //  If Arm Semihosting is disabled...
    return;                 //  Don't write debug messages.
#else                       //  If Arm Semihosting is enabled...
    int rc;
    if (!log_enabled) { return; }           //  Skip if log not enabled.
   16672:	4b12      	ldr	r3, [pc, #72]	; (166bc <console_buffer+0x4c>)
   16674:	781b      	ldrb	r3, [r3, #0]
   16676:	b903      	cbnz	r3, 1667a <console_buffer+0xa>
    if (os_mbuf_len(semihost_mbuf) + length >= OUTPUT_BUFFER_SIZE) { return; }
    //  Append the data to the mbuf chain.  This may increase the numbere of mbufs in the chain.
    rc = os_mbuf_append(semihost_mbuf, buffer, length);
    if (rc) { return; }  //  If out of memory, quit.
#endif  //  DISABLE_SEMIHOSTING
}
   16678:	bd38      	pop	{r3, r4, r5, pc}
   1667a:	460d      	mov	r5, r1
   1667c:	4604      	mov	r4, r0
    if (!debugger_connected()) { return; }  //  If debugger is not connected, quit.
   1667e:	f7ff ffaf 	bl	165e0 <debugger_connected>
   16682:	2800      	cmp	r0, #0
   16684:	d0f8      	beq.n	16678 <console_buffer+0x8>
    if (!semihost_mbuf) {                   //  Allocate mbuf if not already allocated.
   16686:	4b0e      	ldr	r3, [pc, #56]	; (166c0 <console_buffer+0x50>)
   16688:	681b      	ldr	r3, [r3, #0]
   1668a:	b173      	cbz	r3, 166aa <console_buffer+0x3a>
    if (os_mbuf_len(semihost_mbuf) + length >= OUTPUT_BUFFER_SIZE) { return; }
   1668c:	4b0c      	ldr	r3, [pc, #48]	; (166c0 <console_buffer+0x50>)
   1668e:	6818      	ldr	r0, [r3, #0]
   16690:	f001 fbf0 	bl	17e74 <os_mbuf_len>
   16694:	4428      	add	r0, r5
   16696:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
   1669a:	d2ed      	bcs.n	16678 <console_buffer+0x8>
    rc = os_mbuf_append(semihost_mbuf, buffer, length);
   1669c:	b2aa      	uxth	r2, r5
   1669e:	4621      	mov	r1, r4
   166a0:	4b07      	ldr	r3, [pc, #28]	; (166c0 <console_buffer+0x50>)
   166a2:	6818      	ldr	r0, [r3, #0]
   166a4:	f001 fbf0 	bl	17e88 <os_mbuf_append>
   166a8:	e7e6      	b.n	16678 <console_buffer+0x8>
        semihost_mbuf = os_msys_get_pkthdr(length, 0);
   166aa:	2100      	movs	r1, #0
   166ac:	b2a8      	uxth	r0, r5
   166ae:	f001 fd93 	bl	181d8 <os_msys_get_pkthdr>
   166b2:	4b03      	ldr	r3, [pc, #12]	; (166c0 <console_buffer+0x50>)
   166b4:	6018      	str	r0, [r3, #0]
        if (!semihost_mbuf) { return; }  //  If out of memory, quit.
   166b6:	2800      	cmp	r0, #0
   166b8:	d1e8      	bne.n	1668c <console_buffer+0x1c>
   166ba:	e7dd      	b.n	16678 <console_buffer+0x8>
   166bc:	200000f8 	.word	0x200000f8
   166c0:	20000ea4 	.word	0x20000ea4

000166c4 <semihosting_console_write_ch>:
    float f_abs = *neg ? -f : f;          //  Absolute value of f
    *i = (int) f_abs;                     //  Integer part
    *d = ((int) (1000000.0f * f_abs)) % 1000000;  //  6 decimal places
}

static void semihosting_console_write_ch(char c) {
   166c4:	b500      	push	{lr}
   166c6:	b083      	sub	sp, #12
   166c8:	f88d 0007 	strb.w	r0, [sp, #7]
    if (c == '\r') { return; }  //  Don't display \r.
   166cc:	280d      	cmp	r0, #13
   166ce:	d004      	beq.n	166da <semihosting_console_write_ch+0x16>
    console_buffer(&c, 1);  //  Append the char to the output buffer.
   166d0:	2101      	movs	r1, #1
   166d2:	f10d 0007 	add.w	r0, sp, #7
   166d6:	f7ff ffcb 	bl	16670 <console_buffer>
    //  if (c == '\n') { console_flush(); }  //  If we see a newline, flush the buffer.
}
   166da:	b003      	add	sp, #12
   166dc:	f85d fb04 	ldr.w	pc, [sp], #4

000166e0 <console_printhex>:
void console_printhex(uint8_t v) {
   166e0:	b510      	push	{r4, lr}
   166e2:	b082      	sub	sp, #8
    for(uint8_t divisor = 16; divisor >= 1; divisor = divisor / 16) {
   166e4:	2310      	movs	r3, #16
    int length = 0;
   166e6:	2200      	movs	r2, #0
    for(uint8_t divisor = 16; divisor >= 1; divisor = divisor / 16) {
   166e8:	e005      	b.n	166f6 <console_printhex+0x16>
        v = v % divisor;
   166ea:	fbb0 f1f3 	udiv	r1, r0, r3
   166ee:	fb03 0011 	mls	r0, r3, r1, r0
   166f2:	b2c0      	uxtb	r0, r0
    for(uint8_t divisor = 16; divisor >= 1; divisor = divisor / 16) {
   166f4:	091b      	lsrs	r3, r3, #4
   166f6:	b18b      	cbz	r3, 1671c <console_printhex+0x3c>
        char digit = '0' + (char)(v / divisor);
   166f8:	fbb0 f4f3 	udiv	r4, r0, r3
   166fc:	f104 0130 	add.w	r1, r4, #48	; 0x30
   16700:	b2c9      	uxtb	r1, r1
        if (digit > '9') { digit = digit - 10 - '0' + 'a'; }
   16702:	2939      	cmp	r1, #57	; 0x39
   16704:	d902      	bls.n	1670c <console_printhex+0x2c>
   16706:	f104 0157 	add.w	r1, r4, #87	; 0x57
   1670a:	b2c9      	uxtb	r1, r1
            if (length < size) {
   1670c:	2a02      	cmp	r2, #2
   1670e:	dcec      	bgt.n	166ea <console_printhex+0xa>
                buffer[length++] = digit;
   16710:	ac02      	add	r4, sp, #8
   16712:	4414      	add	r4, r2
   16714:	f804 1c04 	strb.w	r1, [r4, #-4]
   16718:	3201      	adds	r2, #1
   1671a:	e7e6      	b.n	166ea <console_printhex+0xa>
    if (length == 0) { buffer[length++] = '0'; };
   1671c:	b92a      	cbnz	r2, 1672a <console_printhex+0x4a>
   1671e:	ab02      	add	r3, sp, #8
   16720:	4413      	add	r3, r2
   16722:	2130      	movs	r1, #48	; 0x30
   16724:	f803 1c04 	strb.w	r1, [r3, #-4]
   16728:	3201      	adds	r2, #1
    if (length < size) buffer[length] = 0;
   1672a:	2a02      	cmp	r2, #2
   1672c:	dc04      	bgt.n	16738 <console_printhex+0x58>
   1672e:	ab02      	add	r3, sp, #8
   16730:	441a      	add	r2, r3
   16732:	2300      	movs	r3, #0
   16734:	f802 3c04 	strb.w	r3, [r2, #-4]
    buffer[size - 1] = 0;  //  Terminate in case of overflow.
   16738:	2300      	movs	r3, #0
   1673a:	f88d 3006 	strb.w	r3, [sp, #6]
    console_buffer(buffer, strlen(buffer));
   1673e:	a801      	add	r0, sp, #4
   16740:	f002 fb73 	bl	18e2a <strlen>
   16744:	4601      	mov	r1, r0
   16746:	a801      	add	r0, sp, #4
   16748:	f7ff ff92 	bl	16670 <console_buffer>
}
   1674c:	b002      	add	sp, #8
   1674e:	bd10      	pop	{r4, pc}

00016750 <console_printint>:
void console_printint(int i) {
   16750:	b508      	push	{r3, lr}
    console_printf("%d", i);
   16752:	4601      	mov	r1, r0
   16754:	4801      	ldr	r0, [pc, #4]	; (1675c <console_printint+0xc>)
   16756:	f000 f873 	bl	16840 <console_printf>
}
   1675a:	bd08      	pop	{r3, pc}
   1675c:	0001f674 	.word	0x0001f674

00016760 <console_dump>:
    if (buffer == NULL || len == 0) { return; }
   16760:	b180      	cbz	r0, 16784 <console_dump+0x24>
void console_dump(const uint8_t *buffer, unsigned int len) {
   16762:	b570      	push	{r4, r5, r6, lr}
   16764:	4606      	mov	r6, r0
    if (buffer == NULL || len == 0) { return; }
   16766:	b161      	cbz	r1, 16782 <console_dump+0x22>
   16768:	460d      	mov	r5, r1
	for (int i = 0; i < len; i++) { console_printhex(buffer[i]); console_buffer(" ", 1); } 
   1676a:	2400      	movs	r4, #0
   1676c:	e007      	b.n	1677e <console_dump+0x1e>
   1676e:	5d30      	ldrb	r0, [r6, r4]
   16770:	f7ff ffb6 	bl	166e0 <console_printhex>
   16774:	2101      	movs	r1, #1
   16776:	4804      	ldr	r0, [pc, #16]	; (16788 <console_dump+0x28>)
   16778:	f7ff ff7a 	bl	16670 <console_buffer>
   1677c:	3401      	adds	r4, #1
   1677e:	42ac      	cmp	r4, r5
   16780:	d3f5      	bcc.n	1676e <console_dump+0xe>
}
   16782:	bd70      	pop	{r4, r5, r6, pc}
   16784:	4770      	bx	lr
   16786:	bf00      	nop
   16788:	0001f670 	.word	0x0001f670

0001678c <console_out_nolock>:

int console_out_nolock(int character) {
   1678c:	b538      	push	{r3, r4, r5, lr}
    char c = (char)character;
   1678e:	b2c5      	uxtb	r5, r0
    if (g_silence_console) { return c; }
   16790:	4b0b      	ldr	r3, [pc, #44]	; (167c0 <console_out_nolock+0x34>)
   16792:	781b      	ldrb	r3, [r3, #0]
   16794:	b953      	cbnz	r3, 167ac <console_out_nolock+0x20>
   16796:	4604      	mov	r4, r0
    if ('\n' == c) {
   16798:	2d0a      	cmp	r5, #10
   1679a:	d009      	beq.n	167b0 <console_out_nolock+0x24>
        semihosting_console_write_ch('\r');
        console_is_midline = 0;
    } else {
        console_is_midline = 1;
   1679c:	4b09      	ldr	r3, [pc, #36]	; (167c4 <console_out_nolock+0x38>)
   1679e:	2201      	movs	r2, #1
   167a0:	601a      	str	r2, [r3, #0]
    }
    semihosting_console_write_ch(c);
   167a2:	4628      	mov	r0, r5
   167a4:	f7ff ff8e 	bl	166c4 <semihosting_console_write_ch>
    return character;
   167a8:	4620      	mov	r0, r4
}
   167aa:	bd38      	pop	{r3, r4, r5, pc}
   167ac:	4628      	mov	r0, r5
    if (g_silence_console) { return c; }
   167ae:	e7fc      	b.n	167aa <console_out_nolock+0x1e>
        semihosting_console_write_ch('\r');
   167b0:	200d      	movs	r0, #13
   167b2:	f7ff ff87 	bl	166c4 <semihosting_console_write_ch>
        console_is_midline = 0;
   167b6:	4b03      	ldr	r3, [pc, #12]	; (167c4 <console_out_nolock+0x38>)
   167b8:	2200      	movs	r2, #0
   167ba:	601a      	str	r2, [r3, #0]
   167bc:	e7f1      	b.n	167a2 <console_out_nolock+0x16>
   167be:	bf00      	nop
   167c0:	20009d54 	.word	0x20009d54
   167c4:	20009d58 	.word	0x20009d58

000167c8 <semihosting_console_init>:

void console_rx_restart(void) {}

int semihosting_console_is_init(void) { return 1; }

int semihosting_console_init(void) { return 0; }
   167c8:	2000      	movs	r0, #0
   167ca:	4770      	bx	lr

000167cc <console_write>:

int console_unlock(void) { return OS_OK; }

int console_out(int c) { return console_out_nolock(c); }

void console_write(const char *str, int cnt) {
   167cc:	b570      	push	{r4, r5, r6, lr}
   167ce:	4606      	mov	r6, r0
   167d0:	460d      	mov	r5, r1
    int i;
    for (i = 0; i < cnt; i++) {
   167d2:	2400      	movs	r4, #0
   167d4:	42ac      	cmp	r4, r5
   167d6:	da07      	bge.n	167e8 <console_write+0x1c>
        if (console_out_nolock((int)str[i]) == EOF) { break; }
   167d8:	5d30      	ldrb	r0, [r6, r4]
   167da:	f7ff ffd7 	bl	1678c <console_out_nolock>
   167de:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
   167e2:	d001      	beq.n	167e8 <console_write+0x1c>
    for (i = 0; i < cnt; i++) {
   167e4:	3401      	adds	r4, #1
   167e6:	e7f5      	b.n	167d4 <console_write+0x8>
    }
}
   167e8:	bd70      	pop	{r4, r5, r6, pc}

000167ea <console_blocking_mode>:

void console_blocking_mode(void) {
   167ea:	b508      	push	{r3, lr}
    disable_buffer();
   167ec:	f7ff ff3c 	bl	16668 <disable_buffer>
}
   167f0:	bd08      	pop	{r3, pc}
	...

000167f4 <console_pkg_init>:

void console_deinit(void) {}

void console_reinit(void) {}

void console_pkg_init(void) {
   167f4:	b510      	push	{r4, lr}
   167f6:	b082      	sub	sp, #8
    int rc = 0;

    /* Ensure this function only gets called by sysinit. */
    SYSINIT_ASSERT_ACTIVE();
   167f8:	4b0d      	ldr	r3, [pc, #52]	; (16830 <console_pkg_init+0x3c>)
   167fa:	781b      	ldrb	r3, [r3, #0]
   167fc:	b193      	cbz	r3, 16824 <console_pkg_init+0x30>

    os_eventq_init(&avail_queue);
   167fe:	480d      	ldr	r0, [pc, #52]	; (16834 <console_pkg_init+0x40>)
   16800:	f001 f9fa 	bl	17bf8 <os_eventq_init>
    os_mutex_init(&console_write_lock);
   16804:	480c      	ldr	r0, [pc, #48]	; (16838 <console_pkg_init+0x44>)
   16806:	f001 fd15 	bl	18234 <os_mutex_init>

#if MYNEWT_VAL(CONSOLE_SEMIHOSTING)
    rc = semihosting_console_init();
   1680a:	f7ff ffdd 	bl	167c8 <semihosting_console_init>
#endif
    SYSINIT_PANIC_ASSERT(rc == 0);
   1680e:	b138      	cbz	r0, 16820 <console_pkg_init+0x2c>
   16810:	2000      	movs	r0, #0
   16812:	9000      	str	r0, [sp, #0]
   16814:	4b09      	ldr	r3, [pc, #36]	; (1683c <console_pkg_init+0x48>)
   16816:	681c      	ldr	r4, [r3, #0]
   16818:	4603      	mov	r3, r0
   1681a:	4602      	mov	r2, r0
   1681c:	4601      	mov	r1, r0
   1681e:	47a0      	blx	r4
}
   16820:	b002      	add	sp, #8
   16822:	bd10      	pop	{r4, pc}
    SYSINIT_ASSERT_ACTIVE();
   16824:	461a      	mov	r2, r3
   16826:	4619      	mov	r1, r3
   16828:	4618      	mov	r0, r3
   1682a:	f000 fed1 	bl	175d0 <__assert_func>
   1682e:	bf00      	nop
   16830:	20009d5c 	.word	0x20009d5c
   16834:	20000ea8 	.word	0x20000ea8
   16838:	20000eb8 	.word	0x20000eb8
   1683c:	200000fc 	.word	0x200000fc

00016840 <console_printf>:
 *                                  unlimited.  This return value is analogous
 *                                  to that of snprintf.
 */
int
console_printf(const char *fmt, ...)
{
   16840:	b40f      	push	{r0, r1, r2, r3}
   16842:	b510      	push	{r4, lr}
   16844:	b082      	sub	sp, #8
    va_list args;
    int num_chars;

    num_chars = 0;

    if (console_get_ticks()) {
   16846:	f000 f81f 	bl	16888 <console_get_ticks>
   1684a:	b160      	cbz	r0, 16866 <console_printf+0x26>
        /* Prefix each line with a timestamp. */
        if (!console_is_midline) {
   1684c:	4b0c      	ldr	r3, [pc, #48]	; (16880 <console_printf+0x40>)
   1684e:	681b      	ldr	r3, [r3, #0]
   16850:	b10b      	cbz	r3, 16856 <console_printf+0x16>
    num_chars = 0;
   16852:	2400      	movs	r4, #0
   16854:	e008      	b.n	16868 <console_printf+0x28>
            num_chars += printf("%06lu ", (unsigned long)os_time_get());
   16856:	f002 f8d9 	bl	18a0c <os_time_get>
   1685a:	4601      	mov	r1, r0
   1685c:	4809      	ldr	r0, [pc, #36]	; (16884 <console_printf+0x44>)
   1685e:	f002 fd97 	bl	19390 <printf>
   16862:	4604      	mov	r4, r0
   16864:	e000      	b.n	16868 <console_printf+0x28>
    num_chars = 0;
   16866:	2400      	movs	r4, #0
        }
    }

    va_start(args, fmt);
   16868:	a905      	add	r1, sp, #20
   1686a:	9101      	str	r1, [sp, #4]
    num_chars += vprintf(fmt, args);
   1686c:	9804      	ldr	r0, [sp, #16]
   1686e:	f002 fdbf 	bl	193f0 <vprintf>
    va_end(args);

    return num_chars;
}
   16872:	4420      	add	r0, r4
   16874:	b002      	add	sp, #8
   16876:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1687a:	b004      	add	sp, #16
   1687c:	4770      	bx	lr
   1687e:	bf00      	nop
   16880:	20009d58 	.word	0x20009d58
   16884:	0001f678 	.word	0x0001f678

00016888 <console_get_ticks>:

/* return value of CONSOLE_TICKS */
char console_get_ticks(void)
{
    return do_ticks;
}
   16888:	4b01      	ldr	r3, [pc, #4]	; (16890 <console_get_ticks+0x8>)
   1688a:	7818      	ldrb	r0, [r3, #0]
   1688c:	4770      	bx	lr
   1688e:	bf00      	nop
   16890:	20000ec4 	.word	0x20000ec4

00016894 <sysinit_dflt_panic_cb>:
#include "os/mynewt.h"

static void
sysinit_dflt_panic_cb(const char *file, int line, const char *func,
                      const char *expr, const char *msg)
{
   16894:	b508      	push	{r3, lr}
    if (msg != NULL) {
        fprintf(stderr, "sysinit failure: %s\n", msg);
    }
#endif

    __assert_func(file, line, func, expr);
   16896:	f000 fe9b 	bl	175d0 <__assert_func>
	...

0001689c <sysinit_start>:
}

void
sysinit_start(void)
{
    sysinit_active = 1;
   1689c:	4b01      	ldr	r3, [pc, #4]	; (168a4 <sysinit_start+0x8>)
   1689e:	2201      	movs	r2, #1
   168a0:	701a      	strb	r2, [r3, #0]
}
   168a2:	4770      	bx	lr
   168a4:	20009d5c 	.word	0x20009d5c

000168a8 <sysinit_end>:

void
sysinit_end(void)
{
    sysinit_active = 0;
   168a8:	4b01      	ldr	r3, [pc, #4]	; (168b0 <sysinit_end+0x8>)
   168aa:	2200      	movs	r2, #0
   168ac:	701a      	strb	r2, [r3, #0]
}
   168ae:	4770      	bx	lr
   168b0:	20009d5c 	.word	0x20009d5c

000168b4 <NVIC_Relocate>:
     * designated in the linker script.
     */
    current_location = (uint32_t *)&__isr_vector;
    new_location = (uint32_t *)&__vector_tbl_reloc__;

    if (new_location != current_location) {
   168b4:	4a09      	ldr	r2, [pc, #36]	; (168dc <NVIC_Relocate+0x28>)
   168b6:	4b0a      	ldr	r3, [pc, #40]	; (168e0 <NVIC_Relocate+0x2c>)
   168b8:	429a      	cmp	r2, r3
   168ba:	d00a      	beq.n	168d2 <NVIC_Relocate+0x1e>
        for (i = 0; i < NVIC_NUM_VECTORS; i++) {
   168bc:	2300      	movs	r3, #0
   168be:	e006      	b.n	168ce <NVIC_Relocate+0x1a>
            new_location[i] = current_location[i];
   168c0:	4a07      	ldr	r2, [pc, #28]	; (168e0 <NVIC_Relocate+0x2c>)
   168c2:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
   168c6:	4a05      	ldr	r2, [pc, #20]	; (168dc <NVIC_Relocate+0x28>)
   168c8:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
        for (i = 0; i < NVIC_NUM_VECTORS; i++) {
   168cc:	3301      	adds	r3, #1
   168ce:	2b35      	cmp	r3, #53	; 0x35
   168d0:	ddf6      	ble.n	168c0 <NVIC_Relocate+0xc>
    }

    /* Set VTOR except for M0 */
#if ((__CORTEX_M == 0) && (__VTOR_PRESENT == 0))
#else
    SCB->VTOR = (uint32_t)&__vector_tbl_reloc__;
   168d2:	4a02      	ldr	r2, [pc, #8]	; (168dc <NVIC_Relocate+0x28>)
   168d4:	4b03      	ldr	r3, [pc, #12]	; (168e4 <NVIC_Relocate+0x30>)
   168d6:	609a      	str	r2, [r3, #8]
#endif
}
   168d8:	4770      	bx	lr
   168da:	bf00      	nop
   168dc:	20000000 	.word	0x20000000
   168e0:	00008020 	.word	0x00008020
   168e4:	e000ed00 	.word	0xe000ed00

000168e8 <hal_gpio_irq_handler>:
 *
 * @param index
 */
static void
hal_gpio_irq_handler(void)
{
   168e8:	b510      	push	{r4, lr}
#if NRF52840_XXAA
    gpio_state |= (uint64_t)NRF_P1->IN << 32;
#endif
#endif

    for (i = 0; i < HAL_GPIO_MAX_IRQ; i++) {
   168ea:	2400      	movs	r4, #0
   168ec:	e000      	b.n	168f0 <hal_gpio_irq_handler+0x8>
   168ee:	3401      	adds	r4, #1
   168f0:	2c07      	cmp	r4, #7
   168f2:	dc1c      	bgt.n	1692e <hal_gpio_irq_handler+0x46>
        if ((hal_gpio_irqs[i].sense_trig == HAL_GPIO_SENSE_TRIG_BOTH) ||
            (hal_gpio_irqs[i].sense_trig == sense_trig)) {
            hal_gpio_irqs[i].func(hal_gpio_irqs[i].arg);
        }
#else
        if (NRF_GPIOTE->EVENTS_IN[i] && (NRF_GPIOTE->INTENSET & (1 << i))) {
   168f4:	f104 0340 	add.w	r3, r4, #64	; 0x40
   168f8:	4a0d      	ldr	r2, [pc, #52]	; (16930 <hal_gpio_irq_handler+0x48>)
   168fa:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
   168fe:	2b00      	cmp	r3, #0
   16900:	d0f5      	beq.n	168ee <hal_gpio_irq_handler+0x6>
   16902:	f8d2 2304 	ldr.w	r2, [r2, #772]	; 0x304
   16906:	2301      	movs	r3, #1
   16908:	40a3      	lsls	r3, r4
   1690a:	421a      	tst	r2, r3
   1690c:	d0ef      	beq.n	168ee <hal_gpio_irq_handler+0x6>
            NRF_GPIOTE->EVENTS_IN[i] = 0;
   1690e:	f104 0340 	add.w	r3, r4, #64	; 0x40
   16912:	4a07      	ldr	r2, [pc, #28]	; (16930 <hal_gpio_irq_handler+0x48>)
   16914:	2100      	movs	r1, #0
   16916:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
            if (hal_gpio_irqs[i].func) {
   1691a:	4b06      	ldr	r3, [pc, #24]	; (16934 <hal_gpio_irq_handler+0x4c>)
   1691c:	f853 2034 	ldr.w	r2, [r3, r4, lsl #3]
   16920:	2a00      	cmp	r2, #0
   16922:	d0e4      	beq.n	168ee <hal_gpio_irq_handler+0x6>
                hal_gpio_irqs[i].func(hal_gpio_irqs[i].arg);
   16924:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
   16928:	6858      	ldr	r0, [r3, #4]
   1692a:	4790      	blx	r2
   1692c:	e7df      	b.n	168ee <hal_gpio_irq_handler+0x6>
        }
#endif
    }

    os_trace_isr_exit();
}
   1692e:	bd10      	pop	{r4, pc}
   16930:	40006000 	.word	0x40006000
   16934:	20000ec8 	.word	0x20000ec8

00016938 <hal_gpio_irq_setup>:
static void
hal_gpio_irq_setup(void)
{
    static uint8_t irq_setup = 0;

    if (!irq_setup) {
   16938:	4b06      	ldr	r3, [pc, #24]	; (16954 <hal_gpio_irq_setup+0x1c>)
   1693a:	781b      	ldrb	r3, [r3, #0]
   1693c:	b94b      	cbnz	r3, 16952 <hal_gpio_irq_setup+0x1a>
  uint32_t vectors = (uint32_t )SCB->VTOR;
   1693e:	4b06      	ldr	r3, [pc, #24]	; (16958 <hal_gpio_irq_setup+0x20>)
   16940:	689b      	ldr	r3, [r3, #8]
  (* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4)) = vector;
   16942:	4a06      	ldr	r2, [pc, #24]	; (1695c <hal_gpio_irq_setup+0x24>)
   16944:	659a      	str	r2, [r3, #88]	; 0x58
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   16946:	4b06      	ldr	r3, [pc, #24]	; (16960 <hal_gpio_irq_setup+0x28>)
   16948:	2240      	movs	r2, #64	; 0x40
   1694a:	601a      	str	r2, [r3, #0]
        NVIC_SetVector(GPIOTE_IRQn, (uint32_t)hal_gpio_irq_handler);
        NVIC_EnableIRQ(GPIOTE_IRQn);
        irq_setup = 1;
   1694c:	4b01      	ldr	r3, [pc, #4]	; (16954 <hal_gpio_irq_setup+0x1c>)
   1694e:	2201      	movs	r2, #1
   16950:	701a      	strb	r2, [r3, #0]
#if MYNEWT_VAL(MCU_GPIO_USE_PORT_EVENT)
        NRF_GPIOTE->INTENCLR = GPIOTE_INTENCLR_PORT_Msk;
        NRF_GPIOTE->EVENTS_PORT = 0;
#endif
    }
}
   16952:	4770      	bx	lr
   16954:	20000f08 	.word	0x20000f08
   16958:	e000ed00 	.word	0xe000ed00
   1695c:	000168e9 	.word	0x000168e9
   16960:	e000e100 	.word	0xe000e100

00016964 <hal_gpio_find_empty_slot>:
static int
hal_gpio_find_empty_slot(void)
{
    int i;

    for (i = 0; i < HAL_GPIO_MAX_IRQ; i++) {
   16964:	2000      	movs	r0, #0
   16966:	2807      	cmp	r0, #7
   16968:	dc05      	bgt.n	16976 <hal_gpio_find_empty_slot+0x12>
        if (hal_gpio_irqs[i].func == NULL) {
   1696a:	4b04      	ldr	r3, [pc, #16]	; (1697c <hal_gpio_find_empty_slot+0x18>)
   1696c:	f853 3030 	ldr.w	r3, [r3, r0, lsl #3]
   16970:	b11b      	cbz	r3, 1697a <hal_gpio_find_empty_slot+0x16>
    for (i = 0; i < HAL_GPIO_MAX_IRQ; i++) {
   16972:	3001      	adds	r0, #1
   16974:	e7f7      	b.n	16966 <hal_gpio_find_empty_slot+0x2>
            return i;
        }
    }
    return -1;
   16976:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
}
   1697a:	4770      	bx	lr
   1697c:	20000ec8 	.word	0x20000ec8

00016980 <hal_gpio_find_pin>:
        if (hal_gpio_irqs[i].func && hal_gpio_irqs[i].pin == pin) {
            return i;
        }
    }
#else
    pin = pin << GPIOTE_CONFIG_PSEL_Pos;
   16980:	0201      	lsls	r1, r0, #8

    for (i = 0; i < HAL_GPIO_MAX_IRQ; i++) {
   16982:	2000      	movs	r0, #0
   16984:	e000      	b.n	16988 <hal_gpio_find_pin+0x8>
   16986:	3001      	adds	r0, #1
   16988:	2807      	cmp	r0, #7
   1698a:	dc0e      	bgt.n	169aa <hal_gpio_find_pin+0x2a>
        if (hal_gpio_irqs[i].func &&
   1698c:	4b08      	ldr	r3, [pc, #32]	; (169b0 <hal_gpio_find_pin+0x30>)
   1698e:	f853 3030 	ldr.w	r3, [r3, r0, lsl #3]
   16992:	2b00      	cmp	r3, #0
   16994:	d0f7      	beq.n	16986 <hal_gpio_find_pin+0x6>
           (NRF_GPIOTE->CONFIG[i] & HAL_GPIOTE_PIN_MASK) == pin) {
   16996:	f500 73a2 	add.w	r3, r0, #324	; 0x144
   1699a:	4a06      	ldr	r2, [pc, #24]	; (169b4 <hal_gpio_find_pin+0x34>)
   1699c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
   169a0:	f403 53f8 	and.w	r3, r3, #7936	; 0x1f00
        if (hal_gpio_irqs[i].func &&
   169a4:	428b      	cmp	r3, r1
   169a6:	d1ee      	bne.n	16986 <hal_gpio_find_pin+0x6>
   169a8:	e001      	b.n	169ae <hal_gpio_find_pin+0x2e>
            return i;
        }
    }
#endif

    return -1;
   169aa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
}
   169ae:	4770      	bx	lr
   169b0:	20000ec8 	.word	0x20000ec8
   169b4:	40006000 	.word	0x40006000

000169b8 <hal_gpio_init_in>:
    switch (pull) {
   169b8:	2901      	cmp	r1, #1
   169ba:	d003      	beq.n	169c4 <hal_gpio_init_in+0xc>
   169bc:	2902      	cmp	r1, #2
   169be:	d00f      	beq.n	169e0 <hal_gpio_init_in+0x28>
        conf = 0;
   169c0:	2100      	movs	r1, #0
        break;
   169c2:	e000      	b.n	169c6 <hal_gpio_init_in+0xe>
        conf = GPIO_PIN_CNF_PULL_Pullup << GPIO_PIN_CNF_PULL_Pos;
   169c4:	210c      	movs	r1, #12
    port->PIN_CNF[pin_index] = conf;
   169c6:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
   169ca:	f500 73e0 	add.w	r3, r0, #448	; 0x1c0
   169ce:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
    port->DIRCLR = HAL_GPIO_MASK(pin);
   169d2:	2301      	movs	r3, #1
   169d4:	fa03 f000 	lsl.w	r0, r3, r0
   169d8:	f8c2 051c 	str.w	r0, [r2, #1308]	; 0x51c
}
   169dc:	2000      	movs	r0, #0
   169de:	4770      	bx	lr
        conf = GPIO_PIN_CNF_PULL_Pulldown << GPIO_PIN_CNF_PULL_Pos;
   169e0:	2104      	movs	r1, #4
   169e2:	e7f0      	b.n	169c6 <hal_gpio_init_in+0xe>

000169e4 <hal_gpio_init_out>:
    if (val) {
   169e4:	b999      	cbnz	r1, 16a0e <hal_gpio_init_out+0x2a>
        port->OUTCLR = HAL_GPIO_MASK(pin);
   169e6:	2301      	movs	r3, #1
   169e8:	4083      	lsls	r3, r0
   169ea:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
   169ee:	f8c2 350c 	str.w	r3, [r2, #1292]	; 0x50c
    port->PIN_CNF[pin_index] = GPIO_PIN_CNF_DIR_Output |
   169f2:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
   169f6:	f500 73e0 	add.w	r3, r0, #448	; 0x1c0
   169fa:	2103      	movs	r1, #3
   169fc:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
    port->DIRSET = HAL_GPIO_MASK(pin);
   16a00:	2301      	movs	r3, #1
   16a02:	fa03 f000 	lsl.w	r0, r3, r0
   16a06:	f8c2 0518 	str.w	r0, [r2, #1304]	; 0x518
}
   16a0a:	2000      	movs	r0, #0
   16a0c:	4770      	bx	lr
        port->OUTSET = HAL_GPIO_MASK(pin);
   16a0e:	2301      	movs	r3, #1
   16a10:	4083      	lsls	r3, r0
   16a12:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
   16a16:	f8c2 3508 	str.w	r3, [r2, #1288]	; 0x508
   16a1a:	e7ea      	b.n	169f2 <hal_gpio_init_out+0xe>

00016a1c <hal_gpio_write>:
    if (val) {
   16a1c:	b939      	cbnz	r1, 16a2e <hal_gpio_write+0x12>
        port->OUTCLR = HAL_GPIO_MASK(pin);
   16a1e:	2301      	movs	r3, #1
   16a20:	fa03 f000 	lsl.w	r0, r3, r0
   16a24:	f04f 43a0 	mov.w	r3, #1342177280	; 0x50000000
   16a28:	f8c3 050c 	str.w	r0, [r3, #1292]	; 0x50c
}
   16a2c:	4770      	bx	lr
        port->OUTSET = HAL_GPIO_MASK(pin);
   16a2e:	2301      	movs	r3, #1
   16a30:	fa03 f000 	lsl.w	r0, r3, r0
   16a34:	f04f 43a0 	mov.w	r3, #1342177280	; 0x50000000
   16a38:	f8c3 0508 	str.w	r0, [r3, #1288]	; 0x508
   16a3c:	4770      	bx	lr

00016a3e <hal_gpio_read>:
    return (port->DIR & HAL_GPIO_MASK(pin)) ?
   16a3e:	f04f 43a0 	mov.w	r3, #1342177280	; 0x50000000
   16a42:	f8d3 2514 	ldr.w	r2, [r3, #1300]	; 0x514
   16a46:	2301      	movs	r3, #1
   16a48:	4083      	lsls	r3, r0
        (port->OUT >> HAL_GPIO_INDEX(pin)) & 1UL :
   16a4a:	421a      	tst	r2, r3
   16a4c:	d108      	bne.n	16a60 <hal_gpio_read+0x22>
        (port->IN >> HAL_GPIO_INDEX(pin)) & 1UL;
   16a4e:	f04f 43a0 	mov.w	r3, #1342177280	; 0x50000000
   16a52:	f8d3 3510 	ldr.w	r3, [r3, #1296]	; 0x510
   16a56:	fa23 f000 	lsr.w	r0, r3, r0
        (port->OUT >> HAL_GPIO_INDEX(pin)) & 1UL :
   16a5a:	f000 0001 	and.w	r0, r0, #1
}
   16a5e:	4770      	bx	lr
        (port->OUT >> HAL_GPIO_INDEX(pin)) & 1UL :
   16a60:	f04f 43a0 	mov.w	r3, #1342177280	; 0x50000000
   16a64:	f8d3 3504 	ldr.w	r3, [r3, #1284]	; 0x504
   16a68:	fa23 f000 	lsr.w	r0, r3, r0
   16a6c:	f000 0001 	and.w	r0, r0, #1
   16a70:	4770      	bx	lr
	...

00016a74 <hal_gpio_irq_init>:
 * @return int
 */
int
hal_gpio_irq_init(int pin, hal_gpio_irq_handler_t handler, void *arg,
                  hal_gpio_irq_trig_t trig, hal_gpio_pull_t pull)
{
   16a74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   16a78:	4680      	mov	r8, r0
   16a7a:	460f      	mov	r7, r1
   16a7c:	4616      	mov	r6, r2
   16a7e:	461c      	mov	r4, r3
    uint32_t conf;
    int i;

    hal_gpio_irq_setup();
   16a80:	f7ff ff5a 	bl	16938 <hal_gpio_irq_setup>
    i = hal_gpio_find_empty_slot();
   16a84:	f7ff ff6e 	bl	16964 <hal_gpio_find_empty_slot>
    if (i < 0) {
   16a88:	1e05      	subs	r5, r0, #0
   16a8a:	db27      	blt.n	16adc <hal_gpio_irq_init+0x68>
        return -1;
    }
    hal_gpio_init_in(pin, pull);
   16a8c:	f89d 1018 	ldrb.w	r1, [sp, #24]
   16a90:	4640      	mov	r0, r8
   16a92:	f7ff ff91 	bl	169b8 <hal_gpio_init_in>
    default:
        hal_gpio_irqs[i].sense_trig = HAL_GPIO_SENSE_TRIG_NONE;
        return -1;
    }
#else
    switch (trig) {
   16a96:	2c02      	cmp	r4, #2
   16a98:	d01d      	beq.n	16ad6 <hal_gpio_irq_init+0x62>
   16a9a:	2c03      	cmp	r4, #3
   16a9c:	d018      	beq.n	16ad0 <hal_gpio_irq_init+0x5c>
   16a9e:	2c01      	cmp	r4, #1
   16aa0:	d002      	beq.n	16aa8 <hal_gpio_irq_init+0x34>
        break;
    case HAL_GPIO_TRIG_BOTH:
        conf = GPIOTE_CONFIG_POLARITY_Toggle << GPIOTE_CONFIG_POLARITY_Pos;
        break;
    default:
        return -1;
   16aa2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   16aa6:	e011      	b.n	16acc <hal_gpio_irq_init+0x58>
        conf = GPIOTE_CONFIG_POLARITY_LoToHi << GPIOTE_CONFIG_POLARITY_Pos;
   16aa8:	f44f 3080 	mov.w	r0, #65536	; 0x10000
    }

    conf |= pin << GPIOTE_CONFIG_PSEL_Pos;
   16aac:	ea40 2008 	orr.w	r0, r0, r8, lsl #8
    conf |= GPIOTE_CONFIG_MODE_Event << GPIOTE_CONFIG_MODE_Pos;
   16ab0:	f040 0001 	orr.w	r0, r0, #1

    NRF_GPIOTE->CONFIG[i] = conf;
   16ab4:	f505 72a2 	add.w	r2, r5, #324	; 0x144
   16ab8:	4b0a      	ldr	r3, [pc, #40]	; (16ae4 <hal_gpio_irq_init+0x70>)
   16aba:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
#endif

    hal_gpio_irqs[i].func = handler;
   16abe:	4b0a      	ldr	r3, [pc, #40]	; (16ae8 <hal_gpio_irq_init+0x74>)
   16ac0:	f843 7035 	str.w	r7, [r3, r5, lsl #3]
    hal_gpio_irqs[i].arg = arg;
   16ac4:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
   16ac8:	605e      	str	r6, [r3, #4]

    return 0;
   16aca:	2000      	movs	r0, #0
}
   16acc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        conf = GPIOTE_CONFIG_POLARITY_Toggle << GPIOTE_CONFIG_POLARITY_Pos;
   16ad0:	f44f 3040 	mov.w	r0, #196608	; 0x30000
        break;
   16ad4:	e7ea      	b.n	16aac <hal_gpio_irq_init+0x38>
        conf = GPIOTE_CONFIG_POLARITY_HiToLo << GPIOTE_CONFIG_POLARITY_Pos;
   16ad6:	f44f 3000 	mov.w	r0, #131072	; 0x20000
   16ada:	e7e7      	b.n	16aac <hal_gpio_irq_init+0x38>
        return -1;
   16adc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   16ae0:	e7f4      	b.n	16acc <hal_gpio_irq_init+0x58>
   16ae2:	bf00      	nop
   16ae4:	40006000 	.word	0x40006000
   16ae8:	20000ec8 	.word	0x20000ec8

00016aec <hal_gpio_irq_enable>:
 *
 * @param pin
 */
void
hal_gpio_irq_enable(int pin)
{
   16aec:	b508      	push	{r3, lr}
    NRF_GPIO_Type *nrf_gpio;
    int pin_index;
#endif
    int i;

    i = hal_gpio_find_pin(pin);
   16aee:	f7ff ff47 	bl	16980 <hal_gpio_find_pin>
    if (i < 0) {
   16af2:	2800      	cmp	r0, #0
   16af4:	db0a      	blt.n	16b0c <hal_gpio_irq_enable+0x20>
        nrf_gpio->PIN_CNF[pin_index] |= GPIO_PIN_CNF_SENSE_High << GPIO_PIN_CNF_SENSE_Pos;
    }

    NRF_GPIOTE->INTENSET = GPIOTE_INTENSET_PORT_Msk;
#else
    NRF_GPIOTE->EVENTS_IN[i] = 0;
   16af6:	4a06      	ldr	r2, [pc, #24]	; (16b10 <hal_gpio_irq_enable+0x24>)
   16af8:	f100 0340 	add.w	r3, r0, #64	; 0x40
   16afc:	2100      	movs	r1, #0
   16afe:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
    NRF_GPIOTE->INTENSET = 1 << i;
   16b02:	2301      	movs	r3, #1
   16b04:	fa03 f000 	lsl.w	r0, r3, r0
   16b08:	f8c2 0304 	str.w	r0, [r2, #772]	; 0x304
#endif
}
   16b0c:	bd08      	pop	{r3, pc}
   16b0e:	bf00      	nop
   16b10:	40006000 	.word	0x40006000

00016b14 <hal_i2c_delay_us>:

static void
hal_i2c_delay_us(uint32_t number_of_us)
{
register uint32_t delay __ASM ("r0") = number_of_us;
__ASM volatile (
   16b14:	3801      	subs	r0, #1
   16b16:	bf00      	nop
   16b18:	bf00      	nop
   16b1a:	bf00      	nop
   16b1c:	bf00      	nop
   16b1e:	bf00      	nop
   16b20:	bf00      	nop
   16b22:	bf00      	nop
   16b24:	bf00      	nop
   16b26:	bf00      	nop
   16b28:	bf00      	nop
   16b2a:	bf00      	nop
   16b2c:	bf00      	nop
   16b2e:	bf00      	nop
   16b30:	bf00      	nop
   16b32:	bf00      	nop
   16b34:	bf00      	nop
   16b36:	bf00      	nop
   16b38:	bf00      	nop
   16b3a:	bf00      	nop
   16b3c:	bf00      	nop
   16b3e:	bf00      	nop
   16b40:	bf00      	nop
   16b42:	bf00      	nop
   16b44:	bf00      	nop
   16b46:	bf00      	nop
   16b48:	bf00      	nop
   16b4a:	bf00      	nop
   16b4c:	bf00      	nop
   16b4e:	bf00      	nop
   16b50:	bf00      	nop
   16b52:	bf00      	nop
   16b54:	bf00      	nop
   16b56:	bf00      	nop
   16b58:	bf00      	nop
   16b5a:	bf00      	nop
   16b5c:	bf00      	nop
   16b5e:	bf00      	nop
   16b60:	bf00      	nop
   16b62:	bf00      	nop
   16b64:	bf00      	nop
   16b66:	bf00      	nop
   16b68:	bf00      	nop
   16b6a:	bf00      	nop
   16b6c:	bf00      	nop
   16b6e:	bf00      	nop
   16b70:	bf00      	nop
   16b72:	bf00      	nop
   16b74:	bf00      	nop
   16b76:	bf00      	nop
   16b78:	bf00      	nop
   16b7a:	bf00      	nop
   16b7c:	bf00      	nop
   16b7e:	bf00      	nop
   16b80:	bf00      	nop
   16b82:	bf00      	nop
   16b84:	bf00      	nop
   16b86:	bf00      	nop
   16b88:	bf00      	nop
   16b8a:	d1c3      	bne.n	16b14 <hal_i2c_delay_us>
    " BNE 1b\n"
#ifdef NRF51
    ".syntax divided\n"
#endif
    : "+r" (delay));
}
   16b8c:	4770      	bx	lr
	...

00016b90 <hal_i2c_resolve>:

static int
hal_i2c_resolve(uint8_t i2c_num, struct nrf52_hal_i2c **out_i2c)
{
    if (i2c_num >= NRF52_HAL_I2C_MAX) {
   16b90:	2801      	cmp	r0, #1
   16b92:	d806      	bhi.n	16ba2 <hal_i2c_resolve+0x12>
        *out_i2c = NULL;
        return HAL_I2C_ERR_INVAL;
    }

    *out_i2c = nrf52_hal_i2cs[i2c_num];
   16b94:	4b06      	ldr	r3, [pc, #24]	; (16bb0 <hal_i2c_resolve+0x20>)
   16b96:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
   16b9a:	600b      	str	r3, [r1, #0]
    if (*out_i2c == NULL) {
   16b9c:	b12b      	cbz	r3, 16baa <hal_i2c_resolve+0x1a>
        return HAL_I2C_ERR_INVAL;
    }

    return 0;
   16b9e:	2000      	movs	r0, #0
}
   16ba0:	4770      	bx	lr
        *out_i2c = NULL;
   16ba2:	2300      	movs	r3, #0
   16ba4:	600b      	str	r3, [r1, #0]
        return HAL_I2C_ERR_INVAL;
   16ba6:	2002      	movs	r0, #2
   16ba8:	4770      	bx	lr
        return HAL_I2C_ERR_INVAL;
   16baa:	2002      	movs	r0, #2
   16bac:	4770      	bx	lr
   16bae:	bf00      	nop
   16bb0:	0001f680 	.word	0x0001f680

00016bb4 <hal_i2c_convert_status>:
 * Converts an nRF SDK I2C status to a HAL I2C error code.
 */
static int
hal_i2c_convert_status(int nrf_status)
{
    if (nrf_status == 0) {
   16bb4:	b148      	cbz	r0, 16bca <hal_i2c_convert_status+0x16>
        return 0;
    } else if (nrf_status & NRF_TWIM_ERROR_DATA_NACK) {
   16bb6:	f010 0f04 	tst.w	r0, #4
   16bba:	d107      	bne.n	16bcc <hal_i2c_convert_status+0x18>
        return HAL_I2C_ERR_DATA_NACK;
    } else if (nrf_status & NRF_TWIM_ERROR_ADDRESS_NACK) {
   16bbc:	f010 0f02 	tst.w	r0, #2
   16bc0:	d101      	bne.n	16bc6 <hal_i2c_convert_status+0x12>
        return HAL_I2C_ERR_ADDR_NACK;
    } else {
        return HAL_I2C_ERR_UNKNOWN;
   16bc2:	2001      	movs	r0, #1
    }
}
   16bc4:	4770      	bx	lr
        return HAL_I2C_ERR_ADDR_NACK;
   16bc6:	2004      	movs	r0, #4
   16bc8:	4770      	bx	lr
   16bca:	4770      	bx	lr
        return HAL_I2C_ERR_DATA_NACK;
   16bcc:	2005      	movs	r0, #5
   16bce:	4770      	bx	lr

00016bd0 <read_gpio_inbuffer>:
read_gpio_inbuffer(int pin)
{
    NRF_GPIO_Type *port;
    port = HAL_GPIO_PORT(pin);

    return (port->IN >> HAL_GPIO_INDEX(pin)) & 1UL;
   16bd0:	f04f 43a0 	mov.w	r3, #1342177280	; 0x50000000
   16bd4:	f8d3 3510 	ldr.w	r3, [r3, #1296]	; 0x510
   16bd8:	fa23 f000 	lsr.w	r0, r3, r0
}
   16bdc:	f000 0001 	and.w	r0, r0, #1
   16be0:	4770      	bx	lr

00016be2 <hal_i2c_clear_bus>:
 * Clear the bus after reset by clocking 9 bits manually.
 * This should reset state from (most of) the devices on the other end.
 */
static void
hal_i2c_clear_bus(int scl_pin, int sda_pin)
{
   16be2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   16be6:	4605      	mov	r5, r0
   16be8:	460e      	mov	r6, r1
    /* Resolve which GPIO port these pins belong to */
    scl_port = HAL_GPIO_PORT(scl_pin);
    sda_port = HAL_GPIO_PORT(sda_pin);

    /* Input connected, standard-low disconnected-high, pull-ups */
    scl_port->PIN_CNF[scl_pin] = NRF52_SCL_PIN_CONF;
   16bea:	f04f 44a0 	mov.w	r4, #1342177280	; 0x50000000
   16bee:	f500 78e0 	add.w	r8, r0, #448	; 0x1c0
   16bf2:	f240 630c 	movw	r3, #1548	; 0x60c
   16bf6:	f844 3028 	str.w	r3, [r4, r8, lsl #2]
    sda_port->PIN_CNF[sda_pin] = NRF52_SDA_PIN_CONF;
   16bfa:	f501 77e0 	add.w	r7, r1, #448	; 0x1c0
   16bfe:	f844 3027 	str.w	r3, [r4, r7, lsl #2]

    hal_gpio_write(scl_pin, 1);
   16c02:	2101      	movs	r1, #1
   16c04:	f7ff ff0a 	bl	16a1c <hal_gpio_write>
    hal_gpio_write(sda_pin, 1);
   16c08:	2101      	movs	r1, #1
   16c0a:	4630      	mov	r0, r6
   16c0c:	f7ff ff06 	bl	16a1c <hal_gpio_write>

    scl_port->PIN_CNF[scl_pin] = NRF52_SCL_PIN_CONF_CLR;
   16c10:	f240 630d 	movw	r3, #1549	; 0x60d
   16c14:	f844 3028 	str.w	r3, [r4, r8, lsl #2]
    sda_port->PIN_CNF[sda_pin] = NRF52_SDA_PIN_CONF_CLR;
   16c18:	f844 3027 	str.w	r3, [r4, r7, lsl #2]

    hal_i2c_delay_us(4);
   16c1c:	2004      	movs	r0, #4
   16c1e:	f7ff ff79 	bl	16b14 <hal_i2c_delay_us>

    for (i = 0; i < 9; i++) {
   16c22:	2400      	movs	r4, #0
   16c24:	2c08      	cmp	r4, #8
   16c26:	dc14      	bgt.n	16c52 <hal_i2c_clear_bus+0x70>
        if (read_gpio_inbuffer(sda_pin)) {
   16c28:	4630      	mov	r0, r6
   16c2a:	f7ff ffd1 	bl	16bd0 <read_gpio_inbuffer>
   16c2e:	b978      	cbnz	r0, 16c50 <hal_i2c_clear_bus+0x6e>
                goto ret;
            } else {
                break;
            }
        }
        hal_gpio_write(scl_pin, 0);
   16c30:	2100      	movs	r1, #0
   16c32:	4628      	mov	r0, r5
   16c34:	f7ff fef2 	bl	16a1c <hal_gpio_write>
        hal_i2c_delay_us(4);
   16c38:	2004      	movs	r0, #4
   16c3a:	f7ff ff6b 	bl	16b14 <hal_i2c_delay_us>
        hal_gpio_write(scl_pin, 1);
   16c3e:	2101      	movs	r1, #1
   16c40:	4628      	mov	r0, r5
   16c42:	f7ff feeb 	bl	16a1c <hal_gpio_write>
        hal_i2c_delay_us(4);
   16c46:	2004      	movs	r0, #4
   16c48:	f7ff ff64 	bl	16b14 <hal_i2c_delay_us>
    for (i = 0; i < 9; i++) {
   16c4c:	3401      	adds	r4, #1
   16c4e:	e7e9      	b.n	16c24 <hal_i2c_clear_bus+0x42>
            if (i == 0) {
   16c50:	b154      	cbz	r4, 16c68 <hal_i2c_clear_bus+0x86>
    }

    /*
     * Send STOP.
     */
    hal_gpio_write(sda_pin, 0);
   16c52:	2100      	movs	r1, #0
   16c54:	4630      	mov	r0, r6
   16c56:	f7ff fee1 	bl	16a1c <hal_gpio_write>
    hal_i2c_delay_us(4);
   16c5a:	2004      	movs	r0, #4
   16c5c:	f7ff ff5a 	bl	16b14 <hal_i2c_delay_us>
    hal_gpio_write(sda_pin, 1);
   16c60:	2101      	movs	r1, #1
   16c62:	4630      	mov	r0, r6
   16c64:	f7ff feda 	bl	16a1c <hal_gpio_write>

ret:
    /* Restore GPIO config */
    scl_port->PIN_CNF[scl_pin] = NRF52_SCL_PIN_CONF;
   16c68:	f04f 43a0 	mov.w	r3, #1342177280	; 0x50000000
   16c6c:	f505 75e0 	add.w	r5, r5, #448	; 0x1c0
   16c70:	f240 620c 	movw	r2, #1548	; 0x60c
   16c74:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
    sda_port->PIN_CNF[sda_pin] = NRF52_SDA_PIN_CONF;
   16c78:	f506 76e0 	add.w	r6, r6, #448	; 0x1c0
   16c7c:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
}
   16c80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00016c84 <hal_i2c_init>:

int
hal_i2c_init(uint8_t i2c_num, void *usercfg)
{
   16c84:	b5f0      	push	{r4, r5, r6, r7, lr}
   16c86:	b083      	sub	sp, #12
    struct nrf52_hal_i2c_cfg *cfg;
    uint32_t freq;
    int rc;
    NRF_GPIO_Type *scl_port, *sda_port;

    assert(usercfg != NULL);
   16c88:	b1a1      	cbz	r1, 16cb4 <hal_i2c_init+0x30>
   16c8a:	460c      	mov	r4, r1

    rc = hal_i2c_resolve(i2c_num, &i2c);
   16c8c:	a901      	add	r1, sp, #4
   16c8e:	f7ff ff7f 	bl	16b90 <hal_i2c_resolve>
    if (rc != 0) {
   16c92:	4606      	mov	r6, r0
   16c94:	bba8      	cbnz	r0, 16d02 <hal_i2c_init+0x7e>
        goto err;
    }

    cfg = (struct nrf52_hal_i2c_cfg *) usercfg;
    regs = i2c->nhi_regs;
   16c96:	9b01      	ldr	r3, [sp, #4]
   16c98:	681d      	ldr	r5, [r3, #0]

    switch (cfg->i2c_frequency) {
   16c9a:	68a3      	ldr	r3, [r4, #8]
   16c9c:	2bfa      	cmp	r3, #250	; 0xfa
   16c9e:	d035      	beq.n	16d0c <hal_i2c_init+0x88>
   16ca0:	d90e      	bls.n	16cc0 <hal_i2c_init+0x3c>
   16ca2:	f5b3 7fbe 	cmp.w	r3, #380	; 0x17c
   16ca6:	d02f      	beq.n	16d08 <hal_i2c_init+0x84>
   16ca8:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
   16cac:	d131      	bne.n	16d12 <hal_i2c_init+0x8e>
        break;
    case 380:
        freq = TWI_CUSTOM_FREQUENCY_FREQUENCY_K380;
        break;
    case 400:
        freq = TWI_FREQUENCY_FREQUENCY_K400;
   16cae:	f04f 67cd 	mov.w	r7, #107479040	; 0x6680000
        break;
   16cb2:	e009      	b.n	16cc8 <hal_i2c_init+0x44>
    assert(usercfg != NULL);
   16cb4:	2300      	movs	r3, #0
   16cb6:	461a      	mov	r2, r3
   16cb8:	4619      	mov	r1, r3
   16cba:	4618      	mov	r0, r3
   16cbc:	f000 fc88 	bl	175d0 <__assert_func>
    switch (cfg->i2c_frequency) {
   16cc0:	2b64      	cmp	r3, #100	; 0x64
   16cc2:	d126      	bne.n	16d12 <hal_i2c_init+0x8e>
        freq = TWI_FREQUENCY_FREQUENCY_K100;
   16cc4:	f04f 77cc 	mov.w	r7, #26738688	; 0x1980000
    default:
        rc = HAL_I2C_ERR_INVAL;
        goto err;
    }

    hal_i2c_clear_bus(cfg->scl_pin, cfg->sda_pin);
   16cc8:	6861      	ldr	r1, [r4, #4]
   16cca:	6820      	ldr	r0, [r4, #0]
   16ccc:	f7ff ff89 	bl	16be2 <hal_i2c_clear_bus>

    /* Resolve which GPIO port these pins belong to */
    scl_port = HAL_GPIO_PORT(cfg->scl_pin);
    sda_port = HAL_GPIO_PORT(cfg->sda_pin);

    scl_port->PIN_CNF[HAL_GPIO_INDEX(cfg->scl_pin)] = NRF52_SCL_PIN_CONF;
   16cd0:	6823      	ldr	r3, [r4, #0]
   16cd2:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
   16cd6:	f503 73e0 	add.w	r3, r3, #448	; 0x1c0
   16cda:	f240 610c 	movw	r1, #1548	; 0x60c
   16cde:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
    sda_port->PIN_CNF[HAL_GPIO_INDEX(cfg->sda_pin)] = NRF52_SDA_PIN_CONF;
   16ce2:	6863      	ldr	r3, [r4, #4]
   16ce4:	f503 73e0 	add.w	r3, r3, #448	; 0x1c0
   16ce8:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

    regs->PSELSCL = cfg->scl_pin;
   16cec:	6823      	ldr	r3, [r4, #0]
   16cee:	f8c5 3508 	str.w	r3, [r5, #1288]	; 0x508
    regs->PSELSDA = cfg->sda_pin;
   16cf2:	6863      	ldr	r3, [r4, #4]
   16cf4:	f8c5 350c 	str.w	r3, [r5, #1292]	; 0x50c
    regs->FREQUENCY = freq;
   16cf8:	f8c5 7524 	str.w	r7, [r5, #1316]	; 0x524
    regs->ENABLE = TWI_ENABLE_ENABLE_Enabled;
   16cfc:	2305      	movs	r3, #5
   16cfe:	f8c5 3500 	str.w	r3, [r5, #1280]	; 0x500

    return (0);
err:
    return (rc);
}
   16d02:	4630      	mov	r0, r6
   16d04:	b003      	add	sp, #12
   16d06:	bdf0      	pop	{r4, r5, r6, r7, pc}
        freq = TWI_CUSTOM_FREQUENCY_FREQUENCY_K380;
   16d08:	4f03      	ldr	r7, [pc, #12]	; (16d18 <hal_i2c_init+0x94>)
        break;
   16d0a:	e7dd      	b.n	16cc8 <hal_i2c_init+0x44>
        freq = TWI_FREQUENCY_FREQUENCY_K250;
   16d0c:	f04f 6780 	mov.w	r7, #67108864	; 0x4000000
   16d10:	e7da      	b.n	16cc8 <hal_i2c_init+0x44>
        rc = HAL_I2C_ERR_INVAL;
   16d12:	2602      	movs	r6, #2
   16d14:	e7f5      	b.n	16d02 <hal_i2c_init+0x7e>
   16d16:	bf00      	nop
   16d18:	06147ae9 	.word	0x06147ae9

00016d1c <hal_i2c_master_write>:
}

int
hal_i2c_master_write(uint8_t i2c_num, struct hal_i2c_master_data *pdata,
                     uint32_t timo, uint8_t last_op)
{
   16d1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d20:	b083      	sub	sp, #12
   16d22:	4688      	mov	r8, r1
   16d24:	4615      	mov	r5, r2
   16d26:	469a      	mov	sl, r3
    int nrf_status;
    int rc;
    int i;
    uint32_t start;

    rc = hal_i2c_resolve(i2c_num, &i2c);
   16d28:	a901      	add	r1, sp, #4
   16d2a:	f7ff ff31 	bl	16b90 <hal_i2c_resolve>
    if (rc != 0) {
   16d2e:	4681      	mov	r9, r0
   16d30:	b118      	cbz	r0, 16d3a <hal_i2c_master_write+0x1e>
        regs->ERRORSRC = nrf_status;
        rc = hal_i2c_convert_status(nrf_status);
    }

    return (rc);
}
   16d32:	4648      	mov	r0, r9
   16d34:	b003      	add	sp, #12
   16d36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    regs = i2c->nhi_regs;
   16d3a:	9b01      	ldr	r3, [sp, #4]
   16d3c:	681c      	ldr	r4, [r3, #0]
    regs->ADDRESS = pdata->address;
   16d3e:	f898 3000 	ldrb.w	r3, [r8]
   16d42:	f8c4 3588 	str.w	r3, [r4, #1416]	; 0x588
    regs->EVENTS_ERROR = 0;
   16d46:	2300      	movs	r3, #0
   16d48:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
    regs->EVENTS_STOPPED = 0;
   16d4c:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
    regs->EVENTS_SUSPENDED = 0;
   16d50:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
    regs->SHORTS = 0;
   16d54:	f8c4 3200 	str.w	r3, [r4, #512]	; 0x200
    hal_i2c_trigger_start(regs, &regs->TASKS_STARTTX);
   16d58:	f104 0708 	add.w	r7, r4, #8
    int retry = 2;
   16d5c:	f04f 0b02 	mov.w	fp, #2
        twi->EVENTS_BB = 0;
   16d60:	2300      	movs	r3, #0
   16d62:	f8c4 3138 	str.w	r3, [r4, #312]	; 0x138
        *task = 1;
   16d66:	2301      	movs	r3, #1
   16d68:	603b      	str	r3, [r7, #0]
        end_ticks = os_cputime_get32() +
   16d6a:	f000 fe61 	bl	17a30 <os_cputime_get32>
   16d6e:	f100 0664 	add.w	r6, r0, #100	; 0x64
            if (!hal_gpio_read(twi->PSELSCL) || twi->EVENTS_BB) {
   16d72:	f8d4 0508 	ldr.w	r0, [r4, #1288]	; 0x508
   16d76:	f7ff fe62 	bl	16a3e <hal_gpio_read>
   16d7a:	b1b0      	cbz	r0, 16daa <hal_i2c_master_write+0x8e>
   16d7c:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
   16d80:	b99b      	cbnz	r3, 16daa <hal_i2c_master_write+0x8e>
        } while (CPUTIME_LT(os_cputime_get32(), end_ticks));
   16d82:	f000 fe55 	bl	17a30 <os_cputime_get32>
   16d86:	1b80      	subs	r0, r0, r6
   16d88:	2800      	cmp	r0, #0
   16d8a:	dbf2      	blt.n	16d72 <hal_i2c_master_write+0x56>
        twi->ENABLE = TWI_ENABLE_ENABLE_Disabled;
   16d8c:	2300      	movs	r3, #0
   16d8e:	f8c4 3500 	str.w	r3, [r4, #1280]	; 0x500
        hal_i2c_clear_bus(twi->PSELSCL, twi->PSELSDA);
   16d92:	f8d4 0508 	ldr.w	r0, [r4, #1288]	; 0x508
   16d96:	f8d4 150c 	ldr.w	r1, [r4, #1292]	; 0x50c
   16d9a:	f7ff ff22 	bl	16be2 <hal_i2c_clear_bus>
        twi->ENABLE = TWI_ENABLE_ENABLE_Enabled;
   16d9e:	2305      	movs	r3, #5
   16da0:	f8c4 3500 	str.w	r3, [r4, #1280]	; 0x500
    } while (--retry);
   16da4:	f1bb 0b01 	subs.w	fp, fp, #1
   16da8:	d1da      	bne.n	16d60 <hal_i2c_master_write+0x44>
    start = os_time_get();
   16daa:	f001 fe2f 	bl	18a0c <os_time_get>
   16dae:	4606      	mov	r6, r0
    for (i = 0; i < pdata->len; i++) {
   16db0:	464f      	mov	r7, r9
   16db2:	e003      	b.n	16dbc <hal_i2c_master_write+0xa0>
        if (regs->EVENTS_ERROR) {
   16db4:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
   16db8:	b9db      	cbnz	r3, 16df2 <hal_i2c_master_write+0xd6>
    for (i = 0; i < pdata->len; i++) {
   16dba:	3701      	adds	r7, #1
   16dbc:	f8b8 3002 	ldrh.w	r3, [r8, #2]
   16dc0:	42bb      	cmp	r3, r7
   16dc2:	dd24      	ble.n	16e0e <hal_i2c_master_write+0xf2>
        regs->EVENTS_TXDSENT = 0;
   16dc4:	2300      	movs	r3, #0
   16dc6:	f8c4 311c 	str.w	r3, [r4, #284]	; 0x11c
        regs->TXD = pdata->buffer[i];
   16dca:	f8d8 3004 	ldr.w	r3, [r8, #4]
   16dce:	5ddb      	ldrb	r3, [r3, r7]
   16dd0:	f8c4 351c 	str.w	r3, [r4, #1308]	; 0x51c
        while (!regs->EVENTS_TXDSENT && !regs->EVENTS_ERROR) {
   16dd4:	f8d4 311c 	ldr.w	r3, [r4, #284]	; 0x11c
   16dd8:	2b00      	cmp	r3, #0
   16dda:	d1eb      	bne.n	16db4 <hal_i2c_master_write+0x98>
   16ddc:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
   16de0:	2b00      	cmp	r3, #0
   16de2:	d1e7      	bne.n	16db4 <hal_i2c_master_write+0x98>
            if (os_time_get() - start > timo) {
   16de4:	f001 fe12 	bl	18a0c <os_time_get>
   16de8:	1b80      	subs	r0, r0, r6
   16dea:	42a8      	cmp	r0, r5
   16dec:	d9f2      	bls.n	16dd4 <hal_i2c_master_write+0xb8>
                rc = HAL_I2C_ERR_TIMEOUT;
   16dee:	f04f 0903 	mov.w	r9, #3
    regs->TASKS_STOP = 1;
   16df2:	2301      	movs	r3, #1
   16df4:	6163      	str	r3, [r4, #20]
    if (regs->EVENTS_ERROR) {
   16df6:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
   16dfa:	2b00      	cmp	r3, #0
   16dfc:	d099      	beq.n	16d32 <hal_i2c_master_write+0x16>
        nrf_status = regs->ERRORSRC;
   16dfe:	f8d4 04c4 	ldr.w	r0, [r4, #1220]	; 0x4c4
        regs->ERRORSRC = nrf_status;
   16e02:	f8c4 04c4 	str.w	r0, [r4, #1220]	; 0x4c4
        rc = hal_i2c_convert_status(nrf_status);
   16e06:	f7ff fed5 	bl	16bb4 <hal_i2c_convert_status>
   16e0a:	4681      	mov	r9, r0
   16e0c:	e791      	b.n	16d32 <hal_i2c_master_write+0x16>
    if (last_op) {
   16e0e:	f1ba 0f00 	cmp.w	sl, #0
   16e12:	d08e      	beq.n	16d32 <hal_i2c_master_write+0x16>
        regs->EVENTS_STOPPED = 0;
   16e14:	2300      	movs	r3, #0
   16e16:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
        regs->TASKS_STOP = 1;
   16e1a:	2301      	movs	r3, #1
   16e1c:	6163      	str	r3, [r4, #20]
        while (!regs->EVENTS_STOPPED && !regs->EVENTS_ERROR) {
   16e1e:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
   16e22:	b953      	cbnz	r3, 16e3a <hal_i2c_master_write+0x11e>
   16e24:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
   16e28:	b93b      	cbnz	r3, 16e3a <hal_i2c_master_write+0x11e>
            if (os_time_get() - start > timo) {
   16e2a:	f001 fdef 	bl	18a0c <os_time_get>
   16e2e:	1b80      	subs	r0, r0, r6
   16e30:	42a8      	cmp	r0, r5
   16e32:	d9f4      	bls.n	16e1e <hal_i2c_master_write+0x102>
                rc = HAL_I2C_ERR_TIMEOUT;
   16e34:	f04f 0903 	mov.w	r9, #3
   16e38:	e7db      	b.n	16df2 <hal_i2c_master_write+0xd6>
        if (regs->EVENTS_ERROR) {
   16e3a:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
   16e3e:	2b00      	cmp	r3, #0
   16e40:	d1d7      	bne.n	16df2 <hal_i2c_master_write+0xd6>
   16e42:	e776      	b.n	16d32 <hal_i2c_master_write+0x16>

00016e44 <hal_i2c_master_read>:

int
hal_i2c_master_read(uint8_t i2c_num, struct hal_i2c_master_data *pdata,
                    uint32_t timo, uint8_t last_op)
{
   16e44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16e48:	b085      	sub	sp, #20
   16e4a:	460f      	mov	r7, r1
   16e4c:	4615      	mov	r5, r2
   16e4e:	9301      	str	r3, [sp, #4]
    int nrf_status;
    int rc;
    int i;
    uint32_t start;

    rc = hal_i2c_resolve(i2c_num, &i2c);
   16e50:	a903      	add	r1, sp, #12
   16e52:	f7ff fe9d 	bl	16b90 <hal_i2c_resolve>
    if (rc != 0) {
   16e56:	4681      	mov	r9, r0
   16e58:	b118      	cbz	r0, 16e62 <hal_i2c_master_read+0x1e>
        regs->ERRORSRC = nrf_status;
        rc = hal_i2c_convert_status(nrf_status);
    }

    return (rc);
}
   16e5a:	4648      	mov	r0, r9
   16e5c:	b005      	add	sp, #20
   16e5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    regs = i2c->nhi_regs;
   16e62:	9b03      	ldr	r3, [sp, #12]
   16e64:	681c      	ldr	r4, [r3, #0]
    start = os_time_get();
   16e66:	f001 fdd1 	bl	18a0c <os_time_get>
   16e6a:	4606      	mov	r6, r0
    if (regs->EVENTS_RXDREADY) {
   16e6c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
   16e70:	b11b      	cbz	r3, 16e7a <hal_i2c_master_read+0x36>
        (void)regs->RXD;
   16e72:	f8d4 3518 	ldr.w	r3, [r4, #1304]	; 0x518
        (void)regs->RXD;
   16e76:	f8d4 3518 	ldr.w	r3, [r4, #1304]	; 0x518
    regs->EVENTS_ERROR = 0;
   16e7a:	2300      	movs	r3, #0
   16e7c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
    regs->EVENTS_STOPPED = 0;
   16e80:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
    regs->EVENTS_SUSPENDED = 0;
   16e84:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
    regs->EVENTS_RXDREADY = 0;
   16e88:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
    regs->ADDRESS = pdata->address;
   16e8c:	783b      	ldrb	r3, [r7, #0]
   16e8e:	f8c4 3588 	str.w	r3, [r4, #1416]	; 0x588
    if (pdata->len == 1 && last_op) {
   16e92:	887b      	ldrh	r3, [r7, #2]
   16e94:	2b01      	cmp	r3, #1
   16e96:	d02e      	beq.n	16ef6 <hal_i2c_master_read+0xb2>
        regs->SHORTS = TWI_SHORTS_BB_SUSPEND_Msk;
   16e98:	2301      	movs	r3, #1
   16e9a:	f8c4 3200 	str.w	r3, [r4, #512]	; 0x200
    hal_i2c_trigger_start(regs, &regs->TASKS_STARTRX);
   16e9e:	46a2      	mov	sl, r4
    int retry = 2;
   16ea0:	f04f 0b02 	mov.w	fp, #2
        twi->EVENTS_BB = 0;
   16ea4:	2300      	movs	r3, #0
   16ea6:	f8c4 3138 	str.w	r3, [r4, #312]	; 0x138
        *task = 1;
   16eaa:	2301      	movs	r3, #1
   16eac:	f8ca 3000 	str.w	r3, [sl]
        end_ticks = os_cputime_get32() +
   16eb0:	f000 fdbe 	bl	17a30 <os_cputime_get32>
   16eb4:	f100 0864 	add.w	r8, r0, #100	; 0x64
            if (!hal_gpio_read(twi->PSELSCL) || twi->EVENTS_BB) {
   16eb8:	f8d4 0508 	ldr.w	r0, [r4, #1288]	; 0x508
   16ebc:	f7ff fdbf 	bl	16a3e <hal_gpio_read>
   16ec0:	b1b8      	cbz	r0, 16ef2 <hal_i2c_master_read+0xae>
   16ec2:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
   16ec6:	b9a3      	cbnz	r3, 16ef2 <hal_i2c_master_read+0xae>
        } while (CPUTIME_LT(os_cputime_get32(), end_ticks));
   16ec8:	f000 fdb2 	bl	17a30 <os_cputime_get32>
   16ecc:	eba0 0008 	sub.w	r0, r0, r8
   16ed0:	2800      	cmp	r0, #0
   16ed2:	dbf1      	blt.n	16eb8 <hal_i2c_master_read+0x74>
        twi->ENABLE = TWI_ENABLE_ENABLE_Disabled;
   16ed4:	2300      	movs	r3, #0
   16ed6:	f8c4 3500 	str.w	r3, [r4, #1280]	; 0x500
        hal_i2c_clear_bus(twi->PSELSCL, twi->PSELSDA);
   16eda:	f8d4 0508 	ldr.w	r0, [r4, #1288]	; 0x508
   16ede:	f8d4 150c 	ldr.w	r1, [r4, #1292]	; 0x50c
   16ee2:	f7ff fe7e 	bl	16be2 <hal_i2c_clear_bus>
        twi->ENABLE = TWI_ENABLE_ENABLE_Enabled;
   16ee6:	2305      	movs	r3, #5
   16ee8:	f8c4 3500 	str.w	r3, [r4, #1280]	; 0x500
    } while (--retry);
   16eec:	f1bb 0b01 	subs.w	fp, fp, #1
   16ef0:	d1d8      	bne.n	16ea4 <hal_i2c_master_read+0x60>
    int retry = 2;
   16ef2:	46c8      	mov	r8, r9
   16ef4:	e017      	b.n	16f26 <hal_i2c_master_read+0xe2>
    if (pdata->len == 1 && last_op) {
   16ef6:	9b01      	ldr	r3, [sp, #4]
   16ef8:	2b00      	cmp	r3, #0
   16efa:	d0cd      	beq.n	16e98 <hal_i2c_master_read+0x54>
        regs->SHORTS = TWI_SHORTS_BB_STOP_Msk;
   16efc:	2302      	movs	r3, #2
   16efe:	f8c4 3200 	str.w	r3, [r4, #512]	; 0x200
   16f02:	e7cc      	b.n	16e9e <hal_i2c_master_read+0x5a>
        if (regs->EVENTS_ERROR) {
   16f04:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
   16f08:	bb0b      	cbnz	r3, 16f4e <hal_i2c_master_read+0x10a>
        pdata->buffer[i] = regs->RXD;
   16f0a:	f8d4 2518 	ldr.w	r2, [r4, #1304]	; 0x518
   16f0e:	687b      	ldr	r3, [r7, #4]
   16f10:	f803 2008 	strb.w	r2, [r3, r8]
        if (i == pdata->len - 2) {
   16f14:	887b      	ldrh	r3, [r7, #2]
   16f16:	3b02      	subs	r3, #2
   16f18:	4543      	cmp	r3, r8
   16f1a:	d02a      	beq.n	16f72 <hal_i2c_master_read+0x12e>
        regs->EVENTS_RXDREADY = 0;
   16f1c:	2300      	movs	r3, #0
   16f1e:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
    for (i = 0; i < pdata->len; i++) {
   16f22:	f108 0801 	add.w	r8, r8, #1
   16f26:	887b      	ldrh	r3, [r7, #2]
   16f28:	4543      	cmp	r3, r8
   16f2a:	dd96      	ble.n	16e5a <hal_i2c_master_read+0x16>
        regs->TASKS_RESUME = 1;
   16f2c:	2301      	movs	r3, #1
   16f2e:	6223      	str	r3, [r4, #32]
        while (!regs->EVENTS_RXDREADY && !regs->EVENTS_ERROR) {
   16f30:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
   16f34:	2b00      	cmp	r3, #0
   16f36:	d1e5      	bne.n	16f04 <hal_i2c_master_read+0xc0>
   16f38:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
   16f3c:	2b00      	cmp	r3, #0
   16f3e:	d1e1      	bne.n	16f04 <hal_i2c_master_read+0xc0>
            if (os_time_get() - start > timo) {
   16f40:	f001 fd64 	bl	18a0c <os_time_get>
   16f44:	1b80      	subs	r0, r0, r6
   16f46:	42a8      	cmp	r0, r5
   16f48:	d9f2      	bls.n	16f30 <hal_i2c_master_read+0xec>
                rc = HAL_I2C_ERR_TIMEOUT;
   16f4a:	f04f 0903 	mov.w	r9, #3
    regs->TASKS_STOP = 1;
   16f4e:	2301      	movs	r3, #1
   16f50:	6163      	str	r3, [r4, #20]
    regs->SHORTS = 0;
   16f52:	2300      	movs	r3, #0
   16f54:	f8c4 3200 	str.w	r3, [r4, #512]	; 0x200
    if (regs->EVENTS_ERROR) {
   16f58:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
   16f5c:	2b00      	cmp	r3, #0
   16f5e:	f43f af7c 	beq.w	16e5a <hal_i2c_master_read+0x16>
        nrf_status = regs->ERRORSRC;
   16f62:	f8d4 04c4 	ldr.w	r0, [r4, #1220]	; 0x4c4
        regs->ERRORSRC = nrf_status;
   16f66:	f8c4 04c4 	str.w	r0, [r4, #1220]	; 0x4c4
        rc = hal_i2c_convert_status(nrf_status);
   16f6a:	f7ff fe23 	bl	16bb4 <hal_i2c_convert_status>
   16f6e:	4681      	mov	r9, r0
   16f70:	e773      	b.n	16e5a <hal_i2c_master_read+0x16>
            if (last_op) {
   16f72:	9b01      	ldr	r3, [sp, #4]
   16f74:	2b00      	cmp	r3, #0
   16f76:	d0d1      	beq.n	16f1c <hal_i2c_master_read+0xd8>
                regs->SHORTS = TWI_SHORTS_BB_STOP_Msk;
   16f78:	2302      	movs	r3, #2
   16f7a:	f8c4 3200 	str.w	r3, [r4, #512]	; 0x200
   16f7e:	e7cd      	b.n	16f1c <hal_i2c_master_read+0xd8>

00016f80 <nrf52_irqm_handler>:
    }

#if (MYNEWT_VAL(SPI_0_MASTER) || MYNEWT_VAL(SPI_1_MASTER) || MYNEWT_VAL(SPI_2_MASTER))
static void
nrf52_irqm_handler(struct nrf52_hal_spi *spi)
{
   16f80:	b538      	push	{r3, r4, r5, lr}
    NRF_SPIM_Type *spim;
    uint16_t xfr_bytes;
    uint16_t len;

    spim = spi->nhs_spi.spim;
   16f82:	6905      	ldr	r5, [r0, #16]
    if (spim->EVENTS_END) {
   16f84:	f8d5 3118 	ldr.w	r3, [r5, #280]	; 0x118
   16f88:	b32b      	cbz	r3, 16fd6 <nrf52_irqm_handler+0x56>
        spim->EVENTS_END = 0;
   16f8a:	2300      	movs	r3, #0
   16f8c:	f8c5 3118 	str.w	r3, [r5, #280]	; 0x118

        /* Should not occur but if no transfer just leave  */
        if (spi->spi_xfr_flag == 0) {
   16f90:	7843      	ldrb	r3, [r0, #1]
   16f92:	b303      	cbz	r3, 16fd6 <nrf52_irqm_handler+0x56>
            return;
        }

        /* Are there more bytes to send? */
        xfr_bytes = spim->TXD.AMOUNT;
   16f94:	f8d5 254c 	ldr.w	r2, [r5, #1356]	; 0x54c
        spi->nhs_bytes_txd += xfr_bytes;
   16f98:	88c3      	ldrh	r3, [r0, #6]
   16f9a:	fa13 f382 	uxtah	r3, r3, r2
   16f9e:	b29b      	uxth	r3, r3
   16fa0:	80c3      	strh	r3, [r0, #6]
        if (spi->nhs_bytes_txd < spi->nhs_buflen) {
   16fa2:	8881      	ldrh	r1, [r0, #4]
   16fa4:	428b      	cmp	r3, r1
   16fa6:	d217      	bcs.n	16fd8 <nrf52_irqm_handler+0x58>
   16fa8:	b292      	uxth	r2, r2
            spi->nhs_txbuf += xfr_bytes;
   16faa:	6984      	ldr	r4, [r0, #24]
   16fac:	4414      	add	r4, r2
   16fae:	6184      	str	r4, [r0, #24]
            len = spi->nhs_buflen - spi->nhs_bytes_txd;
   16fb0:	1acb      	subs	r3, r1, r3
   16fb2:	b29b      	uxth	r3, r3
            len = min(SPIM_TXD_MAXCNT_MAX, len);
   16fb4:	2bff      	cmp	r3, #255	; 0xff
   16fb6:	bf28      	it	cs
   16fb8:	23ff      	movcs	r3, #255	; 0xff
            spim->TXD.PTR = (uint32_t)spi->nhs_txbuf;
   16fba:	f8c5 4544 	str.w	r4, [r5, #1348]	; 0x544
            spim->TXD.MAXCNT = len;
   16fbe:	f8c5 3548 	str.w	r3, [r5, #1352]	; 0x548

            /* If no rxbuf, we need to set rxbuf and maxcnt to 1 */
            if (spi->nhs_rxbuf) {
   16fc2:	69c1      	ldr	r1, [r0, #28]
   16fc4:	b129      	cbz	r1, 16fd2 <nrf52_irqm_handler+0x52>
                spi->nhs_rxbuf += xfr_bytes;
   16fc6:	440a      	add	r2, r1
   16fc8:	61c2      	str	r2, [r0, #28]
                spim->RXD.PTR    = (uint32_t)spi->nhs_rxbuf;
   16fca:	f8c5 2534 	str.w	r2, [r5, #1332]	; 0x534
                spim->RXD.MAXCNT = len;
   16fce:	f8c5 3538 	str.w	r3, [r5, #1336]	; 0x538
            }
            spim->TASKS_START = 1;
   16fd2:	2301      	movs	r3, #1
   16fd4:	612b      	str	r3, [r5, #16]
            }
            spi->spi_xfr_flag = 0;
            spim->INTENCLR = SPIM_INTENSET_END_Msk;
        }
    }
}
   16fd6:	bd38      	pop	{r3, r4, r5, pc}
   16fd8:	4604      	mov	r4, r0
            if (spi->txrx_cb_func) {
   16fda:	6a03      	ldr	r3, [r0, #32]
   16fdc:	b10b      	cbz	r3, 16fe2 <nrf52_irqm_handler+0x62>
                spi->txrx_cb_func(spi->txrx_cb_arg, spi->nhs_buflen);
   16fde:	6a40      	ldr	r0, [r0, #36]	; 0x24
   16fe0:	4798      	blx	r3
            spi->spi_xfr_flag = 0;
   16fe2:	2300      	movs	r3, #0
   16fe4:	7063      	strb	r3, [r4, #1]
            spim->INTENCLR = SPIM_INTENSET_END_Msk;
   16fe6:	2340      	movs	r3, #64	; 0x40
   16fe8:	f8c5 3308 	str.w	r3, [r5, #776]	; 0x308
   16fec:	e7f3      	b.n	16fd6 <nrf52_irqm_handler+0x56>
	...

00016ff0 <nrf52_spi0_irq_handler>:

/* Interrupt handlers for SPI ports */
#if MYNEWT_VAL(SPI_0_MASTER) || MYNEWT_VAL(SPI_0_SLAVE)
void
nrf52_spi0_irq_handler(void)
{
   16ff0:	b508      	push	{r3, lr}
    os_trace_isr_enter();
    if (nrf52_hal_spi0.spi_type == HAL_SPI_TYPE_MASTER) {
   16ff2:	4b04      	ldr	r3, [pc, #16]	; (17004 <nrf52_spi0_irq_handler+0x14>)
   16ff4:	781b      	ldrb	r3, [r3, #0]
   16ff6:	b103      	cbz	r3, 16ffa <nrf52_spi0_irq_handler+0xa>
#if MYNEWT_VAL(SPI_0_SLAVE)
        nrf52_irqs_handler(&nrf52_hal_spi0);
#endif
    }
    os_trace_isr_exit();
}
   16ff8:	bd08      	pop	{r3, pc}
        nrf52_irqm_handler(&nrf52_hal_spi0);
   16ffa:	4802      	ldr	r0, [pc, #8]	; (17004 <nrf52_spi0_irq_handler+0x14>)
   16ffc:	f7ff ffc0 	bl	16f80 <nrf52_irqm_handler>
}
   17000:	e7fa      	b.n	16ff8 <nrf52_spi0_irq_handler+0x8>
   17002:	bf00      	nop
   17004:	20009d60 	.word	0x20009d60

00017008 <hal_spi_stop_transfer>:
#endif

static void
hal_spi_stop_transfer(NRF_SPIM_Type *spim)
{
    spim->TASKS_STOP = 1;
   17008:	2301      	movs	r3, #1
   1700a:	6143      	str	r3, [r0, #20]
    while (!spim->EVENTS_STOPPED) {}
   1700c:	f8d0 3104 	ldr.w	r3, [r0, #260]	; 0x104
   17010:	2b00      	cmp	r3, #0
   17012:	d0fb      	beq.n	1700c <hal_spi_stop_transfer+0x4>
    spim->EVENTS_STOPPED = 0;
   17014:	2300      	movs	r3, #0
   17016:	f8c0 3104 	str.w	r3, [r0, #260]	; 0x104
}
   1701a:	4770      	bx	lr

0001701c <hal_spi_config_slave>:
}

static int
hal_spi_config_slave(struct nrf52_hal_spi *spi,
                     struct hal_spi_settings *settings)
{
   1701c:	b410      	push	{r4}
    int rc;
    uint32_t nrf_config;
    NRF_SPIS_Type *spis;

    spis = spi->nhs_spi.spis;
   1701e:	6902      	ldr	r2, [r0, #16]

    rc = 0;
    switch (settings->data_mode) {
   17020:	780b      	ldrb	r3, [r1, #0]
   17022:	2b03      	cmp	r3, #3
   17024:	d80c      	bhi.n	17040 <hal_spi_config_slave+0x24>
   17026:	e8df f003 	tbb	[pc, r3]
   1702a:	0e02      	.short	0x0e02
   1702c:	0805      	.short	0x0805
        case HAL_SPI_MODE0:
            nrf_config = (SPIS_CONFIG_CPOL_ActiveHigh << SPIS_CONFIG_CPOL_Pos) |
   1702e:	2300      	movs	r3, #0
    rc = 0;
   17030:	4618      	mov	r0, r3
   17032:	e00a      	b.n	1704a <hal_spi_config_slave+0x2e>
        case HAL_SPI_MODE1:
            nrf_config = (SPIS_CONFIG_CPOL_ActiveHigh << SPIS_CONFIG_CPOL_Pos) |
                         (SPIS_CONFIG_CPHA_Trailing << SPIS_CONFIG_CPHA_Pos);
            break;
        case HAL_SPI_MODE2:
            nrf_config = (SPIS_CONFIG_CPOL_ActiveLow << SPIS_CONFIG_CPOL_Pos) |
   17034:	2304      	movs	r3, #4
    rc = 0;
   17036:	2000      	movs	r0, #0
                         (SPIS_CONFIG_CPHA_Leading << SPIS_CONFIG_CPHA_Pos);
            break;
   17038:	e007      	b.n	1704a <hal_spi_config_slave+0x2e>
        case HAL_SPI_MODE3:
            nrf_config = (SPIS_CONFIG_CPOL_ActiveLow << SPIS_CONFIG_CPOL_Pos) |
   1703a:	2306      	movs	r3, #6
    rc = 0;
   1703c:	2000      	movs	r0, #0
                         (SPIS_CONFIG_CPHA_Trailing << SPIS_CONFIG_CPHA_Pos);
            break;
   1703e:	e004      	b.n	1704a <hal_spi_config_slave+0x2e>
        default:
            nrf_config = 0;
   17040:	2300      	movs	r3, #0
            rc = EINVAL;
   17042:	2016      	movs	r0, #22
            break;
   17044:	e001      	b.n	1704a <hal_spi_config_slave+0x2e>
            nrf_config = (SPIS_CONFIG_CPOL_ActiveHigh << SPIS_CONFIG_CPOL_Pos) |
   17046:	2302      	movs	r3, #2
    rc = 0;
   17048:	2000      	movs	r0, #0
    }

    if (settings->data_order == HAL_SPI_LSB_FIRST) {
   1704a:	784c      	ldrb	r4, [r1, #1]
   1704c:	2c01      	cmp	r4, #1
   1704e:	d006      	beq.n	1705e <hal_spi_config_slave+0x42>
        nrf_config |= SPIS_CONFIG_ORDER_LsbFirst;
    }
    spis->CONFIG = nrf_config;
   17050:	f8c2 3554 	str.w	r3, [r2, #1364]	; 0x554

    /* Only 8-bit word sizes supported. */
    switch (settings->word_size) {
   17054:	788b      	ldrb	r3, [r1, #2]
   17056:	b92b      	cbnz	r3, 17064 <hal_spi_config_slave+0x48>
            rc = EINVAL;
            break;
    }

    return rc;
}
   17058:	f85d 4b04 	ldr.w	r4, [sp], #4
   1705c:	4770      	bx	lr
        nrf_config |= SPIS_CONFIG_ORDER_LsbFirst;
   1705e:	f043 0301 	orr.w	r3, r3, #1
   17062:	e7f5      	b.n	17050 <hal_spi_config_slave+0x34>
            rc = EINVAL;
   17064:	2016      	movs	r0, #22
    return rc;
   17066:	e7f7      	b.n	17058 <hal_spi_config_slave+0x3c>

00017068 <hal_spi_init_master>:

static int
hal_spi_init_master(struct nrf52_hal_spi *spi,
                    struct nrf52_hal_spi_cfg *cfg,
                    nrf52_spi_irq_handler_t handler)
{
   17068:	b430      	push	{r4, r5}
    NRF_GPIO_Type *port;
    uint32_t pin;

    /*  Configure MOSI */
    port = HAL_GPIO_PORT(cfg->mosi_pin);
    pin = HAL_GPIO_INDEX(cfg->mosi_pin);
   1706a:	784b      	ldrb	r3, [r1, #1]
    port->OUTCLR = (1UL << pin);
   1706c:	2501      	movs	r5, #1
   1706e:	409d      	lsls	r5, r3
   17070:	f04f 44a0 	mov.w	r4, #1342177280	; 0x50000000
   17074:	f8c4 550c 	str.w	r5, [r4, #1292]	; 0x50c
    port->PIN_CNF[pin] =
   17078:	f503 73e0 	add.w	r3, r3, #448	; 0x1c0
   1707c:	2503      	movs	r5, #3
   1707e:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
        ((uint32_t)GPIO_PIN_CNF_DIR_Output << GPIO_PIN_CNF_DIR_Pos) |
        ((uint32_t)GPIO_PIN_CNF_INPUT_Disconnect << GPIO_PIN_CNF_INPUT_Pos);

    /* Configure MISO */
    port = HAL_GPIO_PORT(cfg->miso_pin);
    pin = HAL_GPIO_INDEX(cfg->miso_pin);
   17082:	788b      	ldrb	r3, [r1, #2]
    port->PIN_CNF[pin] =
   17084:	f503 73e0 	add.w	r3, r3, #448	; 0x1c0
   17088:	2500      	movs	r5, #0
   1708a:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
        ((uint32_t)GPIO_PIN_CNF_DIR_Input << GPIO_PIN_CNF_DIR_Pos) |
        ((uint32_t)GPIO_PIN_CNF_INPUT_Connect << GPIO_PIN_CNF_INPUT_Pos);

    spim = (NRF_SPIM_Type *)spi->nhs_spi.spim;
   1708e:	6903      	ldr	r3, [r0, #16]
    spim->PSEL.SCK = cfg->sck_pin;
   17090:	780c      	ldrb	r4, [r1, #0]
   17092:	f8c3 4508 	str.w	r4, [r3, #1288]	; 0x508
    spim->PSEL.MOSI = cfg->mosi_pin;
   17096:	784c      	ldrb	r4, [r1, #1]
   17098:	f8c3 450c 	str.w	r4, [r3, #1292]	; 0x50c
    spim->PSEL.MISO = cfg->miso_pin;
   1709c:	7889      	ldrb	r1, [r1, #2]
   1709e:	f8c3 1510 	str.w	r1, [r3, #1296]	; 0x510

    spim->INTENCLR = NRF_SPI_IRQ_DISABLE_ALL;
   170a2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
   170a6:	f8c3 1308 	str.w	r1, [r3, #776]	; 0x308
    NVIC_SetVector(spi->irq_num, (uint32_t)handler);
   170aa:	f990 3014 	ldrsb.w	r3, [r0, #20]
  uint32_t vectors = (uint32_t )SCB->VTOR;
   170ae:	4919      	ldr	r1, [pc, #100]	; (17114 <hal_spi_init_master+0xac>)
   170b0:	6889      	ldr	r1, [r1, #8]
  (* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4)) = vector;
   170b2:	3310      	adds	r3, #16
   170b4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    NVIC_SetPriority(spi->irq_num, (1 << __NVIC_PRIO_BITS) - 1);
   170b8:	f990 3014 	ldrsb.w	r3, [r0, #20]
  if ((int32_t)(IRQn) >= 0)
   170bc:	42ab      	cmp	r3, r5
   170be:	db22      	blt.n	17106 <hal_spi_init_master+0x9e>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
   170c0:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
   170c4:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
   170c8:	22e0      	movs	r2, #224	; 0xe0
   170ca:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
    NVIC_ClearPendingIRQ(spi->irq_num);
   170ce:	f990 3014 	ldrsb.w	r3, [r0, #20]
  if ((int32_t)(IRQn) >= 0)
   170d2:	2b00      	cmp	r3, #0
   170d4:	db08      	blt.n	170e8 <hal_spi_init_master+0x80>
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   170d6:	f003 011f 	and.w	r1, r3, #31
   170da:	095b      	lsrs	r3, r3, #5
   170dc:	2201      	movs	r2, #1
   170de:	408a      	lsls	r2, r1
   170e0:	3360      	adds	r3, #96	; 0x60
   170e2:	490d      	ldr	r1, [pc, #52]	; (17118 <hal_spi_init_master+0xb0>)
   170e4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    NVIC_EnableIRQ(spi->irq_num);
   170e8:	f990 3014 	ldrsb.w	r3, [r0, #20]
  if ((int32_t)(IRQn) >= 0)
   170ec:	2b00      	cmp	r3, #0
   170ee:	db07      	blt.n	17100 <hal_spi_init_master+0x98>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   170f0:	f003 011f 	and.w	r1, r3, #31
   170f4:	095b      	lsrs	r3, r3, #5
   170f6:	2201      	movs	r2, #1
   170f8:	408a      	lsls	r2, r1
   170fa:	4907      	ldr	r1, [pc, #28]	; (17118 <hal_spi_init_master+0xb0>)
   170fc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

    return 0;
}
   17100:	2000      	movs	r0, #0
   17102:	bc30      	pop	{r4, r5}
   17104:	4770      	bx	lr
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
   17106:	f003 030f 	and.w	r3, r3, #15
   1710a:	4a04      	ldr	r2, [pc, #16]	; (1711c <hal_spi_init_master+0xb4>)
   1710c:	441a      	add	r2, r3
   1710e:	23e0      	movs	r3, #224	; 0xe0
   17110:	7613      	strb	r3, [r2, #24]
   17112:	e7dc      	b.n	170ce <hal_spi_init_master+0x66>
   17114:	e000ed00 	.word	0xe000ed00
   17118:	e000e100 	.word	0xe000e100
   1711c:	e000ecfc 	.word	0xe000ecfc

00017120 <hal_spi_config_master>:
{
   17120:	b410      	push	{r4}
    spim = spi->nhs_spi.spim;
   17122:	6902      	ldr	r2, [r0, #16]
    memcpy(&spi->spi_cfg, settings, sizeof(*settings));
   17124:	680c      	ldr	r4, [r1, #0]
   17126:	684b      	ldr	r3, [r1, #4]
   17128:	6084      	str	r4, [r0, #8]
   1712a:	60c3      	str	r3, [r0, #12]
    pin = spim->PSEL.SCK & SPIM_PSEL_SCK_PIN_Msk;
   1712c:	f8d2 3508 	ldr.w	r3, [r2, #1288]	; 0x508
   17130:	f003 031f 	and.w	r3, r3, #31
    if (settings->data_mode <= HAL_SPI_MODE1) {
   17134:	7808      	ldrb	r0, [r1, #0]
   17136:	2801      	cmp	r0, #1
   17138:	d916      	bls.n	17168 <hal_spi_config_master+0x48>
        port->OUTSET = (1UL << pin);
   1713a:	2001      	movs	r0, #1
   1713c:	4098      	lsls	r0, r3
   1713e:	f04f 44a0 	mov.w	r4, #1342177280	; 0x50000000
   17142:	f8c4 0508 	str.w	r0, [r4, #1288]	; 0x508
    port->PIN_CNF[pin] =
   17146:	f503 73e0 	add.w	r3, r3, #448	; 0x1c0
   1714a:	f04f 40a0 	mov.w	r0, #1342177280	; 0x50000000
   1714e:	2403      	movs	r4, #3
   17150:	f840 4023 	str.w	r4, [r0, r3, lsl #2]
    switch (settings->word_size) {
   17154:	788b      	ldrb	r3, [r1, #2]
   17156:	b973      	cbnz	r3, 17176 <hal_spi_config_master+0x56>
    rc = 0;
   17158:	2000      	movs	r0, #0
    switch (settings->data_mode) {
   1715a:	780b      	ldrb	r3, [r1, #0]
   1715c:	2b03      	cmp	r3, #3
   1715e:	d812      	bhi.n	17186 <hal_spi_config_master+0x66>
   17160:	e8df f003 	tbb	[pc, r3]
   17164:	0f0d140b 	.word	0x0f0d140b
        port->OUTCLR = (1UL << pin);
   17168:	2001      	movs	r0, #1
   1716a:	4098      	lsls	r0, r3
   1716c:	f04f 44a0 	mov.w	r4, #1342177280	; 0x50000000
   17170:	f8c4 050c 	str.w	r0, [r4, #1292]	; 0x50c
   17174:	e7e7      	b.n	17146 <hal_spi_config_master+0x26>
            rc = EINVAL;
   17176:	2016      	movs	r0, #22
   17178:	e7ef      	b.n	1715a <hal_spi_config_master+0x3a>
            nrf_config = (SPIM_CONFIG_CPOL_ActiveHigh << SPIM_CONFIG_CPOL_Pos) |
   1717a:	2300      	movs	r3, #0
   1717c:	e007      	b.n	1718e <hal_spi_config_master+0x6e>
            nrf_config = (SPIM_CONFIG_CPOL_ActiveLow << SPIM_CONFIG_CPOL_Pos) |
   1717e:	2304      	movs	r3, #4
            break;
   17180:	e005      	b.n	1718e <hal_spi_config_master+0x6e>
            nrf_config = (SPIM_CONFIG_CPOL_ActiveLow << SPIM_CONFIG_CPOL_Pos) |
   17182:	2306      	movs	r3, #6
            break;
   17184:	e003      	b.n	1718e <hal_spi_config_master+0x6e>
            nrf_config = 0;
   17186:	2300      	movs	r3, #0
            rc = EINVAL;
   17188:	2016      	movs	r0, #22
            break;
   1718a:	e000      	b.n	1718e <hal_spi_config_master+0x6e>
            nrf_config = (SPIM_CONFIG_CPOL_ActiveHigh << SPIM_CONFIG_CPOL_Pos) |
   1718c:	2302      	movs	r3, #2
    if (settings->data_order == HAL_SPI_LSB_FIRST) {
   1718e:	784c      	ldrb	r4, [r1, #1]
   17190:	2c01      	cmp	r4, #1
   17192:	d010      	beq.n	171b6 <hal_spi_config_master+0x96>
    spim->CONFIG = nrf_config;
   17194:	f8c2 3554 	str.w	r3, [r2, #1364]	; 0x554
    switch (settings->baudrate) {
   17198:	684b      	ldr	r3, [r1, #4]
   1719a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
   1719e:	d023      	beq.n	171e8 <hal_spi_config_master+0xc8>
   171a0:	d80c      	bhi.n	171bc <hal_spi_config_master+0x9c>
   171a2:	2bfa      	cmp	r3, #250	; 0xfa
   171a4:	d029      	beq.n	171fa <hal_spi_config_master+0xda>
   171a6:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
   171aa:	d01a      	beq.n	171e2 <hal_spi_config_master+0xc2>
   171ac:	2b7d      	cmp	r3, #125	; 0x7d
   171ae:	d011      	beq.n	171d4 <hal_spi_config_master+0xb4>
            frequency = 0;
   171b0:	2300      	movs	r3, #0
            rc = EINVAL;
   171b2:	2016      	movs	r0, #22
            break;
   171b4:	e010      	b.n	171d8 <hal_spi_config_master+0xb8>
        nrf_config |= SPIM_CONFIG_ORDER_LsbFirst;
   171b6:	f043 0301 	orr.w	r3, r3, #1
   171ba:	e7eb      	b.n	17194 <hal_spi_config_master+0x74>
    switch (settings->baudrate) {
   171bc:	f5b3 6f7a 	cmp.w	r3, #4000	; 0xfa0
   171c0:	d015      	beq.n	171ee <hal_spi_config_master+0xce>
   171c2:	f5b3 5ffa 	cmp.w	r3, #8000	; 0x1f40
   171c6:	d015      	beq.n	171f4 <hal_spi_config_master+0xd4>
   171c8:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
   171cc:	d1f0      	bne.n	171b0 <hal_spi_config_master+0x90>
            frequency = SPIM_FREQUENCY_FREQUENCY_M2;
   171ce:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
            break;
   171d2:	e001      	b.n	171d8 <hal_spi_config_master+0xb8>
            frequency = SPIM_FREQUENCY_FREQUENCY_K125;
   171d4:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
    spim->FREQUENCY = frequency;
   171d8:	f8c2 3524 	str.w	r3, [r2, #1316]	; 0x524
}
   171dc:	f85d 4b04 	ldr.w	r4, [sp], #4
   171e0:	4770      	bx	lr
            frequency = SPIM_FREQUENCY_FREQUENCY_K500;
   171e2:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
            break;
   171e6:	e7f7      	b.n	171d8 <hal_spi_config_master+0xb8>
            frequency = SPIM_FREQUENCY_FREQUENCY_M1;
   171e8:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
            break;
   171ec:	e7f4      	b.n	171d8 <hal_spi_config_master+0xb8>
            frequency = SPIM_FREQUENCY_FREQUENCY_M4;
   171ee:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
            break;
   171f2:	e7f1      	b.n	171d8 <hal_spi_config_master+0xb8>
            frequency = SPIM_FREQUENCY_FREQUENCY_M8;
   171f4:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
            break;
   171f8:	e7ee      	b.n	171d8 <hal_spi_config_master+0xb8>
            frequency = SPIM_FREQUENCY_FREQUENCY_K250;
   171fa:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
   171fe:	e7eb      	b.n	171d8 <hal_spi_config_master+0xb8>

00017200 <hal_spi_config>:
{
    int rc;
    struct nrf52_hal_spi *spi;
    NRF_SPIM_Type *spim;

    NRF52_HAL_SPI_RESOLVE(spi_num, spi);
   17200:	2802      	cmp	r0, #2
   17202:	dc10      	bgt.n	17226 <hal_spi_config+0x26>
{
   17204:	b508      	push	{r3, lr}
    NRF52_HAL_SPI_RESOLVE(spi_num, spi);
   17206:	4b0b      	ldr	r3, [pc, #44]	; (17234 <hal_spi_config+0x34>)
   17208:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
   1720c:	b168      	cbz	r0, 1722a <hal_spi_config+0x2a>

    /*
     * This looks odd, but the ENABLE register is in the same location for
     * SPIM, SPI and SPIS
     */
    spim = spi->nhs_spi.spim;
   1720e:	6903      	ldr	r3, [r0, #16]
    if (spim->ENABLE != 0) {
   17210:	f8d3 3500 	ldr.w	r3, [r3, #1280]	; 0x500
   17214:	b95b      	cbnz	r3, 1722e <hal_spi_config+0x2e>
        return -1;
    }

    if (spi->spi_type  == HAL_SPI_TYPE_MASTER) {
   17216:	7803      	ldrb	r3, [r0, #0]
   17218:	b113      	cbz	r3, 17220 <hal_spi_config+0x20>
        rc = hal_spi_config_master(spi, settings);
    } else {
        rc = hal_spi_config_slave(spi, settings);
   1721a:	f7ff feff 	bl	1701c <hal_spi_config_slave>
    }

err:
    return (rc);
}
   1721e:	bd08      	pop	{r3, pc}
        rc = hal_spi_config_master(spi, settings);
   17220:	f7ff ff7e 	bl	17120 <hal_spi_config_master>
   17224:	e7fb      	b.n	1721e <hal_spi_config+0x1e>
    NRF52_HAL_SPI_RESOLVE(spi_num, spi);
   17226:	2016      	movs	r0, #22
}
   17228:	4770      	bx	lr
    NRF52_HAL_SPI_RESOLVE(spi_num, spi);
   1722a:	2016      	movs	r0, #22
   1722c:	e7f7      	b.n	1721e <hal_spi_config+0x1e>
        return -1;
   1722e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   17232:	e7f4      	b.n	1721e <hal_spi_config+0x1e>
   17234:	0001f688 	.word	0x0001f688

00017238 <hal_spi_enable>:
    int rc;
    NRF_SPIS_Type *spis;
    NRF_SPI_Type *nrf_spi;
    struct nrf52_hal_spi *spi;

    NRF52_HAL_SPI_RESOLVE(spi_num, spi);
   17238:	2802      	cmp	r0, #2
   1723a:	dc1b      	bgt.n	17274 <hal_spi_enable+0x3c>
   1723c:	4b10      	ldr	r3, [pc, #64]	; (17280 <hal_spi_enable+0x48>)
   1723e:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
   17242:	b1cb      	cbz	r3, 17278 <hal_spi_enable+0x40>

    if (spi->spi_type  == HAL_SPI_TYPE_MASTER) {
   17244:	781a      	ldrb	r2, [r3, #0]
   17246:	b17a      	cbz	r2, 17268 <hal_spi_enable+0x30>
        /* For now, enable this in normal SPI mode (not spim) */
        nrf_spi = (NRF_SPI_Type *)spi->nhs_spi.spim;
        nrf_spi->ENABLE = (SPI_ENABLE_ENABLE_Enabled << SPI_ENABLE_ENABLE_Pos);
    } else {
        if (spi->txrx_cb_func == NULL) {
   17248:	6a1a      	ldr	r2, [r3, #32]
   1724a:	b1ba      	cbz	r2, 1727c <hal_spi_enable+0x44>
            rc = EINVAL;
            goto err;
        }

        spis = spi->nhs_spi.spis;
   1724c:	691b      	ldr	r3, [r3, #16]
        spis->EVENTS_END = 0;
   1724e:	2000      	movs	r0, #0
   17250:	f8c3 0104 	str.w	r0, [r3, #260]	; 0x104
        spis->EVENTS_ACQUIRED = 0;
   17254:	f8c3 0128 	str.w	r0, [r3, #296]	; 0x128
        spis->INTENSET = SPIS_INTENSET_END_Msk | SPIS_INTENSET_ACQUIRED_Msk;
   17258:	f240 4202 	movw	r2, #1026	; 0x402
   1725c:	f8c3 2304 	str.w	r2, [r3, #772]	; 0x304
        spis->ENABLE = (SPIS_ENABLE_ENABLE_Enabled << SPIS_ENABLE_ENABLE_Pos);
   17260:	2202      	movs	r2, #2
   17262:	f8c3 2500 	str.w	r2, [r3, #1280]	; 0x500
   17266:	4770      	bx	lr
        nrf_spi = (NRF_SPI_Type *)spi->nhs_spi.spim;
   17268:	691b      	ldr	r3, [r3, #16]
        nrf_spi->ENABLE = (SPI_ENABLE_ENABLE_Enabled << SPI_ENABLE_ENABLE_Pos);
   1726a:	2201      	movs	r2, #1
   1726c:	f8c3 2500 	str.w	r2, [r3, #1280]	; 0x500
    }
    rc = 0;
   17270:	2000      	movs	r0, #0
   17272:	4770      	bx	lr
    NRF52_HAL_SPI_RESOLVE(spi_num, spi);
   17274:	2016      	movs	r0, #22
   17276:	4770      	bx	lr
   17278:	2016      	movs	r0, #22
   1727a:	4770      	bx	lr
            rc = EINVAL;
   1727c:	2016      	movs	r0, #22

err:
    return rc;
}
   1727e:	4770      	bx	lr
   17280:	0001f688 	.word	0x0001f688

00017284 <hal_spi_disable>:
    int rc;
    NRF_SPIS_Type *spis;
    NRF_SPIM_Type *spim;
    struct nrf52_hal_spi *spi;

    NRF52_HAL_SPI_RESOLVE(spi_num, spi);
   17284:	2802      	cmp	r0, #2
   17286:	dc2a      	bgt.n	172de <hal_spi_disable+0x5a>
{
   17288:	b538      	push	{r3, r4, r5, lr}
    NRF52_HAL_SPI_RESOLVE(spi_num, spi);
   1728a:	4b17      	ldr	r3, [pc, #92]	; (172e8 <hal_spi_disable+0x64>)
   1728c:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
   17290:	b33c      	cbz	r4, 172e2 <hal_spi_disable+0x5e>

    if (spi->spi_type  == HAL_SPI_TYPE_MASTER) {
   17292:	7823      	ldrb	r3, [r4, #0]
   17294:	b9ab      	cbnz	r3, 172c2 <hal_spi_disable+0x3e>
        spim = spi->nhs_spi.spim;
   17296:	6925      	ldr	r5, [r4, #16]
        spim->INTENCLR = NRF_SPI_IRQ_DISABLE_ALL;
   17298:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1729c:	f8c5 3308 	str.w	r3, [r5, #776]	; 0x308

        if (spi->spi_xfr_flag) {
   172a0:	7863      	ldrb	r3, [r4, #1]
   172a2:	b943      	cbnz	r3, 172b6 <hal_spi_disable+0x32>
            hal_spi_stop_transfer(spim);
            spi->spi_xfr_flag = 0;
        }
        spim->ENABLE = 0;
   172a4:	2300      	movs	r3, #0
   172a6:	f8c5 3500 	str.w	r3, [r5, #1280]	; 0x500
        spis->EVENTS_ACQUIRED = 0;
        spis->ENABLE = 0;
        spi->slave_state = HAL_SPI_SLAVE_STATE_IDLE;
    }

    spi->nhs_txbuf = NULL;
   172aa:	2000      	movs	r0, #0
   172ac:	61a0      	str	r0, [r4, #24]
    spi->nhs_rxbuf = NULL;
   172ae:	61e0      	str	r0, [r4, #28]
    spi->nhs_buflen = 0;
   172b0:	80a0      	strh	r0, [r4, #4]
    spi->nhs_bytes_txd = 0;
   172b2:	80e0      	strh	r0, [r4, #6]

    rc = 0;

err:
    return rc;
}
   172b4:	bd38      	pop	{r3, r4, r5, pc}
            hal_spi_stop_transfer(spim);
   172b6:	4628      	mov	r0, r5
   172b8:	f7ff fea6 	bl	17008 <hal_spi_stop_transfer>
            spi->spi_xfr_flag = 0;
   172bc:	2300      	movs	r3, #0
   172be:	7063      	strb	r3, [r4, #1]
   172c0:	e7f0      	b.n	172a4 <hal_spi_disable+0x20>
        spis = spi->nhs_spi.spis;
   172c2:	6922      	ldr	r2, [r4, #16]
        spis->INTENCLR = NRF_SPI_IRQ_DISABLE_ALL;
   172c4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   172c8:	f8c2 3308 	str.w	r3, [r2, #776]	; 0x308
        spis->EVENTS_END = 0;
   172cc:	2300      	movs	r3, #0
   172ce:	f8c2 3104 	str.w	r3, [r2, #260]	; 0x104
        spis->EVENTS_ACQUIRED = 0;
   172d2:	f8c2 3128 	str.w	r3, [r2, #296]	; 0x128
        spis->ENABLE = 0;
   172d6:	f8c2 3500 	str.w	r3, [r2, #1280]	; 0x500
        spi->slave_state = HAL_SPI_SLAVE_STATE_IDLE;
   172da:	70e3      	strb	r3, [r4, #3]
   172dc:	e7e5      	b.n	172aa <hal_spi_disable+0x26>
    NRF52_HAL_SPI_RESOLVE(spi_num, spi);
   172de:	2016      	movs	r0, #22
}
   172e0:	4770      	bx	lr
    NRF52_HAL_SPI_RESOLVE(spi_num, spi);
   172e2:	2016      	movs	r0, #22
    return rc;
   172e4:	e7e6      	b.n	172b4 <hal_spi_disable+0x30>
   172e6:	bf00      	nop
   172e8:	0001f688 	.word	0x0001f688

000172ec <hal_spi_init>:
    NRF52_HAL_SPI_RESOLVE(spi_num, spi);
   172ec:	2802      	cmp	r0, #2
   172ee:	dc1d      	bgt.n	1732c <hal_spi_init+0x40>
{
   172f0:	b538      	push	{r3, r4, r5, lr}
    NRF52_HAL_SPI_RESOLVE(spi_num, spi);
   172f2:	4b13      	ldr	r3, [pc, #76]	; (17340 <hal_spi_init+0x54>)
   172f4:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
   172f8:	b1d4      	cbz	r4, 17330 <hal_spi_init+0x44>
    if (cfg == NULL) {
   172fa:	b1d9      	cbz	r1, 17334 <hal_spi_init+0x48>
    if ((spi_type != HAL_SPI_TYPE_MASTER) && (spi_type != HAL_SPI_TYPE_SLAVE)) {
   172fc:	2a01      	cmp	r2, #1
   172fe:	d81b      	bhi.n	17338 <hal_spi_init+0x4c>
    spi->spi_type  = spi_type;
   17300:	7022      	strb	r2, [r4, #0]
    if (spi_num == 0) {
   17302:	b9d8      	cbnz	r0, 1733c <hal_spi_init+0x50>
   17304:	460d      	mov	r5, r1
        spi->irq_num = SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQn;
   17306:	2303      	movs	r3, #3
   17308:	7523      	strb	r3, [r4, #20]
        if (spi_type == HAL_SPI_TYPE_MASTER) {
   1730a:	b94a      	cbnz	r2, 17320 <hal_spi_init+0x34>
            spi->nhs_spi.spim = NRF_SPIM0;
   1730c:	4b0d      	ldr	r3, [pc, #52]	; (17344 <hal_spi_init+0x58>)
   1730e:	6123      	str	r3, [r4, #16]
    hal_spi_disable(spi_num);
   17310:	f7ff ffb8 	bl	17284 <hal_spi_disable>
        rc = hal_spi_init_master(spi, (struct nrf52_hal_spi_cfg *)cfg,
   17314:	4a0c      	ldr	r2, [pc, #48]	; (17348 <hal_spi_init+0x5c>)
   17316:	4629      	mov	r1, r5
   17318:	4620      	mov	r0, r4
   1731a:	f7ff fea5 	bl	17068 <hal_spi_init_master>
   1731e:	e00c      	b.n	1733a <hal_spi_init+0x4e>
            assert(0);
   17320:	2300      	movs	r3, #0
   17322:	461a      	mov	r2, r3
   17324:	4619      	mov	r1, r3
   17326:	4618      	mov	r0, r3
   17328:	f000 f952 	bl	175d0 <__assert_func>
    NRF52_HAL_SPI_RESOLVE(spi_num, spi);
   1732c:	2016      	movs	r0, #22
}
   1732e:	4770      	bx	lr
    NRF52_HAL_SPI_RESOLVE(spi_num, spi);
   17330:	2016      	movs	r0, #22
   17332:	e002      	b.n	1733a <hal_spi_init+0x4e>
    rc = EINVAL;
   17334:	2016      	movs	r0, #22
   17336:	e000      	b.n	1733a <hal_spi_init+0x4e>
   17338:	2016      	movs	r0, #22
}
   1733a:	bd38      	pop	{r3, r4, r5, pc}
    rc = EINVAL;
   1733c:	2016      	movs	r0, #22
    return (rc);
   1733e:	e7fc      	b.n	1733a <hal_spi_init+0x4e>
   17340:	0001f688 	.word	0x0001f688
   17344:	40003000 	.word	0x40003000
   17348:	00016ff1 	.word	0x00016ff1

0001734c <hal_spi_set_txrx_cb>:
{
    int rc;
    NRF_SPIM_Type *spim;
    struct nrf52_hal_spi *spi;

    NRF52_HAL_SPI_RESOLVE(spi_num, spi);
   1734c:	2802      	cmp	r0, #2
   1734e:	dc0a      	bgt.n	17366 <hal_spi_set_txrx_cb+0x1a>
   17350:	4b08      	ldr	r3, [pc, #32]	; (17374 <hal_spi_set_txrx_cb+0x28>)
   17352:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
   17356:	b143      	cbz	r3, 1736a <hal_spi_set_txrx_cb+0x1e>

    /*
     * This looks odd, but the ENABLE register is in the same location for
     * SPIM, SPI and SPIS
     */
    spim = spi->nhs_spi.spim;
   17358:	6918      	ldr	r0, [r3, #16]
    if (spim->ENABLE != 0) {
   1735a:	f8d0 0500 	ldr.w	r0, [r0, #1280]	; 0x500
   1735e:	b930      	cbnz	r0, 1736e <hal_spi_set_txrx_cb+0x22>
        rc = -1;
    } else {
        spi->txrx_cb_func = txrx_cb;
   17360:	6219      	str	r1, [r3, #32]
        spi->txrx_cb_arg = arg;
   17362:	625a      	str	r2, [r3, #36]	; 0x24
   17364:	4770      	bx	lr
    NRF52_HAL_SPI_RESOLVE(spi_num, spi);
   17366:	2016      	movs	r0, #22
   17368:	4770      	bx	lr
   1736a:	2016      	movs	r0, #22
   1736c:	4770      	bx	lr
        rc = -1;
   1736e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
        rc = 0;
    }

err:
    return rc;
}
   17372:	4770      	bx	lr
   17374:	0001f688 	.word	0x0001f688

00017378 <hal_spi_txrx>:
    NRF_SPI_Type *spi;
    NRF_SPIM_Type *spim;
    struct nrf52_hal_spi *hal_spi;

    rc = EINVAL;
    if (!len) {
   17378:	2b00      	cmp	r3, #0
   1737a:	d046      	beq.n	1740a <hal_spi_txrx+0x92>
{
   1737c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1737e:	460d      	mov	r5, r1
   17380:	4617      	mov	r7, r2
   17382:	461e      	mov	r6, r3
        goto err;
    }

    NRF52_HAL_SPI_RESOLVE(spi_num, hal_spi);
   17384:	2802      	cmp	r0, #2
   17386:	dc42      	bgt.n	1740e <hal_spi_txrx+0x96>
   17388:	4b25      	ldr	r3, [pc, #148]	; (17420 <hal_spi_txrx+0xa8>)
   1738a:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
   1738e:	2b00      	cmp	r3, #0
   17390:	d03f      	beq.n	17412 <hal_spi_txrx+0x9a>

    if (hal_spi->spi_type  == HAL_SPI_TYPE_MASTER) {
   17392:	781a      	ldrb	r2, [r3, #0]
   17394:	2a00      	cmp	r2, #0
   17396:	d13e      	bne.n	17416 <hal_spi_txrx+0x9e>
        /* Must have a txbuf for master! */
        if (txbuf == NULL) {
   17398:	2900      	cmp	r1, #0
   1739a:	d03e      	beq.n	1741a <hal_spi_txrx+0xa2>

        /*
         * If SPIM is enabled, we want to stop, disable, then enable
         * the legacy SPI interface.
         */
        spim = hal_spi->nhs_spi.spim;
   1739c:	691c      	ldr	r4, [r3, #16]
        enabled = spim->ENABLE;
   1739e:	f8d4 3500 	ldr.w	r3, [r4, #1280]	; 0x500
        if (enabled == SPIM_ENABLE_ENABLE_Enabled) {
   173a2:	2b07      	cmp	r3, #7
   173a4:	d004      	beq.n	173b0 <hal_spi_txrx+0x38>
            hal_spi_disable(spi_num);
            enabled = 0;
        }

        spi = (NRF_SPI_Type *)spim;
        if (enabled == 0) {
   173a6:	b95b      	cbnz	r3, 173c0 <hal_spi_txrx+0x48>
            spi->ENABLE = (SPI_ENABLE_ENABLE_Enabled << SPI_ENABLE_ENABLE_Pos);
   173a8:	2301      	movs	r3, #1
   173aa:	f8c4 3500 	str.w	r3, [r4, #1280]	; 0x500
   173ae:	e007      	b.n	173c0 <hal_spi_txrx+0x48>
            hal_spi_disable(spi_num);
   173b0:	f7ff ff68 	bl	17284 <hal_spi_disable>
   173b4:	e7f8      	b.n	173a8 <hal_spi_txrx+0x30>
        }

        while (spi->EVENTS_READY) {
            rxval = (uint8_t)spi->RXD;
   173b6:	f8d4 3518 	ldr.w	r3, [r4, #1304]	; 0x518
            spi->EVENTS_READY = 0;
   173ba:	2300      	movs	r3, #0
   173bc:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
        while (spi->EVENTS_READY) {
   173c0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
   173c4:	2b00      	cmp	r3, #0
   173c6:	d1f6      	bne.n	173b6 <hal_spi_txrx+0x3e>
        }
        txd = (uint8_t *)txbuf;
        spi->TXD = *txd;
   173c8:	782b      	ldrb	r3, [r5, #0]
   173ca:	f8c4 351c 	str.w	r3, [r4, #1308]	; 0x51c

        txcnt = len - 1;
   173ce:	1e71      	subs	r1, r6, #1
        rxd = (uint8_t *)rxbuf;
   173d0:	4638      	mov	r0, r7
        for (i = 0; i < len; ++i) {
   173d2:	2200      	movs	r2, #0
   173d4:	e00d      	b.n	173f2 <hal_spi_txrx+0x7a>
            if (txcnt) {
                ++txd;
                spi->TXD = *txd;
                --txcnt;
            }
            while (!spi->EVENTS_READY) {}
   173d6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
   173da:	2b00      	cmp	r3, #0
   173dc:	d0fb      	beq.n	173d6 <hal_spi_txrx+0x5e>
            spi->EVENTS_READY = 0;
   173de:	2300      	movs	r3, #0
   173e0:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
            rxval = (uint8_t)spi->RXD;
   173e4:	f8d4 3518 	ldr.w	r3, [r4, #1304]	; 0x518
   173e8:	b2db      	uxtb	r3, r3
            if (rxbuf) {
   173ea:	b10f      	cbz	r7, 173f0 <hal_spi_txrx+0x78>
                *rxd = rxval;
   173ec:	f800 3b01 	strb.w	r3, [r0], #1
        for (i = 0; i < len; ++i) {
   173f0:	3201      	adds	r2, #1
   173f2:	42b2      	cmp	r2, r6
   173f4:	da07      	bge.n	17406 <hal_spi_txrx+0x8e>
            if (txcnt) {
   173f6:	2900      	cmp	r1, #0
   173f8:	d0ed      	beq.n	173d6 <hal_spi_txrx+0x5e>
                spi->TXD = *txd;
   173fa:	786b      	ldrb	r3, [r5, #1]
   173fc:	f8c4 351c 	str.w	r3, [r4, #1308]	; 0x51c
                --txcnt;
   17400:	3901      	subs	r1, #1
                ++txd;
   17402:	3501      	adds	r5, #1
   17404:	e7e7      	b.n	173d6 <hal_spi_txrx+0x5e>
                ++rxd;
            }
        }
        return 0;
   17406:	2000      	movs	r0, #0
    }

err:
    return rc;
}
   17408:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return rc;
   1740a:	2016      	movs	r0, #22
}
   1740c:	4770      	bx	lr
    return rc;
   1740e:	2016      	movs	r0, #22
   17410:	e7fa      	b.n	17408 <hal_spi_txrx+0x90>
   17412:	2016      	movs	r0, #22
   17414:	e7f8      	b.n	17408 <hal_spi_txrx+0x90>
   17416:	2016      	movs	r0, #22
   17418:	e7f6      	b.n	17408 <hal_spi_txrx+0x90>
   1741a:	2016      	movs	r0, #22
   1741c:	e7f4      	b.n	17408 <hal_spi_txrx+0x90>
   1741e:	bf00      	nop
   17420:	0001f688 	.word	0x0001f688

00017424 <hal_spi_txrx_noblock>:
    int rc;
    NRF_SPIM_Type *spim;
    struct nrf52_hal_spi *spi;

    rc = EINVAL;
    NRF52_HAL_SPI_RESOLVE(spi_num, spi);
   17424:	2802      	cmp	r0, #2
   17426:	dc57      	bgt.n	174d8 <hal_spi_txrx_noblock+0xb4>
{
   17428:	b430      	push	{r4, r5}
    NRF52_HAL_SPI_RESOLVE(spi_num, spi);
   1742a:	4c35      	ldr	r4, [pc, #212]	; (17500 <hal_spi_txrx_noblock+0xdc>)
   1742c:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
   17430:	2800      	cmp	r0, #0
   17432:	d053      	beq.n	174dc <hal_spi_txrx_noblock+0xb8>

    if ((spi->txrx_cb_func == NULL) || (len == 0)) {
   17434:	6a04      	ldr	r4, [r0, #32]
   17436:	2c00      	cmp	r4, #0
   17438:	d052      	beq.n	174e0 <hal_spi_txrx_noblock+0xbc>
   1743a:	2b00      	cmp	r3, #0
   1743c:	d052      	beq.n	174e4 <hal_spi_txrx_noblock+0xc0>
        }
        return rc;
    }
#endif

    if (spi->spi_type  == HAL_SPI_TYPE_MASTER) {
   1743e:	7804      	ldrb	r4, [r0, #0]
   17440:	2c00      	cmp	r4, #0
   17442:	d137      	bne.n	174b4 <hal_spi_txrx_noblock+0x90>
        /* Must have a txbuf for master! */
        if (txbuf == NULL) {
   17444:	2900      	cmp	r1, #0
   17446:	d050      	beq.n	174ea <hal_spi_txrx_noblock+0xc6>
            goto err;
        }

        /* Not allowed if transfer in progress */
        if (spi->spi_xfr_flag) {
   17448:	7844      	ldrb	r4, [r0, #1]
   1744a:	2c00      	cmp	r4, #0
   1744c:	d14f      	bne.n	174ee <hal_spi_txrx_noblock+0xca>
            rc = -1;
            goto err;
        }
        spim = spi->nhs_spi.spim;
   1744e:	6904      	ldr	r4, [r0, #16]
        spim->INTENCLR = SPIM_INTENCLR_END_Msk;
   17450:	2540      	movs	r5, #64	; 0x40
   17452:	f8c4 5308 	str.w	r5, [r4, #776]	; 0x308
        spi->spi_xfr_flag = 1;
   17456:	2501      	movs	r5, #1
   17458:	7045      	strb	r5, [r0, #1]

        /* Must be enabled for SPIM as opposed to SPI */
        if (spim->ENABLE != SPIM_ENABLE_ENABLE_Enabled) {
   1745a:	f8d4 5500 	ldr.w	r5, [r4, #1280]	; 0x500
   1745e:	2d07      	cmp	r5, #7
   17460:	d005      	beq.n	1746e <hal_spi_txrx_noblock+0x4a>
            spim->ENABLE = 0;
   17462:	2500      	movs	r5, #0
   17464:	f8c4 5500 	str.w	r5, [r4, #1280]	; 0x500
            spim->ENABLE = (SPIM_ENABLE_ENABLE_Enabled << SPIM_ENABLE_ENABLE_Pos);
   17468:	2507      	movs	r5, #7
   1746a:	f8c4 5500 	str.w	r5, [r4, #1280]	; 0x500
        }

        /* Set internal data structure information */
        spi->nhs_bytes_txd = 0;
   1746e:	2500      	movs	r5, #0
   17470:	80c5      	strh	r5, [r0, #6]
        spi->nhs_buflen = len;
   17472:	8083      	strh	r3, [r0, #4]
        spi->nhs_txbuf = txbuf;
   17474:	6181      	str	r1, [r0, #24]

        len = min(SPIM_TXD_MAXCNT_MAX, len);
   17476:	2bff      	cmp	r3, #255	; 0xff
   17478:	bfa8      	it	ge
   1747a:	23ff      	movge	r3, #255	; 0xff

        /* Set chip registers */
        spim->TXD.PTR = (uint32_t)txbuf;
   1747c:	f8c4 1544 	str.w	r1, [r4, #1348]	; 0x544
        spim->TXD.MAXCNT = len;
   17480:	f8c4 3548 	str.w	r3, [r4, #1352]	; 0x548

        /* If no rxbuf, we need to set rxbuf and maxcnt to 1 */
        spi->nhs_rxbuf = rxbuf;
   17484:	61c2      	str	r2, [r0, #28]
        if (rxbuf == NULL) {
   17486:	b172      	cbz	r2, 174a6 <hal_spi_txrx_noblock+0x82>
            spim->RXD.PTR = (uint32_t)&spi->dummy_rx;
            spim->RXD.MAXCNT = 1;
        } else {
            spim->RXD.PTR = (uint32_t)rxbuf;
   17488:	f8c4 2534 	str.w	r2, [r4, #1332]	; 0x534
            spim->RXD.MAXCNT = len;
   1748c:	f8c4 3538 	str.w	r3, [r4, #1336]	; 0x538
        }

        spim->EVENTS_END = 0;
   17490:	2000      	movs	r0, #0
   17492:	f8c4 0118 	str.w	r0, [r4, #280]	; 0x118
        spim->EVENTS_STOPPED = 0;
   17496:	f8c4 0104 	str.w	r0, [r4, #260]	; 0x104
        spim->TASKS_START = 1;
   1749a:	2301      	movs	r3, #1
   1749c:	6123      	str	r3, [r4, #16]
        spim->INTENSET = SPIM_INTENSET_END_Msk;
   1749e:	2340      	movs	r3, #64	; 0x40
   174a0:	f8c4 3304 	str.w	r3, [r4, #772]	; 0x304
   174a4:	e01f      	b.n	174e6 <hal_spi_txrx_noblock+0xc2>
            spim->RXD.PTR = (uint32_t)&spi->dummy_rx;
   174a6:	3002      	adds	r0, #2
   174a8:	f8c4 0534 	str.w	r0, [r4, #1332]	; 0x534
            spim->RXD.MAXCNT = 1;
   174ac:	2301      	movs	r3, #1
   174ae:	f8c4 3538 	str.w	r3, [r4, #1336]	; 0x538
   174b2:	e7ed      	b.n	17490 <hal_spi_txrx_noblock+0x6c>
    } else {
        /* Must have txbuf or rxbuf */
        if ((txbuf == NULL) && (rxbuf == NULL)) {
   174b4:	b161      	cbz	r1, 174d0 <hal_spi_txrx_noblock+0xac>
            goto err;
        }

        /* XXX: what to do here? */
        if (len > 255) {
   174b6:	2bff      	cmp	r3, #255	; 0xff
   174b8:	dc1c      	bgt.n	174f4 <hal_spi_txrx_noblock+0xd0>
        /*
         * Ready the slave for a transfer. Do not allow this to be called
         * if the slave has already been readied or is requesting the
         * semaphore
         */
        if (spi->slave_state != HAL_SPI_SLAVE_STATE_IDLE) {
   174ba:	78c4      	ldrb	r4, [r0, #3]
   174bc:	b9e4      	cbnz	r4, 174f8 <hal_spi_txrx_noblock+0xd4>
            rc = -1;
            goto err;
        }

        spi->nhs_rxbuf = rxbuf;
   174be:	61c2      	str	r2, [r0, #28]
        spi->nhs_txbuf = txbuf;
   174c0:	6181      	str	r1, [r0, #24]
        spi->nhs_buflen = len;
   174c2:	8083      	strh	r3, [r0, #4]
        spi->slave_state = HAL_SPI_SLAVE_STATE_ACQ_SEM;
   174c4:	2301      	movs	r3, #1
   174c6:	70c3      	strb	r3, [r0, #3]
        spi->nhs_spi.spis->TASKS_ACQUIRE = 1;
   174c8:	6902      	ldr	r2, [r0, #16]
   174ca:	6253      	str	r3, [r2, #36]	; 0x24
    }
    return 0;
   174cc:	2000      	movs	r0, #0
   174ce:	e00a      	b.n	174e6 <hal_spi_txrx_noblock+0xc2>
        if ((txbuf == NULL) && (rxbuf == NULL)) {
   174d0:	2a00      	cmp	r2, #0
   174d2:	d1f0      	bne.n	174b6 <hal_spi_txrx_noblock+0x92>
    rc = EINVAL;
   174d4:	2016      	movs	r0, #22
   174d6:	e006      	b.n	174e6 <hal_spi_txrx_noblock+0xc2>
    NRF52_HAL_SPI_RESOLVE(spi_num, spi);
   174d8:	2016      	movs	r0, #22

err:
    return rc;
}
   174da:	4770      	bx	lr
    NRF52_HAL_SPI_RESOLVE(spi_num, spi);
   174dc:	2016      	movs	r0, #22
   174de:	e002      	b.n	174e6 <hal_spi_txrx_noblock+0xc2>
    rc = EINVAL;
   174e0:	2016      	movs	r0, #22
   174e2:	e000      	b.n	174e6 <hal_spi_txrx_noblock+0xc2>
   174e4:	2016      	movs	r0, #22
}
   174e6:	bc30      	pop	{r4, r5}
   174e8:	4770      	bx	lr
    rc = EINVAL;
   174ea:	2016      	movs	r0, #22
   174ec:	e7fb      	b.n	174e6 <hal_spi_txrx_noblock+0xc2>
            rc = -1;
   174ee:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   174f2:	e7f8      	b.n	174e6 <hal_spi_txrx_noblock+0xc2>
    rc = EINVAL;
   174f4:	2016      	movs	r0, #22
   174f6:	e7f6      	b.n	174e6 <hal_spi_txrx_noblock+0xc2>
            rc = -1;
   174f8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   174fc:	e7f3      	b.n	174e6 <hal_spi_txrx_noblock+0xc2>
   174fe:	bf00      	nop
   17500:	0001f688 	.word	0x0001f688

00017504 <nrf52_hal_wdt_default_handler>:
#include "mcu/cmsis_nvic.h"
#include "nrf.h"

static void
nrf52_hal_wdt_default_handler(void)
{
   17504:	b508      	push	{r3, lr}
    assert(0);
   17506:	2300      	movs	r3, #0
   17508:	461a      	mov	r2, r3
   1750a:	4619      	mov	r1, r3
   1750c:	4618      	mov	r0, r3
   1750e:	f000 f85f 	bl	175d0 <__assert_func>
	...

00017514 <nrf52_wdt_irq_handler>:
}

/**@brief WDT interrupt handler. */
static void
nrf52_wdt_irq_handler(void)
{
   17514:	b508      	push	{r3, lr}
    os_trace_isr_enter();
    if (NRF_WDT->INTENSET & WDT_INTENSET_TIMEOUT_Msk) {
   17516:	4b06      	ldr	r3, [pc, #24]	; (17530 <nrf52_wdt_irq_handler+0x1c>)
   17518:	f8d3 3304 	ldr.w	r3, [r3, #772]	; 0x304
   1751c:	f013 0f01 	tst.w	r3, #1
   17520:	d100      	bne.n	17524 <nrf52_wdt_irq_handler+0x10>
        NRF_WDT->EVENTS_TIMEOUT = 0;
        nrf52_hal_wdt_default_handler();
    }
    os_trace_isr_exit();
}
   17522:	bd08      	pop	{r3, pc}
        NRF_WDT->EVENTS_TIMEOUT = 0;
   17524:	4b02      	ldr	r3, [pc, #8]	; (17530 <nrf52_wdt_irq_handler+0x1c>)
   17526:	2200      	movs	r2, #0
   17528:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
        nrf52_hal_wdt_default_handler();
   1752c:	f7ff ffea 	bl	17504 <nrf52_hal_wdt_default_handler>
   17530:	40010000 	.word	0x40010000

00017534 <hal_watchdog_init>:

int
hal_watchdog_init(uint32_t expire_msecs)
{
   17534:	b508      	push	{r3, lr}
    NRF_WDT->CONFIG = WDT_CONFIG_SLEEP_Msk;
   17536:	4b17      	ldr	r3, [pc, #92]	; (17594 <hal_watchdog_init+0x60>)
   17538:	2201      	movs	r2, #1
   1753a:	f8c3 250c 	str.w	r2, [r3, #1292]	; 0x50c

    if (expire_msecs >= 44739243) {
   1753e:	4b16      	ldr	r3, [pc, #88]	; (17598 <hal_watchdog_init+0x64>)
   17540:	4298      	cmp	r0, r3
   17542:	d821      	bhi.n	17588 <hal_watchdog_init+0x54>
        /* maximum allowed time is near 12.5 hours! */
        assert(0);
    } else {
        NRF_WDT->CRV = (expire_msecs * 32) + ((expire_msecs * 96) / 125);
   17544:	eb00 0240 	add.w	r2, r0, r0, lsl #1
   17548:	0153      	lsls	r3, r2, #5
   1754a:	4a14      	ldr	r2, [pc, #80]	; (1759c <hal_watchdog_init+0x68>)
   1754c:	fba2 2303 	umull	r2, r3, r2, r3
   17550:	08db      	lsrs	r3, r3, #3
   17552:	eb03 1040 	add.w	r0, r3, r0, lsl #5
   17556:	4b0f      	ldr	r3, [pc, #60]	; (17594 <hal_watchdog_init+0x60>)
   17558:	f8c3 0504 	str.w	r0, [r3, #1284]	; 0x504
  uint32_t vectors = (uint32_t )SCB->VTOR;
   1755c:	4a10      	ldr	r2, [pc, #64]	; (175a0 <hal_watchdog_init+0x6c>)
   1755e:	6892      	ldr	r2, [r2, #8]
  (* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4)) = vector;
   17560:	4910      	ldr	r1, [pc, #64]	; (175a4 <hal_watchdog_init+0x70>)
   17562:	f8c2 1080 	str.w	r1, [r2, #128]	; 0x80
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
   17566:	4a10      	ldr	r2, [pc, #64]	; (175a8 <hal_watchdog_init+0x74>)
   17568:	21e0      	movs	r1, #224	; 0xe0
   1756a:	f882 1310 	strb.w	r1, [r2, #784]	; 0x310
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   1756e:	f44f 3180 	mov.w	r1, #65536	; 0x10000
   17572:	f8c2 1180 	str.w	r1, [r2, #384]	; 0x180
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   17576:	6011      	str	r1, [r2, #0]

    NVIC_SetVector(WDT_IRQn, (uint32_t) nrf52_wdt_irq_handler);
    NVIC_SetPriority(WDT_IRQn, (1 << __NVIC_PRIO_BITS) - 1);
    NVIC_ClearPendingIRQ(WDT_IRQn);
    NVIC_EnableIRQ(WDT_IRQn);
    NRF_WDT->RREN |= 0x1;
   17578:	f8d3 2508 	ldr.w	r2, [r3, #1288]	; 0x508
   1757c:	f042 0201 	orr.w	r2, r2, #1
   17580:	f8c3 2508 	str.w	r2, [r3, #1288]	; 0x508

    return (0);
}
   17584:	2000      	movs	r0, #0
   17586:	bd08      	pop	{r3, pc}
        assert(0);
   17588:	2300      	movs	r3, #0
   1758a:	461a      	mov	r2, r3
   1758c:	4619      	mov	r1, r3
   1758e:	4618      	mov	r0, r3
   17590:	f000 f81e 	bl	175d0 <__assert_func>
   17594:	40010000 	.word	0x40010000
   17598:	02aaaaaa 	.word	0x02aaaaaa
   1759c:	10624dd3 	.word	0x10624dd3
   175a0:	e000ed00 	.word	0xe000ed00
   175a4:	00017515 	.word	0x00017515
   175a8:	e000e100 	.word	0xe000e100

000175ac <hal_watchdog_enable>:

void
hal_watchdog_enable(void)
{
    NRF_WDT->INTENSET = WDT_INTENSET_TIMEOUT_Msk;
   175ac:	4b02      	ldr	r3, [pc, #8]	; (175b8 <hal_watchdog_enable+0xc>)
   175ae:	2201      	movs	r2, #1
   175b0:	f8c3 2304 	str.w	r2, [r3, #772]	; 0x304
    NRF_WDT->TASKS_START = 1;
   175b4:	601a      	str	r2, [r3, #0]
}
   175b6:	4770      	bx	lr
   175b8:	40010000 	.word	0x40010000

000175bc <hal_watchdog_tickle>:

void
hal_watchdog_tickle(void)
{
    NRF_WDT->RR[0] = WDT_RR_RR_Reload;
   175bc:	4b02      	ldr	r3, [pc, #8]	; (175c8 <hal_watchdog_tickle+0xc>)
   175be:	4a03      	ldr	r2, [pc, #12]	; (175cc <hal_watchdog_tickle+0x10>)
   175c0:	f8c3 2600 	str.w	r2, [r3, #1536]	; 0x600
}
   175c4:	4770      	bx	lr
   175c6:	bf00      	nop
   175c8:	40010000 	.word	0x40010000
   175cc:	6e524635 	.word	0x6e524635

000175d0 <__assert_func>:
}
#endif

void
__assert_func(const char *file, int line, const char *func, const char *e)
{
   175d0:	b508      	push	{r3, lr}
   175d2:	4675      	mov	r5, lr
   175d4:	4604      	mov	r4, r0
   175d6:	460e      	mov	r6, r1
#if MYNEWT_VAL(OS_CRASH_LOG)
    struct log_reboot_info lri;
#endif
    int sr;

    OS_ENTER_CRITICAL(sr);
   175d8:	f001 fa90 	bl	18afc <os_arch_save_sr>
    (void)sr;
    console_blocking_mode();
   175dc:	f7ff f905 	bl	167ea <console_blocking_mode>
    OS_PRINT_ASSERT(file, line, func, e);
   175e0:	b18c      	cbz	r4, 17606 <__assert_func+0x36>
   175e2:	4633      	mov	r3, r6
   175e4:	4622      	mov	r2, r4
   175e6:	4629      	mov	r1, r5
   175e8:	4809      	ldr	r0, [pc, #36]	; (17610 <__assert_func+0x40>)
   175ea:	f7ff f929 	bl	16840 <console_printf>

#if MYNEWT_VAL(OS_ASSERT_CB)
    os_assert_cb();
#endif

    if (hal_debugger_connected()) {
   175ee:	f7f0 fdc9 	bl	8184 <hal_debugger_connected>
   175f2:	b100      	cbz	r0, 175f6 <__assert_func+0x26>
       /*
        * If debugger is attached, breakpoint before the trap.
        */
#if !MYNEWT_VAL(MCU_DEBUG_IGNORE_BKPT)
       asm("bkpt");
   175f4:	be00      	bkpt	0x0000
#endif
    }
    SCB->ICSR = SCB_ICSR_NMIPENDSET_Msk;
   175f6:	4b07      	ldr	r3, [pc, #28]	; (17614 <__assert_func+0x44>)
   175f8:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
   175fc:	605a      	str	r2, [r3, #4]
    asm("isb");
   175fe:	f3bf 8f6f 	isb	sy
    hal_system_reset();
   17602:	f7f0 fdc7 	bl	8194 <hal_system_reset>
    OS_PRINT_ASSERT(file, line, func, e);
   17606:	4629      	mov	r1, r5
   17608:	4803      	ldr	r0, [pc, #12]	; (17618 <__assert_func+0x48>)
   1760a:	f7ff f919 	bl	16840 <console_printf>
   1760e:	e7ee      	b.n	175ee <__assert_func+0x1e>
   17610:	0001f6a4 	.word	0x0001f6a4
   17614:	e000ed00 	.word	0xe000ed00
   17618:	0001f694 	.word	0x0001f694

0001761c <os_default_irq>:
}

void
os_default_irq(struct trap_frame *tf)
{
   1761c:	b500      	push	{lr}
   1761e:	b083      	sub	sp, #12
   17620:	4604      	mov	r4, r0
#endif
#if MYNEWT_VAL(OS_CRASH_RESTORE_REGS)
    uint32_t orig_sp;
#endif

    console_blocking_mode();
   17622:	f7ff f8e2 	bl	167ea <console_blocking_mode>
    console_printf("Unhandled interrupt (%ld), exception sp 0x%08lx\n",
      SCB->ICSR & SCB_ICSR_VECTACTIVE_Msk, (uint32_t)tf->ef);
   17626:	4d1b      	ldr	r5, [pc, #108]	; (17694 <os_default_irq+0x78>)
   17628:	6869      	ldr	r1, [r5, #4]
    console_printf("Unhandled interrupt (%ld), exception sp 0x%08lx\n",
   1762a:	6822      	ldr	r2, [r4, #0]
   1762c:	f3c1 0108 	ubfx	r1, r1, #0, #9
   17630:	4819      	ldr	r0, [pc, #100]	; (17698 <os_default_irq+0x7c>)
   17632:	f7ff f905 	bl	16840 <console_printf>
    console_printf(" r0:0x%08lx  r1:0x%08lx  r2:0x%08lx  r3:0x%08lx\n",
      tf->ef->r0, tf->ef->r1, tf->ef->r2, tf->ef->r3);
   17636:	6820      	ldr	r0, [r4, #0]
    console_printf(" r0:0x%08lx  r1:0x%08lx  r2:0x%08lx  r3:0x%08lx\n",
   17638:	6883      	ldr	r3, [r0, #8]
   1763a:	6842      	ldr	r2, [r0, #4]
   1763c:	6801      	ldr	r1, [r0, #0]
   1763e:	68c0      	ldr	r0, [r0, #12]
   17640:	9000      	str	r0, [sp, #0]
   17642:	4816      	ldr	r0, [pc, #88]	; (1769c <os_default_irq+0x80>)
   17644:	f7ff f8fc 	bl	16840 <console_printf>
    console_printf(" r4:0x%08lx  r5:0x%08lx  r6:0x%08lx  r7:0x%08lx\n",
   17648:	6923      	ldr	r3, [r4, #16]
   1764a:	9300      	str	r3, [sp, #0]
   1764c:	68e3      	ldr	r3, [r4, #12]
   1764e:	68a2      	ldr	r2, [r4, #8]
   17650:	6861      	ldr	r1, [r4, #4]
   17652:	4813      	ldr	r0, [pc, #76]	; (176a0 <os_default_irq+0x84>)
   17654:	f7ff f8f4 	bl	16840 <console_printf>
      tf->r4, tf->r5, tf->r6, tf->r7);
    console_printf(" r8:0x%08lx  r9:0x%08lx r10:0x%08lx r11:0x%08lx\n",
   17658:	6a23      	ldr	r3, [r4, #32]
   1765a:	9300      	str	r3, [sp, #0]
   1765c:	69e3      	ldr	r3, [r4, #28]
   1765e:	69a2      	ldr	r2, [r4, #24]
   17660:	6961      	ldr	r1, [r4, #20]
   17662:	4810      	ldr	r0, [pc, #64]	; (176a4 <os_default_irq+0x88>)
   17664:	f7ff f8ec 	bl	16840 <console_printf>
      tf->r8, tf->r9, tf->r10, tf->r11);
    console_printf("r12:0x%08lx  lr:0x%08lx  pc:0x%08lx psr:0x%08lx\n",
      tf->ef->r12, tf->ef->lr, tf->ef->pc, tf->ef->psr);
   17668:	6820      	ldr	r0, [r4, #0]
    console_printf("r12:0x%08lx  lr:0x%08lx  pc:0x%08lx psr:0x%08lx\n",
   1766a:	6983      	ldr	r3, [r0, #24]
   1766c:	6942      	ldr	r2, [r0, #20]
   1766e:	6901      	ldr	r1, [r0, #16]
   17670:	69c0      	ldr	r0, [r0, #28]
   17672:	9000      	str	r0, [sp, #0]
   17674:	480c      	ldr	r0, [pc, #48]	; (176a8 <os_default_irq+0x8c>)
   17676:	f7ff f8e3 	bl	16840 <console_printf>
    console_printf("ICSR:0x%08lx HFSR:0x%08lx CFSR:0x%08lx\n",
   1767a:	6869      	ldr	r1, [r5, #4]
   1767c:	6aea      	ldr	r2, [r5, #44]	; 0x2c
   1767e:	6aab      	ldr	r3, [r5, #40]	; 0x28
   17680:	480a      	ldr	r0, [pc, #40]	; (176ac <os_default_irq+0x90>)
   17682:	f7ff f8dd 	bl	16840 <console_printf>
      SCB->ICSR, SCB->HFSR, SCB->CFSR);
    console_printf("BFAR:0x%08lx MMFAR:0x%08lx\n", SCB->BFAR, SCB->MMFAR);
   17686:	6ba9      	ldr	r1, [r5, #56]	; 0x38
   17688:	6b6a      	ldr	r2, [r5, #52]	; 0x34
   1768a:	4809      	ldr	r0, [pc, #36]	; (176b0 <os_default_irq+0x94>)
   1768c:	f7ff f8d8 	bl	16840 <console_printf>
            : "r0"
        );
    }
#endif

    hal_system_reset();
   17690:	f7f0 fd80 	bl	8194 <hal_system_reset>
   17694:	e000ed00 	.word	0xe000ed00
   17698:	0001f6bc 	.word	0x0001f6bc
   1769c:	0001f6f0 	.word	0x0001f6f0
   176a0:	0001f724 	.word	0x0001f724
   176a4:	0001f758 	.word	0x0001f758
   176a8:	0001f78c 	.word	0x0001f78c
   176ac:	0001f7c0 	.word	0x0001f7c0
   176b0:	0001f7e8 	.word	0x0001f7e8

000176b4 <os_idle_task>:
 *
 * @param arg unused
 */
void
os_idle_task(void *arg)
{
   176b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    os_time_t sanity_itvl_ticks;

    sanity_itvl_ticks = (MYNEWT_VAL(SANITY_INTERVAL) * OS_TICKS_PER_SEC) / 1000;
    sanity_last = 0;

    hal_watchdog_tickle();
   176b6:	f7ff ff81 	bl	175bc <hal_watchdog_tickle>
    sanity_last = 0;
   176ba:	2500      	movs	r5, #0
   176bc:	e00b      	b.n	176d6 <os_idle_task+0x22>
    while (1) {
        ++g_os_idle_ctr;

        now = os_time_get();
        if (OS_TIME_TICK_GT(now, sanity_last + sanity_itvl_ticks)) {
            os_sanity_run();
   176be:	f000 fec7 	bl	18450 <os_sanity_run>
            /* Tickle the watchdog after successfully running sanity */
            hal_watchdog_tickle();
   176c2:	f7ff ff7b 	bl	175bc <hal_watchdog_tickle>
#if MYNEWT_VAL(OS_WATCHDOG_MONITOR)
            os_cputime_timer_stop(&os_wdog_monitor);
            os_cputime_timer_relative(&os_wdog_monitor, OS_WDOG_MONITOR_TMO);
#endif
            sanity_last = now;
   176c6:	4625      	mov	r5, r4
   176c8:	e011      	b.n	176ee <os_idle_task+0x3a>
         * as the idle task does not schedule itself.
         */
        iticks = min(iticks, ((sanity_last + sanity_itvl_ticks) - now));

        if (iticks < MIN_IDLE_TICKS) {
            iticks = 0;
   176ca:	2000      	movs	r0, #0
        /* Tell the architecture specific support to put the processor to sleep
         * for 'n' ticks.
         */

        os_trace_idle();
        os_tick_idle(iticks);
   176cc:	f002 f842 	bl	19754 <os_tick_idle>
        OS_EXIT_CRITICAL(sr);
   176d0:	4638      	mov	r0, r7
   176d2:	f001 fa19 	bl	18b08 <os_arch_restore_sr>
        ++g_os_idle_ctr;
   176d6:	4a14      	ldr	r2, [pc, #80]	; (17728 <os_idle_task+0x74>)
   176d8:	6813      	ldr	r3, [r2, #0]
   176da:	3301      	adds	r3, #1
   176dc:	6013      	str	r3, [r2, #0]
        now = os_time_get();
   176de:	f001 f995 	bl	18a0c <os_time_get>
   176e2:	4604      	mov	r4, r0
        if (OS_TIME_TICK_GT(now, sanity_last + sanity_itvl_ticks)) {
   176e4:	f505 63f0 	add.w	r3, r5, #1920	; 0x780
   176e8:	1ac3      	subs	r3, r0, r3
   176ea:	2b00      	cmp	r3, #0
   176ec:	dce7      	bgt.n	176be <os_idle_task+0xa>
        OS_ENTER_CRITICAL(sr);
   176ee:	f001 fa05 	bl	18afc <os_arch_save_sr>
   176f2:	4607      	mov	r7, r0
        now = os_time_get();
   176f4:	f001 f98a 	bl	18a0c <os_time_get>
   176f8:	4606      	mov	r6, r0
        sticks = os_sched_wakeup_ticks(now);
   176fa:	f000 ffd7 	bl	186ac <os_sched_wakeup_ticks>
   176fe:	4604      	mov	r4, r0
        cticks = os_callout_wakeup_ticks(now);
   17700:	4630      	mov	r0, r6
   17702:	f000 f975 	bl	179f0 <os_callout_wakeup_ticks>
        iticks = min(sticks, cticks);
   17706:	42a0      	cmp	r0, r4
   17708:	bf28      	it	cs
   1770a:	4620      	movcs	r0, r4
        iticks = min(iticks, ((sanity_last + sanity_itvl_ticks) - now));
   1770c:	f505 63f0 	add.w	r3, r5, #1920	; 0x780
   17710:	1b9b      	subs	r3, r3, r6
   17712:	4298      	cmp	r0, r3
   17714:	bf28      	it	cs
   17716:	4618      	movcs	r0, r3
        if (iticks < MIN_IDLE_TICKS) {
   17718:	280b      	cmp	r0, #11
   1771a:	d9d6      	bls.n	176ca <os_idle_task+0x16>
        } else if (iticks > MAX_IDLE_TICKS) {
   1771c:	f5b0 3f96 	cmp.w	r0, #76800	; 0x12c00
   17720:	d9d4      	bls.n	176cc <os_idle_task+0x18>
            iticks = MAX_IDLE_TICKS;
   17722:	f44f 3096 	mov.w	r0, #76800	; 0x12c00
   17726:	e7d1      	b.n	176cc <os_idle_task+0x18>
   17728:	20009e2c 	.word	0x20009e2c

0001772c <os_main>:
    return (g_os_started);
}

static void
os_main(void *arg)
{
   1772c:	b508      	push	{r3, lr}
   1772e:	4603      	mov	r3, r0
    int (*fn)(int argc, char **argv) = arg;

#if !MYNEWT_VAL(SELFTEST)
    fn(0, NULL);
   17730:	2100      	movs	r1, #0
   17732:	4608      	mov	r0, r1
   17734:	4798      	blx	r3
    (void)fn;
    while (1) {
        os_eventq_run(os_eventq_dflt_get());
    }
#endif
    assert(0);
   17736:	2300      	movs	r3, #0
   17738:	461a      	mov	r2, r3
   1773a:	4619      	mov	r1, r3
   1773c:	4618      	mov	r0, r3
   1773e:	f7ff ff47 	bl	175d0 <__assert_func>
	...

00017744 <os_started>:
}
   17744:	4b01      	ldr	r3, [pc, #4]	; (1774c <os_started+0x8>)
   17746:	6818      	ldr	r0, [r3, #0]
   17748:	4770      	bx	lr
   1774a:	bf00      	nop
   1774c:	20009e28 	.word	0x20009e28

00017750 <os_init_idle_task>:
}
#endif

void
os_init_idle_task(void)
{
   17750:	b500      	push	{lr}
   17752:	b085      	sub	sp, #20
    int rc;

    rc = os_task_init(&g_idle_task, "idle", os_idle_task, NULL,
   17754:	2340      	movs	r3, #64	; 0x40
   17756:	9303      	str	r3, [sp, #12]
   17758:	4b15      	ldr	r3, [pc, #84]	; (177b0 <os_init_idle_task+0x60>)
   1775a:	9302      	str	r3, [sp, #8]
   1775c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   17760:	9301      	str	r3, [sp, #4]
   17762:	23ff      	movs	r3, #255	; 0xff
   17764:	9300      	str	r3, [sp, #0]
   17766:	2300      	movs	r3, #0
   17768:	4a12      	ldr	r2, [pc, #72]	; (177b4 <os_init_idle_task+0x64>)
   1776a:	4913      	ldr	r1, [pc, #76]	; (177b8 <os_init_idle_task+0x68>)
   1776c:	4813      	ldr	r0, [pc, #76]	; (177bc <os_init_idle_task+0x6c>)
   1776e:	f001 f88d 	bl	1888c <os_task_init>
            OS_IDLE_PRIO, OS_WAIT_FOREVER, g_idle_task_stack,
            OS_STACK_ALIGN(OS_IDLE_STACK_SIZE));
    assert(rc == 0);
   17772:	b950      	cbnz	r0, 1778a <os_init_idle_task+0x3a>

    /* Initialize sanity */
    rc = os_sanity_init();
   17774:	f000 fea2 	bl	184bc <os_sanity_init>
    assert(rc == 0);
   17778:	b968      	cbnz	r0, 17796 <os_init_idle_task+0x46>

    rc = hal_watchdog_init(MYNEWT_VAL(WATCHDOG_INTERVAL));
   1777a:	f247 5030 	movw	r0, #30000	; 0x7530
   1777e:	f7ff fed9 	bl	17534 <hal_watchdog_init>
    assert(rc == 0);
   17782:	b970      	cbnz	r0, 177a2 <os_init_idle_task+0x52>

#if MYNEWT_VAL(OS_WATCHDOG_MONITOR)
    os_cputime_timer_init(&os_wdog_monitor, os_wdog_monitor_tmo, NULL);
    os_cputime_timer_relative(&os_wdog_monitor, OS_WDOG_MONITOR_TMO);
#endif
}
   17784:	b005      	add	sp, #20
   17786:	f85d fb04 	ldr.w	pc, [sp], #4
    assert(rc == 0);
   1778a:	2300      	movs	r3, #0
   1778c:	461a      	mov	r2, r3
   1778e:	4619      	mov	r1, r3
   17790:	4618      	mov	r0, r3
   17792:	f7ff ff1d 	bl	175d0 <__assert_func>
    assert(rc == 0);
   17796:	2300      	movs	r3, #0
   17798:	461a      	mov	r2, r3
   1779a:	4619      	mov	r1, r3
   1779c:	4618      	mov	r0, r3
   1779e:	f7ff ff17 	bl	175d0 <__assert_func>
    assert(rc == 0);
   177a2:	2300      	movs	r3, #0
   177a4:	461a      	mov	r2, r3
   177a6:	4619      	mov	r1, r3
   177a8:	4618      	mov	r0, r3
   177aa:	f7ff ff11 	bl	175d0 <__assert_func>
   177ae:	bf00      	nop
   177b0:	20000f10 	.word	0x20000f10
   177b4:	000176b5 	.word	0x000176b5
   177b8:	0001f80c 	.word	0x0001f80c
   177bc:	20009d88 	.word	0x20009d88

000177c0 <os_init>:

void
os_init(int (*main_fn)(int argc, char **arg))
{
   177c0:	b510      	push	{r4, lr}
   177c2:	b084      	sub	sp, #16
   177c4:	4604      	mov	r4, r0
#if MYNEWT_VAL(RTT)
    memset(&_SEGGER_RTT, 0, sizeof(_SEGGER_RTT));
    SEGGER_RTT_Init();
#endif

    TAILQ_INIT(&g_callout_list);
   177c6:	4b24      	ldr	r3, [pc, #144]	; (17858 <os_init+0x98>)
   177c8:	2200      	movs	r2, #0
   177ca:	601a      	str	r2, [r3, #0]
   177cc:	605b      	str	r3, [r3, #4]
    STAILQ_INIT(&g_os_task_list);
   177ce:	4b23      	ldr	r3, [pc, #140]	; (1785c <os_init+0x9c>)
   177d0:	601a      	str	r2, [r3, #0]
   177d2:	605b      	str	r3, [r3, #4]
    os_eventq_init(os_eventq_dflt_get());
   177d4:	f000 faba 	bl	17d4c <os_eventq_dflt_get>
   177d8:	f000 fa0e 	bl	17bf8 <os_eventq_init>

    /* Initialize device list. */
    os_dev_reset();
   177dc:	f000 fa04 	bl	17be8 <os_dev_reset>

    err = os_arch_os_init();
   177e0:	f001 f9c6 	bl	18b70 <os_arch_os_init>
    assert(err == OS_OK);
   177e4:	bb00      	cbnz	r0, 17828 <os_init+0x68>

    if (main_fn) {
   177e6:	b18c      	cbz	r4, 1780c <os_init+0x4c>
        err = os_task_init(&g_os_main_task, "main", os_main, main_fn,
   177e8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
   177ec:	9303      	str	r3, [sp, #12]
   177ee:	4b1c      	ldr	r3, [pc, #112]	; (17860 <os_init+0xa0>)
   177f0:	9302      	str	r3, [sp, #8]
   177f2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   177f6:	9301      	str	r3, [sp, #4]
   177f8:	237f      	movs	r3, #127	; 0x7f
   177fa:	9300      	str	r3, [sp, #0]
   177fc:	4623      	mov	r3, r4
   177fe:	4a19      	ldr	r2, [pc, #100]	; (17864 <os_init+0xa4>)
   17800:	4919      	ldr	r1, [pc, #100]	; (17868 <os_init+0xa8>)
   17802:	481a      	ldr	r0, [pc, #104]	; (1786c <os_init+0xac>)
   17804:	f001 f842 	bl	1888c <os_task_init>
   17808:	b2c0      	uxtb	r0, r0
                   OS_MAIN_TASK_PRIO,
                   (OS_MAIN_TASK_TIMER_TICKS == 0) ? OS_WAIT_FOREVER : OS_MAIN_TASK_TIMER_TICKS,
                   g_os_main_stack, OS_STACK_ALIGN(OS_MAIN_STACK_SIZE));
        assert(err == 0);
   1780a:	b998      	cbnz	r0, 17834 <os_init+0x74>
    }

    /* Call bsp related OS initializations */
    hal_bsp_init();
   1780c:	f001 fe72 	bl	194f4 <hal_bsp_init>

    err = (os_error_t) os_dev_initialize_all(OS_DEV_INIT_PRIMARY);
   17810:	2001      	movs	r0, #1
   17812:	f000 f985 	bl	17b20 <os_dev_initialize_all>
   17816:	b2c0      	uxtb	r0, r0
    assert(err == OS_OK);
   17818:	b990      	cbnz	r0, 17840 <os_init+0x80>

    err = (os_error_t) os_dev_initialize_all(OS_DEV_INIT_SECONDARY);
   1781a:	2002      	movs	r0, #2
   1781c:	f000 f980 	bl	17b20 <os_dev_initialize_all>
   17820:	b2c0      	uxtb	r0, r0
    assert(err == OS_OK);
   17822:	b998      	cbnz	r0, 1784c <os_init+0x8c>
}
   17824:	b004      	add	sp, #16
   17826:	bd10      	pop	{r4, pc}
    assert(err == OS_OK);
   17828:	2300      	movs	r3, #0
   1782a:	461a      	mov	r2, r3
   1782c:	4619      	mov	r1, r3
   1782e:	4618      	mov	r0, r3
   17830:	f7ff fece 	bl	175d0 <__assert_func>
        assert(err == 0);
   17834:	2300      	movs	r3, #0
   17836:	461a      	mov	r2, r3
   17838:	4619      	mov	r1, r3
   1783a:	4618      	mov	r0, r3
   1783c:	f7ff fec8 	bl	175d0 <__assert_func>
    assert(err == OS_OK);
   17840:	2300      	movs	r3, #0
   17842:	461a      	mov	r2, r3
   17844:	4619      	mov	r1, r3
   17846:	4618      	mov	r0, r3
   17848:	f7ff fec2 	bl	175d0 <__assert_func>
    assert(err == OS_OK);
   1784c:	2300      	movs	r3, #0
   1784e:	461a      	mov	r2, r3
   17850:	4619      	mov	r1, r3
   17852:	4618      	mov	r0, r3
   17854:	f7ff febc 	bl	175d0 <__assert_func>
   17858:	20009e30 	.word	0x20009e30
   1785c:	20009e58 	.word	0x20009e58
   17860:	20001010 	.word	0x20001010
   17864:	0001772d 	.word	0x0001772d
   17868:	0001f804 	.word	0x0001f804
   1786c:	20009dd8 	.word	0x20009dd8

00017870 <os_start>:

void
os_start(void)
{
   17870:	b508      	push	{r3, lr}
#if MYNEWT_VAL(OS_SCHEDULING)
    os_error_t err;

    /* Enable the watchdog prior to starting the OS */
    hal_watchdog_enable();
   17872:	f7ff fe9b 	bl	175ac <hal_watchdog_enable>

    err = os_arch_os_start();
   17876:	f001 f9db 	bl	18c30 <os_arch_os_start>
    assert(err == OS_OK);
   1787a:	b900      	cbnz	r0, 1787e <os_start+0xe>
#else
    assert(0);
#endif
}
   1787c:	bd08      	pop	{r3, pc}
    assert(err == OS_OK);
   1787e:	2300      	movs	r3, #0
   17880:	461a      	mov	r2, r3
   17882:	4619      	mov	r1, r3
   17884:	4618      	mov	r0, r3
   17886:	f7ff fea3 	bl	175d0 <__assert_func>
	...

0001788c <os_pkg_init>:
    hal_system_reset();
}

void
os_pkg_init(void)
{
   1788c:	b508      	push	{r3, lr}
    os_error_t err;

    /* Ensure this function only gets called by sysinit. */
    SYSINIT_ASSERT_ACTIVE();
   1788e:	4b0c      	ldr	r3, [pc, #48]	; (178c0 <os_pkg_init+0x34>)
   17890:	781b      	ldrb	r3, [r3, #0]
   17892:	b14b      	cbz	r3, 178a8 <os_pkg_init+0x1c>

    err = os_dev_initialize_all(OS_DEV_INIT_KERNEL);
   17894:	2003      	movs	r0, #3
   17896:	f000 f943 	bl	17b20 <os_dev_initialize_all>
   1789a:	b2c0      	uxtb	r0, r0
    assert(err == OS_OK);
   1789c:	b948      	cbnz	r0, 178b2 <os_pkg_init+0x26>

    os_mempool_module_init();
   1789e:	f000 fc25 	bl	180ec <os_mempool_module_init>
    os_msys_init();
   178a2:	f000 fcad 	bl	18200 <os_msys_init>
}
   178a6:	bd08      	pop	{r3, pc}
    SYSINIT_ASSERT_ACTIVE();
   178a8:	461a      	mov	r2, r3
   178aa:	4619      	mov	r1, r3
   178ac:	4618      	mov	r0, r3
   178ae:	f7ff fe8f 	bl	175d0 <__assert_func>
    assert(err == OS_OK);
   178b2:	2300      	movs	r3, #0
   178b4:	461a      	mov	r2, r3
   178b6:	4619      	mov	r1, r3
   178b8:	4618      	mov	r0, r3
   178ba:	f7ff fe89 	bl	175d0 <__assert_func>
   178be:	bf00      	nop
   178c0:	20009d5c 	.word	0x20009d5c

000178c4 <os_callout_init>:

struct os_callout_list g_callout_list;

void os_callout_init(struct os_callout *c, struct os_eventq *evq,
                     os_event_fn *ev_cb, void *ev_arg)
{
   178c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   178c6:	4604      	mov	r4, r0
   178c8:	460d      	mov	r5, r1
   178ca:	4617      	mov	r7, r2
   178cc:	461e      	mov	r6, r3
    os_trace_api_u32x2(OS_TRACE_ID_CALLOUT_INIT, (uint32_t)c, (uint32_t)evq);

    memset(c, 0, sizeof(*c));
   178ce:	2220      	movs	r2, #32
   178d0:	2100      	movs	r1, #0
   178d2:	f001 fa80 	bl	18dd6 <memset>
    c->c_ev.ev_cb = ev_cb;
   178d6:	6067      	str	r7, [r4, #4]
    c->c_ev.ev_arg = ev_arg;
   178d8:	60a6      	str	r6, [r4, #8]
    c->c_evq = evq;
   178da:	6125      	str	r5, [r4, #16]

    os_trace_api_ret(OS_TRACE_ID_CALLOUT_INIT);
}
   178dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

000178e0 <os_callout_stop>:

void
os_callout_stop(struct os_callout *c)
{
   178e0:	b538      	push	{r3, r4, r5, lr}
   178e2:	4604      	mov	r4, r0
    os_sr_t sr;

    os_trace_api_u32(OS_TRACE_ID_CALLOUT_STOP, (uint32_t)c);

    OS_ENTER_CRITICAL(sr);
   178e4:	f001 f90a 	bl	18afc <os_arch_save_sr>
   178e8:	4605      	mov	r5, r0
 * @return 1 if queued, 0 if not queued.
 */
static inline int
os_callout_queued(struct os_callout *c)
{
    return c->c_next.tqe_prev != NULL;
   178ea:	69e3      	ldr	r3, [r4, #28]

    if (os_callout_queued(c)) {
   178ec:	b13b      	cbz	r3, 178fe <os_callout_stop+0x1e>
        TAILQ_REMOVE(&g_callout_list, c, c_next);
   178ee:	69a2      	ldr	r2, [r4, #24]
   178f0:	b172      	cbz	r2, 17910 <os_callout_stop+0x30>
   178f2:	61d3      	str	r3, [r2, #28]
   178f4:	69e3      	ldr	r3, [r4, #28]
   178f6:	69a2      	ldr	r2, [r4, #24]
   178f8:	601a      	str	r2, [r3, #0]
        c->c_next.tqe_prev = NULL;
   178fa:	2300      	movs	r3, #0
   178fc:	61e3      	str	r3, [r4, #28]
    }

    if (c->c_evq) {
   178fe:	6920      	ldr	r0, [r4, #16]
   17900:	b110      	cbz	r0, 17908 <os_callout_stop+0x28>
        os_eventq_remove(c->c_evq, &c->c_ev);
   17902:	4621      	mov	r1, r4
   17904:	f000 fa02 	bl	17d0c <os_eventq_remove>
    }

    OS_EXIT_CRITICAL(sr);
   17908:	4628      	mov	r0, r5
   1790a:	f001 f8fd 	bl	18b08 <os_arch_restore_sr>

    os_trace_api_ret(OS_TRACE_ID_CALLOUT_STOP);
}
   1790e:	bd38      	pop	{r3, r4, r5, pc}
        TAILQ_REMOVE(&g_callout_list, c, c_next);
   17910:	4a01      	ldr	r2, [pc, #4]	; (17918 <os_callout_stop+0x38>)
   17912:	6053      	str	r3, [r2, #4]
   17914:	e7ee      	b.n	178f4 <os_callout_stop+0x14>
   17916:	bf00      	nop
   17918:	20009e30 	.word	0x20009e30

0001791c <os_callout_reset>:

int
os_callout_reset(struct os_callout *c, os_time_t ticks)
{
   1791c:	b570      	push	{r4, r5, r6, lr}
    struct os_callout *entry;
    os_sr_t sr;
    int ret;

    /* Ensure this callout has been initialized. */
    assert(c->c_evq != NULL);
   1791e:	6903      	ldr	r3, [r0, #16]
   17920:	b1c3      	cbz	r3, 17954 <os_callout_reset+0x38>
   17922:	4605      	mov	r5, r0
   17924:	460c      	mov	r4, r1

    os_trace_api_u32x2(OS_TRACE_ID_CALLOUT_RESET, (uint32_t)c, (uint32_t)ticks);

    if (ticks > INT32_MAX) {
   17926:	2900      	cmp	r1, #0
   17928:	db2f      	blt.n	1798a <os_callout_reset+0x6e>
        ret = OS_EINVAL;
        goto err;
    }

    OS_ENTER_CRITICAL(sr);
   1792a:	f001 f8e7 	bl	18afc <os_arch_save_sr>
   1792e:	4606      	mov	r6, r0

    os_callout_stop(c);
   17930:	4628      	mov	r0, r5
   17932:	f7ff ffd5 	bl	178e0 <os_callout_stop>

    if (ticks == 0) {
   17936:	b904      	cbnz	r4, 1793a <os_callout_reset+0x1e>
        ticks = 1;
   17938:	2401      	movs	r4, #1
    }

    c->c_ticks = os_time_get() + ticks;
   1793a:	f001 f867 	bl	18a0c <os_time_get>
   1793e:	4420      	add	r0, r4
   17940:	6168      	str	r0, [r5, #20]

    entry = NULL;
    TAILQ_FOREACH(entry, &g_callout_list, c_next) {
   17942:	4b13      	ldr	r3, [pc, #76]	; (17990 <os_callout_reset+0x74>)
   17944:	681b      	ldr	r3, [r3, #0]
   17946:	b153      	cbz	r3, 1795e <os_callout_reset+0x42>
        if (OS_TIME_TICK_LT(c->c_ticks, entry->c_ticks)) {
   17948:	695a      	ldr	r2, [r3, #20]
   1794a:	1a82      	subs	r2, r0, r2
   1794c:	2a00      	cmp	r2, #0
   1794e:	db06      	blt.n	1795e <os_callout_reset+0x42>
    TAILQ_FOREACH(entry, &g_callout_list, c_next) {
   17950:	699b      	ldr	r3, [r3, #24]
   17952:	e7f8      	b.n	17946 <os_callout_reset+0x2a>
    assert(c->c_evq != NULL);
   17954:	461a      	mov	r2, r3
   17956:	4619      	mov	r1, r3
   17958:	4618      	mov	r0, r3
   1795a:	f7ff fe39 	bl	175d0 <__assert_func>
            break;
        }
    }

    if (entry) {
   1795e:	b15b      	cbz	r3, 17978 <os_callout_reset+0x5c>
        TAILQ_INSERT_BEFORE(entry, c, c_next);
   17960:	69da      	ldr	r2, [r3, #28]
   17962:	61ea      	str	r2, [r5, #28]
   17964:	61ab      	str	r3, [r5, #24]
   17966:	69da      	ldr	r2, [r3, #28]
   17968:	6015      	str	r5, [r2, #0]
   1796a:	3518      	adds	r5, #24
   1796c:	61dd      	str	r5, [r3, #28]
    } else {
        TAILQ_INSERT_TAIL(&g_callout_list, c, c_next);
    }

    OS_EXIT_CRITICAL(sr);
   1796e:	4630      	mov	r0, r6
   17970:	f001 f8ca 	bl	18b08 <os_arch_restore_sr>

    ret = OS_OK;
   17974:	2000      	movs	r0, #0

err:
    os_trace_api_ret_u32(OS_TRACE_ID_CALLOUT_RESET, (uint32_t)ret);
    return ret;
}
   17976:	bd70      	pop	{r4, r5, r6, pc}
        TAILQ_INSERT_TAIL(&g_callout_list, c, c_next);
   17978:	2300      	movs	r3, #0
   1797a:	61ab      	str	r3, [r5, #24]
   1797c:	4b04      	ldr	r3, [pc, #16]	; (17990 <os_callout_reset+0x74>)
   1797e:	685a      	ldr	r2, [r3, #4]
   17980:	61ea      	str	r2, [r5, #28]
   17982:	6015      	str	r5, [r2, #0]
   17984:	3518      	adds	r5, #24
   17986:	605d      	str	r5, [r3, #4]
   17988:	e7f1      	b.n	1796e <os_callout_reset+0x52>
        ret = OS_EINVAL;
   1798a:	2002      	movs	r0, #2
    return ret;
   1798c:	e7f3      	b.n	17976 <os_callout_reset+0x5a>
   1798e:	bf00      	nop
   17990:	20009e30 	.word	0x20009e30

00017994 <os_callout_tick>:
 * to run, it posts an event for each callout that's ready to run,
 * to the event queue provided to os_callout_init().
 */
void
os_callout_tick(void)
{
   17994:	b538      	push	{r3, r4, r5, lr}
    struct os_callout *c;
    uint32_t now;

    os_trace_api_void(OS_TRACE_ID_CALLOUT_TICK);

    now = os_time_get();
   17996:	f001 f839 	bl	18a0c <os_time_get>
   1799a:	4605      	mov	r5, r0
   1799c:	e00f      	b.n	179be <os_callout_tick+0x2a>
    while (1) {
        OS_ENTER_CRITICAL(sr);
        c = TAILQ_FIRST(&g_callout_list);
        if (c) {
            if (OS_TIME_TICK_GEQ(now, c->c_ticks)) {
                TAILQ_REMOVE(&g_callout_list, c, c_next);
   1799e:	69e2      	ldr	r2, [r4, #28]
   179a0:	4b12      	ldr	r3, [pc, #72]	; (179ec <os_callout_tick+0x58>)
   179a2:	605a      	str	r2, [r3, #4]
   179a4:	69e3      	ldr	r3, [r4, #28]
   179a6:	69a2      	ldr	r2, [r4, #24]
   179a8:	601a      	str	r2, [r3, #0]
                c->c_next.tqe_prev = NULL;
   179aa:	2300      	movs	r3, #0
   179ac:	61e3      	str	r3, [r4, #28]
            } else {
                c = NULL;
            }
        }
        OS_EXIT_CRITICAL(sr);
   179ae:	f001 f8ab 	bl	18b08 <os_arch_restore_sr>

        if (c) {
   179b2:	b1d4      	cbz	r4, 179ea <os_callout_tick+0x56>
            if (c->c_evq) {
   179b4:	6920      	ldr	r0, [r4, #16]
   179b6:	b9a0      	cbnz	r0, 179e2 <os_callout_tick+0x4e>
                os_eventq_put(c->c_evq, &c->c_ev);
            } else {
                c->c_ev.ev_cb(&c->c_ev);
   179b8:	6863      	ldr	r3, [r4, #4]
   179ba:	4620      	mov	r0, r4
   179bc:	4798      	blx	r3
        OS_ENTER_CRITICAL(sr);
   179be:	f001 f89d 	bl	18afc <os_arch_save_sr>
        c = TAILQ_FIRST(&g_callout_list);
   179c2:	4b0a      	ldr	r3, [pc, #40]	; (179ec <os_callout_tick+0x58>)
   179c4:	681c      	ldr	r4, [r3, #0]
        if (c) {
   179c6:	2c00      	cmp	r4, #0
   179c8:	d0f1      	beq.n	179ae <os_callout_tick+0x1a>
            if (OS_TIME_TICK_GEQ(now, c->c_ticks)) {
   179ca:	6963      	ldr	r3, [r4, #20]
   179cc:	1aeb      	subs	r3, r5, r3
   179ce:	2b00      	cmp	r3, #0
   179d0:	db05      	blt.n	179de <os_callout_tick+0x4a>
                TAILQ_REMOVE(&g_callout_list, c, c_next);
   179d2:	69a3      	ldr	r3, [r4, #24]
   179d4:	2b00      	cmp	r3, #0
   179d6:	d0e2      	beq.n	1799e <os_callout_tick+0xa>
   179d8:	69e2      	ldr	r2, [r4, #28]
   179da:	61da      	str	r2, [r3, #28]
   179dc:	e7e2      	b.n	179a4 <os_callout_tick+0x10>
                c = NULL;
   179de:	2400      	movs	r4, #0
   179e0:	e7e5      	b.n	179ae <os_callout_tick+0x1a>
                os_eventq_put(c->c_evq, &c->c_ev);
   179e2:	4621      	mov	r1, r4
   179e4:	f000 f915 	bl	17c12 <os_eventq_put>
   179e8:	e7e9      	b.n	179be <os_callout_tick+0x2a>
            break;
        }
    }

    os_trace_api_ret(OS_TRACE_ID_CALLOUT_TICK);
}
   179ea:	bd38      	pop	{r3, r4, r5, pc}
   179ec:	20009e30 	.word	0x20009e30

000179f0 <os_callout_wakeup_ticks>:
 *
 * @return Number of ticks to first pending callout
 */
os_time_t
os_callout_wakeup_ticks(os_time_t now)
{
   179f0:	b510      	push	{r4, lr}
   179f2:	4604      	mov	r4, r0
    os_time_t rt;
    struct os_callout *c;

    OS_ASSERT_CRITICAL();
   179f4:	f001 f88b 	bl	18b0e <os_arch_in_critical>
   179f8:	b130      	cbz	r0, 17a08 <os_callout_wakeup_ticks+0x18>

    c = TAILQ_FIRST(&g_callout_list);
   179fa:	4b09      	ldr	r3, [pc, #36]	; (17a20 <os_callout_wakeup_ticks+0x30>)
   179fc:	681b      	ldr	r3, [r3, #0]
    if (c != NULL) {
   179fe:	b15b      	cbz	r3, 17a18 <os_callout_wakeup_ticks+0x28>
        if (OS_TIME_TICK_GEQ(c->c_ticks, now)) {
   17a00:	6958      	ldr	r0, [r3, #20]
   17a02:	1b00      	subs	r0, r0, r4
   17a04:	d406      	bmi.n	17a14 <os_callout_wakeup_ticks+0x24>
    } else {
        rt = OS_TIMEOUT_NEVER;
    }

    return (rt);
}
   17a06:	bd10      	pop	{r4, pc}
    OS_ASSERT_CRITICAL();
   17a08:	2300      	movs	r3, #0
   17a0a:	461a      	mov	r2, r3
   17a0c:	4619      	mov	r1, r3
   17a0e:	4618      	mov	r0, r3
   17a10:	f7ff fdde 	bl	175d0 <__assert_func>
            rt = 0;     /* callout time is in the past */
   17a14:	2000      	movs	r0, #0
   17a16:	e7f6      	b.n	17a06 <os_callout_wakeup_ticks+0x16>
        rt = OS_TIMEOUT_NEVER;
   17a18:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    return (rt);
   17a1c:	e7f3      	b.n	17a06 <os_callout_wakeup_ticks+0x16>
   17a1e:	bf00      	nop
   17a20:	20009e30 	.word	0x20009e30

00017a24 <os_cputime_init>:
struct os_cputime_data g_os_cputime;
#endif

int
os_cputime_init(uint32_t clock_freq)
{
   17a24:	b508      	push	{r3, lr}

    /* Set the ticks per microsecond. */
#if defined(OS_CPUTIME_FREQ_HIGH)
    g_os_cputime.ticks_per_usec = clock_freq / 1000000U;
#endif
    rc = hal_timer_config(MYNEWT_VAL(OS_CPUTIME_TIMER_NUM), clock_freq);
   17a26:	4601      	mov	r1, r0
   17a28:	2000      	movs	r0, #0
   17a2a:	f002 f84d 	bl	19ac8 <hal_timer_config>
    return rc;
}
   17a2e:	bd08      	pop	{r3, pc}

00017a30 <os_cputime_get32>:
    hal_timer_stop(timer);
}

uint32_t
os_cputime_get32(void)
{
   17a30:	b508      	push	{r3, lr}
    uint32_t cpu_time;

    cpu_time = hal_timer_read(MYNEWT_VAL(OS_CPUTIME_TIMER_NUM));
   17a32:	2000      	movs	r0, #0
   17a34:	f002 f8c4 	bl	19bc0 <hal_timer_read>
    return cpu_time;
}
   17a38:	bd08      	pop	{r3, pc}
	...

00017a3c <os_dev_add>:
 *
 * @return 0 on success, non-zero on failure.
 */
static int
os_dev_add(struct os_dev *dev)
{
   17a3c:	b430      	push	{r4, r5}
    struct os_dev *cur_dev;
    struct os_dev *prev_dev;

    /* If no devices present, insert into head */
    if (STAILQ_FIRST(&g_os_dev_list) == NULL) {
   17a3e:	4b15      	ldr	r3, [pc, #84]	; (17a94 <os_dev_add+0x58>)
   17a40:	681d      	ldr	r5, [r3, #0]
   17a42:	b115      	cbz	r5, 17a4a <os_dev_add+0xe>
    /* Add devices to the list, sorted first by stage, then by
     * priority.  Keep sorted in this order for initialization
     * stage.
     */
    prev_dev = NULL;
    STAILQ_FOREACH(cur_dev, &g_os_dev_list, od_next) {
   17a44:	462b      	mov	r3, r5
    prev_dev = NULL;
   17a46:	2400      	movs	r4, #0
   17a48:	e008      	b.n	17a5c <os_dev_add+0x20>
        STAILQ_INSERT_HEAD(&g_os_dev_list, dev, od_next);
   17a4a:	4603      	mov	r3, r0
   17a4c:	f843 5f20 	str.w	r5, [r3, #32]!
   17a50:	4a10      	ldr	r2, [pc, #64]	; (17a94 <os_dev_add+0x58>)
   17a52:	6053      	str	r3, [r2, #4]
   17a54:	6010      	str	r0, [r2, #0]
        return (0);
   17a56:	e010      	b.n	17a7a <os_dev_add+0x3e>
        if (dev->od_stage < cur_dev->od_stage ||
            ((dev->od_stage == cur_dev->od_stage) &&
             (dev->od_priority < cur_dev->od_priority))) {
            break;
        }
        prev_dev = cur_dev;
   17a58:	461c      	mov	r4, r3
    STAILQ_FOREACH(cur_dev, &g_os_dev_list, od_next) {
   17a5a:	6a1b      	ldr	r3, [r3, #32]
   17a5c:	b143      	cbz	r3, 17a70 <os_dev_add+0x34>
        if (dev->od_stage < cur_dev->od_stage ||
   17a5e:	7e01      	ldrb	r1, [r0, #24]
   17a60:	7e1a      	ldrb	r2, [r3, #24]
   17a62:	4291      	cmp	r1, r2
   17a64:	d304      	bcc.n	17a70 <os_dev_add+0x34>
   17a66:	d1f7      	bne.n	17a58 <os_dev_add+0x1c>
             (dev->od_priority < cur_dev->od_priority))) {
   17a68:	7e41      	ldrb	r1, [r0, #25]
   17a6a:	7e5a      	ldrb	r2, [r3, #25]
            ((dev->od_stage == cur_dev->od_stage) &&
   17a6c:	4291      	cmp	r1, r2
   17a6e:	d2f3      	bcs.n	17a58 <os_dev_add+0x1c>
    }

    if (prev_dev) {
   17a70:	b15c      	cbz	r4, 17a8a <os_dev_add+0x4e>
        STAILQ_INSERT_AFTER(&g_os_dev_list, prev_dev, dev, od_next);
   17a72:	6a23      	ldr	r3, [r4, #32]
   17a74:	6203      	str	r3, [r0, #32]
   17a76:	b11b      	cbz	r3, 17a80 <os_dev_add+0x44>
   17a78:	6220      	str	r0, [r4, #32]
    } else {
        STAILQ_INSERT_HEAD(&g_os_dev_list, dev, od_next);
    }

    return (0);
}
   17a7a:	2000      	movs	r0, #0
   17a7c:	bc30      	pop	{r4, r5}
   17a7e:	4770      	bx	lr
        STAILQ_INSERT_AFTER(&g_os_dev_list, prev_dev, dev, od_next);
   17a80:	f100 0320 	add.w	r3, r0, #32
   17a84:	4a03      	ldr	r2, [pc, #12]	; (17a94 <os_dev_add+0x58>)
   17a86:	6053      	str	r3, [r2, #4]
   17a88:	e7f6      	b.n	17a78 <os_dev_add+0x3c>
        STAILQ_INSERT_HEAD(&g_os_dev_list, dev, od_next);
   17a8a:	6205      	str	r5, [r0, #32]
   17a8c:	4b01      	ldr	r3, [pc, #4]	; (17a94 <os_dev_add+0x58>)
   17a8e:	6018      	str	r0, [r3, #0]
   17a90:	e7f3      	b.n	17a7a <os_dev_add+0x3e>
   17a92:	bf00      	nop
   17a94:	20005010 	.word	0x20005010

00017a98 <os_dev_initialize>:
 *
 * @return 0 on success, non-zero on failure.
 */
static int
os_dev_initialize(struct os_dev *dev)
{
   17a98:	b510      	push	{r4, lr}
   17a9a:	4604      	mov	r4, r0
    int rc;

    rc = dev->od_init(dev, dev->od_init_arg);
   17a9c:	6903      	ldr	r3, [r0, #16]
   17a9e:	6941      	ldr	r1, [r0, #20]
   17aa0:	4798      	blx	r3
    if (rc != 0) {
   17aa2:	4603      	mov	r3, r0
   17aa4:	b128      	cbz	r0, 17ab2 <os_dev_initialize+0x1a>
        if (dev->od_flags & OS_DEV_F_INIT_CRITICAL) {
   17aa6:	7ee2      	ldrb	r2, [r4, #27]
   17aa8:	f012 0f08 	tst.w	r2, #8
   17aac:	d105      	bne.n	17aba <os_dev_initialize+0x22>
            goto err;
        }
    } else {
        dev->od_flags |= OS_DEV_F_STATUS_READY;
    }
    return 0;
   17aae:	2300      	movs	r3, #0
   17ab0:	e003      	b.n	17aba <os_dev_initialize+0x22>
        dev->od_flags |= OS_DEV_F_STATUS_READY;
   17ab2:	7ee2      	ldrb	r2, [r4, #27]
   17ab4:	f042 0201 	orr.w	r2, r2, #1
   17ab8:	76e2      	strb	r2, [r4, #27]
err:
    return rc;
}
   17aba:	4618      	mov	r0, r3
   17abc:	bd10      	pop	{r4, pc}

00017abe <os_dev_init>:
    dev->od_name = name;
   17abe:	61c1      	str	r1, [r0, #28]
    dev->od_stage = stage;
   17ac0:	7602      	strb	r2, [r0, #24]
    dev->od_priority = priority;
   17ac2:	7643      	strb	r3, [r0, #25]
    dev->od_flags = 0;
   17ac4:	2300      	movs	r3, #0
   17ac6:	76c3      	strb	r3, [r0, #27]
    dev->od_open_ref = 0;
   17ac8:	7683      	strb	r3, [r0, #26]
    dev->od_init = od_init;
   17aca:	9a00      	ldr	r2, [sp, #0]
   17acc:	6102      	str	r2, [r0, #16]
    dev->od_init_arg = arg;
   17ace:	9a01      	ldr	r2, [sp, #4]
   17ad0:	6142      	str	r2, [r0, #20]
    memset(&dev->od_handlers, 0, sizeof(dev->od_handlers));
   17ad2:	6003      	str	r3, [r0, #0]
   17ad4:	6043      	str	r3, [r0, #4]
   17ad6:	6083      	str	r3, [r0, #8]
   17ad8:	60c3      	str	r3, [r0, #12]
}
   17ada:	4618      	mov	r0, r3
   17adc:	4770      	bx	lr
	...

00017ae0 <os_dev_create>:

int
os_dev_create(struct os_dev *dev, const char *name, uint8_t stage,
        uint8_t priority, os_dev_init_func_t od_init, void *arg)
{
   17ae0:	b530      	push	{r4, r5, lr}
   17ae2:	b083      	sub	sp, #12
   17ae4:	4605      	mov	r5, r0
    int rc;

    rc = os_dev_init(dev, name, stage, priority, od_init, arg);
   17ae6:	9c07      	ldr	r4, [sp, #28]
   17ae8:	9401      	str	r4, [sp, #4]
   17aea:	9c06      	ldr	r4, [sp, #24]
   17aec:	9400      	str	r4, [sp, #0]
   17aee:	f7ff ffe6 	bl	17abe <os_dev_init>
    if (rc != 0) {
   17af2:	4603      	mov	r3, r0
   17af4:	b110      	cbz	r0, 17afc <os_dev_create+0x1c>
    if (g_os_started) {
        rc = os_dev_initialize(dev);
    }
err:
    return (rc);
}
   17af6:	4618      	mov	r0, r3
   17af8:	b003      	add	sp, #12
   17afa:	bd30      	pop	{r4, r5, pc}
    rc = os_dev_add(dev);
   17afc:	4628      	mov	r0, r5
   17afe:	f7ff ff9d 	bl	17a3c <os_dev_add>
    if (rc != 0) {
   17b02:	4603      	mov	r3, r0
   17b04:	2800      	cmp	r0, #0
   17b06:	d1f6      	bne.n	17af6 <os_dev_create+0x16>
    if (g_os_started) {
   17b08:	4a04      	ldr	r2, [pc, #16]	; (17b1c <os_dev_create+0x3c>)
   17b0a:	6812      	ldr	r2, [r2, #0]
   17b0c:	2a00      	cmp	r2, #0
   17b0e:	d0f2      	beq.n	17af6 <os_dev_create+0x16>
        rc = os_dev_initialize(dev);
   17b10:	4628      	mov	r0, r5
   17b12:	f7ff ffc1 	bl	17a98 <os_dev_initialize>
   17b16:	4603      	mov	r3, r0
    return (rc);
   17b18:	e7ed      	b.n	17af6 <os_dev_create+0x16>
   17b1a:	bf00      	nop
   17b1c:	20009e28 	.word	0x20009e28

00017b20 <os_dev_initialize_all>:

int
os_dev_initialize_all(uint8_t stage)
{
   17b20:	b538      	push	{r3, r4, r5, lr}
   17b22:	4605      	mov	r5, r0
    struct os_dev *dev;
    int rc = 0;

    STAILQ_FOREACH(dev, &g_os_dev_list, od_next) {
   17b24:	4b08      	ldr	r3, [pc, #32]	; (17b48 <os_dev_initialize_all+0x28>)
   17b26:	681c      	ldr	r4, [r3, #0]
    int rc = 0;
   17b28:	2200      	movs	r2, #0
    STAILQ_FOREACH(dev, &g_os_dev_list, od_next) {
   17b2a:	e000      	b.n	17b2e <os_dev_initialize_all+0xe>
   17b2c:	6a24      	ldr	r4, [r4, #32]
   17b2e:	b144      	cbz	r4, 17b42 <os_dev_initialize_all+0x22>
        if (dev->od_stage == stage) {
   17b30:	7e23      	ldrb	r3, [r4, #24]
   17b32:	42ab      	cmp	r3, r5
   17b34:	d1fa      	bne.n	17b2c <os_dev_initialize_all+0xc>
            rc = os_dev_initialize(dev);
   17b36:	4620      	mov	r0, r4
   17b38:	f7ff ffae 	bl	17a98 <os_dev_initialize>
            if (rc) {
   17b3c:	4602      	mov	r2, r0
   17b3e:	2800      	cmp	r0, #0
   17b40:	d0f4      	beq.n	17b2c <os_dev_initialize_all+0xc>
            }
        }
    }

    return (rc);
}
   17b42:	4610      	mov	r0, r2
   17b44:	bd38      	pop	{r3, r4, r5, pc}
   17b46:	bf00      	nop
   17b48:	20005010 	.word	0x20005010

00017b4c <os_dev_lookup>:
    return (rc);
}

struct os_dev *
os_dev_lookup(const char *name)
{
   17b4c:	b538      	push	{r3, r4, r5, lr}
   17b4e:	4605      	mov	r5, r0
    struct os_dev *dev;

    dev = NULL;
    STAILQ_FOREACH(dev, &g_os_dev_list, od_next) {
   17b50:	4b05      	ldr	r3, [pc, #20]	; (17b68 <os_dev_lookup+0x1c>)
   17b52:	681c      	ldr	r4, [r3, #0]
   17b54:	b134      	cbz	r4, 17b64 <os_dev_lookup+0x18>
        if (!strcmp(dev->od_name, name)) {
   17b56:	4629      	mov	r1, r5
   17b58:	69e0      	ldr	r0, [r4, #28]
   17b5a:	f001 f958 	bl	18e0e <strcmp>
   17b5e:	b108      	cbz	r0, 17b64 <os_dev_lookup+0x18>
    STAILQ_FOREACH(dev, &g_os_dev_list, od_next) {
   17b60:	6a24      	ldr	r4, [r4, #32]
   17b62:	e7f7      	b.n	17b54 <os_dev_lookup+0x8>
            break;
        }
    }
    return (dev);
}
   17b64:	4620      	mov	r0, r4
   17b66:	bd38      	pop	{r3, r4, r5, pc}
   17b68:	20005010 	.word	0x20005010

00017b6c <os_dev_open>:

struct os_dev *
os_dev_open(const char *devname, uint32_t timo, void *arg)
{
   17b6c:	b570      	push	{r4, r5, r6, lr}
   17b6e:	460d      	mov	r5, r1
   17b70:	4616      	mov	r6, r2
    struct os_dev *dev;
    os_sr_t sr;
    int rc;

    dev = os_dev_lookup(devname);
   17b72:	f7ff ffeb 	bl	17b4c <os_dev_lookup>
    if (dev == NULL) {
   17b76:	4604      	mov	r4, r0
   17b78:	b1a0      	cbz	r0, 17ba4 <os_dev_open+0x38>
        return (NULL);
    }

    /* Device is not ready to be opened. */
    if ((dev->od_flags & OS_DEV_F_STATUS_READY) == 0) {
   17b7a:	7ec3      	ldrb	r3, [r0, #27]
   17b7c:	f013 0f01 	tst.w	r3, #1
   17b80:	d012      	beq.n	17ba8 <os_dev_open+0x3c>
        return (NULL);
    }

    if (dev->od_handlers.od_open) {
   17b82:	6803      	ldr	r3, [r0, #0]
   17b84:	b11b      	cbz	r3, 17b8e <os_dev_open+0x22>
        rc = dev->od_handlers.od_open(dev, timo, arg);
   17b86:	4632      	mov	r2, r6
   17b88:	4629      	mov	r1, r5
   17b8a:	4798      	blx	r3
        if (rc != 0) {
   17b8c:	b970      	cbnz	r0, 17bac <os_dev_open+0x40>
            goto err;
        }
    }

    OS_ENTER_CRITICAL(sr);
   17b8e:	f000 ffb5 	bl	18afc <os_arch_save_sr>
    ++dev->od_open_ref;
   17b92:	7ea3      	ldrb	r3, [r4, #26]
   17b94:	3301      	adds	r3, #1
   17b96:	76a3      	strb	r3, [r4, #26]
    dev->od_flags |= OS_DEV_F_STATUS_OPEN;
   17b98:	7ee3      	ldrb	r3, [r4, #27]
   17b9a:	f043 0302 	orr.w	r3, r3, #2
   17b9e:	76e3      	strb	r3, [r4, #27]
    OS_EXIT_CRITICAL(sr);
   17ba0:	f000 ffb2 	bl	18b08 <os_arch_restore_sr>

    return (dev);
err:
    return (NULL);
}
   17ba4:	4620      	mov	r0, r4
   17ba6:	bd70      	pop	{r4, r5, r6, pc}
        return (NULL);
   17ba8:	2400      	movs	r4, #0
   17baa:	e7fb      	b.n	17ba4 <os_dev_open+0x38>
    return (NULL);
   17bac:	2400      	movs	r4, #0
   17bae:	e7f9      	b.n	17ba4 <os_dev_open+0x38>

00017bb0 <os_dev_close>:
os_dev_close(struct os_dev *dev)
{
    int rc;
    os_sr_t sr;

    if (dev == NULL) {
   17bb0:	b1b0      	cbz	r0, 17be0 <os_dev_close+0x30>
{
   17bb2:	b510      	push	{r4, lr}
   17bb4:	4604      	mov	r4, r0
        rc = OS_EINVAL;
        goto err;
    }

    if (dev->od_handlers.od_close) {
   17bb6:	68c3      	ldr	r3, [r0, #12]
   17bb8:	b113      	cbz	r3, 17bc0 <os_dev_close+0x10>
        rc = dev->od_handlers.od_close(dev);
   17bba:	4798      	blx	r3
        if (rc != 0) {
   17bbc:	4603      	mov	r3, r0
   17bbe:	b968      	cbnz	r0, 17bdc <os_dev_close+0x2c>
            goto err;
        }
    }

    OS_ENTER_CRITICAL(sr);
   17bc0:	f000 ff9c 	bl	18afc <os_arch_save_sr>
    if (--dev->od_open_ref == 0) {
   17bc4:	7ea3      	ldrb	r3, [r4, #26]
   17bc6:	3b01      	subs	r3, #1
   17bc8:	b2db      	uxtb	r3, r3
   17bca:	76a3      	strb	r3, [r4, #26]
   17bcc:	b91b      	cbnz	r3, 17bd6 <os_dev_close+0x26>
        dev->od_flags &= ~(OS_DEV_F_STATUS_OPEN | OS_DEV_F_STATUS_SUSPENDED);
   17bce:	7ee3      	ldrb	r3, [r4, #27]
   17bd0:	f023 0306 	bic.w	r3, r3, #6
   17bd4:	76e3      	strb	r3, [r4, #27]
    }
    OS_EXIT_CRITICAL(sr);
   17bd6:	f000 ff97 	bl	18b08 <os_arch_restore_sr>

    return (0);
   17bda:	2300      	movs	r3, #0
err:
    return (rc);
}
   17bdc:	4618      	mov	r0, r3
   17bde:	bd10      	pop	{r4, pc}
        rc = OS_EINVAL;
   17be0:	2302      	movs	r3, #2
}
   17be2:	4618      	mov	r0, r3
   17be4:	4770      	bx	lr
	...

00017be8 <os_dev_reset>:
}

void
os_dev_reset(void)
{
    STAILQ_INIT(&g_os_dev_list);
   17be8:	4b02      	ldr	r3, [pc, #8]	; (17bf4 <os_dev_reset+0xc>)
   17bea:	2200      	movs	r2, #0
   17bec:	601a      	str	r2, [r3, #0]
   17bee:	605b      	str	r3, [r3, #4]
}
   17bf0:	4770      	bx	lr
   17bf2:	bf00      	nop
   17bf4:	20005010 	.word	0x20005010

00017bf8 <os_eventq_init>:
static struct os_eventq os_eventq_main;

void
os_eventq_init(struct os_eventq *evq)
{
    memset(evq, 0, sizeof(*evq));
   17bf8:	2200      	movs	r2, #0
   17bfa:	6002      	str	r2, [r0, #0]
   17bfc:	6042      	str	r2, [r0, #4]
    STAILQ_INIT(&evq->evq_list);
   17bfe:	4603      	mov	r3, r0
   17c00:	f843 2f08 	str.w	r2, [r3, #8]!
   17c04:	60c3      	str	r3, [r0, #12]
}
   17c06:	4770      	bx	lr

00017c08 <os_eventq_inited>:

int
os_eventq_inited(const struct os_eventq *evq)
{
    return evq->evq_list.stqh_last != NULL;
   17c08:	68c0      	ldr	r0, [r0, #12]
}
   17c0a:	3000      	adds	r0, #0
   17c0c:	bf18      	it	ne
   17c0e:	2001      	movne	r0, #1
   17c10:	4770      	bx	lr

00017c12 <os_eventq_put>:

void
os_eventq_put(struct os_eventq *evq, struct os_event *ev)
{
   17c12:	b570      	push	{r4, r5, r6, lr}
    int resched;
    os_sr_t sr;

    assert(evq != NULL && os_eventq_inited(evq));
   17c14:	b1f0      	cbz	r0, 17c54 <os_eventq_put+0x42>
   17c16:	460c      	mov	r4, r1
   17c18:	4605      	mov	r5, r0
   17c1a:	f7ff fff5 	bl	17c08 <os_eventq_inited>
   17c1e:	b1c8      	cbz	r0, 17c54 <os_eventq_put+0x42>

    os_trace_api_u32x2(OS_TRACE_ID_EVENTQ_PUT, (uint32_t)evq, (uint32_t)ev);

    OS_ENTER_CRITICAL(sr);
   17c20:	f000 ff6c 	bl	18afc <os_arch_save_sr>
   17c24:	4606      	mov	r6, r0

    /* Do not queue if already queued */
    if (OS_EVENT_QUEUED(ev)) {
   17c26:	7823      	ldrb	r3, [r4, #0]
   17c28:	b9d3      	cbnz	r3, 17c60 <os_eventq_put+0x4e>
        os_trace_api_ret(OS_TRACE_ID_EVENTQ_PUT);
        return;
    }

    /* Queue the event */
    ev->ev_queued = 1;
   17c2a:	2301      	movs	r3, #1
   17c2c:	7023      	strb	r3, [r4, #0]
    STAILQ_INSERT_TAIL(&evq->evq_list, ev, ev_next);
   17c2e:	2300      	movs	r3, #0
   17c30:	60e3      	str	r3, [r4, #12]
   17c32:	68eb      	ldr	r3, [r5, #12]
   17c34:	601c      	str	r4, [r3, #0]
   17c36:	340c      	adds	r4, #12
   17c38:	60ec      	str	r4, [r5, #12]

    resched = 0;
    if (evq->evq_task) {
   17c3a:	6868      	ldr	r0, [r5, #4]
   17c3c:	b1b8      	cbz	r0, 17c6e <os_eventq_put+0x5c>
        /* If task waiting on event, wake it up.
         * Check if task is sleeping, because another event
         * queue may have woken this task up beforehand.
         */
        if (evq->evq_task->t_state == OS_TASK_SLEEP) {
   17c3e:	7b03      	ldrb	r3, [r0, #12]
   17c40:	2b02      	cmp	r3, #2
   17c42:	d010      	beq.n	17c66 <os_eventq_put+0x54>
    resched = 0;
   17c44:	2400      	movs	r4, #0
            resched = 1;
        }
        /* Either way, NULL out the task, because the task will
         * be awake upon exit of this function.
         */
        evq->evq_task = NULL;
   17c46:	2300      	movs	r3, #0
   17c48:	606b      	str	r3, [r5, #4]
    }

    OS_EXIT_CRITICAL(sr);
   17c4a:	4630      	mov	r0, r6
   17c4c:	f000 ff5c 	bl	18b08 <os_arch_restore_sr>

    if (resched) {
   17c50:	b97c      	cbnz	r4, 17c72 <os_eventq_put+0x60>
        os_sched(NULL);
    }

    os_trace_api_ret(OS_TRACE_ID_EVENTQ_PUT);
}
   17c52:	bd70      	pop	{r4, r5, r6, pc}
    assert(evq != NULL && os_eventq_inited(evq));
   17c54:	2300      	movs	r3, #0
   17c56:	461a      	mov	r2, r3
   17c58:	4619      	mov	r1, r3
   17c5a:	4618      	mov	r0, r3
   17c5c:	f7ff fcb8 	bl	175d0 <__assert_func>
        OS_EXIT_CRITICAL(sr);
   17c60:	f000 ff52 	bl	18b08 <os_arch_restore_sr>
   17c64:	e7f5      	b.n	17c52 <os_eventq_put+0x40>
            os_sched_wakeup(evq->evq_task);
   17c66:	f000 fcc7 	bl	185f8 <os_sched_wakeup>
            resched = 1;
   17c6a:	2401      	movs	r4, #1
   17c6c:	e7eb      	b.n	17c46 <os_eventq_put+0x34>
    resched = 0;
   17c6e:	2400      	movs	r4, #0
   17c70:	e7eb      	b.n	17c4a <os_eventq_put+0x38>
        os_sched(NULL);
   17c72:	2000      	movs	r0, #0
   17c74:	f000 fd40 	bl	186f8 <os_sched>
   17c78:	e7eb      	b.n	17c52 <os_eventq_put+0x40>

00017c7a <os_eventq_get>:
    return ev;
}

struct os_event *
os_eventq_get(struct os_eventq *evq)
{
   17c7a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   17c7c:	4605      	mov	r5, r0
    os_sr_t sr;
    struct os_task *t;

    os_trace_api_u32(OS_TRACE_ID_EVENTQ_GET, (uint32_t)evq);

    t = os_sched_get_current_task();
   17c7e:	f000 fc67 	bl	18550 <os_sched_get_current_task>
   17c82:	4604      	mov	r4, r0
    if (evq->evq_owner != t) {
   17c84:	682b      	ldr	r3, [r5, #0]
   17c86:	4283      	cmp	r3, r0
   17c88:	d001      	beq.n	17c8e <os_eventq_get+0x14>
        if (evq->evq_owner == NULL) {
   17c8a:	b9db      	cbnz	r3, 17cc4 <os_eventq_get+0x4a>
            evq->evq_owner = t;
   17c8c:	6028      	str	r0, [r5, #0]
             * by another.
             */
            assert(0);
        }
    }
    OS_ENTER_CRITICAL(sr);
   17c8e:	f000 ff35 	bl	18afc <os_arch_save_sr>
   17c92:	4607      	mov	r7, r0
pull_one:
    ev = STAILQ_FIRST(&evq->evq_list);
   17c94:	68ae      	ldr	r6, [r5, #8]
    if (ev) {
   17c96:	b9de      	cbnz	r6, 17cd0 <os_eventq_get+0x56>
        STAILQ_REMOVE(&evq->evq_list, ev, os_event, ev_next);
        ev->ev_queued = 0;
        t->t_flags &= ~OS_TASK_FLAG_EVQ_WAIT;
    } else {
        evq->evq_task = t;
   17c98:	606c      	str	r4, [r5, #4]
        os_sched_sleep(evq->evq_task, OS_TIMEOUT_NEVER);
   17c9a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
   17c9e:	4620      	mov	r0, r4
   17ca0:	f000 fc62 	bl	18568 <os_sched_sleep>
        t->t_flags |= OS_TASK_FLAG_EVQ_WAIT;
   17ca4:	7b63      	ldrb	r3, [r4, #13]
   17ca6:	f043 0308 	orr.w	r3, r3, #8
   17caa:	7363      	strb	r3, [r4, #13]
        OS_EXIT_CRITICAL(sr);
   17cac:	4638      	mov	r0, r7
   17cae:	f000 ff2b 	bl	18b08 <os_arch_restore_sr>

        os_sched(NULL);
   17cb2:	2000      	movs	r0, #0
   17cb4:	f000 fd20 	bl	186f8 <os_sched>

        OS_ENTER_CRITICAL(sr);
   17cb8:	f000 ff20 	bl	18afc <os_arch_save_sr>
   17cbc:	4607      	mov	r7, r0
        evq->evq_task = NULL;
   17cbe:	2300      	movs	r3, #0
   17cc0:	606b      	str	r3, [r5, #4]
        goto pull_one;
   17cc2:	e7e7      	b.n	17c94 <os_eventq_get+0x1a>
            assert(0);
   17cc4:	2300      	movs	r3, #0
   17cc6:	461a      	mov	r2, r3
   17cc8:	4619      	mov	r1, r3
   17cca:	4618      	mov	r0, r3
   17ccc:	f7ff fc80 	bl	175d0 <__assert_func>
        STAILQ_REMOVE(&evq->evq_list, ev, os_event, ev_next);
   17cd0:	68f3      	ldr	r3, [r6, #12]
   17cd2:	60ab      	str	r3, [r5, #8]
   17cd4:	b153      	cbz	r3, 17cec <os_eventq_get+0x72>
        ev->ev_queued = 0;
   17cd6:	2300      	movs	r3, #0
   17cd8:	7033      	strb	r3, [r6, #0]
        t->t_flags &= ~OS_TASK_FLAG_EVQ_WAIT;
   17cda:	7b63      	ldrb	r3, [r4, #13]
   17cdc:	f023 0308 	bic.w	r3, r3, #8
   17ce0:	7363      	strb	r3, [r4, #13]
    }
    OS_EXIT_CRITICAL(sr);
   17ce2:	4638      	mov	r0, r7
   17ce4:	f000 ff10 	bl	18b08 <os_arch_restore_sr>
#if MYNEWT_VAL(OS_EVENTQ_DEBUG)
    evq->evq_prev = ev;
#endif

    return (ev);
}
   17ce8:	4630      	mov	r0, r6
   17cea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        STAILQ_REMOVE(&evq->evq_list, ev, os_event, ev_next);
   17cec:	f105 0308 	add.w	r3, r5, #8
   17cf0:	60eb      	str	r3, [r5, #12]
   17cf2:	e7f0      	b.n	17cd6 <os_eventq_get+0x5c>

00017cf4 <os_eventq_run>:
}
#endif

void
os_eventq_run(struct os_eventq *evq)
{
   17cf4:	b508      	push	{r3, lr}
#if MYNEWT_VAL(OS_EVENTQ_MONITOR)
    struct os_eventq_mon *mon;
    uint32_t ticks;
#endif

    ev = os_eventq_get(evq);
   17cf6:	f7ff ffc0 	bl	17c7a <os_eventq_get>
    assert(ev->ev_cb != NULL);
   17cfa:	6843      	ldr	r3, [r0, #4]
   17cfc:	b10b      	cbz	r3, 17d02 <os_eventq_run+0xe>
#if MYNEWT_VAL(OS_EVENTQ_MONITOR)
    ticks = os_cputime_get32();
#endif
    ev->ev_cb(ev);
   17cfe:	4798      	blx	r3
        if (ticks > mon->em_max) {
            mon->em_max = ticks;
        }
    }
#endif
}
   17d00:	bd08      	pop	{r3, pc}
    assert(ev->ev_cb != NULL);
   17d02:	461a      	mov	r2, r3
   17d04:	4619      	mov	r1, r3
   17d06:	4618      	mov	r0, r3
   17d08:	f7ff fc62 	bl	175d0 <__assert_func>

00017d0c <os_eventq_remove>:
    return (ev);
}

void
os_eventq_remove(struct os_eventq *evq, struct os_event *ev)
{
   17d0c:	b538      	push	{r3, r4, r5, lr}
   17d0e:	4605      	mov	r5, r0
   17d10:	460c      	mov	r4, r1
    os_sr_t sr;

    os_trace_api_u32x2(OS_TRACE_ID_EVENTQ_REMOVE, (uint32_t)evq, (uint32_t)ev);

    OS_ENTER_CRITICAL(sr);
   17d12:	f000 fef3 	bl	18afc <os_arch_save_sr>
    if (OS_EVENT_QUEUED(ev)) {
   17d16:	7823      	ldrb	r3, [r4, #0]
   17d18:	b183      	cbz	r3, 17d3c <os_eventq_remove+0x30>
        STAILQ_REMOVE(&evq->evq_list, ev, os_event, ev_next);
   17d1a:	68aa      	ldr	r2, [r5, #8]
   17d1c:	42a2      	cmp	r2, r4
   17d1e:	d107      	bne.n	17d30 <os_eventq_remove+0x24>
   17d20:	68d3      	ldr	r3, [r2, #12]
   17d22:	60ab      	str	r3, [r5, #8]
   17d24:	b953      	cbnz	r3, 17d3c <os_eventq_remove+0x30>
   17d26:	f105 0308 	add.w	r3, r5, #8
   17d2a:	60eb      	str	r3, [r5, #12]
   17d2c:	e006      	b.n	17d3c <os_eventq_remove+0x30>
   17d2e:	461a      	mov	r2, r3
   17d30:	68d3      	ldr	r3, [r2, #12]
   17d32:	42a3      	cmp	r3, r4
   17d34:	d1fb      	bne.n	17d2e <os_eventq_remove+0x22>
   17d36:	68db      	ldr	r3, [r3, #12]
   17d38:	60d3      	str	r3, [r2, #12]
   17d3a:	b123      	cbz	r3, 17d46 <os_eventq_remove+0x3a>
    }
    ev->ev_queued = 0;
   17d3c:	2300      	movs	r3, #0
   17d3e:	7023      	strb	r3, [r4, #0]
    OS_EXIT_CRITICAL(sr);
   17d40:	f000 fee2 	bl	18b08 <os_arch_restore_sr>

    os_trace_api_ret(OS_TRACE_ID_EVENTQ_REMOVE);
}
   17d44:	bd38      	pop	{r3, r4, r5, pc}
        STAILQ_REMOVE(&evq->evq_list, ev, os_event, ev_next);
   17d46:	320c      	adds	r2, #12
   17d48:	60ea      	str	r2, [r5, #12]
   17d4a:	e7f7      	b.n	17d3c <os_eventq_remove+0x30>

00017d4c <os_eventq_dflt_get>:

struct os_eventq *
os_eventq_dflt_get(void)
{
    return &os_eventq_main;
}
   17d4c:	4800      	ldr	r0, [pc, #0]	; (17d50 <os_eventq_dflt_get+0x4>)
   17d4e:	4770      	bx	lr
   17d50:	20005018 	.word	0x20005018

00017d54 <os_mqueue_init>:
#endif
#include "os/mynewt.h"

int
os_mqueue_init(struct os_mqueue *mq, os_event_fn *ev_cb, void *arg)
{
   17d54:	4603      	mov	r3, r0
    struct os_event *ev;

    STAILQ_INIT(&mq->mq_head);
   17d56:	2000      	movs	r0, #0
   17d58:	6018      	str	r0, [r3, #0]
   17d5a:	605b      	str	r3, [r3, #4]

    ev = &mq->mq_ev;
    memset(ev, 0, sizeof(*ev));
   17d5c:	6098      	str	r0, [r3, #8]
   17d5e:	6158      	str	r0, [r3, #20]
    ev->ev_cb = ev_cb;
   17d60:	60d9      	str	r1, [r3, #12]
    ev->ev_arg = arg;
   17d62:	611a      	str	r2, [r3, #16]

    return (0);
}
   17d64:	4770      	bx	lr

00017d66 <os_mqueue_get>:

struct os_mbuf *
os_mqueue_get(struct os_mqueue *mq)
{
   17d66:	b538      	push	{r3, r4, r5, lr}
   17d68:	4605      	mov	r5, r0
    struct os_mbuf_pkthdr *mp;
    struct os_mbuf *m;
    os_sr_t sr;

    OS_ENTER_CRITICAL(sr);
   17d6a:	f000 fec7 	bl	18afc <os_arch_save_sr>
    mp = STAILQ_FIRST(&mq->mq_head);
   17d6e:	682c      	ldr	r4, [r5, #0]
    if (mp) {
   17d70:	b114      	cbz	r4, 17d78 <os_mqueue_get+0x12>
        STAILQ_REMOVE_HEAD(&mq->mq_head, omp_next);
   17d72:	6863      	ldr	r3, [r4, #4]
   17d74:	602b      	str	r3, [r5, #0]
   17d76:	b12b      	cbz	r3, 17d84 <os_mqueue_get+0x1e>
    }
    OS_EXIT_CRITICAL(sr);
   17d78:	f000 fec6 	bl	18b08 <os_arch_restore_sr>

    if (mp) {
   17d7c:	b124      	cbz	r4, 17d88 <os_mqueue_get+0x22>
        m = OS_MBUF_PKTHDR_TO_MBUF(mp);
   17d7e:	f1a4 0010 	sub.w	r0, r4, #16
    } else {
        m = NULL;
    }

    return (m);
}
   17d82:	bd38      	pop	{r3, r4, r5, pc}
        STAILQ_REMOVE_HEAD(&mq->mq_head, omp_next);
   17d84:	606d      	str	r5, [r5, #4]
   17d86:	e7f7      	b.n	17d78 <os_mqueue_get+0x12>
        m = NULL;
   17d88:	2000      	movs	r0, #0
    return (m);
   17d8a:	e7fa      	b.n	17d82 <os_mqueue_get+0x1c>

00017d8c <os_mqueue_put>:

int
os_mqueue_put(struct os_mqueue *mq, struct os_eventq *evq, struct os_mbuf *m)
{
   17d8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    struct os_mbuf_pkthdr *mp;
    os_sr_t sr;
    int rc;

    /* Can only place the head of a chained mbuf on the queue. */
    if (!OS_MBUF_IS_PKTHDR(m)) {
   17d8e:	7953      	ldrb	r3, [r2, #5]
   17d90:	2b07      	cmp	r3, #7
   17d92:	d916      	bls.n	17dc2 <os_mqueue_put+0x36>
   17d94:	4614      	mov	r4, r2
   17d96:	460e      	mov	r6, r1
   17d98:	4605      	mov	r5, r0
        rc = OS_EINVAL;
        goto err;
    }

    mp = OS_MBUF_PKTHDR(m);
   17d9a:	f102 0710 	add.w	r7, r2, #16

    OS_ENTER_CRITICAL(sr);
   17d9e:	f000 fead 	bl	18afc <os_arch_save_sr>
    STAILQ_INSERT_TAIL(&mq->mq_head, mp, omp_next);
   17da2:	2300      	movs	r3, #0
   17da4:	f844 3f14 	str.w	r3, [r4, #20]!
   17da8:	686b      	ldr	r3, [r5, #4]
   17daa:	601f      	str	r7, [r3, #0]
   17dac:	606c      	str	r4, [r5, #4]
    OS_EXIT_CRITICAL(sr);
   17dae:	f000 feab 	bl	18b08 <os_arch_restore_sr>

    /* Only post an event to the queue if its specified */
    if (evq) {
   17db2:	b146      	cbz	r6, 17dc6 <os_mqueue_put+0x3a>
        os_eventq_put(evq, &mq->mq_ev);
   17db4:	f105 0108 	add.w	r1, r5, #8
   17db8:	4630      	mov	r0, r6
   17dba:	f7ff ff2a 	bl	17c12 <os_eventq_put>
    }

    return (0);
   17dbe:	2000      	movs	r0, #0
   17dc0:	e000      	b.n	17dc4 <os_mqueue_put+0x38>
err:
    return (rc);
   17dc2:	2002      	movs	r0, #2
}
   17dc4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return (0);
   17dc6:	2000      	movs	r0, #0
   17dc8:	e7fc      	b.n	17dc4 <os_mqueue_put+0x38>

00017dca <os_mbuf_pool_init>:

int
os_mbuf_pool_init(struct os_mbuf_pool *omp, struct os_mempool *mp,
                  uint16_t buf_len, uint16_t nbufs)
{
    omp->omp_databuf_len = buf_len - sizeof(struct os_mbuf);
   17dca:	3a10      	subs	r2, #16
   17dcc:	8002      	strh	r2, [r0, #0]
    omp->omp_pool = mp;
   17dce:	6041      	str	r1, [r0, #4]

    return (0);
}
   17dd0:	2000      	movs	r0, #0
   17dd2:	4770      	bx	lr

00017dd4 <os_mbuf_get>:

struct os_mbuf *
os_mbuf_get(struct os_mbuf_pool *omp, uint16_t leadingspace)
{
   17dd4:	b538      	push	{r3, r4, r5, lr}
    struct os_mbuf *om;

    os_trace_api_u32x2(OS_TRACE_ID_MBUF_GET, (uint32_t)omp,
                       (uint32_t)leadingspace);

    if (leadingspace > omp->omp_databuf_len) {
   17dd6:	8803      	ldrh	r3, [r0, #0]
   17dd8:	428b      	cmp	r3, r1
   17dda:	d312      	bcc.n	17e02 <os_mbuf_get+0x2e>
   17ddc:	460d      	mov	r5, r1
   17dde:	4604      	mov	r4, r0
        om = NULL;
        goto done;
    }

    om = os_memblock_get(omp->omp_pool);
   17de0:	6840      	ldr	r0, [r0, #4]
   17de2:	f000 f947 	bl	18074 <os_memblock_get>
    if (!om) {
   17de6:	4603      	mov	r3, r0
   17de8:	b148      	cbz	r0, 17dfe <os_mbuf_get+0x2a>
        goto done;
    }

    SLIST_NEXT(om, om_next) = NULL;
   17dea:	2200      	movs	r2, #0
   17dec:	60c2      	str	r2, [r0, #12]
    om->om_flags = 0;
   17dee:	7102      	strb	r2, [r0, #4]
    om->om_pkthdr_len = 0;
   17df0:	7142      	strb	r2, [r0, #5]
    om->om_len = 0;
   17df2:	80c2      	strh	r2, [r0, #6]
    om->om_data = (&om->om_databuf[0] + leadingspace);
   17df4:	f100 0110 	add.w	r1, r0, #16
   17df8:	4429      	add	r1, r5
   17dfa:	6001      	str	r1, [r0, #0]
    om->om_omp = omp;
   17dfc:	6084      	str	r4, [r0, #8]

done:
    os_trace_api_ret_u32(OS_TRACE_ID_MBUF_GET, (uint32_t)om);
    return om;
}
   17dfe:	4618      	mov	r0, r3
   17e00:	bd38      	pop	{r3, r4, r5, pc}
        om = NULL;
   17e02:	2300      	movs	r3, #0
    return om;
   17e04:	e7fb      	b.n	17dfe <os_mbuf_get+0x2a>

00017e06 <os_mbuf_get_pkthdr>:

struct os_mbuf *
os_mbuf_get_pkthdr(struct os_mbuf_pool *omp, uint8_t user_pkthdr_len)
{
   17e06:	b538      	push	{r3, r4, r5, lr}

    os_trace_api_u32x2(OS_TRACE_ID_MBUF_GET_PKTHDR, (uint32_t)omp,
                       (uint32_t)user_pkthdr_len);

    /* User packet header must fit inside mbuf */
    pkthdr_len = user_pkthdr_len + sizeof(struct os_mbuf_pkthdr);
   17e08:	f101 0508 	add.w	r5, r1, #8
    if ((pkthdr_len > omp->omp_databuf_len) || (pkthdr_len > 255)) {
   17e0c:	8803      	ldrh	r3, [r0, #0]
   17e0e:	42ab      	cmp	r3, r5
   17e10:	d310      	bcc.n	17e34 <os_mbuf_get_pkthdr+0x2e>
   17e12:	2dff      	cmp	r5, #255	; 0xff
   17e14:	d810      	bhi.n	17e38 <os_mbuf_get_pkthdr+0x32>
        om = NULL;
        goto done;
    }

    om = os_mbuf_get(omp, 0);
   17e16:	2100      	movs	r1, #0
   17e18:	f7ff ffdc 	bl	17dd4 <os_mbuf_get>
    if (om) {
   17e1c:	4603      	mov	r3, r0
   17e1e:	b138      	cbz	r0, 17e30 <os_mbuf_get_pkthdr+0x2a>
        om->om_pkthdr_len = pkthdr_len;
   17e20:	715d      	strb	r5, [r3, #5]
        om->om_data += pkthdr_len;
   17e22:	6802      	ldr	r2, [r0, #0]
   17e24:	4415      	add	r5, r2
   17e26:	6005      	str	r5, [r0, #0]

        pkthdr = OS_MBUF_PKTHDR(om);
        pkthdr->omp_len = 0;
   17e28:	2200      	movs	r2, #0
   17e2a:	8202      	strh	r2, [r0, #16]
        pkthdr->omp_flags = 0;
   17e2c:	8242      	strh	r2, [r0, #18]
        STAILQ_NEXT(pkthdr, omp_next) = NULL;
   17e2e:	6142      	str	r2, [r0, #20]
    }

done:
    os_trace_api_ret_u32(OS_TRACE_ID_MBUF_GET_PKTHDR, (uint32_t)om);
    return om;
}
   17e30:	4618      	mov	r0, r3
   17e32:	bd38      	pop	{r3, r4, r5, pc}
        om = NULL;
   17e34:	2300      	movs	r3, #0
   17e36:	e7fb      	b.n	17e30 <os_mbuf_get_pkthdr+0x2a>
   17e38:	2300      	movs	r3, #0
    return om;
   17e3a:	e7f9      	b.n	17e30 <os_mbuf_get_pkthdr+0x2a>

00017e3c <os_mbuf_free>:

int
os_mbuf_free(struct os_mbuf *om)
{
   17e3c:	b508      	push	{r3, lr}
    int rc;

    os_trace_api_u32(OS_TRACE_ID_MBUF_FREE, (uint32_t)om);

    if (om->om_omp != NULL) {
   17e3e:	6883      	ldr	r3, [r0, #8]
   17e40:	b123      	cbz	r3, 17e4c <os_mbuf_free+0x10>
   17e42:	4601      	mov	r1, r0
        rc = os_memblock_put(om->om_omp->omp_pool, om);
   17e44:	6858      	ldr	r0, [r3, #4]
   17e46:	f000 f93d 	bl	180c4 <os_memblock_put>
    rc = 0;

done:
    os_trace_api_ret_u32(OS_TRACE_ID_MBUF_FREE, (uint32_t)rc);
    return (rc);
}
   17e4a:	bd08      	pop	{r3, pc}
    rc = 0;
   17e4c:	2000      	movs	r0, #0
    return (rc);
   17e4e:	e7fc      	b.n	17e4a <os_mbuf_free+0xe>

00017e50 <os_mbuf_free_chain>:

int
os_mbuf_free_chain(struct os_mbuf *om)
{
   17e50:	4603      	mov	r3, r0
    struct os_mbuf *next;
    int rc;

    os_trace_api_u32(OS_TRACE_ID_MBUF_FREE_CHAIN, (uint32_t)om);

    while (om != NULL) {
   17e52:	b160      	cbz	r0, 17e6e <os_mbuf_free_chain+0x1e>
{
   17e54:	b510      	push	{r4, lr}
        next = SLIST_NEXT(om, om_next);
   17e56:	68dc      	ldr	r4, [r3, #12]

        rc = os_mbuf_free(om);
   17e58:	4618      	mov	r0, r3
   17e5a:	f7ff ffef 	bl	17e3c <os_mbuf_free>
        if (rc != 0) {
            goto done;
        }

        om = next;
   17e5e:	4623      	mov	r3, r4
        if (rc != 0) {
   17e60:	4602      	mov	r2, r0
   17e62:	b910      	cbnz	r0, 17e6a <os_mbuf_free_chain+0x1a>
    while (om != NULL) {
   17e64:	2c00      	cmp	r4, #0
   17e66:	d1f6      	bne.n	17e56 <os_mbuf_free_chain+0x6>
    }

    rc = 0;
   17e68:	2200      	movs	r2, #0

done:
    os_trace_api_ret_u32(OS_TRACE_ID_MBUF_FREE_CHAIN, (uint32_t)rc);
    return (rc);
}
   17e6a:	4610      	mov	r0, r2
   17e6c:	bd10      	pop	{r4, pc}
    rc = 0;
   17e6e:	2200      	movs	r2, #0
}
   17e70:	4610      	mov	r0, r2
   17e72:	4770      	bx	lr

00017e74 <os_mbuf_len>:
uint16_t
os_mbuf_len(const struct os_mbuf *om)
{
    uint16_t len;

    len = 0;
   17e74:	2300      	movs	r3, #0
    while (om != NULL) {
   17e76:	e003      	b.n	17e80 <os_mbuf_len+0xc>
        len += om->om_len;
   17e78:	88c2      	ldrh	r2, [r0, #6]
   17e7a:	4413      	add	r3, r2
   17e7c:	b29b      	uxth	r3, r3
        om = SLIST_NEXT(om, om_next);
   17e7e:	68c0      	ldr	r0, [r0, #12]
    while (om != NULL) {
   17e80:	2800      	cmp	r0, #0
   17e82:	d1f9      	bne.n	17e78 <os_mbuf_len+0x4>
    }

    return len;
}
   17e84:	4618      	mov	r0, r3
   17e86:	4770      	bx	lr

00017e88 <os_mbuf_append>:

int
os_mbuf_append(struct os_mbuf *om, const void *data,  uint16_t len)
{
   17e88:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    struct os_mbuf *new;
    int remainder;
    int space;
    int rc;

    if (om == NULL) {
   17e8c:	2800      	cmp	r0, #0
   17e8e:	d04d      	beq.n	17f2c <os_mbuf_append+0xa4>
   17e90:	460f      	mov	r7, r1
   17e92:	4691      	mov	r9, r2
   17e94:	4682      	mov	sl, r0
        rc = OS_EINVAL;
        goto err;
    }

    omp = om->om_omp;
   17e96:	f8d0 8008 	ldr.w	r8, [r0, #8]

    /* Scroll to last mbuf in the chain */
    last = om;
   17e9a:	4605      	mov	r5, r0
    while (SLIST_NEXT(last, om_next) != NULL) {
   17e9c:	e000      	b.n	17ea0 <os_mbuf_append+0x18>
        last = SLIST_NEXT(last, om_next);
   17e9e:	461d      	mov	r5, r3
    while (SLIST_NEXT(last, om_next) != NULL) {
   17ea0:	68eb      	ldr	r3, [r5, #12]
   17ea2:	2b00      	cmp	r3, #0
   17ea4:	d1fb      	bne.n	17e9e <os_mbuf_append+0x16>
    }

    remainder = len;
   17ea6:	464e      	mov	r6, r9
static inline uint16_t
_os_mbuf_trailingspace(struct os_mbuf *om)
{
    struct os_mbuf_pool *omp;

    omp = om->om_omp;
   17ea8:	68ab      	ldr	r3, [r5, #8]

    return (&om->om_databuf[0] + omp->omp_databuf_len) -
   17eaa:	f105 0410 	add.w	r4, r5, #16
   17eae:	881b      	ldrh	r3, [r3, #0]
   17eb0:	441c      	add	r4, r3
      (om->om_data + om->om_len);
   17eb2:	6828      	ldr	r0, [r5, #0]
   17eb4:	88eb      	ldrh	r3, [r5, #6]
   17eb6:	4418      	add	r0, r3
    return (&om->om_databuf[0] + omp->omp_databuf_len) -
   17eb8:	1a24      	subs	r4, r4, r0
   17eba:	b2a4      	uxth	r4, r4
    space = OS_MBUF_TRAILINGSPACE(last);

    /* If room in current mbuf, copy the first part of the data into the
     * remaining space in that mbuf.
     */
    if (space > 0) {
   17ebc:	b164      	cbz	r4, 17ed8 <os_mbuf_append+0x50>
        if (space > remainder) {
   17ebe:	454c      	cmp	r4, r9
   17ec0:	dd00      	ble.n	17ec4 <os_mbuf_append+0x3c>
            space = remainder;
   17ec2:	464c      	mov	r4, r9
        }

        memcpy(OS_MBUF_DATA(last, uint8_t *) + last->om_len , data, space);
   17ec4:	4622      	mov	r2, r4
   17ec6:	4639      	mov	r1, r7
   17ec8:	f000 ff78 	bl	18dbc <memcpy>

        last->om_len += space;
   17ecc:	88eb      	ldrh	r3, [r5, #6]
   17ece:	4423      	add	r3, r4
   17ed0:	80eb      	strh	r3, [r5, #6]
        data += space;
   17ed2:	4427      	add	r7, r4
        remainder -= space;
   17ed4:	eba9 0604 	sub.w	r6, r9, r4
    }

    /* Take the remaining data, and keep allocating new mbufs and copying
     * data into it, until data is exhausted.
     */
    while (remainder > 0) {
   17ed8:	2e00      	cmp	r6, #0
   17eda:	dd16      	ble.n	17f0a <os_mbuf_append+0x82>
        new = os_mbuf_get(omp, 0);
   17edc:	2100      	movs	r1, #0
   17ede:	4640      	mov	r0, r8
   17ee0:	f7ff ff78 	bl	17dd4 <os_mbuf_get>
        if (!new) {
   17ee4:	4604      	mov	r4, r0
   17ee6:	b180      	cbz	r0, 17f0a <os_mbuf_append+0x82>
            break;
        }

        new->om_len = min(omp->omp_databuf_len, remainder);
   17ee8:	f8b8 2000 	ldrh.w	r2, [r8]
   17eec:	42b2      	cmp	r2, r6
   17eee:	bfa8      	it	ge
   17ef0:	4632      	movge	r2, r6
   17ef2:	b292      	uxth	r2, r2
   17ef4:	80c2      	strh	r2, [r0, #6]
        memcpy(OS_MBUF_DATA(new, void *), data, new->om_len);
   17ef6:	4639      	mov	r1, r7
   17ef8:	6800      	ldr	r0, [r0, #0]
   17efa:	f000 ff5f 	bl	18dbc <memcpy>
        data += new->om_len;
   17efe:	88e3      	ldrh	r3, [r4, #6]
   17f00:	441f      	add	r7, r3
        remainder -= new->om_len;
   17f02:	1af6      	subs	r6, r6, r3
        SLIST_NEXT(last, om_next) = new;
   17f04:	60ec      	str	r4, [r5, #12]
        last = new;
   17f06:	4625      	mov	r5, r4
   17f08:	e7e6      	b.n	17ed8 <os_mbuf_append+0x50>
    }

    /* Adjust the packet header length in the buffer */
    if (OS_MBUF_IS_PKTHDR(om)) {
   17f0a:	f89a 3005 	ldrb.w	r3, [sl, #5]
   17f0e:	2b07      	cmp	r3, #7
   17f10:	d907      	bls.n	17f22 <os_mbuf_append+0x9a>
        OS_MBUF_PKTHDR(om)->omp_len += len - remainder;
   17f12:	eba9 0906 	sub.w	r9, r9, r6
   17f16:	f8ba 3010 	ldrh.w	r3, [sl, #16]
   17f1a:	fa13 f989 	uxtah	r9, r3, r9
   17f1e:	f8aa 9010 	strh.w	r9, [sl, #16]
    }

    if (remainder != 0) {
   17f22:	b106      	cbz	r6, 17f26 <os_mbuf_append+0x9e>
        rc = OS_ENOMEM;
   17f24:	2601      	movs	r6, #1


    return (0);
err:
    return (rc);
}
   17f26:	4630      	mov	r0, r6
   17f28:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        rc = OS_EINVAL;
   17f2c:	2602      	movs	r6, #2
   17f2e:	e7fa      	b.n	17f26 <os_mbuf_append+0x9e>

00017f30 <os_mbuf_dup>:
    return 0;
}

struct os_mbuf *
os_mbuf_dup(struct os_mbuf *om)
{
   17f30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   17f34:	4604      	mov	r4, r0
    struct os_mbuf_pool *omp;
    struct os_mbuf *head;
    struct os_mbuf *copy;

    omp = om->om_omp;
   17f36:	f8d0 8008 	ldr.w	r8, [r0, #8]

    head = NULL;
    copy = NULL;
   17f3a:	2700      	movs	r7, #0
    head = NULL;
   17f3c:	463e      	mov	r6, r7

    for (; om != NULL; om = SLIST_NEXT(om, om_next)) {
   17f3e:	e017      	b.n	17f70 <os_mbuf_dup+0x40>
    startoff = 0;
   17f40:	2100      	movs	r1, #0
    leadingspace = (uint16_t) (OS_MBUF_DATA(om, uint8_t *) -
   17f42:	4623      	mov	r3, r4
   17f44:	f853 2b10 	ldr.w	r2, [r3], #16
        ((uint8_t *) &om->om_databuf[0] + startoff));
   17f48:	440b      	add	r3, r1
    leadingspace = (uint16_t) (OS_MBUF_DATA(om, uint8_t *) -
   17f4a:	1ad3      	subs	r3, r2, r3
        if (head) {
            SLIST_NEXT(copy, om_next) = os_mbuf_get(omp,
   17f4c:	b299      	uxth	r1, r3
   17f4e:	4640      	mov	r0, r8
   17f50:	f7ff ff40 	bl	17dd4 <os_mbuf_get>
   17f54:	4605      	mov	r5, r0
   17f56:	60f8      	str	r0, [r7, #12]
                    OS_MBUF_LEADINGSPACE(om));
            if (!SLIST_NEXT(copy, om_next)) {
   17f58:	b188      	cbz	r0, 17f7e <os_mbuf_dup+0x4e>
            if (OS_MBUF_IS_PKTHDR(om)) {
                _os_mbuf_copypkthdr(head, om);
            }
            copy = head;
        }
        copy->om_flags = om->om_flags;
   17f5a:	7923      	ldrb	r3, [r4, #4]
   17f5c:	712b      	strb	r3, [r5, #4]
        copy->om_len = om->om_len;
   17f5e:	88e3      	ldrh	r3, [r4, #6]
   17f60:	80eb      	strh	r3, [r5, #6]
        memcpy(OS_MBUF_DATA(copy, uint8_t *), OS_MBUF_DATA(om, uint8_t *),
   17f62:	88e2      	ldrh	r2, [r4, #6]
   17f64:	6821      	ldr	r1, [r4, #0]
   17f66:	6828      	ldr	r0, [r5, #0]
   17f68:	f000 ff28 	bl	18dbc <memcpy>
    for (; om != NULL; om = SLIST_NEXT(om, om_next)) {
   17f6c:	68e4      	ldr	r4, [r4, #12]
   17f6e:	462f      	mov	r7, r5
   17f70:	b14c      	cbz	r4, 17f86 <os_mbuf_dup+0x56>
        if (head) {
   17f72:	b15e      	cbz	r6, 17f8c <os_mbuf_dup+0x5c>
    if (OS_MBUF_IS_PKTHDR(om)) {
   17f74:	7963      	ldrb	r3, [r4, #5]
   17f76:	2b07      	cmp	r3, #7
   17f78:	d9e2      	bls.n	17f40 <os_mbuf_dup+0x10>
        startoff = om->om_pkthdr_len;
   17f7a:	b299      	uxth	r1, r3
   17f7c:	e7e1      	b.n	17f42 <os_mbuf_dup+0x12>
                os_mbuf_free_chain(head);
   17f7e:	4630      	mov	r0, r6
   17f80:	f7ff ff66 	bl	17e50 <os_mbuf_free_chain>
                om->om_len);
    }

    return (head);
err:
    return (NULL);
   17f84:	462e      	mov	r6, r5
}
   17f86:	4630      	mov	r0, r6
   17f88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (OS_MBUF_IS_PKTHDR(om)) {
   17f8c:	7963      	ldrb	r3, [r4, #5]
   17f8e:	2b07      	cmp	r3, #7
   17f90:	d911      	bls.n	17fb6 <os_mbuf_dup+0x86>
        startoff = om->om_pkthdr_len;
   17f92:	b299      	uxth	r1, r3
    leadingspace = (uint16_t) (OS_MBUF_DATA(om, uint8_t *) -
   17f94:	4623      	mov	r3, r4
   17f96:	f853 2b10 	ldr.w	r2, [r3], #16
        ((uint8_t *) &om->om_databuf[0] + startoff));
   17f9a:	440b      	add	r3, r1
    leadingspace = (uint16_t) (OS_MBUF_DATA(om, uint8_t *) -
   17f9c:	1ad3      	subs	r3, r2, r3
            head = os_mbuf_get(omp, OS_MBUF_LEADINGSPACE(om));
   17f9e:	b299      	uxth	r1, r3
   17fa0:	4640      	mov	r0, r8
   17fa2:	f7ff ff17 	bl	17dd4 <os_mbuf_get>
            if (!head) {
   17fa6:	4606      	mov	r6, r0
   17fa8:	2800      	cmp	r0, #0
   17faa:	d0ec      	beq.n	17f86 <os_mbuf_dup+0x56>
            if (OS_MBUF_IS_PKTHDR(om)) {
   17fac:	7963      	ldrb	r3, [r4, #5]
   17fae:	2b07      	cmp	r3, #7
   17fb0:	d803      	bhi.n	17fba <os_mbuf_dup+0x8a>
            copy = head;
   17fb2:	4605      	mov	r5, r0
   17fb4:	e7d1      	b.n	17f5a <os_mbuf_dup+0x2a>
    startoff = 0;
   17fb6:	2100      	movs	r1, #0
   17fb8:	e7ec      	b.n	17f94 <os_mbuf_dup+0x64>
    assert(new_buf->om_len == 0);
   17fba:	88c3      	ldrh	r3, [r0, #6]
   17fbc:	b973      	cbnz	r3, 17fdc <os_mbuf_dup+0xac>
    memcpy(&new_buf->om_databuf[0], &old_buf->om_databuf[0],
   17fbe:	f100 0510 	add.w	r5, r0, #16
   17fc2:	7962      	ldrb	r2, [r4, #5]
   17fc4:	f104 0110 	add.w	r1, r4, #16
   17fc8:	4628      	mov	r0, r5
   17fca:	f000 fef7 	bl	18dbc <memcpy>
    new_buf->om_pkthdr_len = old_buf->om_pkthdr_len;
   17fce:	7963      	ldrb	r3, [r4, #5]
   17fd0:	7173      	strb	r3, [r6, #5]
    new_buf->om_data = new_buf->om_databuf + old_buf->om_pkthdr_len;
   17fd2:	7963      	ldrb	r3, [r4, #5]
   17fd4:	441d      	add	r5, r3
   17fd6:	6035      	str	r5, [r6, #0]
            copy = head;
   17fd8:	4635      	mov	r5, r6
   17fda:	e7be      	b.n	17f5a <os_mbuf_dup+0x2a>
    assert(new_buf->om_len == 0);
   17fdc:	2300      	movs	r3, #0
   17fde:	461a      	mov	r2, r3
   17fe0:	4619      	mov	r1, r3
   17fe2:	4618      	mov	r0, r3
   17fe4:	f7ff faf4 	bl	175d0 <__assert_func>

00017fe8 <os_mempool_init_internal>:
    int i;
    uint8_t *block_addr;
    struct os_memblock *block_ptr;

    /* Check for valid parameters */
    if (!mp || (block_size == 0)) {
   17fe8:	2800      	cmp	r0, #0
   17fea:	d031      	beq.n	18050 <os_mempool_init_internal+0x68>
{
   17fec:	b430      	push	{r4, r5}
   17fee:	4604      	mov	r4, r0
    if (!mp || (block_size == 0)) {
   17ff0:	2a00      	cmp	r2, #0
   17ff2:	d02f      	beq.n	18054 <os_mempool_init_internal+0x6c>
        return OS_INVALID_PARM;
    }

    if ((!membuf) && (blocks != 0)) {
   17ff4:	b1bb      	cbz	r3, 18026 <os_mempool_init_internal+0x3e>
        return OS_INVALID_PARM;
    }

    if (membuf != NULL) {
   17ff6:	b113      	cbz	r3, 17ffe <os_mempool_init_internal+0x16>
        /* Blocks need to be sized properly and memory buffer should be
         * aligned
         */
        if (((uint32_t)membuf & (OS_ALIGNMENT - 1)) != 0) {
   17ff8:	f013 0f03 	tst.w	r3, #3
   17ffc:	d12c      	bne.n	18058 <os_mempool_init_internal+0x70>
            return OS_MEM_NOT_ALIGNED;
        }
    }

    /* Initialize the memory pool structure */
    mp->mp_block_size = block_size;
   17ffe:	6022      	str	r2, [r4, #0]
    mp->mp_num_free = blocks;
   18000:	80e1      	strh	r1, [r4, #6]
    mp->mp_min_free = blocks;
   18002:	8121      	strh	r1, [r4, #8]
    mp->mp_flags = flags;
   18004:	f89d 000c 	ldrb.w	r0, [sp, #12]
   18008:	72a0      	strb	r0, [r4, #10]
    mp->mp_num_blocks = blocks;
   1800a:	80a1      	strh	r1, [r4, #4]
    mp->mp_membuf_addr = (uint32_t)membuf;
   1800c:	60e3      	str	r3, [r4, #12]
    mp->name = name;
   1800e:	9802      	ldr	r0, [sp, #8]
   18010:	61a0      	str	r0, [r4, #24]
    SLIST_FIRST(mp) = membuf;
   18012:	6163      	str	r3, [r4, #20]

    if (blocks > 0) {
   18014:	b199      	cbz	r1, 1803e <os_mempool_init_internal+0x56>
        os_mempool_poison(mp, membuf);
        os_mempool_guard(mp, membuf);
        true_block_size = OS_MEMPOOL_TRUE_BLOCK_SIZE(mp);
   18016:	f012 0f03 	tst.w	r2, #3
   1801a:	d002      	beq.n	18022 <os_mempool_init_internal+0x3a>
   1801c:	f022 0203 	bic.w	r2, r2, #3
   18020:	3204      	adds	r2, #4

        /* Chain the memory blocks to the free list */
        block_addr = (uint8_t *)membuf;
        block_ptr = (struct os_memblock *)block_addr;
        for (i = 1; i < blocks; i++) {
   18022:	2001      	movs	r0, #1
   18024:	e007      	b.n	18036 <os_mempool_init_internal+0x4e>
    if ((!membuf) && (blocks != 0)) {
   18026:	2900      	cmp	r1, #0
   18028:	d0e5      	beq.n	17ff6 <os_mempool_init_internal+0xe>
        return OS_INVALID_PARM;
   1802a:	2003      	movs	r0, #3
   1802c:	e00e      	b.n	1804c <os_mempool_init_internal+0x64>
            block_addr += true_block_size;
   1802e:	189d      	adds	r5, r3, r2
            os_mempool_poison(mp, block_addr);
            os_mempool_guard(mp, block_addr);
            SLIST_NEXT(block_ptr, mb_next) = (struct os_memblock *)block_addr;
   18030:	601d      	str	r5, [r3, #0]
        for (i = 1; i < blocks; i++) {
   18032:	3001      	adds	r0, #1
            block_addr += true_block_size;
   18034:	462b      	mov	r3, r5
        for (i = 1; i < blocks; i++) {
   18036:	4281      	cmp	r1, r0
   18038:	dcf9      	bgt.n	1802e <os_mempool_init_internal+0x46>
            block_ptr = (struct os_memblock *)block_addr;
        }

        /* Last one in the list should be NULL */
        SLIST_NEXT(block_ptr, mb_next) = NULL;
   1803a:	2200      	movs	r2, #0
   1803c:	601a      	str	r2, [r3, #0]
    }

    STAILQ_INSERT_TAIL(&g_os_mempool_list, mp, mp_list);
   1803e:	2000      	movs	r0, #0
   18040:	6120      	str	r0, [r4, #16]
   18042:	4b06      	ldr	r3, [pc, #24]	; (1805c <os_mempool_init_internal+0x74>)
   18044:	685a      	ldr	r2, [r3, #4]
   18046:	6014      	str	r4, [r2, #0]
   18048:	3410      	adds	r4, #16
   1804a:	605c      	str	r4, [r3, #4]

    return OS_OK;
}
   1804c:	bc30      	pop	{r4, r5}
   1804e:	4770      	bx	lr
        return OS_INVALID_PARM;
   18050:	2003      	movs	r0, #3
}
   18052:	4770      	bx	lr
        return OS_INVALID_PARM;
   18054:	2003      	movs	r0, #3
   18056:	e7f9      	b.n	1804c <os_mempool_init_internal+0x64>
            return OS_MEM_NOT_ALIGNED;
   18058:	2004      	movs	r0, #4
   1805a:	e7f7      	b.n	1804c <os_mempool_init_internal+0x64>
   1805c:	20009e38 	.word	0x20009e38

00018060 <os_mempool_init>:

os_error_t
os_mempool_init(struct os_mempool *mp, uint16_t blocks, uint32_t block_size,
                void *membuf, char *name)
{
   18060:	b510      	push	{r4, lr}
   18062:	b082      	sub	sp, #8
    return os_mempool_init_internal(mp, blocks, block_size, membuf, name, 0);
   18064:	2400      	movs	r4, #0
   18066:	9401      	str	r4, [sp, #4]
   18068:	9c04      	ldr	r4, [sp, #16]
   1806a:	9400      	str	r4, [sp, #0]
   1806c:	f7ff ffbc 	bl	17fe8 <os_mempool_init_internal>
}
   18070:	b002      	add	sp, #8
   18072:	bd10      	pop	{r4, pc}

00018074 <os_memblock_get>:
    return 1;
}

void *
os_memblock_get(struct os_mempool *mp)
{
   18074:	b538      	push	{r3, r4, r5, lr}

    os_trace_api_u32(OS_TRACE_ID_MEMBLOCK_GET, (uint32_t)mp);

    /* Check to make sure they passed in a memory pool (or something) */
    block = NULL;
    if (mp) {
   18076:	b1a0      	cbz	r0, 180a2 <os_memblock_get+0x2e>
   18078:	4604      	mov	r4, r0
        OS_ENTER_CRITICAL(sr);
   1807a:	f000 fd3f 	bl	18afc <os_arch_save_sr>
        /* Check for any free */
        if (mp->mp_num_free) {
   1807e:	88e3      	ldrh	r3, [r4, #6]
   18080:	b153      	cbz	r3, 18098 <os_memblock_get+0x24>
            /* Get a free block */
            block = SLIST_FIRST(mp);
   18082:	6965      	ldr	r5, [r4, #20]

            /* Set new free list head */
            SLIST_FIRST(mp) = SLIST_NEXT(block, mb_next);
   18084:	682a      	ldr	r2, [r5, #0]
   18086:	6162      	str	r2, [r4, #20]

            /* Decrement number free by 1 */
            mp->mp_num_free--;
   18088:	3b01      	subs	r3, #1
   1808a:	b29b      	uxth	r3, r3
   1808c:	80e3      	strh	r3, [r4, #6]
            if (mp->mp_min_free > mp->mp_num_free) {
   1808e:	8922      	ldrh	r2, [r4, #8]
   18090:	4293      	cmp	r3, r2
   18092:	d202      	bcs.n	1809a <os_memblock_get+0x26>
                mp->mp_min_free = mp->mp_num_free;
   18094:	8123      	strh	r3, [r4, #8]
   18096:	e000      	b.n	1809a <os_memblock_get+0x26>
    block = NULL;
   18098:	2500      	movs	r5, #0
            }
        }
        OS_EXIT_CRITICAL(sr);
   1809a:	f000 fd35 	bl	18b08 <os_arch_restore_sr>
    }

    os_trace_api_ret_u32(OS_TRACE_ID_MEMBLOCK_GET, (uint32_t)block);

    return (void *)block;
}
   1809e:	4628      	mov	r0, r5
   180a0:	bd38      	pop	{r3, r4, r5, pc}
    block = NULL;
   180a2:	2500      	movs	r5, #0
    return (void *)block;
   180a4:	e7fb      	b.n	1809e <os_memblock_get+0x2a>

000180a6 <os_memblock_put_from_cb>:

os_error_t
os_memblock_put_from_cb(struct os_mempool *mp, void *block_addr)
{
   180a6:	b538      	push	{r3, r4, r5, lr}
   180a8:	4604      	mov	r4, r0
   180aa:	460d      	mov	r5, r1

    os_mempool_guard_check(mp, block_addr);
    os_mempool_poison(mp, block_addr);

    block = (struct os_memblock *)block_addr;
    OS_ENTER_CRITICAL(sr);
   180ac:	f000 fd26 	bl	18afc <os_arch_save_sr>

    /* Chain current free list pointer to this block; make this block head */
    SLIST_NEXT(block, mb_next) = SLIST_FIRST(mp);
   180b0:	6963      	ldr	r3, [r4, #20]
   180b2:	602b      	str	r3, [r5, #0]
    SLIST_FIRST(mp) = block;
   180b4:	6165      	str	r5, [r4, #20]

    /* XXX: Should we check that the number free <= number blocks? */
    /* Increment number free */
    mp->mp_num_free++;
   180b6:	88e3      	ldrh	r3, [r4, #6]
   180b8:	3301      	adds	r3, #1
   180ba:	80e3      	strh	r3, [r4, #6]

    OS_EXIT_CRITICAL(sr);
   180bc:	f000 fd24 	bl	18b08 <os_arch_restore_sr>

    os_trace_api_ret_u32(OS_TRACE_ID_MEMBLOCK_PUT_FROM_CB, (uint32_t)OS_OK);

    return OS_OK;
}
   180c0:	2000      	movs	r0, #0
   180c2:	bd38      	pop	{r3, r4, r5, pc}

000180c4 <os_memblock_put>:

    os_trace_api_u32x2(OS_TRACE_ID_MEMBLOCK_PUT, (uint32_t)mp,
                       (uint32_t)block_addr);

    /* Make sure parameters are valid */
    if ((mp == NULL) || (block_addr == NULL)) {
   180c4:	b168      	cbz	r0, 180e2 <os_memblock_put+0x1e>
{
   180c6:	b508      	push	{r3, lr}
    if ((mp == NULL) || (block_addr == NULL)) {
   180c8:	b169      	cbz	r1, 180e6 <os_memblock_put+0x22>
    }
#endif
    /* If this is an extended mempool with a put callback, call the callback
     * instead of freeing the block directly.
     */
    if (mp->mp_flags & OS_MEMPOOL_F_EXT) {
   180ca:	7a83      	ldrb	r3, [r0, #10]
   180cc:	f013 0f01 	tst.w	r3, #1
   180d0:	d004      	beq.n	180dc <os_memblock_put+0x18>
        mpe = (struct os_mempool_ext *)mp;
        if (mpe->mpe_put_cb != NULL) {
   180d2:	69c3      	ldr	r3, [r0, #28]
   180d4:	b113      	cbz	r3, 180dc <os_memblock_put+0x18>
            ret = mpe->mpe_put_cb(mpe, block_addr, mpe->mpe_put_arg);
   180d6:	6a02      	ldr	r2, [r0, #32]
   180d8:	4798      	blx	r3
    ret = os_memblock_put_from_cb(mp, block_addr);

done:
    os_trace_api_ret_u32(OS_TRACE_ID_MEMBLOCK_PUT, (uint32_t)ret);
    return ret;
}
   180da:	bd08      	pop	{r3, pc}
    ret = os_memblock_put_from_cb(mp, block_addr);
   180dc:	f7ff ffe3 	bl	180a6 <os_memblock_put_from_cb>
   180e0:	e7fb      	b.n	180da <os_memblock_put+0x16>
        ret = OS_INVALID_PARM;
   180e2:	2003      	movs	r0, #3
}
   180e4:	4770      	bx	lr
        ret = OS_INVALID_PARM;
   180e6:	2003      	movs	r0, #3
   180e8:	e7f7      	b.n	180da <os_memblock_put+0x16>
	...

000180ec <os_mempool_module_init>:
}

void
os_mempool_module_init(void)
{
    STAILQ_INIT(&g_os_mempool_list);
   180ec:	4b02      	ldr	r3, [pc, #8]	; (180f8 <os_mempool_module_init+0xc>)
   180ee:	2200      	movs	r2, #0
   180f0:	601a      	str	r2, [r3, #0]
   180f2:	605b      	str	r3, [r3, #4]
}
   180f4:	4770      	bx	lr
   180f6:	bf00      	nop
   180f8:	20009e38 	.word	0x20009e38

000180fc <os_msys_find_biggest_pool>:

static struct os_mbuf_pool *
os_msys_find_biggest_pool(void)
{
    /* Mempools are sorted by the blocksize, so just return last one */
    return STAILQ_LAST(&g_msys_pool_list, os_mbuf_pool, omp_next);
   180fc:	4b02      	ldr	r3, [pc, #8]	; (18108 <os_msys_find_biggest_pool+0xc>)
   180fe:	6818      	ldr	r0, [r3, #0]
   18100:	b108      	cbz	r0, 18106 <os_msys_find_biggest_pool+0xa>
   18102:	6858      	ldr	r0, [r3, #4]
   18104:	3808      	subs	r0, #8
}
   18106:	4770      	bx	lr
   18108:	20000104 	.word	0x20000104

0001810c <os_msys_find_pool>:
os_msys_find_pool(uint16_t dsize)
{
    struct os_mbuf_pool *pool;

    pool = NULL;
    STAILQ_FOREACH(pool, &g_msys_pool_list, omp_next) {
   1810c:	4b09      	ldr	r3, [pc, #36]	; (18134 <os_msys_find_pool+0x28>)
   1810e:	6819      	ldr	r1, [r3, #0]
   18110:	460b      	mov	r3, r1
   18112:	b123      	cbz	r3, 1811e <os_msys_find_pool+0x12>
        if (dsize <= pool->omp_databuf_len) {
   18114:	881a      	ldrh	r2, [r3, #0]
   18116:	4282      	cmp	r2, r0
   18118:	d201      	bcs.n	1811e <os_msys_find_pool+0x12>
    STAILQ_FOREACH(pool, &g_msys_pool_list, omp_next) {
   1811a:	689b      	ldr	r3, [r3, #8]
   1811c:	e7f9      	b.n	18112 <os_msys_find_pool+0x6>
            break;
        }
    }

    if (!pool) {
   1811e:	b10b      	cbz	r3, 18124 <os_msys_find_pool+0x18>
        pool = STAILQ_LAST(&g_msys_pool_list, os_mbuf_pool, omp_next);
    }

    return (pool);
}
   18120:	4618      	mov	r0, r3
   18122:	4770      	bx	lr
        pool = STAILQ_LAST(&g_msys_pool_list, os_mbuf_pool, omp_next);
   18124:	b119      	cbz	r1, 1812e <os_msys_find_pool+0x22>
   18126:	4b03      	ldr	r3, [pc, #12]	; (18134 <os_msys_find_pool+0x28>)
   18128:	685b      	ldr	r3, [r3, #4]
   1812a:	3b08      	subs	r3, #8
   1812c:	e7f8      	b.n	18120 <os_msys_find_pool+0x14>
   1812e:	460b      	mov	r3, r1
    return (pool);
   18130:	e7f6      	b.n	18120 <os_msys_find_pool+0x14>
   18132:	bf00      	nop
   18134:	20000104 	.word	0x20000104

00018138 <os_msys_register>:
{
   18138:	b430      	push	{r4, r5}
    STAILQ_FOREACH(pool, &g_msys_pool_list, omp_next) {
   1813a:	4b11      	ldr	r3, [pc, #68]	; (18180 <os_msys_register+0x48>)
   1813c:	681d      	ldr	r5, [r3, #0]
   1813e:	462b      	mov	r3, r5
    prev = NULL;
   18140:	2400      	movs	r4, #0
    STAILQ_FOREACH(pool, &g_msys_pool_list, omp_next) {
   18142:	b133      	cbz	r3, 18152 <os_msys_register+0x1a>
        if (new_pool->omp_databuf_len < pool->omp_databuf_len) {
   18144:	8801      	ldrh	r1, [r0, #0]
   18146:	881a      	ldrh	r2, [r3, #0]
   18148:	4291      	cmp	r1, r2
   1814a:	d302      	bcc.n	18152 <os_msys_register+0x1a>
        prev = pool;
   1814c:	461c      	mov	r4, r3
    STAILQ_FOREACH(pool, &g_msys_pool_list, omp_next) {
   1814e:	689b      	ldr	r3, [r3, #8]
   18150:	e7f7      	b.n	18142 <os_msys_register+0xa>
    if (prev) {
   18152:	b15c      	cbz	r4, 1816c <os_msys_register+0x34>
        STAILQ_INSERT_AFTER(&g_msys_pool_list, prev, new_pool, omp_next);
   18154:	68a3      	ldr	r3, [r4, #8]
   18156:	6083      	str	r3, [r0, #8]
   18158:	b11b      	cbz	r3, 18162 <os_msys_register+0x2a>
   1815a:	60a0      	str	r0, [r4, #8]
}
   1815c:	2000      	movs	r0, #0
   1815e:	bc30      	pop	{r4, r5}
   18160:	4770      	bx	lr
        STAILQ_INSERT_AFTER(&g_msys_pool_list, prev, new_pool, omp_next);
   18162:	f100 0308 	add.w	r3, r0, #8
   18166:	4a06      	ldr	r2, [pc, #24]	; (18180 <os_msys_register+0x48>)
   18168:	6053      	str	r3, [r2, #4]
   1816a:	e7f6      	b.n	1815a <os_msys_register+0x22>
        STAILQ_INSERT_HEAD(&g_msys_pool_list, new_pool, omp_next);
   1816c:	6085      	str	r5, [r0, #8]
   1816e:	b115      	cbz	r5, 18176 <os_msys_register+0x3e>
   18170:	4b03      	ldr	r3, [pc, #12]	; (18180 <os_msys_register+0x48>)
   18172:	6018      	str	r0, [r3, #0]
   18174:	e7f2      	b.n	1815c <os_msys_register+0x24>
   18176:	f100 0308 	add.w	r3, r0, #8
   1817a:	4a01      	ldr	r2, [pc, #4]	; (18180 <os_msys_register+0x48>)
   1817c:	6053      	str	r3, [r2, #4]
   1817e:	e7f7      	b.n	18170 <os_msys_register+0x38>
   18180:	20000104 	.word	0x20000104

00018184 <os_msys_init_once>:

static void
os_msys_init_once(void *data, struct os_mempool *mempool,
                  struct os_mbuf_pool *mbuf_pool,
                  int block_count, int block_size, char *name)
{
   18184:	b530      	push	{r4, r5, lr}
   18186:	b083      	sub	sp, #12
   18188:	4614      	mov	r4, r2
    int rc;

    rc = mem_init_mbuf_pool(data, mempool, mbuf_pool, block_count, block_size,
   1818a:	9d07      	ldr	r5, [sp, #28]
   1818c:	9501      	str	r5, [sp, #4]
   1818e:	9d06      	ldr	r5, [sp, #24]
   18190:	9500      	str	r5, [sp, #0]
   18192:	f001 f96d 	bl	19470 <mem_init_mbuf_pool>
                            name);
    SYSINIT_PANIC_ASSERT(rc == 0);
   18196:	b138      	cbz	r0, 181a8 <os_msys_init_once+0x24>
   18198:	2000      	movs	r0, #0
   1819a:	9000      	str	r0, [sp, #0]
   1819c:	4b09      	ldr	r3, [pc, #36]	; (181c4 <os_msys_init_once+0x40>)
   1819e:	681d      	ldr	r5, [r3, #0]
   181a0:	4603      	mov	r3, r0
   181a2:	4602      	mov	r2, r0
   181a4:	4601      	mov	r1, r0
   181a6:	47a8      	blx	r5

    rc = os_msys_register(mbuf_pool);
   181a8:	4620      	mov	r0, r4
   181aa:	f7ff ffc5 	bl	18138 <os_msys_register>
    SYSINIT_PANIC_ASSERT(rc == 0);
   181ae:	b138      	cbz	r0, 181c0 <os_msys_init_once+0x3c>
   181b0:	2000      	movs	r0, #0
   181b2:	9000      	str	r0, [sp, #0]
   181b4:	4b03      	ldr	r3, [pc, #12]	; (181c4 <os_msys_init_once+0x40>)
   181b6:	681c      	ldr	r4, [r3, #0]
   181b8:	4603      	mov	r3, r0
   181ba:	4602      	mov	r2, r0
   181bc:	4601      	mov	r1, r0
   181be:	47a0      	blx	r4
}
   181c0:	b003      	add	sp, #12
   181c2:	bd30      	pop	{r4, r5, pc}
   181c4:	200000fc 	.word	0x200000fc

000181c8 <os_msys_reset>:
    STAILQ_INIT(&g_msys_pool_list);
   181c8:	4b02      	ldr	r3, [pc, #8]	; (181d4 <os_msys_reset+0xc>)
   181ca:	2200      	movs	r2, #0
   181cc:	601a      	str	r2, [r3, #0]
   181ce:	605b      	str	r3, [r3, #4]
}
   181d0:	4770      	bx	lr
   181d2:	bf00      	nop
   181d4:	20000104 	.word	0x20000104

000181d8 <os_msys_get_pkthdr>:
{
   181d8:	b510      	push	{r4, lr}
   181da:	460c      	mov	r4, r1
    if (dsize == 0) {
   181dc:	b930      	cbnz	r0, 181ec <os_msys_get_pkthdr+0x14>
        pool = os_msys_find_biggest_pool();
   181de:	f7ff ff8d 	bl	180fc <os_msys_find_biggest_pool>
    if (!pool) {
   181e2:	b158      	cbz	r0, 181fc <os_msys_get_pkthdr+0x24>
    m = os_mbuf_get_pkthdr(pool, user_hdr_len);
   181e4:	b2e1      	uxtb	r1, r4
   181e6:	f7ff fe0e 	bl	17e06 <os_mbuf_get_pkthdr>
}
   181ea:	bd10      	pop	{r4, pc}
   181ec:	f101 0308 	add.w	r3, r1, #8
   181f0:	b29b      	uxth	r3, r3
        pool = os_msys_find_pool(dsize + total_pkthdr_len);
   181f2:	4403      	add	r3, r0
   181f4:	b298      	uxth	r0, r3
   181f6:	f7ff ff89 	bl	1810c <os_msys_find_pool>
   181fa:	e7f2      	b.n	181e2 <os_msys_get_pkthdr+0xa>
    return (NULL);
   181fc:	2000      	movs	r0, #0
   181fe:	e7f4      	b.n	181ea <os_msys_get_pkthdr+0x12>

00018200 <os_msys_init>:

void
os_msys_init(void)
{
   18200:	b500      	push	{lr}
   18202:	b083      	sub	sp, #12
    int rc;

    os_msys_reset();
   18204:	f7ff ffe0 	bl	181c8 <os_msys_reset>

    (void)os_msys_init_once;
    (void)rc;

#if MYNEWT_VAL(MSYS_1_BLOCK_COUNT) > 0
    os_msys_init_once(os_msys_1_data,
   18208:	4b06      	ldr	r3, [pc, #24]	; (18224 <os_msys_init+0x24>)
   1820a:	9301      	str	r3, [sp, #4]
   1820c:	f44f 7392 	mov.w	r3, #292	; 0x124
   18210:	9300      	str	r3, [sp, #0]
   18212:	2340      	movs	r3, #64	; 0x40
   18214:	4a04      	ldr	r2, [pc, #16]	; (18228 <os_msys_init+0x28>)
   18216:	4905      	ldr	r1, [pc, #20]	; (1822c <os_msys_init+0x2c>)
   18218:	4805      	ldr	r0, [pc, #20]	; (18230 <os_msys_init+0x30>)
   1821a:	f7ff ffb3 	bl	18184 <os_msys_init_once>
    os_msys_sc.sc_checkin_itvl =
        OS_TICKS_PER_SEC * MYNEWT_VAL(MSYS_SANITY_TIMEOUT) / 1000;
    rc = os_sanity_check_register(&os_msys_sc);
    SYSINIT_PANIC_ASSERT(rc == 0);
#endif
}
   1821e:	b003      	add	sp, #12
   18220:	f85d fb04 	ldr.w	pc, [sp], #4
   18224:	0001f814 	.word	0x0001f814
   18228:	20009928 	.word	0x20009928
   1822c:	20009934 	.word	0x20009934
   18230:	20005028 	.word	0x20005028

00018234 <os_mutex_init>:
os_error_t
os_mutex_init(struct os_mutex *mu)
{
    os_error_t ret;

    if (!mu) {
   18234:	4603      	mov	r3, r0
   18236:	b128      	cbz	r0, 18244 <os_mutex_init+0x10>
    }

    os_trace_api_u32(OS_TRACE_ID_MUTEX_INIT, (uint32_t)mu);

    /* Initialize to 0 */
    mu->mu_prio = 0;
   18238:	2000      	movs	r0, #0
   1823a:	7158      	strb	r0, [r3, #5]
    mu->mu_level = 0;
   1823c:	80d8      	strh	r0, [r3, #6]
    mu->mu_owner = NULL;
   1823e:	6098      	str	r0, [r3, #8]
    SLIST_FIRST(&mu->mu_head) = NULL;
   18240:	6018      	str	r0, [r3, #0]
   18242:	4770      	bx	lr
        ret = OS_INVALID_PARM;
   18244:	2003      	movs	r0, #3
    ret = OS_OK;

done:
    os_trace_api_ret_u32(OS_TRACE_ID_MUTEX_INIT, (uint32_t)ret);
    return ret;
}
   18246:	4770      	bx	lr

00018248 <os_mutex_release>:

os_error_t
os_mutex_release(struct os_mutex *mu)
{
   18248:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    os_error_t ret;

    os_trace_api_u32(OS_TRACE_ID_MUTEX_RELEASE, (uint32_t)mu);

    /* Check if OS is started */
    if (!g_os_started) {
   1824a:	4b2c      	ldr	r3, [pc, #176]	; (182fc <os_mutex_release+0xb4>)
   1824c:	681b      	ldr	r3, [r3, #0]
   1824e:	2b00      	cmp	r3, #0
   18250:	d04d      	beq.n	182ee <os_mutex_release+0xa6>
        ret = OS_NOT_STARTED;
        goto done;
    }

    /* Check for valid mutex */
    if (!mu) {
   18252:	2800      	cmp	r0, #0
   18254:	d04d      	beq.n	182f2 <os_mutex_release+0xaa>
   18256:	4604      	mov	r4, r0
        ret = OS_INVALID_PARM;
        goto done;
    }

    /* We better own this mutex! */
    current = os_sched_get_current_task();
   18258:	f000 f97a 	bl	18550 <os_sched_get_current_task>
   1825c:	4605      	mov	r5, r0
    if ((mu->mu_level == 0) || (mu->mu_owner != current)) {
   1825e:	88e3      	ldrh	r3, [r4, #6]
   18260:	2b00      	cmp	r3, #0
   18262:	d048      	beq.n	182f6 <os_mutex_release+0xae>
   18264:	68a2      	ldr	r2, [r4, #8]
   18266:	4282      	cmp	r2, r0
   18268:	d001      	beq.n	1826e <os_mutex_release+0x26>
        ret = OS_BAD_MUTEX;
   1826a:	2005      	movs	r0, #5
   1826c:	e040      	b.n	182f0 <os_mutex_release+0xa8>
        goto done;
    }

    /* Don't release if nested, just decrement nesting level */
    if (mu->mu_level != 1) {
   1826e:	2b01      	cmp	r3, #1
   18270:	d003      	beq.n	1827a <os_mutex_release+0x32>
        --mu->mu_level;
   18272:	3b01      	subs	r3, #1
   18274:	80e3      	strh	r3, [r4, #6]
        ret = OS_OK;
   18276:	2000      	movs	r0, #0
        goto done;
   18278:	e03a      	b.n	182f0 <os_mutex_release+0xa8>
    }

    OS_ENTER_CRITICAL(sr);
   1827a:	f000 fc3f 	bl	18afc <os_arch_save_sr>
   1827e:	4607      	mov	r7, r0

    /* Decrement nesting level (this effectively sets nesting level to 0) */
    --mu->mu_level;
   18280:	88e3      	ldrh	r3, [r4, #6]
   18282:	3b01      	subs	r3, #1
   18284:	80e3      	strh	r3, [r4, #6]

    /* Restore owner task's priority; resort list if different  */
    if (current->t_prio != mu->mu_prio) {
   18286:	7aea      	ldrb	r2, [r5, #11]
   18288:	7963      	ldrb	r3, [r4, #5]
   1828a:	429a      	cmp	r2, r3
   1828c:	d11e      	bne.n	182cc <os_mutex_release+0x84>
        current->t_prio = mu->mu_prio;
        os_sched_resort(current);
    }

    /* Check if tasks are waiting for the mutex */
    rdy = SLIST_FIRST(&mu->mu_head);
   1828e:	6826      	ldr	r6, [r4, #0]
    if (rdy) {
   18290:	b146      	cbz	r6, 182a4 <os_mutex_release+0x5c>
        /* There is one waiting. Wake it up */
        assert(rdy->t_obj);
   18292:	69f3      	ldr	r3, [r6, #28]
   18294:	b1fb      	cbz	r3, 182d6 <os_mutex_release+0x8e>
        os_sched_wakeup(rdy);
   18296:	4630      	mov	r0, r6
   18298:	f000 f9ae 	bl	185f8 <os_sched_wakeup>

        /* Set mutex internals */
        mu->mu_level = 1;
   1829c:	2301      	movs	r3, #1
   1829e:	80e3      	strh	r3, [r4, #6]
        mu->mu_prio = rdy->t_prio;
   182a0:	7af3      	ldrb	r3, [r6, #11]
   182a2:	7163      	strb	r3, [r4, #5]
    }

    /* Set new owner of mutex (or NULL if not owned) */
    mu->mu_owner = rdy;
   182a4:	60a6      	str	r6, [r4, #8]
    if (rdy) {
   182a6:	b116      	cbz	r6, 182ae <os_mutex_release+0x66>
        rdy->t_lockcnt++;
   182a8:	7bb3      	ldrb	r3, [r6, #14]
   182aa:	3301      	adds	r3, #1
   182ac:	73b3      	strb	r3, [r6, #14]
    }
    --current->t_lockcnt;
   182ae:	7bab      	ldrb	r3, [r5, #14]
   182b0:	3b01      	subs	r3, #1
   182b2:	73ab      	strb	r3, [r5, #14]

    /* Do we need to re-schedule? */
    resched = 0;
    rdy = os_sched_next_task();
   182b4:	f000 fa1a 	bl	186ec <os_sched_next_task>
   182b8:	4604      	mov	r4, r0
    if (rdy != current) {
   182ba:	4285      	cmp	r5, r0
   182bc:	d010      	beq.n	182e0 <os_mutex_release+0x98>
        resched = 1;
   182be:	2501      	movs	r5, #1
    }
    OS_EXIT_CRITICAL(sr);
   182c0:	4638      	mov	r0, r7
   182c2:	f000 fc21 	bl	18b08 <os_arch_restore_sr>

    /* Re-schedule if needed */
    if (resched) {
   182c6:	b96d      	cbnz	r5, 182e4 <os_mutex_release+0x9c>
        os_sched(rdy);
    }

    ret = OS_OK;
   182c8:	2000      	movs	r0, #0
   182ca:	e011      	b.n	182f0 <os_mutex_release+0xa8>
        current->t_prio = mu->mu_prio;
   182cc:	72eb      	strb	r3, [r5, #11]
        os_sched_resort(current);
   182ce:	4628      	mov	r0, r5
   182d0:	f000 fa24 	bl	1871c <os_sched_resort>
   182d4:	e7db      	b.n	1828e <os_mutex_release+0x46>
        assert(rdy->t_obj);
   182d6:	461a      	mov	r2, r3
   182d8:	4619      	mov	r1, r3
   182da:	4618      	mov	r0, r3
   182dc:	f7ff f978 	bl	175d0 <__assert_func>
    resched = 0;
   182e0:	2500      	movs	r5, #0
   182e2:	e7ed      	b.n	182c0 <os_mutex_release+0x78>
        os_sched(rdy);
   182e4:	4620      	mov	r0, r4
   182e6:	f000 fa07 	bl	186f8 <os_sched>
    ret = OS_OK;
   182ea:	2000      	movs	r0, #0
   182ec:	e000      	b.n	182f0 <os_mutex_release+0xa8>
        ret = OS_NOT_STARTED;
   182ee:	2009      	movs	r0, #9

done:
    os_trace_api_ret_u32(OS_TRACE_ID_MUTEX_RELEASE, (uint32_t)ret);
    return ret;
}
   182f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        ret = OS_INVALID_PARM;
   182f2:	2003      	movs	r0, #3
   182f4:	e7fc      	b.n	182f0 <os_mutex_release+0xa8>
        ret = OS_BAD_MUTEX;
   182f6:	2005      	movs	r0, #5
   182f8:	e7fa      	b.n	182f0 <os_mutex_release+0xa8>
   182fa:	bf00      	nop
   182fc:	20009e28 	.word	0x20009e28

00018300 <os_mutex_pend>:
    struct os_task *last;

    os_trace_api_u32x2(OS_TRACE_ID_MUTEX_PEND, (uint32_t)mu, (uint32_t)timeout);

    /* OS must be started when calling this function */
    if (!g_os_started) {
   18300:	4b36      	ldr	r3, [pc, #216]	; (183dc <os_mutex_pend+0xdc>)
   18302:	681b      	ldr	r3, [r3, #0]
   18304:	2b00      	cmp	r3, #0
   18306:	d065      	beq.n	183d4 <os_mutex_pend+0xd4>
        ret = OS_NOT_STARTED;
        goto done;
    }

    /* Check for valid mutex */
    if (!mu) {
   18308:	2800      	cmp	r0, #0
   1830a:	d065      	beq.n	183d8 <os_mutex_pend+0xd8>
{
   1830c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   18310:	460f      	mov	r7, r1
   18312:	4604      	mov	r4, r0
        ret = OS_INVALID_PARM;
        goto done;
    }

    OS_ENTER_CRITICAL(sr);
   18314:	f000 fbf2 	bl	18afc <os_arch_save_sr>
   18318:	4680      	mov	r8, r0

    /* Is this owned? */
    current = os_sched_get_current_task();
   1831a:	f000 f919 	bl	18550 <os_sched_get_current_task>
   1831e:	4605      	mov	r5, r0
    if (mu->mu_level == 0) {
   18320:	88e3      	ldrh	r3, [r4, #6]
   18322:	b19b      	cbz	r3, 1834c <os_mutex_pend+0x4c>
        ret = OS_OK;
        goto done;
    }

    /* Are we owner? */
    if (mu->mu_owner == current) {
   18324:	68a2      	ldr	r2, [r4, #8]
   18326:	4282      	cmp	r2, r0
   18328:	d01e      	beq.n	18368 <os_mutex_pend+0x68>
        ret = OS_OK;
        goto done;
    }

    /* Mutex is not owned by us. If timeout is 0, return immediately */
    if (timeout == 0) {
   1832a:	b327      	cbz	r7, 18376 <os_mutex_pend+0x76>
        ret = OS_TIMEOUT;
        goto done;
    }

    /* Change priority of owner if needed */
    if (mu->mu_owner->t_prio > current->t_prio) {
   1832c:	7ad1      	ldrb	r1, [r2, #11]
   1832e:	7ac3      	ldrb	r3, [r0, #11]
   18330:	4299      	cmp	r1, r3
   18332:	d825      	bhi.n	18380 <os_mutex_pend+0x80>
        os_sched_resort(mu->mu_owner);
    }

    /* Link current task to tasks waiting for mutex */
    last = NULL;
    if (!SLIST_EMPTY(&mu->mu_head)) {
   18334:	6821      	ldr	r1, [r4, #0]
   18336:	b369      	cbz	r1, 18394 <os_mutex_pend+0x94>
        /* Insert in priority order */
        SLIST_FOREACH(entry, &mu->mu_head, t_obj_list) {
   18338:	460b      	mov	r3, r1
    last = NULL;
   1833a:	2600      	movs	r6, #0
        SLIST_FOREACH(entry, &mu->mu_head, t_obj_list) {
   1833c:	b32b      	cbz	r3, 1838a <os_mutex_pend+0x8a>
            if (current->t_prio < entry->t_prio) {
   1833e:	7ae8      	ldrb	r0, [r5, #11]
   18340:	7ada      	ldrb	r2, [r3, #11]
   18342:	4290      	cmp	r0, r2
   18344:	d321      	bcc.n	1838a <os_mutex_pend+0x8a>
                break;
            }
            last = entry;
   18346:	461e      	mov	r6, r3
        SLIST_FOREACH(entry, &mu->mu_head, t_obj_list) {
   18348:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
   1834a:	e7f7      	b.n	1833c <os_mutex_pend+0x3c>
        mu->mu_owner = current;
   1834c:	60a0      	str	r0, [r4, #8]
        mu->mu_prio  = current->t_prio;
   1834e:	7ac3      	ldrb	r3, [r0, #11]
   18350:	7163      	strb	r3, [r4, #5]
        current->t_lockcnt++;
   18352:	7b83      	ldrb	r3, [r0, #14]
   18354:	3301      	adds	r3, #1
   18356:	7383      	strb	r3, [r0, #14]
        mu->mu_level = 1;
   18358:	2301      	movs	r3, #1
   1835a:	80e3      	strh	r3, [r4, #6]
        OS_EXIT_CRITICAL(sr);
   1835c:	4640      	mov	r0, r8
   1835e:	f000 fbd3 	bl	18b08 <os_arch_restore_sr>
        ret = OS_OK;
   18362:	2000      	movs	r0, #0
    }

done:
    os_trace_api_ret_u32(OS_TRACE_ID_MUTEX_PEND, (uint32_t)ret);
    return ret;
}
   18364:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ++mu->mu_level;
   18368:	3301      	adds	r3, #1
   1836a:	80e3      	strh	r3, [r4, #6]
        OS_EXIT_CRITICAL(sr);
   1836c:	4640      	mov	r0, r8
   1836e:	f000 fbcb 	bl	18b08 <os_arch_restore_sr>
        ret = OS_OK;
   18372:	2000      	movs	r0, #0
        goto done;
   18374:	e7f6      	b.n	18364 <os_mutex_pend+0x64>
        OS_EXIT_CRITICAL(sr);
   18376:	4640      	mov	r0, r8
   18378:	f000 fbc6 	bl	18b08 <os_arch_restore_sr>
        ret = OS_TIMEOUT;
   1837c:	2006      	movs	r0, #6
        goto done;
   1837e:	e7f1      	b.n	18364 <os_mutex_pend+0x64>
        mu->mu_owner->t_prio = current->t_prio;
   18380:	72d3      	strb	r3, [r2, #11]
        os_sched_resort(mu->mu_owner);
   18382:	68a0      	ldr	r0, [r4, #8]
   18384:	f000 f9ca 	bl	1871c <os_sched_resort>
   18388:	e7d4      	b.n	18334 <os_mutex_pend+0x34>
    if (last) {
   1838a:	b11e      	cbz	r6, 18394 <os_mutex_pend+0x94>
        SLIST_INSERT_AFTER(last, current, t_obj_list);
   1838c:	6cf3      	ldr	r3, [r6, #76]	; 0x4c
   1838e:	64eb      	str	r3, [r5, #76]	; 0x4c
   18390:	64f5      	str	r5, [r6, #76]	; 0x4c
   18392:	e001      	b.n	18398 <os_mutex_pend+0x98>
        SLIST_INSERT_HEAD(&mu->mu_head, current, t_obj_list);
   18394:	64e9      	str	r1, [r5, #76]	; 0x4c
   18396:	6025      	str	r5, [r4, #0]
    current->t_obj = mu;
   18398:	61ec      	str	r4, [r5, #28]
    current->t_flags |= OS_TASK_FLAG_MUTEX_WAIT;
   1839a:	7b6b      	ldrb	r3, [r5, #13]
   1839c:	f043 0304 	orr.w	r3, r3, #4
   183a0:	736b      	strb	r3, [r5, #13]
    os_sched_sleep(current, timeout);
   183a2:	4639      	mov	r1, r7
   183a4:	4628      	mov	r0, r5
   183a6:	f000 f8df 	bl	18568 <os_sched_sleep>
    OS_EXIT_CRITICAL(sr);
   183aa:	4640      	mov	r0, r8
   183ac:	f000 fbac 	bl	18b08 <os_arch_restore_sr>
    os_sched(NULL);
   183b0:	2000      	movs	r0, #0
   183b2:	f000 f9a1 	bl	186f8 <os_sched>
    OS_ENTER_CRITICAL(sr);
   183b6:	f000 fba1 	bl	18afc <os_arch_save_sr>
    current->t_flags &= ~OS_TASK_FLAG_MUTEX_WAIT;
   183ba:	7b6b      	ldrb	r3, [r5, #13]
   183bc:	f023 0304 	bic.w	r3, r3, #4
   183c0:	736b      	strb	r3, [r5, #13]
    OS_EXIT_CRITICAL(sr);
   183c2:	f000 fba1 	bl	18b08 <os_arch_restore_sr>
    if (mu->mu_owner == current) {
   183c6:	68a3      	ldr	r3, [r4, #8]
   183c8:	42ab      	cmp	r3, r5
   183ca:	d001      	beq.n	183d0 <os_mutex_pend+0xd0>
        ret = OS_TIMEOUT;
   183cc:	2006      	movs	r0, #6
   183ce:	e7c9      	b.n	18364 <os_mutex_pend+0x64>
        ret = OS_OK;
   183d0:	2000      	movs	r0, #0
   183d2:	e7c7      	b.n	18364 <os_mutex_pend+0x64>
        ret = OS_NOT_STARTED;
   183d4:	2009      	movs	r0, #9
   183d6:	4770      	bx	lr
        ret = OS_INVALID_PARM;
   183d8:	2003      	movs	r0, #3
}
   183da:	4770      	bx	lr
   183dc:	20009e28 	.word	0x20009e28

000183e0 <os_sanity_check_list_lock>:
 *
 * @return 0 on success, error code on failure.
 */
static int
os_sanity_check_list_lock(void)
{
   183e0:	b508      	push	{r3, lr}
    int rc;

    if (!g_os_started) {
   183e2:	4b05      	ldr	r3, [pc, #20]	; (183f8 <os_sanity_check_list_lock+0x18>)
   183e4:	6818      	ldr	r0, [r3, #0]
   183e6:	b900      	cbnz	r0, 183ea <os_sanity_check_list_lock+0xa>
    }

    return (0);
err:
    return (rc);
}
   183e8:	bd08      	pop	{r3, pc}
    rc = os_mutex_pend(&g_os_sanity_check_mu, OS_WAIT_FOREVER);
   183ea:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
   183ee:	4803      	ldr	r0, [pc, #12]	; (183fc <os_sanity_check_list_lock+0x1c>)
   183f0:	f7ff ff86 	bl	18300 <os_mutex_pend>
err:
   183f4:	e7f8      	b.n	183e8 <os_sanity_check_list_lock+0x8>
   183f6:	bf00      	nop
   183f8:	20009e28 	.word	0x20009e28
   183fc:	20009e40 	.word	0x20009e40

00018400 <os_sanity_check_list_unlock>:
 *
 * @return 0 on success, error code on failure
 */
static int
os_sanity_check_list_unlock(void)
{
   18400:	b508      	push	{r3, lr}
    int rc;

    if (!g_os_started) {
   18402:	4b04      	ldr	r3, [pc, #16]	; (18414 <os_sanity_check_list_unlock+0x14>)
   18404:	6818      	ldr	r0, [r3, #0]
   18406:	b900      	cbnz	r0, 1840a <os_sanity_check_list_unlock+0xa>
    }

    return (0);
err:
    return (rc);
}
   18408:	bd08      	pop	{r3, pc}
    rc = os_mutex_release(&g_os_sanity_check_mu);
   1840a:	4803      	ldr	r0, [pc, #12]	; (18418 <os_sanity_check_list_unlock+0x18>)
   1840c:	f7ff ff1c 	bl	18248 <os_mutex_release>
err:
   18410:	e7fa      	b.n	18408 <os_sanity_check_list_unlock+0x8>
   18412:	bf00      	nop
   18414:	20009e28 	.word	0x20009e28
   18418:	20009e40 	.word	0x20009e40

0001841c <os_sanity_check_init>:
    memset(sc, 0, sizeof(*sc));
   1841c:	2300      	movs	r3, #0
   1841e:	6003      	str	r3, [r0, #0]
   18420:	6043      	str	r3, [r0, #4]
   18422:	6083      	str	r3, [r0, #8]
   18424:	60c3      	str	r3, [r0, #12]
   18426:	6103      	str	r3, [r0, #16]
}
   18428:	4618      	mov	r0, r3
   1842a:	4770      	bx	lr

0001842c <os_sanity_check_register>:
}


int
os_sanity_check_register(struct os_sanity_check *sc)
{
   1842c:	b510      	push	{r4, lr}
   1842e:	4604      	mov	r4, r0
    int rc;

    rc = os_sanity_check_list_lock();
   18430:	f7ff ffd6 	bl	183e0 <os_sanity_check_list_lock>
    if (rc != OS_OK) {
   18434:	4603      	mov	r3, r0
   18436:	b108      	cbz	r0, 1843c <os_sanity_check_register+0x10>
    }

    return (0);
err:
    return (rc);
}
   18438:	4618      	mov	r0, r3
   1843a:	bd10      	pop	{r4, pc}
    SLIST_INSERT_HEAD(&g_os_sanity_check_list, sc, sc_next);
   1843c:	4b03      	ldr	r3, [pc, #12]	; (1844c <os_sanity_check_register+0x20>)
   1843e:	681a      	ldr	r2, [r3, #0]
   18440:	6122      	str	r2, [r4, #16]
   18442:	601c      	str	r4, [r3, #0]
    rc = os_sanity_check_list_unlock();
   18444:	f7ff ffdc 	bl	18400 <os_sanity_check_list_unlock>
   18448:	4603      	mov	r3, r0
err:
   1844a:	e7f5      	b.n	18438 <os_sanity_check_register+0xc>
   1844c:	20009950 	.word	0x20009950

00018450 <os_sanity_run>:
 * Goes through the sanity check list, and performs sanity checks.  If any of
 * these checks failed, or tasks have not checked in, it resets the processor.
 */
void
os_sanity_run(void)
{
   18450:	b510      	push	{r4, lr}
    struct os_sanity_check *sc;
    int rc;

    rc = os_sanity_check_list_lock();
   18452:	f7ff ffc5 	bl	183e0 <os_sanity_check_list_lock>
    if (rc != 0) {
   18456:	b910      	cbnz	r0, 1845e <os_sanity_run+0xe>
        assert(0);
    }

    SLIST_FOREACH(sc, &g_os_sanity_check_list, sc_next) {
   18458:	4b17      	ldr	r3, [pc, #92]	; (184b8 <os_sanity_run+0x68>)
   1845a:	681c      	ldr	r4, [r3, #0]
   1845c:	e00e      	b.n	1847c <os_sanity_run+0x2c>
        assert(0);
   1845e:	2300      	movs	r3, #0
   18460:	461a      	mov	r2, r3
   18462:	4619      	mov	r1, r3
   18464:	4618      	mov	r0, r3
   18466:	f7ff f8b3 	bl	175d0 <__assert_func>
                sc->sc_checkin_last = os_time_get();
                continue;
            }
        }

        if (OS_TIME_TICK_GT(os_time_get(),
   1846a:	f000 facf 	bl	18a0c <os_time_get>
   1846e:	6823      	ldr	r3, [r4, #0]
   18470:	6862      	ldr	r2, [r4, #4]
   18472:	4413      	add	r3, r2
   18474:	1ac3      	subs	r3, r0, r3
   18476:	2b00      	cmp	r3, #0
   18478:	dc0d      	bgt.n	18496 <os_sanity_run+0x46>
    SLIST_FOREACH(sc, &g_os_sanity_check_list, sc_next) {
   1847a:	6924      	ldr	r4, [r4, #16]
   1847c:	b18c      	cbz	r4, 184a2 <os_sanity_run+0x52>
        if (sc->sc_func) {
   1847e:	68a3      	ldr	r3, [r4, #8]
   18480:	2b00      	cmp	r3, #0
   18482:	d0f2      	beq.n	1846a <os_sanity_run+0x1a>
            rc = sc->sc_func(sc, sc->sc_arg);
   18484:	68e1      	ldr	r1, [r4, #12]
   18486:	4620      	mov	r0, r4
   18488:	4798      	blx	r3
            if (rc == OS_OK) {
   1848a:	2800      	cmp	r0, #0
   1848c:	d1ed      	bne.n	1846a <os_sanity_run+0x1a>
                sc->sc_checkin_last = os_time_get();
   1848e:	f000 fabd 	bl	18a0c <os_time_get>
   18492:	6020      	str	r0, [r4, #0]
                continue;
   18494:	e7f1      	b.n	1847a <os_sanity_run+0x2a>
                    sc->sc_checkin_last + sc->sc_checkin_itvl)) {
            assert(0);
   18496:	2300      	movs	r3, #0
   18498:	461a      	mov	r2, r3
   1849a:	4619      	mov	r1, r3
   1849c:	4618      	mov	r0, r3
   1849e:	f7ff f897 	bl	175d0 <__assert_func>
        }
    }

    rc = os_sanity_check_list_unlock();
   184a2:	f7ff ffad 	bl	18400 <os_sanity_check_list_unlock>
    if (rc != 0) {
   184a6:	b900      	cbnz	r0, 184aa <os_sanity_run+0x5a>
        assert(0);
    }
}
   184a8:	bd10      	pop	{r4, pc}
        assert(0);
   184aa:	2300      	movs	r3, #0
   184ac:	461a      	mov	r2, r3
   184ae:	4619      	mov	r1, r3
   184b0:	4618      	mov	r0, r3
   184b2:	f7ff f88d 	bl	175d0 <__assert_func>
   184b6:	bf00      	nop
   184b8:	20009950 	.word	0x20009950

000184bc <os_sanity_init>:

int
os_sanity_init(void)
{
   184bc:	b508      	push	{r3, lr}
    int rc;

    rc = os_mutex_init(&g_os_sanity_check_mu);
   184be:	4802      	ldr	r0, [pc, #8]	; (184c8 <os_sanity_init+0xc>)
   184c0:	f7ff feb8 	bl	18234 <os_mutex_init>
    }

    return (0);
err:
    return (rc);
}
   184c4:	bd08      	pop	{r3, pc}
   184c6:	bf00      	nop
   184c8:	20009e40 	.word	0x20009e40

000184cc <os_sched_insert>:
{
    struct os_task *entry;
    os_sr_t sr;
    os_error_t rc;

    if (t->t_state != OS_TASK_READY) {
   184cc:	7b03      	ldrb	r3, [r0, #12]
   184ce:	2b01      	cmp	r3, #1
   184d0:	d001      	beq.n	184d6 <os_sched_insert+0xa>
    }
    OS_EXIT_CRITICAL(sr);

    return (0);
err:
    return (rc);
   184d2:	2002      	movs	r0, #2
}
   184d4:	4770      	bx	lr
{
   184d6:	b510      	push	{r4, lr}
   184d8:	4604      	mov	r4, r0
    OS_ENTER_CRITICAL(sr);
   184da:	f000 fb0f 	bl	18afc <os_arch_save_sr>
    TAILQ_FOREACH(entry, &g_os_run_list, t_os_list) {
   184de:	4b0f      	ldr	r3, [pc, #60]	; (1851c <os_sched_insert+0x50>)
   184e0:	681b      	ldr	r3, [r3, #0]
   184e2:	b12b      	cbz	r3, 184f0 <os_sched_insert+0x24>
        if (t->t_prio < entry->t_prio) {
   184e4:	7ae1      	ldrb	r1, [r4, #11]
   184e6:	7ada      	ldrb	r2, [r3, #11]
   184e8:	4291      	cmp	r1, r2
   184ea:	d301      	bcc.n	184f0 <os_sched_insert+0x24>
    TAILQ_FOREACH(entry, &g_os_run_list, t_os_list) {
   184ec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
   184ee:	e7f8      	b.n	184e2 <os_sched_insert+0x16>
    if (entry) {
   184f0:	b153      	cbz	r3, 18508 <os_sched_insert+0x3c>
        TAILQ_INSERT_BEFORE(entry, (struct os_task *) t, t_os_list);
   184f2:	6c9a      	ldr	r2, [r3, #72]	; 0x48
   184f4:	64a2      	str	r2, [r4, #72]	; 0x48
   184f6:	6463      	str	r3, [r4, #68]	; 0x44
   184f8:	6c9a      	ldr	r2, [r3, #72]	; 0x48
   184fa:	6014      	str	r4, [r2, #0]
   184fc:	3444      	adds	r4, #68	; 0x44
   184fe:	649c      	str	r4, [r3, #72]	; 0x48
    OS_EXIT_CRITICAL(sr);
   18500:	f000 fb02 	bl	18b08 <os_arch_restore_sr>
    return (0);
   18504:	2000      	movs	r0, #0
}
   18506:	bd10      	pop	{r4, pc}
        TAILQ_INSERT_TAIL(&g_os_run_list, (struct os_task *) t, t_os_list);
   18508:	2300      	movs	r3, #0
   1850a:	6463      	str	r3, [r4, #68]	; 0x44
   1850c:	4b03      	ldr	r3, [pc, #12]	; (1851c <os_sched_insert+0x50>)
   1850e:	685a      	ldr	r2, [r3, #4]
   18510:	64a2      	str	r2, [r4, #72]	; 0x48
   18512:	6014      	str	r4, [r2, #0]
   18514:	3444      	adds	r4, #68	; 0x44
   18516:	605c      	str	r4, [r3, #4]
   18518:	e7f2      	b.n	18500 <os_sched_insert+0x34>
   1851a:	bf00      	nop
   1851c:	2000010c 	.word	0x2000010c

00018520 <os_sched_ctx_sw_hook>:

void
os_sched_ctx_sw_hook(struct os_task *next_t)
{
   18520:	b410      	push	{r4}
    top = g_current_task->t_stacktop - g_current_task->t_stacksize;
    for (i = 0; i < MYNEWT_VAL(OS_CTX_SW_STACK_GUARD); i++) {
        assert(top[i] == OS_STACK_PATTERN);
    }
#endif
    next_t->t_ctx_sw_cnt++;
   18522:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
   18524:	3301      	adds	r3, #1
   18526:	63c3      	str	r3, [r0, #60]	; 0x3c
    g_current_task->t_run_time += g_os_time - g_os_last_ctx_sw_time;
   18528:	4b06      	ldr	r3, [pc, #24]	; (18544 <os_sched_ctx_sw_hook+0x24>)
   1852a:	681c      	ldr	r4, [r3, #0]
   1852c:	4b06      	ldr	r3, [pc, #24]	; (18548 <os_sched_ctx_sw_hook+0x28>)
   1852e:	6818      	ldr	r0, [r3, #0]
   18530:	4906      	ldr	r1, [pc, #24]	; (1854c <os_sched_ctx_sw_hook+0x2c>)
   18532:	680b      	ldr	r3, [r1, #0]
   18534:	1ac2      	subs	r2, r0, r3
   18536:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   18538:	4413      	add	r3, r2
   1853a:	63a3      	str	r3, [r4, #56]	; 0x38
    g_os_last_ctx_sw_time = g_os_time;
   1853c:	6008      	str	r0, [r1, #0]
}
   1853e:	f85d 4b04 	ldr.w	r4, [sp], #4
   18542:	4770      	bx	lr
   18544:	20009e50 	.word	0x20009e50
   18548:	20009e60 	.word	0x20009e60
   1854c:	20009e4c 	.word	0x20009e4c

00018550 <os_sched_get_current_task>:

struct os_task *
os_sched_get_current_task(void)
{
    return (g_current_task);
}
   18550:	4b01      	ldr	r3, [pc, #4]	; (18558 <os_sched_get_current_task+0x8>)
   18552:	6818      	ldr	r0, [r3, #0]
   18554:	4770      	bx	lr
   18556:	bf00      	nop
   18558:	20009e50 	.word	0x20009e50

0001855c <os_sched_set_current_task>:
 * @param t Pointer to currently running task.
 */
void
os_sched_set_current_task(struct os_task *t)
{
    g_current_task = t;
   1855c:	4b01      	ldr	r3, [pc, #4]	; (18564 <os_sched_set_current_task+0x8>)
   1855e:	6018      	str	r0, [r3, #0]
}
   18560:	4770      	bx	lr
   18562:	bf00      	nop
   18564:	20009e50 	.word	0x20009e50

00018568 <os_sched_sleep>:
 * NOTE: must be called with interrupts disabled! This function does not call
 * the scheduler
 */
int
os_sched_sleep(struct os_task *t, os_time_t nticks)
{
   18568:	b538      	push	{r3, r4, r5, lr}
   1856a:	4604      	mov	r4, r0
   1856c:	460d      	mov	r5, r1
    struct os_task *entry;

    entry = NULL;

    TAILQ_REMOVE(&g_os_run_list, t, t_os_list);
   1856e:	6c43      	ldr	r3, [r0, #68]	; 0x44
   18570:	b1d3      	cbz	r3, 185a8 <os_sched_sleep+0x40>
   18572:	6c82      	ldr	r2, [r0, #72]	; 0x48
   18574:	649a      	str	r2, [r3, #72]	; 0x48
   18576:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   18578:	6c62      	ldr	r2, [r4, #68]	; 0x44
   1857a:	601a      	str	r2, [r3, #0]
    t->t_state = OS_TASK_SLEEP;
   1857c:	2302      	movs	r3, #2
   1857e:	7323      	strb	r3, [r4, #12]
    t->t_next_wakeup = os_time_get() + nticks;
   18580:	f000 fa44 	bl	18a0c <os_time_get>
   18584:	4428      	add	r0, r5
   18586:	6360      	str	r0, [r4, #52]	; 0x34
    if (nticks == OS_TIMEOUT_NEVER) {
   18588:	f1b5 3fff 	cmp.w	r5, #4294967295	; 0xffffffff
   1858c:	d010      	beq.n	185b0 <os_sched_sleep+0x48>
        t->t_flags |= OS_TASK_FLAG_NO_TIMEOUT;
        TAILQ_INSERT_TAIL(&g_os_sleep_list, t, t_os_list);
    } else {
        TAILQ_FOREACH(entry, &g_os_sleep_list, t_os_list) {
   1858e:	4b18      	ldr	r3, [pc, #96]	; (185f0 <os_sched_sleep+0x88>)
   18590:	681b      	ldr	r3, [r3, #0]
   18592:	b1d3      	cbz	r3, 185ca <os_sched_sleep+0x62>
            if ((entry->t_flags & OS_TASK_FLAG_NO_TIMEOUT) ||
   18594:	7b5a      	ldrb	r2, [r3, #13]
   18596:	f012 0f01 	tst.w	r2, #1
   1859a:	d116      	bne.n	185ca <os_sched_sleep+0x62>
                    OS_TIME_TICK_GT(entry->t_next_wakeup, t->t_next_wakeup)) {
   1859c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
   1859e:	1a12      	subs	r2, r2, r0
            if ((entry->t_flags & OS_TASK_FLAG_NO_TIMEOUT) ||
   185a0:	2a00      	cmp	r2, #0
   185a2:	dc12      	bgt.n	185ca <os_sched_sleep+0x62>
        TAILQ_FOREACH(entry, &g_os_sleep_list, t_os_list) {
   185a4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
   185a6:	e7f4      	b.n	18592 <os_sched_sleep+0x2a>
    TAILQ_REMOVE(&g_os_run_list, t, t_os_list);
   185a8:	6c82      	ldr	r2, [r0, #72]	; 0x48
   185aa:	4b12      	ldr	r3, [pc, #72]	; (185f4 <os_sched_sleep+0x8c>)
   185ac:	605a      	str	r2, [r3, #4]
   185ae:	e7e2      	b.n	18576 <os_sched_sleep+0xe>
        t->t_flags |= OS_TASK_FLAG_NO_TIMEOUT;
   185b0:	7b63      	ldrb	r3, [r4, #13]
   185b2:	f043 0301 	orr.w	r3, r3, #1
   185b6:	7363      	strb	r3, [r4, #13]
        TAILQ_INSERT_TAIL(&g_os_sleep_list, t, t_os_list);
   185b8:	2300      	movs	r3, #0
   185ba:	6463      	str	r3, [r4, #68]	; 0x44
   185bc:	4b0c      	ldr	r3, [pc, #48]	; (185f0 <os_sched_sleep+0x88>)
   185be:	685a      	ldr	r2, [r3, #4]
   185c0:	64a2      	str	r2, [r4, #72]	; 0x48
   185c2:	6014      	str	r4, [r2, #0]
   185c4:	3444      	adds	r4, #68	; 0x44
   185c6:	605c      	str	r4, [r3, #4]
   185c8:	e007      	b.n	185da <os_sched_sleep+0x72>
                break;
            }
        }
        if (entry) {
   185ca:	b143      	cbz	r3, 185de <os_sched_sleep+0x76>
            TAILQ_INSERT_BEFORE(entry, t, t_os_list);
   185cc:	6c9a      	ldr	r2, [r3, #72]	; 0x48
   185ce:	64a2      	str	r2, [r4, #72]	; 0x48
   185d0:	6463      	str	r3, [r4, #68]	; 0x44
   185d2:	6c9a      	ldr	r2, [r3, #72]	; 0x48
   185d4:	6014      	str	r4, [r2, #0]
   185d6:	3444      	adds	r4, #68	; 0x44
   185d8:	649c      	str	r4, [r3, #72]	; 0x48
        }
    }

    os_trace_task_stop_ready(t, OS_TASK_SLEEP);
    return (0);
}
   185da:	2000      	movs	r0, #0
   185dc:	bd38      	pop	{r3, r4, r5, pc}
            TAILQ_INSERT_TAIL(&g_os_sleep_list, t, t_os_list);
   185de:	2300      	movs	r3, #0
   185e0:	6463      	str	r3, [r4, #68]	; 0x44
   185e2:	4b03      	ldr	r3, [pc, #12]	; (185f0 <os_sched_sleep+0x88>)
   185e4:	685a      	ldr	r2, [r3, #4]
   185e6:	64a2      	str	r2, [r4, #72]	; 0x48
   185e8:	6014      	str	r4, [r2, #0]
   185ea:	3444      	adds	r4, #68	; 0x44
   185ec:	605c      	str	r4, [r3, #4]
   185ee:	e7f4      	b.n	185da <os_sched_sleep+0x72>
   185f0:	20000114 	.word	0x20000114
   185f4:	2000010c 	.word	0x2000010c

000185f8 <os_sched_wakeup>:
 *
 * NOTE: This function must be called with interrupts disabled.
 */
int
os_sched_wakeup(struct os_task *t)
{
   185f8:	b508      	push	{r3, lr}
    struct os_task_obj *os_obj;

    assert(t->t_state == OS_TASK_SLEEP);
   185fa:	7b03      	ldrb	r3, [r0, #12]
   185fc:	2b02      	cmp	r3, #2
   185fe:	d108      	bne.n	18612 <os_sched_wakeup+0x1a>

    /* Remove self from object list if waiting on one */
    if (t->t_obj) {
   18600:	69c3      	ldr	r3, [r0, #28]
   18602:	b1db      	cbz	r3, 1863c <os_sched_wakeup+0x44>
        os_obj = (struct os_task_obj *)t->t_obj;
        assert(!SLIST_EMPTY(&os_obj->obj_head));
   18604:	681a      	ldr	r2, [r3, #0]
   18606:	b152      	cbz	r2, 1861e <os_sched_wakeup+0x26>
        SLIST_REMOVE(&os_obj->obj_head, t, os_task, t_obj_list);
   18608:	4282      	cmp	r2, r0
   1860a:	d10f      	bne.n	1862c <os_sched_wakeup+0x34>
   1860c:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
   1860e:	601a      	str	r2, [r3, #0]
   18610:	e011      	b.n	18636 <os_sched_wakeup+0x3e>
    assert(t->t_state == OS_TASK_SLEEP);
   18612:	2300      	movs	r3, #0
   18614:	461a      	mov	r2, r3
   18616:	4619      	mov	r1, r3
   18618:	4618      	mov	r0, r3
   1861a:	f7fe ffd9 	bl	175d0 <__assert_func>
        assert(!SLIST_EMPTY(&os_obj->obj_head));
   1861e:	2300      	movs	r3, #0
   18620:	461a      	mov	r2, r3
   18622:	4619      	mov	r1, r3
   18624:	4618      	mov	r0, r3
   18626:	f7fe ffd3 	bl	175d0 <__assert_func>
        SLIST_REMOVE(&os_obj->obj_head, t, os_task, t_obj_list);
   1862a:	461a      	mov	r2, r3
   1862c:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
   1862e:	4283      	cmp	r3, r0
   18630:	d1fb      	bne.n	1862a <os_sched_wakeup+0x32>
   18632:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
   18634:	64d3      	str	r3, [r2, #76]	; 0x4c
        SLIST_NEXT(t, t_obj_list) = NULL;
   18636:	2300      	movs	r3, #0
   18638:	64c3      	str	r3, [r0, #76]	; 0x4c
        t->t_obj = NULL;
   1863a:	61c3      	str	r3, [r0, #28]
    }

    /* Remove task from sleep list */
    t->t_state = OS_TASK_READY;
   1863c:	2301      	movs	r3, #1
   1863e:	7303      	strb	r3, [r0, #12]
    t->t_next_wakeup = 0;
   18640:	2300      	movs	r3, #0
   18642:	6343      	str	r3, [r0, #52]	; 0x34
    t->t_flags &= ~OS_TASK_FLAG_NO_TIMEOUT;
   18644:	7b43      	ldrb	r3, [r0, #13]
   18646:	f023 0301 	bic.w	r3, r3, #1
   1864a:	7343      	strb	r3, [r0, #13]
    TAILQ_REMOVE(&g_os_sleep_list, t, t_os_list);
   1864c:	6c43      	ldr	r3, [r0, #68]	; 0x44
   1864e:	b143      	cbz	r3, 18662 <os_sched_wakeup+0x6a>
   18650:	6c82      	ldr	r2, [r0, #72]	; 0x48
   18652:	649a      	str	r2, [r3, #72]	; 0x48
   18654:	6c83      	ldr	r3, [r0, #72]	; 0x48
   18656:	6c42      	ldr	r2, [r0, #68]	; 0x44
   18658:	601a      	str	r2, [r3, #0]
    os_sched_insert(t);
   1865a:	f7ff ff37 	bl	184cc <os_sched_insert>

    os_trace_task_start_ready(t);

    return (0);
}
   1865e:	2000      	movs	r0, #0
   18660:	bd08      	pop	{r3, pc}
    TAILQ_REMOVE(&g_os_sleep_list, t, t_os_list);
   18662:	6c82      	ldr	r2, [r0, #72]	; 0x48
   18664:	4b01      	ldr	r3, [pc, #4]	; (1866c <os_sched_wakeup+0x74>)
   18666:	605a      	str	r2, [r3, #4]
   18668:	e7f4      	b.n	18654 <os_sched_wakeup+0x5c>
   1866a:	bf00      	nop
   1866c:	20000114 	.word	0x20000114

00018670 <os_sched_os_timer_exp>:
 * removed from the sleep list and added to the run list.
 *
 */
void
os_sched_os_timer_exp(void)
{
   18670:	b570      	push	{r4, r5, r6, lr}
    struct os_task *t;
    struct os_task *next;
    os_time_t now;
    os_sr_t sr;

    now = os_time_get();
   18672:	f000 f9cb 	bl	18a0c <os_time_get>
   18676:	4605      	mov	r5, r0

    OS_ENTER_CRITICAL(sr);
   18678:	f000 fa40 	bl	18afc <os_arch_save_sr>
   1867c:	4606      	mov	r6, r0

    /*
     * Wakeup any tasks that have their sleep timer expired
     */
    t = TAILQ_FIRST(&g_os_sleep_list);
   1867e:	4b0a      	ldr	r3, [pc, #40]	; (186a8 <os_sched_os_timer_exp+0x38>)
   18680:	6818      	ldr	r0, [r3, #0]
    while (t) {
   18682:	b160      	cbz	r0, 1869e <os_sched_os_timer_exp+0x2e>
        /* If task waiting forever, do not check next wakeup time */
        if (t->t_flags & OS_TASK_FLAG_NO_TIMEOUT) {
   18684:	7b43      	ldrb	r3, [r0, #13]
   18686:	f013 0f01 	tst.w	r3, #1
   1868a:	d108      	bne.n	1869e <os_sched_os_timer_exp+0x2e>
            break;
        }
        next = TAILQ_NEXT(t, t_os_list);
   1868c:	6c44      	ldr	r4, [r0, #68]	; 0x44
        if (OS_TIME_TICK_GEQ(now, t->t_next_wakeup)) {
   1868e:	6b43      	ldr	r3, [r0, #52]	; 0x34
   18690:	1aeb      	subs	r3, r5, r3
   18692:	2b00      	cmp	r3, #0
   18694:	db03      	blt.n	1869e <os_sched_os_timer_exp+0x2e>
            os_sched_wakeup(t);
   18696:	f7ff ffaf 	bl	185f8 <os_sched_wakeup>
        } else {
            break;
        }
        t = next;
   1869a:	4620      	mov	r0, r4
   1869c:	e7f1      	b.n	18682 <os_sched_os_timer_exp+0x12>
    }

    OS_EXIT_CRITICAL(sr);
   1869e:	4630      	mov	r0, r6
   186a0:	f000 fa32 	bl	18b08 <os_arch_restore_sr>
}
   186a4:	bd70      	pop	{r4, r5, r6, pc}
   186a6:	bf00      	nop
   186a8:	20000114 	.word	0x20000114

000186ac <os_sched_wakeup_ticks>:
 * Return the number of ticks until the first sleep timer expires.If there are
 * no such tasks then return OS_TIMEOUT_NEVER instead.
 */
os_time_t
os_sched_wakeup_ticks(os_time_t now)
{
   186ac:	b510      	push	{r4, lr}
   186ae:	4604      	mov	r4, r0
    os_time_t rt;
    struct os_task *t;

    OS_ASSERT_CRITICAL();
   186b0:	f000 fa2d 	bl	18b0e <os_arch_in_critical>
   186b4:	b150      	cbz	r0, 186cc <os_sched_wakeup_ticks+0x20>

    t = TAILQ_FIRST(&g_os_sleep_list);
   186b6:	4b0c      	ldr	r3, [pc, #48]	; (186e8 <os_sched_wakeup_ticks+0x3c>)
   186b8:	681b      	ldr	r3, [r3, #0]
    if (t == NULL || (t->t_flags & OS_TASK_FLAG_NO_TIMEOUT)) {
   186ba:	b17b      	cbz	r3, 186dc <os_sched_wakeup_ticks+0x30>
   186bc:	7b5a      	ldrb	r2, [r3, #13]
   186be:	f012 0f01 	tst.w	r2, #1
   186c2:	d10e      	bne.n	186e2 <os_sched_wakeup_ticks+0x36>
        rt = OS_TIMEOUT_NEVER;
    } else if (OS_TIME_TICK_GEQ(t->t_next_wakeup, now)) {
   186c4:	6b58      	ldr	r0, [r3, #52]	; 0x34
   186c6:	1b00      	subs	r0, r0, r4
   186c8:	d406      	bmi.n	186d8 <os_sched_wakeup_ticks+0x2c>
        rt = t->t_next_wakeup - now;
    } else {
        rt = 0;     /* wakeup time was in the past */
    }
    return (rt);
}
   186ca:	bd10      	pop	{r4, pc}
    OS_ASSERT_CRITICAL();
   186cc:	2300      	movs	r3, #0
   186ce:	461a      	mov	r2, r3
   186d0:	4619      	mov	r1, r3
   186d2:	4618      	mov	r0, r3
   186d4:	f7fe ff7c 	bl	175d0 <__assert_func>
        rt = 0;     /* wakeup time was in the past */
   186d8:	2000      	movs	r0, #0
   186da:	e7f6      	b.n	186ca <os_sched_wakeup_ticks+0x1e>
        rt = OS_TIMEOUT_NEVER;
   186dc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   186e0:	e7f3      	b.n	186ca <os_sched_wakeup_ticks+0x1e>
   186e2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    return (rt);
   186e6:	e7f0      	b.n	186ca <os_sched_wakeup_ticks+0x1e>
   186e8:	20000114 	.word	0x20000114

000186ec <os_sched_next_task>:
 */
struct os_task *
os_sched_next_task(void)
{
    return (TAILQ_FIRST(&g_os_run_list));
}
   186ec:	4b01      	ldr	r3, [pc, #4]	; (186f4 <os_sched_next_task+0x8>)
   186ee:	6818      	ldr	r0, [r3, #0]
   186f0:	4770      	bx	lr
   186f2:	bf00      	nop
   186f4:	2000010c 	.word	0x2000010c

000186f8 <os_sched>:
{
   186f8:	b538      	push	{r3, r4, r5, lr}
   186fa:	4604      	mov	r4, r0
    OS_ENTER_CRITICAL(sr);
   186fc:	f000 f9fe 	bl	18afc <os_arch_save_sr>
   18700:	4605      	mov	r5, r0
    if (!next_t) {
   18702:	b134      	cbz	r4, 18712 <os_sched+0x1a>
    os_arch_ctx_sw(next_t);
   18704:	4620      	mov	r0, r4
   18706:	f000 f9ef 	bl	18ae8 <os_arch_ctx_sw>
    OS_EXIT_CRITICAL(sr);
   1870a:	4628      	mov	r0, r5
   1870c:	f000 f9fc 	bl	18b08 <os_arch_restore_sr>
}
   18710:	bd38      	pop	{r3, r4, r5, pc}
        next_t = os_sched_next_task();
   18712:	f7ff ffeb 	bl	186ec <os_sched_next_task>
   18716:	4604      	mov	r4, r0
   18718:	e7f4      	b.n	18704 <os_sched+0xc>
	...

0001871c <os_sched_resort>:
 * NOTE: this function expects interrupts to be disabled so they
 * are not disabled here.
 */
void
os_sched_resort(struct os_task *t)
{
   1871c:	b508      	push	{r3, lr}
    if (t->t_state == OS_TASK_READY) {
   1871e:	7b03      	ldrb	r3, [r0, #12]
   18720:	2b01      	cmp	r3, #1
   18722:	d000      	beq.n	18726 <os_sched_resort+0xa>
        TAILQ_REMOVE(&g_os_run_list, t, t_os_list);
        os_sched_insert(t);
    }
}
   18724:	bd08      	pop	{r3, pc}
        TAILQ_REMOVE(&g_os_run_list, t, t_os_list);
   18726:	6c43      	ldr	r3, [r0, #68]	; 0x44
   18728:	b13b      	cbz	r3, 1873a <os_sched_resort+0x1e>
   1872a:	6c82      	ldr	r2, [r0, #72]	; 0x48
   1872c:	649a      	str	r2, [r3, #72]	; 0x48
   1872e:	6c83      	ldr	r3, [r0, #72]	; 0x48
   18730:	6c42      	ldr	r2, [r0, #68]	; 0x44
   18732:	601a      	str	r2, [r3, #0]
        os_sched_insert(t);
   18734:	f7ff feca 	bl	184cc <os_sched_insert>
}
   18738:	e7f4      	b.n	18724 <os_sched_resort+0x8>
        TAILQ_REMOVE(&g_os_run_list, t, t_os_list);
   1873a:	6c82      	ldr	r2, [r0, #72]	; 0x48
   1873c:	4b01      	ldr	r3, [pc, #4]	; (18744 <os_sched_resort+0x28>)
   1873e:	605a      	str	r2, [r3, #4]
   18740:	e7f5      	b.n	1872e <os_sched_resort+0x12>
   18742:	bf00      	nop
   18744:	2000010c 	.word	0x2000010c

00018748 <os_sem_init>:
{
    os_error_t ret;

    os_trace_api_u32x2(OS_TRACE_ID_SEM_INIT, (uint32_t)sem, (uint32_t)tokens);

    if (!sem) {
   18748:	4603      	mov	r3, r0
   1874a:	b118      	cbz	r0, 18754 <os_sem_init+0xc>
        ret = OS_INVALID_PARM;
        goto done;
    }

    sem->sem_tokens = tokens;
   1874c:	80c1      	strh	r1, [r0, #6]
    SLIST_FIRST(&sem->sem_head) = NULL;
   1874e:	2000      	movs	r0, #0
   18750:	6018      	str	r0, [r3, #0]
   18752:	4770      	bx	lr
        ret = OS_INVALID_PARM;
   18754:	2003      	movs	r0, #3
    ret = OS_OK;

done:
    os_trace_api_ret_u32(OS_TRACE_ID_SEM_INIT, (uint32_t)ret);
    return ret;
}
   18756:	4770      	bx	lr

00018758 <os_sem_release>:

os_error_t
os_sem_release(struct os_sem *sem)
{
   18758:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    os_error_t ret;

    os_trace_api_u32(OS_TRACE_ID_SEM_RELEASE, (uint32_t)sem);

    /* OS must be started to release semaphores */
    if (!g_os_started) {
   1875a:	4b17      	ldr	r3, [pc, #92]	; (187b8 <os_sem_release+0x60>)
   1875c:	681b      	ldr	r3, [r3, #0]
   1875e:	b33b      	cbz	r3, 187b0 <os_sem_release+0x58>
        ret = OS_NOT_STARTED;
        goto done;
    }

    /* Check for valid semaphore */
    if (!sem) {
   18760:	b340      	cbz	r0, 187b4 <os_sem_release+0x5c>
   18762:	4604      	mov	r4, r0
        goto done;
    }

    /* Get current task */
    resched = 0;
    current = os_sched_get_current_task();
   18764:	f7ff fef4 	bl	18550 <os_sched_get_current_task>
   18768:	4607      	mov	r7, r0

    OS_ENTER_CRITICAL(sr);
   1876a:	f000 f9c7 	bl	18afc <os_arch_save_sr>
   1876e:	4606      	mov	r6, r0

    /* Check if tasks are waiting for the semaphore */
    rdy = SLIST_FIRST(&sem->sem_head);
   18770:	6825      	ldr	r5, [r4, #0]
    if (rdy) {
   18772:	b165      	cbz	r5, 1878e <os_sem_release+0x36>
        /* Clear flag that we are waiting on the semaphore; wake up task */
        rdy->t_flags &= ~OS_TASK_FLAG_SEM_WAIT;
   18774:	7b6b      	ldrb	r3, [r5, #13]
   18776:	f023 0302 	bic.w	r3, r3, #2
   1877a:	736b      	strb	r3, [r5, #13]
        os_sched_wakeup(rdy);
   1877c:	4628      	mov	r0, r5
   1877e:	f7ff ff3b 	bl	185f8 <os_sched_wakeup>

        /* Schedule if waiting task higher priority */
        if (current->t_prio > rdy->t_prio) {
   18782:	7afa      	ldrb	r2, [r7, #11]
   18784:	7aeb      	ldrb	r3, [r5, #11]
   18786:	429a      	cmp	r2, r3
   18788:	d80b      	bhi.n	187a2 <os_sem_release+0x4a>
    resched = 0;
   1878a:	2400      	movs	r4, #0
   1878c:	e003      	b.n	18796 <os_sem_release+0x3e>
            resched = 1;
        }
    } else {
        /* Add to the number of tokens */
        sem->sem_tokens++;
   1878e:	88e3      	ldrh	r3, [r4, #6]
   18790:	3301      	adds	r3, #1
   18792:	80e3      	strh	r3, [r4, #6]
    resched = 0;
   18794:	2400      	movs	r4, #0
    }

    OS_EXIT_CRITICAL(sr);
   18796:	4630      	mov	r0, r6
   18798:	f000 f9b6 	bl	18b08 <os_arch_restore_sr>

    /* Re-schedule if needed */
    if (resched) {
   1879c:	b91c      	cbnz	r4, 187a6 <os_sem_release+0x4e>
        os_sched(rdy);
    }

    ret = OS_OK;
   1879e:	2000      	movs	r0, #0

done:
    os_trace_api_ret_u32(OS_TRACE_ID_SEM_RELEASE, (uint32_t)ret);
    return ret;
}
   187a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            resched = 1;
   187a2:	2401      	movs	r4, #1
   187a4:	e7f7      	b.n	18796 <os_sem_release+0x3e>
        os_sched(rdy);
   187a6:	4628      	mov	r0, r5
   187a8:	f7ff ffa6 	bl	186f8 <os_sched>
    ret = OS_OK;
   187ac:	2000      	movs	r0, #0
   187ae:	e7f7      	b.n	187a0 <os_sem_release+0x48>
        ret = OS_NOT_STARTED;
   187b0:	2009      	movs	r0, #9
   187b2:	e7f5      	b.n	187a0 <os_sem_release+0x48>
        ret = OS_INVALID_PARM;
   187b4:	2003      	movs	r0, #3
   187b6:	e7f3      	b.n	187a0 <os_sem_release+0x48>
   187b8:	20009e28 	.word	0x20009e28

000187bc <os_sem_pend>:

os_error_t
os_sem_pend(struct os_sem *sem, os_time_t timeout)
{
   187bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    os_error_t ret;

    os_trace_api_u32x2(OS_TRACE_ID_SEM_PEND, (uint32_t)sem, (uint32_t)timeout);

    /* Check if OS is started */
    if (!g_os_started) {
   187be:	4b2c      	ldr	r3, [pc, #176]	; (18870 <os_sem_pend+0xb4>)
   187c0:	681b      	ldr	r3, [r3, #0]
   187c2:	2b00      	cmp	r3, #0
   187c4:	d04f      	beq.n	18866 <os_sem_pend+0xaa>
        ret = OS_NOT_STARTED;
        goto done;
    }

    /* Check for valid semaphore */
    if (!sem) {
   187c6:	2800      	cmp	r0, #0
   187c8:	d04f      	beq.n	1886a <os_sem_pend+0xae>
   187ca:	460d      	mov	r5, r1
   187cc:	4604      	mov	r4, r0
        goto done;
    }

    /* Assume we dont have to put task to sleep; get current task */
    sched = 0;
    current = os_sched_get_current_task();
   187ce:	f7ff febf 	bl	18550 <os_sched_get_current_task>
   187d2:	4606      	mov	r6, r0

    OS_ENTER_CRITICAL(sr);
   187d4:	f000 f992 	bl	18afc <os_arch_save_sr>
   187d8:	4607      	mov	r7, r0

    /*
     * If there is a token available, take it. If no token, either return
     * with error if timeout was 0 or put this task to sleep.
     */
    if (sem->sem_tokens != 0) {
   187da:	88e3      	ldrh	r3, [r4, #6]
   187dc:	b14b      	cbz	r3, 187f2 <os_sem_pend+0x36>
        sem->sem_tokens--;
   187de:	3b01      	subs	r3, #1
   187e0:	80e3      	strh	r3, [r4, #6]
        ret = OS_OK;
   187e2:	2400      	movs	r4, #0
    sched = 0;
   187e4:	4625      	mov	r5, r4
        /* We will put this task to sleep */
        sched = 1;
        os_sched_sleep(current, timeout);
    }

    OS_EXIT_CRITICAL(sr);
   187e6:	4638      	mov	r0, r7
   187e8:	f000 f98e 	bl	18b08 <os_arch_restore_sr>

    if (sched) {
   187ec:	bb45      	cbnz	r5, 18840 <os_sem_pend+0x84>
    }

done:
    os_trace_api_ret_u32(OS_TRACE_ID_SEM_PEND, (uint32_t)ret);
    return ret;
}
   187ee:	4620      	mov	r0, r4
   187f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    } else if (timeout == 0) {
   187f2:	b315      	cbz	r5, 1883a <os_sem_pend+0x7e>
        current->t_obj = sem;
   187f4:	61f4      	str	r4, [r6, #28]
        current->t_flags |= OS_TASK_FLAG_SEM_WAIT;
   187f6:	7b73      	ldrb	r3, [r6, #13]
   187f8:	f043 0302 	orr.w	r3, r3, #2
   187fc:	7373      	strb	r3, [r6, #13]
        if (!SLIST_EMPTY(&sem->sem_head)) {
   187fe:	f8d4 c000 	ldr.w	ip, [r4]
   18802:	f1bc 0f00 	cmp.w	ip, #0
   18806:	d00e      	beq.n	18826 <os_sem_pend+0x6a>
            SLIST_FOREACH(entry, &sem->sem_head, t_obj_list) {
   18808:	4663      	mov	r3, ip
        last = NULL;
   1880a:	2000      	movs	r0, #0
            SLIST_FOREACH(entry, &sem->sem_head, t_obj_list) {
   1880c:	b133      	cbz	r3, 1881c <os_sem_pend+0x60>
                if (current->t_prio < entry->t_prio) {
   1880e:	7af1      	ldrb	r1, [r6, #11]
   18810:	7ada      	ldrb	r2, [r3, #11]
   18812:	4291      	cmp	r1, r2
   18814:	d302      	bcc.n	1881c <os_sem_pend+0x60>
                last = entry;
   18816:	4618      	mov	r0, r3
            SLIST_FOREACH(entry, &sem->sem_head, t_obj_list) {
   18818:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
   1881a:	e7f7      	b.n	1880c <os_sem_pend+0x50>
        if (last) {
   1881c:	b118      	cbz	r0, 18826 <os_sem_pend+0x6a>
            SLIST_INSERT_AFTER(last, current, t_obj_list);
   1881e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   18820:	64f3      	str	r3, [r6, #76]	; 0x4c
   18822:	64c6      	str	r6, [r0, #76]	; 0x4c
   18824:	e002      	b.n	1882c <os_sem_pend+0x70>
            SLIST_INSERT_HEAD(&sem->sem_head, current, t_obj_list);
   18826:	f8c6 c04c 	str.w	ip, [r6, #76]	; 0x4c
   1882a:	6026      	str	r6, [r4, #0]
        os_sched_sleep(current, timeout);
   1882c:	4629      	mov	r1, r5
   1882e:	4630      	mov	r0, r6
   18830:	f7ff fe9a 	bl	18568 <os_sched_sleep>
        ret = OS_OK;
   18834:	2400      	movs	r4, #0
        sched = 1;
   18836:	2501      	movs	r5, #1
   18838:	e7d5      	b.n	187e6 <os_sem_pend+0x2a>
        ret = OS_TIMEOUT;
   1883a:	2406      	movs	r4, #6
    sched = 0;
   1883c:	2500      	movs	r5, #0
   1883e:	e7d2      	b.n	187e6 <os_sem_pend+0x2a>
        os_sched(NULL);
   18840:	2000      	movs	r0, #0
   18842:	f7ff ff59 	bl	186f8 <os_sched>
        if (current->t_flags & OS_TASK_FLAG_SEM_WAIT) {
   18846:	7b73      	ldrb	r3, [r6, #13]
   18848:	f013 0f02 	tst.w	r3, #2
   1884c:	d101      	bne.n	18852 <os_sem_pend+0x96>
            ret = OS_OK;
   1884e:	2400      	movs	r4, #0
   18850:	e7cd      	b.n	187ee <os_sem_pend+0x32>
            OS_ENTER_CRITICAL(sr);
   18852:	f000 f953 	bl	18afc <os_arch_save_sr>
            current->t_flags &= ~OS_TASK_FLAG_SEM_WAIT;
   18856:	7b73      	ldrb	r3, [r6, #13]
   18858:	f023 0302 	bic.w	r3, r3, #2
   1885c:	7373      	strb	r3, [r6, #13]
            OS_EXIT_CRITICAL(sr);
   1885e:	f000 f953 	bl	18b08 <os_arch_restore_sr>
            ret = OS_TIMEOUT;
   18862:	2406      	movs	r4, #6
   18864:	e7c3      	b.n	187ee <os_sem_pend+0x32>
        ret = OS_NOT_STARTED;
   18866:	2409      	movs	r4, #9
   18868:	e7c1      	b.n	187ee <os_sem_pend+0x32>
        ret = OS_INVALID_PARM;
   1886a:	2403      	movs	r4, #3
   1886c:	e7bf      	b.n	187ee <os_sem_pend+0x32>
   1886e:	bf00      	nop
   18870:	20009e28 	.word	0x20009e28

00018874 <_clear_stack>:
static void
_clear_stack(os_stack_t *stack_bottom, int size)
{
    int i;

    for (i = 0; i < size; i++) {
   18874:	2300      	movs	r3, #0
   18876:	e003      	b.n	18880 <_clear_stack+0xc>
        stack_bottom[i] = OS_STACK_PATTERN;
   18878:	4a03      	ldr	r2, [pc, #12]	; (18888 <_clear_stack+0x14>)
   1887a:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
    for (i = 0; i < size; i++) {
   1887e:	3301      	adds	r3, #1
   18880:	428b      	cmp	r3, r1
   18882:	dbf9      	blt.n	18878 <_clear_stack+0x4>
    }
}
   18884:	4770      	bx	lr
   18886:	bf00      	nop
   18888:	deadbeef 	.word	0xdeadbeef

0001888c <os_task_init>:

int
os_task_init(struct os_task *t, const char *name, os_task_func_t func,
        void *arg, uint8_t prio, os_time_t sanity_itvl,
        os_stack_t *stack_bottom, uint16_t stack_size)
{
   1888c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   18890:	4604      	mov	r4, r0
   18892:	460f      	mov	r7, r1
   18894:	4690      	mov	r8, r2
   18896:	461d      	mov	r5, r3
   18898:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
    struct os_sanity_check *sc;
    int rc;
    struct os_task *task;

    memset(t, 0, sizeof(*t));
   1889c:	2250      	movs	r2, #80	; 0x50
   1889e:	2100      	movs	r1, #0
   188a0:	f000 fa99 	bl	18dd6 <memset>

    t->t_func = func;
   188a4:	f8c4 8014 	str.w	r8, [r4, #20]
    t->t_arg = arg;
   188a8:	61a5      	str	r5, [r4, #24]
    OS_ENTER_CRITICAL(sr);
   188aa:	f000 f927 	bl	18afc <os_arch_save_sr>
    rc = g_task_id;
   188ae:	4b2b      	ldr	r3, [pc, #172]	; (1895c <os_task_init+0xd0>)
   188b0:	781d      	ldrb	r5, [r3, #0]
    g_task_id++;
   188b2:	1c6a      	adds	r2, r5, #1
   188b4:	701a      	strb	r2, [r3, #0]
    OS_EXIT_CRITICAL(sr);
   188b6:	f000 f927 	bl	18b08 <os_arch_restore_sr>

    t->t_taskid = os_task_next_id();
   188ba:	72a5      	strb	r5, [r4, #10]
    t->t_prio = prio;
   188bc:	f89d 3018 	ldrb.w	r3, [sp, #24]
   188c0:	72e3      	strb	r3, [r4, #11]

    t->t_state = OS_TASK_READY;
   188c2:	2301      	movs	r3, #1
   188c4:	7323      	strb	r3, [r4, #12]
    t->t_name = name;
   188c6:	6127      	str	r7, [r4, #16]
    t->t_next_wakeup = 0;
   188c8:	2300      	movs	r3, #0
   188ca:	6363      	str	r3, [r4, #52]	; 0x34

    rc = os_sanity_check_init(&t->t_sanity_check);
   188cc:	f104 0720 	add.w	r7, r4, #32
   188d0:	4638      	mov	r0, r7
   188d2:	f7ff fda3 	bl	1841c <os_sanity_check_init>
    if (rc != OS_OK) {
   188d6:	4605      	mov	r5, r0
   188d8:	2800      	cmp	r0, #0
   188da:	d132      	bne.n	18942 <os_task_init+0xb6>
        goto err;
    }

    if (sanity_itvl != OS_WAIT_FOREVER) {
   188dc:	9b07      	ldr	r3, [sp, #28]
   188de:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
   188e2:	d005      	beq.n	188f0 <os_task_init+0x64>
        sc = (struct os_sanity_check *) &t->t_sanity_check;
        sc->sc_checkin_itvl = sanity_itvl;
   188e4:	6263      	str	r3, [r4, #36]	; 0x24

        rc = os_sanity_check_register(sc);
   188e6:	4638      	mov	r0, r7
   188e8:	f7ff fda0 	bl	1842c <os_sanity_check_register>
        if (rc != OS_OK) {
   188ec:	4605      	mov	r5, r0
   188ee:	bb40      	cbnz	r0, 18942 <os_task_init+0xb6>
            goto err;
        }
    }

    _clear_stack(stack_bottom, stack_size);
   188f0:	4631      	mov	r1, r6
   188f2:	9808      	ldr	r0, [sp, #32]
   188f4:	f7ff ffbe 	bl	18874 <_clear_stack>
    t->t_stacktop = &stack_bottom[stack_size];
   188f8:	9b08      	ldr	r3, [sp, #32]
   188fa:	eb03 0186 	add.w	r1, r3, r6, lsl #2
   188fe:	6061      	str	r1, [r4, #4]
    t->t_stacksize = stack_size;
   18900:	8126      	strh	r6, [r4, #8]
    t->t_stackptr = os_arch_task_stack_init(t, t->t_stacktop,
   18902:	4632      	mov	r2, r6
   18904:	4620      	mov	r0, r4
   18906:	f000 f907 	bl	18b18 <os_arch_task_stack_init>
   1890a:	6020      	str	r0, [r4, #0]
            t->t_stacksize);

    STAILQ_FOREACH(task, &g_os_task_list, t_os_task_list) {
   1890c:	4b14      	ldr	r3, [pc, #80]	; (18960 <os_task_init+0xd4>)
   1890e:	681b      	ldr	r3, [r3, #0]
   18910:	b15b      	cbz	r3, 1892a <os_task_init+0x9e>
        assert(t->t_prio != task->t_prio);
   18912:	7ae1      	ldrb	r1, [r4, #11]
   18914:	7ada      	ldrb	r2, [r3, #11]
   18916:	4291      	cmp	r1, r2
   18918:	d001      	beq.n	1891e <os_task_init+0x92>
    STAILQ_FOREACH(task, &g_os_task_list, t_os_task_list) {
   1891a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
   1891c:	e7f8      	b.n	18910 <os_task_init+0x84>
        assert(t->t_prio != task->t_prio);
   1891e:	2300      	movs	r3, #0
   18920:	461a      	mov	r2, r3
   18922:	4619      	mov	r1, r3
   18924:	4618      	mov	r0, r3
   18926:	f7fe fe53 	bl	175d0 <__assert_func>
    }

    /* insert this task into the task list */
    STAILQ_INSERT_TAIL(&g_os_task_list, t, t_os_task_list);
   1892a:	6423      	str	r3, [r4, #64]	; 0x40
   1892c:	4b0c      	ldr	r3, [pc, #48]	; (18960 <os_task_init+0xd4>)
   1892e:	685a      	ldr	r2, [r3, #4]
   18930:	6014      	str	r4, [r2, #0]
   18932:	f104 0240 	add.w	r2, r4, #64	; 0x40
   18936:	605a      	str	r2, [r3, #4]

    /* insert this task into the scheduler list */
    rc = os_sched_insert(t);
   18938:	4620      	mov	r0, r4
   1893a:	f7ff fdc7 	bl	184cc <os_sched_insert>
   1893e:	4605      	mov	r5, r0
    if (rc != OS_OK) {
   18940:	b110      	cbz	r0, 18948 <os_task_init+0xbc>
    }

    return (0);
err:
    return (rc);
}
   18942:	4628      	mov	r0, r5
   18944:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (os_started()) {
   18948:	f7fe fefc 	bl	17744 <os_started>
   1894c:	b908      	cbnz	r0, 18952 <os_task_init+0xc6>
    return (0);
   1894e:	4605      	mov	r5, r0
   18950:	e7f7      	b.n	18942 <os_task_init+0xb6>
        os_sched(NULL);
   18952:	2000      	movs	r0, #0
   18954:	f7ff fed0 	bl	186f8 <os_sched>
   18958:	e7f3      	b.n	18942 <os_task_init+0xb6>
   1895a:	bf00      	nop
   1895c:	20009e54 	.word	0x20009e54
   18960:	20009e58 	.word	0x20009e58

00018964 <os_deltatime>:
} basetod;

static void
os_deltatime(os_time_t delta, const struct os_timeval *base,
    struct os_timeval *result)
{
   18964:	e92d 0830 	stmdb	sp!, {r4, r5, fp}
    struct os_timeval tvdelta;

    tvdelta.tv_sec = delta / OS_TICKS_PER_SEC;
   18968:	09c3      	lsrs	r3, r0, #7
    tvdelta.tv_usec = (delta % OS_TICKS_PER_SEC) * OS_USEC_PER_TICK;
   1896a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
    os_timeradd(base, &tvdelta, result);
   1896e:	e9d1 4500 	ldrd	r4, r5, [r1]
   18972:	eb14 0b03 	adds.w	fp, r4, r3
   18976:	f145 0c00 	adc.w	ip, r5, #0
   1897a:	e9c2 bc00 	strd	fp, ip, [r2]
   1897e:	688b      	ldr	r3, [r1, #8]
   18980:	f641 6184 	movw	r1, #7812	; 0x1e84
   18984:	fb01 3000 	mla	r0, r1, r0, r3
   18988:	6090      	str	r0, [r2, #8]
   1898a:	4b08      	ldr	r3, [pc, #32]	; (189ac <os_deltatime+0x48>)
   1898c:	4298      	cmp	r0, r3
   1898e:	dd0a      	ble.n	189a6 <os_deltatime+0x42>
   18990:	f11b 0401 	adds.w	r4, fp, #1
   18994:	f14c 0500 	adc.w	r5, ip, #0
   18998:	e9c2 4500 	strd	r4, r5, [r2]
   1899c:	f5a0 2074 	sub.w	r0, r0, #999424	; 0xf4000
   189a0:	f5a0 7010 	sub.w	r0, r0, #576	; 0x240
   189a4:	6090      	str	r0, [r2, #8]
}
   189a6:	e8bd 0830 	ldmia.w	sp!, {r4, r5, fp}
   189aa:	4770      	bx	lr
   189ac:	000f423f 	.word	0x000f423f

000189b0 <os_time_tick>:
}

#if MYNEWT_VAL(OS_SCHEDULING)
static void
os_time_tick(int ticks)
{
   189b0:	b570      	push	{r4, r5, r6, lr}
    os_sr_t sr;
    os_time_t delta, prev_os_time;

    assert(ticks >= 0);
   189b2:	1e04      	subs	r4, r0, #0
   189b4:	db0d      	blt.n	189d2 <os_time_tick+0x22>

    OS_ENTER_CRITICAL(sr);
   189b6:	f000 f8a1 	bl	18afc <os_arch_save_sr>
   189ba:	4605      	mov	r5, r0
    prev_os_time = g_os_time;
   189bc:	4a11      	ldr	r2, [pc, #68]	; (18a04 <os_time_tick+0x54>)
   189be:	6813      	ldr	r3, [r2, #0]
    g_os_time += ticks;
   189c0:	18e0      	adds	r0, r4, r3
   189c2:	6010      	str	r0, [r2, #0]

    /*
     * Update 'basetod' when 'g_os_time' crosses the 0x00000000 and
     * 0x80000000 thresholds.
     */
    if ((prev_os_time ^ g_os_time) >> 31) {
   189c4:	ea90 0f03 	teq	r0, r3
   189c8:	d409      	bmi.n	189de <os_time_tick+0x2e>
        delta = g_os_time - basetod.ostime;
        os_deltatime(delta, &basetod.uptime, &basetod.uptime);
        os_deltatime(delta, &basetod.utctime, &basetod.utctime);
        basetod.ostime = g_os_time;
    }
    OS_EXIT_CRITICAL(sr);
   189ca:	4628      	mov	r0, r5
   189cc:	f000 f89c 	bl	18b08 <os_arch_restore_sr>
}
   189d0:	bd70      	pop	{r4, r5, r6, pc}
    assert(ticks >= 0);
   189d2:	2300      	movs	r3, #0
   189d4:	461a      	mov	r2, r3
   189d6:	4619      	mov	r1, r3
   189d8:	4618      	mov	r0, r3
   189da:	f7fe fdf9 	bl	175d0 <__assert_func>
        delta = g_os_time - basetod.ostime;
   189de:	4e0a      	ldr	r6, [pc, #40]	; (18a08 <os_time_tick+0x58>)
   189e0:	4631      	mov	r1, r6
   189e2:	f851 4b08 	ldr.w	r4, [r1], #8
   189e6:	1b04      	subs	r4, r0, r4
        os_deltatime(delta, &basetod.uptime, &basetod.uptime);
   189e8:	460a      	mov	r2, r1
   189ea:	4620      	mov	r0, r4
   189ec:	f7ff ffba 	bl	18964 <os_deltatime>
        os_deltatime(delta, &basetod.utctime, &basetod.utctime);
   189f0:	f106 0118 	add.w	r1, r6, #24
   189f4:	460a      	mov	r2, r1
   189f6:	4620      	mov	r0, r4
   189f8:	f7ff ffb4 	bl	18964 <os_deltatime>
        basetod.ostime = g_os_time;
   189fc:	4b01      	ldr	r3, [pc, #4]	; (18a04 <os_time_tick+0x54>)
   189fe:	681b      	ldr	r3, [r3, #0]
   18a00:	6033      	str	r3, [r6, #0]
   18a02:	e7e2      	b.n	189ca <os_time_tick+0x1a>
   18a04:	20009e60 	.word	0x20009e60
   18a08:	20009958 	.word	0x20009958

00018a0c <os_time_get>:
}
   18a0c:	4b01      	ldr	r3, [pc, #4]	; (18a14 <os_time_get+0x8>)
   18a0e:	6818      	ldr	r0, [r3, #0]
   18a10:	4770      	bx	lr
   18a12:	bf00      	nop
   18a14:	20009e60 	.word	0x20009e60

00018a18 <os_time_advance>:

void
os_time_advance(int ticks)
{
   18a18:	b510      	push	{r4, lr}
    assert(ticks >= 0);
   18a1a:	1e04      	subs	r4, r0, #0
   18a1c:	db09      	blt.n	18a32 <os_time_advance+0x1a>

    if (ticks > 0) {
   18a1e:	2c00      	cmp	r4, #0
   18a20:	dd06      	ble.n	18a30 <os_time_advance+0x18>
        if (!os_started()) {
   18a22:	f7fe fe8f 	bl	17744 <os_started>
   18a26:	b950      	cbnz	r0, 18a3e <os_time_advance+0x26>
            g_os_time += ticks;
   18a28:	4a0a      	ldr	r2, [pc, #40]	; (18a54 <os_time_advance+0x3c>)
   18a2a:	6813      	ldr	r3, [r2, #0]
   18a2c:	441c      	add	r4, r3
   18a2e:	6014      	str	r4, [r2, #0]
            os_callout_tick();
            os_sched_os_timer_exp();
            os_sched(NULL);
        }
    }
}
   18a30:	bd10      	pop	{r4, pc}
    assert(ticks >= 0);
   18a32:	2300      	movs	r3, #0
   18a34:	461a      	mov	r2, r3
   18a36:	4619      	mov	r1, r3
   18a38:	4618      	mov	r0, r3
   18a3a:	f7fe fdc9 	bl	175d0 <__assert_func>
            os_time_tick(ticks);
   18a3e:	4620      	mov	r0, r4
   18a40:	f7ff ffb6 	bl	189b0 <os_time_tick>
            os_callout_tick();
   18a44:	f7fe ffa6 	bl	17994 <os_callout_tick>
            os_sched_os_timer_exp();
   18a48:	f7ff fe12 	bl	18670 <os_sched_os_timer_exp>
            os_sched(NULL);
   18a4c:	2000      	movs	r0, #0
   18a4e:	f7ff fe53 	bl	186f8 <os_sched>
}
   18a52:	e7ed      	b.n	18a30 <os_time_advance+0x18>
   18a54:	20009e60 	.word	0x20009e60

00018a58 <os_time_delay>:
void
os_time_delay(os_time_t osticks)
{
    os_sr_t sr;

    if (osticks > 0) {
   18a58:	b900      	cbnz	r0, 18a5c <os_time_delay+0x4>
   18a5a:	4770      	bx	lr
{
   18a5c:	b538      	push	{r3, r4, r5, lr}
   18a5e:	4604      	mov	r4, r0
        OS_ENTER_CRITICAL(sr);
   18a60:	f000 f84c 	bl	18afc <os_arch_save_sr>
   18a64:	4605      	mov	r5, r0
        os_sched_sleep(os_sched_get_current_task(), (os_time_t)osticks);
   18a66:	f7ff fd73 	bl	18550 <os_sched_get_current_task>
   18a6a:	4621      	mov	r1, r4
   18a6c:	f7ff fd7c 	bl	18568 <os_sched_sleep>
        OS_EXIT_CRITICAL(sr);
   18a70:	4628      	mov	r0, r5
   18a72:	f000 f849 	bl	18b08 <os_arch_restore_sr>
        os_sched(NULL);
   18a76:	2000      	movs	r0, #0
   18a78:	f7ff fe3e 	bl	186f8 <os_sched>
    }
}
   18a7c:	bd38      	pop	{r3, r4, r5, pc}
	...

00018a80 <os_gettimeofday>:
    return (0);
}

int
os_gettimeofday(struct os_timeval *tv, struct os_timezone *tz)
{
   18a80:	b570      	push	{r4, r5, r6, lr}
   18a82:	4605      	mov	r5, r0
   18a84:	460c      	mov	r4, r1
    os_sr_t sr;
    os_time_t delta;

    OS_ENTER_CRITICAL(sr);
   18a86:	f000 f839 	bl	18afc <os_arch_save_sr>
   18a8a:	4606      	mov	r6, r0
    if (tv != NULL) {
   18a8c:	b145      	cbz	r5, 18aa0 <os_gettimeofday+0x20>
        delta = os_time_get() - basetod.ostime;
   18a8e:	f7ff ffbd 	bl	18a0c <os_time_get>
   18a92:	4908      	ldr	r1, [pc, #32]	; (18ab4 <os_gettimeofday+0x34>)
   18a94:	f851 3b18 	ldr.w	r3, [r1], #24
        os_deltatime(delta, &basetod.utctime, tv);
   18a98:	462a      	mov	r2, r5
   18a9a:	1ac0      	subs	r0, r0, r3
   18a9c:	f7ff ff62 	bl	18964 <os_deltatime>
    }

    if (tz != NULL) {
   18aa0:	b114      	cbz	r4, 18aa8 <os_gettimeofday+0x28>
        *tz = basetod.timezone;
   18aa2:	4b04      	ldr	r3, [pc, #16]	; (18ab4 <os_gettimeofday+0x34>)
   18aa4:	6a98      	ldr	r0, [r3, #40]	; 0x28
   18aa6:	6020      	str	r0, [r4, #0]
    }
    OS_EXIT_CRITICAL(sr);
   18aa8:	4630      	mov	r0, r6
   18aaa:	f000 f82d 	bl	18b08 <os_arch_restore_sr>

    return (0);
}
   18aae:	2000      	movs	r0, #0
   18ab0:	bd70      	pop	{r4, r5, r6, pc}
   18ab2:	bf00      	nop
   18ab4:	20009958 	.word	0x20009958

00018ab8 <os_time_ms_to_ticks>:
  return (tv.tv_sec * 1000000 + tv.tv_usec);
}

int
os_time_ms_to_ticks(uint32_t ms, os_time_t *out_ticks)
{
   18ab8:	b538      	push	{r3, r4, r5, lr}
   18aba:	4604      	mov	r4, r0
   18abc:	460d      	mov	r5, r1
#endif

    static_assert(OS_TICKS_PER_SEC <= UINT32_MAX,
                  "OS_TICKS_PER_SEC must be <= UINT32_MAX");

    ticks = ((uint64_t)ms * OS_TICKS_PER_SEC) / 1000;
   18abe:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   18ac2:	2300      	movs	r3, #0
   18ac4:	01c0      	lsls	r0, r0, #7
   18ac6:	0e61      	lsrs	r1, r4, #25
   18ac8:	f002 f88a 	bl	1abe0 <__aeabi_uldivmod>
    if (ticks > UINT32_MAX) {
   18acc:	2901      	cmp	r1, #1
   18ace:	bf08      	it	eq
   18ad0:	2800      	cmpeq	r0, #0
   18ad2:	d202      	bcs.n	18ada <os_time_ms_to_ticks+0x22>
        return OS_EINVAL;
    }

    *out_ticks = ticks;
   18ad4:	6028      	str	r0, [r5, #0]
    return 0;
   18ad6:	2000      	movs	r0, #0
}
   18ad8:	bd38      	pop	{r3, r4, r5, pc}
        return OS_EINVAL;
   18ada:	2002      	movs	r0, #2
   18adc:	e7fc      	b.n	18ad8 <os_time_ms_to_ticks+0x20>

00018ade <timer_handler>:
/* XXX: determine how we will deal with running un-privileged */
uint32_t os_flags = OS_RUN_PRIV;

void
timer_handler(void)
{
   18ade:	b508      	push	{r3, lr}
    os_time_advance(1);
   18ae0:	2001      	movs	r0, #1
   18ae2:	f7ff ff99 	bl	18a18 <os_time_advance>
}
   18ae6:	bd08      	pop	{r3, pc}

00018ae8 <os_arch_ctx_sw>:

void
os_arch_ctx_sw(struct os_task *t)
{
   18ae8:	b508      	push	{r3, lr}
    os_sched_ctx_sw_hook(t);
   18aea:	f7ff fd19 	bl	18520 <os_sched_ctx_sw_hook>

    /* Set PendSV interrupt pending bit to force context switch */
    SCB->ICSR = SCB_ICSR_PENDSVSET_Msk;
   18aee:	4b02      	ldr	r3, [pc, #8]	; (18af8 <os_arch_ctx_sw+0x10>)
   18af0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   18af4:	605a      	str	r2, [r3, #4]
}
   18af6:	bd08      	pop	{r3, pc}
   18af8:	e000ed00 	.word	0xe000ed00

00018afc <os_arch_save_sr>:
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   18afc:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
   18b00:	b672      	cpsid	i
    uint32_t isr_ctx;

    isr_ctx = __get_PRIMASK();
    __disable_irq();
    return (isr_ctx & 1);
}
   18b02:	f000 0001 	and.w	r0, r0, #1
   18b06:	4770      	bx	lr

00018b08 <os_arch_restore_sr>:

void
os_arch_restore_sr(os_sr_t isr_ctx)
{
    if (!isr_ctx) {
   18b08:	b900      	cbnz	r0, 18b0c <os_arch_restore_sr+0x4>
  __ASM volatile ("cpsie i" : : : "memory");
   18b0a:	b662      	cpsie	i
        __enable_irq();
    }
}
   18b0c:	4770      	bx	lr

00018b0e <os_arch_in_critical>:
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   18b0e:	f3ef 8010 	mrs	r0, PRIMASK
{
    uint32_t isr_ctx;

    isr_ctx = __get_PRIMASK();
    return (isr_ctx & 1);
}
   18b12:	f000 0001 	and.w	r0, r0, #1
   18b16:	4770      	bx	lr

00018b18 <os_arch_task_stack_init>:

os_stack_t *
os_arch_task_stack_init(struct os_task *t, os_stack_t *stack_top, int size)
{
   18b18:	b570      	push	{r4, r5, r6, lr}
   18b1a:	4606      	mov	r6, r0
   18b1c:	460d      	mov	r5, r1
    int i;
    os_stack_t *s;
    struct stack_frame *sf;

    /* Get stack frame pointer */
    s = (os_stack_t *) ((uint8_t *) stack_top - sizeof(*sf));
   18b1e:	f1a1 0444 	sub.w	r4, r1, #68	; 0x44

    /* Zero out R1-R3, R12, LR */
    for (i = 9; i < 14; ++i) {
   18b22:	2309      	movs	r3, #9
   18b24:	e003      	b.n	18b2e <os_arch_task_stack_init+0x16>
        s[i] = 0;
   18b26:	2200      	movs	r2, #0
   18b28:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
    for (i = 9; i < 14; ++i) {
   18b2c:	3301      	adds	r3, #1
   18b2e:	2b0d      	cmp	r3, #13
   18b30:	ddf9      	ble.n	18b26 <os_arch_task_stack_init+0xe>
    }

    /* Set registers R4 - R11 on stack. */
    os_arch_init_task_stack(s);
   18b32:	4620      	mov	r0, r4
   18b34:	f000 f8b6 	bl	18ca4 <os_arch_init_task_stack>

    /* Set remaining portions of stack frame */
    sf = (struct stack_frame *) s;
    sf->xpsr = INITIAL_xPSR;
   18b38:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
   18b3c:	f845 3c04 	str.w	r3, [r5, #-4]
    sf->pc = (uint32_t)t->t_func;
   18b40:	6973      	ldr	r3, [r6, #20]
   18b42:	f845 3c08 	str.w	r3, [r5, #-8]
    sf->r0 = (uint32_t)t->t_arg;
   18b46:	69b3      	ldr	r3, [r6, #24]
   18b48:	f845 3c20 	str.w	r3, [r5, #-32]
#if MYNEWT_VAL(HARDFLOAT)
    sf->exc_lr = INITIAL_LR;
   18b4c:	f06f 0302 	mvn.w	r3, #2
   18b50:	f845 3c24 	str.w	r3, [r5, #-36]
#endif

    return (s);
}
   18b54:	4620      	mov	r0, r4
   18b56:	bd70      	pop	{r4, r5, r6, pc}

00018b58 <os_arch_init>:

void
os_arch_init(void)
{
   18b58:	b508      	push	{r3, lr}
    /*
     * Trap on divide-by-zero.
     */
    SCB->CCR |= SCB_CCR_DIV_0_TRP_Msk;
   18b5a:	4a04      	ldr	r2, [pc, #16]	; (18b6c <os_arch_init+0x14>)
   18b5c:	6953      	ldr	r3, [r2, #20]
   18b5e:	f043 0310 	orr.w	r3, r3, #16
   18b62:	6153      	str	r3, [r2, #20]
    os_init_idle_task();
   18b64:	f7fe fdf4 	bl	17750 <os_init_idle_task>
}
   18b68:	bd08      	pop	{r3, pc}
   18b6a:	bf00      	nop
   18b6c:	e000ed00 	.word	0xe000ed00

00018b70 <os_arch_os_init>:
    SVC_Call(os_arch_init);
}

os_error_t
os_arch_os_init(void)
{
   18b70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
   18b72:	f3ef 8405 	mrs	r4, IPSR
    os_error_t err;
    int i;

    /* Cannot be called within an ISR */
    err = OS_ERR_IN_ISR;
    if (__get_IPSR() == 0) {
   18b76:	b90c      	cbnz	r4, 18b7c <os_arch_os_init+0xc>
        err = OS_OK;

        /* Drop priority for all interrupts */
        for (i = 0; i < sizeof(NVIC->IP); i++) {
   18b78:	2400      	movs	r4, #0
   18b7a:	e009      	b.n	18b90 <os_arch_os_init+0x20>
    err = OS_ERR_IN_ISR;
   18b7c:	2007      	movs	r0, #7
   18b7e:	e02e      	b.n	18bde <os_arch_os_init+0x6e>
            NVIC->IP[i] = -1;
   18b80:	f104 4560 	add.w	r5, r4, #3758096384	; 0xe0000000
   18b84:	f505 4561 	add.w	r5, r5, #57600	; 0xe100
   18b88:	26ff      	movs	r6, #255	; 0xff
   18b8a:	f885 6300 	strb.w	r6, [r5, #768]	; 0x300
        for (i = 0; i < sizeof(NVIC->IP); i++) {
   18b8e:	3401      	adds	r4, #1
   18b90:	2cef      	cmp	r4, #239	; 0xef
   18b92:	d9f5      	bls.n	18b80 <os_arch_os_init+0x10>
         * Install default interrupt handler for all interrupts except Reset,
         * which'll print out system state at the time of the interrupt, and
         * few other regs which should help in trying to figure out what went
         * wrong.
         */
        for (i = -NVIC_USER_IRQ_OFFSET + 2;
   18b94:	f06f 040d 	mvn.w	r4, #13
   18b98:	e007      	b.n	18baa <os_arch_os_init+0x3a>
             i < NVIC_NUM_VECTORS - NVIC_USER_IRQ_OFFSET; i++) {
            NVIC_SetVector(i, (uint32_t)os_default_irq_asm);
   18b9a:	b265      	sxtb	r5, r4
  uint32_t vectors = (uint32_t )SCB->VTOR;
   18b9c:	4e12      	ldr	r6, [pc, #72]	; (18be8 <os_arch_os_init+0x78>)
   18b9e:	68b6      	ldr	r6, [r6, #8]
  (* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4)) = vector;
   18ba0:	3510      	adds	r5, #16
   18ba2:	4f12      	ldr	r7, [pc, #72]	; (18bec <os_arch_os_init+0x7c>)
   18ba4:	f846 7025 	str.w	r7, [r6, r5, lsl #2]
             i < NVIC_NUM_VECTORS - NVIC_USER_IRQ_OFFSET; i++) {
   18ba8:	3401      	adds	r4, #1
        for (i = -NVIC_USER_IRQ_OFFSET + 2;
   18baa:	2c25      	cmp	r4, #37	; 0x25
   18bac:	ddf5      	ble.n	18b9a <os_arch_os_init+0x2a>
  uint32_t vectors = (uint32_t )SCB->VTOR;
   18bae:	4c0e      	ldr	r4, [pc, #56]	; (18be8 <os_arch_os_init+0x78>)
   18bb0:	68a5      	ldr	r5, [r4, #8]
  (* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4)) = vector;
   18bb2:	4e0f      	ldr	r6, [pc, #60]	; (18bf0 <os_arch_os_init+0x80>)
   18bb4:	62ee      	str	r6, [r5, #44]	; 0x2c
  uint32_t vectors = (uint32_t )SCB->VTOR;
   18bb6:	68a5      	ldr	r5, [r4, #8]
  (* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4)) = vector;
   18bb8:	4e0e      	ldr	r6, [pc, #56]	; (18bf4 <os_arch_os_init+0x84>)
   18bba:	63ae      	str	r6, [r5, #56]	; 0x38
  uint32_t vectors = (uint32_t )SCB->VTOR;
   18bbc:	68a5      	ldr	r5, [r4, #8]
  (* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4)) = vector;
   18bbe:	4e0e      	ldr	r6, [pc, #56]	; (18bf8 <os_arch_os_init+0x88>)
   18bc0:	63ee      	str	r6, [r5, #60]	; 0x3c
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
   18bc2:	25e0      	movs	r5, #224	; 0xe0
   18bc4:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
   18bc8:	2520      	movs	r5, #32
   18bca:	77e5      	strb	r5, [r4, #31]
  __ASM volatile ("MRS %0, control" : "=r" (result) );
   18bcc:	f3ef 8414 	mrs	r4, CONTROL

        /* Set the SVC interrupt to priority 0 (highest configurable) */
        NVIC_SetPriority(SVCall_IRQn, SVC_PRIO);

        /* Check if privileged or not */
        if ((__get_CONTROL() & 1) == 0) {
   18bd0:	f014 0f01 	tst.w	r4, #1
   18bd4:	d004      	beq.n	18be0 <os_arch_os_init+0x70>
    SVC_Call(os_arch_init);
   18bd6:	f8df c024 	ldr.w	ip, [pc, #36]	; 18bfc <os_arch_os_init+0x8c>
   18bda:	df00      	svc	0
        err = OS_OK;
   18bdc:	2000      	movs	r0, #0
            svc_os_arch_init();
        }
    }

    return err;
}
   18bde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            os_arch_init();
   18be0:	f7ff ffba 	bl	18b58 <os_arch_init>
        err = OS_OK;
   18be4:	2000      	movs	r0, #0
   18be6:	e7fa      	b.n	18bde <os_arch_os_init+0x6e>
   18be8:	e000ed00 	.word	0xe000ed00
   18bec:	00018d43 	.word	0x00018d43
   18bf0:	00018cab 	.word	0x00018cab
   18bf4:	00018cf1 	.word	0x00018cf1
   18bf8:	00018d37 	.word	0x00018d37
   18bfc:	00018b59 	.word	0x00018b59

00018c00 <os_arch_start>:

uint32_t
os_arch_start(void)
{
   18c00:	b510      	push	{r4, lr}
    struct os_task *t;

    /* Get the highest priority ready to run to set the current task */
    t = os_sched_next_task();
   18c02:	f7ff fd73 	bl	186ec <os_sched_next_task>
   18c06:	4604      	mov	r4, r0
    os_sched_set_current_task(t);
   18c08:	f7ff fca8 	bl	1855c <os_sched_set_current_task>

    /* Adjust PSP so it looks like this task just took an exception */
    __set_PSP((uint32_t)t->t_stackptr + offsetof(struct stack_frame, r0));
   18c0c:	6823      	ldr	r3, [r4, #0]
   18c0e:	3324      	adds	r3, #36	; 0x24
  __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
   18c10:	f383 8809 	msr	PSP, r3

    /* Intitialize and start system clock timer */
    os_tick_init(OS_TICKS_PER_SEC, OS_TICK_PRIO);
   18c14:	2106      	movs	r1, #6
   18c16:	2080      	movs	r0, #128	; 0x80
   18c18:	f000 fde8 	bl	197ec <os_tick_init>

    /* Mark the OS as started, right before we run our first task */
    g_os_started = 1;
   18c1c:	4b03      	ldr	r3, [pc, #12]	; (18c2c <os_arch_start+0x2c>)
   18c1e:	2201      	movs	r2, #1
   18c20:	601a      	str	r2, [r3, #0]

    /* Perform context switch */
    os_arch_ctx_sw(t);
   18c22:	4620      	mov	r0, r4
   18c24:	f7ff ff60 	bl	18ae8 <os_arch_ctx_sw>

    return (uint32_t)(t->t_arg);
}
   18c28:	69a0      	ldr	r0, [r4, #24]
   18c2a:	bd10      	pop	{r4, pc}
   18c2c:	20009e28 	.word	0x20009e28

00018c30 <os_arch_os_start>:
 *
 * @return os_error_t
 */
os_error_t
os_arch_os_start(void)
{
   18c30:	b510      	push	{r4, lr}
     * privileged or un-privileged mode.
     *
     * We switch to using "empty" part of idle task's stack until
     * the svc_os_arch_start() executes SVC, and we will never return.
     */
    os_set_env(g_idle_task.t_stackptr - 1);
   18c32:	4814      	ldr	r0, [pc, #80]	; (18c84 <os_arch_os_start+0x54>)
   18c34:	6800      	ldr	r0, [r0, #0]
   18c36:	3804      	subs	r0, #4
   18c38:	f000 f82a 	bl	18c90 <os_set_env>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
   18c3c:	f3ef 8405 	mrs	r4, IPSR

    err = OS_ERR_IN_ISR;
    if (__get_IPSR() == 0) {
   18c40:	b9d4      	cbnz	r4, 18c78 <os_arch_os_start+0x48>
  __ASM volatile ("MRS %0, control" : "=r" (result) );
   18c42:	f3ef 8414 	mrs	r4, CONTROL
         * The following switch statement is really just a sanity check to
         * insure that the os initialization routine was called prior to the
         * os start routine.
         */
        err = OS_OK;
        switch (__get_CONTROL() & 0x03) {
   18c46:	f004 0403 	and.w	r4, r4, #3
   18c4a:	2c03      	cmp	r4, #3
   18c4c:	d808      	bhi.n	18c60 <os_arch_os_start+0x30>
   18c4e:	e8df f004 	tbb	[pc, r4]
   18c52:	1515      	.short	0x1515
   18c54:	0c02      	.short	0x0c02
        case 0x02:
            /*
             * We are running in Privileged Thread mode w/SP = PSP but we
             * are supposed to be un-privileged.
             */
            if ((os_flags & 1) == OS_RUN_UNPRIV) {
   18c56:	4c0c      	ldr	r4, [pc, #48]	; (18c88 <os_arch_os_start+0x58>)
   18c58:	6824      	ldr	r4, [r4, #0]
   18c5a:	f014 0f01 	tst.w	r4, #1
   18c5e:	d10f      	bne.n	18c80 <os_arch_os_start+0x50>
    SVC_Call(os_arch_start);
   18c60:	f8df c028 	ldr.w	ip, [pc, #40]	; 18c8c <os_arch_os_start+0x5c>
   18c64:	df00      	svc	0
   18c66:	2000      	movs	r0, #0
            svc_os_arch_start();
        }
    }

    return err;
}
   18c68:	bd10      	pop	{r4, pc}
            if  ((os_flags & 1) == OS_RUN_PRIV) {
   18c6a:	4c07      	ldr	r4, [pc, #28]	; (18c88 <os_arch_os_start+0x58>)
   18c6c:	6824      	ldr	r4, [r4, #0]
   18c6e:	f014 0f01 	tst.w	r4, #1
   18c72:	d1f5      	bne.n	18c60 <os_arch_os_start+0x30>
                err = OS_ERR_PRIV;
   18c74:	2008      	movs	r0, #8
   18c76:	e7f7      	b.n	18c68 <os_arch_os_start+0x38>
    err = OS_ERR_IN_ISR;
   18c78:	2007      	movs	r0, #7
   18c7a:	e7f5      	b.n	18c68 <os_arch_os_start+0x38>
            err = OS_ERR_PRIV;
   18c7c:	2008      	movs	r0, #8
   18c7e:	e7f3      	b.n	18c68 <os_arch_os_start+0x38>
                err = OS_ERR_PRIV;
   18c80:	2008      	movs	r0, #8
   18c82:	e7f1      	b.n	18c68 <os_arch_os_start+0x38>
   18c84:	20009d88 	.word	0x20009d88
   18c88:	20009988 	.word	0x20009988
   18c8c:	00018c01 	.word	0x00018c01

00018c90 <os_set_env>:
        .global os_set_env
os_set_env:
        .fnstart
        .cantunwind

        MSR     PSP,R0
   18c90:	f380 8809 	msr	PSP, r0
        LDR     R0,=os_flags
   18c94:	4832      	ldr	r0, [pc, #200]	; (18d60 <os_default_irq_asm+0x1e>)
        LDRB    R0,[R0]
   18c96:	7800      	ldrb	r0, [r0, #0]
        ADDS    R0, R0, #2
   18c98:	3002      	adds	r0, #2
        MSR     CONTROL,R0
   18c9a:	f380 8814 	msr	CONTROL, r0
        ISB
   18c9e:	f3bf 8f6f 	isb	sy
        BX      LR
   18ca2:	4770      	bx	lr

00018ca4 <os_arch_init_task_stack>:
        .type   os_arch_init_task_stack, %function
        .global os_arch_init_task_stack
os_arch_init_task_stack:
        .fnstart

        STMIA   R0,{R4-R11}
   18ca4:	e880 0ff0 	stmia.w	r0, {r4, r5, r6, r7, r8, r9, sl, fp}
        BX      LR
   18ca8:	4770      	bx	lr

00018caa <SVC_Handler>:
        PUSH    {R4,LR}
        BL      os_trace_isr_enter
        POP     {R4,LR}
#endif

        MRS     R0,PSP                  /* Read PSP */
   18caa:	f3ef 8009 	mrs	r0, PSP
        LDR     R1,[R0,#24]             /* Read Saved PC from Stack */
   18cae:	6981      	ldr	r1, [r0, #24]
        LDRB    R1,[R1,#-2]             /* Load SVC Number */
   18cb0:	f811 1c02 	ldrb.w	r1, [r1, #-2]
        CBNZ    R1,SVC_User
   18cb4:	b951      	cbnz	r1, 18ccc <SVC_User>

        LDM     R0,{R0-R3,R12}          /* Read R0-R3,R12 from stack */
   18cb6:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, ip}
        PUSH    {R4,LR}                 /* Save EXC_RETURN */
   18cba:	b510      	push	{r4, lr}
        BLX     R12                     /* Call SVC Function */
   18cbc:	47e0      	blx	ip
        POP     {R4,LR}                 /* Restore EXC_RETURN */
   18cbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}

        MRS     R12,PSP                 /* Read PSP */
   18cc2:	f3ef 8c09 	mrs	ip, PSP
        STM     R12,{R0-R2}             /* Store return values */
   18cc6:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
        PUSH    {R4,LR}
        BL      os_trace_isr_exit
        POP     {R4,LR}
#endif

        BX      LR                      /* Return from interrupt */
   18cca:	4770      	bx	lr

00018ccc <SVC_User>:

        /*------------------- User SVC ------------------------------*/
SVC_User:
        PUSH    {R4,LR}                 /* Save EXC_RETURN */
   18ccc:	b510      	push	{r4, lr}
        LDR     R2,=SVC_Count
   18cce:	4a25      	ldr	r2, [pc, #148]	; (18d64 <os_default_irq_asm+0x22>)
        LDR     R2,[R2]
   18cd0:	6812      	ldr	r2, [r2, #0]
        CMP     R1,R2
   18cd2:	4291      	cmp	r1, r2
        BHI     SVC_Done                /* Overflow */
   18cd4:	d809      	bhi.n	18cea <SVC_Done>

        LDR     R4,=SVC_Table-4
   18cd6:	4c24      	ldr	r4, [pc, #144]	; (18d68 <os_default_irq_asm+0x26>)
        LDR     R4,[R4,R1,LSL #2]       /* Load SVC Function Address */
   18cd8:	f854 4021 	ldr.w	r4, [r4, r1, lsl #2]

        LDM     R0,{R0-R3,R12}          /* Read R0-R3,R12 from stack */
   18cdc:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, ip}
        BLX     R4                      /* Call SVC Function */
   18ce0:	47a0      	blx	r4

        MRS     R12,PSP
   18ce2:	f3ef 8c09 	mrs	ip, PSP
        STM     R12,{R0-R3}             /* Function return values */
   18ce6:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}

00018cea <SVC_Done>:
SVC_Done:
#if MYNEWT_VAL(OS_SYSVIEW)
        BL      os_trace_isr_exit
#endif
        POP     {R4,LR}                 /* Restore EXC_RETURN */
   18cea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        BX      LR                      /* Return from interrupt */
   18cee:	4770      	bx	lr

00018cf0 <PendSV_Handler>:
        .global PendSV_Handler
PendSV_Handler:
        .fnstart
        .cantunwind

        LDR     R3,=g_os_run_list       /* Get highest priority task ready to run */
   18cf0:	4b1e      	ldr	r3, [pc, #120]	; (18d6c <os_default_irq_asm+0x2a>)
        LDR     R2,[R3]                 /* Store in R2 */
   18cf2:	681a      	ldr	r2, [r3, #0]
        LDR     R3,=g_current_task      /* Get current task */
   18cf4:	4b1e      	ldr	r3, [pc, #120]	; (18d70 <os_default_irq_asm+0x2e>)
        LDR     R1,[R3]                 /* Current task in R1 */
   18cf6:	6819      	ldr	r1, [r3, #0]
        CMP     R1,R2
   18cf8:	4291      	cmp	r1, r2
        IT      EQ
   18cfa:	bf08      	it	eq
        BXEQ    LR                      /* RETI, no task switch */
   18cfc:	4770      	bxeq	lr

        MRS     R12,PSP                 /* Read PSP */
   18cfe:	f3ef 8c09 	mrs	ip, PSP
#if MYNEWT_VAL(HARDFLOAT)
        TST     LR,#0x10                /* is it extended frame? */
   18d02:	f01e 0f10 	tst.w	lr, #16
        IT      EQ
   18d06:	bf08      	it	eq
        VSTMDBEQ R12!,{S16-S31}         /* yes; push the regs */
   18d08:	ed2c 8a10 	vstmdbeq	ip!, {s16-s31}
        STMDB   R12!,{R4-R11,LR}        /* Save Old context */
   18d0c:	e92c 4ff0 	stmdb	ip!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
#else
        STMDB   R12!,{R4-R11}           /* Save Old context */
#endif
        STR     R12,[R1,#0]             /* Update stack pointer in current task */
   18d10:	f8c1 c000 	str.w	ip, [r1]
        STR     R2,[R3]                 /* g_current_task = highest ready */
   18d14:	601a      	str	r2, [r3, #0]

        LDR     R12,[R2,#0]             /* get stack pointer of task we will start */
   18d16:	f8d2 c000 	ldr.w	ip, [r2]
#if MYNEWT_VAL(HARDFLOAT)
        LDMIA   R12!,{R4-R11,LR}        /* Restore New Context */
   18d1a:	e8bc 4ff0 	ldmia.w	ip!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        TST     LR,#0x10                /* is it extended frame? */
   18d1e:	f01e 0f10 	tst.w	lr, #16
        ITTE    EQ
   18d22:	bf06      	itte	eq
        VLDMIAEQ R12!,{S16-S31}         /* yes; pull the regs */
   18d24:	ecbc 8a10 	vldmiaeq	ip!, {s16-s31}
        MVNEQ   LR,#~0xFFFFFFED         /* BX treats it as extended */
   18d28:	f06f 0e12 	mvneq.w	lr, #18
        MVNNE   LR,#~0xFFFFFFFD         /* BX treats is as basic frame */
   18d2c:	f06f 0e02 	mvnne.w	lr, #2
#else
        LDMIA   R12!,{R4-R11}           /* Restore New Context */
#endif
        MSR     PSP,R12                 /* Write PSP */
   18d30:	f38c 8809 	msr	PSP, ip
        MOV     R0, R2
        BL      os_trace_task_start_exec
        POP     {R4,LR}
#endif

        BX      LR                      /* Return to Thread Mode */
   18d34:	4770      	bx	lr

00018d36 <SysTick_Handler>:
        .global SysTick_Handler
SysTick_Handler:
        .fnstart
        .cantunwind

        PUSH    {R4,LR}                 /* Save EXC_RETURN */
   18d36:	b510      	push	{r4, lr}
#if MYNEWT_VAL(OS_SYSVIEW)
        BL      os_trace_isr_enter
#endif
        BL      timer_handler
   18d38:	f7ff fed1 	bl	18ade <timer_handler>
#if MYNEWT_VAL(OS_SYSVIEW)
        BL      os_trace_isr_exit
#endif
        POP     {R4,LR}                 /* Restore EXC_RETURN */
   18d3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        BX      LR
   18d40:	4770      	bx	lr

00018d42 <os_default_irq_asm>:

        /*
         * LR = 0xfffffff9 if we were using MSP as SP
         * LR = 0xfffffffd if we were using PSP as SP
         */
        TST     LR,#4
   18d42:	f01e 0f04 	tst.w	lr, #4
        ITE     EQ
   18d46:	bf0c      	ite	eq
        MRSEQ   R3,MSP
   18d48:	f3ef 8308 	mrseq	r3, MSP
        MRSNE   R3,PSP
   18d4c:	f3ef 8309 	mrsne	r3, PSP
        PUSH    {R3-R11,LR}
   18d50:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
        MOV     R0, SP
   18d54:	4668      	mov	r0, sp
        BL      os_default_irq
   18d56:	f7fe fc61 	bl	1761c <os_default_irq>
        POP     {R3-R11,LR}                 /* Restore EXC_RETURN */
   18d5a:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
        PUSH    {R4,LR}
        BL      os_trace_isr_exit
        POP     {R4,LR}
#endif

        BX      LR
   18d5e:	4770      	bx	lr
        LDR     R0,=os_flags
   18d60:	20009988 	.word	0x20009988
        LDR     R2,=SVC_Count
   18d64:	00000000 	.word	0x00000000
        LDR     R4,=SVC_Table-4
   18d68:	fffffffc 	.word	0xfffffffc
        LDR     R3,=g_os_run_list       /* Get highest priority task ready to run */
   18d6c:	2000010c 	.word	0x2000010c
        LDR     R3,=g_current_task      /* Get current task */
   18d70:	20009e50 	.word	0x20009e50

00018d74 <memcmp>:
int memcmp(const void *s1, const void *s2, size_t n)
{
    int d = 0;

#if defined(ARCH_cortex_m3) || defined(ARCH_cortex_m4) || defined(ARCH_cortex_m7)
    asm (".syntax unified                   \n"
   18d74:	b470      	push	{r4, r5, r6}
   18d76:	f04f 0500 	mov.w	r5, #0
   18d7a:	f022 0603 	bic.w	r6, r2, #3
   18d7e:	e005      	b.n	18d8c <test1>

00018d80 <loop1>:
   18d80:	5943      	ldr	r3, [r0, r5]
   18d82:	594c      	ldr	r4, [r1, r5]
   18d84:	42a3      	cmp	r3, r4
   18d86:	d104      	bne.n	18d92 <res1>
   18d88:	f105 0504 	add.w	r5, r5, #4

00018d8c <test1>:
   18d8c:	42b5      	cmp	r5, r6
   18d8e:	d1f7      	bne.n	18d80 <loop1>
   18d90:	e00d      	b.n	18dae <test2>

00018d92 <res1>:
   18d92:	ba1b      	rev	r3, r3
   18d94:	ba24      	rev	r4, r4
   18d96:	1b1b      	subs	r3, r3, r4
   18d98:	bf8c      	ite	hi
   18d9a:	2301      	movhi	r3, #1
   18d9c:	f04f 33ff 	movls.w	r3, #4294967295	; 0xffffffff
   18da0:	e009      	b.n	18db6 <done>

00018da2 <loop2>:
   18da2:	5d43      	ldrb	r3, [r0, r5]
   18da4:	5d4c      	ldrb	r4, [r1, r5]
   18da6:	1b1b      	subs	r3, r3, r4
   18da8:	d105      	bne.n	18db6 <done>
   18daa:	f105 0501 	add.w	r5, r5, #1

00018dae <test2>:
   18dae:	4295      	cmp	r5, r2
   18db0:	d1f7      	bne.n	18da2 <loop2>
   18db2:	f04f 0300 	mov.w	r3, #0

00018db6 <done>:
   18db6:	4618      	mov	r0, r3
   18db8:	bc70      	pop	{r4, r5, r6}
			break;
	}
#endif

	return d;
}
   18dba:	4770      	bx	lr

00018dbc <memcpy>:
#if defined(__ARM_FEATURE_UNALIGNED)
        /*
         * We can speed up a bit by moving 32-bit words if unaligned access is
         * supported (e.g. Cortex-M3/4/7/33).
         */
        asm (".syntax unified           \n"
   18dbc:	e001      	b.n	18dc2 <test1>

00018dbe <loop1>:
   18dbe:	588b      	ldr	r3, [r1, r2]
   18dc0:	5083      	str	r3, [r0, r2]

00018dc2 <test1>:
   18dc2:	3a04      	subs	r2, #4
   18dc4:	d5fb      	bpl.n	18dbe <loop1>
   18dc6:	f102 0204 	add.w	r2, r2, #4
             "       bpl  loop1         \n"
             "       add  r2, #4        \n"
            );
#endif

        asm (".syntax unified           \n"
   18dca:	e001      	b.n	18dd0 <test2>

00018dcc <loop2>:
   18dcc:	5c8b      	ldrb	r3, [r1, r2]
   18dce:	5483      	strb	r3, [r0, r2]

00018dd0 <test2>:
   18dd0:	3a01      	subs	r2, #1
   18dd2:	d5fb      	bpl.n	18dcc <loop2>
		*q++ = *p++;
	}
#endif

	return dst;
}
   18dd4:	4770      	bx	lr

00018dd6 <memset>:
#if defined(__arm__)
#include <mcu/cmsis_nvic.h>
#endif

void *memset(void *dst, int c, size_t n)
{
   18dd6:	b430      	push	{r4, r5}
	asm volatile ("cld ; rep ; stosq ; movl %3,%%ecx ; rep ; stosb"
		      :"+c" (nq), "+D" (q)
		      : "a" ((unsigned char)c * 0x0101010101010101U),
			"r" ((uint32_t) n & 7));
#elif defined(__arm__)
    asm volatile (".syntax unified                          \n"
   18dd8:	4605      	mov	r5, r0
   18dda:	b2c9      	uxtb	r1, r1
   18ddc:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
   18de0:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
   18de4:	18ab      	adds	r3, r5, r2
   18de6:	2403      	movs	r4, #3
   18de8:	4023      	ands	r3, r4
   18dea:	1ad3      	subs	r3, r2, r3
   18dec:	d40b      	bmi.n	18e06 <memset+0x30>
   18dee:	e001      	b.n	18df4 <memset+0x1e>
   18df0:	3a01      	subs	r2, #1
   18df2:	54a9      	strb	r1, [r5, r2]
   18df4:	429a      	cmp	r2, r3
   18df6:	d1fb      	bne.n	18df0 <memset+0x1a>
   18df8:	e000      	b.n	18dfc <memset+0x26>
   18dfa:	50a9      	str	r1, [r5, r2]
   18dfc:	3a04      	subs	r2, #4
   18dfe:	d5fc      	bpl.n	18dfa <memset+0x24>
   18e00:	3204      	adds	r2, #4
   18e02:	e000      	b.n	18e06 <memset+0x30>
   18e04:	54a9      	strb	r1, [r5, r2]
   18e06:	3a01      	subs	r2, #1
   18e08:	d5fc      	bpl.n	18e04 <memset+0x2e>
		*q++ = c;
	}
#endif

	return dst;
}
   18e0a:	bc30      	pop	{r4, r5}
   18e0c:	4770      	bx	lr

00018e0e <strcmp>:
 */

#include <string.h>

int strcmp(const char *s1, const char *s2)
{
   18e0e:	b430      	push	{r4, r5}
   18e10:	4602      	mov	r2, r0
	const unsigned char *c2 = (const unsigned char *)s2;
	unsigned char ch;
	int d = 0;

	while (1) {
		d = (int)(ch = *c1++) - (int)*c2++;
   18e12:	1c55      	adds	r5, r2, #1
   18e14:	7813      	ldrb	r3, [r2, #0]
   18e16:	1c4c      	adds	r4, r1, #1
   18e18:	7808      	ldrb	r0, [r1, #0]
		if (d || !ch)
   18e1a:	1a18      	subs	r0, r3, r0
   18e1c:	d103      	bne.n	18e26 <strcmp+0x18>
		d = (int)(ch = *c1++) - (int)*c2++;
   18e1e:	462a      	mov	r2, r5
   18e20:	4621      	mov	r1, r4
		if (d || !ch)
   18e22:	2b00      	cmp	r3, #0
   18e24:	d1f5      	bne.n	18e12 <strcmp+0x4>
			break;
	}

	return d;
}
   18e26:	bc30      	pop	{r4, r5}
   18e28:	4770      	bx	lr

00018e2a <strlen>:

#include <string.h>

size_t strlen(const char *s)
{
	const char *ss = s;
   18e2a:	4603      	mov	r3, r0
	while (*ss)
   18e2c:	e000      	b.n	18e30 <strlen+0x6>
		ss++;
   18e2e:	3301      	adds	r3, #1
	while (*ss)
   18e30:	781a      	ldrb	r2, [r3, #0]
   18e32:	2a00      	cmp	r2, #0
   18e34:	d1fb      	bne.n	18e2e <strlen+0x4>
	return ss - s;
}
   18e36:	1a18      	subs	r0, r3, r0
   18e38:	4770      	bx	lr

00018e3a <ui2a>:
    char base;  /**<  number base (e.g.: 8, 10, 16) */
    char *bf;           /**<  Buffer to output */
};

static void ui2a(unsigned long long int num, struct param *p)
{
   18e3a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   18e3e:	b082      	sub	sp, #8
   18e40:	e9cd 0100 	strd	r0, r1, [sp]
   18e44:	4691      	mov	r9, r2
    int n = 0;
    unsigned long long int d = 1;
    char *bf = p->bf;
   18e46:	f8d2 8004 	ldr.w	r8, [r2, #4]
    unsigned long long int d = 1;
   18e4a:	2401      	movs	r4, #1
   18e4c:	2500      	movs	r5, #0
    while (num / d >= p->base)
   18e4e:	e004      	b.n	18e5a <ui2a+0x20>
        d *= p->base;
   18e50:	fb06 f305 	mul.w	r3, r6, r5
   18e54:	fba4 4506 	umull	r4, r5, r4, r6
   18e58:	441d      	add	r5, r3
    while (num / d >= p->base)
   18e5a:	4622      	mov	r2, r4
   18e5c:	462b      	mov	r3, r5
   18e5e:	e9dd 0100 	ldrd	r0, r1, [sp]
   18e62:	f001 febd 	bl	1abe0 <__aeabi_uldivmod>
   18e66:	f899 6003 	ldrb.w	r6, [r9, #3]
   18e6a:	2700      	movs	r7, #0
   18e6c:	42b9      	cmp	r1, r7
   18e6e:	bf08      	it	eq
   18e70:	42b0      	cmpeq	r0, r6
   18e72:	d2ed      	bcs.n	18e50 <ui2a+0x16>
    int n = 0;
   18e74:	f04f 0a00 	mov.w	sl, #0
   18e78:	e007      	b.n	18e8a <ui2a+0x50>
    while (d != 0) {
        unsigned long long  dgt = num / d;
        num %= d;
        d /= p->base;
        if (n || dgt > 0 || d == 0) {
            *bf++ = dgt + (dgt < 10 ? '0' : (p->uc ? 'A' : 'a') - 10);
   18e7a:	2330      	movs	r3, #48	; 0x30
   18e7c:	441e      	add	r6, r3
   18e7e:	f888 6000 	strb.w	r6, [r8]
            ++n;
   18e82:	f10a 0a01 	add.w	sl, sl, #1
            *bf++ = dgt + (dgt < 10 ? '0' : (p->uc ? 'A' : 'a') - 10);
   18e86:	f108 0801 	add.w	r8, r8, #1
    while (d != 0) {
   18e8a:	ea54 0305 	orrs.w	r3, r4, r5
   18e8e:	d02e      	beq.n	18eee <ui2a+0xb4>
        unsigned long long  dgt = num / d;
   18e90:	4622      	mov	r2, r4
   18e92:	462b      	mov	r3, r5
   18e94:	e9dd 0100 	ldrd	r0, r1, [sp]
   18e98:	f001 fea2 	bl	1abe0 <__aeabi_uldivmod>
   18e9c:	4606      	mov	r6, r0
   18e9e:	460f      	mov	r7, r1
        num %= d;
   18ea0:	4622      	mov	r2, r4
   18ea2:	462b      	mov	r3, r5
   18ea4:	e9dd 0100 	ldrd	r0, r1, [sp]
   18ea8:	f001 fe9a 	bl	1abe0 <__aeabi_uldivmod>
   18eac:	e9cd 2300 	strd	r2, r3, [sp]
        d /= p->base;
   18eb0:	f899 2003 	ldrb.w	r2, [r9, #3]
   18eb4:	2300      	movs	r3, #0
   18eb6:	4620      	mov	r0, r4
   18eb8:	4629      	mov	r1, r5
   18eba:	f001 fe91 	bl	1abe0 <__aeabi_uldivmod>
   18ebe:	4604      	mov	r4, r0
   18ec0:	460d      	mov	r5, r1
        if (n || dgt > 0 || d == 0) {
   18ec2:	f1ba 0f00 	cmp.w	sl, #0
   18ec6:	d105      	bne.n	18ed4 <ui2a+0x9a>
   18ec8:	ea56 0307 	orrs.w	r3, r6, r7
   18ecc:	d102      	bne.n	18ed4 <ui2a+0x9a>
   18ece:	ea54 0305 	orrs.w	r3, r4, r5
   18ed2:	d1da      	bne.n	18e8a <ui2a+0x50>
            *bf++ = dgt + (dgt < 10 ? '0' : (p->uc ? 'A' : 'a') - 10);
   18ed4:	2f00      	cmp	r7, #0
   18ed6:	bf08      	it	eq
   18ed8:	2e0a      	cmpeq	r6, #10
   18eda:	d3ce      	bcc.n	18e7a <ui2a+0x40>
   18edc:	f899 3002 	ldrb.w	r3, [r9, #2]
   18ee0:	f013 0f04 	tst.w	r3, #4
   18ee4:	d001      	beq.n	18eea <ui2a+0xb0>
   18ee6:	2337      	movs	r3, #55	; 0x37
   18ee8:	e7c8      	b.n	18e7c <ui2a+0x42>
   18eea:	2357      	movs	r3, #87	; 0x57
   18eec:	e7c6      	b.n	18e7c <ui2a+0x42>
        }
    }
    *bf = 0;
   18eee:	2300      	movs	r3, #0
   18ef0:	f888 3000 	strb.w	r3, [r8]
}
   18ef4:	b002      	add	sp, #8
   18ef6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00018efa <i2a>:

static void i2a(long long int num, struct param *p)
{
   18efa:	b508      	push	{r3, lr}
    if (num < 0) {
   18efc:	2800      	cmp	r0, #0
   18efe:	f171 0300 	sbcs.w	r3, r1, #0
   18f02:	db02      	blt.n	18f0a <i2a+0x10>
        num = -num;
        p->sign = 1;
    }
    ui2a(num, p);
   18f04:	f7ff ff99 	bl	18e3a <ui2a>
}
   18f08:	bd08      	pop	{r3, pc}
        num = -num;
   18f0a:	4240      	negs	r0, r0
   18f0c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
        p->sign = 1;
   18f10:	7893      	ldrb	r3, [r2, #2]
   18f12:	f043 0301 	orr.w	r3, r3, #1
   18f16:	7093      	strb	r3, [r2, #2]
   18f18:	e7f4      	b.n	18f04 <i2a+0xa>

00018f1a <a2d>:

static int a2d(char ch)
{
    if (ch >= '0' && ch <= '9')
   18f1a:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
   18f1e:	b2db      	uxtb	r3, r3
   18f20:	2b09      	cmp	r3, #9
   18f22:	d90b      	bls.n	18f3c <a2d+0x22>
        return ch - '0';
    else if (ch >= 'a' && ch <= 'f')
   18f24:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
   18f28:	b2db      	uxtb	r3, r3
   18f2a:	2b05      	cmp	r3, #5
   18f2c:	d908      	bls.n	18f40 <a2d+0x26>
        return ch - 'a' + 10;
    else if (ch >= 'A' && ch <= 'F')
   18f2e:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
   18f32:	b2db      	uxtb	r3, r3
   18f34:	2b05      	cmp	r3, #5
   18f36:	d805      	bhi.n	18f44 <a2d+0x2a>
        return ch - 'A' + 10;
   18f38:	3837      	subs	r0, #55	; 0x37
   18f3a:	4770      	bx	lr
        return ch - '0';
   18f3c:	3830      	subs	r0, #48	; 0x30
   18f3e:	4770      	bx	lr
        return ch - 'a' + 10;
   18f40:	3857      	subs	r0, #87	; 0x57
   18f42:	4770      	bx	lr
    else
        return -1;
   18f44:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
}
   18f48:	4770      	bx	lr

00018f4a <a2i>:

static char a2i(char ch, const char **src, int base, unsigned char *nump)
{
   18f4a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   18f4e:	4605      	mov	r5, r0
   18f50:	4688      	mov	r8, r1
   18f52:	4617      	mov	r7, r2
   18f54:	4699      	mov	r9, r3
    const char *p = *src;
   18f56:	680c      	ldr	r4, [r1, #0]
    int num = 0;
   18f58:	2600      	movs	r6, #0
    int digit;
    while ((digit = a2d(ch)) >= 0) {
   18f5a:	4628      	mov	r0, r5
   18f5c:	f7ff ffdd 	bl	18f1a <a2d>
   18f60:	2800      	cmp	r0, #0
   18f62:	db06      	blt.n	18f72 <a2i+0x28>
        if (digit > base)
   18f64:	42b8      	cmp	r0, r7
   18f66:	dc04      	bgt.n	18f72 <a2i+0x28>
            break;
        num = num * base + digit;
   18f68:	fb07 0606 	mla	r6, r7, r6, r0
        ch = *p++;
   18f6c:	7825      	ldrb	r5, [r4, #0]
   18f6e:	3401      	adds	r4, #1
   18f70:	e7f3      	b.n	18f5a <a2i+0x10>
    }
    *src = p;
   18f72:	f8c8 4000 	str.w	r4, [r8]
    *nump = num;
   18f76:	f889 6000 	strb.w	r6, [r9]
    return ch;
}
   18f7a:	4628      	mov	r0, r5
   18f7c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00018f80 <putf>:

static int putf(FILE *putp, char c)
{
   18f80:	b500      	push	{lr}
   18f82:	b083      	sub	sp, #12
	return fwrite(s, 1, strlen(s), stdout) + fwrite("\n", 1, 1, stdout);
}

__extern_inline int fputc(int c, FILE *f)
{
	unsigned char ch = c;
   18f84:	f88d 1007 	strb.w	r1, [sp, #7]
    if (stream->vmt->write == NULL) return 0;
   18f88:	6803      	ldr	r3, [r0, #0]
   18f8a:	681b      	ldr	r3, [r3, #0]
   18f8c:	b14b      	cbz	r3, 18fa2 <putf+0x22>
    return stream->vmt->write(stream, (char*)buf, size*nmemb) / size;
   18f8e:	2201      	movs	r2, #1
   18f90:	f10d 0107 	add.w	r1, sp, #7
   18f94:	4798      	blx	r3
	return fwrite(&ch, 1, 1, f) == 1 ? ch : EOF;
   18f96:	2801      	cmp	r0, #1
   18f98:	d005      	beq.n	18fa6 <putf+0x26>
    if (fputc(c, putp) == EOF)
        return 0;
   18f9a:	2000      	movs	r0, #0
    else
        return 1;
}
   18f9c:	b003      	add	sp, #12
   18f9e:	f85d fb04 	ldr.w	pc, [sp], #4
        return 0;
   18fa2:	2000      	movs	r0, #0
   18fa4:	e7fa      	b.n	18f9c <putf+0x1c>
        return 1;
   18fa6:	2001      	movs	r0, #1
   18fa8:	e7f8      	b.n	18f9c <putf+0x1c>
	...

00018fac <putchw>:

static unsigned putchw(FILE *putp, struct param *p)
{
   18fac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   18fb0:	4606      	mov	r6, r0
   18fb2:	460f      	mov	r7, r1
    unsigned written = 0;
    char ch;
    int n = p->width;
   18fb4:	780c      	ldrb	r4, [r1, #0]
    char *bf = p->bf;
   18fb6:	684b      	ldr	r3, [r1, #4]

    /* Number of filling characters */
    while (*bf++ && n > 0)
   18fb8:	e001      	b.n	18fbe <putchw+0x12>
        n--;
   18fba:	3c01      	subs	r4, #1
    while (*bf++ && n > 0)
   18fbc:	4613      	mov	r3, r2
   18fbe:	1c5a      	adds	r2, r3, #1
   18fc0:	781b      	ldrb	r3, [r3, #0]
   18fc2:	b10b      	cbz	r3, 18fc8 <putchw+0x1c>
   18fc4:	2c00      	cmp	r4, #0
   18fc6:	dcf8      	bgt.n	18fba <putchw+0xe>
    if (p->sign)
   18fc8:	78bb      	ldrb	r3, [r7, #2]
   18fca:	f013 0f01 	tst.w	r3, #1
   18fce:	d000      	beq.n	18fd2 <putchw+0x26>
        n--;
   18fd0:	3c01      	subs	r4, #1
    if (p->alt && p->base == 16)
   18fd2:	887b      	ldrh	r3, [r7, #2]
   18fd4:	f023 03fd 	bic.w	r3, r3, #253	; 0xfd
   18fd8:	b29b      	uxth	r3, r3
   18fda:	f241 0202 	movw	r2, #4098	; 0x1002
   18fde:	4293      	cmp	r3, r2
   18fe0:	d01c      	beq.n	1901c <putchw+0x70>
        n -= 2;
    else if (p->alt && p->base == 8)
   18fe2:	f640 0202 	movw	r2, #2050	; 0x802
   18fe6:	4293      	cmp	r3, r2
   18fe8:	d01a      	beq.n	19020 <putchw+0x74>
        n--;

    /* Unless left-aligned, fill with space, before alternate or sign */
    if (!p->lz && !p->left) {
   18fea:	683b      	ldr	r3, [r7, #0]
   18fec:	4d35      	ldr	r5, [pc, #212]	; (190c4 <putchw+0x118>)
   18fee:	401d      	ands	r5, r3
   18ff0:	b1f5      	cbz	r5, 19030 <putchw+0x84>
    unsigned written = 0;
   18ff2:	2500      	movs	r5, #0
        while (n-- > 0)
            written += putf(putp, ' ');
    }

    /* print sign */
    if (p->sign)
   18ff4:	78bb      	ldrb	r3, [r7, #2]
   18ff6:	f013 0f01 	tst.w	r3, #1
   18ffa:	d11f      	bne.n	1903c <putchw+0x90>
        written += putf(putp, '-');

    /* Alternate */
    if (p->alt && p->base == 16) {
   18ffc:	887b      	ldrh	r3, [r7, #2]
   18ffe:	f023 03fd 	bic.w	r3, r3, #253	; 0xfd
   19002:	b29b      	uxth	r3, r3
   19004:	f241 0202 	movw	r2, #4098	; 0x1002
   19008:	4293      	cmp	r3, r2
   1900a:	d01d      	beq.n	19048 <putchw+0x9c>
        written += putf(putp, '0');
        written += putf(putp, (p->uc ? 'X' : 'x'));
    } else if (p->alt && p->base == 8) {
   1900c:	f640 0202 	movw	r2, #2050	; 0x802
   19010:	4293      	cmp	r3, r2
   19012:	d02a      	beq.n	1906a <putchw+0xbe>
        written += putf(putp, '0');
    }

    /* Fill with zeros, after alternate or sign */
    if (p->lz) {
   19014:	787b      	ldrb	r3, [r7, #1]
   19016:	bba3      	cbnz	r3, 19082 <putchw+0xd6>
        while (n-- > 0)
            written += putf(putp, '0');
    }

    /* Put actual buffer */
    bf = p->bf;
   19018:	687b      	ldr	r3, [r7, #4]
    while ((ch = *bf++))
   1901a:	e03d      	b.n	19098 <putchw+0xec>
        n -= 2;
   1901c:	3c02      	subs	r4, #2
   1901e:	e7e4      	b.n	18fea <putchw+0x3e>
        n--;
   19020:	3c01      	subs	r4, #1
   19022:	e7e2      	b.n	18fea <putchw+0x3e>
            written += putf(putp, ' ');
   19024:	2120      	movs	r1, #32
   19026:	4630      	mov	r0, r6
   19028:	f7ff ffaa 	bl	18f80 <putf>
   1902c:	4405      	add	r5, r0
        while (n-- > 0)
   1902e:	4644      	mov	r4, r8
   19030:	f104 38ff 	add.w	r8, r4, #4294967295	; 0xffffffff
   19034:	2c00      	cmp	r4, #0
   19036:	dcf5      	bgt.n	19024 <putchw+0x78>
   19038:	4644      	mov	r4, r8
   1903a:	e7db      	b.n	18ff4 <putchw+0x48>
        written += putf(putp, '-');
   1903c:	212d      	movs	r1, #45	; 0x2d
   1903e:	4630      	mov	r0, r6
   19040:	f7ff ff9e 	bl	18f80 <putf>
   19044:	4405      	add	r5, r0
   19046:	e7d9      	b.n	18ffc <putchw+0x50>
        written += putf(putp, '0');
   19048:	2130      	movs	r1, #48	; 0x30
   1904a:	4630      	mov	r0, r6
   1904c:	f7ff ff98 	bl	18f80 <putf>
   19050:	4405      	add	r5, r0
        written += putf(putp, (p->uc ? 'X' : 'x'));
   19052:	78bb      	ldrb	r3, [r7, #2]
   19054:	f013 0f04 	tst.w	r3, #4
   19058:	d005      	beq.n	19066 <putchw+0xba>
   1905a:	2158      	movs	r1, #88	; 0x58
   1905c:	4630      	mov	r0, r6
   1905e:	f7ff ff8f 	bl	18f80 <putf>
   19062:	4405      	add	r5, r0
   19064:	e7d6      	b.n	19014 <putchw+0x68>
   19066:	2178      	movs	r1, #120	; 0x78
   19068:	e7f8      	b.n	1905c <putchw+0xb0>
        written += putf(putp, '0');
   1906a:	2130      	movs	r1, #48	; 0x30
   1906c:	4630      	mov	r0, r6
   1906e:	f7ff ff87 	bl	18f80 <putf>
   19072:	4405      	add	r5, r0
   19074:	e7ce      	b.n	19014 <putchw+0x68>
            written += putf(putp, '0');
   19076:	2130      	movs	r1, #48	; 0x30
   19078:	4630      	mov	r0, r6
   1907a:	f7ff ff81 	bl	18f80 <putf>
   1907e:	4405      	add	r5, r0
        while (n-- > 0)
   19080:	4644      	mov	r4, r8
   19082:	f104 38ff 	add.w	r8, r4, #4294967295	; 0xffffffff
   19086:	2c00      	cmp	r4, #0
   19088:	dcf5      	bgt.n	19076 <putchw+0xca>
   1908a:	4644      	mov	r4, r8
   1908c:	e7c4      	b.n	19018 <putchw+0x6c>
        written += putf(putp, ch);
   1908e:	4630      	mov	r0, r6
   19090:	f7ff ff76 	bl	18f80 <putf>
   19094:	4405      	add	r5, r0
    while ((ch = *bf++))
   19096:	4643      	mov	r3, r8
   19098:	f103 0801 	add.w	r8, r3, #1
   1909c:	7819      	ldrb	r1, [r3, #0]
   1909e:	2900      	cmp	r1, #0
   190a0:	d1f5      	bne.n	1908e <putchw+0xe2>

    /* If left-aligned, pad the end with spaces. */
    if (p->left) {
   190a2:	78bb      	ldrb	r3, [r7, #2]
   190a4:	f013 0f08 	tst.w	r3, #8
   190a8:	d106      	bne.n	190b8 <putchw+0x10c>
   190aa:	e008      	b.n	190be <putchw+0x112>
        while (n-- > 0)
            written += putf(putp, ' ');
   190ac:	2120      	movs	r1, #32
   190ae:	4630      	mov	r0, r6
   190b0:	f7ff ff66 	bl	18f80 <putf>
   190b4:	4405      	add	r5, r0
        while (n-- > 0)
   190b6:	463c      	mov	r4, r7
   190b8:	1e67      	subs	r7, r4, #1
   190ba:	2c00      	cmp	r4, #0
   190bc:	dcf6      	bgt.n	190ac <putchw+0x100>
    }
    
    return written;
}
   190be:	4628      	mov	r0, r5
   190c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   190c4:	0008ff00 	.word	0x0008ff00

000190c8 <intarg>:
static unsigned long long
intarg(int lng, int sign, va_list *va)
{
    unsigned long long val;

    switch (lng) {
   190c8:	b160      	cbz	r0, 190e4 <intarg+0x1c>
   190ca:	2801      	cmp	r0, #1
   190cc:	d017      	beq.n	190fe <intarg+0x36>
        }
        break;

    case 2:
    default:
        if (sign) {
   190ce:	bb19      	cbnz	r1, 19118 <intarg+0x50>
            val = va_arg(*va, long long);
        } else {
            val = va_arg(*va, unsigned long long);
   190d0:	6813      	ldr	r3, [r2, #0]
   190d2:	3307      	adds	r3, #7
   190d4:	f023 0307 	bic.w	r3, r3, #7
   190d8:	f103 0108 	add.w	r1, r3, #8
   190dc:	6011      	str	r1, [r2, #0]
   190de:	e9d3 0100 	ldrd	r0, r1, [r3]
        }
        break;
    }

    return val;
}
   190e2:	4770      	bx	lr
        if (sign) {
   190e4:	b129      	cbz	r1, 190f2 <intarg+0x2a>
            val = va_arg(*va, int);
   190e6:	6813      	ldr	r3, [r2, #0]
   190e8:	1d19      	adds	r1, r3, #4
   190ea:	6011      	str	r1, [r2, #0]
   190ec:	6818      	ldr	r0, [r3, #0]
   190ee:	17c1      	asrs	r1, r0, #31
   190f0:	4770      	bx	lr
            val = va_arg(*va, unsigned int);
   190f2:	6813      	ldr	r3, [r2, #0]
   190f4:	1d19      	adds	r1, r3, #4
   190f6:	6011      	str	r1, [r2, #0]
   190f8:	6818      	ldr	r0, [r3, #0]
   190fa:	2100      	movs	r1, #0
   190fc:	4770      	bx	lr
        if (sign) {
   190fe:	b129      	cbz	r1, 1910c <intarg+0x44>
            val = va_arg(*va, long);
   19100:	6813      	ldr	r3, [r2, #0]
   19102:	1d19      	adds	r1, r3, #4
   19104:	6011      	str	r1, [r2, #0]
   19106:	6818      	ldr	r0, [r3, #0]
   19108:	17c1      	asrs	r1, r0, #31
   1910a:	4770      	bx	lr
            val = va_arg(*va, unsigned long);
   1910c:	6813      	ldr	r3, [r2, #0]
   1910e:	1d19      	adds	r1, r3, #4
   19110:	6011      	str	r1, [r2, #0]
   19112:	6818      	ldr	r0, [r3, #0]
   19114:	2100      	movs	r1, #0
   19116:	4770      	bx	lr
            val = va_arg(*va, long long);
   19118:	6813      	ldr	r3, [r2, #0]
   1911a:	3307      	adds	r3, #7
   1911c:	f023 0307 	bic.w	r3, r3, #7
   19120:	f103 0108 	add.w	r1, r3, #8
   19124:	6011      	str	r1, [r2, #0]
   19126:	e9d3 0100 	ldrd	r0, r1, [r3]
   1912a:	4770      	bx	lr

0001912c <tfp_format>:

size_t tfp_format(FILE *putp, const char *fmt, va_list va)
{
   1912c:	b570      	push	{r4, r5, r6, lr}
   1912e:	b08a      	sub	sp, #40	; 0x28
   19130:	4605      	mov	r5, r0
   19132:	9101      	str	r1, [sp, #4]
   19134:	9200      	str	r2, [sp, #0]
    double d;
    int n;
#endif
    int i;

    p.bf = bf;
   19136:	ab02      	add	r3, sp, #8
   19138:	9309      	str	r3, [sp, #36]	; 0x24
    size_t written = 0;
   1913a:	2400      	movs	r4, #0

    while ((ch = *(fmt++))) {
   1913c:	9b01      	ldr	r3, [sp, #4]
   1913e:	1c5a      	adds	r2, r3, #1
   19140:	9201      	str	r2, [sp, #4]
   19142:	7819      	ldrb	r1, [r3, #0]
   19144:	2900      	cmp	r1, #0
   19146:	f000 811c 	beq.w	19382 <tfp_format+0x256>
        if (ch != '%') {
   1914a:	2925      	cmp	r1, #37	; 0x25
   1914c:	d004      	beq.n	19158 <tfp_format+0x2c>
            written += putf(putp, ch);
   1914e:	4628      	mov	r0, r5
   19150:	f7ff ff16 	bl	18f80 <putf>
   19154:	4404      	add	r4, r0
   19156:	e7f1      	b.n	1913c <tfp_format+0x10>
        } else {
            /* Init parameter struct */
            p.lz = 0;
   19158:	2200      	movs	r2, #0
   1915a:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
            p.alt = 0;
   1915e:	f89d 3022 	ldrb.w	r3, [sp, #34]	; 0x22
            p.width = 0;
   19162:	f88d 2020 	strb.w	r2, [sp, #32]
            p.sign = 0;
            p.left = 0;
            p.uc = 0;
   19166:	f003 03f4 	and.w	r3, r3, #244	; 0xf4
   1916a:	f362 0382 	bfi	r3, r2, #2, #1
   1916e:	f88d 3022 	strb.w	r3, [sp, #34]	; 0x22
            lng = 0;

            /* Flags */
            while ((ch = *(fmt++))) {
   19172:	9b01      	ldr	r3, [sp, #4]
   19174:	1c5a      	adds	r2, r3, #1
   19176:	9201      	str	r2, [sp, #4]
   19178:	7818      	ldrb	r0, [r3, #0]
   1917a:	b128      	cbz	r0, 19188 <tfp_format+0x5c>
                switch (ch) {
   1917c:	282d      	cmp	r0, #45	; 0x2d
   1917e:	d04e      	beq.n	1921e <tfp_format+0xf2>
   19180:	2830      	cmp	r0, #48	; 0x30
   19182:	d03c      	beq.n	191fe <tfp_format+0xd2>
   19184:	2823      	cmp	r0, #35	; 0x23
   19186:	d043      	beq.n	19210 <tfp_format+0xe4>
                }
                break;
            }

            /* Width */
            if (ch == '*') {
   19188:	282a      	cmp	r0, #42	; 0x2a
   1918a:	d052      	beq.n	19232 <tfp_format+0x106>
                    p.width = UCHAR_MAX;
                } else if (i > 0) {
                    p.width = i;
                }
                ch = *(fmt++);
            } else if (ch >= '0' && ch <= '9') {
   1918c:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
   19190:	b2db      	uxtb	r3, r3
   19192:	2b09      	cmp	r3, #9
   19194:	d961      	bls.n	1925a <tfp_format+0x12e>
                ch = a2i(ch, &fmt, 10, &(p.width));
            }
            if (ch == 'l') {
   19196:	286c      	cmp	r0, #108	; 0x6c
   19198:	d065      	beq.n	19266 <tfp_format+0x13a>
            lng = 0;
   1919a:	2600      	movs	r6, #0
                    ch = *(fmt++);
                    lng = 2;
                }
            }

            if (ch == 'z') {
   1919c:	287a      	cmp	r0, #122	; 0x7a
   1919e:	d06f      	beq.n	19280 <tfp_format+0x154>
                ch = *(fmt++);
            }

            switch (ch) {
   191a0:	2869      	cmp	r0, #105	; 0x69
   191a2:	f000 808e 	beq.w	192c2 <tfp_format+0x196>
   191a6:	d970      	bls.n	1928a <tfp_format+0x15e>
   191a8:	2873      	cmp	r0, #115	; 0x73
   191aa:	f000 80dd 	beq.w	19368 <tfp_format+0x23c>
   191ae:	f200 8099 	bhi.w	192e4 <tfp_format+0x1b8>
   191b2:	286f      	cmp	r0, #111	; 0x6f
   191b4:	f000 80c7 	beq.w	19346 <tfp_format+0x21a>
   191b8:	2870      	cmp	r0, #112	; 0x70
   191ba:	d1bf      	bne.n	1913c <tfp_format+0x10>
                p.base = 8;
                ui2a(intarg(lng, 0, &va), &p);
                written += putchw(putp, &p);
                break;
            case 'p':
                v = va_arg(va, void *);
   191bc:	9b00      	ldr	r3, [sp, #0]
   191be:	1d1a      	adds	r2, r3, #4
   191c0:	9200      	str	r2, [sp, #0]
   191c2:	6818      	ldr	r0, [r3, #0]
                p.base = 16;
   191c4:	2310      	movs	r3, #16
   191c6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
                ui2a((uintptr_t)v, &p);
   191ca:	aa08      	add	r2, sp, #32
   191cc:	2100      	movs	r1, #0
   191ce:	f7ff fe34 	bl	18e3a <ui2a>
                p.width = 2 * sizeof(void*);
   191d2:	2308      	movs	r3, #8
   191d4:	f88d 3020 	strb.w	r3, [sp, #32]
                p.lz = 1;
   191d8:	2301      	movs	r3, #1
   191da:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
                written += putf(putp, '0');
   191de:	2130      	movs	r1, #48	; 0x30
   191e0:	4628      	mov	r0, r5
   191e2:	f7ff fecd 	bl	18f80 <putf>
   191e6:	4404      	add	r4, r0
                written += putf(putp, 'x');
   191e8:	2178      	movs	r1, #120	; 0x78
   191ea:	4628      	mov	r0, r5
   191ec:	f7ff fec8 	bl	18f80 <putf>
   191f0:	4404      	add	r4, r0
                written += putchw(putp, &p);
   191f2:	a908      	add	r1, sp, #32
   191f4:	4628      	mov	r0, r5
   191f6:	f7ff fed9 	bl	18fac <putchw>
   191fa:	4404      	add	r4, r0
                break;
   191fc:	e79e      	b.n	1913c <tfp_format+0x10>
                    if (!p.left) {
   191fe:	f89d 3022 	ldrb.w	r3, [sp, #34]	; 0x22
   19202:	f013 0f08 	tst.w	r3, #8
   19206:	d1b4      	bne.n	19172 <tfp_format+0x46>
                        p.lz = 1;
   19208:	2301      	movs	r3, #1
   1920a:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
                    continue;
   1920e:	e7b0      	b.n	19172 <tfp_format+0x46>
                    p.alt = 1;
   19210:	f89d 3022 	ldrb.w	r3, [sp, #34]	; 0x22
   19214:	f043 0302 	orr.w	r3, r3, #2
   19218:	f88d 3022 	strb.w	r3, [sp, #34]	; 0x22
                    continue;
   1921c:	e7a9      	b.n	19172 <tfp_format+0x46>
                    p.left = 1;
   1921e:	f89d 3022 	ldrb.w	r3, [sp, #34]	; 0x22
   19222:	f043 0308 	orr.w	r3, r3, #8
   19226:	f88d 3022 	strb.w	r3, [sp, #34]	; 0x22
                    p.lz = 0;
   1922a:	2300      	movs	r3, #0
   1922c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
                    continue;
   19230:	e79f      	b.n	19172 <tfp_format+0x46>
                i = intarg(0, 1, &va);
   19232:	466a      	mov	r2, sp
   19234:	2101      	movs	r1, #1
   19236:	2000      	movs	r0, #0
   19238:	f7ff ff46 	bl	190c8 <intarg>
                if (i > UCHAR_MAX) {
   1923c:	28ff      	cmp	r0, #255	; 0xff
   1923e:	dd07      	ble.n	19250 <tfp_format+0x124>
                    p.width = UCHAR_MAX;
   19240:	23ff      	movs	r3, #255	; 0xff
   19242:	f88d 3020 	strb.w	r3, [sp, #32]
                ch = *(fmt++);
   19246:	9b01      	ldr	r3, [sp, #4]
   19248:	1c5a      	adds	r2, r3, #1
   1924a:	9201      	str	r2, [sp, #4]
   1924c:	7818      	ldrb	r0, [r3, #0]
   1924e:	e7a2      	b.n	19196 <tfp_format+0x6a>
                } else if (i > 0) {
   19250:	2800      	cmp	r0, #0
   19252:	ddf8      	ble.n	19246 <tfp_format+0x11a>
                    p.width = i;
   19254:	f88d 0020 	strb.w	r0, [sp, #32]
   19258:	e7f5      	b.n	19246 <tfp_format+0x11a>
                ch = a2i(ch, &fmt, 10, &(p.width));
   1925a:	ab08      	add	r3, sp, #32
   1925c:	220a      	movs	r2, #10
   1925e:	a901      	add	r1, sp, #4
   19260:	f7ff fe73 	bl	18f4a <a2i>
   19264:	e797      	b.n	19196 <tfp_format+0x6a>
                ch = *(fmt++);
   19266:	9b01      	ldr	r3, [sp, #4]
   19268:	1c5a      	adds	r2, r3, #1
   1926a:	9201      	str	r2, [sp, #4]
   1926c:	7818      	ldrb	r0, [r3, #0]
                if (ch == 'l') {
   1926e:	286c      	cmp	r0, #108	; 0x6c
   19270:	d001      	beq.n	19276 <tfp_format+0x14a>
                lng = 1;
   19272:	2601      	movs	r6, #1
   19274:	e792      	b.n	1919c <tfp_format+0x70>
                    ch = *(fmt++);
   19276:	1c9a      	adds	r2, r3, #2
   19278:	9201      	str	r2, [sp, #4]
   1927a:	7858      	ldrb	r0, [r3, #1]
                    lng = 2;
   1927c:	2602      	movs	r6, #2
   1927e:	e78d      	b.n	1919c <tfp_format+0x70>
                ch = *(fmt++);
   19280:	9b01      	ldr	r3, [sp, #4]
   19282:	1c5a      	adds	r2, r3, #1
   19284:	9201      	str	r2, [sp, #4]
   19286:	7818      	ldrb	r0, [r3, #0]
   19288:	e78a      	b.n	191a0 <tfp_format+0x74>
            switch (ch) {
   1928a:	2858      	cmp	r0, #88	; 0x58
   1928c:	d040      	beq.n	19310 <tfp_format+0x1e4>
   1928e:	d80a      	bhi.n	192a6 <tfp_format+0x17a>
   19290:	2800      	cmp	r0, #0
   19292:	d076      	beq.n	19382 <tfp_format+0x256>
   19294:	2825      	cmp	r0, #37	; 0x25
   19296:	f47f af51 	bne.w	1913c <tfp_format+0x10>
                /* Output the decimal part. */
                written += putchw(putp, &p);
                break;
#endif
            case '%':
                written += putf(putp, ch);
   1929a:	4601      	mov	r1, r0
   1929c:	4628      	mov	r0, r5
   1929e:	f7ff fe6f 	bl	18f80 <putf>
   192a2:	4404      	add	r4, r0
                break;
   192a4:	e74a      	b.n	1913c <tfp_format+0x10>
            switch (ch) {
   192a6:	2863      	cmp	r0, #99	; 0x63
   192a8:	d108      	bne.n	192bc <tfp_format+0x190>
                written += putf(putp, (char)(va_arg(va, int)));
   192aa:	9b00      	ldr	r3, [sp, #0]
   192ac:	1d1a      	adds	r2, r3, #4
   192ae:	9200      	str	r2, [sp, #0]
   192b0:	7819      	ldrb	r1, [r3, #0]
   192b2:	4628      	mov	r0, r5
   192b4:	f7ff fe64 	bl	18f80 <putf>
   192b8:	4404      	add	r4, r0
                break;
   192ba:	e73f      	b.n	1913c <tfp_format+0x10>
            switch (ch) {
   192bc:	2864      	cmp	r0, #100	; 0x64
   192be:	f47f af3d 	bne.w	1913c <tfp_format+0x10>
                p.base = 10;
   192c2:	230a      	movs	r3, #10
   192c4:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
                i2a(intarg(lng, 1, &va), &p);
   192c8:	466a      	mov	r2, sp
   192ca:	2101      	movs	r1, #1
   192cc:	4630      	mov	r0, r6
   192ce:	f7ff fefb 	bl	190c8 <intarg>
   192d2:	aa08      	add	r2, sp, #32
   192d4:	f7ff fe11 	bl	18efa <i2a>
                written += putchw(putp, &p);
   192d8:	a908      	add	r1, sp, #32
   192da:	4628      	mov	r0, r5
   192dc:	f7ff fe66 	bl	18fac <putchw>
   192e0:	4404      	add	r4, r0
                break;
   192e2:	e72b      	b.n	1913c <tfp_format+0x10>
            switch (ch) {
   192e4:	2875      	cmp	r0, #117	; 0x75
   192e6:	d110      	bne.n	1930a <tfp_format+0x1de>
                p.base = 10;
   192e8:	230a      	movs	r3, #10
   192ea:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
                ui2a(intarg(lng, 0, &va), &p);
   192ee:	466a      	mov	r2, sp
   192f0:	2100      	movs	r1, #0
   192f2:	4630      	mov	r0, r6
   192f4:	f7ff fee8 	bl	190c8 <intarg>
   192f8:	aa08      	add	r2, sp, #32
   192fa:	f7ff fd9e 	bl	18e3a <ui2a>
                written += putchw(putp, &p);
   192fe:	a908      	add	r1, sp, #32
   19300:	4628      	mov	r0, r5
   19302:	f7ff fe53 	bl	18fac <putchw>
   19306:	4404      	add	r4, r0
                break;
   19308:	e718      	b.n	1913c <tfp_format+0x10>
            switch (ch) {
   1930a:	2878      	cmp	r0, #120	; 0x78
   1930c:	f47f af16 	bne.w	1913c <tfp_format+0x10>
                p.base = 16;
   19310:	2310      	movs	r3, #16
   19312:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
                p.uc = (ch == 'X');
   19316:	2858      	cmp	r0, #88	; 0x58
   19318:	bf14      	ite	ne
   1931a:	2300      	movne	r3, #0
   1931c:	2301      	moveq	r3, #1
   1931e:	f89d 2022 	ldrb.w	r2, [sp, #34]	; 0x22
   19322:	f363 0282 	bfi	r2, r3, #2, #1
   19326:	f88d 2022 	strb.w	r2, [sp, #34]	; 0x22
                ui2a(intarg(lng, 0, &va), &p);
   1932a:	466a      	mov	r2, sp
   1932c:	2100      	movs	r1, #0
   1932e:	4630      	mov	r0, r6
   19330:	f7ff feca 	bl	190c8 <intarg>
   19334:	aa08      	add	r2, sp, #32
   19336:	f7ff fd80 	bl	18e3a <ui2a>
                written += putchw(putp, &p);
   1933a:	a908      	add	r1, sp, #32
   1933c:	4628      	mov	r0, r5
   1933e:	f7ff fe35 	bl	18fac <putchw>
   19342:	4404      	add	r4, r0
                break;
   19344:	e6fa      	b.n	1913c <tfp_format+0x10>
                p.base = 8;
   19346:	2308      	movs	r3, #8
   19348:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
                ui2a(intarg(lng, 0, &va), &p);
   1934c:	466a      	mov	r2, sp
   1934e:	2100      	movs	r1, #0
   19350:	4630      	mov	r0, r6
   19352:	f7ff feb9 	bl	190c8 <intarg>
   19356:	aa08      	add	r2, sp, #32
   19358:	f7ff fd6f 	bl	18e3a <ui2a>
                written += putchw(putp, &p);
   1935c:	a908      	add	r1, sp, #32
   1935e:	4628      	mov	r0, r5
   19360:	f7ff fe24 	bl	18fac <putchw>
   19364:	4404      	add	r4, r0
                break;
   19366:	e6e9      	b.n	1913c <tfp_format+0x10>
                p.bf = va_arg(va, char *);
   19368:	9b00      	ldr	r3, [sp, #0]
   1936a:	1d1a      	adds	r2, r3, #4
   1936c:	9200      	str	r2, [sp, #0]
   1936e:	681b      	ldr	r3, [r3, #0]
   19370:	9309      	str	r3, [sp, #36]	; 0x24
                written += putchw(putp, &p);
   19372:	a908      	add	r1, sp, #32
   19374:	4628      	mov	r0, r5
   19376:	f7ff fe19 	bl	18fac <putchw>
   1937a:	4404      	add	r4, r0
                p.bf = bf;
   1937c:	ab02      	add	r3, sp, #8
   1937e:	9309      	str	r3, [sp, #36]	; 0x24
                break;
   19380:	e6dc      	b.n	1913c <tfp_format+0x10>
        }
    }
 abort:;
 
 return written;
}
   19382:	4620      	mov	r0, r4
   19384:	b00a      	add	sp, #40	; 0x28
   19386:	bd70      	pop	{r4, r5, r6, pc}

00019388 <vfprintf>:

int vfprintf(FILE *f, const char *fmt, va_list va)
{
   19388:	b508      	push	{r3, lr}
    return tfp_format(f, fmt, va);
   1938a:	f7ff fecf 	bl	1912c <tfp_format>
}
   1938e:	bd08      	pop	{r3, pc}

00019390 <printf>:
    va_end(va);
    return rv;
}

int printf(const char *fmt, ...)
{
   19390:	b40f      	push	{r0, r1, r2, r3}
   19392:	b500      	push	{lr}
   19394:	b083      	sub	sp, #12
   19396:	aa04      	add	r2, sp, #16
   19398:	f852 1b04 	ldr.w	r1, [r2], #4
    va_list va;
    va_start(va, fmt);
   1939c:	9201      	str	r2, [sp, #4]
    int rv = vfprintf(stdout, fmt, va);
   1939e:	4b04      	ldr	r3, [pc, #16]	; (193b0 <printf+0x20>)
   193a0:	6818      	ldr	r0, [r3, #0]
   193a2:	f7ff fff1 	bl	19388 <vfprintf>
    va_end(va);
    return rv;
}
   193a6:	b003      	add	sp, #12
   193a8:	f85d eb04 	ldr.w	lr, [sp], #4
   193ac:	b004      	add	sp, #16
   193ae:	4770      	bx	lr
   193b0:	0001f824 	.word	0x0001f824

000193b4 <vsnprintf>:

int vsnprintf(char *str, size_t size, const char *fmt, va_list va)
{
   193b4:	b5f0      	push	{r4, r5, r6, r7, lr}
   193b6:	b085      	sub	sp, #20
   193b8:	4605      	mov	r5, r0
   193ba:	460c      	mov	r4, r1
   193bc:	4616      	mov	r6, r2
   193be:	461f      	mov	r7, r3
    struct MemFile state;
    FILE *f = fmemopen_w(&state, str, size);
   193c0:	460a      	mov	r2, r1
   193c2:	4601      	mov	r1, r0
   193c4:	4668      	mov	r0, sp
   193c6:	f000 f835 	bl	19434 <fmemopen_w>
    tfp_format(f, fmt, va);
   193ca:	463a      	mov	r2, r7
   193cc:	4631      	mov	r1, r6
   193ce:	f7ff fead 	bl	1912c <tfp_format>
    if (size > 0) {
   193d2:	b12c      	cbz	r4, 193e0 <vsnprintf+0x2c>
        if (state.bytes_written < size) {
   193d4:	9b02      	ldr	r3, [sp, #8]
   193d6:	42a3      	cmp	r3, r4
   193d8:	d305      	bcc.n	193e6 <vsnprintf+0x32>
            *(state.buffer) = '\0';
        } else {
            str[size - 1] = '\0';
   193da:	3c01      	subs	r4, #1
   193dc:	2300      	movs	r3, #0
   193de:	552b      	strb	r3, [r5, r4]
        }
    }
    return state.bytes_written;
}
   193e0:	9802      	ldr	r0, [sp, #8]
   193e2:	b005      	add	sp, #20
   193e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
            *(state.buffer) = '\0';
   193e6:	9b01      	ldr	r3, [sp, #4]
   193e8:	2200      	movs	r2, #0
   193ea:	701a      	strb	r2, [r3, #0]
   193ec:	e7f8      	b.n	193e0 <vsnprintf+0x2c>
	...

000193f0 <vprintf>:

#include <stdio.h>
#include <stdarg.h>

int vprintf(const char *format, va_list ap)
{
   193f0:	b508      	push	{r3, lr}
	return vfprintf(stdout, format, ap);
   193f2:	460a      	mov	r2, r1
   193f4:	4601      	mov	r1, r0
   193f6:	4b02      	ldr	r3, [pc, #8]	; (19400 <vprintf+0x10>)
   193f8:	6818      	ldr	r0, [r3, #0]
   193fa:	f7ff ffc5 	bl	19388 <vfprintf>
}
   193fe:	bd08      	pop	{r3, pc}
   19400:	0001f824 	.word	0x0001f824

00019404 <memfile_write>:
#include <stdio.h>

size_t memfile_write(FILE *instance, const char *bp, size_t n)
{
   19404:	b430      	push	{r4, r5}
    struct MemFile *f = (struct MemFile*)instance;
    size_t i = 0;
   19406:	2500      	movs	r5, #0
    
    while (n--)
   19408:	e000      	b.n	1940c <memfile_write+0x8>
    {
        f->bytes_written++;
        if (f->bytes_written <= f->size)
        {
            *f->buffer++ = *bp++;
   1940a:	4622      	mov	r2, r4
    while (n--)
   1940c:	1e54      	subs	r4, r2, #1
   1940e:	b16a      	cbz	r2, 1942c <memfile_write+0x28>
        f->bytes_written++;
   19410:	6883      	ldr	r3, [r0, #8]
   19412:	3301      	adds	r3, #1
   19414:	6083      	str	r3, [r0, #8]
        if (f->bytes_written <= f->size)
   19416:	68c2      	ldr	r2, [r0, #12]
   19418:	4293      	cmp	r3, r2
   1941a:	d8f6      	bhi.n	1940a <memfile_write+0x6>
            *f->buffer++ = *bp++;
   1941c:	6843      	ldr	r3, [r0, #4]
   1941e:	1c5a      	adds	r2, r3, #1
   19420:	6042      	str	r2, [r0, #4]
   19422:	780a      	ldrb	r2, [r1, #0]
   19424:	701a      	strb	r2, [r3, #0]
            i++;
   19426:	3501      	adds	r5, #1
            *f->buffer++ = *bp++;
   19428:	3101      	adds	r1, #1
   1942a:	e7ee      	b.n	1940a <memfile_write+0x6>
        }
    }
    
    return i;
}
   1942c:	4628      	mov	r0, r5
   1942e:	bc30      	pop	{r4, r5}
   19430:	4770      	bx	lr
	...

00019434 <fmemopen_w>:
    &memfile_write,
    NULL
};

FILE *fmemopen_w(struct MemFile* storage, char *buffer, size_t size)
{
   19434:	b410      	push	{r4}
    storage->file.vmt = &MemFile_methods;
   19436:	4c04      	ldr	r4, [pc, #16]	; (19448 <fmemopen_w+0x14>)
   19438:	6004      	str	r4, [r0, #0]
    storage->buffer = buffer;
   1943a:	6041      	str	r1, [r0, #4]
    storage->bytes_written = 0;
   1943c:	2100      	movs	r1, #0
   1943e:	6081      	str	r1, [r0, #8]
    storage->size = size;
   19440:	60c2      	str	r2, [r0, #12]
    return (FILE*)storage;
}
   19442:	f85d 4b04 	ldr.w	r4, [sp], #4
   19446:	4770      	bx	lr
   19448:	0001f81c 	.word	0x0001f81c

0001944c <stdin_read>:

static size_t
stdin_read(FILE *fp, char *bp, size_t n)
{
    return 0;
}
   1944c:	2000      	movs	r0, #0
   1944e:	4770      	bx	lr

00019450 <stdout_write>:

static size_t
stdout_write(FILE *fp, const char *bp, size_t n)
{
   19450:	b510      	push	{r4, lr}
   19452:	4608      	mov	r0, r1
   19454:	4614      	mov	r4, r2
    console_write(bp, n);
   19456:	4611      	mov	r1, r2
   19458:	f7fd f9b8 	bl	167cc <console_write>
    return n;
}
   1945c:	4620      	mov	r0, r4
   1945e:	bd10      	pop	{r4, pc}

00019460 <rust_sysinit>:
#include <mynewt_rust/mynewt_rust.h>
#include <mynewt_rust/sensor_helper.h>
#include <mynewt_rust/json_helper.h>

///  Initialise the Mynewt system.  Start the Mynewt drivers and libraries.  Equivalent to `sysinit()` macro in C.
void rust_sysinit() {
   19460:	b508      	push	{r3, lr}
    sysinit();
   19462:	f7fd fa1b 	bl	1689c <sysinit_start>
   19466:	f000 f81b 	bl	194a0 <sysinit_app>
   1946a:	f7fd fa1d 	bl	168a8 <sysinit_end>
}
   1946e:	bd08      	pop	{r3, pc}

00019470 <mem_init_mbuf_pool>:

int
mem_init_mbuf_pool(void *mem, struct os_mempool *mempool,
                   struct os_mbuf_pool *mbuf_pool, int num_blocks,
                   int block_size, char *name)
{
   19470:	b570      	push	{r4, r5, r6, lr}
   19472:	b082      	sub	sp, #8
   19474:	460c      	mov	r4, r1
   19476:	4616      	mov	r6, r2
    int rc;

    rc = os_mempool_init(mempool, num_blocks, block_size, mem, name);
   19478:	b29d      	uxth	r5, r3
   1947a:	9b07      	ldr	r3, [sp, #28]
   1947c:	9300      	str	r3, [sp, #0]
   1947e:	4603      	mov	r3, r0
   19480:	9a06      	ldr	r2, [sp, #24]
   19482:	4629      	mov	r1, r5
   19484:	4620      	mov	r0, r4
   19486:	f7fe fdeb 	bl	18060 <os_mempool_init>
    if (rc != 0) {
   1948a:	b108      	cbz	r0, 19490 <mem_init_mbuf_pool+0x20>
    if (rc != 0) {
        return rc;
    }

    return 0;
}
   1948c:	b002      	add	sp, #8
   1948e:	bd70      	pop	{r4, r5, r6, pc}
    rc = os_mbuf_pool_init(mbuf_pool, mempool, block_size, num_blocks);
   19490:	462b      	mov	r3, r5
   19492:	9a06      	ldr	r2, [sp, #24]
   19494:	b292      	uxth	r2, r2
   19496:	4621      	mov	r1, r4
   19498:	4630      	mov	r0, r6
   1949a:	f7fe fc96 	bl	17dca <os_mbuf_pool_init>
   1949e:	e7f5      	b.n	1948c <mem_init_mbuf_pool+0x1c>

000194a0 <sysinit_app>:
void sensor_network_init(void);
void init_sensor_coap(void);

void
sysinit_app(void)
{
   194a0:	b508      	push	{r3, lr}
    /*** Stage 0 */
    /* 0.0: os_pkg_init (kernel/os) */
    os_pkg_init();
   194a2:	f7fe f9f3 	bl	1788c <os_pkg_init>

    /*** Stage 2 */
    /* 2.0: flash_map_init (sys/flash_map) */
    flash_map_init();
   194a6:	f001 f985 	bl	1a7b4 <flash_map_init>

    /*** Stage 20 */
    /* 20.0: console_pkg_init (libs/semihosting_console) */
    console_pkg_init();
   194aa:	f7fd f9a3 	bl	167f4 <console_pkg_init>

    /*** Stage 100 */
    /* 100.0: mfg_init (sys/mfg) */
    mfg_init();
   194ae:	f001 fac7 	bl	1aa40 <mfg_init>
    /* 100.1: modlog_init (sys/log/modlog) */
    modlog_init();
   194b2:	f001 f9b7 	bl	1a824 <modlog_init>

    /*** Stage 300 */
    /* 300.0: oc_init (net/oic) */
    oc_init();
   194b6:	f001 f8e1 	bl	1a67c <oc_init>

    /*** Stage 301 */
    /* 301.0: oc_register_gatt (net/oic) */
    oc_register_gatt();
   194ba:	f001 f8f1 	bl	1a6a0 <oc_register_gatt>
    /* 301.1: oc_register_ip4 (net/oic) */
    oc_register_ip4();
   194be:	f001 f8f0 	bl	1a6a2 <oc_register_ip4>
    /* 301.2: oc_register_ip6 (net/oic) */
    oc_register_ip6();
   194c2:	f001 f8ef 	bl	1a6a4 <oc_register_ip6>
    /* 301.3: oc_register_lora (net/oic) */
    oc_register_lora();
   194c6:	f001 f8ee 	bl	1a6a6 <oc_register_lora>
    /* 301.4: oc_register_serial (net/oic) */
    oc_register_serial();
   194ca:	f001 f8ed 	bl	1a6a8 <oc_register_serial>

    /*** Stage 500 */
    /* 500.0: sensor_dev_create (hw/sensor/creator) */
    sensor_dev_create();
   194ce:	f000 fbd1 	bl	19c74 <sensor_dev_create>

    /*** Stage 501 */
    /* 501.0: sensor_pkg_init (hw/sensor) */
    sensor_pkg_init();
   194d2:	f000 fd1f 	bl	19f14 <sensor_pkg_init>

    /*** Stage 620 */
    /* 620.0: temp_stub_create (libs/temp_stub) */
    temp_stub_create();
   194d6:	f000 ff3d 	bl	1a354 <temp_stub_create>

    /*** Stage 640 */
    /* 640.0: sensor_network_init (libs/sensor_network) */
    sensor_network_init();
   194da:	f000 feb3 	bl	1a244 <sensor_network_init>

    /*** Stage 660 */
    /* 660.0: init_sensor_coap (libs/sensor_coap) */
    init_sensor_coap();
   194de:	f000 fe3d 	bl	1a15c <init_sensor_coap>
}
   194e2:	bd08      	pop	{r3, pc}

000194e4 <hal_bsp_flash_dev>:
hal_bsp_flash_dev(uint8_t id)
{
    /*
     * Internal flash mapped to id 0.
     */
    if (id == 0) {
   194e4:	b908      	cbnz	r0, 194ea <hal_bsp_flash_dev+0x6>
        return &nrf52k_flash_dev;
   194e6:	4802      	ldr	r0, [pc, #8]	; (194f0 <hal_bsp_flash_dev+0xc>)
   194e8:	4770      	bx	lr
    }

    return NULL;
   194ea:	2000      	movs	r0, #0
}
   194ec:	4770      	bx	lr
   194ee:	bf00      	nop
   194f0:	0001f828 	.word	0x0001f828

000194f4 <hal_bsp_init>:
    return cfg_pri;
}

void
hal_bsp_init(void)
{
   194f4:	b508      	push	{r3, lr}
    /* Make sure system clocks have started */
    hal_system_clock_start();
   194f6:	f7ee fe63 	bl	81c0 <hal_system_clock_start>

    /* Create all available nRF52840 peripherals */
    nrf52_periph_create();
   194fa:	f000 fbb3 	bl	19c64 <nrf52_periph_create>
}
   194fe:	bd08      	pop	{r3, pc}

00019500 <nrf52k_flash_wait_ready>:
static int
nrf52k_flash_wait_ready(void)
{
    int i;

    for (i = 0; i < 100000; i++) {
   19500:	2300      	movs	r3, #0
   19502:	4a07      	ldr	r2, [pc, #28]	; (19520 <nrf52k_flash_wait_ready+0x20>)
   19504:	4293      	cmp	r3, r2
   19506:	dc06      	bgt.n	19516 <nrf52k_flash_wait_ready+0x16>
        if (NRF_NVMC->READY == NVMC_READY_READY_Ready) {
   19508:	4a06      	ldr	r2, [pc, #24]	; (19524 <nrf52k_flash_wait_ready+0x24>)
   1950a:	f8d2 2400 	ldr.w	r2, [r2, #1024]	; 0x400
   1950e:	2a01      	cmp	r2, #1
   19510:	d004      	beq.n	1951c <nrf52k_flash_wait_ready+0x1c>
    for (i = 0; i < 100000; i++) {
   19512:	3301      	adds	r3, #1
   19514:	e7f5      	b.n	19502 <nrf52k_flash_wait_ready+0x2>
            return 0;
        }
    }
    return -1;
   19516:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1951a:	4770      	bx	lr
            return 0;
   1951c:	2000      	movs	r0, #0
}
   1951e:	4770      	bx	lr
   19520:	0001869f 	.word	0x0001869f
   19524:	4001e000 	.word	0x4001e000

00019528 <nrf52k_flash_erase_sector>:
    return rc;
}

static int
nrf52k_flash_erase_sector(const struct hal_flash *dev, uint32_t sector_address)
{
   19528:	b538      	push	{r3, r4, r5, lr}
   1952a:	460d      	mov	r5, r1
    int sr;
    int rc = -1;

    if (nrf52k_flash_wait_ready()) {
   1952c:	f7ff ffe8 	bl	19500 <nrf52k_flash_wait_ready>
   19530:	b9f0      	cbnz	r0, 19570 <nrf52k_flash_erase_sector+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   19532:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
   19536:	b672      	cpsid	i
        return -1;
    }
    __HAL_DISABLE_INTERRUPTS(sr);
    NRF_NVMC->CONFIG = NVMC_CONFIG_WEN_Een; /* Enable erase OP */
   19538:	4b0f      	ldr	r3, [pc, #60]	; (19578 <nrf52k_flash_erase_sector+0x50>)
   1953a:	2202      	movs	r2, #2
   1953c:	f8c3 2504 	str.w	r2, [r3, #1284]	; 0x504
    if (nrf52k_flash_wait_ready()) {
   19540:	f7ff ffde 	bl	19500 <nrf52k_flash_wait_ready>
   19544:	b148      	cbz	r0, 1955a <nrf52k_flash_erase_sector+0x32>
    int rc = -1;
   19546:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    if (nrf52k_flash_wait_ready()) {
        goto out;
    }
    rc = 0;
out:
    NRF_NVMC->CONFIG = NVMC_CONFIG_WEN_Ren; /* Disable erase OP */
   1954a:	4a0b      	ldr	r2, [pc, #44]	; (19578 <nrf52k_flash_erase_sector+0x50>)
   1954c:	2100      	movs	r1, #0
   1954e:	f8c2 1504 	str.w	r1, [r2, #1284]	; 0x504
    __HAL_ENABLE_INTERRUPTS(sr);
   19552:	b904      	cbnz	r4, 19556 <nrf52k_flash_erase_sector+0x2e>
  __ASM volatile ("cpsie i" : : : "memory");
   19554:	b662      	cpsie	i
    return rc;
}
   19556:	4618      	mov	r0, r3
   19558:	bd38      	pop	{r3, r4, r5, pc}
    NRF_NVMC->ERASEPAGE = sector_address;
   1955a:	4b07      	ldr	r3, [pc, #28]	; (19578 <nrf52k_flash_erase_sector+0x50>)
   1955c:	f8c3 5508 	str.w	r5, [r3, #1288]	; 0x508
    if (nrf52k_flash_wait_ready()) {
   19560:	f7ff ffce 	bl	19500 <nrf52k_flash_wait_ready>
   19564:	4603      	mov	r3, r0
   19566:	2800      	cmp	r0, #0
   19568:	d0ef      	beq.n	1954a <nrf52k_flash_erase_sector+0x22>
    int rc = -1;
   1956a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1956e:	e7ec      	b.n	1954a <nrf52k_flash_erase_sector+0x22>
        return -1;
   19570:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   19574:	e7ef      	b.n	19556 <nrf52k_flash_erase_sector+0x2e>
   19576:	bf00      	nop
   19578:	4001e000 	.word	0x4001e000

0001957c <nrf52k_flash_init>:

static int
nrf52k_flash_init(const struct hal_flash *dev)
{
    return 0;
}
   1957c:	2000      	movs	r0, #0
   1957e:	4770      	bx	lr

00019580 <nrf52k_flash_sector_info>:
    assert(idx < nrf52k_flash_dev.hf_sector_cnt);
   19580:	297f      	cmp	r1, #127	; 0x7f
   19582:	dc06      	bgt.n	19592 <nrf52k_flash_sector_info+0x12>
    *address = idx * NRF52K_FLASH_SECTOR_SZ;
   19584:	0309      	lsls	r1, r1, #12
   19586:	6011      	str	r1, [r2, #0]
    *sz = NRF52K_FLASH_SECTOR_SZ;
   19588:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   1958c:	601a      	str	r2, [r3, #0]
}
   1958e:	2000      	movs	r0, #0
   19590:	4770      	bx	lr
{
   19592:	b508      	push	{r3, lr}
    assert(idx < nrf52k_flash_dev.hf_sector_cnt);
   19594:	2300      	movs	r3, #0
   19596:	461a      	mov	r2, r3
   19598:	4619      	mov	r1, r3
   1959a:	4618      	mov	r0, r3
   1959c:	f7fe f818 	bl	175d0 <__assert_func>

000195a0 <nrf52k_flash_write>:
{
   195a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   195a4:	b082      	sub	sp, #8
   195a6:	460d      	mov	r5, r1
   195a8:	4616      	mov	r6, r2
   195aa:	461c      	mov	r4, r3
    if (nrf52k_flash_wait_ready()) {
   195ac:	f7ff ffa8 	bl	19500 <nrf52k_flash_wait_ready>
   195b0:	2800      	cmp	r0, #0
   195b2:	d158      	bne.n	19666 <nrf52k_flash_write+0xc6>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   195b4:	f3ef 8710 	mrs	r7, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
   195b8:	b672      	cpsid	i
    NRF_NVMC->CONFIG = NVMC_CONFIG_WEN_Wen; /* Enable erase OP */
   195ba:	4b2c      	ldr	r3, [pc, #176]	; (1966c <nrf52k_flash_write+0xcc>)
   195bc:	2201      	movs	r2, #1
   195be:	f8c3 2504 	str.w	r2, [r3, #1284]	; 0x504
    if (tmp) {
   195c2:	f015 0803 	ands.w	r8, r5, #3
   195c6:	d10b      	bne.n	195e0 <nrf52k_flash_write+0x40>
    while (num_bytes >= sizeof(uint32_t)) {
   195c8:	2c03      	cmp	r4, #3
   195ca:	d925      	bls.n	19618 <nrf52k_flash_write+0x78>
        if (nrf52k_flash_wait_ready()) {
   195cc:	f7ff ff98 	bl	19500 <nrf52k_flash_wait_ready>
   195d0:	2800      	cmp	r0, #0
   195d2:	d139      	bne.n	19648 <nrf52k_flash_write+0xa8>
        *(uint32_t *)address = *(uint32_t *)src;
   195d4:	f856 3b04 	ldr.w	r3, [r6], #4
   195d8:	f845 3b04 	str.w	r3, [r5], #4
        num_bytes -= sizeof(uint32_t);
   195dc:	3c04      	subs	r4, #4
   195de:	e7f3      	b.n	195c8 <nrf52k_flash_write+0x28>
        if (nrf52k_flash_wait_ready()) {
   195e0:	f7ff ff8e 	bl	19500 <nrf52k_flash_wait_ready>
   195e4:	bb68      	cbnz	r0, 19642 <nrf52k_flash_write+0xa2>
        val = *(uint32_t *)(address & ~0x3);
   195e6:	f025 0a03 	bic.w	sl, r5, #3
   195ea:	f8da 3000 	ldr.w	r3, [sl]
   195ee:	9301      	str	r3, [sp, #4]
        cnt = 4 - tmp;
   195f0:	f1c8 0904 	rsb	r9, r8, #4
        if (cnt > num_bytes) {
   195f4:	45a1      	cmp	r9, r4
   195f6:	d900      	bls.n	195fa <nrf52k_flash_write+0x5a>
            cnt = num_bytes;
   195f8:	46a1      	mov	r9, r4
        memcpy((uint8_t *)&val + tmp, src, cnt);
   195fa:	464a      	mov	r2, r9
   195fc:	4631      	mov	r1, r6
   195fe:	ab01      	add	r3, sp, #4
   19600:	eb03 0008 	add.w	r0, r3, r8
   19604:	f7ff fbda 	bl	18dbc <memcpy>
        *(uint32_t *)(address & ~0x3) = val;
   19608:	9b01      	ldr	r3, [sp, #4]
   1960a:	f8ca 3000 	str.w	r3, [sl]
        address += cnt;
   1960e:	444d      	add	r5, r9
        num_bytes -= cnt;
   19610:	eba4 0409 	sub.w	r4, r4, r9
        src += cnt;
   19614:	444e      	add	r6, r9
   19616:	e7d7      	b.n	195c8 <nrf52k_flash_write+0x28>
    if (num_bytes) {
   19618:	b164      	cbz	r4, 19634 <nrf52k_flash_write+0x94>
        val = *(uint32_t *)address;
   1961a:	682b      	ldr	r3, [r5, #0]
   1961c:	a802      	add	r0, sp, #8
   1961e:	f840 3d04 	str.w	r3, [r0, #-4]!
        memcpy(&val, src, num_bytes);
   19622:	4622      	mov	r2, r4
   19624:	4631      	mov	r1, r6
   19626:	f7ff fbc9 	bl	18dbc <memcpy>
        if (nrf52k_flash_wait_ready()) {
   1962a:	f7ff ff69 	bl	19500 <nrf52k_flash_wait_ready>
   1962e:	b9b8      	cbnz	r0, 19660 <nrf52k_flash_write+0xc0>
        *(uint32_t *)address = val;
   19630:	9b01      	ldr	r3, [sp, #4]
   19632:	602b      	str	r3, [r5, #0]
    if (nrf52k_flash_wait_ready()) {
   19634:	f7ff ff64 	bl	19500 <nrf52k_flash_wait_ready>
   19638:	4603      	mov	r3, r0
   1963a:	b138      	cbz	r0, 1964c <nrf52k_flash_write+0xac>
        rc = -1;
   1963c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   19640:	e004      	b.n	1964c <nrf52k_flash_write+0xac>
    int rc = -1;
   19642:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   19646:	e001      	b.n	1964c <nrf52k_flash_write+0xac>
   19648:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    NRF_NVMC->CONFIG = NVMC_CONFIG_WEN_Ren;
   1964c:	4a07      	ldr	r2, [pc, #28]	; (1966c <nrf52k_flash_write+0xcc>)
   1964e:	2100      	movs	r1, #0
   19650:	f8c2 1504 	str.w	r1, [r2, #1284]	; 0x504
    __HAL_ENABLE_INTERRUPTS(sr);
   19654:	b907      	cbnz	r7, 19658 <nrf52k_flash_write+0xb8>
  __ASM volatile ("cpsie i" : : : "memory");
   19656:	b662      	cpsie	i
}
   19658:	4618      	mov	r0, r3
   1965a:	b002      	add	sp, #8
   1965c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    int rc = -1;
   19660:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   19664:	e7f2      	b.n	1964c <nrf52k_flash_write+0xac>
        return -1;
   19666:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1966a:	e7f5      	b.n	19658 <nrf52k_flash_write+0xb8>
   1966c:	4001e000 	.word	0x4001e000

00019670 <nrf52k_flash_read>:
{
   19670:	b508      	push	{r3, lr}
   19672:	4610      	mov	r0, r2
    memcpy(dst, (void *)address, num_bytes);
   19674:	461a      	mov	r2, r3
   19676:	f7ff fba1 	bl	18dbc <memcpy>
}
   1967a:	2000      	movs	r0, #0
   1967c:	bd08      	pop	{r3, pc}
	...

00019680 <nrf52_timer_handler>:
    }
}

static void
nrf52_timer_handler(void)
{
   19680:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int ticks;
    os_sr_t sr;
    uint32_t counter;

    os_trace_isr_enter();
    OS_ENTER_CRITICAL(sr);
   19682:	f7ff fa3b 	bl	18afc <os_arch_save_sr>
    return OS_TICK_TIMER->COUNTER;
   19686:	4b31      	ldr	r3, [pc, #196]	; (1974c <nrf52_timer_handler+0xcc>)
   19688:	f8d3 5504 	ldr.w	r5, [r3, #1284]	; 0x504

    /* Calculate elapsed ticks and advance OS time. */

    counter = nrf52_os_tick_counter();
    delta = sub24(counter, g_hal_os_tick.lastocmp);
   1968c:	4b30      	ldr	r3, [pc, #192]	; (19750 <nrf52_timer_handler+0xd0>)
   1968e:	689b      	ldr	r3, [r3, #8]
    assert(x <= 0xffffff);
   19690:	f1b5 7f80 	cmp.w	r5, #16777216	; 0x1000000
   19694:	d225      	bcs.n	196e2 <nrf52_timer_handler+0x62>
   19696:	4606      	mov	r6, r0
    assert(y <= 0xffffff);
   19698:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
   1969c:	d227      	bcs.n	196ee <nrf52_timer_handler+0x6e>
    result = x - y;
   1969e:	1aed      	subs	r5, r5, r3
    if (result & 0x800000) {
   196a0:	f415 0f00 	tst.w	r5, #8388608	; 0x800000
   196a4:	d129      	bne.n	196fa <nrf52_timer_handler+0x7a>
        return (result & 0x007fffff);
   196a6:	f3c5 0516 	ubfx	r5, r5, #0, #23
    ticks = delta / g_hal_os_tick.ticks_per_ostick;
   196aa:	4f29      	ldr	r7, [pc, #164]	; (19750 <nrf52_timer_handler+0xd0>)
   196ac:	683c      	ldr	r4, [r7, #0]
   196ae:	fb95 f5f4 	sdiv	r5, r5, r4
    os_time_advance(ticks);
   196b2:	4628      	mov	r0, r5
   196b4:	f7ff f9b0 	bl	18a18 <os_time_advance>

    /* Clear timer interrupt */
    OS_TICK_TIMER->EVENTS_COMPARE[OS_TICK_CMPREG] = 0;
   196b8:	4b24      	ldr	r3, [pc, #144]	; (1974c <nrf52_timer_handler+0xcc>)
   196ba:	2200      	movs	r2, #0
   196bc:	f8c3 214c 	str.w	r2, [r3, #332]	; 0x14c

    /* Update the time associated with the most recent tick */
    g_hal_os_tick.lastocmp = (g_hal_os_tick.lastocmp +
   196c0:	68bb      	ldr	r3, [r7, #8]
        (ticks * g_hal_os_tick.ticks_per_ostick)) & 0xffffff;
   196c2:	683c      	ldr	r4, [r7, #0]
    g_hal_os_tick.lastocmp = (g_hal_os_tick.lastocmp +
   196c4:	fb05 3304 	mla	r3, r5, r4, r3
        (ticks * g_hal_os_tick.ticks_per_ostick)) & 0xffffff;
   196c8:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
    g_hal_os_tick.lastocmp = (g_hal_os_tick.lastocmp +
   196cc:	60bb      	str	r3, [r7, #8]

    /* Update the output compare to interrupt at the next tick */
    nrf52_os_tick_set_ocmp(g_hal_os_tick.lastocmp + g_hal_os_tick.ticks_per_ostick);
   196ce:	441c      	add	r4, r3
    OS_ASSERT_CRITICAL();
   196d0:	f7ff fa1d 	bl	18b0e <os_arch_in_critical>
   196d4:	bb28      	cbnz	r0, 19722 <nrf52_timer_handler+0xa2>
   196d6:	2300      	movs	r3, #0
   196d8:	461a      	mov	r2, r3
   196da:	4619      	mov	r1, r3
   196dc:	4618      	mov	r0, r3
   196de:	f7fd ff77 	bl	175d0 <__assert_func>
    assert(x <= 0xffffff);
   196e2:	2300      	movs	r3, #0
   196e4:	461a      	mov	r2, r3
   196e6:	4619      	mov	r1, r3
   196e8:	4618      	mov	r0, r3
   196ea:	f7fd ff71 	bl	175d0 <__assert_func>
    assert(y <= 0xffffff);
   196ee:	2300      	movs	r3, #0
   196f0:	461a      	mov	r2, r3
   196f2:	4619      	mov	r1, r3
   196f4:	4618      	mov	r0, r3
   196f6:	f7fd ff6b 	bl	175d0 <__assert_func>
        return (result | 0xff800000);
   196fa:	ea6f 2545 	mvn.w	r5, r5, lsl #9
   196fe:	ea6f 2555 	mvn.w	r5, r5, lsr #9
   19702:	e7d2      	b.n	196aa <nrf52_timer_handler+0x2a>
    assert(y <= 0xffffff);
   19704:	2300      	movs	r3, #0
   19706:	461a      	mov	r2, r3
   19708:	4619      	mov	r1, r3
   1970a:	4618      	mov	r0, r3
   1970c:	f7fd ff60 	bl	175d0 <__assert_func>
        return (result | 0xff800000);
   19710:	ea6f 2242 	mvn.w	r2, r2, lsl #9
   19714:	ea6f 2252 	mvn.w	r2, r2, lsr #9
        if (delta > 2) {
   19718:	2a02      	cmp	r2, #2
   1971a:	dc13      	bgt.n	19744 <nrf52_timer_handler+0xc4>
        ocmp += g_hal_os_tick.ticks_per_ostick;
   1971c:	4a0c      	ldr	r2, [pc, #48]	; (19750 <nrf52_timer_handler+0xd0>)
   1971e:	6814      	ldr	r4, [r2, #0]
   19720:	441c      	add	r4, r3
        ocmp &= 0xffffff;
   19722:	f024 437f 	bic.w	r3, r4, #4278190080	; 0xff000000
        OS_TICK_TIMER->CC[OS_TICK_CMPREG] = ocmp;
   19726:	4a09      	ldr	r2, [pc, #36]	; (1974c <nrf52_timer_handler+0xcc>)
   19728:	f8c2 354c 	str.w	r3, [r2, #1356]	; 0x54c
    return OS_TICK_TIMER->COUNTER;
   1972c:	f8d2 2504 	ldr.w	r2, [r2, #1284]	; 0x504
    assert(y <= 0xffffff);
   19730:	f1b2 7f80 	cmp.w	r2, #16777216	; 0x1000000
   19734:	d2e6      	bcs.n	19704 <nrf52_timer_handler+0x84>
    result = x - y;
   19736:	1a9a      	subs	r2, r3, r2
    if (result & 0x800000) {
   19738:	f412 0f00 	tst.w	r2, #8388608	; 0x800000
   1973c:	d1e8      	bne.n	19710 <nrf52_timer_handler+0x90>
        return (result & 0x007fffff);
   1973e:	f3c2 0216 	ubfx	r2, r2, #0, #23
   19742:	e7e9      	b.n	19718 <nrf52_timer_handler+0x98>

    OS_EXIT_CRITICAL(sr);
   19744:	4630      	mov	r0, r6
   19746:	f7ff f9df 	bl	18b08 <os_arch_restore_sr>
    os_trace_isr_exit();
}
   1974a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1974c:	40011000 	.word	0x40011000
   19750:	20009e64 	.word	0x20009e64

00019754 <os_tick_idle>:

void
os_tick_idle(os_time_t ticks)
{
   19754:	b538      	push	{r3, r4, r5, lr}
   19756:	4605      	mov	r5, r0
    uint32_t ocmp;

    OS_ASSERT_CRITICAL();
   19758:	f7ff f9d9 	bl	18b0e <os_arch_in_critical>
   1975c:	b1a0      	cbz	r0, 19788 <os_tick_idle+0x34>

    if (ticks > 0) {
   1975e:	2d00      	cmp	r5, #0
   19760:	d038      	beq.n	197d4 <os_tick_idle+0x80>
        /*
         * Enter tickless regime during long idle durations.
         */
        if (ticks > g_hal_os_tick.max_idle_ticks) {
   19762:	4b20      	ldr	r3, [pc, #128]	; (197e4 <os_tick_idle+0x90>)
   19764:	685b      	ldr	r3, [r3, #4]
   19766:	42ab      	cmp	r3, r5
   19768:	d200      	bcs.n	1976c <os_tick_idle+0x18>
            ticks = g_hal_os_tick.max_idle_ticks;
   1976a:	461d      	mov	r5, r3
        }
        ocmp = g_hal_os_tick.lastocmp + (ticks*g_hal_os_tick.ticks_per_ostick);
   1976c:	4b1d      	ldr	r3, [pc, #116]	; (197e4 <os_tick_idle+0x90>)
   1976e:	689c      	ldr	r4, [r3, #8]
   19770:	681a      	ldr	r2, [r3, #0]
   19772:	fb05 4402 	mla	r4, r5, r2, r4
    OS_ASSERT_CRITICAL();
   19776:	f7ff f9ca 	bl	18b0e <os_arch_in_critical>
   1977a:	b9d0      	cbnz	r0, 197b2 <os_tick_idle+0x5e>
   1977c:	2300      	movs	r3, #0
   1977e:	461a      	mov	r2, r3
   19780:	4619      	mov	r1, r3
   19782:	4618      	mov	r0, r3
   19784:	f7fd ff24 	bl	175d0 <__assert_func>
    OS_ASSERT_CRITICAL();
   19788:	2300      	movs	r3, #0
   1978a:	461a      	mov	r2, r3
   1978c:	4619      	mov	r1, r3
   1978e:	4618      	mov	r0, r3
   19790:	f7fd ff1e 	bl	175d0 <__assert_func>
    assert(y <= 0xffffff);
   19794:	2300      	movs	r3, #0
   19796:	461a      	mov	r2, r3
   19798:	4619      	mov	r1, r3
   1979a:	4618      	mov	r0, r3
   1979c:	f7fd ff18 	bl	175d0 <__assert_func>
        return (result | 0xff800000);
   197a0:	ea6f 2343 	mvn.w	r3, r3, lsl #9
   197a4:	ea6f 2353 	mvn.w	r3, r3, lsr #9
        if (delta > 2) {
   197a8:	2b02      	cmp	r3, #2
   197aa:	dc13      	bgt.n	197d4 <os_tick_idle+0x80>
        ocmp += g_hal_os_tick.ticks_per_ostick;
   197ac:	4b0d      	ldr	r3, [pc, #52]	; (197e4 <os_tick_idle+0x90>)
   197ae:	681c      	ldr	r4, [r3, #0]
   197b0:	4414      	add	r4, r2
        ocmp &= 0xffffff;
   197b2:	f024 427f 	bic.w	r2, r4, #4278190080	; 0xff000000
        OS_TICK_TIMER->CC[OS_TICK_CMPREG] = ocmp;
   197b6:	4b0c      	ldr	r3, [pc, #48]	; (197e8 <os_tick_idle+0x94>)
   197b8:	f8c3 254c 	str.w	r2, [r3, #1356]	; 0x54c
    return OS_TICK_TIMER->COUNTER;
   197bc:	f8d3 3504 	ldr.w	r3, [r3, #1284]	; 0x504
    assert(y <= 0xffffff);
   197c0:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
   197c4:	d2e6      	bcs.n	19794 <os_tick_idle+0x40>
    result = x - y;
   197c6:	1ad3      	subs	r3, r2, r3
    if (result & 0x800000) {
   197c8:	f413 0f00 	tst.w	r3, #8388608	; 0x800000
   197cc:	d1e8      	bne.n	197a0 <os_tick_idle+0x4c>
        return (result & 0x007fffff);
   197ce:	f3c3 0316 	ubfx	r3, r3, #0, #23
   197d2:	e7e9      	b.n	197a8 <os_tick_idle+0x54>
  __ASM volatile ("dsb 0xF":::"memory");
   197d4:	f3bf 8f4f 	dsb	sy
        nrf52_os_tick_set_ocmp(ocmp);
    }

    __DSB();
    __WFI();
   197d8:	bf30      	wfi

    if (ticks > 0) {
   197da:	b905      	cbnz	r5, 197de <os_tick_idle+0x8a>
         * Update OS time before anything else when coming out of
         * the tickless regime.
         */
        nrf52_timer_handler();
    }
}
   197dc:	bd38      	pop	{r3, r4, r5, pc}
        nrf52_timer_handler();
   197de:	f7ff ff4f 	bl	19680 <nrf52_timer_handler>
}
   197e2:	e7fb      	b.n	197dc <os_tick_idle+0x88>
   197e4:	20009e64 	.word	0x20009e64
   197e8:	40011000 	.word	0x40011000

000197ec <os_tick_init>:

void
os_tick_init(uint32_t os_ticks_per_sec, int prio)
{
   197ec:	b570      	push	{r4, r5, r6, lr}
    uint32_t sr;

    assert(RTC_FREQ % os_ticks_per_sec == 0);
   197ee:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   197f2:	fbb3 f3f0 	udiv	r3, r3, r0
   197f6:	fb00 f303 	mul.w	r3, r0, r3
   197fa:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
   197fe:	d136      	bne.n	1986e <os_tick_init+0x82>
   19800:	460c      	mov	r4, r1

    g_hal_os_tick.lastocmp = 0;
   19802:	4d1e      	ldr	r5, [pc, #120]	; (1987c <os_tick_init+0x90>)
   19804:	2600      	movs	r6, #0
   19806:	60ae      	str	r6, [r5, #8]
    g_hal_os_tick.ticks_per_ostick = RTC_FREQ / os_ticks_per_sec;
   19808:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   1980c:	fbb3 f0f0 	udiv	r0, r3, r0
   19810:	6028      	str	r0, [r5, #0]
    /*
     * The maximum number of OS ticks allowed to elapse during idle is
     * limited to 1/4th the number of timer ticks before the 24-bit counter
     * rolls over.
     */
    g_hal_os_tick.max_idle_ticks = (1UL << 22) / g_hal_os_tick.ticks_per_ostick;
   19812:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
   19816:	fbb3 f0f0 	udiv	r0, r3, r0
   1981a:	6068      	str	r0, [r5, #4]

    /* disable interrupts */
    OS_ENTER_CRITICAL(sr);
   1981c:	f7ff f96e 	bl	18afc <os_arch_save_sr>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
   19820:	0164      	lsls	r4, r4, #5
   19822:	b2e4      	uxtb	r4, r4
   19824:	4b16      	ldr	r3, [pc, #88]	; (19880 <os_tick_init+0x94>)
   19826:	f883 4311 	strb.w	r4, [r3, #785]	; 0x311
  uint32_t vectors = (uint32_t )SCB->VTOR;
   1982a:	4a16      	ldr	r2, [pc, #88]	; (19884 <os_tick_init+0x98>)
   1982c:	6892      	ldr	r2, [r2, #8]
  (* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4)) = vector;
   1982e:	4916      	ldr	r1, [pc, #88]	; (19888 <os_tick_init+0x9c>)
   19830:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   19834:	f44f 3200 	mov.w	r2, #131072	; 0x20000
   19838:	601a      	str	r2, [r3, #0]

    /*
     * Program the OS_TICK_TIMER to operate at 32KHz and trigger an output
     * compare interrupt at a rate of 'os_ticks_per_sec'.
     */
    OS_TICK_TIMER->TASKS_STOP = 1;
   1983a:	f103 43c0 	add.w	r3, r3, #1610612736	; 0x60000000
   1983e:	f503 533c 	add.w	r3, r3, #12032	; 0x2f00
   19842:	2201      	movs	r2, #1
   19844:	605a      	str	r2, [r3, #4]
    OS_TICK_TIMER->TASKS_CLEAR = 1;
   19846:	609a      	str	r2, [r3, #8]

    OS_TICK_TIMER->EVTENCLR = 0xffffffff;
   19848:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
   1984c:	f8c3 1348 	str.w	r1, [r3, #840]	; 0x348
    OS_TICK_TIMER->INTENCLR = 0xffffffff;
   19850:	f8c3 1308 	str.w	r1, [r3, #776]	; 0x308
    OS_TICK_TIMER->INTENSET = RTC_COMPARE_INT_MASK(OS_TICK_CMPREG);
   19854:	f44f 2100 	mov.w	r1, #524288	; 0x80000
   19858:	f8c3 1304 	str.w	r1, [r3, #772]	; 0x304

    OS_TICK_TIMER->EVENTS_COMPARE[OS_TICK_CMPREG] = 0;
   1985c:	f8c3 614c 	str.w	r6, [r3, #332]	; 0x14c
    OS_TICK_TIMER->CC[OS_TICK_CMPREG] = g_hal_os_tick.ticks_per_ostick;
   19860:	6829      	ldr	r1, [r5, #0]
   19862:	f8c3 154c 	str.w	r1, [r3, #1356]	; 0x54c

    OS_TICK_TIMER->TASKS_START = 1;
   19866:	601a      	str	r2, [r3, #0]

    OS_EXIT_CRITICAL(sr);
   19868:	f7ff f94e 	bl	18b08 <os_arch_restore_sr>
}
   1986c:	bd70      	pop	{r4, r5, r6, pc}
    assert(RTC_FREQ % os_ticks_per_sec == 0);
   1986e:	2300      	movs	r3, #0
   19870:	461a      	mov	r2, r3
   19872:	4619      	mov	r1, r3
   19874:	4618      	mov	r0, r3
   19876:	f7fd feab 	bl	175d0 <__assert_func>
   1987a:	bf00      	nop
   1987c:	20009e64 	.word	0x20009e64
   19880:	e000e100 	.word	0xe000e100
   19884:	e000ed00 	.word	0xe000ed00
   19888:	00019681 	.word	0x00019681

0001988c <nrf_read_timer_cntr>:
nrf_read_timer_cntr(NRF_TIMER_Type *hwtimer)
{
    uint32_t tcntr;

    /* Force a capture of the timer into 'cntr' capture channel; read it */
    hwtimer->TASKS_CAPTURE[NRF_TIMER_CC_READ] = 1;
   1988c:	2301      	movs	r3, #1
   1988e:	6483      	str	r3, [r0, #72]	; 0x48
    tcntr = hwtimer->CC[NRF_TIMER_CC_READ];
   19890:	f8d0 0548 	ldr.w	r0, [r0, #1352]	; 0x548

    return tcntr;
}
   19894:	4770      	bx	lr
	...

00019898 <nrf_timer_set_ocmp>:
 *
 * @param timer Pointer to timer.
 */
static void
nrf_timer_set_ocmp(struct nrf52_hal_timer *bsptimer, uint32_t expiry)
{
   19898:	b538      	push	{r3, r4, r5, lr}
    uint32_t temp;
    uint32_t cntr;
    NRF_TIMER_Type *hwtimer;
    NRF_RTC_Type *rtctimer;

    if (bsptimer->tmr_rtc) {
   1989a:	7883      	ldrb	r3, [r0, #2]
   1989c:	b393      	cbz	r3, 19904 <nrf_timer_set_ocmp+0x6c>
        rtctimer = (NRF_RTC_Type *)bsptimer->tmr_reg;
   1989e:	6902      	ldr	r2, [r0, #16]
        rtctimer->INTENCLR = NRF_TIMER_INT_MASK(NRF_RTC_TIMER_CC_INT);
   198a0:	f44f 2380 	mov.w	r3, #262144	; 0x40000
   198a4:	f8c2 3308 	str.w	r3, [r2, #776]	; 0x308
        temp = bsptimer->tmr_cntr;
   198a8:	6843      	ldr	r3, [r0, #4]
        cntr = rtctimer->COUNTER;
   198aa:	f8d2 4504 	ldr.w	r4, [r2, #1284]	; 0x504
        if (rtctimer->EVENTS_OVRFLW) {
   198ae:	f8d2 5104 	ldr.w	r5, [r2, #260]	; 0x104
   198b2:	b11d      	cbz	r5, 198bc <nrf_timer_set_ocmp+0x24>
            temp += (1UL << 24);
   198b4:	f103 7380 	add.w	r3, r3, #16777216	; 0x1000000
            cntr = rtctimer->COUNTER;
   198b8:	f8d2 4504 	ldr.w	r4, [r2, #1284]	; 0x504
        }
        temp |= cntr;
   198bc:	4323      	orrs	r3, r4
        delta_t = (int32_t)(expiry - temp);
   198be:	1acb      	subs	r3, r1, r3
         * The nrf documentation states that you must set the output
         * compare to 2 greater than the counter to guarantee an interrupt.
         * Since the counter can tick once while we check, we make sure
         * it is greater than 2.
         */
        if (delta_t < 3) {
   198c0:	2b02      	cmp	r3, #2
   198c2:	dc0e      	bgt.n	198e2 <nrf_timer_set_ocmp+0x4a>
            NVIC_SetPendingIRQ(bsptimer->tmr_irq_num);
   198c4:	7842      	ldrb	r2, [r0, #1]
   198c6:	b253      	sxtb	r3, r2
  if ((int32_t)(IRQn) >= 0)
   198c8:	2b00      	cmp	r3, #0
   198ca:	db15      	blt.n	198f8 <nrf_timer_set_ocmp+0x60>
    NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   198cc:	f002 021f 	and.w	r2, r2, #31
   198d0:	095b      	lsrs	r3, r3, #5
   198d2:	2101      	movs	r1, #1
   198d4:	fa01 f202 	lsl.w	r2, r1, r2
   198d8:	3340      	adds	r3, #64	; 0x40
   198da:	491b      	ldr	r1, [pc, #108]	; (19948 <nrf_timer_set_ocmp+0xb0>)
   198dc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
   198e0:	e00a      	b.n	198f8 <nrf_timer_set_ocmp+0x60>
        } else  {
            if (delta_t < (1UL << 24)) {
   198e2:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
   198e6:	d208      	bcs.n	198fa <nrf_timer_set_ocmp+0x62>
                rtctimer->CC[NRF_RTC_TIMER_CC_INT] = expiry & 0x00ffffff;
   198e8:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
   198ec:	f8c2 1548 	str.w	r1, [r2, #1352]	; 0x548
            } else {
                /* CC too far ahead. Just make sure we set compare far ahead */
                rtctimer->CC[NRF_RTC_TIMER_CC_INT] = cntr + (1UL << 23);
            }
            rtctimer->INTENSET = NRF_TIMER_INT_MASK(NRF_RTC_TIMER_CC_INT);
   198f0:	f44f 2380 	mov.w	r3, #262144	; 0x40000
   198f4:	f8c2 3304 	str.w	r3, [r2, #772]	; 0x304
        /* Force interrupt to occur as we may have missed it */
        if ((int32_t)(nrf_read_timer_cntr(hwtimer) - expiry) >= 0) {
            NVIC_SetPendingIRQ(bsptimer->tmr_irq_num);
        }
    }
}
   198f8:	bd38      	pop	{r3, r4, r5, pc}
                rtctimer->CC[NRF_RTC_TIMER_CC_INT] = cntr + (1UL << 23);
   198fa:	f504 0400 	add.w	r4, r4, #8388608	; 0x800000
   198fe:	f8c2 4548 	str.w	r4, [r2, #1352]	; 0x548
   19902:	e7f5      	b.n	198f0 <nrf_timer_set_ocmp+0x58>
   19904:	460d      	mov	r5, r1
   19906:	4604      	mov	r4, r0
        hwtimer = bsptimer->tmr_reg;
   19908:	6900      	ldr	r0, [r0, #16]
        hwtimer->INTENCLR = NRF_TIMER_INT_MASK(NRF_TIMER_CC_INT);
   1990a:	f44f 2300 	mov.w	r3, #524288	; 0x80000
   1990e:	f8c0 3308 	str.w	r3, [r0, #776]	; 0x308
        hwtimer->CC[NRF_TIMER_CC_INT] = expiry;
   19912:	f8c0 154c 	str.w	r1, [r0, #1356]	; 0x54c
        hwtimer->EVENTS_COMPARE[NRF_TIMER_CC_INT] = 0;
   19916:	2200      	movs	r2, #0
   19918:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
        hwtimer->INTENSET = NRF_TIMER_INT_MASK(NRF_TIMER_CC_INT);
   1991c:	f8c0 3304 	str.w	r3, [r0, #772]	; 0x304
        if ((int32_t)(nrf_read_timer_cntr(hwtimer) - expiry) >= 0) {
   19920:	f7ff ffb4 	bl	1988c <nrf_read_timer_cntr>
   19924:	1b40      	subs	r0, r0, r5
   19926:	2800      	cmp	r0, #0
   19928:	dbe6      	blt.n	198f8 <nrf_timer_set_ocmp+0x60>
            NVIC_SetPendingIRQ(bsptimer->tmr_irq_num);
   1992a:	7862      	ldrb	r2, [r4, #1]
   1992c:	b253      	sxtb	r3, r2
  if ((int32_t)(IRQn) >= 0)
   1992e:	2b00      	cmp	r3, #0
   19930:	dbe2      	blt.n	198f8 <nrf_timer_set_ocmp+0x60>
    NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   19932:	f002 021f 	and.w	r2, r2, #31
   19936:	095b      	lsrs	r3, r3, #5
   19938:	2101      	movs	r1, #1
   1993a:	fa01 f202 	lsl.w	r2, r1, r2
   1993e:	3340      	adds	r3, #64	; 0x40
   19940:	4901      	ldr	r1, [pc, #4]	; (19948 <nrf_timer_set_ocmp+0xb0>)
   19942:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
   19946:	e7d7      	b.n	198f8 <nrf_timer_set_ocmp+0x60>
   19948:	e000e100 	.word	0xe000e100

0001994c <nrf_timer_disable_ocmp>:

/* Disable output compare used for timer */
static void
nrf_timer_disable_ocmp(NRF_TIMER_Type *hwtimer)
{
    hwtimer->INTENCLR = NRF_TIMER_INT_MASK(NRF_TIMER_CC_INT);
   1994c:	f44f 2300 	mov.w	r3, #524288	; 0x80000
   19950:	f8c0 3308 	str.w	r3, [r0, #776]	; 0x308
}
   19954:	4770      	bx	lr

00019956 <nrf_rtc_disable_ocmp>:

static void
nrf_rtc_disable_ocmp(NRF_RTC_Type *rtctimer)
{
    rtctimer->INTENCLR = NRF_TIMER_INT_MASK(NRF_RTC_TIMER_CC_INT);
   19956:	f44f 2380 	mov.w	r3, #262144	; 0x40000
   1995a:	f8c0 3308 	str.w	r3, [r0, #776]	; 0x308
}
   1995e:	4770      	bx	lr

00019960 <hal_timer_read_bsptimer>:

static uint32_t
hal_timer_read_bsptimer(struct nrf52_hal_timer *bsptimer)
{
   19960:	b430      	push	{r4, r5}
    uint32_t low32;
    uint32_t ctx;
    uint32_t tcntr;
    NRF_RTC_Type *rtctimer;

    rtctimer = (NRF_RTC_Type *)bsptimer->tmr_reg;
   19962:	6902      	ldr	r2, [r0, #16]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   19964:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
   19968:	b672      	cpsid	i
    __HAL_DISABLE_INTERRUPTS(ctx);
    tcntr = bsptimer->tmr_cntr;
   1996a:	6841      	ldr	r1, [r0, #4]
    low32 = rtctimer->COUNTER;
   1996c:	f8d2 3504 	ldr.w	r3, [r2, #1284]	; 0x504
    if (rtctimer->EVENTS_OVRFLW) {
   19970:	f8d2 5104 	ldr.w	r5, [r2, #260]	; 0x104
   19974:	b1ad      	cbz	r5, 199a2 <hal_timer_read_bsptimer+0x42>
        tcntr += (1UL << 24);
   19976:	f101 7180 	add.w	r1, r1, #16777216	; 0x1000000
        bsptimer->tmr_cntr = tcntr;
   1997a:	6041      	str	r1, [r0, #4]
        low32 = rtctimer->COUNTER;
   1997c:	f8d2 3504 	ldr.w	r3, [r2, #1284]	; 0x504
        rtctimer->EVENTS_OVRFLW = 0;
   19980:	2500      	movs	r5, #0
   19982:	f8c2 5104 	str.w	r5, [r2, #260]	; 0x104
        NVIC_SetPendingIRQ(bsptimer->tmr_irq_num);
   19986:	7840      	ldrb	r0, [r0, #1]
   19988:	b242      	sxtb	r2, r0
  if ((int32_t)(IRQn) >= 0)
   1998a:	42aa      	cmp	r2, r5
   1998c:	db09      	blt.n	199a2 <hal_timer_read_bsptimer+0x42>
    NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   1998e:	f000 001f 	and.w	r0, r0, #31
   19992:	0952      	lsrs	r2, r2, #5
   19994:	2501      	movs	r5, #1
   19996:	fa05 f000 	lsl.w	r0, r5, r0
   1999a:	3240      	adds	r2, #64	; 0x40
   1999c:	4d04      	ldr	r5, [pc, #16]	; (199b0 <hal_timer_read_bsptimer+0x50>)
   1999e:	f845 0022 	str.w	r0, [r5, r2, lsl #2]
    }
    tcntr |= low32;
   199a2:	ea43 0001 	orr.w	r0, r3, r1
    __HAL_ENABLE_INTERRUPTS(ctx);
   199a6:	b904      	cbnz	r4, 199aa <hal_timer_read_bsptimer+0x4a>
  __ASM volatile ("cpsie i" : : : "memory");
   199a8:	b662      	cpsie	i

    return tcntr;
}
   199aa:	bc30      	pop	{r4, r5}
   199ac:	4770      	bx	lr
   199ae:	bf00      	nop
   199b0:	e000e100 	.word	0xe000e100

000199b4 <hal_timer_chk_queue>:
 *
 * @param bsptimer
 */
static void
hal_timer_chk_queue(struct nrf52_hal_timer *bsptimer)
{
   199b4:	b570      	push	{r4, r5, r6, lr}
   199b6:	4605      	mov	r5, r0
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   199b8:	f3ef 8610 	mrs	r6, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
   199bc:	b672      	cpsid	i
   199be:	e013      	b.n	199e8 <hal_timer_chk_queue+0x34>
             * If we are within 3 ticks of RTC, we wont be able to set compare.
             * Thus, we have to service this timer early.
             */
            delta = -3;
        } else {
            tcntr = nrf_read_timer_cntr(bsptimer->tmr_reg);
   199c0:	6928      	ldr	r0, [r5, #16]
   199c2:	f7ff ff63 	bl	1988c <nrf_read_timer_cntr>
            delta = 0;
   199c6:	2200      	movs	r2, #0
        }
        if ((int32_t)(tcntr - timer->expiry) >= delta) {
   199c8:	68e3      	ldr	r3, [r4, #12]
   199ca:	1ac0      	subs	r0, r0, r3
   199cc:	4290      	cmp	r0, r2
   199ce:	db19      	blt.n	19a04 <hal_timer_chk_queue+0x50>
            TAILQ_REMOVE(&bsptimer->hal_timer_q, timer, link);
   199d0:	6923      	ldr	r3, [r4, #16]
   199d2:	b1a3      	cbz	r3, 199fe <hal_timer_chk_queue+0x4a>
   199d4:	6962      	ldr	r2, [r4, #20]
   199d6:	615a      	str	r2, [r3, #20]
   199d8:	6963      	ldr	r3, [r4, #20]
   199da:	6922      	ldr	r2, [r4, #16]
   199dc:	601a      	str	r2, [r3, #0]
            timer->link.tqe_prev = NULL;
   199de:	2300      	movs	r3, #0
   199e0:	6163      	str	r3, [r4, #20]
            timer->cb_func(timer->cb_arg);
   199e2:	6863      	ldr	r3, [r4, #4]
   199e4:	68a0      	ldr	r0, [r4, #8]
   199e6:	4798      	blx	r3
    while ((timer = TAILQ_FIRST(&bsptimer->hal_timer_q)) != NULL) {
   199e8:	696c      	ldr	r4, [r5, #20]
   199ea:	b15c      	cbz	r4, 19a04 <hal_timer_chk_queue+0x50>
        if (bsptimer->tmr_rtc) {
   199ec:	78ab      	ldrb	r3, [r5, #2]
   199ee:	2b00      	cmp	r3, #0
   199f0:	d0e6      	beq.n	199c0 <hal_timer_chk_queue+0xc>
            tcntr = hal_timer_read_bsptimer(bsptimer);
   199f2:	4628      	mov	r0, r5
   199f4:	f7ff ffb4 	bl	19960 <hal_timer_read_bsptimer>
            delta = -3;
   199f8:	f06f 0202 	mvn.w	r2, #2
   199fc:	e7e4      	b.n	199c8 <hal_timer_chk_queue+0x14>
            TAILQ_REMOVE(&bsptimer->hal_timer_q, timer, link);
   199fe:	6963      	ldr	r3, [r4, #20]
   19a00:	61ab      	str	r3, [r5, #24]
   19a02:	e7e9      	b.n	199d8 <hal_timer_chk_queue+0x24>
            break;
        }
    }

    /* Any timers left on queue? If so, we need to set OCMP */
    timer = TAILQ_FIRST(&bsptimer->hal_timer_q);
   19a04:	696b      	ldr	r3, [r5, #20]
    if (timer) {
   19a06:	b133      	cbz	r3, 19a16 <hal_timer_chk_queue+0x62>
        nrf_timer_set_ocmp(bsptimer, timer->expiry);
   19a08:	68d9      	ldr	r1, [r3, #12]
   19a0a:	4628      	mov	r0, r5
   19a0c:	f7ff ff44 	bl	19898 <nrf_timer_set_ocmp>
            nrf_rtc_disable_ocmp((NRF_RTC_Type *)bsptimer->tmr_reg);
        } else {
            nrf_timer_disable_ocmp(bsptimer->tmr_reg);
        }
    }
    __HAL_ENABLE_INTERRUPTS(ctx);
   19a10:	b906      	cbnz	r6, 19a14 <hal_timer_chk_queue+0x60>
  __ASM volatile ("cpsie i" : : : "memory");
   19a12:	b662      	cpsie	i
}
   19a14:	bd70      	pop	{r4, r5, r6, pc}
        if (bsptimer->tmr_rtc) {
   19a16:	78ab      	ldrb	r3, [r5, #2]
   19a18:	b11b      	cbz	r3, 19a22 <hal_timer_chk_queue+0x6e>
            nrf_rtc_disable_ocmp((NRF_RTC_Type *)bsptimer->tmr_reg);
   19a1a:	6928      	ldr	r0, [r5, #16]
   19a1c:	f7ff ff9b 	bl	19956 <nrf_rtc_disable_ocmp>
   19a20:	e7f6      	b.n	19a10 <hal_timer_chk_queue+0x5c>
            nrf_timer_disable_ocmp(bsptimer->tmr_reg);
   19a22:	6928      	ldr	r0, [r5, #16]
   19a24:	f7ff ff92 	bl	1994c <nrf_timer_disable_ocmp>
   19a28:	e7f2      	b.n	19a10 <hal_timer_chk_queue+0x5c>

00019a2a <hal_timer_irq_handler>:
#if (MYNEWT_VAL(TIMER_0) || MYNEWT_VAL(TIMER_1) || MYNEWT_VAL(TIMER_2) || \
     MYNEWT_VAL(TIMER_3) || MYNEWT_VAL(TIMER_4))

static void
hal_timer_irq_handler(struct nrf52_hal_timer *bsptimer)
{
   19a2a:	b510      	push	{r4, lr}
    NRF_TIMER_Type *hwtimer;

    os_trace_isr_enter();

    /* Check interrupt source. If set, clear them */
    hwtimer = bsptimer->tmr_reg;
   19a2c:	6904      	ldr	r4, [r0, #16]
    compare = hwtimer->EVENTS_COMPARE[NRF_TIMER_CC_INT];
   19a2e:	f8d4 314c 	ldr.w	r3, [r4, #332]	; 0x14c
    if (compare) {
   19a32:	b113      	cbz	r3, 19a3a <hal_timer_irq_handler+0x10>
        hwtimer->EVENTS_COMPARE[NRF_TIMER_CC_INT] = 0;
   19a34:	2300      	movs	r3, #0
   19a36:	f8c4 314c 	str.w	r3, [r4, #332]	; 0x14c
    }

    /* XXX: make these stats? */
    /* Count # of timer isrs */
    ++bsptimer->timer_isrs;
   19a3a:	6883      	ldr	r3, [r0, #8]
   19a3c:	3301      	adds	r3, #1
   19a3e:	6083      	str	r3, [r0, #8]
     * counter is already passed the output compare value), we use the NVIC
     * to set a pending interrupt. This means that there will be no compare
     * flag set, so all we do is check to see if the compare interrupt is
     * enabled.
     */
    if (hwtimer->INTENCLR & NRF_TIMER_INT_MASK(NRF_TIMER_CC_INT)) {
   19a40:	f8d4 3308 	ldr.w	r3, [r4, #776]	; 0x308
   19a44:	f413 2f00 	tst.w	r3, #524288	; 0x80000
   19a48:	d100      	bne.n	19a4c <hal_timer_irq_handler+0x22>
        /* XXX: Recommended by nordic to make sure interrupts are cleared */
        compare = hwtimer->EVENTS_COMPARE[NRF_TIMER_CC_INT];
    }

    os_trace_isr_exit();
}
   19a4a:	bd10      	pop	{r4, pc}
        hal_timer_chk_queue(bsptimer);
   19a4c:	f7ff ffb2 	bl	199b4 <hal_timer_chk_queue>
        compare = hwtimer->EVENTS_COMPARE[NRF_TIMER_CC_INT];
   19a50:	f8d4 314c 	ldr.w	r3, [r4, #332]	; 0x14c
}
   19a54:	e7f9      	b.n	19a4a <hal_timer_irq_handler+0x20>
	...

00019a58 <nrf52_timer0_irq_handler>:
#endif

#if MYNEWT_VAL(TIMER_0)
void
nrf52_timer0_irq_handler(void)
{
   19a58:	b508      	push	{r3, lr}
    hal_timer_irq_handler(&nrf52_hal_timer0);
   19a5a:	4802      	ldr	r0, [pc, #8]	; (19a64 <nrf52_timer0_irq_handler+0xc>)
   19a5c:	f7ff ffe5 	bl	19a2a <hal_timer_irq_handler>
}
   19a60:	bd08      	pop	{r3, pc}
   19a62:	bf00      	nop
   19a64:	20009e70 	.word	0x20009e70

00019a68 <hal_timer_init>:
    uint8_t irq_num;
    struct nrf52_hal_timer *bsptimer;
    void *hwtimer;
    hal_timer_irq_handler_t irq_isr;

    NRF52_HAL_TIMER_RESOLVE(timer_num, bsptimer);
   19a68:	2805      	cmp	r0, #5
   19a6a:	dc1c      	bgt.n	19aa6 <hal_timer_init+0x3e>
   19a6c:	4b12      	ldr	r3, [pc, #72]	; (19ab8 <hal_timer_init+0x50>)
   19a6e:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
   19a72:	b1d3      	cbz	r3, 19aaa <hal_timer_init+0x42>

    /* If timer is enabled do not allow init */
    if (bsptimer->tmr_enabled) {
   19a74:	781a      	ldrb	r2, [r3, #0]
   19a76:	b9d2      	cbnz	r2, 19aae <hal_timer_init+0x46>
        rc = EINVAL;
        goto err;
    }

    switch (timer_num) {
   19a78:	b9d8      	cbnz	r0, 19ab2 <hal_timer_init+0x4a>
    if (hwtimer == NULL) {
        rc = EINVAL;
        goto err;
    }

    bsptimer->tmr_reg = hwtimer;
   19a7a:	4a10      	ldr	r2, [pc, #64]	; (19abc <hal_timer_init+0x54>)
   19a7c:	611a      	str	r2, [r3, #16]
    bsptimer->tmr_irq_num = irq_num;
   19a7e:	2208      	movs	r2, #8
   19a80:	705a      	strb	r2, [r3, #1]
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   19a82:	4b0f      	ldr	r3, [pc, #60]	; (19ac0 <hal_timer_init+0x58>)
   19a84:	f44f 7280 	mov.w	r2, #256	; 0x100
   19a88:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  __ASM volatile ("dsb 0xF":::"memory");
   19a8c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
   19a90:	f3bf 8f6f 	isb	sy
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
   19a94:	22e0      	movs	r2, #224	; 0xe0
   19a96:	f883 2308 	strb.w	r2, [r3, #776]	; 0x308
  uint32_t vectors = (uint32_t )SCB->VTOR;
   19a9a:	f503 6340 	add.w	r3, r3, #3072	; 0xc00
   19a9e:	689b      	ldr	r3, [r3, #8]
  (* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4)) = vector;
   19aa0:	4a08      	ldr	r2, [pc, #32]	; (19ac4 <hal_timer_init+0x5c>)
   19aa2:	661a      	str	r2, [r3, #96]	; 0x60
    /* Disable IRQ, set priority and set vector in table */
    NVIC_DisableIRQ(irq_num);
    NVIC_SetPriority(irq_num, (1 << __NVIC_PRIO_BITS) - 1);
    NVIC_SetVector(irq_num, (uint32_t)irq_isr);

    return 0;
   19aa4:	4770      	bx	lr

err:
    return rc;
   19aa6:	2016      	movs	r0, #22
   19aa8:	4770      	bx	lr
   19aaa:	2016      	movs	r0, #22
   19aac:	4770      	bx	lr
   19aae:	2016      	movs	r0, #22
   19ab0:	4770      	bx	lr
   19ab2:	2016      	movs	r0, #22
}
   19ab4:	4770      	bx	lr
   19ab6:	bf00      	nop
   19ab8:	0001f85c 	.word	0x0001f85c
   19abc:	40008000 	.word	0x40008000
   19ac0:	e000e100 	.word	0xe000e100
   19ac4:	00019a59 	.word	0x00019a59

00019ac8 <hal_timer_config>:
    NRF_TIMER_Type *hwtimer;
#if MYNEWT_VAL(TIMER_5)
    NRF_RTC_Type *rtctimer;
#endif

    NRF52_HAL_TIMER_RESOLVE(timer_num, bsptimer);
   19ac8:	2805      	cmp	r0, #5
   19aca:	dc65      	bgt.n	19b98 <hal_timer_config+0xd0>
   19acc:	4b39      	ldr	r3, [pc, #228]	; (19bb4 <hal_timer_config+0xec>)
   19ace:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
   19ad2:	2800      	cmp	r0, #0
   19ad4:	d062      	beq.n	19b9c <hal_timer_config+0xd4>
        return 0;
    }
#endif

    /* Set timer to desired frequency */
    div = NRF52_MAX_TIMER_FREQ / freq_hz;
   19ad6:	4b38      	ldr	r3, [pc, #224]	; (19bb8 <hal_timer_config+0xf0>)
   19ad8:	fbb3 f1f1 	udiv	r1, r3, r1
    /*
     * Largest prescaler is 2^9 and must make sure frequency not too high.
     * If hwtimer is NULL it means that the timer was not initialized prior
     * to call.
     */
    if (bsptimer->tmr_enabled || (div == 0) || (div > 512) ||
   19adc:	7803      	ldrb	r3, [r0, #0]
   19ade:	2b00      	cmp	r3, #0
   19ae0:	d15e      	bne.n	19ba0 <hal_timer_config+0xd8>
   19ae2:	2900      	cmp	r1, #0
   19ae4:	d05e      	beq.n	19ba4 <hal_timer_config+0xdc>
   19ae6:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   19aea:	d85d      	bhi.n	19ba8 <hal_timer_config+0xe0>
        (bsptimer->tmr_reg == NULL)) {
   19aec:	6902      	ldr	r2, [r0, #16]
    if (bsptimer->tmr_enabled || (div == 0) || (div > 512) ||
   19aee:	2a00      	cmp	r2, #0
   19af0:	d05c      	beq.n	19bac <hal_timer_config+0xe4>
{
   19af2:	b430      	push	{r4, r5}
        rc = EINVAL;
        goto err;
    }

    if (div == 1) {
   19af4:	2901      	cmp	r1, #1
   19af6:	d013      	beq.n	19b20 <hal_timer_config+0x58>
        prescaler = 0;
    } else {
        /* Find closest prescaler */
        for (prescaler = 1; prescaler < 10; ++prescaler) {
   19af8:	2301      	movs	r3, #1
   19afa:	2b09      	cmp	r3, #9
   19afc:	d810      	bhi.n	19b20 <hal_timer_config+0x58>
            if (div <= (1 << prescaler)) {
   19afe:	2201      	movs	r2, #1
   19b00:	409a      	lsls	r2, r3
   19b02:	428a      	cmp	r2, r1
   19b04:	d202      	bcs.n	19b0c <hal_timer_config+0x44>
        for (prescaler = 1; prescaler < 10; ++prescaler) {
   19b06:	3301      	adds	r3, #1
   19b08:	b2db      	uxtb	r3, r3
   19b0a:	e7f6      	b.n	19afa <hal_timer_config+0x32>
                min_delta = div - (1 << (prescaler - 1));
   19b0c:	1e5c      	subs	r4, r3, #1
   19b0e:	2501      	movs	r5, #1
   19b10:	fa05 f404 	lsl.w	r4, r5, r4
   19b14:	1b0c      	subs	r4, r1, r4
                max_delta = (1 << prescaler) - div;
   19b16:	1a51      	subs	r1, r2, r1
                if (min_delta < max_delta) {
   19b18:	428c      	cmp	r4, r1
   19b1a:	d201      	bcs.n	19b20 <hal_timer_config+0x58>
                    prescaler -= 1;
   19b1c:	3b01      	subs	r3, #1
   19b1e:	b2db      	uxtb	r3, r3
            }
        }
    }

    /* Now set the actual frequency */
    bsptimer->tmr_freq = NRF52_MAX_TIMER_FREQ / (1 << prescaler);
   19b20:	4a25      	ldr	r2, [pc, #148]	; (19bb8 <hal_timer_config+0xf0>)
   19b22:	411a      	asrs	r2, r3
   19b24:	60c2      	str	r2, [r0, #12]
    bsptimer->tmr_enabled = 1;
   19b26:	2201      	movs	r2, #1
   19b28:	7002      	strb	r2, [r0, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
   19b2a:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
   19b2e:	b672      	cpsid	i

    /* disable interrupts */
    __HAL_DISABLE_INTERRUPTS(ctx);

    /* Make sure HFXO is started */
    if ((NRF_CLOCK->HFCLKSTAT &
   19b30:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
   19b34:	f8d2 240c 	ldr.w	r2, [r2, #1036]	; 0x40c
   19b38:	f002 1201 	and.w	r2, r2, #65537	; 0x10001
   19b3c:	f1b2 1f01 	cmp.w	r2, #65537	; 0x10001
   19b40:	d00c      	beq.n	19b5c <hal_timer_config+0x94>
         (CLOCK_HFCLKSTAT_SRC_Msk | CLOCK_HFCLKSTAT_STATE_Msk)) !=
        (CLOCK_HFCLKSTAT_SRC_Msk | CLOCK_HFCLKSTAT_STATE_Msk)) {
        NRF_CLOCK->EVENTS_HFCLKSTARTED = 0;
   19b42:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
   19b46:	2100      	movs	r1, #0
   19b48:	f8c2 1100 	str.w	r1, [r2, #256]	; 0x100
        NRF_CLOCK->TASKS_HFCLKSTART = 1;
   19b4c:	2101      	movs	r1, #1
   19b4e:	6011      	str	r1, [r2, #0]
        while (1) {
            if ((NRF_CLOCK->EVENTS_HFCLKSTARTED) != 0) {
   19b50:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
   19b54:	f8d2 2100 	ldr.w	r2, [r2, #256]	; 0x100
   19b58:	2a00      	cmp	r2, #0
   19b5a:	d0f9      	beq.n	19b50 <hal_timer_config+0x88>
                break;
            }
        }
    }
    hwtimer = bsptimer->tmr_reg;
   19b5c:	6902      	ldr	r2, [r0, #16]

    /* Stop the timer first */
    hwtimer->TASKS_STOP = 1;
   19b5e:	2101      	movs	r1, #1
   19b60:	6051      	str	r1, [r2, #4]
    hwtimer->TASKS_CLEAR = 1;
   19b62:	60d1      	str	r1, [r2, #12]

    /* Put the timer in timer mode using 32 bits. */
    hwtimer->MODE = TIMER_MODE_MODE_Timer;
   19b64:	2500      	movs	r5, #0
   19b66:	f8c2 5504 	str.w	r5, [r2, #1284]	; 0x504
    hwtimer->BITMODE = TIMER_BITMODE_BITMODE_32Bit;
   19b6a:	2503      	movs	r5, #3
   19b6c:	f8c2 5508 	str.w	r5, [r2, #1288]	; 0x508

    /* Set the pre-scalar */
    hwtimer->PRESCALER = prescaler;
   19b70:	f8c2 3510 	str.w	r3, [r2, #1296]	; 0x510

    /* Start the timer */
    hwtimer->TASKS_START = 1;
   19b74:	6011      	str	r1, [r2, #0]

    NVIC_EnableIRQ(bsptimer->tmr_irq_num);
   19b76:	7842      	ldrb	r2, [r0, #1]
   19b78:	b253      	sxtb	r3, r2
  if ((int32_t)(IRQn) >= 0)
   19b7a:	2b00      	cmp	r3, #0
   19b7c:	db07      	blt.n	19b8e <hal_timer_config+0xc6>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   19b7e:	f002 021f 	and.w	r2, r2, #31
   19b82:	095b      	lsrs	r3, r3, #5
   19b84:	fa01 f202 	lsl.w	r2, r1, r2
   19b88:	490c      	ldr	r1, [pc, #48]	; (19bbc <hal_timer_config+0xf4>)
   19b8a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

    __HAL_ENABLE_INTERRUPTS(ctx);
   19b8e:	b97c      	cbnz	r4, 19bb0 <hal_timer_config+0xe8>
  __ASM volatile ("cpsie i" : : : "memory");
   19b90:	b662      	cpsie	i

    return 0;
   19b92:	2000      	movs	r0, #0

err:
    return rc;
}
   19b94:	bc30      	pop	{r4, r5}
   19b96:	4770      	bx	lr
    return rc;
   19b98:	2016      	movs	r0, #22
   19b9a:	4770      	bx	lr
   19b9c:	2016      	movs	r0, #22
   19b9e:	4770      	bx	lr
   19ba0:	2016      	movs	r0, #22
   19ba2:	4770      	bx	lr
   19ba4:	2016      	movs	r0, #22
   19ba6:	4770      	bx	lr
   19ba8:	2016      	movs	r0, #22
   19baa:	4770      	bx	lr
   19bac:	2016      	movs	r0, #22
}
   19bae:	4770      	bx	lr
    return 0;
   19bb0:	2000      	movs	r0, #0
   19bb2:	e7ef      	b.n	19b94 <hal_timer_config+0xcc>
   19bb4:	0001f85c 	.word	0x0001f85c
   19bb8:	00f42400 	.word	0x00f42400
   19bbc:	e000e100 	.word	0xe000e100

00019bc0 <hal_timer_read>:
 *
 * @return uint32_t The timer counter register.
 */
uint32_t
hal_timer_read(int timer_num)
{
   19bc0:	b508      	push	{r3, lr}
    int rc;
    uint32_t tcntr;
    struct nrf52_hal_timer *bsptimer;

    NRF52_HAL_TIMER_RESOLVE(timer_num, bsptimer);
   19bc2:	2805      	cmp	r0, #5
   19bc4:	dc0c      	bgt.n	19be0 <hal_timer_read+0x20>
   19bc6:	4b09      	ldr	r3, [pc, #36]	; (19bec <hal_timer_read+0x2c>)
   19bc8:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
   19bcc:	b140      	cbz	r0, 19be0 <hal_timer_read+0x20>
    if (bsptimer->tmr_rtc) {
   19bce:	7883      	ldrb	r3, [r0, #2]
   19bd0:	b91b      	cbnz	r3, 19bda <hal_timer_read+0x1a>
        tcntr = hal_timer_read_bsptimer(bsptimer);
    } else {
        tcntr = nrf_read_timer_cntr(bsptimer->tmr_reg);
   19bd2:	6900      	ldr	r0, [r0, #16]
   19bd4:	f7ff fe5a 	bl	1988c <nrf_read_timer_cntr>
    /* Assert here since there is no invalid return code */
err:
    assert(0);
    rc = 0;
    return rc;
}
   19bd8:	bd08      	pop	{r3, pc}
        tcntr = hal_timer_read_bsptimer(bsptimer);
   19bda:	f7ff fec1 	bl	19960 <hal_timer_read_bsptimer>
   19bde:	e7fb      	b.n	19bd8 <hal_timer_read+0x18>
    assert(0);
   19be0:	2300      	movs	r3, #0
   19be2:	461a      	mov	r2, r3
   19be4:	4619      	mov	r1, r3
   19be6:	4618      	mov	r0, r3
   19be8:	f7fd fcf2 	bl	175d0 <__assert_func>
   19bec:	0001f85c 	.word	0x0001f85c

00019bf0 <nrf52_periph_create_timers>:
};
#endif

static void
nrf52_periph_create_timers(void)
{
   19bf0:	b508      	push	{r3, lr}
    int rc;

    (void)rc;

#if MYNEWT_VAL(TIMER_0)
    rc = hal_timer_init(0, NULL);
   19bf2:	2100      	movs	r1, #0
   19bf4:	4608      	mov	r0, r1
   19bf6:	f7ff ff37 	bl	19a68 <hal_timer_init>
    assert(rc == 0);
   19bfa:	b920      	cbnz	r0, 19c06 <nrf52_periph_create_timers+0x16>
    rc = hal_timer_init(5, NULL);
    assert(rc == 0);
#endif

#if MYNEWT_VAL(OS_CPUTIME_TIMER_NUM) >= 0
    rc = os_cputime_init(MYNEWT_VAL(OS_CPUTIME_FREQ));
   19bfc:	4808      	ldr	r0, [pc, #32]	; (19c20 <nrf52_periph_create_timers+0x30>)
   19bfe:	f7fd ff11 	bl	17a24 <os_cputime_init>
    assert(rc == 0);
   19c02:	b930      	cbnz	r0, 19c12 <nrf52_periph_create_timers+0x22>
#endif
}
   19c04:	bd08      	pop	{r3, pc}
    assert(rc == 0);
   19c06:	2300      	movs	r3, #0
   19c08:	461a      	mov	r2, r3
   19c0a:	4619      	mov	r1, r3
   19c0c:	4618      	mov	r0, r3
   19c0e:	f7fd fcdf 	bl	175d0 <__assert_func>
    assert(rc == 0);
   19c12:	2300      	movs	r3, #0
   19c14:	461a      	mov	r2, r3
   19c16:	4619      	mov	r1, r3
   19c18:	4618      	mov	r0, r3
   19c1a:	f7fd fcd9 	bl	175d0 <__assert_func>
   19c1e:	bf00      	nop
   19c20:	000f4240 	.word	0x000f4240

00019c24 <nrf52_periph_create_i2c>:
#endif
}

static void
nrf52_periph_create_i2c(void)
{
   19c24:	b508      	push	{r3, lr}
    rc = bus_i2c_hal_dev_create("i2c1", &i2c1_bus,
                                (struct bus_i2c_dev_cfg *)&i2c1_cfg);
    assert(rc == 0);
#endif
#else
    rc = hal_i2c_init(1, (void *)&hal_i2c1_cfg);
   19c26:	4906      	ldr	r1, [pc, #24]	; (19c40 <nrf52_periph_create_i2c+0x1c>)
   19c28:	2001      	movs	r0, #1
   19c2a:	f7fd f82b 	bl	16c84 <hal_i2c_init>
    assert(rc == 0);
   19c2e:	b900      	cbnz	r0, 19c32 <nrf52_periph_create_i2c+0xe>
#endif
#endif
}
   19c30:	bd08      	pop	{r3, pc}
    assert(rc == 0);
   19c32:	2300      	movs	r3, #0
   19c34:	461a      	mov	r2, r3
   19c36:	4619      	mov	r1, r3
   19c38:	4618      	mov	r0, r3
   19c3a:	f7fd fcc9 	bl	175d0 <__assert_func>
   19c3e:	bf00      	nop
   19c40:	0001f874 	.word	0x0001f874

00019c44 <nrf52_periph_create_spi>:

static void
nrf52_periph_create_spi(void)
{
   19c44:	b508      	push	{r3, lr}
#if MYNEWT_VAL(BUS_DRIVER_PRESENT)
    rc = bus_spi_hal_dev_create("spi0",
                                &spi0_bus, (struct bus_spi_dev_cfg *)&spi0_cfg);
    assert(rc == 0);
#else
    rc = hal_spi_init(0, (void *)&os_bsp_spi0m_cfg, HAL_SPI_TYPE_MASTER);
   19c46:	2200      	movs	r2, #0
   19c48:	4905      	ldr	r1, [pc, #20]	; (19c60 <nrf52_periph_create_spi+0x1c>)
   19c4a:	4610      	mov	r0, r2
   19c4c:	f7fd fb4e 	bl	172ec <hal_spi_init>
    assert(rc == 0);
   19c50:	b900      	cbnz	r0, 19c54 <nrf52_periph_create_spi+0x10>
#endif
#if MYNEWT_VAL(SPI_2_SLAVE)
    rc = hal_spi_init(2, (void *)&os_bsp_spi2s_cfg, HAL_SPI_TYPE_SLAVE);
    assert(rc == 0);
#endif
}
   19c52:	bd08      	pop	{r3, pc}
    assert(rc == 0);
   19c54:	2300      	movs	r3, #0
   19c56:	461a      	mov	r2, r3
   19c58:	4619      	mov	r1, r3
   19c5a:	4618      	mov	r0, r3
   19c5c:	f7fd fcb8 	bl	175d0 <__assert_func>
   19c60:	0001f880 	.word	0x0001f880

00019c64 <nrf52_periph_create>:

void
nrf52_periph_create(void)
{
   19c64:	b508      	push	{r3, lr}
    nrf52_periph_create_timers();
   19c66:	f7ff ffc3 	bl	19bf0 <nrf52_periph_create_timers>
    nrf52_periph_create_adc();
    nrf52_periph_create_pwm();
    nrf52_periph_create_trng();
    nrf52_periph_create_crypto();
    nrf52_periph_create_uart();
    nrf52_periph_create_i2c();
   19c6a:	f7ff ffdb 	bl	19c24 <nrf52_periph_create_i2c>
    nrf52_periph_create_spi();
   19c6e:	f7ff ffe9 	bl	19c44 <nrf52_periph_create_spi>
}
   19c72:	bd08      	pop	{r3, pc}

00019c74 <sensor_dev_create>:
    assert(rc == 0);

    rc = config_icp10114_sensor();
    assert(rc == 0);
#endif
}
   19c74:	4770      	bx	lr
	...

00019c78 <sensor_mgr_remove>:
}

static void
sensor_mgr_remove(struct sensor *sensor)
{
    SLIST_REMOVE(&sensor_mgr.mgr_sensor_list, sensor, sensor, s_next);
   19c78:	4b08      	ldr	r3, [pc, #32]	; (19c9c <sensor_mgr_remove+0x24>)
   19c7a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   19c7c:	4282      	cmp	r2, r0
   19c7e:	d104      	bne.n	19c8a <sensor_mgr_remove+0x12>
   19c80:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
   19c84:	631a      	str	r2, [r3, #48]	; 0x30
   19c86:	4770      	bx	lr
   19c88:	461a      	mov	r2, r3
   19c8a:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
   19c8e:	4283      	cmp	r3, r0
   19c90:	d1fa      	bne.n	19c88 <sensor_mgr_remove+0x10>
   19c92:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
   19c96:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
}
   19c9a:	4770      	bx	lr
   19c9c:	20009e90 	.word	0x20009e90

00019ca0 <sensor_mgr_insert>:

static void
sensor_mgr_insert(struct sensor *sensor)
{
   19ca0:	b410      	push	{r4}
    struct sensor *cursor, *prev;

    prev = cursor = NULL;
    if (!sensor->s_poll_rate) {
   19ca2:	6a03      	ldr	r3, [r0, #32]
   19ca4:	b993      	cbnz	r3, 19ccc <sensor_mgr_insert+0x2c>
        SLIST_FOREACH(cursor, &sensor_mgr.mgr_sensor_list, s_next) {
   19ca6:	4b15      	ldr	r3, [pc, #84]	; (19cfc <sensor_mgr_insert+0x5c>)
   19ca8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    prev = cursor = NULL;
   19caa:	2100      	movs	r1, #0
        SLIST_FOREACH(cursor, &sensor_mgr.mgr_sensor_list, s_next) {
   19cac:	e002      	b.n	19cb4 <sensor_mgr_insert+0x14>
            prev = cursor;
   19cae:	4619      	mov	r1, r3
        SLIST_FOREACH(cursor, &sensor_mgr.mgr_sensor_list, s_next) {
   19cb0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
   19cb4:	2b00      	cmp	r3, #0
   19cb6:	d1fa      	bne.n	19cae <sensor_mgr_insert+0xe>

        prev = cursor;
    }

insert:
    if (prev == NULL) {
   19cb8:	b1c9      	cbz	r1, 19cee <sensor_mgr_insert+0x4e>
        SLIST_INSERT_HEAD(&sensor_mgr.mgr_sensor_list, sensor, s_next);
    } else {
        SLIST_INSERT_AFTER(prev, sensor, s_next);
   19cba:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
   19cbe:	f8c0 3080 	str.w	r3, [r0, #128]	; 0x80
   19cc2:	f8c1 0080 	str.w	r0, [r1, #128]	; 0x80
    }
}
   19cc6:	f85d 4b04 	ldr.w	r4, [sp], #4
   19cca:	4770      	bx	lr
    SLIST_FOREACH(cursor, &sensor_mgr.mgr_sensor_list, s_next) {
   19ccc:	4b0b      	ldr	r3, [pc, #44]	; (19cfc <sensor_mgr_insert+0x5c>)
   19cce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    prev = cursor = NULL;
   19cd0:	2100      	movs	r1, #0
    SLIST_FOREACH(cursor, &sensor_mgr.mgr_sensor_list, s_next) {
   19cd2:	2b00      	cmp	r3, #0
   19cd4:	d0f0      	beq.n	19cb8 <sensor_mgr_insert+0x18>
        if (!cursor->s_poll_rate) {
   19cd6:	6a1a      	ldr	r2, [r3, #32]
   19cd8:	2a00      	cmp	r2, #0
   19cda:	d0ed      	beq.n	19cb8 <sensor_mgr_insert+0x18>
        if (OS_TIME_TICK_LT(sensor->s_next_run, cursor->s_next_run)) {
   19cdc:	6a42      	ldr	r2, [r0, #36]	; 0x24
   19cde:	6a5c      	ldr	r4, [r3, #36]	; 0x24
   19ce0:	1b12      	subs	r2, r2, r4
   19ce2:	2a00      	cmp	r2, #0
   19ce4:	dbe8      	blt.n	19cb8 <sensor_mgr_insert+0x18>
        prev = cursor;
   19ce6:	4619      	mov	r1, r3
    SLIST_FOREACH(cursor, &sensor_mgr.mgr_sensor_list, s_next) {
   19ce8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
   19cec:	e7f1      	b.n	19cd2 <sensor_mgr_insert+0x32>
        SLIST_INSERT_HEAD(&sensor_mgr.mgr_sensor_list, sensor, s_next);
   19cee:	4b03      	ldr	r3, [pc, #12]	; (19cfc <sensor_mgr_insert+0x5c>)
   19cf0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   19cf2:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
   19cf6:	6318      	str	r0, [r3, #48]	; 0x30
   19cf8:	e7e5      	b.n	19cc6 <sensor_mgr_insert+0x26>
   19cfa:	bf00      	nop
   19cfc:	20009e90 	.word	0x20009e90

00019d00 <sensor_type_traits_empty>:
}

static uint8_t
sensor_type_traits_empty(struct sensor *sensor)
{
    return SLIST_EMPTY(&sensor->s_type_traits_list);
   19d00:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
}
   19d02:	fab0 f080 	clz	r0, r0
   19d06:	0940      	lsrs	r0, r0, #5
   19d08:	4770      	bx	lr
	...

00019d0c <sensor_mgr_evq_set>:
}

static void
sensor_mgr_evq_set(struct os_eventq *evq)
{
    sensor_mgr.mgr_eventq = evq;
   19d0c:	4b01      	ldr	r3, [pc, #4]	; (19d14 <sensor_mgr_evq_set+0x8>)
   19d0e:	62d8      	str	r0, [r3, #44]	; 0x2c
}
   19d10:	4770      	bx	lr
   19d12:	bf00      	nop
   19d14:	20009e90 	.word	0x20009e90

00019d18 <sensor_mgr_match_bytype>:
 *
 * @return 1 if matches, 0 if it doesn't match.
 */
int
sensor_mgr_match_bytype(struct sensor *sensor, void *arg)
{
   19d18:	e92d 0830 	stmdb	sp!, {r4, r5, fp}
     * sensor, and type is the bitmask we're searching for. We also look at
     * the mask as the driver might be configured to work in a mode where only
     * some of the sensors are supported but not all. Compare the three,
     * and if there is a match, return 1. If it is not supported, return 0.
     */
    return (*type & sensor->s_types & sensor->s_mask) ? 1 : 0;
   19d1c:	e9d1 2300 	ldrd	r2, r3, [r1]
   19d20:	e9d0 4504 	ldrd	r4, r5, [r0, #16]
   19d24:	ea02 0b04 	and.w	fp, r2, r4
   19d28:	ea03 0c05 	and.w	ip, r3, r5
   19d2c:	e9d0 0106 	ldrd	r0, r1, [r0, #24]
   19d30:	ea0b 0200 	and.w	r2, fp, r0
   19d34:	ea0c 0301 	and.w	r3, ip, r1
   19d38:	4313      	orrs	r3, r2
}
   19d3a:	bf14      	ite	ne
   19d3c:	2001      	movne	r0, #1
   19d3e:	2000      	moveq	r0, #0
   19d40:	e8bd 0830 	ldmia.w	sp!, {r4, r5, fp}
   19d44:	4770      	bx	lr

00019d46 <sensor_read_data_func>:
}

static int
sensor_read_data_func(struct sensor *sensor, void *arg, void *data,
                      sensor_type_t type)
{
   19d46:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   19d4a:	b083      	sub	sp, #12
   19d4c:	4605      	mov	r5, r0
   19d4e:	4689      	mov	r9, r1
   19d50:	4690      	mov	r8, r2
   19d52:	e9dd 670a 	ldrd	r6, r7, [sp, #40]	; 0x28
    struct sensor_listener *listener;
    struct sensor_read_ctx *ctx;

    ctx = (struct sensor_read_ctx *) arg;

    if ((uint8_t)(uintptr_t)(ctx->user_arg) != SENSOR_IGN_LISTENER) {
   19d56:	790b      	ldrb	r3, [r1, #4]
   19d58:	2b01      	cmp	r3, #1
   19d5a:	d013      	beq.n	19d84 <sensor_read_data_func+0x3e>
        /* Notify all listeners first */
        SLIST_FOREACH(listener, &sensor->s_listener_list, sl_next) {
   19d5c:	6ec4      	ldr	r4, [r0, #108]	; 0x6c
   19d5e:	e000      	b.n	19d62 <sensor_read_data_func+0x1c>
   19d60:	6924      	ldr	r4, [r4, #16]
   19d62:	b17c      	cbz	r4, 19d84 <sensor_read_data_func+0x3e>
            if (listener->sl_sensor_type & type) {
   19d64:	e9d4 0100 	ldrd	r0, r1, [r4]
   19d68:	ea00 0206 	and.w	r2, r0, r6
   19d6c:	ea01 0307 	and.w	r3, r1, r7
   19d70:	4313      	orrs	r3, r2
   19d72:	d0f5      	beq.n	19d60 <sensor_read_data_func+0x1a>
                listener->sl_func(sensor, listener->sl_arg, data, type);
   19d74:	68a3      	ldr	r3, [r4, #8]
   19d76:	68e1      	ldr	r1, [r4, #12]
   19d78:	e9cd 6700 	strd	r6, r7, [sp]
   19d7c:	4642      	mov	r2, r8
   19d7e:	4628      	mov	r0, r5
   19d80:	4798      	blx	r3
   19d82:	e7ed      	b.n	19d60 <sensor_read_data_func+0x1a>
            }
        }
    }

    /* Call data function */
    if (ctx->user_func != NULL) {
   19d84:	f8d9 3000 	ldr.w	r3, [r9]
   19d88:	b14b      	cbz	r3, 19d9e <sensor_read_data_func+0x58>
        return (ctx->user_func(sensor, ctx->user_arg, data, type));
   19d8a:	f8d9 1004 	ldr.w	r1, [r9, #4]
   19d8e:	e9cd 6700 	strd	r6, r7, [sp]
   19d92:	4642      	mov	r2, r8
   19d94:	4628      	mov	r0, r5
   19d96:	4798      	blx	r3
    }

    return (0);
}
   19d98:	b003      	add	sp, #12
   19d9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    return (0);
   19d9e:	2000      	movs	r0, #0
   19da0:	e7fa      	b.n	19d98 <sensor_read_data_func+0x52>
	...

00019da4 <sensor_base_ts_update_event>:
{
   19da4:	b530      	push	{r4, r5, lr}
   19da6:	b087      	sub	sp, #28
    ticks = os_time_get();
   19da8:	f7fe fe30 	bl	18a0c <os_time_get>
   19dac:	4604      	mov	r4, r0
    rc = os_gettimeofday(&ostv, &ostz);
   19dae:	a901      	add	r1, sp, #4
   19db0:	a802      	add	r0, sp, #8
   19db2:	f7fe fe65 	bl	18a80 <os_gettimeofday>
    if (rc) {
   19db6:	b138      	cbz	r0, 19dc8 <sensor_base_ts_update_event+0x24>
        ticks += OS_TICKS_PER_SEC * 600;
   19db8:	f504 3496 	add.w	r4, r4, #76800	; 0x12c00
    os_callout_reset(&st_up_osco, ticks);
   19dbc:	4621      	mov	r1, r4
   19dbe:	4809      	ldr	r0, [pc, #36]	; (19de4 <sensor_base_ts_update_event+0x40>)
   19dc0:	f7fd fdac 	bl	1791c <os_callout_reset>
}
   19dc4:	b007      	add	sp, #28
   19dc6:	bd30      	pop	{r4, r5, pc}
    ticks += OS_TICKS_PER_SEC * 2000;
   19dc8:	f504 347a 	add.w	r4, r4, #256000	; 0x3e800
    sensor_base_ts.st_ostv = ostv;
   19dcc:	4d06      	ldr	r5, [pc, #24]	; (19de8 <sensor_base_ts_update_event+0x44>)
   19dce:	ab06      	add	r3, sp, #24
   19dd0:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
   19dd4:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
    sensor_base_ts.st_ostz = ostz;
   19dd8:	9b01      	ldr	r3, [sp, #4]
   19dda:	612b      	str	r3, [r5, #16]
    sensor_base_ts.st_cputime = os_cputime_get32();
   19ddc:	f7fd fe28 	bl	17a30 <os_cputime_get32>
   19de0:	6168      	str	r0, [r5, #20]
   19de2:	e7eb      	b.n	19dbc <sensor_base_ts_update_event+0x18>
   19de4:	20009ec4 	.word	0x20009ec4
   19de8:	20009ee8 	.word	0x20009ee8

00019dec <sensor_up_timestamp>:
    assert(rc == 0);
}

static void
sensor_up_timestamp(struct sensor *sensor)
{
   19dec:	e92d 4830 	stmdb	sp!, {r4, r5, fp, lr}
   19df0:	4604      	mov	r4, r0
    uint32_t curr_ts_ticks;
    uint32_t ts;

    curr_ts_ticks = os_cputime_get32();
   19df2:	f7fd fe1d 	bl	17a30 <os_cputime_get32>

    ts = os_cputime_ticks_to_usecs(curr_ts_ticks -
   19df6:	4a0e      	ldr	r2, [pc, #56]	; (19e30 <sensor_up_timestamp+0x44>)
   19df8:	6955      	ldr	r5, [r2, #20]
   19dfa:	1b43      	subs	r3, r0, r5
             sensor_base_ts.st_cputime);

    /* Updating cputime */
    sensor_base_ts.st_cputime = sensor->s_sts.st_cputime = curr_ts_ticks;
   19dfc:	6460      	str	r0, [r4, #68]	; 0x44
   19dfe:	6150      	str	r0, [r2, #20]

    /* Updating seconds */
    sensor_base_ts.st_ostv.tv_sec  = sensor_base_ts.st_ostv.tv_sec + (ts +
   19e00:	e9d2 0100 	ldrd	r0, r1, [r2]
        sensor_base_ts.st_ostv.tv_usec)/1000000;
   19e04:	6895      	ldr	r5, [r2, #8]
    sensor_base_ts.st_ostv.tv_sec  = sensor_base_ts.st_ostv.tv_sec + (ts +
   19e06:	441d      	add	r5, r3
        sensor_base_ts.st_ostv.tv_usec)/1000000;
   19e08:	4b0a      	ldr	r3, [pc, #40]	; (19e34 <sensor_up_timestamp+0x48>)
   19e0a:	fba3 c305 	umull	ip, r3, r3, r5
   19e0e:	0c9b      	lsrs	r3, r3, #18
    sensor_base_ts.st_ostv.tv_sec  = sensor_base_ts.st_ostv.tv_sec + (ts +
   19e10:	eb10 0b03 	adds.w	fp, r0, r3
   19e14:	f141 0c00 	adc.w	ip, r1, #0
   19e18:	e9c2 bc00 	strd	fp, ip, [r2]
    sensor->s_sts.st_ostv.tv_sec = sensor_base_ts.st_ostv.tv_sec;
   19e1c:	e9c4 bc0c 	strd	fp, ip, [r4, #48]	; 0x30

    /* Updating Micro seconds */
    sensor_base_ts.st_ostv.tv_usec  =
        (sensor_base_ts.st_ostv.tv_usec + ts)%1000000;
   19e20:	4905      	ldr	r1, [pc, #20]	; (19e38 <sensor_up_timestamp+0x4c>)
   19e22:	fb01 5113 	mls	r1, r1, r3, r5
    sensor_base_ts.st_ostv.tv_usec  =
   19e26:	6091      	str	r1, [r2, #8]
    sensor->s_sts.st_ostv.tv_usec = sensor_base_ts.st_ostv.tv_usec;
   19e28:	63a1      	str	r1, [r4, #56]	; 0x38

}
   19e2a:	e8bd 8830 	ldmia.w	sp!, {r4, r5, fp, pc}
   19e2e:	bf00      	nop
   19e30:	20009ee8 	.word	0x20009ee8
   19e34:	431bde83 	.word	0x431bde83
   19e38:	000f4240 	.word	0x000f4240

00019e3c <sensor_mgr_lock>:
{
   19e3c:	b508      	push	{r3, lr}
    rc = os_mutex_pend(&sensor_mgr.mgr_lock, OS_TIMEOUT_NEVER);
   19e3e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
   19e42:	4804      	ldr	r0, [pc, #16]	; (19e54 <sensor_mgr_lock+0x18>)
   19e44:	f7fe fa5c 	bl	18300 <os_mutex_pend>
    if (rc == 0 || rc == OS_NOT_STARTED) {
   19e48:	b108      	cbz	r0, 19e4e <sensor_mgr_lock+0x12>
   19e4a:	2809      	cmp	r0, #9
   19e4c:	d000      	beq.n	19e50 <sensor_mgr_lock+0x14>
}
   19e4e:	bd08      	pop	{r3, pc}
        return (0);
   19e50:	2000      	movs	r0, #0
   19e52:	e7fc      	b.n	19e4e <sensor_mgr_lock+0x12>
   19e54:	20009e90 	.word	0x20009e90

00019e58 <sensor_mgr_unlock>:
{
   19e58:	b508      	push	{r3, lr}
    (void) os_mutex_release(&sensor_mgr.mgr_lock);
   19e5a:	4802      	ldr	r0, [pc, #8]	; (19e64 <sensor_mgr_unlock+0xc>)
   19e5c:	f7fe f9f4 	bl	18248 <os_mutex_release>
}
   19e60:	bd08      	pop	{r3, pc}
   19e62:	bf00      	nop
   19e64:	20009e90 	.word	0x20009e90

00019e68 <sensor_mgr_evq_get>:
}
   19e68:	4b01      	ldr	r3, [pc, #4]	; (19e70 <sensor_mgr_evq_get+0x8>)
   19e6a:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
   19e6c:	4770      	bx	lr
   19e6e:	bf00      	nop
   19e70:	20009e90 	.word	0x20009e90

00019e74 <sensor_mgr_init>:
{
   19e74:	b570      	push	{r4, r5, r6, lr}
   19e76:	b088      	sub	sp, #32
    sensor_mgr_evq_set(os_eventq_dflt_get());
   19e78:	f7fd ff68 	bl	17d4c <os_eventq_dflt_get>
   19e7c:	f7ff ff46 	bl	19d0c <sensor_mgr_evq_set>
    rc = os_mempool_init(&sensor_notify_evt_pool,
   19e80:	4b1c      	ldr	r3, [pc, #112]	; (19ef4 <sensor_mgr_init+0x80>)
   19e82:	9300      	str	r3, [sp, #0]
   19e84:	4b1c      	ldr	r3, [pc, #112]	; (19ef8 <sensor_mgr_init+0x84>)
   19e86:	2218      	movs	r2, #24
   19e88:	2105      	movs	r1, #5
   19e8a:	481c      	ldr	r0, [pc, #112]	; (19efc <sensor_mgr_init+0x88>)
   19e8c:	f7fe f8e8 	bl	18060 <os_mempool_init>
    assert(rc == OS_OK);
   19e90:	bb50      	cbnz	r0, 19ee8 <sensor_mgr_init+0x74>
    os_callout_init(&sensor_mgr.mgr_wakeup_callout, sensor_mgr_evq_get(),
   19e92:	f7ff ffe9 	bl	19e68 <sensor_mgr_evq_get>
   19e96:	4e1a      	ldr	r6, [pc, #104]	; (19f00 <sensor_mgr_init+0x8c>)
   19e98:	2300      	movs	r3, #0
   19e9a:	4a1a      	ldr	r2, [pc, #104]	; (19f04 <sensor_mgr_init+0x90>)
   19e9c:	4601      	mov	r1, r0
   19e9e:	4630      	mov	r0, r6
   19ea0:	f7fd fd10 	bl	178c4 <os_callout_init>
    os_gettimeofday(&ostv, &ostz);
   19ea4:	ad04      	add	r5, sp, #16
   19ea6:	a903      	add	r1, sp, #12
   19ea8:	4628      	mov	r0, r5
   19eaa:	f7fe fde9 	bl	18a80 <os_gettimeofday>
    sensor_base_ts.st_ostv = ostv;
   19eae:	4c16      	ldr	r4, [pc, #88]	; (19f08 <sensor_mgr_init+0x94>)
   19eb0:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
   19eb4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
    sensor_base_ts.st_ostz = ostz;
   19eb8:	9b03      	ldr	r3, [sp, #12]
   19eba:	6123      	str	r3, [r4, #16]
    sensor_base_ts.st_cputime = os_cputime_get32();
   19ebc:	f7fd fdb8 	bl	17a30 <os_cputime_get32>
   19ec0:	6160      	str	r0, [r4, #20]
    os_callout_init(&st_up_osco, sensor_mgr_evq_get(),
   19ec2:	f7ff ffd1 	bl	19e68 <sensor_mgr_evq_get>
   19ec6:	4c11      	ldr	r4, [pc, #68]	; (19f0c <sensor_mgr_init+0x98>)
   19ec8:	2300      	movs	r3, #0
   19eca:	4a11      	ldr	r2, [pc, #68]	; (19f10 <sensor_mgr_init+0x9c>)
   19ecc:	4601      	mov	r1, r0
   19ece:	4620      	mov	r0, r4
   19ed0:	f7fd fcf8 	bl	178c4 <os_callout_init>
    os_callout_reset(&st_up_osco, OS_TICKS_PER_SEC);
   19ed4:	2180      	movs	r1, #128	; 0x80
   19ed6:	4620      	mov	r0, r4
   19ed8:	f7fd fd20 	bl	1791c <os_callout_reset>
    os_mutex_init(&sensor_mgr.mgr_lock);
   19edc:	f1a6 000c 	sub.w	r0, r6, #12
   19ee0:	f7fe f9a8 	bl	18234 <os_mutex_init>
}
   19ee4:	b008      	add	sp, #32
   19ee6:	bd70      	pop	{r4, r5, r6, pc}
    assert(rc == OS_OK);
   19ee8:	2300      	movs	r3, #0
   19eea:	461a      	mov	r2, r3
   19eec:	4619      	mov	r1, r3
   19eee:	4618      	mov	r0, r3
   19ef0:	f7fd fb6e 	bl	175d0 <__assert_func>
   19ef4:	0001f884 	.word	0x0001f884
   19ef8:	2000998c 	.word	0x2000998c
   19efc:	20009a04 	.word	0x20009a04
   19f00:	20009e9c 	.word	0x20009e9c
   19f04:	0001a0e1 	.word	0x0001a0e1
   19f08:	20009ee8 	.word	0x20009ee8
   19f0c:	20009ec4 	.word	0x20009ec4
   19f10:	00019da5 	.word	0x00019da5

00019f14 <sensor_pkg_init>:
{
   19f14:	b508      	push	{r3, lr}
    sensor_mgr_init();
   19f16:	f7ff ffad 	bl	19e74 <sensor_mgr_init>
}
   19f1a:	bd08      	pop	{r3, pc}

00019f1c <sensor_lock>:
{
   19f1c:	b508      	push	{r3, lr}
    rc = os_mutex_pend(&sensor->s_lock, OS_TIMEOUT_NEVER);
   19f1e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
   19f22:	3004      	adds	r0, #4
   19f24:	f7fe f9ec 	bl	18300 <os_mutex_pend>
    if (rc == 0 || rc == OS_NOT_STARTED) {
   19f28:	b108      	cbz	r0, 19f2e <sensor_lock+0x12>
   19f2a:	2809      	cmp	r0, #9
   19f2c:	d000      	beq.n	19f30 <sensor_lock+0x14>
}
   19f2e:	bd08      	pop	{r3, pc}
        return (0);
   19f30:	2000      	movs	r0, #0
   19f32:	e7fc      	b.n	19f2e <sensor_lock+0x12>

00019f34 <sensor_unlock>:
{
   19f34:	b508      	push	{r3, lr}
    os_mutex_release(&sensor->s_lock);
   19f36:	3004      	adds	r0, #4
   19f38:	f7fe f986 	bl	18248 <os_mutex_release>
}
   19f3c:	bd08      	pop	{r3, pc}

00019f3e <sensor_update_nextrun>:
{
   19f3e:	b530      	push	{r4, r5, lr}
   19f40:	b083      	sub	sp, #12
   19f42:	4604      	mov	r4, r0
   19f44:	460d      	mov	r5, r1
    os_time_ms_to_ticks(sensor->s_poll_rate, &sensor_ticks);
   19f46:	a901      	add	r1, sp, #4
   19f48:	6a00      	ldr	r0, [r0, #32]
   19f4a:	f7fe fdb5 	bl	18ab8 <os_time_ms_to_ticks>
    sensor_lock(sensor);
   19f4e:	4620      	mov	r0, r4
   19f50:	f7ff ffe4 	bl	19f1c <sensor_lock>
    sensor_mgr_remove(sensor);
   19f54:	4620      	mov	r0, r4
   19f56:	f7ff fe8f 	bl	19c78 <sensor_mgr_remove>
    sensor->s_next_run = sensor_ticks + now;
   19f5a:	9b01      	ldr	r3, [sp, #4]
   19f5c:	441d      	add	r5, r3
   19f5e:	6265      	str	r5, [r4, #36]	; 0x24
    sensor_mgr_insert(sensor);
   19f60:	4620      	mov	r0, r4
   19f62:	f7ff fe9d 	bl	19ca0 <sensor_mgr_insert>
    sensor_unlock(sensor);
   19f66:	4620      	mov	r0, r4
   19f68:	f7ff ffe4 	bl	19f34 <sensor_unlock>
}
   19f6c:	b003      	add	sp, #12
   19f6e:	bd30      	pop	{r4, r5, pc}

00019f70 <sensor_calc_nextrun_delta>:
{
   19f70:	b538      	push	{r3, r4, r5, lr}
   19f72:	4605      	mov	r5, r0
   19f74:	460c      	mov	r4, r1
    sensor_lock(sensor);
   19f76:	f7ff ffd1 	bl	19f1c <sensor_lock>
    delta = (int32_t)(sensor->s_next_run - now);
   19f7a:	6a69      	ldr	r1, [r5, #36]	; 0x24
    if (delta < 0) {
   19f7c:	1b0c      	subs	r4, r1, r4
   19f7e:	d404      	bmi.n	19f8a <sensor_calc_nextrun_delta+0x1a>
    sensor_unlock(sensor);
   19f80:	4628      	mov	r0, r5
   19f82:	f7ff ffd7 	bl	19f34 <sensor_unlock>
}
   19f86:	4620      	mov	r0, r4
   19f88:	bd38      	pop	{r3, r4, r5, pc}
        sensor_ticks = 0;
   19f8a:	2400      	movs	r4, #0
   19f8c:	e7f8      	b.n	19f80 <sensor_calc_nextrun_delta+0x10>
	...

00019f90 <sensor_find_min_nextrun_sensor>:
{
   19f90:	b570      	push	{r4, r5, r6, lr}
   19f92:	4606      	mov	r6, r0
   19f94:	460d      	mov	r5, r1
    sensor_mgr_lock();
   19f96:	f7ff ff51 	bl	19e3c <sensor_mgr_lock>
    head = SLIST_FIRST(&sensor_mgr.mgr_sensor_list);
   19f9a:	4b05      	ldr	r3, [pc, #20]	; (19fb0 <sensor_find_min_nextrun_sensor+0x20>)
   19f9c:	6b1c      	ldr	r4, [r3, #48]	; 0x30
    *min_nextrun = sensor_calc_nextrun_delta(head, now);
   19f9e:	4631      	mov	r1, r6
   19fa0:	4620      	mov	r0, r4
   19fa2:	f7ff ffe5 	bl	19f70 <sensor_calc_nextrun_delta>
   19fa6:	6028      	str	r0, [r5, #0]
    sensor_mgr_unlock();
   19fa8:	f7ff ff56 	bl	19e58 <sensor_mgr_unlock>
}
   19fac:	4620      	mov	r0, r4
   19fae:	bd70      	pop	{r4, r5, r6, pc}
   19fb0:	20009e90 	.word	0x20009e90

00019fb4 <sensor_mgr_register>:
{
   19fb4:	b538      	push	{r3, r4, r5, lr}
   19fb6:	4605      	mov	r5, r0
    rc = sensor_mgr_lock();
   19fb8:	f7ff ff40 	bl	19e3c <sensor_mgr_lock>
    if (rc != 0) {
   19fbc:	4604      	mov	r4, r0
   19fbe:	b108      	cbz	r0, 19fc4 <sensor_mgr_register+0x10>
}
   19fc0:	4620      	mov	r0, r4
   19fc2:	bd38      	pop	{r3, r4, r5, pc}
    rc = sensor_lock(sensor);
   19fc4:	4628      	mov	r0, r5
   19fc6:	f7ff ffa9 	bl	19f1c <sensor_lock>
    if (rc != 0) {
   19fca:	4604      	mov	r4, r0
   19fcc:	2800      	cmp	r0, #0
   19fce:	d1f7      	bne.n	19fc0 <sensor_mgr_register+0xc>
    sensor_mgr_insert(sensor);
   19fd0:	4628      	mov	r0, r5
   19fd2:	f7ff fe65 	bl	19ca0 <sensor_mgr_insert>
    sensor_unlock(sensor);
   19fd6:	4628      	mov	r0, r5
   19fd8:	f7ff ffac 	bl	19f34 <sensor_unlock>
    sensor_mgr_unlock();
   19fdc:	f7ff ff3c 	bl	19e58 <sensor_mgr_unlock>
    return (0);
   19fe0:	e7ee      	b.n	19fc0 <sensor_mgr_register+0xc>

00019fe2 <sensor_init>:
{
   19fe2:	b538      	push	{r3, r4, r5, lr}
   19fe4:	4604      	mov	r4, r0
   19fe6:	460d      	mov	r5, r1
    memset(sensor, 0, sizeof(*sensor));
   19fe8:	2288      	movs	r2, #136	; 0x88
   19fea:	2100      	movs	r1, #0
   19fec:	f7fe fef3 	bl	18dd6 <memset>
    rc = os_mutex_init(&sensor->s_lock);
   19ff0:	1d20      	adds	r0, r4, #4
   19ff2:	f7fe f91f 	bl	18234 <os_mutex_init>
    if (rc != 0) {
   19ff6:	4603      	mov	r3, r0
   19ff8:	b900      	cbnz	r0, 19ffc <sensor_init+0x1a>
    sensor->s_dev = dev;
   19ffa:	6025      	str	r5, [r4, #0]
}
   19ffc:	4618      	mov	r0, r3
   19ffe:	bd38      	pop	{r3, r4, r5, pc}

0001a000 <sensor_read>:
 * @return 0 on success, non-zero on failure.
 */
int
sensor_read(struct sensor *sensor, sensor_type_t type,
        sensor_data_func_t data_func, void *arg, uint32_t timeout)
{
   1a000:	b530      	push	{r4, r5, lr}
   1a002:	b089      	sub	sp, #36	; 0x24
   1a004:	4604      	mov	r4, r0
   1a006:	e9cd 2304 	strd	r2, r3, [sp, #16]
    struct sensor_read_ctx src;
    int rc;

    rc = sensor_lock(sensor);
   1a00a:	f7ff ff87 	bl	19f1c <sensor_lock>
    if (rc) {
   1a00e:	4605      	mov	r5, r0
   1a010:	b9f8      	cbnz	r0, 1a052 <sensor_read+0x52>
        goto err;
    }

    src.user_func = data_func;
   1a012:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1a014:	9306      	str	r3, [sp, #24]
    src.user_arg = arg;
   1a016:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1a018:	9307      	str	r3, [sp, #28]

    if (!sensor_mgr_match_bytype(sensor, (void *)&type)) {
   1a01a:	a904      	add	r1, sp, #16
   1a01c:	4620      	mov	r0, r4
   1a01e:	f7ff fe7b 	bl	19d18 <sensor_mgr_match_bytype>
   1a022:	b1e0      	cbz	r0, 1a05e <sensor_read+0x5e>
        rc = SYS_ENOENT;
        goto err;
    }

    sensor_up_timestamp(sensor);
   1a024:	4620      	mov	r0, r4
   1a026:	f7ff fee1 	bl	19dec <sensor_up_timestamp>

    rc = sensor->s_funcs->sd_read(sensor, type, sensor_read_data_func, &src,
   1a02a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   1a02c:	6819      	ldr	r1, [r3, #0]
   1a02e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1a030:	9302      	str	r3, [sp, #8]
   1a032:	ab06      	add	r3, sp, #24
   1a034:	9301      	str	r3, [sp, #4]
   1a036:	4b0b      	ldr	r3, [pc, #44]	; (1a064 <sensor_read+0x64>)
   1a038:	9300      	str	r3, [sp, #0]
   1a03a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   1a03e:	4620      	mov	r0, r4
   1a040:	4788      	blx	r1
                                  timeout);
    if (rc) {
   1a042:	4605      	mov	r5, r0
   1a044:	b128      	cbz	r0, 1a052 <sensor_read+0x52>
        if (sensor->s_err_fn != NULL) {
   1a046:	6f23      	ldr	r3, [r4, #112]	; 0x70
   1a048:	b11b      	cbz	r3, 1a052 <sensor_read+0x52>
            sensor->s_err_fn(sensor, sensor->s_err_arg, rc);
   1a04a:	4602      	mov	r2, r0
   1a04c:	6f61      	ldr	r1, [r4, #116]	; 0x74
   1a04e:	4620      	mov	r0, r4
   1a050:	4798      	blx	r3
        }
        goto err;
    }

err:
    sensor_unlock(sensor);
   1a052:	4620      	mov	r0, r4
   1a054:	f7ff ff6e 	bl	19f34 <sensor_unlock>
    return (rc);
}
   1a058:	4628      	mov	r0, r5
   1a05a:	b009      	add	sp, #36	; 0x24
   1a05c:	bd30      	pop	{r4, r5, pc}
        rc = SYS_ENOENT;
   1a05e:	f06f 0503 	mvn.w	r5, #3
   1a062:	e7f6      	b.n	1a052 <sensor_read+0x52>
   1a064:	00019d47 	.word	0x00019d47

0001a068 <sensor_mgr_poll_bytype>:
{
   1a068:	b5f0      	push	{r4, r5, r6, r7, lr}
   1a06a:	b085      	sub	sp, #20
   1a06c:	4616      	mov	r6, r2
   1a06e:	461f      	mov	r7, r3
   1a070:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    if (!stt || !stt->stt_polls_left) {
   1a072:	b10c      	cbz	r4, 1a078 <sensor_mgr_poll_bytype+0x10>
   1a074:	8aa3      	ldrh	r3, [r4, #20]
   1a076:	b9cb      	cbnz	r3, 1a0ac <sensor_mgr_poll_bytype+0x44>
   1a078:	4632      	mov	r2, r6
   1a07a:	463b      	mov	r3, r7
   1a07c:	4605      	mov	r5, r0
        sensor_read(sensor, type, NULL, NULL, OS_TIMEOUT_NEVER);
   1a07e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
   1a082:	9102      	str	r1, [sp, #8]
   1a084:	2100      	movs	r1, #0
   1a086:	9101      	str	r1, [sp, #4]
   1a088:	9100      	str	r1, [sp, #0]
   1a08a:	f7ff ffb9 	bl	1a000 <sensor_read>
        sensor_lock(sensor);
   1a08e:	4628      	mov	r0, r5
   1a090:	f7ff ff44 	bl	19f1c <sensor_lock>
        if (stt) {
   1a094:	b12c      	cbz	r4, 1a0a2 <sensor_mgr_poll_bytype+0x3a>
            if (!stt->stt_polls_left && stt->stt_poll_n) {
   1a096:	8aa3      	ldrh	r3, [r4, #20]
   1a098:	b91b      	cbnz	r3, 1a0a2 <sensor_mgr_poll_bytype+0x3a>
   1a09a:	8a63      	ldrh	r3, [r4, #18]
   1a09c:	b10b      	cbz	r3, 1a0a2 <sensor_mgr_poll_bytype+0x3a>
                stt->stt_polls_left--;
   1a09e:	3b01      	subs	r3, #1
   1a0a0:	82a3      	strh	r3, [r4, #20]
        sensor_unlock(sensor);
   1a0a2:	4628      	mov	r0, r5
   1a0a4:	f7ff ff46 	bl	19f34 <sensor_unlock>
}
   1a0a8:	b005      	add	sp, #20
   1a0aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
        stt->stt_polls_left--;
   1a0ac:	3b01      	subs	r3, #1
   1a0ae:	82a3      	strh	r3, [r4, #20]
}
   1a0b0:	e7fa      	b.n	1a0a8 <sensor_mgr_poll_bytype+0x40>

0001a0b2 <sensor_poll_per_type_trait>:
{
   1a0b2:	b570      	push	{r4, r5, r6, lr}
   1a0b4:	b082      	sub	sp, #8
   1a0b6:	4605      	mov	r5, r0
   1a0b8:	460e      	mov	r6, r1
    sensor_lock(sensor);
   1a0ba:	f7ff ff2f 	bl	19f1c <sensor_lock>
    SLIST_FOREACH(stt, &sensor->s_type_traits_list, stt_next) {
   1a0be:	6fec      	ldr	r4, [r5, #124]	; 0x7c
   1a0c0:	e007      	b.n	1a0d2 <sensor_poll_per_type_trait+0x20>
        sensor_mgr_poll_bytype(sensor, stt->stt_sensor_type, stt,
   1a0c2:	e9d4 2300 	ldrd	r2, r3, [r4]
   1a0c6:	9601      	str	r6, [sp, #4]
   1a0c8:	9400      	str	r4, [sp, #0]
   1a0ca:	4628      	mov	r0, r5
   1a0cc:	f7ff ffcc 	bl	1a068 <sensor_mgr_poll_bytype>
    SLIST_FOREACH(stt, &sensor->s_type_traits_list, stt_next) {
   1a0d0:	6a24      	ldr	r4, [r4, #32]
   1a0d2:	2c00      	cmp	r4, #0
   1a0d4:	d1f5      	bne.n	1a0c2 <sensor_poll_per_type_trait+0x10>
    sensor_unlock(sensor);
   1a0d6:	4628      	mov	r0, r5
   1a0d8:	f7ff ff2c 	bl	19f34 <sensor_unlock>
}
   1a0dc:	b002      	add	sp, #8
   1a0de:	bd70      	pop	{r4, r5, r6, pc}

0001a0e0 <sensor_mgr_wakeup_event>:
{
   1a0e0:	b570      	push	{r4, r5, r6, lr}
   1a0e2:	b084      	sub	sp, #16
    now = os_time_get();
   1a0e4:	f7fe fc92 	bl	18a0c <os_time_get>
   1a0e8:	4605      	mov	r5, r0
    sensor_mgr_lock();
   1a0ea:	f7ff fea7 	bl	19e3c <sensor_mgr_lock>
   1a0ee:	e012      	b.n	1a116 <sensor_mgr_wakeup_event+0x36>
            sensor_unlock(cursor);
   1a0f0:	4620      	mov	r0, r4
   1a0f2:	f7ff ff1f 	bl	19f34 <sensor_unlock>
            sensor_mgr_unlock();
   1a0f6:	f7ff feaf 	bl	19e58 <sensor_mgr_unlock>
}
   1a0fa:	b004      	add	sp, #16
   1a0fc:	bd70      	pop	{r4, r5, r6, pc}
            sensor_poll_per_type_trait(cursor, now, next_wakeup);
   1a0fe:	4632      	mov	r2, r6
   1a100:	4629      	mov	r1, r5
   1a102:	4620      	mov	r0, r4
   1a104:	f7ff ffd5 	bl	1a0b2 <sensor_poll_per_type_trait>
        sensor_update_nextrun(cursor, now);
   1a108:	4629      	mov	r1, r5
   1a10a:	4620      	mov	r0, r4
   1a10c:	f7ff ff17 	bl	19f3e <sensor_update_nextrun>
        sensor_unlock(cursor);
   1a110:	4620      	mov	r0, r4
   1a112:	f7ff ff0f 	bl	19f34 <sensor_unlock>
        cursor = sensor_find_min_nextrun_sensor(now, &next_wakeup);
   1a116:	a903      	add	r1, sp, #12
   1a118:	4628      	mov	r0, r5
   1a11a:	f7ff ff39 	bl	19f90 <sensor_find_min_nextrun_sensor>
   1a11e:	4604      	mov	r4, r0
        sensor_lock(cursor);
   1a120:	f7ff fefc 	bl	19f1c <sensor_lock>
        if (!cursor->s_poll_rate) {
   1a124:	6a23      	ldr	r3, [r4, #32]
   1a126:	2b00      	cmp	r3, #0
   1a128:	d0e2      	beq.n	1a0f0 <sensor_mgr_wakeup_event+0x10>
        if (next_wakeup > 0) {
   1a12a:	9e03      	ldr	r6, [sp, #12]
   1a12c:	b96e      	cbnz	r6, 1a14a <sensor_mgr_wakeup_event+0x6a>
        if (sensor_type_traits_empty(cursor)) {
   1a12e:	4620      	mov	r0, r4
   1a130:	f7ff fde6 	bl	19d00 <sensor_type_traits_empty>
   1a134:	2800      	cmp	r0, #0
   1a136:	d0e2      	beq.n	1a0fe <sensor_mgr_wakeup_event+0x1e>
            sensor_mgr_poll_bytype(cursor, cursor->s_mask, NULL, now);
   1a138:	e9d4 2306 	ldrd	r2, r3, [r4, #24]
   1a13c:	9501      	str	r5, [sp, #4]
   1a13e:	2100      	movs	r1, #0
   1a140:	9100      	str	r1, [sp, #0]
   1a142:	4620      	mov	r0, r4
   1a144:	f7ff ff90 	bl	1a068 <sensor_mgr_poll_bytype>
   1a148:	e7de      	b.n	1a108 <sensor_mgr_wakeup_event+0x28>
    sensor_mgr_unlock();
   1a14a:	f7ff fe85 	bl	19e58 <sensor_mgr_unlock>
    os_callout_reset(&sensor_mgr.mgr_wakeup_callout, next_wakeup);
   1a14e:	9903      	ldr	r1, [sp, #12]
   1a150:	4801      	ldr	r0, [pc, #4]	; (1a158 <sensor_mgr_wakeup_event+0x78>)
   1a152:	f7fd fbe3 	bl	1791c <os_callout_reset>
   1a156:	e7d0      	b.n	1a0fa <sensor_mgr_wakeup_event+0x1a>
   1a158:	20009e9c 	.word	0x20009e9c

0001a15c <init_sensor_coap>:

///////////////////////////////////////////////////////////////////////////////
//  CoAP Functions

///  Init the Sensor CoAP module. Called by sysinit() during startup, defined in pkg.yml.
void init_sensor_coap(void) {
   1a15c:	b508      	push	{r3, lr}
    os_error_t rc = os_sem_init(&oc_sem, 1);  //  Init to 1 token, so only 1 caller will be allowed.
   1a15e:	2101      	movs	r1, #1
   1a160:	4806      	ldr	r0, [pc, #24]	; (1a17c <init_sensor_coap+0x20>)
   1a162:	f7fe faf1 	bl	18748 <os_sem_init>
    assert(rc == OS_OK);
   1a166:	b918      	cbnz	r0, 1a170 <init_sensor_coap+0x14>
    oc_sensor_coap_ready = true;
   1a168:	4b05      	ldr	r3, [pc, #20]	; (1a180 <init_sensor_coap+0x24>)
   1a16a:	2201      	movs	r2, #1
   1a16c:	701a      	strb	r2, [r3, #0]
}
   1a16e:	bd08      	pop	{r3, pc}
    assert(rc == OS_OK);
   1a170:	2300      	movs	r3, #0
   1a172:	461a      	mov	r2, r3
   1a174:	4619      	mov	r1, r3
   1a176:	4618      	mov	r0, r3
   1a178:	f7fd fa2a 	bl	175d0 <__assert_func>
   1a17c:	20009a20 	.word	0x20009a20
   1a180:	20009a28 	.word	0x20009a28

0001a184 <is_sensor_node>:
}

bool is_sensor_node(void) {
    //  Return true if this is a Sensor Node.
    //  This is a Sensor Node if the Hardware ID matches one of the Sensor Node Hardware IDs.
    if (sensor_node_address) { return true; }  //  sensor_node_address is set in sensor_network_init().
   1a184:	4b04      	ldr	r3, [pc, #16]	; (1a198 <is_sensor_node+0x14>)
   1a186:	e9d3 2300 	ldrd	r2, r3, [r3]
   1a18a:	4313      	orrs	r3, r2
   1a18c:	d101      	bne.n	1a192 <is_sensor_node+0xe>
    return false;
   1a18e:	2000      	movs	r0, #0
}
   1a190:	4770      	bx	lr
    if (sensor_node_address) { return true; }  //  sensor_node_address is set in sensor_network_init().
   1a192:	2001      	movs	r0, #1
   1a194:	4770      	bx	lr
   1a196:	bf00      	nop
   1a198:	20009a40 	.word	0x20009a40

0001a19c <get_hardware_id>:
}

/////////////////////////////////////////////////////////
//  Sensor Network Addresses

const uint8_t *get_hardware_id(void) {
   1a19c:	b508      	push	{r3, lr}
    //  Return the Hardware ID, which is unique across all microcontrollers.
    if (hw_id_len == 0) {
   1a19e:	4b16      	ldr	r3, [pc, #88]	; (1a1f8 <get_hardware_id+0x5c>)
   1a1a0:	681b      	ldr	r3, [r3, #0]
   1a1a2:	b10b      	cbz	r3, 1a1a8 <get_hardware_id+0xc>
        assert((unsigned) hw_id_len >= sizeof(hw_id));  //  Hardware ID too short.
        hw_id_len = hal_bsp_hw_id(hw_id, sizeof(hw_id));  assert(hw_id_len > 0);  //  Get the hardware ID.
        console_printf("%shwid ", _net);  console_dump(hw_id, hw_id_len);  console_printf("\n");
    }
    return hw_id;
}
   1a1a4:	4815      	ldr	r0, [pc, #84]	; (1a1fc <get_hardware_id+0x60>)
   1a1a6:	bd08      	pop	{r3, pc}
        hw_id_len = hal_bsp_hw_id_len();     //  Fetch the length, i.e. 12
   1a1a8:	f000 fcee 	bl	1ab88 <hal_bsp_hw_id_len>
   1a1ac:	4b12      	ldr	r3, [pc, #72]	; (1a1f8 <get_hardware_id+0x5c>)
   1a1ae:	6018      	str	r0, [r3, #0]
        assert((unsigned) hw_id_len >= sizeof(hw_id));  //  Hardware ID too short.
   1a1b0:	280b      	cmp	r0, #11
   1a1b2:	d914      	bls.n	1a1de <get_hardware_id+0x42>
        hw_id_len = hal_bsp_hw_id(hw_id, sizeof(hw_id));  assert(hw_id_len > 0);  //  Get the hardware ID.
   1a1b4:	210c      	movs	r1, #12
   1a1b6:	4811      	ldr	r0, [pc, #68]	; (1a1fc <get_hardware_id+0x60>)
   1a1b8:	f000 fce8 	bl	1ab8c <hal_bsp_hw_id>
   1a1bc:	4b0e      	ldr	r3, [pc, #56]	; (1a1f8 <get_hardware_id+0x5c>)
   1a1be:	6018      	str	r0, [r3, #0]
   1a1c0:	2800      	cmp	r0, #0
   1a1c2:	dd12      	ble.n	1a1ea <get_hardware_id+0x4e>
        console_printf("%shwid ", _net);  console_dump(hw_id, hw_id_len);  console_printf("\n");
   1a1c4:	490e      	ldr	r1, [pc, #56]	; (1a200 <get_hardware_id+0x64>)
   1a1c6:	480f      	ldr	r0, [pc, #60]	; (1a204 <get_hardware_id+0x68>)
   1a1c8:	f7fc fb3a 	bl	16840 <console_printf>
   1a1cc:	4b0a      	ldr	r3, [pc, #40]	; (1a1f8 <get_hardware_id+0x5c>)
   1a1ce:	6819      	ldr	r1, [r3, #0]
   1a1d0:	480a      	ldr	r0, [pc, #40]	; (1a1fc <get_hardware_id+0x60>)
   1a1d2:	f7fc fac5 	bl	16760 <console_dump>
   1a1d6:	480c      	ldr	r0, [pc, #48]	; (1a208 <get_hardware_id+0x6c>)
   1a1d8:	f7fc fb32 	bl	16840 <console_printf>
   1a1dc:	e7e2      	b.n	1a1a4 <get_hardware_id+0x8>
        assert((unsigned) hw_id_len >= sizeof(hw_id));  //  Hardware ID too short.
   1a1de:	2300      	movs	r3, #0
   1a1e0:	461a      	mov	r2, r3
   1a1e2:	4619      	mov	r1, r3
   1a1e4:	4618      	mov	r0, r3
   1a1e6:	f7fd f9f3 	bl	175d0 <__assert_func>
        hw_id_len = hal_bsp_hw_id(hw_id, sizeof(hw_id));  assert(hw_id_len > 0);  //  Get the hardware ID.
   1a1ea:	2300      	movs	r3, #0
   1a1ec:	461a      	mov	r2, r3
   1a1ee:	4619      	mov	r1, r3
   1a1f0:	4618      	mov	r0, r3
   1a1f2:	f7fd f9ed 	bl	175d0 <__assert_func>
   1a1f6:	bf00      	nop
   1a1f8:	20009a38 	.word	0x20009a38
   1a1fc:	20009a2c 	.word	0x20009a2c
   1a200:	0001f928 	.word	0x0001f928
   1a204:	0001f8e0 	.word	0x0001f8e0
   1a208:	0001fa40 	.word	0x0001fa40

0001a20c <is_collector_node>:
bool is_collector_node(void) {
   1a20c:	b508      	push	{r3, lr}
    const uint8_t *hardware_id = get_hardware_id();
   1a20e:	f7ff ffc5 	bl	1a19c <get_hardware_id>
    if (memcmp(hardware_id, COLLECTOR_NODE_HW_ID, HARDWARE_ID_LENGTH) == 0) { return true; }
   1a212:	220c      	movs	r2, #12
   1a214:	4903      	ldr	r1, [pc, #12]	; (1a224 <is_collector_node+0x18>)
   1a216:	f7fe fdad 	bl	18d74 <memcmp>
   1a21a:	b108      	cbz	r0, 1a220 <is_collector_node+0x14>
    return false; 
   1a21c:	2000      	movs	r0, #0
}
   1a21e:	bd08      	pop	{r3, pc}
    if (memcmp(hardware_id, COLLECTOR_NODE_HW_ID, HARDWARE_ID_LENGTH) == 0) { return true; }
   1a220:	2001      	movs	r0, #1
   1a222:	e7fc      	b.n	1a21e <is_collector_node+0x12>
   1a224:	0001f898 	.word	0x0001f898

0001a228 <is_standalone_node>:
bool is_standalone_node(void) {
   1a228:	b510      	push	{r4, lr}
    if (!is_collector_node() && !is_sensor_node()) { return true; }
   1a22a:	f7ff ffef 	bl	1a20c <is_collector_node>
   1a22e:	b928      	cbnz	r0, 1a23c <is_standalone_node+0x14>
   1a230:	4604      	mov	r4, r0
   1a232:	f7ff ffa7 	bl	1a184 <is_sensor_node>
   1a236:	b910      	cbnz	r0, 1a23e <is_standalone_node+0x16>
   1a238:	2401      	movs	r4, #1
   1a23a:	e000      	b.n	1a23e <is_standalone_node+0x16>
    return false;
   1a23c:	2400      	movs	r4, #0
}
   1a23e:	4620      	mov	r0, r4
   1a240:	bd10      	pop	{r4, pc}
	...

0001a244 <sensor_network_init>:
const char **get_sensor_node_names(void) { return sensor_node_names; }

/////////////////////////////////////////////////////////
//  Sensor Network Configuration

void sensor_network_init(void) {
   1a244:	b538      	push	{r3, r4, r5, lr}
    //  Allocate Sensor Node address for this node.

    //  Set the Sensor Node names for remote_sensor_create().
    for (int i = 0; i < SENSOR_NETWORK_SIZE; i++) {
   1a246:	2400      	movs	r4, #0
   1a248:	2c04      	cmp	r4, #4
   1a24a:	dc15      	bgt.n	1a278 <sensor_network_init+0x34>
        int len = sprintf((char *) sensor_node_names[i], "%010llx", sensor_node_addresses[i]);
   1a24c:	4b23      	ldr	r3, [pc, #140]	; (1a2dc <sensor_network_init+0x98>)
   1a24e:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
   1a252:	e9d3 2300 	ldrd	r2, r3, [r3]
   1a256:	4922      	ldr	r1, [pc, #136]	; (1a2e0 <sensor_network_init+0x9c>)
   1a258:	4822      	ldr	r0, [pc, #136]	; (1a2e4 <sensor_network_init+0xa0>)
   1a25a:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
   1a25e:	f000 fcaf 	bl	1abc0 <sprintf>
        assert(len + 1 <= NODE_NAME_LENGTH);
   1a262:	3001      	adds	r0, #1
   1a264:	280b      	cmp	r0, #11
   1a266:	dc01      	bgt.n	1a26c <sensor_network_init+0x28>
    for (int i = 0; i < SENSOR_NETWORK_SIZE; i++) {
   1a268:	3401      	adds	r4, #1
   1a26a:	e7ed      	b.n	1a248 <sensor_network_init+0x4>
        assert(len + 1 <= NODE_NAME_LENGTH);
   1a26c:	2300      	movs	r3, #0
   1a26e:	461a      	mov	r2, r3
   1a270:	4619      	mov	r1, r3
   1a272:	4618      	mov	r0, r3
   1a274:	f7fd f9ac 	bl	175d0 <__assert_func>
    }
    //  Get Sensor Node address if applicable.
    const uint8_t *hardware_id = get_hardware_id();
   1a278:	f7ff ff90 	bl	1a19c <get_hardware_id>
   1a27c:	4605      	mov	r5, r0
    int i;
    for (i = 0; i < SENSOR_NETWORK_SIZE; i++) {
   1a27e:	2400      	movs	r4, #0
   1a280:	2c04      	cmp	r4, #4
   1a282:	dc19      	bgt.n	1a2b8 <sensor_network_init+0x74>
        if (memcmp(hardware_id, SENSOR_NODE_HW_IDS[i], HARDWARE_ID_LENGTH) == 0) {
   1a284:	eb04 0244 	add.w	r2, r4, r4, lsl #1
   1a288:	0093      	lsls	r3, r2, #2
   1a28a:	220c      	movs	r2, #12
   1a28c:	4916      	ldr	r1, [pc, #88]	; (1a2e8 <sensor_network_init+0xa4>)
   1a28e:	4419      	add	r1, r3
   1a290:	4628      	mov	r0, r5
   1a292:	f7fe fd6f 	bl	18d74 <memcmp>
   1a296:	b108      	cbz	r0, 1a29c <sensor_network_init+0x58>
    for (i = 0; i < SENSOR_NETWORK_SIZE; i++) {
   1a298:	3401      	adds	r4, #1
   1a29a:	e7f1      	b.n	1a280 <sensor_network_init+0x3c>
            sensor_node_address = sensor_node_addresses[i];
   1a29c:	4b0f      	ldr	r3, [pc, #60]	; (1a2dc <sensor_network_init+0x98>)
   1a29e:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
   1a2a2:	e9d3 0100 	ldrd	r0, r1, [r3]
   1a2a6:	4b11      	ldr	r3, [pc, #68]	; (1a2ec <sensor_network_init+0xa8>)
   1a2a8:	e9c3 0100 	strd	r0, r1, [r3]
            console_printf("%ssensor%s#%d\n", _net, _node, i + 1);
   1a2ac:	1c63      	adds	r3, r4, #1
   1a2ae:	4a10      	ldr	r2, [pc, #64]	; (1a2f0 <sensor_network_init+0xac>)
   1a2b0:	4910      	ldr	r1, [pc, #64]	; (1a2f4 <sensor_network_init+0xb0>)
   1a2b2:	4811      	ldr	r0, [pc, #68]	; (1a2f8 <sensor_network_init+0xb4>)
   1a2b4:	f7fc fac4 	bl	16840 <console_printf>
            break;
        }
    }
    //  Display the type of node.
    if (is_collector_node()) { console_printf("%scollector%s\n", _net, _node); }
   1a2b8:	f7ff ffa8 	bl	1a20c <is_collector_node>
   1a2bc:	b940      	cbnz	r0, 1a2d0 <sensor_network_init+0x8c>
    else if (is_standalone_node()) { console_printf("%sstandalone%s\n", _net, _node); }
   1a2be:	f7ff ffb3 	bl	1a228 <is_standalone_node>
   1a2c2:	b150      	cbz	r0, 1a2da <sensor_network_init+0x96>
   1a2c4:	4a0a      	ldr	r2, [pc, #40]	; (1a2f0 <sensor_network_init+0xac>)
   1a2c6:	490b      	ldr	r1, [pc, #44]	; (1a2f4 <sensor_network_init+0xb0>)
   1a2c8:	480c      	ldr	r0, [pc, #48]	; (1a2fc <sensor_network_init+0xb8>)
   1a2ca:	f7fc fab9 	bl	16840 <console_printf>
}
   1a2ce:	e004      	b.n	1a2da <sensor_network_init+0x96>
    if (is_collector_node()) { console_printf("%scollector%s\n", _net, _node); }
   1a2d0:	4a07      	ldr	r2, [pc, #28]	; (1a2f0 <sensor_network_init+0xac>)
   1a2d2:	4908      	ldr	r1, [pc, #32]	; (1a2f4 <sensor_network_init+0xb0>)
   1a2d4:	480a      	ldr	r0, [pc, #40]	; (1a300 <sensor_network_init+0xbc>)
   1a2d6:	f7fc fab3 	bl	16840 <console_printf>
}
   1a2da:	bd38      	pop	{r3, r4, r5, pc}
   1a2dc:	0001f940 	.word	0x0001f940
   1a2e0:	0001f8e8 	.word	0x0001f8e8
   1a2e4:	20000128 	.word	0x20000128
   1a2e8:	0001f8a4 	.word	0x0001f8a4
   1a2ec:	20009a40 	.word	0x20009a40
   1a2f0:	0001f8f0 	.word	0x0001f8f0
   1a2f4:	0001f928 	.word	0x0001f928
   1a2f8:	0001f8f8 	.word	0x0001f8f8
   1a2fc:	0001f918 	.word	0x0001f918
   1a300:	0001f908 	.word	0x0001f908

0001a304 <config_device>:

///////////////////////////////////////////////////////////////////////////////
//  Generic Device Creator Code based on repos\apache-mynewt-core\hw\sensor\creator\src\sensor_creator.c

//  Device configuration
static int config_device(void) {
   1a304:	b530      	push	{r4, r5, lr}
   1a306:	b083      	sub	sp, #12
    int rc;
    struct os_dev *dev;
    struct DEVICE_CFG cfg;

    //  Fetch the device.
    dev = (struct os_dev *) os_dev_open(DEVICE_NAME, OS_TIMEOUT_NEVER, NULL);
   1a308:	2200      	movs	r2, #0
   1a30a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
   1a30e:	4810      	ldr	r0, [pc, #64]	; (1a350 <config_device+0x4c>)
   1a310:	f7fd fc2c 	bl	17b6c <os_dev_open>
    assert(dev != NULL);
   1a314:	b178      	cbz	r0, 1a336 <config_device+0x32>
   1a316:	4604      	mov	r4, r0

    //  Get the default config for the device.
    rc = DEVICE_CFG_DEFAULT(&cfg);
   1a318:	4668      	mov	r0, sp
   1a31a:	f000 f86c 	bl	1a3f6 <temp_stub_default_cfg>
    assert(rc == 0);
   1a31e:	b980      	cbnz	r0, 1a342 <config_device+0x3e>

    //  Apply the device config.
    rc = DEVICE_CFG_FUNC((struct DEVICE_DEV *)dev, &cfg);
   1a320:	4669      	mov	r1, sp
   1a322:	4620      	mov	r0, r4
   1a324:	f000 f900 	bl	1a528 <temp_stub_config>
   1a328:	4605      	mov	r5, r0
    os_dev_close(dev);
   1a32a:	4620      	mov	r0, r4
   1a32c:	f7fd fc40 	bl	17bb0 <os_dev_close>
    return rc;
}
   1a330:	4628      	mov	r0, r5
   1a332:	b003      	add	sp, #12
   1a334:	bd30      	pop	{r4, r5, pc}
    assert(dev != NULL);
   1a336:	2300      	movs	r3, #0
   1a338:	461a      	mov	r2, r3
   1a33a:	4619      	mov	r1, r3
   1a33c:	4618      	mov	r0, r3
   1a33e:	f7fd f947 	bl	175d0 <__assert_func>
    assert(rc == 0);
   1a342:	2300      	movs	r3, #0
   1a344:	461a      	mov	r2, r3
   1a346:	4619      	mov	r1, r3
   1a348:	4618      	mov	r0, r3
   1a34a:	f7fd f941 	bl	175d0 <__assert_func>
   1a34e:	bf00      	nop
   1a350:	0001f968 	.word	0x0001f968

0001a354 <temp_stub_create>:

//  Create the device instance and configure it. Called by sysinit() during startup, defined in pkg.yml.
void DEVICE_CREATE(void) {
   1a354:	b510      	push	{r4, lr}
   1a356:	b082      	sub	sp, #8
    console_printf("TMP create %s\n", DEVICE_NAME);
   1a358:	4c10      	ldr	r4, [pc, #64]	; (1a39c <temp_stub_create+0x48>)
   1a35a:	4621      	mov	r1, r4
   1a35c:	4810      	ldr	r0, [pc, #64]	; (1a3a0 <temp_stub_create+0x4c>)
   1a35e:	f7fc fa6f 	bl	16840 <console_printf>

    //  Create the device.
    int rc = os_dev_create((struct os_dev *) &DEVICE_INSTANCE, DEVICE_NAME,
   1a362:	4b10      	ldr	r3, [pc, #64]	; (1a3a4 <temp_stub_create+0x50>)
   1a364:	9301      	str	r3, [sp, #4]
   1a366:	4b10      	ldr	r3, [pc, #64]	; (1a3a8 <temp_stub_create+0x54>)
   1a368:	9300      	str	r3, [sp, #0]
   1a36a:	2300      	movs	r3, #0
   1a36c:	2201      	movs	r2, #1
   1a36e:	4621      	mov	r1, r4
   1a370:	480e      	ldr	r0, [pc, #56]	; (1a3ac <temp_stub_create+0x58>)
   1a372:	f7fd fbb5 	bl	17ae0 <os_dev_create>
        OS_DEV_INIT_PRIMARY, 0, 
        DEVICE_INIT, (void *) &DEVICE_ITF);
    assert(rc == 0);
   1a376:	b920      	cbnz	r0, 1a382 <temp_stub_create+0x2e>

    //  Configure the device.
    rc = config_device();
   1a378:	f7ff ffc4 	bl	1a304 <config_device>
    assert(rc == 0);
   1a37c:	b938      	cbnz	r0, 1a38e <temp_stub_create+0x3a>
}
   1a37e:	b002      	add	sp, #8
   1a380:	bd10      	pop	{r4, pc}
    assert(rc == 0);
   1a382:	2300      	movs	r3, #0
   1a384:	461a      	mov	r2, r3
   1a386:	4619      	mov	r1, r3
   1a388:	4618      	mov	r0, r3
   1a38a:	f7fd f921 	bl	175d0 <__assert_func>
    assert(rc == 0);
   1a38e:	2300      	movs	r3, #0
   1a390:	461a      	mov	r2, r3
   1a392:	4619      	mov	r1, r3
   1a394:	4618      	mov	r0, r3
   1a396:	f7fd f91b 	bl	175d0 <__assert_func>
   1a39a:	bf00      	nop
   1a39c:	0001f968 	.word	0x0001f968
   1a3a0:	0001f974 	.word	0x0001f974
   1a3a4:	20009a80 	.word	0x20009a80
   1a3a8:	0001a405 	.word	0x0001a405
   1a3ac:	20009a98 	.word	0x20009a98

0001a3b0 <temp_stub_close>:
}

static int temp_stub_close(struct os_dev *dev0) {
    //  Close the sensor.  Return 0 if successful.
    return 0;
}
   1a3b0:	2000      	movs	r0, #0
   1a3b2:	4770      	bx	lr

0001a3b4 <temp_stub_sensor_get_config>:

static int temp_stub_sensor_get_config(struct sensor *sensor, sensor_type_t type,
    struct sensor_cfg *cfg) {
    //  Return the type of the sensor value returned by the sensor.
    int rc;
    if (!(type & TEMP_SENSOR_TYPE)) {
   1a3b4:	f002 6080 	and.w	r0, r2, #67108864	; 0x4000000
   1a3b8:	2100      	movs	r1, #0
   1a3ba:	ea50 0301 	orrs.w	r3, r0, r1
   1a3be:	d004      	beq.n	1a3ca <temp_stub_sensor_get_config+0x16>
        rc = SYS_EINVAL;
        goto err;
    }
    cfg->sc_valtype = TEMP_SENSOR_VALUE_TYPE;  //  We return float (computed values) or int (raw values).
   1a3c0:	9b00      	ldr	r3, [sp, #0]
   1a3c2:	2201      	movs	r2, #1
   1a3c4:	701a      	strb	r2, [r3, #0]
    return (0);
   1a3c6:	2000      	movs	r0, #0
   1a3c8:	4770      	bx	lr
err:
    return (rc);
   1a3ca:	f06f 0001 	mvn.w	r0, #1
}
   1a3ce:	4770      	bx	lr

0001a3d0 <temp_stub_open>:
static int temp_stub_open(struct os_dev *dev0, uint32_t timeout, void *arg) {
   1a3d0:	b508      	push	{r3, lr}
    dev = (struct temp_stub *) dev0;  assert(dev);  
   1a3d2:	b120      	cbz	r0, 1a3de <temp_stub_open+0xe>
    cfg = &dev->cfg; assert(cfg);
   1a3d4:	f110 0fb0 	cmn.w	r0, #176	; 0xb0
   1a3d8:	d007      	beq.n	1a3ea <temp_stub_open+0x1a>
}
   1a3da:	2000      	movs	r0, #0
   1a3dc:	bd08      	pop	{r3, pc}
    dev = (struct temp_stub *) dev0;  assert(dev);  
   1a3de:	2300      	movs	r3, #0
   1a3e0:	461a      	mov	r2, r3
   1a3e2:	4619      	mov	r1, r3
   1a3e4:	4618      	mov	r0, r3
   1a3e6:	f7fd f8f3 	bl	175d0 <__assert_func>
    cfg = &dev->cfg; assert(cfg);
   1a3ea:	2300      	movs	r3, #0
   1a3ec:	461a      	mov	r2, r3
   1a3ee:	4619      	mov	r1, r3
   1a3f0:	4618      	mov	r0, r3
   1a3f2:	f7fd f8ed 	bl	175d0 <__assert_func>

0001a3f6 <temp_stub_default_cfg>:
    cfg->bc_s_mask       = SENSOR_TYPE_ALL;         //  Return all sensor values, i.e. temperature.
   1a3f6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a3fa:	2300      	movs	r3, #0
   1a3fc:	e9c0 2300 	strd	r2, r3, [r0]
}
   1a400:	2000      	movs	r0, #0
   1a402:	4770      	bx	lr

0001a404 <temp_stub_init>:
int temp_stub_init(struct os_dev *dev0, void *arg) {
   1a404:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (!arg || !dev0) { rc = SYS_ENODEV; goto err; }
   1a406:	b379      	cbz	r1, 1a468 <temp_stub_init+0x64>
   1a408:	460d      	mov	r5, r1
   1a40a:	b380      	cbz	r0, 1a46e <temp_stub_init+0x6a>
   1a40c:	4604      	mov	r4, r0
    rc = temp_stub_default_cfg(&dev->cfg);
   1a40e:	30b0      	adds	r0, #176	; 0xb0
   1a410:	f7ff fff1 	bl	1a3f6 <temp_stub_default_cfg>
    if (rc) { goto err; }
   1a414:	4603      	mov	r3, r0
   1a416:	b108      	cbz	r0, 1a41c <temp_stub_init+0x18>
}
   1a418:	4618      	mov	r0, r3
   1a41a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    sensor = &dev->sensor;
   1a41c:	f104 0628 	add.w	r6, r4, #40	; 0x28
    rc = sensor_init(sensor, dev0);
   1a420:	4621      	mov	r1, r4
   1a422:	4630      	mov	r0, r6
   1a424:	f7ff fddd 	bl	19fe2 <sensor_init>
    if (rc != 0) { goto err; }
   1a428:	4603      	mov	r3, r0
   1a42a:	2800      	cmp	r0, #0
   1a42c:	d1f4      	bne.n	1a418 <temp_stub_init+0x14>
 */
static inline int
sensor_set_driver(struct sensor *sensor, sensor_type_t type,
        struct sensor_driver *driver)
{
    sensor->s_funcs = driver;
   1a42e:	4b11      	ldr	r3, [pc, #68]	; (1a474 <temp_stub_init+0x70>)
   1a430:	6523      	str	r3, [r4, #80]	; 0x50
    sensor->s_types = type;
   1a432:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
   1a436:	2300      	movs	r3, #0
   1a438:	e9c4 230e 	strd	r2, r3, [r4, #56]	; 0x38
 * @param s_itf The interface type to set
 */
static inline int
sensor_set_interface(struct sensor *sensor, struct sensor_itf *s_itf)
{
    memcpy(&sensor->s_itf, s_itf, sizeof(*s_itf));
   1a43c:	682a      	ldr	r2, [r5, #0]
   1a43e:	686f      	ldr	r7, [r5, #4]
   1a440:	68a8      	ldr	r0, [r5, #8]
   1a442:	68e9      	ldr	r1, [r5, #12]
   1a444:	6722      	str	r2, [r4, #112]	; 0x70
   1a446:	6767      	str	r7, [r4, #116]	; 0x74
   1a448:	67a0      	str	r0, [r4, #120]	; 0x78
   1a44a:	67e1      	str	r1, [r4, #124]	; 0x7c
   1a44c:	692a      	ldr	r2, [r5, #16]
   1a44e:	f8c4 2080 	str.w	r2, [r4, #128]	; 0x80
    rc = sensor_mgr_register(sensor);
   1a452:	4630      	mov	r0, r6
   1a454:	f7ff fdae 	bl	19fb4 <sensor_mgr_register>
    if (rc != 0) { goto err; }
   1a458:	4603      	mov	r3, r0
   1a45a:	2800      	cmp	r0, #0
   1a45c:	d1dc      	bne.n	1a418 <temp_stub_init+0x14>
    OS_DEV_SETHANDLERS(dev0, temp_stub_open, temp_stub_close);
   1a45e:	4a06      	ldr	r2, [pc, #24]	; (1a478 <temp_stub_init+0x74>)
   1a460:	6022      	str	r2, [r4, #0]
   1a462:	4a06      	ldr	r2, [pc, #24]	; (1a47c <temp_stub_init+0x78>)
   1a464:	60e2      	str	r2, [r4, #12]
    return (0);
   1a466:	e7d7      	b.n	1a418 <temp_stub_init+0x14>
    if (!arg || !dev0) { rc = SYS_ENODEV; goto err; }
   1a468:	f06f 0308 	mvn.w	r3, #8
   1a46c:	e7d4      	b.n	1a418 <temp_stub_init+0x14>
   1a46e:	f06f 0308 	mvn.w	r3, #8
   1a472:	e7d1      	b.n	1a418 <temp_stub_init+0x14>
   1a474:	0001f984 	.word	0x0001f984
   1a478:	0001a3d1 	.word	0x0001a3d1
   1a47c:	0001a3b1 	.word	0x0001a3b1

0001a480 <temp_stub_get_raw_temperature>:
int temp_stub_get_raw_temperature(struct temp_stub *dev, int num_readings, int *temp_sum, uint8_t *temp_diff) {
   1a480:	b538      	push	{r3, r4, r5, lr}
   1a482:	460d      	mov	r5, r1
   1a484:	4614      	mov	r4, r2
    console_printf("STB read temp sensor\n");  ////
   1a486:	4808      	ldr	r0, [pc, #32]	; (1a4a8 <temp_stub_get_raw_temperature+0x28>)
   1a488:	f7fc f9da 	bl	16840 <console_printf>
    assert(temp_sum);
   1a48c:	b134      	cbz	r4, 1a49c <temp_stub_get_raw_temperature+0x1c>
    *temp_sum = 1757 * num_readings;
   1a48e:	f240 61dd 	movw	r1, #1757	; 0x6dd
   1a492:	fb01 f105 	mul.w	r1, r1, r5
   1a496:	6021      	str	r1, [r4, #0]
}
   1a498:	2000      	movs	r0, #0
   1a49a:	bd38      	pop	{r3, r4, r5, pc}
    assert(temp_sum);
   1a49c:	2300      	movs	r3, #0
   1a49e:	461a      	mov	r2, r3
   1a4a0:	4619      	mov	r1, r3
   1a4a2:	4618      	mov	r0, r3
   1a4a4:	f7fd f894 	bl	175d0 <__assert_func>
   1a4a8:	0001f9ac 	.word	0x0001f9ac

0001a4ac <temp_stub_sensor_read>:
    sensor_data_func_t data_func, void *data_arg, uint32_t timeout) {
   1a4ac:	b530      	push	{r4, r5, lr}
   1a4ae:	b087      	sub	sp, #28
    if (!(type & TEMP_SENSOR_TYPE)) { rc = SYS_EINVAL; goto err; }
   1a4b0:	f002 6480 	and.w	r4, r2, #67108864	; 0x4000000
   1a4b4:	2500      	movs	r5, #0
   1a4b6:	ea54 0305 	orrs.w	r3, r4, r5
   1a4ba:	d032      	beq.n	1a522 <temp_stub_sensor_read+0x76>
   1a4bc:	4604      	mov	r4, r0
    dev = (struct temp_stub *) SENSOR_GET_DEVICE(sensor); assert(dev);
   1a4be:	6805      	ldr	r5, [r0, #0]
   1a4c0:	b165      	cbz	r5, 1a4dc <temp_stub_sensor_read+0x30>
    rawtemp = -1;
   1a4c2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1a4c6:	9303      	str	r3, [sp, #12]
        rc = temp_stub_open((struct os_dev *) dev, 0, NULL);
   1a4c8:	2200      	movs	r2, #0
   1a4ca:	4611      	mov	r1, r2
   1a4cc:	4628      	mov	r0, r5
   1a4ce:	f7ff ff7f 	bl	1a3d0 <temp_stub_open>
        if (rc) { goto err; }
   1a4d2:	4603      	mov	r3, r0
   1a4d4:	b140      	cbz	r0, 1a4e8 <temp_stub_sensor_read+0x3c>
}
   1a4d6:	4618      	mov	r0, r3
   1a4d8:	b007      	add	sp, #28
   1a4da:	bd30      	pop	{r4, r5, pc}
    dev = (struct temp_stub *) SENSOR_GET_DEVICE(sensor); assert(dev);
   1a4dc:	2300      	movs	r3, #0
   1a4de:	461a      	mov	r2, r3
   1a4e0:	4619      	mov	r1, r3
   1a4e2:	4618      	mov	r0, r3
   1a4e4:	f7fd f874 	bl	175d0 <__assert_func>
        rc = temp_stub_get_raw_temperature(dev, 1, &rawtemp, NULL);
   1a4e8:	2300      	movs	r3, #0
   1a4ea:	aa03      	add	r2, sp, #12
   1a4ec:	2101      	movs	r1, #1
   1a4ee:	4628      	mov	r0, r5
   1a4f0:	f7ff ffc6 	bl	1a480 <temp_stub_get_raw_temperature>
    if (rc) { goto err; }  //  console_printf("rawtemp: %d\n", rawtemp);  ////
   1a4f4:	4603      	mov	r3, r0
   1a4f6:	2800      	cmp	r0, #0
   1a4f8:	d1ed      	bne.n	1a4d6 <temp_stub_sensor_read+0x2a>
    temp_data->strd_temp_raw = rawtemp;  //  rawtemp must be between 0 and 4,095 (based on 12-bit ADC)
   1a4fa:	9a03      	ldr	r2, [sp, #12]
   1a4fc:	9204      	str	r2, [sp, #16]
    temp_data->strd_temp_raw_is_valid = 1;
   1a4fe:	2201      	movs	r2, #1
   1a500:	f88d 2014 	strb.w	r2, [sp, #20]
    if (data_func) {  //  Call the Listener Function to process the sensor data.
   1a504:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   1a506:	2a00      	cmp	r2, #0
   1a508:	d0e5      	beq.n	1a4d6 <temp_stub_sensor_read+0x2a>
        rc = data_func(sensor, data_arg, temp_data, TEMP_SENSOR_TYPE);
   1a50a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
   1a50e:	2300      	movs	r3, #0
   1a510:	e9cd 2300 	strd	r2, r3, [sp]
   1a514:	aa04      	add	r2, sp, #16
   1a516:	990b      	ldr	r1, [sp, #44]	; 0x2c
   1a518:	4620      	mov	r0, r4
   1a51a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1a51c:	4798      	blx	r3
   1a51e:	4603      	mov	r3, r0
   1a520:	e7d9      	b.n	1a4d6 <temp_stub_sensor_read+0x2a>
    if (!(type & TEMP_SENSOR_TYPE)) { rc = SYS_EINVAL; goto err; }
   1a522:	f06f 0301 	mvn.w	r3, #1
   1a526:	e7d6      	b.n	1a4d6 <temp_stub_sensor_read+0x2a>

0001a528 <temp_stub_config>:
 * @param Sensor device temp_stub structure
 * @param Sensor device temp_stub_cfg config
 *
 * @return 0 on success, and non-zero error code on failure
 */
int temp_stub_config(struct temp_stub *dev, struct temp_stub_cfg *cfg) {
   1a528:	b508      	push	{r3, lr}
    struct sensor_itf *itf;
    int rc;
    itf = SENSOR_GET_ITF(&(dev->sensor)); assert(itf);
   1a52a:	f110 0f70 	cmn.w	r0, #112	; 0x70
   1a52e:	d009      	beq.n	1a544 <temp_stub_config+0x1c>
    rc = sensor_set_type_mask(&(dev->sensor),  cfg->bc_s_mask);
   1a530:	e9d1 2300 	ldrd	r2, r3, [r1]
    sensor->s_mask = mask;
   1a534:	e9c0 2310 	strd	r2, r3, [r0, #64]	; 0x40
    if (rc) { goto err; }

    dev->cfg.bc_s_mask = cfg->bc_s_mask;
   1a538:	e9d1 2300 	ldrd	r2, r3, [r1]
   1a53c:	e9c0 232c 	strd	r2, r3, [r0, #176]	; 0xb0
    return 0;
err:
    return (rc);
}
   1a540:	2000      	movs	r0, #0
   1a542:	bd08      	pop	{r3, pc}
    itf = SENSOR_GET_ITF(&(dev->sensor)); assert(itf);
   1a544:	2300      	movs	r3, #0
   1a546:	461a      	mov	r2, r3
   1a548:	4619      	mov	r1, r3
   1a54a:	4618      	mov	r0, r3
   1a54c:	f7fd f840 	bl	175d0 <__assert_func>

0001a550 <oc_buffer_tx>:
    assert(rc == 0);
}

static void
oc_buffer_tx(struct os_event *ev)
{
   1a550:	b508      	push	{r3, lr}
    struct os_mbuf *m;

    while ((m = os_mqueue_get(&oc_outq)) != NULL) {
   1a552:	e002      	b.n	1a55a <oc_buffer_tx+0xa>
                                    oc_events[RI_TO_DTLS_EVENT], m);
                }
            } else
#endif
            {
                oc_send_buffer(m);
   1a554:	4618      	mov	r0, r3
   1a556:	f000 f85b 	bl	1a610 <oc_send_buffer>
    while ((m = os_mqueue_get(&oc_outq)) != NULL) {
   1a55a:	4808      	ldr	r0, [pc, #32]	; (1a57c <oc_buffer_tx+0x2c>)
   1a55c:	f7fd fc03 	bl	17d66 <os_mqueue_get>
   1a560:	4603      	mov	r3, r0
   1a562:	b148      	cbz	r0, 1a578 <oc_buffer_tx+0x28>
        STAILQ_NEXT(OS_MBUF_PKTHDR(m), omp_next) = NULL;
   1a564:	2200      	movs	r2, #0
   1a566:	615a      	str	r2, [r3, #20]
        if (OC_MBUF_ENDPOINT(m)->ep.oe_flags & OC_ENDPOINT_MULTICAST) {
   1a568:	7e1a      	ldrb	r2, [r3, #24]
   1a56a:	f012 0f08 	tst.w	r2, #8
   1a56e:	d0f1      	beq.n	1a554 <oc_buffer_tx+0x4>
            oc_send_multicast_message(m);
   1a570:	4618      	mov	r0, r3
   1a572:	f000 f85d 	bl	1a630 <oc_send_multicast_message>
   1a576:	e7f0      	b.n	1a55a <oc_buffer_tx+0xa>
            }
#ifdef OC_CLIENT
        }
#endif
    }
}
   1a578:	bd08      	pop	{r3, pc}
   1a57a:	bf00      	nop
   1a57c:	20009b70 	.word	0x20009b70

0001a580 <oc_buffer_rx>:

static void
oc_buffer_rx(struct os_event *ev)
{
   1a580:	b500      	push	{lr}
   1a582:	b083      	sub	sp, #12
    struct os_mbuf *m;
#if defined(OC_SECURITY)
    uint8_t b;
#endif

    while ((m = os_mqueue_get(&oc_inq)) != NULL) {
   1a584:	4808      	ldr	r0, [pc, #32]	; (1a5a8 <oc_buffer_rx+0x28>)
   1a586:	f7fd fbee 	bl	17d66 <os_mqueue_get>
   1a58a:	9001      	str	r0, [sp, #4]
   1a58c:	b140      	cbz	r0, 1a5a0 <oc_buffer_rx+0x20>
            oc_process_post(&oc_dtls_handler, oc_events[UDP_TO_DTLS_EVENT], m);
        } else {
            coap_receive(m);
        }
#else
        coap_receive(&m);
   1a58e:	a801      	add	r0, sp, #4
   1a590:	f000 faa2 	bl	1aad8 <__wrap_coap_receive>
#endif
        if (m) {
   1a594:	9801      	ldr	r0, [sp, #4]
   1a596:	2800      	cmp	r0, #0
   1a598:	d0f4      	beq.n	1a584 <oc_buffer_rx+0x4>
            os_mbuf_free_chain(m);
   1a59a:	f7fd fc59 	bl	17e50 <os_mbuf_free_chain>
   1a59e:	e7f1      	b.n	1a584 <oc_buffer_rx+0x4>
        }
    }
}
   1a5a0:	b003      	add	sp, #12
   1a5a2:	f85d fb04 	ldr.w	pc, [sp], #4
   1a5a6:	bf00      	nop
   1a5a8:	20009b58 	.word	0x20009b58

0001a5ac <oc_buffer_init>:

void
oc_buffer_init(void)
{
   1a5ac:	b508      	push	{r3, lr}
    os_mqueue_init(&oc_inq, oc_buffer_rx, NULL);
   1a5ae:	2200      	movs	r2, #0
   1a5b0:	4904      	ldr	r1, [pc, #16]	; (1a5c4 <oc_buffer_init+0x18>)
   1a5b2:	4805      	ldr	r0, [pc, #20]	; (1a5c8 <oc_buffer_init+0x1c>)
   1a5b4:	f7fd fbce 	bl	17d54 <os_mqueue_init>
    os_mqueue_init(&oc_outq, oc_buffer_tx, NULL);
   1a5b8:	2200      	movs	r2, #0
   1a5ba:	4904      	ldr	r1, [pc, #16]	; (1a5cc <oc_buffer_init+0x20>)
   1a5bc:	4804      	ldr	r0, [pc, #16]	; (1a5d0 <oc_buffer_init+0x24>)
   1a5be:	f7fd fbc9 	bl	17d54 <os_mqueue_init>
}
   1a5c2:	bd08      	pop	{r3, pc}
   1a5c4:	0001a581 	.word	0x0001a581
   1a5c8:	20009b58 	.word	0x20009b58
   1a5cc:	0001a551 	.word	0x0001a551
   1a5d0:	20009b70 	.word	0x20009b70

0001a5d4 <oc_ri_mem_init>:
}
#endif

void
oc_ri_mem_init(void)
{
   1a5d4:	b500      	push	{lr}
   1a5d6:	b083      	sub	sp, #12
#ifdef OC_SERVER
  os_mempool_init(&oc_resource_pool, MAX_APP_RESOURCES, sizeof(oc_resource_t),
                  oc_resource_area, "oc_res");
#endif
#ifdef OC_CLIENT
    os_mempool_init(&oc_client_cb_pool, MAX_NUM_CONCURRENT_REQUESTS,
   1a5d8:	4b07      	ldr	r3, [pc, #28]	; (1a5f8 <oc_ri_mem_init+0x24>)
   1a5da:	9300      	str	r3, [sp, #0]
   1a5dc:	4b07      	ldr	r3, [pc, #28]	; (1a5fc <oc_ri_mem_init+0x28>)
   1a5de:	2264      	movs	r2, #100	; 0x64
   1a5e0:	2102      	movs	r1, #2
   1a5e2:	4807      	ldr	r0, [pc, #28]	; (1a600 <oc_ri_mem_init+0x2c>)
   1a5e4:	f7fd fd3c 	bl	18060 <os_mempool_init>
      sizeof(oc_client_cb_t), oc_client_cb_area, "oc_cl_cbs");
    oc_rep_init();
   1a5e8:	f000 f860 	bl	1a6ac <oc_rep_init>
#endif
    oc_buffer_init();
   1a5ec:	f7ff ffde 	bl	1a5ac <oc_buffer_init>
}
   1a5f0:	b003      	add	sp, #12
   1a5f2:	f85d fb04 	ldr.w	pc, [sp], #4
   1a5f6:	bf00      	nop
   1a5f8:	0001f9c4 	.word	0x0001f9c4
   1a5fc:	20009b88 	.word	0x20009b88
   1a600:	20009c50 	.word	0x20009c50

0001a604 <oc_evq_set>:
}

void
oc_evq_set(struct os_eventq *evq)
{
    oc_evq = evq;
   1a604:	4b01      	ldr	r3, [pc, #4]	; (1a60c <oc_evq_set+0x8>)
   1a606:	6018      	str	r0, [r3, #0]
}
   1a608:	4770      	bx	lr
   1a60a:	bf00      	nop
   1a60c:	20009c6c 	.word	0x20009c6c

0001a610 <oc_send_buffer>:
    }
}

void
oc_send_buffer(struct os_mbuf *m)
{
   1a610:	b508      	push	{r3, lr}
    struct oc_endpoint *oe;
    const struct oc_transport *ot;

    oe = OC_MBUF_ENDPOINT(m);

    ot = oc_transports[oe->ep.oe_type];
   1a612:	7e03      	ldrb	r3, [r0, #24]
   1a614:	f003 0307 	and.w	r3, r3, #7
   1a618:	4a04      	ldr	r2, [pc, #16]	; (1a62c <oc_send_buffer+0x1c>)
   1a61a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
    if (ot) {
   1a61e:	b113      	cbz	r3, 1a626 <oc_send_buffer+0x16>
        ot->ot_tx_ucast(m);
   1a620:	68db      	ldr	r3, [r3, #12]
   1a622:	4798      	blx	r3
    } else {
        OC_LOG(ERROR, "Unknown transport option %u\n", oe->ep.oe_type);
        os_mbuf_free_chain(m);
    }
}
   1a624:	bd08      	pop	{r3, pc}
        os_mbuf_free_chain(m);
   1a626:	f7fd fc13 	bl	17e50 <os_mbuf_free_chain>
}
   1a62a:	e7fb      	b.n	1a624 <oc_send_buffer+0x14>
   1a62c:	20009f00 	.word	0x20009f00

0001a630 <oc_send_multicast_message>:
/*
 * Send on all the transports.
 */
void
oc_send_multicast_message(struct os_mbuf *m)
{
   1a630:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1a634:	4607      	mov	r7, r0
    const struct oc_transport *ot;
    const struct oc_transport *prev = NULL;
    struct os_mbuf *n;
    int i;

    for (i = 0; i < OC_TRANSPORT_MAX; i++) {
   1a636:	2400      	movs	r4, #0
    const struct oc_transport *prev = NULL;
   1a638:	4626      	mov	r6, r4
    for (i = 0; i < OC_TRANSPORT_MAX; i++) {
   1a63a:	e002      	b.n	1a642 <oc_send_multicast_message+0x12>
   1a63c:	4635      	mov	r5, r6
   1a63e:	3401      	adds	r4, #1
   1a640:	462e      	mov	r6, r5
   1a642:	2c07      	cmp	r4, #7
   1a644:	dc12      	bgt.n	1a66c <oc_send_multicast_message+0x3c>
        if (!oc_transports[i]) {
   1a646:	4b0c      	ldr	r3, [pc, #48]	; (1a678 <oc_send_multicast_message+0x48>)
   1a648:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
   1a64c:	2d00      	cmp	r5, #0
   1a64e:	d0f5      	beq.n	1a63c <oc_send_multicast_message+0xc>
            continue;
        }

        ot = oc_transports[i];
        if (prev) {
   1a650:	2e00      	cmp	r6, #0
   1a652:	d0f4      	beq.n	1a63e <oc_send_multicast_message+0xe>
            n = os_mbuf_dup(m);
   1a654:	4638      	mov	r0, r7
   1a656:	f7fd fc6b 	bl	17f30 <os_mbuf_dup>
   1a65a:	4680      	mov	r8, r0
            prev->ot_tx_mcast(m);
   1a65c:	6933      	ldr	r3, [r6, #16]
   1a65e:	4638      	mov	r0, r7
   1a660:	4798      	blx	r3
            if (!n) {
   1a662:	f1b8 0f00 	cmp.w	r8, #0
   1a666:	d005      	beq.n	1a674 <oc_send_multicast_message+0x44>
                return;
            }
            m = n;
   1a668:	4647      	mov	r7, r8
   1a66a:	e7e8      	b.n	1a63e <oc_send_multicast_message+0xe>
        }
        prev = ot;
    }
    if (prev) {
   1a66c:	b116      	cbz	r6, 1a674 <oc_send_multicast_message+0x44>
        prev->ot_tx_mcast(m);
   1a66e:	6933      	ldr	r3, [r6, #16]
   1a670:	4638      	mov	r0, r7
   1a672:	4798      	blx	r3
    }
}
   1a674:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1a678:	20009f00 	.word	0x20009f00

0001a67c <oc_init>:
    return rc;
}

void
oc_init(void)
{
   1a67c:	b508      	push	{r3, lr}
    SYSINIT_ASSERT_ACTIVE();
   1a67e:	4b07      	ldr	r3, [pc, #28]	; (1a69c <oc_init+0x20>)
   1a680:	781b      	ldrb	r3, [r3, #0]
   1a682:	b133      	cbz	r3, 1a692 <oc_init+0x16>
    oc_ri_mem_init();
   1a684:	f7ff ffa6 	bl	1a5d4 <oc_ri_mem_init>
    oc_evq_set(os_eventq_dflt_get());
   1a688:	f7fd fb60 	bl	17d4c <os_eventq_dflt_get>
   1a68c:	f7ff ffba 	bl	1a604 <oc_evq_set>
}
   1a690:	bd08      	pop	{r3, pc}
    SYSINIT_ASSERT_ACTIVE();
   1a692:	461a      	mov	r2, r3
   1a694:	4619      	mov	r1, r3
   1a696:	4618      	mov	r0, r3
   1a698:	f7fc ff9a 	bl	175d0 <__assert_func>
   1a69c:	20009d5c 	.word	0x20009d5c

0001a6a0 <oc_register_gatt>:
oc_register_gatt(void)
{
#if (MYNEWT_VAL(OC_TRANSPORT_GATT) == 1)
    oc_gatt_transport_id = oc_transport_register(&oc_gatt_transport);
#endif
}
   1a6a0:	4770      	bx	lr

0001a6a2 <oc_register_ip4>:
oc_register_ip4(void)
{
#if (MYNEWT_VAL(OC_TRANSPORT_IP) == 1) && (MYNEWT_VAL(OC_TRANSPORT_IPV4) == 1)
    oc_ip4_transport_id = oc_transport_register(&oc_ip4_transport);
#endif
}
   1a6a2:	4770      	bx	lr

0001a6a4 <oc_register_ip6>:
oc_register_ip6(void)
{
#if (MYNEWT_VAL(OC_TRANSPORT_IP) == 1) && (MYNEWT_VAL(OC_TRANSPORT_IPV6) == 1)
    oc_ip6_transport_id = oc_transport_register(&oc_ip6_transport);
#endif
}
   1a6a4:	4770      	bx	lr

0001a6a6 <oc_register_lora>:
oc_register_lora(void)
{
#if (MYNEWT_VAL(OC_TRANSPORT_LORA) == 1)
    oc_lora_transport_id = oc_transport_register(&oc_lora_transport);
#endif
}
   1a6a6:	4770      	bx	lr

0001a6a8 <oc_register_serial>:
oc_register_serial(void)
{
#if (MYNEWT_VAL(OC_TRANSPORT_SERIAL) == 1)
    oc_serial_transport_id = oc_transport_register(&oc_serial_transport);
#endif
}
   1a6a8:	4770      	bx	lr
	...

0001a6ac <oc_rep_init>:
  return (uint16_t)err;
}

void
oc_rep_init(void)
{
   1a6ac:	b500      	push	{lr}
   1a6ae:	b083      	sub	sp, #12
    os_mempool_init(&oc_rep_objects, EST_NUM_REP_OBJECTS,
   1a6b0:	4b05      	ldr	r3, [pc, #20]	; (1a6c8 <oc_rep_init+0x1c>)
   1a6b2:	9300      	str	r3, [sp, #0]
   1a6b4:	4b05      	ldr	r3, [pc, #20]	; (1a6cc <oc_rep_init+0x20>)
   1a6b6:	2218      	movs	r2, #24
   1a6b8:	2102      	movs	r1, #2
   1a6ba:	4805      	ldr	r0, [pc, #20]	; (1a6d0 <oc_rep_init+0x24>)
   1a6bc:	f7fd fcd0 	bl	18060 <os_mempool_init>
                    sizeof(oc_rep_t), oc_rep_objects_area, "oc_rep_o");
}
   1a6c0:	b003      	add	sp, #12
   1a6c2:	f85d fb04 	ldr.w	pc, [sp], #4
   1a6c6:	bf00      	nop
   1a6c8:	0001f9d0 	.word	0x0001f9d0
   1a6cc:	20009c8c 	.word	0x20009c8c
   1a6d0:	20009c70 	.word	0x20009c70

0001a6d4 <flash_map_read_mfg>:
 * @return                      0 on success; nonzero on failure.
 */
static int
flash_map_read_mfg(int max_areas,
                   struct flash_area *out_areas, int *out_num_areas)
{
   1a6d4:	b570      	push	{r4, r5, r6, lr}
   1a6d6:	b086      	sub	sp, #24
   1a6d8:	4605      	mov	r5, r0
   1a6da:	460e      	mov	r6, r1
   1a6dc:	4614      	mov	r4, r2
    struct mfg_meta_flash_area meta_flash_area;
    struct mfg_reader reader;
    struct flash_area *fap;
    int rc;

    *out_num_areas = 0;
   1a6de:	2300      	movs	r3, #0
   1a6e0:	6013      	str	r3, [r2, #0]

    /* Ensure manufacturing meta region has been located in flash. */
    mfg_init();
   1a6e2:	f000 f9ad 	bl	1aa40 <mfg_init>

    mfg_open(&reader);
   1a6e6:	a801      	add	r0, sp, #4
   1a6e8:	f000 f9c6 	bl	1aa78 <mfg_open>

    while (1) {
        if (*out_num_areas >= max_areas) {
   1a6ec:	6823      	ldr	r3, [r4, #0]
   1a6ee:	42ab      	cmp	r3, r5
   1a6f0:	da29      	bge.n	1a746 <flash_map_read_mfg+0x72>
            return -1;
        }

        rc = mfg_seek_next_with_type(&reader, MFG_META_TLV_TYPE_FLASH_AREA);
   1a6f2:	2102      	movs	r1, #2
   1a6f4:	a801      	add	r0, sp, #4
   1a6f6:	f000 f98c 	bl	1aa12 <mfg_seek_next_with_type>
   1a6fa:	4603      	mov	r3, r0
        switch (rc) {
   1a6fc:	f110 0f0f 	cmn.w	r0, #15
   1a700:	d003      	beq.n	1a70a <flash_map_read_mfg+0x36>
   1a702:	b120      	cbz	r0, 1a70e <flash_map_read_mfg+0x3a>
        fap->fa_off = meta_flash_area.offset;
        fap->fa_size = meta_flash_area.size;

        (*out_num_areas)++;
    }
}
   1a704:	4618      	mov	r0, r3
   1a706:	b006      	add	sp, #24
   1a708:	bd70      	pop	{r4, r5, r6, pc}
            return 0;
   1a70a:	2300      	movs	r3, #0
   1a70c:	e7fa      	b.n	1a704 <flash_map_read_mfg+0x30>
        rc = mfg_read_tlv_flash_area(&reader, &meta_flash_area);
   1a70e:	a903      	add	r1, sp, #12
   1a710:	a801      	add	r0, sp, #4
   1a712:	f000 f98b 	bl	1aa2c <mfg_read_tlv_flash_area>
        if (rc != 0) {
   1a716:	4603      	mov	r3, r0
   1a718:	2800      	cmp	r0, #0
   1a71a:	d1f3      	bne.n	1a704 <flash_map_read_mfg+0x30>
        fap = out_areas + *out_num_areas;
   1a71c:	6823      	ldr	r3, [r4, #0]
   1a71e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   1a722:	009a      	lsls	r2, r3, #2
   1a724:	18b3      	adds	r3, r6, r2
        fap->fa_id = meta_flash_area.area_id;
   1a726:	f89d 100c 	ldrb.w	r1, [sp, #12]
   1a72a:	54b1      	strb	r1, [r6, r2]
        fap->fa_device_id = meta_flash_area.device_id;
   1a72c:	f89d 200d 	ldrb.w	r2, [sp, #13]
   1a730:	705a      	strb	r2, [r3, #1]
        fap->fa_off = meta_flash_area.offset;
   1a732:	f8dd 200e 	ldr.w	r2, [sp, #14]
   1a736:	605a      	str	r2, [r3, #4]
        fap->fa_size = meta_flash_area.size;
   1a738:	f8dd 2012 	ldr.w	r2, [sp, #18]
   1a73c:	609a      	str	r2, [r3, #8]
        (*out_num_areas)++;
   1a73e:	6823      	ldr	r3, [r4, #0]
   1a740:	3301      	adds	r3, #1
   1a742:	6023      	str	r3, [r4, #0]
        if (*out_num_areas >= max_areas) {
   1a744:	e7d2      	b.n	1a6ec <flash_map_read_mfg+0x18>
            return -1;
   1a746:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1a74a:	e7db      	b.n	1a704 <flash_map_read_mfg+0x30>

0001a74c <flash_area_open>:
{
   1a74c:	b430      	push	{r4, r5}
    if (flash_map == NULL) {
   1a74e:	4b0d      	ldr	r3, [pc, #52]	; (1a784 <flash_area_open+0x38>)
   1a750:	681d      	ldr	r5, [r3, #0]
   1a752:	b1a5      	cbz	r5, 1a77e <flash_area_open+0x32>
    for (i = 0; i < flash_map_entries; i++) {
   1a754:	2300      	movs	r3, #0
   1a756:	4a0c      	ldr	r2, [pc, #48]	; (1a788 <flash_area_open+0x3c>)
   1a758:	6812      	ldr	r2, [r2, #0]
   1a75a:	429a      	cmp	r2, r3
   1a75c:	dd0b      	ble.n	1a776 <flash_area_open+0x2a>
        area = flash_map + i;
   1a75e:	eb03 0443 	add.w	r4, r3, r3, lsl #1
   1a762:	00a2      	lsls	r2, r4, #2
   1a764:	18ac      	adds	r4, r5, r2
        if (area->fa_id == id) {
   1a766:	5caa      	ldrb	r2, [r5, r2]
   1a768:	4282      	cmp	r2, r0
   1a76a:	d001      	beq.n	1a770 <flash_area_open+0x24>
    for (i = 0; i < flash_map_entries; i++) {
   1a76c:	3301      	adds	r3, #1
   1a76e:	e7f2      	b.n	1a756 <flash_area_open+0xa>
            *fap = area;
   1a770:	600c      	str	r4, [r1, #0]
            return 0;
   1a772:	2000      	movs	r0, #0
   1a774:	e001      	b.n	1a77a <flash_area_open+0x2e>
    return SYS_ENOENT;
   1a776:	f06f 0003 	mvn.w	r0, #3
}
   1a77a:	bc30      	pop	{r4, r5}
   1a77c:	4770      	bx	lr
        return SYS_EACCES;
   1a77e:	f06f 0006 	mvn.w	r0, #6
   1a782:	e7fa      	b.n	1a77a <flash_area_open+0x2e>
   1a784:	20009f24 	.word	0x20009f24
   1a788:	20009f20 	.word	0x20009f20

0001a78c <flash_area_read>:
{
   1a78c:	b538      	push	{r3, r4, r5, lr}
    if (off > fa->fa_size || off + len > fa->fa_size) {
   1a78e:	6884      	ldr	r4, [r0, #8]
   1a790:	428c      	cmp	r4, r1
   1a792:	d308      	bcc.n	1a7a6 <flash_area_read+0x1a>
   1a794:	18cd      	adds	r5, r1, r3
   1a796:	42ac      	cmp	r4, r5
   1a798:	d308      	bcc.n	1a7ac <flash_area_read+0x20>
    return hal_flash_read(fa->fa_device_id, fa->fa_off + off, dst, len);
   1a79a:	6844      	ldr	r4, [r0, #4]
   1a79c:	4421      	add	r1, r4
   1a79e:	7840      	ldrb	r0, [r0, #1]
   1a7a0:	f000 f9c8 	bl	1ab34 <hal_flash_read>
}
   1a7a4:	bd38      	pop	{r3, r4, r5, pc}
        return -1;
   1a7a6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1a7aa:	e7fb      	b.n	1a7a4 <flash_area_read+0x18>
   1a7ac:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1a7b0:	e7f8      	b.n	1a7a4 <flash_area_read+0x18>
	...

0001a7b4 <flash_map_init>:

void
flash_map_init(void)
{
   1a7b4:	b510      	push	{r4, lr}
   1a7b6:	b084      	sub	sp, #16

    int num_areas;
    int rc;

    /* Ensure this function only gets called by sysinit. */
    SYSINIT_ASSERT_ACTIVE();
   1a7b8:	4b14      	ldr	r3, [pc, #80]	; (1a80c <flash_map_init+0x58>)
   1a7ba:	781b      	ldrb	r3, [r3, #0]
   1a7bc:	b303      	cbz	r3, 1a800 <flash_map_init+0x4c>

    rc = hal_flash_init();
   1a7be:	f000 f9a5 	bl	1ab0c <hal_flash_init>
    SYSINIT_PANIC_ASSERT(rc == 0);
   1a7c2:	b138      	cbz	r0, 1a7d4 <flash_map_init+0x20>
   1a7c4:	2000      	movs	r0, #0
   1a7c6:	9000      	str	r0, [sp, #0]
   1a7c8:	4b11      	ldr	r3, [pc, #68]	; (1a810 <flash_map_init+0x5c>)
   1a7ca:	681c      	ldr	r4, [r3, #0]
   1a7cc:	4603      	mov	r3, r0
   1a7ce:	4602      	mov	r2, r0
   1a7d0:	4601      	mov	r1, r0
   1a7d2:	47a0      	blx	r4
     *    In particular, a FLASH_AREA_BOOTLOADER entry is required for the boot
     *    MMR, as well as an entry for each extended MMR.
     * 2. If we fail to read the flash map from the MMRs, the system continues
     *    to use the default flash map.
     */
    flash_map = sysflash_map_dflt;
   1a7d4:	4b0f      	ldr	r3, [pc, #60]	; (1a814 <flash_map_init+0x60>)
   1a7d6:	4a10      	ldr	r2, [pc, #64]	; (1a818 <flash_map_init+0x64>)
   1a7d8:	601a      	str	r2, [r3, #0]
    flash_map_entries = sizeof sysflash_map_dflt / sizeof sysflash_map_dflt[0];
   1a7da:	4b10      	ldr	r3, [pc, #64]	; (1a81c <flash_map_init+0x68>)
   1a7dc:	2206      	movs	r2, #6
   1a7de:	601a      	str	r2, [r3, #0]

    /* Attempt to read the flash map from the manufacturing meta regions.  On
     * success, use the new flash map instead of the default hardcoded one.
     */
    rc = flash_map_read_mfg(sizeof mfg_areas / sizeof mfg_areas[0],
   1a7e0:	aa03      	add	r2, sp, #12
   1a7e2:	490f      	ldr	r1, [pc, #60]	; (1a820 <flash_map_init+0x6c>)
   1a7e4:	200a      	movs	r0, #10
   1a7e6:	f7ff ff75 	bl	1a6d4 <flash_map_read_mfg>
                            mfg_areas, &num_areas);
    if (rc == 0 && num_areas > 0) {
   1a7ea:	b938      	cbnz	r0, 1a7fc <flash_map_init+0x48>
   1a7ec:	9b03      	ldr	r3, [sp, #12]
   1a7ee:	2b00      	cmp	r3, #0
   1a7f0:	dd04      	ble.n	1a7fc <flash_map_init+0x48>
        flash_map = mfg_areas;
   1a7f2:	4a08      	ldr	r2, [pc, #32]	; (1a814 <flash_map_init+0x60>)
   1a7f4:	490a      	ldr	r1, [pc, #40]	; (1a820 <flash_map_init+0x6c>)
   1a7f6:	6011      	str	r1, [r2, #0]
        flash_map_entries = num_areas;
   1a7f8:	4a08      	ldr	r2, [pc, #32]	; (1a81c <flash_map_init+0x68>)
   1a7fa:	6013      	str	r3, [r2, #0]
    }
}
   1a7fc:	b004      	add	sp, #16
   1a7fe:	bd10      	pop	{r4, pc}
    SYSINIT_ASSERT_ACTIVE();
   1a800:	461a      	mov	r2, r3
   1a802:	4619      	mov	r1, r3
   1a804:	4618      	mov	r0, r3
   1a806:	f7fc fee3 	bl	175d0 <__assert_func>
   1a80a:	bf00      	nop
   1a80c:	20009d5c 	.word	0x20009d5c
   1a810:	200000fc 	.word	0x200000fc
   1a814:	20009f24 	.word	0x20009f24
   1a818:	0001f9dc 	.word	0x0001f9dc
   1a81c:	20009f20 	.word	0x20009f20
   1a820:	20009cbc 	.word	0x20009cbc

0001a824 <modlog_init>:

#else /* LOG_FULL */

void
modlog_init(void)
{ }
   1a824:	4770      	bx	lr
	...

0001a828 <mfg_seek_next_aux>:
 *                                  for reading.
 *                              Other MFG error code on failure.
 */
static int
mfg_seek_next_aux(struct mfg_reader *reader)
{
   1a828:	b530      	push	{r4, r5, lr}
   1a82a:	b083      	sub	sp, #12
    const struct flash_area *fap;
    const struct mfg_mmr *mmr;
    int rc;

    if (reader->mmr_idx >= mfg_num_mmrs) {
   1a82c:	7885      	ldrb	r5, [r0, #2]
   1a82e:	4b21      	ldr	r3, [pc, #132]	; (1a8b4 <mfg_seek_next_aux+0x8c>)
   1a830:	681b      	ldr	r3, [r3, #0]
   1a832:	429d      	cmp	r5, r3
   1a834:	da32      	bge.n	1a89c <mfg_seek_next_aux+0x74>
   1a836:	4604      	mov	r4, r0
        return SYS_EINVAL;
    }

    mmr = &mfg_mmrs[reader->mmr_idx];

    rc = flash_area_open(mmr->area_id, &fap);
   1a838:	eb05 0245 	add.w	r2, r5, r5, lsl #1
   1a83c:	0093      	lsls	r3, r2, #2
   1a83e:	a901      	add	r1, sp, #4
   1a840:	4a1d      	ldr	r2, [pc, #116]	; (1a8b8 <mfg_seek_next_aux+0x90>)
   1a842:	5cd0      	ldrb	r0, [r2, r3]
   1a844:	f7ff ff82 	bl	1a74c <flash_area_open>
    if (rc != 0) {
   1a848:	bb58      	cbnz	r0, 1a8a2 <mfg_seek_next_aux+0x7a>
        return SYS_EIO;
    }

    if (reader->offset == 0) {
   1a84a:	6862      	ldr	r2, [r4, #4]
   1a84c:	b9c2      	cbnz	r2, 1a880 <mfg_seek_next_aux+0x58>
        /* First seek; advance to the start of the MMR. */
        reader->offset = mmr->offset;
   1a84e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   1a852:	00aa      	lsls	r2, r5, #2
   1a854:	4b18      	ldr	r3, [pc, #96]	; (1a8b8 <mfg_seek_next_aux+0x90>)
   1a856:	4413      	add	r3, r2
   1a858:	685b      	ldr	r3, [r3, #4]
   1a85a:	6063      	str	r3, [r4, #4]
    } else {
        /* Follow-up seek; skip the current TLV. */
        reader->offset += MFG_META_TLV_SZ + reader->cur_tlv.size;
    }

    if (reader->offset >= fap->fa_size - MFG_META_FOOTER_SZ) {
   1a85c:	6861      	ldr	r1, [r4, #4]
   1a85e:	9801      	ldr	r0, [sp, #4]
   1a860:	6883      	ldr	r3, [r0, #8]
   1a862:	3b08      	subs	r3, #8
   1a864:	4299      	cmp	r1, r3
   1a866:	d310      	bcc.n	1a88a <mfg_seek_next_aux+0x62>
        /* Reached end of the MMR; advance to the next MMR if one exists. */
        if (reader->mmr_idx + 1 >= mfg_num_mmrs) {
   1a868:	78a3      	ldrb	r3, [r4, #2]
   1a86a:	1c59      	adds	r1, r3, #1
   1a86c:	4a11      	ldr	r2, [pc, #68]	; (1a8b4 <mfg_seek_next_aux+0x8c>)
   1a86e:	6812      	ldr	r2, [r2, #0]
   1a870:	4291      	cmp	r1, r2
   1a872:	da19      	bge.n	1a8a8 <mfg_seek_next_aux+0x80>
            rc = SYS_EDONE;
        } else {
            reader->offset = 0;
   1a874:	2200      	movs	r2, #0
   1a876:	6062      	str	r2, [r4, #4]
            reader->mmr_idx++;
   1a878:	70a1      	strb	r1, [r4, #2]
            rc = SYS_EAGAIN;
   1a87a:	f06f 0305 	mvn.w	r3, #5
   1a87e:	e015      	b.n	1a8ac <mfg_seek_next_aux+0x84>
        reader->offset += MFG_META_TLV_SZ + reader->cur_tlv.size;
   1a880:	7863      	ldrb	r3, [r4, #1]
   1a882:	4413      	add	r3, r2
   1a884:	3302      	adds	r3, #2
   1a886:	6063      	str	r3, [r4, #4]
   1a888:	e7e8      	b.n	1a85c <mfg_seek_next_aux+0x34>
        }
        goto done;
    }

    /* Read current TLV header. */
    rc = flash_area_read(fap, reader->offset, &reader->cur_tlv,
   1a88a:	2302      	movs	r3, #2
   1a88c:	4622      	mov	r2, r4
   1a88e:	f7ff ff7d 	bl	1a78c <flash_area_read>
                         MFG_META_TLV_SZ);
    if (rc != 0) {
   1a892:	4603      	mov	r3, r0
   1a894:	b150      	cbz	r0, 1a8ac <mfg_seek_next_aux+0x84>
        rc = SYS_EIO;
   1a896:	f06f 0304 	mvn.w	r3, #4
   1a89a:	e007      	b.n	1a8ac <mfg_seek_next_aux+0x84>
        return SYS_EINVAL;
   1a89c:	f06f 0301 	mvn.w	r3, #1
   1a8a0:	e004      	b.n	1a8ac <mfg_seek_next_aux+0x84>
        return SYS_EIO;
   1a8a2:	f06f 0304 	mvn.w	r3, #4
   1a8a6:	e001      	b.n	1a8ac <mfg_seek_next_aux+0x84>
            rc = SYS_EDONE;
   1a8a8:	f06f 030e 	mvn.w	r3, #14
    }

done:
    flash_area_close(fap);
    return rc;
}
   1a8ac:	4618      	mov	r0, r3
   1a8ae:	b003      	add	sp, #12
   1a8b0:	bd30      	pop	{r4, r5, pc}
   1a8b2:	bf00      	nop
   1a8b4:	20009d50 	.word	0x20009d50
   1a8b8:	20009d38 	.word	0x20009d38

0001a8bc <mfg_read_mmr>:
/**
 * Reads an MMR from the end of the specified flash area.
 */
static int
mfg_read_mmr(uint8_t area_id, struct mfg_mmr *out_mmr)
{
   1a8bc:	b530      	push	{r4, r5, lr}
   1a8be:	b085      	sub	sp, #20
   1a8c0:	4605      	mov	r5, r0
   1a8c2:	460c      	mov	r4, r1
    const struct flash_area *fap;
    struct mfg_meta_footer ftr;
    int rc;

    rc = flash_area_open(area_id, &fap);
   1a8c4:	a903      	add	r1, sp, #12
   1a8c6:	f7ff ff41 	bl	1a74c <flash_area_open>
    if (rc != 0) {
   1a8ca:	b9e8      	cbnz	r0, 1a908 <mfg_read_mmr+0x4c>
        return SYS_EIO;
    }

    /* Read the MMR footer. */
    rc = flash_area_read(fap, fap->fa_size - sizeof ftr, &ftr, sizeof ftr);
   1a8cc:	9803      	ldr	r0, [sp, #12]
   1a8ce:	6881      	ldr	r1, [r0, #8]
   1a8d0:	2308      	movs	r3, #8
   1a8d2:	aa01      	add	r2, sp, #4
   1a8d4:	3908      	subs	r1, #8
   1a8d6:	f7ff ff59 	bl	1a78c <flash_area_read>
    flash_area_close(fap);

    if (rc != 0) {
   1a8da:	4601      	mov	r1, r0
   1a8dc:	b9b8      	cbnz	r0, 1a90e <mfg_read_mmr+0x52>
        return SYS_EIO;
    }

    if (ftr.magic != MFG_META_MAGIC) {
   1a8de:	9a02      	ldr	r2, [sp, #8]
   1a8e0:	4b11      	ldr	r3, [pc, #68]	; (1a928 <mfg_read_mmr+0x6c>)
   1a8e2:	429a      	cmp	r2, r3
   1a8e4:	d116      	bne.n	1a914 <mfg_read_mmr+0x58>
        return SYS_ENODEV;
    }

    if (ftr.version != MFG_META_VERSION) {
   1a8e6:	f89d 3006 	ldrb.w	r3, [sp, #6]
   1a8ea:	2b02      	cmp	r3, #2
   1a8ec:	d115      	bne.n	1a91a <mfg_read_mmr+0x5e>
        return SYS_ENOTSUP;
    }

    if (ftr.size > fap->fa_size) {
   1a8ee:	f8bd 2004 	ldrh.w	r2, [sp, #4]
   1a8f2:	9b03      	ldr	r3, [sp, #12]
   1a8f4:	689b      	ldr	r3, [r3, #8]
   1a8f6:	429a      	cmp	r2, r3
   1a8f8:	d812      	bhi.n	1a920 <mfg_read_mmr+0x64>
        return SYS_ENODEV;
    }

    *out_mmr = (struct mfg_mmr) {
        .area_id = area_id,
        .offset = fap->fa_size - ftr.size,
   1a8fa:	1a9b      	subs	r3, r3, r2
    *out_mmr = (struct mfg_mmr) {
   1a8fc:	7025      	strb	r5, [r4, #0]
   1a8fe:	6063      	str	r3, [r4, #4]
   1a900:	60a2      	str	r2, [r4, #8]
        .size = ftr.size,
    };

    return 0;
}
   1a902:	4608      	mov	r0, r1
   1a904:	b005      	add	sp, #20
   1a906:	bd30      	pop	{r4, r5, pc}
        return SYS_EIO;
   1a908:	f06f 0104 	mvn.w	r1, #4
   1a90c:	e7f9      	b.n	1a902 <mfg_read_mmr+0x46>
        return SYS_EIO;
   1a90e:	f06f 0104 	mvn.w	r1, #4
   1a912:	e7f6      	b.n	1a902 <mfg_read_mmr+0x46>
        return SYS_ENODEV;
   1a914:	f06f 0108 	mvn.w	r1, #8
   1a918:	e7f3      	b.n	1a902 <mfg_read_mmr+0x46>
        return SYS_ENOTSUP;
   1a91a:	f06f 010b 	mvn.w	r1, #11
   1a91e:	e7f0      	b.n	1a902 <mfg_read_mmr+0x46>
        return SYS_ENODEV;
   1a920:	f06f 0108 	mvn.w	r1, #8
   1a924:	e7ed      	b.n	1a902 <mfg_read_mmr+0x46>
   1a926:	bf00      	nop
   1a928:	3bb2a269 	.word	0x3bb2a269

0001a92c <mfg_read_next_mmr>:
 * Reads an MMR from the end of the specified flash area.  On success, the
 * global MMR list is populated with the result for subsequent reading.
 */
static int
mfg_read_next_mmr(uint8_t area_id)
{
   1a92c:	b508      	push	{r3, lr}
    int rc;
    int i;

    /* Detect if this MMR has already been read. */
    for (i = 0; i < mfg_num_mmrs; i++) {
   1a92e:	2300      	movs	r3, #0
   1a930:	4a11      	ldr	r2, [pc, #68]	; (1a978 <mfg_read_next_mmr+0x4c>)
   1a932:	6812      	ldr	r2, [r2, #0]
   1a934:	429a      	cmp	r2, r3
   1a936:	dd08      	ble.n	1a94a <mfg_read_next_mmr+0x1e>
        if (mfg_mmrs[i].area_id == area_id) {
   1a938:	eb03 0143 	add.w	r1, r3, r3, lsl #1
   1a93c:	008a      	lsls	r2, r1, #2
   1a93e:	490f      	ldr	r1, [pc, #60]	; (1a97c <mfg_read_next_mmr+0x50>)
   1a940:	5c8a      	ldrb	r2, [r1, r2]
   1a942:	4282      	cmp	r2, r0
   1a944:	d011      	beq.n	1a96a <mfg_read_next_mmr+0x3e>
    for (i = 0; i < mfg_num_mmrs; i++) {
   1a946:	3301      	adds	r3, #1
   1a948:	e7f2      	b.n	1a930 <mfg_read_next_mmr+0x4>
            return SYS_EALREADY;
        }
    }

    if (mfg_num_mmrs >= MYNEWT_VAL(MFG_MAX_MMRS)) {
   1a94a:	2a01      	cmp	r2, #1
   1a94c:	dc11      	bgt.n	1a972 <mfg_read_next_mmr+0x46>
        return SYS_ENOMEM;
    }

    rc = mfg_read_mmr(area_id, &mfg_mmrs[mfg_num_mmrs]);
   1a94e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
   1a952:	0093      	lsls	r3, r2, #2
   1a954:	4909      	ldr	r1, [pc, #36]	; (1a97c <mfg_read_next_mmr+0x50>)
   1a956:	4419      	add	r1, r3
   1a958:	f7ff ffb0 	bl	1a8bc <mfg_read_mmr>
    if (rc != 0) {
   1a95c:	4603      	mov	r3, r0
   1a95e:	b930      	cbnz	r0, 1a96e <mfg_read_next_mmr+0x42>
        return rc;
    }

    mfg_num_mmrs++;
   1a960:	4905      	ldr	r1, [pc, #20]	; (1a978 <mfg_read_next_mmr+0x4c>)
   1a962:	680a      	ldr	r2, [r1, #0]
   1a964:	3201      	adds	r2, #1
   1a966:	600a      	str	r2, [r1, #0]
    return 0;
   1a968:	e001      	b.n	1a96e <mfg_read_next_mmr+0x42>
            return SYS_EALREADY;
   1a96a:	f06f 030a 	mvn.w	r3, #10
}
   1a96e:	4618      	mov	r0, r3
   1a970:	bd08      	pop	{r3, pc}
        return SYS_ENOMEM;
   1a972:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1a976:	e7fa      	b.n	1a96e <mfg_read_next_mmr+0x42>
   1a978:	20009d50 	.word	0x20009d50
   1a97c:	20009d38 	.word	0x20009d38

0001a980 <mfg_open_flash_area>:
{
   1a980:	b508      	push	{r3, lr}
    assert(reader->mmr_idx < mfg_num_mmrs);
   1a982:	7883      	ldrb	r3, [r0, #2]
   1a984:	4a0b      	ldr	r2, [pc, #44]	; (1a9b4 <mfg_open_flash_area+0x34>)
   1a986:	6812      	ldr	r2, [r2, #0]
   1a988:	4293      	cmp	r3, r2
   1a98a:	da0a      	bge.n	1a9a2 <mfg_open_flash_area+0x22>
    rc = flash_area_open(mmr->area_id, fap);
   1a98c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   1a990:	009a      	lsls	r2, r3, #2
   1a992:	4b09      	ldr	r3, [pc, #36]	; (1a9b8 <mfg_open_flash_area+0x38>)
   1a994:	5c98      	ldrb	r0, [r3, r2]
   1a996:	f7ff fed9 	bl	1a74c <flash_area_open>
    if (rc != 0) {
   1a99a:	4603      	mov	r3, r0
   1a99c:	b938      	cbnz	r0, 1a9ae <mfg_open_flash_area+0x2e>
}
   1a99e:	4618      	mov	r0, r3
   1a9a0:	bd08      	pop	{r3, pc}
    assert(reader->mmr_idx < mfg_num_mmrs);
   1a9a2:	2300      	movs	r3, #0
   1a9a4:	461a      	mov	r2, r3
   1a9a6:	4619      	mov	r1, r3
   1a9a8:	4618      	mov	r0, r3
   1a9aa:	f7fc fe11 	bl	175d0 <__assert_func>
        return SYS_EIO;
   1a9ae:	f06f 0304 	mvn.w	r3, #4
   1a9b2:	e7f4      	b.n	1a99e <mfg_open_flash_area+0x1e>
   1a9b4:	20009d50 	.word	0x20009d50
   1a9b8:	20009d38 	.word	0x20009d38

0001a9bc <mfg_read_tlv_body>:
{
   1a9bc:	b570      	push	{r4, r5, r6, lr}
   1a9be:	b082      	sub	sp, #8
   1a9c0:	4606      	mov	r6, r0
   1a9c2:	460c      	mov	r4, r1
   1a9c4:	4615      	mov	r5, r2
    rc = mfg_open_flash_area(reader, &fap);
   1a9c6:	a901      	add	r1, sp, #4
   1a9c8:	f7ff ffda 	bl	1a980 <mfg_open_flash_area>
    if (rc != 0) {
   1a9cc:	4603      	mov	r3, r0
   1a9ce:	b110      	cbz	r0, 1a9d6 <mfg_read_tlv_body+0x1a>
}
   1a9d0:	4618      	mov	r0, r3
   1a9d2:	b002      	add	sp, #8
   1a9d4:	bd70      	pop	{r4, r5, r6, pc}
    memset(dst, 0, max_size);
   1a9d6:	462a      	mov	r2, r5
   1a9d8:	2100      	movs	r1, #0
   1a9da:	4620      	mov	r0, r4
   1a9dc:	f7fe f9fb 	bl	18dd6 <memset>
    read_sz = min(max_size, reader->cur_tlv.size);
   1a9e0:	7873      	ldrb	r3, [r6, #1]
    rc = flash_area_read(fap, reader->offset + MFG_META_TLV_SZ, dst, read_sz);
   1a9e2:	6871      	ldr	r1, [r6, #4]
   1a9e4:	42ab      	cmp	r3, r5
   1a9e6:	bfa8      	it	ge
   1a9e8:	462b      	movge	r3, r5
   1a9ea:	4622      	mov	r2, r4
   1a9ec:	3102      	adds	r1, #2
   1a9ee:	9801      	ldr	r0, [sp, #4]
   1a9f0:	f7ff fecc 	bl	1a78c <flash_area_read>
    if (rc != 0) {
   1a9f4:	4603      	mov	r3, r0
   1a9f6:	2800      	cmp	r0, #0
   1a9f8:	d0ea      	beq.n	1a9d0 <mfg_read_tlv_body+0x14>
        return SYS_EIO;
   1a9fa:	f06f 0304 	mvn.w	r3, #4
   1a9fe:	e7e7      	b.n	1a9d0 <mfg_read_tlv_body+0x14>

0001aa00 <mfg_seek_next>:
{
   1aa00:	b510      	push	{r4, lr}
   1aa02:	4604      	mov	r4, r0
        rc = mfg_seek_next_aux(reader);
   1aa04:	4620      	mov	r0, r4
   1aa06:	f7ff ff0f 	bl	1a828 <mfg_seek_next_aux>
    } while (rc == SYS_EAGAIN);
   1aa0a:	f110 0f06 	cmn.w	r0, #6
   1aa0e:	d0f9      	beq.n	1aa04 <mfg_seek_next+0x4>
}
   1aa10:	bd10      	pop	{r4, pc}

0001aa12 <mfg_seek_next_with_type>:
{
   1aa12:	b538      	push	{r3, r4, r5, lr}
   1aa14:	4604      	mov	r4, r0
   1aa16:	460d      	mov	r5, r1
        rc = mfg_seek_next(reader);
   1aa18:	4620      	mov	r0, r4
   1aa1a:	f7ff fff1 	bl	1aa00 <mfg_seek_next>
        if (rc != 0) {
   1aa1e:	4602      	mov	r2, r0
   1aa20:	b910      	cbnz	r0, 1aa28 <mfg_seek_next_with_type+0x16>
        if (reader->cur_tlv.type == type) {
   1aa22:	7823      	ldrb	r3, [r4, #0]
   1aa24:	42ab      	cmp	r3, r5
   1aa26:	d1f7      	bne.n	1aa18 <mfg_seek_next_with_type+0x6>
}
   1aa28:	4610      	mov	r0, r2
   1aa2a:	bd38      	pop	{r3, r4, r5, pc}

0001aa2c <mfg_read_tlv_flash_area>:
{
   1aa2c:	b508      	push	{r3, lr}
    return mfg_read_tlv_body(reader, out_mfa, sizeof *out_mfa);
   1aa2e:	220a      	movs	r2, #10
   1aa30:	f7ff ffc4 	bl	1a9bc <mfg_read_tlv_body>
}
   1aa34:	bd08      	pop	{r3, pc}

0001aa36 <mfg_read_tlv_mmr_ref>:
{
   1aa36:	b508      	push	{r3, lr}
    return mfg_read_tlv_body(reader, out_mr, sizeof *out_mr);
   1aa38:	2201      	movs	r2, #1
   1aa3a:	f7ff ffbf 	bl	1a9bc <mfg_read_tlv_body>
}
   1aa3e:	bd08      	pop	{r3, pc}

0001aa40 <mfg_init>:
 * called before any TLVs can be read.  No-op if this function has already
 * executed successfully.
 */
void
mfg_init(void)
{
   1aa40:	b508      	push	{r3, lr}
    int rc;

    if (mfg_initialized) {
   1aa42:	4b0b      	ldr	r3, [pc, #44]	; (1aa70 <mfg_init+0x30>)
   1aa44:	781b      	ldrb	r3, [r3, #0]
   1aa46:	b94b      	cbnz	r3, 1aa5c <mfg_init+0x1c>
        return;
    }
    mfg_initialized = true;
   1aa48:	4b09      	ldr	r3, [pc, #36]	; (1aa70 <mfg_init+0x30>)
   1aa4a:	2201      	movs	r2, #1
   1aa4c:	701a      	strb	r2, [r3, #0]

    /* Ensure this function only gets called by sysinit. */
    SYSINIT_ASSERT_ACTIVE();
   1aa4e:	4b09      	ldr	r3, [pc, #36]	; (1aa74 <mfg_init+0x34>)
   1aa50:	781b      	ldrb	r3, [r3, #0]
   1aa52:	b123      	cbz	r3, 1aa5e <mfg_init+0x1e>

    /* Read the first MMR from the boot loader area. */
    rc = mfg_read_next_mmr(FLASH_AREA_BOOTLOADER);
   1aa54:	2000      	movs	r0, #0
   1aa56:	f7ff ff69 	bl	1a92c <mfg_read_next_mmr>
    if (rc != 0) {
   1aa5a:	b128      	cbz	r0, 1aa68 <mfg_init+0x28>

    return;

err:
    MFG_LOG(ERROR, "failed to read MMRs: rc=%d", rc);
}
   1aa5c:	bd08      	pop	{r3, pc}
    SYSINIT_ASSERT_ACTIVE();
   1aa5e:	461a      	mov	r2, r3
   1aa60:	4619      	mov	r1, r3
   1aa62:	4618      	mov	r0, r3
   1aa64:	f7fc fdb4 	bl	175d0 <__assert_func>
    rc = mfg_read_mmr_refs();
   1aa68:	f000 f80e 	bl	1aa88 <mfg_read_mmr_refs>
err:
   1aa6c:	e7f6      	b.n	1aa5c <mfg_init+0x1c>
   1aa6e:	bf00      	nop
   1aa70:	20009d34 	.word	0x20009d34
   1aa74:	20009d5c 	.word	0x20009d5c

0001aa78 <mfg_open>:
{
   1aa78:	b510      	push	{r4, lr}
   1aa7a:	4604      	mov	r4, r0
    mfg_init();
   1aa7c:	f7ff ffe0 	bl	1aa40 <mfg_init>
    *out_reader = (struct mfg_reader) { 0 };
   1aa80:	2300      	movs	r3, #0
   1aa82:	6023      	str	r3, [r4, #0]
   1aa84:	6063      	str	r3, [r4, #4]
}
   1aa86:	bd10      	pop	{r4, pc}

0001aa88 <mfg_read_mmr_refs>:
{
   1aa88:	b500      	push	{lr}
   1aa8a:	b085      	sub	sp, #20
    mfg_open(&reader);
   1aa8c:	a801      	add	r0, sp, #4
   1aa8e:	f7ff fff3 	bl	1aa78 <mfg_open>
        rc = mfg_seek_next_with_type(&reader, MFG_META_TLV_TYPE_MMR_REF);
   1aa92:	2104      	movs	r1, #4
   1aa94:	eb0d 0001 	add.w	r0, sp, r1
   1aa98:	f7ff ffbb 	bl	1aa12 <mfg_seek_next_with_type>
   1aa9c:	4603      	mov	r3, r0
        switch (rc) {
   1aa9e:	f110 0f0f 	cmn.w	r0, #15
   1aaa2:	d004      	beq.n	1aaae <mfg_read_mmr_refs+0x26>
   1aaa4:	b128      	cbz	r0, 1aab2 <mfg_read_mmr_refs+0x2a>
}
   1aaa6:	4618      	mov	r0, r3
   1aaa8:	b005      	add	sp, #20
   1aaaa:	f85d fb04 	ldr.w	pc, [sp], #4
            return 0;
   1aaae:	2300      	movs	r3, #0
   1aab0:	e7f9      	b.n	1aaa6 <mfg_read_mmr_refs+0x1e>
        rc = mfg_read_tlv_mmr_ref(&reader, &mmr_ref);
   1aab2:	a903      	add	r1, sp, #12
   1aab4:	a801      	add	r0, sp, #4
   1aab6:	f7ff ffbe 	bl	1aa36 <mfg_read_tlv_mmr_ref>
        if (rc != 0) {
   1aaba:	4603      	mov	r3, r0
   1aabc:	2800      	cmp	r0, #0
   1aabe:	d1f2      	bne.n	1aaa6 <mfg_read_mmr_refs+0x1e>
        rc = mfg_read_next_mmr(mmr_ref.area_id);
   1aac0:	f89d 000c 	ldrb.w	r0, [sp, #12]
   1aac4:	f7ff ff32 	bl	1a92c <mfg_read_next_mmr>
        if (rc != 0 && rc != SYS_EALREADY) {
   1aac8:	4603      	mov	r3, r0
   1aaca:	2800      	cmp	r0, #0
   1aacc:	d0e1      	beq.n	1aa92 <mfg_read_mmr_refs+0xa>
   1aace:	f110 0f0b 	cmn.w	r0, #11
   1aad2:	d0de      	beq.n	1aa92 <mfg_read_mmr_refs+0xa>
   1aad4:	e7e7      	b.n	1aaa6 <mfg_read_mmr_refs+0x1e>
	...

0001aad8 <__wrap_coap_receive>:
}

///////////////////////////////////////////////////////////////////////////////
//  Other Functions

int __wrap_coap_receive(/* struct os_mbuf **mp */) {
   1aad8:	b508      	push	{r3, lr}
    //  We override the default coap_receive() with an empty function so that we will 
    //  NOT link in any modules for receiving and parsing CoAP requests, to save ROM space.
    //  We only need to transmit CoAP requests.  The overriding is done via the Linker Flag
    //  "-Wl,-wrap,coap_receive" in apps/my_sensor_app/pkg.yml
    console_printf("coap_receive NOT IMPLEMENTED\n");
   1aada:	4803      	ldr	r0, [pc, #12]	; (1aae8 <__wrap_coap_receive+0x10>)
   1aadc:	f7fb feb0 	bl	16840 <console_printf>
    return -1;
}
   1aae0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1aae4:	bd08      	pop	{r3, pc}
   1aae6:	bf00      	nop
   1aae8:	0001fa24 	.word	0x0001fa24

0001aaec <_fini>:
//  From https://arobenko.gitbooks.io/bare_metal_cpp/content/compiler_output/static.html.
void* __dso_handle = NULL;
int __aeabi_atexit(void *object, void (*destructor)(void *), void *dso_handle) { return 0; }

#ifndef ARCH_rv32imac  //  If not RISC-V...
void _fini(void) { }   //  Define the function to be called when main() exits
   1aaec:	4770      	bx	lr

0001aaee <hal_flash_check_addr>:
}

static int
hal_flash_check_addr(const struct hal_flash *hf, uint32_t addr)
{
    if (addr < hf->hf_base_addr || addr > hf->hf_base_addr + hf->hf_size) {
   1aaee:	6843      	ldr	r3, [r0, #4]
   1aaf0:	428b      	cmp	r3, r1
   1aaf2:	d808      	bhi.n	1ab06 <hal_flash_check_addr+0x18>
   1aaf4:	6882      	ldr	r2, [r0, #8]
   1aaf6:	4413      	add	r3, r2
   1aaf8:	428b      	cmp	r3, r1
   1aafa:	d301      	bcc.n	1ab00 <hal_flash_check_addr+0x12>
        return SYS_EINVAL;
    }
    return 0;
   1aafc:	2000      	movs	r0, #0
}
   1aafe:	4770      	bx	lr
        return SYS_EINVAL;
   1ab00:	f06f 0001 	mvn.w	r0, #1
   1ab04:	4770      	bx	lr
   1ab06:	f06f 0001 	mvn.w	r0, #1
   1ab0a:	4770      	bx	lr

0001ab0c <hal_flash_init>:
{
   1ab0c:	b538      	push	{r3, r4, r5, lr}
    int rc = 0;
   1ab0e:	2500      	movs	r5, #0
    for (i = 0; ; i++) {
   1ab10:	462c      	mov	r4, r5
   1ab12:	e001      	b.n	1ab18 <hal_flash_init+0xc>
   1ab14:	3401      	adds	r4, #1
   1ab16:	b2e4      	uxtb	r4, r4
        hf = hal_bsp_flash_dev(i);
   1ab18:	4620      	mov	r0, r4
   1ab1a:	f7fe fce3 	bl	194e4 <hal_bsp_flash_dev>
        if (!hf) {
   1ab1e:	b138      	cbz	r0, 1ab30 <hal_flash_init+0x24>
        if (hf->hf_itf->hff_init(hf)) {
   1ab20:	6802      	ldr	r2, [r0, #0]
   1ab22:	6952      	ldr	r2, [r2, #20]
   1ab24:	4790      	blx	r2
   1ab26:	2800      	cmp	r0, #0
   1ab28:	d0f4      	beq.n	1ab14 <hal_flash_init+0x8>
            rc = SYS_EIO;
   1ab2a:	f06f 0504 	mvn.w	r5, #4
   1ab2e:	e7f1      	b.n	1ab14 <hal_flash_init+0x8>
}
   1ab30:	4628      	mov	r0, r5
   1ab32:	bd38      	pop	{r3, r4, r5, pc}

0001ab34 <hal_flash_read>:

int
hal_flash_read(uint8_t id, uint32_t address, void *dst, uint32_t num_bytes)
{
   1ab34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1ab38:	460d      	mov	r5, r1
   1ab3a:	4690      	mov	r8, r2
   1ab3c:	461e      	mov	r6, r3
    const struct hal_flash *hf;
    int rc;

    hf = hal_bsp_flash_dev(id);
   1ab3e:	f7fe fcd1 	bl	194e4 <hal_bsp_flash_dev>
    if (!hf) {
   1ab42:	b1c0      	cbz	r0, 1ab76 <hal_flash_read+0x42>
   1ab44:	4604      	mov	r4, r0
        return SYS_EINVAL;
    }
    if (hal_flash_check_addr(hf, address) ||
   1ab46:	4629      	mov	r1, r5
   1ab48:	f7ff ffd1 	bl	1aaee <hal_flash_check_addr>
   1ab4c:	b9b0      	cbnz	r0, 1ab7c <hal_flash_read+0x48>
      hal_flash_check_addr(hf, address + num_bytes)) {
   1ab4e:	19a9      	adds	r1, r5, r6
   1ab50:	4620      	mov	r0, r4
   1ab52:	f7ff ffcc 	bl	1aaee <hal_flash_check_addr>
    if (hal_flash_check_addr(hf, address) ||
   1ab56:	b9a0      	cbnz	r0, 1ab82 <hal_flash_read+0x4e>
        return SYS_EINVAL;
    }

    rc = hf->hf_itf->hff_read(hf, address, dst, num_bytes);
   1ab58:	6823      	ldr	r3, [r4, #0]
   1ab5a:	681f      	ldr	r7, [r3, #0]
   1ab5c:	4633      	mov	r3, r6
   1ab5e:	4642      	mov	r2, r8
   1ab60:	4629      	mov	r1, r5
   1ab62:	4620      	mov	r0, r4
   1ab64:	47b8      	blx	r7
    if (rc != 0) {
   1ab66:	4603      	mov	r3, r0
   1ab68:	b910      	cbnz	r0, 1ab70 <hal_flash_read+0x3c>
        return SYS_EIO;
    }

    return 0;
}
   1ab6a:	4618      	mov	r0, r3
   1ab6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return SYS_EIO;
   1ab70:	f06f 0304 	mvn.w	r3, #4
   1ab74:	e7f9      	b.n	1ab6a <hal_flash_read+0x36>
        return SYS_EINVAL;
   1ab76:	f06f 0301 	mvn.w	r3, #1
   1ab7a:	e7f6      	b.n	1ab6a <hal_flash_read+0x36>
        return SYS_EINVAL;
   1ab7c:	f06f 0301 	mvn.w	r3, #1
   1ab80:	e7f3      	b.n	1ab6a <hal_flash_read+0x36>
   1ab82:	f06f 0301 	mvn.w	r3, #1
   1ab86:	e7f0      	b.n	1ab6a <hal_flash_read+0x36>

0001ab88 <hal_bsp_hw_id_len>:

int
hal_bsp_hw_id_len(void)
{
    return sizeof(NRF_FICR->DEVICEID) + sizeof(NRF_FICR->DEVICEADDR);
}
   1ab88:	2010      	movs	r0, #16
   1ab8a:	4770      	bx	lr

0001ab8c <hal_bsp_hw_id>:
 * These values are generated at random.
 * DEVICEID[0-1] and DEVICEADDR[0-1].
 */
int
hal_bsp_hw_id(uint8_t *id, int max_len)
{
   1ab8c:	b570      	push	{r4, r5, r6, lr}
   1ab8e:	4606      	mov	r6, r0
   1ab90:	460c      	mov	r4, r1
    int len, cnt;

    cnt = min(sizeof(NRF_FICR->DEVICEID), max_len);
   1ab92:	460d      	mov	r5, r1
   1ab94:	2908      	cmp	r1, #8
   1ab96:	bf28      	it	cs
   1ab98:	2508      	movcs	r5, #8
    memcpy(id, (void *)NRF_FICR->DEVICEID, cnt);
   1ab9a:	462a      	mov	r2, r5
   1ab9c:	4906      	ldr	r1, [pc, #24]	; (1abb8 <hal_bsp_hw_id+0x2c>)
   1ab9e:	f7fe f90d 	bl	18dbc <memcpy>
    len = cnt;

    cnt = min(sizeof(NRF_FICR->DEVICEADDR), max_len - len);
   1aba2:	1b64      	subs	r4, r4, r5
   1aba4:	2c08      	cmp	r4, #8
   1aba6:	bf28      	it	cs
   1aba8:	2408      	movcs	r4, #8
    memcpy(id + len, (void *)NRF_FICR->DEVICEADDR, cnt);
   1abaa:	4622      	mov	r2, r4
   1abac:	4903      	ldr	r1, [pc, #12]	; (1abbc <hal_bsp_hw_id+0x30>)
   1abae:	1970      	adds	r0, r6, r5
   1abb0:	f7fe f904 	bl	18dbc <memcpy>

    return len + cnt;
}
   1abb4:	1928      	adds	r0, r5, r4
   1abb6:	bd70      	pop	{r4, r5, r6, pc}
   1abb8:	10000060 	.word	0x10000060
   1abbc:	100000a4 	.word	0x100000a4

0001abc0 <sprintf>:
#include <stdio.h>
#include <unistd.h>
#include <stdint.h>

int sprintf(char *buffer, const char *format, ...)
{
   1abc0:	b40e      	push	{r1, r2, r3}
   1abc2:	b500      	push	{lr}
   1abc4:	b082      	sub	sp, #8
   1abc6:	ab03      	add	r3, sp, #12
   1abc8:	f853 2b04 	ldr.w	r2, [r3], #4
	va_list ap;
	int rv;

	va_start(ap, format);
   1abcc:	9301      	str	r3, [sp, #4]
	rv = vsnprintf(buffer, SIZE_MAX/2, format, ap);
   1abce:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
   1abd2:	f7fe fbef 	bl	193b4 <vsnprintf>
	va_end(ap);

	return rv;
}
   1abd6:	b002      	add	sp, #8
   1abd8:	f85d eb04 	ldr.w	lr, [sp], #4
   1abdc:	b003      	add	sp, #12
   1abde:	4770      	bx	lr

0001abe0 <__aeabi_uldivmod>:
   1abe0:	b953      	cbnz	r3, 1abf8 <__aeabi_uldivmod+0x18>
   1abe2:	b94a      	cbnz	r2, 1abf8 <__aeabi_uldivmod+0x18>
   1abe4:	2900      	cmp	r1, #0
   1abe6:	bf08      	it	eq
   1abe8:	2800      	cmpeq	r0, #0
   1abea:	bf1c      	itt	ne
   1abec:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
   1abf0:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   1abf4:	f000 b972 	b.w	1aedc <__aeabi_idiv0>
   1abf8:	f1ad 0c08 	sub.w	ip, sp, #8
   1abfc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   1ac00:	f000 f806 	bl	1ac10 <__udivmoddi4>
   1ac04:	f8dd e004 	ldr.w	lr, [sp, #4]
   1ac08:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1ac0c:	b004      	add	sp, #16
   1ac0e:	4770      	bx	lr

0001ac10 <__udivmoddi4>:
   1ac10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1ac14:	9e08      	ldr	r6, [sp, #32]
   1ac16:	4604      	mov	r4, r0
   1ac18:	4688      	mov	r8, r1
   1ac1a:	2b00      	cmp	r3, #0
   1ac1c:	d14b      	bne.n	1acb6 <__udivmoddi4+0xa6>
   1ac1e:	428a      	cmp	r2, r1
   1ac20:	4615      	mov	r5, r2
   1ac22:	d967      	bls.n	1acf4 <__udivmoddi4+0xe4>
   1ac24:	fab2 f282 	clz	r2, r2
   1ac28:	b14a      	cbz	r2, 1ac3e <__udivmoddi4+0x2e>
   1ac2a:	f1c2 0720 	rsb	r7, r2, #32
   1ac2e:	fa01 f302 	lsl.w	r3, r1, r2
   1ac32:	fa20 f707 	lsr.w	r7, r0, r7
   1ac36:	4095      	lsls	r5, r2
   1ac38:	ea47 0803 	orr.w	r8, r7, r3
   1ac3c:	4094      	lsls	r4, r2
   1ac3e:	ea4f 4e15 	mov.w	lr, r5, lsr #16
   1ac42:	0c23      	lsrs	r3, r4, #16
   1ac44:	fbb8 f7fe 	udiv	r7, r8, lr
   1ac48:	fa1f fc85 	uxth.w	ip, r5
   1ac4c:	fb0e 8817 	mls	r8, lr, r7, r8
   1ac50:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   1ac54:	fb07 f10c 	mul.w	r1, r7, ip
   1ac58:	4299      	cmp	r1, r3
   1ac5a:	d909      	bls.n	1ac70 <__udivmoddi4+0x60>
   1ac5c:	18eb      	adds	r3, r5, r3
   1ac5e:	f107 30ff 	add.w	r0, r7, #4294967295	; 0xffffffff
   1ac62:	f080 811b 	bcs.w	1ae9c <__udivmoddi4+0x28c>
   1ac66:	4299      	cmp	r1, r3
   1ac68:	f240 8118 	bls.w	1ae9c <__udivmoddi4+0x28c>
   1ac6c:	3f02      	subs	r7, #2
   1ac6e:	442b      	add	r3, r5
   1ac70:	1a5b      	subs	r3, r3, r1
   1ac72:	b2a4      	uxth	r4, r4
   1ac74:	fbb3 f0fe 	udiv	r0, r3, lr
   1ac78:	fb0e 3310 	mls	r3, lr, r0, r3
   1ac7c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
   1ac80:	fb00 fc0c 	mul.w	ip, r0, ip
   1ac84:	45a4      	cmp	ip, r4
   1ac86:	d909      	bls.n	1ac9c <__udivmoddi4+0x8c>
   1ac88:	192c      	adds	r4, r5, r4
   1ac8a:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
   1ac8e:	f080 8107 	bcs.w	1aea0 <__udivmoddi4+0x290>
   1ac92:	45a4      	cmp	ip, r4
   1ac94:	f240 8104 	bls.w	1aea0 <__udivmoddi4+0x290>
   1ac98:	3802      	subs	r0, #2
   1ac9a:	442c      	add	r4, r5
   1ac9c:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
   1aca0:	eba4 040c 	sub.w	r4, r4, ip
   1aca4:	2700      	movs	r7, #0
   1aca6:	b11e      	cbz	r6, 1acb0 <__udivmoddi4+0xa0>
   1aca8:	40d4      	lsrs	r4, r2
   1acaa:	2300      	movs	r3, #0
   1acac:	e9c6 4300 	strd	r4, r3, [r6]
   1acb0:	4639      	mov	r1, r7
   1acb2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1acb6:	428b      	cmp	r3, r1
   1acb8:	d909      	bls.n	1acce <__udivmoddi4+0xbe>
   1acba:	2e00      	cmp	r6, #0
   1acbc:	f000 80eb 	beq.w	1ae96 <__udivmoddi4+0x286>
   1acc0:	2700      	movs	r7, #0
   1acc2:	e9c6 0100 	strd	r0, r1, [r6]
   1acc6:	4638      	mov	r0, r7
   1acc8:	4639      	mov	r1, r7
   1acca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1acce:	fab3 f783 	clz	r7, r3
   1acd2:	2f00      	cmp	r7, #0
   1acd4:	d147      	bne.n	1ad66 <__udivmoddi4+0x156>
   1acd6:	428b      	cmp	r3, r1
   1acd8:	d302      	bcc.n	1ace0 <__udivmoddi4+0xd0>
   1acda:	4282      	cmp	r2, r0
   1acdc:	f200 80fa 	bhi.w	1aed4 <__udivmoddi4+0x2c4>
   1ace0:	1a84      	subs	r4, r0, r2
   1ace2:	eb61 0303 	sbc.w	r3, r1, r3
   1ace6:	2001      	movs	r0, #1
   1ace8:	4698      	mov	r8, r3
   1acea:	2e00      	cmp	r6, #0
   1acec:	d0e0      	beq.n	1acb0 <__udivmoddi4+0xa0>
   1acee:	e9c6 4800 	strd	r4, r8, [r6]
   1acf2:	e7dd      	b.n	1acb0 <__udivmoddi4+0xa0>
   1acf4:	b902      	cbnz	r2, 1acf8 <__udivmoddi4+0xe8>
   1acf6:	deff      	udf	#255	; 0xff
   1acf8:	fab2 f282 	clz	r2, r2
   1acfc:	2a00      	cmp	r2, #0
   1acfe:	f040 808f 	bne.w	1ae20 <__udivmoddi4+0x210>
   1ad02:	1b49      	subs	r1, r1, r5
   1ad04:	ea4f 4e15 	mov.w	lr, r5, lsr #16
   1ad08:	fa1f f885 	uxth.w	r8, r5
   1ad0c:	2701      	movs	r7, #1
   1ad0e:	fbb1 fcfe 	udiv	ip, r1, lr
   1ad12:	0c23      	lsrs	r3, r4, #16
   1ad14:	fb0e 111c 	mls	r1, lr, ip, r1
   1ad18:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   1ad1c:	fb08 f10c 	mul.w	r1, r8, ip
   1ad20:	4299      	cmp	r1, r3
   1ad22:	d907      	bls.n	1ad34 <__udivmoddi4+0x124>
   1ad24:	18eb      	adds	r3, r5, r3
   1ad26:	f10c 30ff 	add.w	r0, ip, #4294967295	; 0xffffffff
   1ad2a:	d202      	bcs.n	1ad32 <__udivmoddi4+0x122>
   1ad2c:	4299      	cmp	r1, r3
   1ad2e:	f200 80cd 	bhi.w	1aecc <__udivmoddi4+0x2bc>
   1ad32:	4684      	mov	ip, r0
   1ad34:	1a59      	subs	r1, r3, r1
   1ad36:	b2a3      	uxth	r3, r4
   1ad38:	fbb1 f0fe 	udiv	r0, r1, lr
   1ad3c:	fb0e 1410 	mls	r4, lr, r0, r1
   1ad40:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
   1ad44:	fb08 f800 	mul.w	r8, r8, r0
   1ad48:	45a0      	cmp	r8, r4
   1ad4a:	d907      	bls.n	1ad5c <__udivmoddi4+0x14c>
   1ad4c:	192c      	adds	r4, r5, r4
   1ad4e:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
   1ad52:	d202      	bcs.n	1ad5a <__udivmoddi4+0x14a>
   1ad54:	45a0      	cmp	r8, r4
   1ad56:	f200 80b6 	bhi.w	1aec6 <__udivmoddi4+0x2b6>
   1ad5a:	4618      	mov	r0, r3
   1ad5c:	eba4 0408 	sub.w	r4, r4, r8
   1ad60:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
   1ad64:	e79f      	b.n	1aca6 <__udivmoddi4+0x96>
   1ad66:	f1c7 0c20 	rsb	ip, r7, #32
   1ad6a:	40bb      	lsls	r3, r7
   1ad6c:	fa22 fe0c 	lsr.w	lr, r2, ip
   1ad70:	ea4e 0e03 	orr.w	lr, lr, r3
   1ad74:	fa01 f407 	lsl.w	r4, r1, r7
   1ad78:	fa20 f50c 	lsr.w	r5, r0, ip
   1ad7c:	fa21 f30c 	lsr.w	r3, r1, ip
   1ad80:	ea4f 481e 	mov.w	r8, lr, lsr #16
   1ad84:	4325      	orrs	r5, r4
   1ad86:	fbb3 f9f8 	udiv	r9, r3, r8
   1ad8a:	0c2c      	lsrs	r4, r5, #16
   1ad8c:	fb08 3319 	mls	r3, r8, r9, r3
   1ad90:	fa1f fa8e 	uxth.w	sl, lr
   1ad94:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
   1ad98:	fb09 f40a 	mul.w	r4, r9, sl
   1ad9c:	429c      	cmp	r4, r3
   1ad9e:	fa02 f207 	lsl.w	r2, r2, r7
   1ada2:	fa00 f107 	lsl.w	r1, r0, r7
   1ada6:	d90b      	bls.n	1adc0 <__udivmoddi4+0x1b0>
   1ada8:	eb1e 0303 	adds.w	r3, lr, r3
   1adac:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
   1adb0:	f080 8087 	bcs.w	1aec2 <__udivmoddi4+0x2b2>
   1adb4:	429c      	cmp	r4, r3
   1adb6:	f240 8084 	bls.w	1aec2 <__udivmoddi4+0x2b2>
   1adba:	f1a9 0902 	sub.w	r9, r9, #2
   1adbe:	4473      	add	r3, lr
   1adc0:	1b1b      	subs	r3, r3, r4
   1adc2:	b2ad      	uxth	r5, r5
   1adc4:	fbb3 f0f8 	udiv	r0, r3, r8
   1adc8:	fb08 3310 	mls	r3, r8, r0, r3
   1adcc:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
   1add0:	fb00 fa0a 	mul.w	sl, r0, sl
   1add4:	45a2      	cmp	sl, r4
   1add6:	d908      	bls.n	1adea <__udivmoddi4+0x1da>
   1add8:	eb1e 0404 	adds.w	r4, lr, r4
   1addc:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
   1ade0:	d26b      	bcs.n	1aeba <__udivmoddi4+0x2aa>
   1ade2:	45a2      	cmp	sl, r4
   1ade4:	d969      	bls.n	1aeba <__udivmoddi4+0x2aa>
   1ade6:	3802      	subs	r0, #2
   1ade8:	4474      	add	r4, lr
   1adea:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   1adee:	fba0 8902 	umull	r8, r9, r0, r2
   1adf2:	eba4 040a 	sub.w	r4, r4, sl
   1adf6:	454c      	cmp	r4, r9
   1adf8:	46c2      	mov	sl, r8
   1adfa:	464b      	mov	r3, r9
   1adfc:	d354      	bcc.n	1aea8 <__udivmoddi4+0x298>
   1adfe:	d051      	beq.n	1aea4 <__udivmoddi4+0x294>
   1ae00:	2e00      	cmp	r6, #0
   1ae02:	d069      	beq.n	1aed8 <__udivmoddi4+0x2c8>
   1ae04:	ebb1 050a 	subs.w	r5, r1, sl
   1ae08:	eb64 0403 	sbc.w	r4, r4, r3
   1ae0c:	fa04 fc0c 	lsl.w	ip, r4, ip
   1ae10:	40fd      	lsrs	r5, r7
   1ae12:	40fc      	lsrs	r4, r7
   1ae14:	ea4c 0505 	orr.w	r5, ip, r5
   1ae18:	e9c6 5400 	strd	r5, r4, [r6]
   1ae1c:	2700      	movs	r7, #0
   1ae1e:	e747      	b.n	1acb0 <__udivmoddi4+0xa0>
   1ae20:	f1c2 0320 	rsb	r3, r2, #32
   1ae24:	fa20 f703 	lsr.w	r7, r0, r3
   1ae28:	4095      	lsls	r5, r2
   1ae2a:	fa01 f002 	lsl.w	r0, r1, r2
   1ae2e:	fa21 f303 	lsr.w	r3, r1, r3
   1ae32:	ea4f 4e15 	mov.w	lr, r5, lsr #16
   1ae36:	4338      	orrs	r0, r7
   1ae38:	0c01      	lsrs	r1, r0, #16
   1ae3a:	fbb3 f7fe 	udiv	r7, r3, lr
   1ae3e:	fa1f f885 	uxth.w	r8, r5
   1ae42:	fb0e 3317 	mls	r3, lr, r7, r3
   1ae46:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
   1ae4a:	fb07 f308 	mul.w	r3, r7, r8
   1ae4e:	428b      	cmp	r3, r1
   1ae50:	fa04 f402 	lsl.w	r4, r4, r2
   1ae54:	d907      	bls.n	1ae66 <__udivmoddi4+0x256>
   1ae56:	1869      	adds	r1, r5, r1
   1ae58:	f107 3cff 	add.w	ip, r7, #4294967295	; 0xffffffff
   1ae5c:	d22f      	bcs.n	1aebe <__udivmoddi4+0x2ae>
   1ae5e:	428b      	cmp	r3, r1
   1ae60:	d92d      	bls.n	1aebe <__udivmoddi4+0x2ae>
   1ae62:	3f02      	subs	r7, #2
   1ae64:	4429      	add	r1, r5
   1ae66:	1acb      	subs	r3, r1, r3
   1ae68:	b281      	uxth	r1, r0
   1ae6a:	fbb3 f0fe 	udiv	r0, r3, lr
   1ae6e:	fb0e 3310 	mls	r3, lr, r0, r3
   1ae72:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
   1ae76:	fb00 f308 	mul.w	r3, r0, r8
   1ae7a:	428b      	cmp	r3, r1
   1ae7c:	d907      	bls.n	1ae8e <__udivmoddi4+0x27e>
   1ae7e:	1869      	adds	r1, r5, r1
   1ae80:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
   1ae84:	d217      	bcs.n	1aeb6 <__udivmoddi4+0x2a6>
   1ae86:	428b      	cmp	r3, r1
   1ae88:	d915      	bls.n	1aeb6 <__udivmoddi4+0x2a6>
   1ae8a:	3802      	subs	r0, #2
   1ae8c:	4429      	add	r1, r5
   1ae8e:	1ac9      	subs	r1, r1, r3
   1ae90:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
   1ae94:	e73b      	b.n	1ad0e <__udivmoddi4+0xfe>
   1ae96:	4637      	mov	r7, r6
   1ae98:	4630      	mov	r0, r6
   1ae9a:	e709      	b.n	1acb0 <__udivmoddi4+0xa0>
   1ae9c:	4607      	mov	r7, r0
   1ae9e:	e6e7      	b.n	1ac70 <__udivmoddi4+0x60>
   1aea0:	4618      	mov	r0, r3
   1aea2:	e6fb      	b.n	1ac9c <__udivmoddi4+0x8c>
   1aea4:	4541      	cmp	r1, r8
   1aea6:	d2ab      	bcs.n	1ae00 <__udivmoddi4+0x1f0>
   1aea8:	ebb8 0a02 	subs.w	sl, r8, r2
   1aeac:	eb69 020e 	sbc.w	r2, r9, lr
   1aeb0:	3801      	subs	r0, #1
   1aeb2:	4613      	mov	r3, r2
   1aeb4:	e7a4      	b.n	1ae00 <__udivmoddi4+0x1f0>
   1aeb6:	4660      	mov	r0, ip
   1aeb8:	e7e9      	b.n	1ae8e <__udivmoddi4+0x27e>
   1aeba:	4618      	mov	r0, r3
   1aebc:	e795      	b.n	1adea <__udivmoddi4+0x1da>
   1aebe:	4667      	mov	r7, ip
   1aec0:	e7d1      	b.n	1ae66 <__udivmoddi4+0x256>
   1aec2:	4681      	mov	r9, r0
   1aec4:	e77c      	b.n	1adc0 <__udivmoddi4+0x1b0>
   1aec6:	3802      	subs	r0, #2
   1aec8:	442c      	add	r4, r5
   1aeca:	e747      	b.n	1ad5c <__udivmoddi4+0x14c>
   1aecc:	f1ac 0c02 	sub.w	ip, ip, #2
   1aed0:	442b      	add	r3, r5
   1aed2:	e72f      	b.n	1ad34 <__udivmoddi4+0x124>
   1aed4:	4638      	mov	r0, r7
   1aed6:	e708      	b.n	1acea <__udivmoddi4+0xda>
   1aed8:	4637      	mov	r7, r6
   1aeda:	e6e9      	b.n	1acb0 <__udivmoddi4+0xa0>

0001aedc <__aeabi_idiv0>:
   1aedc:	4770      	bx	lr
   1aede:	bf00      	nop

0001aee0 <__aeabi_memclr>:
   1aee0:	2200      	movs	r2, #0
   1aee2:	f000 b803 	b.w	1aeec <__aeabi_memset>
   1aee6:	bf00      	nop

0001aee8 <__aeabi_memcpy>:
   1aee8:	f7fd bf68 	b.w	18dbc <memcpy>

0001aeec <__aeabi_memset>:
   1aeec:	b470      	push	{r4, r5, r6}
   1aeee:	0784      	lsls	r4, r0, #30
   1aef0:	d046      	beq.n	1af80 <__aeabi_memset+0x94>
   1aef2:	1e4c      	subs	r4, r1, #1
   1aef4:	2900      	cmp	r1, #0
   1aef6:	d041      	beq.n	1af7c <__aeabi_memset+0x90>
   1aef8:	b2d5      	uxtb	r5, r2
   1aefa:	4603      	mov	r3, r0
   1aefc:	e002      	b.n	1af04 <__aeabi_memset+0x18>
   1aefe:	1e61      	subs	r1, r4, #1
   1af00:	b3e4      	cbz	r4, 1af7c <__aeabi_memset+0x90>
   1af02:	460c      	mov	r4, r1
   1af04:	f803 5b01 	strb.w	r5, [r3], #1
   1af08:	0799      	lsls	r1, r3, #30
   1af0a:	d1f8      	bne.n	1aefe <__aeabi_memset+0x12>
   1af0c:	2c03      	cmp	r4, #3
   1af0e:	d92e      	bls.n	1af6e <__aeabi_memset+0x82>
   1af10:	b2d5      	uxtb	r5, r2
   1af12:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   1af16:	2c0f      	cmp	r4, #15
   1af18:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   1af1c:	d919      	bls.n	1af52 <__aeabi_memset+0x66>
   1af1e:	4626      	mov	r6, r4
   1af20:	f103 0110 	add.w	r1, r3, #16
   1af24:	3e10      	subs	r6, #16
   1af26:	2e0f      	cmp	r6, #15
   1af28:	f841 5c10 	str.w	r5, [r1, #-16]
   1af2c:	f841 5c0c 	str.w	r5, [r1, #-12]
   1af30:	f841 5c08 	str.w	r5, [r1, #-8]
   1af34:	f841 5c04 	str.w	r5, [r1, #-4]
   1af38:	f101 0110 	add.w	r1, r1, #16
   1af3c:	d8f2      	bhi.n	1af24 <__aeabi_memset+0x38>
   1af3e:	f1a4 0110 	sub.w	r1, r4, #16
   1af42:	f021 010f 	bic.w	r1, r1, #15
   1af46:	f004 040f 	and.w	r4, r4, #15
   1af4a:	3110      	adds	r1, #16
   1af4c:	2c03      	cmp	r4, #3
   1af4e:	440b      	add	r3, r1
   1af50:	d90d      	bls.n	1af6e <__aeabi_memset+0x82>
   1af52:	461e      	mov	r6, r3
   1af54:	4621      	mov	r1, r4
   1af56:	3904      	subs	r1, #4
   1af58:	2903      	cmp	r1, #3
   1af5a:	f846 5b04 	str.w	r5, [r6], #4
   1af5e:	d8fa      	bhi.n	1af56 <__aeabi_memset+0x6a>
   1af60:	1f21      	subs	r1, r4, #4
   1af62:	f021 0103 	bic.w	r1, r1, #3
   1af66:	3104      	adds	r1, #4
   1af68:	440b      	add	r3, r1
   1af6a:	f004 0403 	and.w	r4, r4, #3
   1af6e:	b12c      	cbz	r4, 1af7c <__aeabi_memset+0x90>
   1af70:	b2d2      	uxtb	r2, r2
   1af72:	441c      	add	r4, r3
   1af74:	f803 2b01 	strb.w	r2, [r3], #1
   1af78:	42a3      	cmp	r3, r4
   1af7a:	d1fb      	bne.n	1af74 <__aeabi_memset+0x88>
   1af7c:	bc70      	pop	{r4, r5, r6}
   1af7e:	4770      	bx	lr
   1af80:	460c      	mov	r4, r1
   1af82:	4603      	mov	r3, r0
   1af84:	e7c2      	b.n	1af0c <__aeabi_memset+0x20>
   1af86:	6f74      	.short	0x6f74
   1af88:	20686375 	.word	0x20686375
   1af8c:	20746f6e 	.word	0x20746f6e
   1af90:	646e6168 	.word	0x646e6168
   1af94:	0a64656c 	.word	0x0a64656c
   1af98:	20505344 	.word	0x20505344
   1af9c:	6c696166 	.word	0x6c696166
   1afa0:	20484354 	.word	0x20484354
   1afa4:	6c696166 	.word	0x6c696166
   1afa8:	20544547 	.word	0x20544547
   1afac:	6c696166 	.word	0x6c696166
   1afb0:	204e5552 	.word	0x204e5552
   1afb4:	6c696166 	.word	0x6c696166
   1afb8:	74737572 	.word	0x74737572
   1afbc:	7070612f 	.word	0x7070612f
   1afc0:	6372732f 	.word	0x6372732f
   1afc4:	62696c2f 	.word	0x62696c2f
   1afc8:	0073722e 	.word	0x0073722e
   1afcc:	0001afb8 	.word	0x0001afb8
   1afd0:	00000013 	.word	0x00000013
   1afd4:	00000055 	.word	0x00000055
   1afd8:	00000005 	.word	0x00000005
   1afdc:	20505344 	.word	0x20505344
   1afe0:	74736574 	.word	0x74736574
   1afe4:	69616620 	.word	0x69616620
   1afe8:	0000006c 	.word	0x0000006c
   1afec:	0001afb8 	.word	0x0001afb8
   1aff0:	00000013 	.word	0x00000013
   1aff4:	0000005a 	.word	0x0000005a
   1aff8:	00000005 	.word	0x00000005
   1affc:	0001afb8 	.word	0x0001afb8
   1b000:	00000013 	.word	0x00000013
   1b004:	0000005e 	.word	0x0000005e
   1b008:	00000005 	.word	0x00000005
   1b00c:	0001afb8 	.word	0x0001afb8
   1b010:	00000013 	.word	0x00000013
   1b014:	00000071 	.word	0x00000071
   1b018:	0000000d 	.word	0x0000000d
   1b01c:	0001afb8 	.word	0x0001afb8
   1b020:	00000013 	.word	0x00000013
   1b024:	00000070 	.word	0x00000070
   1b028:	00000009 	.word	0x00000009
   1b02c:	696e6170 	.word	0x696e6170
   1b030:	2063      	.short	0x2063
   1b032:	6f6e      	.short	0x6f6e
   1b034:	636f6c20 	.word	0x636f6c20
   1b038:	0a          	.byte	0x0a
   1b039:	61          	.byte	0x61
   1b03a:	2074      	.short	0x2074
   1b03c:	6e696c20 	.word	0x6e696c20
   1b040:	2065      	.short	0x2065
   1b042:	000a      	.short	0x000a
   1b044:	0001afb8 	.word	0x0001afb8
   1b048:	00000013 	.word	0x00000013
   1b04c:	00000089 	.word	0x00000089
   1b050:	00000014 	.word	0x00000014
   1b054:	74737552 	.word	0x74737552
   1b058:	73657420 	.word	0x73657420
   1b05c:	69642074 	.word	0x69642074
   1b060:	616c7073 	.word	0x616c7073
   1b064:	0a79      	.short	0x0a79
   1b066:	2049      	.short	0x2049
   1b068:	50204d41 	.word	0x50204d41
   1b06c:	54454e49 	.word	0x54454e49
   1b070:	4d49      	.short	0x4d49
   1b072:	45          	.byte	0x45
   1b073:	63          	.byte	0x63
   1b074:	656c6c61 	.word	0x656c6c61
   1b078:	4f602064 	.word	0x4f602064
   1b07c:	6f697470 	.word	0x6f697470
   1b080:	753a3a6e 	.word	0x753a3a6e
   1b084:	6172776e 	.word	0x6172776e
   1b088:	60292870 	.word	0x60292870
   1b08c:	206e6f20 	.word	0x206e6f20
   1b090:	4e602061 	.word	0x4e602061
   1b094:	60656e6f 	.word	0x60656e6f
   1b098:	6c617620 	.word	0x6c617620
   1b09c:	6575      	.short	0x6575
   1b09e:	552f      	.short	0x552f
   1b0a0:	73726573 	.word	0x73726573
   1b0a4:	70754c2f 	.word	0x70754c2f
   1b0a8:	2e2f7970 	.word	0x2e2f7970
   1b0ac:	67726163 	.word	0x67726163
   1b0b0:	65722f6f 	.word	0x65722f6f
   1b0b4:	74736967 	.word	0x74736967
   1b0b8:	732f7972 	.word	0x732f7972
   1b0bc:	672f6372 	.word	0x672f6372
   1b0c0:	75687469 	.word	0x75687469
   1b0c4:	6f632e62 	.word	0x6f632e62
   1b0c8:	65312d6d 	.word	0x65312d6d
   1b0cc:	32366363 	.word	0x32366363
   1b0d0:	62643939 	.word	0x62643939
   1b0d4:	38636539 	.word	0x38636539
   1b0d8:	652f3332 	.word	0x652f3332
   1b0dc:	6465626d 	.word	0x6465626d
   1b0e0:	2d646564 	.word	0x2d646564
   1b0e4:	70617267 	.word	0x70617267
   1b0e8:	73636968 	.word	0x73636968
   1b0ec:	352e302d 	.word	0x352e302d
   1b0f0:	732f322e 	.word	0x732f322e
   1b0f4:	702f6372 	.word	0x702f6372
   1b0f8:	696d6972 	.word	0x696d6972
   1b0fc:	65766974 	.word	0x65766974
   1b100:	69632f73 	.word	0x69632f73
   1b104:	656c6372 	.word	0x656c6372
   1b108:	0073722e 	.word	0x0073722e
   1b10c:	0001b09e 	.word	0x0001b09e
   1b110:	0000006d 	.word	0x0000006d
   1b114:	00000091 	.word	0x00000091
   1b118:	00000010 	.word	0x00000010
   1b11c:	00000000 	.word	0x00000000

0001b120 <str.0>:
   1b120:	65747461 2074706d 6e206f74 74616765     attempt to negat
   1b130:	69772065 6f206874 66726576 00776f6c     e with overflow.
   1b140:	0001b09e 0000006d 00000092 00000010     ....m...........
   1b150:	0001b09e 0000006d 000000b1 00000016     ....m...........

0001b160 <str.1>:
   1b160:	65747461 2074706d 73206f74 72746275     attempt to subtr
   1b170:	20746361 68746977 65766f20 6f6c6672     act with overflo
   1b180:	00000077 00000000 00000000 00000000     w...............

0001b190 <str.2>:
   1b190:	65747461 2074706d 61206f74 77206464     attempt to add w
   1b1a0:	20687469 7265766f 776f6c66 0001b09e     ith overflow....
   1b1b0:	0000006d 000000b4 00000019 00000000     m...............

0001b1c0 <str.3>:
   1b1c0:	65747461 2074706d 6d206f74 69746c75     attempt to multi
   1b1d0:	20796c70 68746977 65766f20 6f6c6672     ply with overflo
   1b1e0:	00000077 0001b09e 0000006d 000000b5     w.......m.......
   1b1f0:	0000001f 0001b09e 0000006d 000000ba     ........m.......
   1b200:	00000017 0001b09e 0000006d 000000ba     ........m.......
   1b210:	00000021 0001b09e 0000006d 000000bc     !.......m.......
   1b220:	00000023 0001b09e 0000006d 000000bc     #.......m.......
   1b230:	0000003f 0001b09e 0000006d 000000c3     ?.......m.......
   1b240:	00000015 0001b09e 0000006d 000000c4     ........m.......
   1b250:	00000015 64726f42 63207265 726f6c6f     ....Border color
   1b260:	746f6e20 66656420 64656e69 0001b09e      not defined....
   1b270:	0000006d 000000c5 00000015 0001b09e     m...............
   1b280:	0000006d 000000c9 00000015 0001b09e     m...............
   1b290:	0000006d 000000ca 00000015 6c6c6946     m...........Fill
   1b2a0:	6c6f6320 6e20726f 6420746f 6e696665      color not defin
   1b2b0:	00006465 0001b09e 0000006d 000000cb     ed......m.......
   1b2c0:	00000015 0001b09e 0000006d 000000d1     ........m.......
   1b2d0:	0000000d 0001b09e 0000006d 000000d4     ........m.......
   1b2e0:	0000001a 0001b09e 0000006d 000000d5     ........m.......
   1b2f0:	00000011 77617264 6f6c6220 20736b63     ....draw blocks 
   1b300:	6c696166 6573552f 4c2f7372 79707075     fail/Users/Luppy
   1b310:	6e69502f 6d695465 69702f65 6974656e     /PineTime/pineti
   1b320:	722d656d 2d747375 656e796d 722f7477     me-rust-mynewt/r
   1b330:	2f747375 74656970 626d652d 65646465     ust/piet-embedde
   1b340:	69702f64 652d7465 6465626d 2d646564     d/piet-embedded-
   1b350:	70617267 73636968 6372732f 7369642f     graphics/src/dis
   1b360:	79616c70 0073722e 0001b304 00000063     play.rs.....c...
   1b370:	00000080 00000005 74737552 756f7420     ........Rust tou
   1b380:	73206863 6f736e65 00000a72 00000000     ch sensor.......
   1b390:	0001b38c 65737361 6f697472 6166206e     ....assertion fa
   1b3a0:	64656c69 2860203a 7466656c 203d3d20     iled: `(left == 
   1b3b0:	68676972 0a602974 656c2020 203a7466     right)`.  left: 
   1b3c0:	0a2c6060 67697220 203a7468 203a6060     ``,. right: ``: 
   1b3d0:	0001b394 0000002d 0001b3c1 0000000c     ....-...........
   1b3e0:	0001b3cd 00000003 0001b3d0 20515249     ............IRQ 
   1b3f0:	74696e69 69616620 0000006c 0001b3ec     init fail.......
   1b400:	0000000d 0001b3fc 0001b408 74737572     ............rust
   1b410:	7070612f 6372732f 756f742f 735f6863     /app/src/touch_s
   1b420:	6f736e65 73722e72 0001b40c 0000001c     ensor.rs........
   1b430:	0000003f 00000005 20633269 72646461     ?.......i2c addr
   1b440:	0001b40c 0000001c 0000004b 00000011     ........K.......
   1b450:	63756f74 74616468 61662061 00006c69     touchdata fail..
   1b460:	0001b40c 0000001c 00000056 00000009     ........V.......
   1b470:	0001b40c 0000001c 0000005a 00000031     ........Z...1...
   1b480:	64616572 756f7420 61646863 66206174     read touchdata f
   1b490:	006c6961 0001b40c 0000001c 00000089     ail.............
   1b4a0:	00000005 0001b40c 0000001c 00000095     ................
   1b4b0:	00000037 00000000 00000000 00000000     7...............

0001b4c0 <str.0>:
   1b4c0:	65747461 2074706d 6d206f74 69746c75     attempt to multi
   1b4d0:	20796c70 68746977 65766f20 6f6c6672     ply with overflo
   1b4e0:	00000077 0001b40c 0000001c 00000095     w...............
   1b4f0:	00000024 00000000 00000000 00000000     $...............

0001b500 <str.1>:
   1b500:	65747461 2074706d 61206f74 77206464     attempt to add w
   1b510:	20687469 7265766f 776f6c66 0001b40c     ith overflow....
   1b520:	0000001c 00000095 00000020 0001b40c     ........ .......
   1b530:	0000001c 00000099 00000009 0001b40c     ................
   1b540:	0000001c 0000009a 00000037 0001b40c     ........7.......
   1b550:	0000001c 0000009a 00000023 0001b40c     ........#.......
   1b560:	0000001c 0000009a 0000001f 0001b40c     ................
   1b570:	0000001c 0000009b 00000037 0001b40c     ........7.......
   1b580:	0000001c 0000009b 00000023 0001b40c     ........#.......
   1b590:	0000001c 0000009b 0000001f 0001b40c     ................
   1b5a0:	0000001c 0000009c 00000009 0001b40c     ................
   1b5b0:	0000001c 0000009e 00000037 0001b40c     ........7.......
   1b5c0:	0000001c 0000009e 00000023 0001b40c     ........#.......
   1b5d0:	0000001c 0000009e 0000001f 0001b40c     ................
   1b5e0:	0000001c 0000009f 00000037 0001b40c     ........7.......
   1b5f0:	0000001c 0000009f 00000023 0001b40c     ........#.......
   1b600:	0000001c 0000009f 0000001f 0001b40c     ................
   1b610:	0000001c 000000a0 00000009 0001b40c     ................
   1b620:	0000001c 000000a4 00000030 0001b40c     ........0.......
   1b630:	0000001c 000000a4 0000001a 0001b40c     ................
   1b640:	0000001c 000000a4 00000016 0001b40c     ................
   1b650:	0000001c 000000a3 00000009 0001b40c     ................
   1b660:	0000001c 000000a6 00000030 0001b40c     ........0.......
   1b670:	0000001c 000000a6 0000001a 0001b40c     ................
   1b680:	0000001c 000000a6 00000016 0001b40c     ................
   1b690:	0000001c 000000a5 00000009 0001b40c     ................
   1b6a0:	0000001c 000000aa 0000002d 0001b40c     ........-.......
   1b6b0:	0000001c 000000aa 0000001a 0001b40c     ................
   1b6c0:	0000001c 000000aa 00000016 0001b40c     ................
   1b6d0:	0000001c 000000a9 00000009 0001b40c     ................
   1b6e0:	0000001c 000000ac 0000002d 0001b40c     ........-.......
   1b6f0:	0000001c 000000ac 0000001a 0001b40c     ................
   1b700:	0000001c 000000ac 00000016 0001b40c     ................
   1b710:	0000001c 000000ab 00000009 0001b40c     ................
   1b720:	0000001c 000000af 0000000d 0001b40c     ................
   1b730:	0000001c 000000af 0000002c 20633269     ........,...i2c 
   1b740:	00667562 0001b40c 0000001c 000000f1     buf.............
   1b750:	00000005 0001b40c 0000001c 000000f2     ................
   1b760:	0000000d 0001b40c 0000001c 000000f2     ................
   1b770:	00000005 20633269 6c696166 7474610a     ....i2c fail.att
   1b780:	74706d65 206f7420 79706f63 6f726620     empt to copy fro
   1b790:	6e75206d 67696c61 2064656e 6e20726f     m unaligned or n
   1b7a0:	206c6c75 6e696f70 2f726574 74737572     ull pointer/rust
   1b7b0:	38362f63 61636639 35633130 61653161     c/689fca01c5a1ea
   1b7c0:	32643263 66623034 61613830 31383237     c2d240bf08aa7281
   1b7d0:	32613137 32326638 732f3538 6c2f6372     71a28f2285/src/l
   1b7e0:	6f636269 6d2f6572 6f726361 6f6d2f73     ibcore/macros/mo
   1b7f0:	73722e64 0001b7ab 00000049 0000000a     d.rs....I.......
   1b800:	00000009 65747461 2074706d 63206f74     ....attempt to c
   1b810:	2079706f 75206f74 696c616e 64656e67     opy to unaligned
   1b820:	20726f20 6c6c756e 696f7020 7265746e      or null pointer
   1b830:	65747461 2074706d 63206f74 2079706f     attempt to copy 
   1b840:	6f206f74 6c726576 69707061 6d20676e     to overlapping m
   1b850:	726f6d65 75722f79 2f637473 66393836     emory/rustc/689f
   1b860:	31306163 31613563 32636165 30343264     ca01c5a1eac2d240
   1b870:	38306662 32376161 31373138 66383261     bf08aa728171a28f
   1b880:	35383232 6372732f 62696c2f 65726f63     2285/src/libcore
   1b890:	746e692f 736e6972 2e736369 00007372     /intrinsics.rs..
   1b8a0:	0001b855 00000049 00000589 00000017     U...I...........

0001b8b0 <str.1>:
   1b8b0:	65747461 2074706d 63206f74 75636c61     attempt to calcu
   1b8c0:	6574616c 65687420 6d657220 646e6961     late the remaind
   1b8d0:	77207265 20687469 69642061 6f736976     er with a diviso
   1b8e0:	666f2072 72657a20 0000006f 0001b855     r of zero...U...
   1b8f0:	00000049 00000591 00000010 6573552f     I.........../Use
   1b900:	4c2f7372 79707075 6e69502f 6d695465     rs/Luppy/PineTim
   1b910:	69702f65 6974656e 722d656d 2d747375     e/pinetime-rust-
   1b920:	656e796d 722f7477 2f747375 74656970     mynewt/rust/piet
   1b930:	626d652d 65646465 69702f64 652d7465     -embedded/piet-e
   1b940:	6465626d 2d646564 70617267 73636968     mbedded-graphics
   1b950:	6372732f 7369642f 79616c70 0073722e     /src/display.rs.
   1b960:	0001b8fc 00000063 00000080 00000005     ....c...........
   1b970:	6573552f 4c2f7372 79707075 61632e2f     /Users/Luppy/.ca
   1b980:	2f6f6772 69676572 79727473 6372732f     rgo/registry/src
   1b990:	7469672f 2e627568 2d6d6f63 63636531     /github.com-1ecc
   1b9a0:	39393236 65396264 33323863 626d652f     6299db9ec823/emb
   1b9b0:	65646465 72672d64 69687061 302d7363     edded-graphics-0
   1b9c0:	322e352e 6372732f 6f6f632f 722e6472     .5.2/src/coord.r
   1b9d0:	00000073 0001b970 00000061 0000004f     s...p...a...O...
   1b9e0:	00000018 00000000 00000000 00000000     ................

0001b9f0 <str.1>:
   1b9f0:	65747461 2074706d 61206f74 77206464     attempt to add w
   1ba00:	20687469 7265766f 776f6c66 0001b970     ith overflowp...
   1ba10:	00000061 0000004f 0000002a 00000000     a...O...*.......

0001ba20 <str.2>:
   1ba20:	65747461 2074706d 73206f74 72746275     attempt to subtr
   1ba30:	20746361 68746977 65766f20 6f6c6672     act with overflo
   1ba40:	726e5577 68636165 656c6261 646e6920     wUnreachable ind
   1ba50:	00207865 0001ba41 00000012 0001ba54     ex .A.......T...
   1ba60:	0001b970 00000061 00000070 00000016     p...a...p.......
   1ba70:	6573552f 4c2f7372 79707075 61632e2f     /Users/Luppy/.ca
   1ba80:	2f6f6772 69676572 79727473 6372732f     rgo/registry/src
   1ba90:	7469672f 2e627568 2d6d6f63 63636531     /github.com-1ecc
   1baa0:	39393236 65396264 33323863 626d652f     6299db9ec823/emb
   1bab0:	65646465 72672d64 69687061 302d7363     edded-graphics-0
   1bac0:	322e352e 6372732f 6e6f662f 662f7374     .5.2/src/fonts/f
   1bad0:	31746e6f 36317832 0073722e 0001ba70     ont12x16.rs.p...
   1bae0:	0000006b 00000010 00000014 7375722f     k.........../rus
   1baf0:	362f6374 63663938 63313061 65316135     tc/689fca01c5a1e
   1bb00:	64326361 62303432 61383066 38323761     ac2d240bf08aa728
   1bb10:	61313731 32663832 2f353832 2f637273     171a28f2285/src/
   1bb20:	6362696c 2f65726f 72746e69 69736e69     libcore/intrinsi
   1bb30:	722e7363 00000073 0001baec 00000049     cs.rs.......I...
   1bb40:	00000589 00000017 00000000 00000000     ................

0001bb50 <str.0>:
   1bb50:	65747461 2074706d 63206f74 75636c61     attempt to calcu
   1bb60:	6574616c 65687420 6d657220 646e6961     late the remaind
   1bb70:	77207265 20687469 69642061 6f736976     er with a diviso
   1bb80:	666f2072 72657a20 6c61636f 2064656c     r of zerocalled 
   1bb90:	74704f60 3a6e6f69 776e753a 28706172     `Option::unwrap(
   1bba0:	6f206029 2061206e 6e6f4e60 76206065     )` on a `None` v
   1bbb0:	65756c61 65747461 2074706d 63206f74     alueattempt to c
   1bbc0:	2079706f 6d6f7266 616e7520 6e67696c     opy from unalign
   1bbd0:	6f206465 756e2072 70206c6c 746e696f     ed or null point
   1bbe0:	722f7265 63747375 3938362f 30616366     er/rustc/689fca0
   1bbf0:	61356331 63616531 34326432 30666230     1c5a1eac2d240bf0
   1bc00:	37616138 37313832 38326131 38323266     8aa728171a28f228
   1bc10:	72732f35 696c2f63 726f6362 616d2f65     5/src/libcore/ma
   1bc20:	736f7263 646f6d2f 0073722e 0001bbe2     cros/mod.rs.....
   1bc30:	00000049 0000000a 00000009 65747461     I...........atte
   1bc40:	2074706d 63206f74 2079706f 75206f74     mpt to copy to u
   1bc50:	696c616e 64656e67 20726f20 6c6c756e     naligned or null
   1bc60:	696f7020 7265746e 65747461 2074706d      pointerattempt 
   1bc70:	63206f74 2079706f 6f206f74 6c726576     to copy to overl
   1bc80:	69707061 6d20676e 726f6d65 75722f79     apping memory/ru
   1bc90:	2f637473 66393836 31306163 31613563     stc/689fca01c5a1
   1bca0:	32636165 30343264 38306662 32376161     eac2d240bf08aa72
   1bcb0:	31373138 66383261 35383232 6372732f     8171a28f2285/src
   1bcc0:	62696c2f 65726f63 746e692f 736e6972     /libcore/intrins
   1bcd0:	2e736369 00007372 0001bc8d 00000049     ics.rs......I...
   1bce0:	00000589 00000017 00000000 00000000     ................

0001bcf0 <str.0>:
   1bcf0:	65747461 2074706d 63206f74 75636c61     attempt to calcu
   1bd00:	6574616c 65687420 6d657220 646e6961     late the remaind
   1bd10:	77207265 20687469 69642061 6f736976     er with a diviso
   1bd20:	666f2072 72657a20 0000006f 0001bc8d     r of zero.......
   1bd30:	00000049 00000591 00000010 65747461     I...........atte
   1bd40:	2074706d 63206f74 74616572 6e752065     mpt to create un
   1bd50:	67696c61 2064656e 6e20726f 206c6c75     aligned or null 
   1bd60:	63696c73 74746165 74706d65 206f7420     sliceattempt to 
   1bd70:	61657263 73206574 6563696c 766f6320     create slice cov
   1bd80:	6e697265 74612067 61656c20 68207473     ering at least h
   1bd90:	20666c61 20656874 72646461 20737365     alf the address 
   1bda0:	63617073 6c616365 2064656c 74704f60     spacecalled `Opt
   1bdb0:	3a6e6f69 776e753a 28706172 6f206029     ion::unwrap()` o
   1bdc0:	2061206e 6e6f4e60 76206065 65756c61     n a `None` value
   1bdd0:	0001b38c 65737361 6f697472 6166206e     ....assertion fa
   1bde0:	64656c69 2860203a 7466656c 203d3d20     iled: `(left == 
   1bdf0:	68676972 0a602974 656c2020 203a7466     right)`.  left: 
   1be00:	0a2c6060 67697220 203a7468 203a6060     ``,. right: ``: 
   1be10:	0001bdd4 0000002d 0001be01 0000000c     ....-...........
   1be20:	0001be0d 00000003 0001be10 20697073     ............spi 
   1be30:	666e6f63 66206769 006c6961 0001be2c     config fail.,...
   1be40:	0000000f 0001be3c 0001be48 74737572     ....<...H...rust
   1be50:	6e796d2f 2f747765 2f637273 2e6c6168     /mynewt/src/hal.
   1be60:	00007372 0001be4c 00000016 00000016     rs..L...........
   1be70:	00000009 20697073 62616e65 6620656c     ....spi enable f
   1be80:	006c6961 0001be74 0000000f 0001be84     ail.t...........
   1be90:	0001be4c 00000016 00000019 00000009     L...............
   1bea0:	20697073 74696e69 69616620 0000006c     spi init fail...
   1beb0:	0001bea0 0000000d 0001beb0 0001be4c     ............L...
   1bec0:	00000016 0000001c 00000009 6f697067     ............gpio
   1bed0:	69616620 0000006c 0001becc 00000009      fail...........
   1bee0:	0001bed8 0001be4c 00000016 00000045     ....L.......E...
   1bef0:	00000009 0001be4c 00000016 0000006c     ....L.......l...
   1bf00:	0000001b 00000000 00000000 00000000     ................

0001bf10 <str.0>:
   1bf10:	65747461 2074706d 6d206f74 69746c75     attempt to multi
   1bf20:	20796c70 68746977 65766f20 6f6c6672     ply with overflo
   1bf30:	00000077 0001bf31 0001bf34 65737361     w...1...4...asse
   1bf40:	6f697472 6166206e 64656c69 2860203a     rtion failed: `(
   1bf50:	7466656c 203d3d20 68676972 0a602974     left == right)`.
   1bf60:	656c2020 203a7466 0a2c6060 67697220       left: ``,. rig
   1bf70:	203a7468 203a6060 0001bf3c 0000002d     ht: ``: <...-...
   1bf80:	0001bf69 0000000c 0001bf75 00000003     i.......u.......
   1bf90:	0001bf78 6e206f6e 006c6c75 0001bf94     x...no null.....
   1bfa0:	00000007 0001bf9c 0001bfa8 74737572     ............rust
   1bfb0:	6e796d2f 2f747765 2f637273 2e62696c     /mynewt/src/lib.
   1bfc0:	00007372 0001bfac 00000016 000000db     rs..............
   1bfd0:	00000011 656d6f53 656e6f4e 000104e3     ....SomeNone....
   1bfe0:	00000004 00000004 0000bd49 000104db     ........I.......
   1bff0:	00000004 00000004 00010509 0000d0f9     ................
   1c000:	00000002 00000002 0000dab3 0000d17b     ............{...
   1c010:	00000000 00000001 0000c2ed 6c6c6163     ............call
   1c020:	60206465 75736552 3a3a746c 72776e75     ed `Result::unwr
   1c030:	29287061 6e6f2060 206e6120 72724560     ap()` on an `Err
   1c040:	61762060 2865756c 6c616329 2064656c     ` value()called 
   1c050:	74704f60 3a6e6f69 776e753a 28706172     `Option::unwrap(
   1c060:	6f206029 2061206e 6e6f4e60 76206065     )` on a `None` v
   1c070:	65756c61 00000060 0001c074 6573552f     alue`...t.../Use
   1c080:	4c2f7372 79707075 61632e2f 2f6f6772     rs/Luppy/.cargo/
   1c090:	69676572 79727473 6372732f 7469672f     registry/src/git
   1c0a0:	2e627568 2d6d6f63 63636531 39393236     hub.com-1ecc6299
   1c0b0:	65396264 33323863 626d652f 65646465     db9ec823/embedde
   1c0c0:	72672d64 69687061 302d7363 322e352e     d-graphics-0.5.2
   1c0d0:	6372732f 6972702f 6974696d 2f736576     /src/primitives/
   1c0e0:	74636572 6c676e61 73722e65 0001c07c     rectangle.rs|...
   1c0f0:	00000070 000000c0 00000032 00000000     p.......2.......

0001c100 <str.0>:
   1c100:	65747461 2074706d 61206f74 77206464     attempt to add w
   1c110:	20687469 7265766f 776f6c66 0001c07c     ith overflow|...
   1c120:	00000070 000000c2 00000031 00000000     p.......1.......

0001c130 <str.1>:
   1c130:	65747461 2074706d 73206f74 72746275     attempt to subtr
   1c140:	20746361 68746977 65766f20 6f6c6672     act with overflo
   1c150:	00000077 0001c07c 00000070 000000c4     w...|...p.......
   1c160:	00000031 0001c07c 00000070 000000c6     1...|...p.......
   1c170:	00000031 65707845 64657463 72747320     1...Expected str
   1c180:	00656b6f 0001c07c 00000070 000000cc     oke.|...p.......
   1c190:	00000019 0001c07c 00000070 000000d5     ....|...p.......
   1c1a0:	0000000d 0001c07c 00000070 000000da     ....|...p.......
   1c1b0:	00000011 6573552f 4c2f7372 79707075     ..../Users/Luppy
   1c1c0:	61632e2f 2f6f6772 69676572 79727473     /.cargo/registry
   1c1d0:	6372732f 7469672f 2e627568 2d6d6f63     /src/github.com-
   1c1e0:	63636531 39393236 65396264 33323863     1ecc6299db9ec823
   1c1f0:	626d652f 65646465 72672d64 69687061     /embedded-graphi
   1c200:	302d7363 322e352e 6372732f 6e6f662f     cs-0.5.2/src/fon
   1c210:	662f7374 5f746e6f 6c697562 2e726564     ts/font_builder.
   1c220:	00007372 0001c1b4 0000006e 000000c9     rs......n.......
   1c230:	0000001a 00000000 00000000 00000000     ................

0001c240 <str.0>:
   1c240:	65747461 2074706d 6d206f74 69746c75     attempt to multi
   1c250:	20796c70 68746977 65766f20 6f6c6672     ply with overflo
   1c260:	00000077 0001c1b4 0000006e 000000c9     w.......n.......
   1c270:	0000000c 00000000 00000000 00000000     ................

0001c280 <str.1>:
   1c280:	65747461 2074706d 61206f74 77206464     attempt to add w
   1c290:	20687469 7265766f 776f6c66 0001c1b4     ith overflow....
   1c2a0:	0000006e 000000ca 00000010 0001c1b4     n...............
   1c2b0:	0000006e 000000d6 0000001b 00000000     n...............

0001c2c0 <str.2>:
   1c2c0:	65747461 2074706d 64206f74 64697669     attempt to divid
   1c2d0:	79622065 72657a20 0000006f 0001c1b4     e by zero.......
   1c2e0:	0000006e 000000d9 0000002d 0001c1b4     n.......-.......
   1c2f0:	0000006e 000000d9 0000001e 00000000     n...............

0001c300 <str.3>:
   1c300:	65747461 2074706d 73206f74 72746275     attempt to subtr
   1c310:	20746361 68746977 65766f20 6f6c6672     act with overflo
   1c320:	00000077 0001c1b4 0000006e 000000da     w.......n.......
   1c330:	0000001e 0001c1b4 0000006e 000000e2     ........n.......
   1c340:	00000017 0001c1b4 0000006e 000000e1     ........n.......
   1c350:	00000028 0001c1b4 0000006e 000000e4     (.......n.......
   1c360:	00000017 0001c1b4 0000006e 000000e7     ........n.......
   1c370:	00000022 30c00000 0f0c30c3 c0033c00     "......0.0...<..
   1c380:	00000303 00000000 00000000 3fc0003f     ............?..?
   1c390:	0f03f003 fc0f0ffc 00f0033f 00030000     ........?.......
   1c3a0:	f003c000 fff0033f 0ffcf003 f0c3fffc     ....?...........
   1c3b0:	30c00000 0f0c30c3 c0033c00 00000303     ...0.0...<......
	...
   1c3c8:	3fc0003f 0f03f003 fc0f0ffc 00f0033f     ?..?........?...
   1c3d8:	00030000 f003c000 fff0033f 0ffcf003     ........?.......
   1c3e8:	f0c3fffc 30c00000 cf3f30c3 c000c30c     .......0.0?.....
   1c3f8:	33c0000c 0000c000 0c000000 c0c0c3c0     ...3............
   1c408:	0c0f0ccc 0c003000 3c0cccc0 000c0000     .....0.....<....
   1c418:	0c0c3000 c00cccc0 0cc30ccc 0c0cc000     .0..............
   1c428:	30c00000 cf3f30c3 c000c30c 33c0000c     ...0.0?........3
   1c438:	0000c000 0c000000 c0c0c3c0 0c0f0ccc     ................
   1c448:	0c003000 3c0cccc0 000c0000 0c0c3000     .0.....<.....0..
   1c458:	c00cccc0 0cc30ccc 0c0cc000 30c00000     ...............0
   1c468:	00ccfccf 0003cc30 0c300030 0000c000     ....0...0.0.....
   1c478:	30000000 00c0c0c3 0f330cc0 3000c0f0     ...0......3....0
   1c488:	3c0cccc0 0f30c003 0c000cfc c00ccc00     ...<..0.........
   1c498:	ccc000cc 000cc000 30c00000 00ccfccf     ...........0....
   1c4a8:	0003cc30 0c300030 0000c000 30000000     0...0.0........0
   1c4b8:	00c0c0c3 0f330cc0 3000c0f0 3c0cccc0     ......3....0...<
   1c4c8:	0f30c003 0c000cfc c00ccc00 ccc000cc     ..0.............
   1c4d8:	000cc000 00c00000 003f3003 000030c0     .........0?..0..
   1c4e8:	ff300030 0f00fccf c00000fc 0fc0c0cc     0.0.............
   1c4f8:	00c3f000 c000ff0c 00fc033f 00c0c003     ........?.......
   1c508:	30000300 fffccf3c cfc0000c 000cfff0     ...0<...........
   1c518:	00c00000 003f3003 000030c0 ff300030     .....0?..0..0.0.
   1c528:	0f00fccf c00000fc 0fc0c0cc 00c3f000     ................
   1c538:	c000ff0c 00fc033f 00c0c003 30000300     ....?..........0
   1c548:	fffccf3c cfc0000c 000cfff0 00c00000     <...............
   1c558:	c30cfc0f 00c0cc00 0c300030 0000c000     ........0.0.....
   1c568:	00030000 30c0c0f0 c0ff0c00 00c3c00c     .......0........
   1c578:	3c0cc0c0 0f300000 c0000cfc c00ccccc     ...<..0.........
   1c588:	ccc000cc 3c0cc000 00c00000 c30cfc0f     .......<........
   1c598:	00c0cc00 0c300030 0000c000 00030000     ....0.0.........
   1c5a8:	30c0c0f0 c0ff0c00 00c3c00c 3c0cc0c0     ...0...........<
   1c5b8:	0f300000 c0000cfc c00ccccc ccc000cc     ..0.............
   1c5c8:	3c0cc000 00000000 0cff3003 0000c33c     ...<.....0..<...
   1c5d8:	33c0000c 003cc000 000c3c00 c0c0c0c0     ...3..<..<......
   1c5e8:	0c030c0c 00c3c00c 3c30c0c0 000cc003     ..........0<....
   1c5f8:	00003000 c00ccccc 0cc30ccc 0c0cc000     .0..............
   1c608:	00000000 0cff3003 0000c33c 33c0000c     .....0..<......3
   1c618:	003cc000 000c3c00 c0c0c0c0 0c030c0c     ..<..<..........
   1c628:	00c3c00c 3c30c0c0 000cc003 00003000     ......0<.....0..
   1c638:	c00ccccc 0cc30ccc 0c0cc000 00c00000     ................
   1c648:	000c3003 00c03c3c 00000303 000c0000     .0..<<..........
   1c658:	00003c00 fff0033f 0303f0c3 00033ff0     .<..?........?..
   1c668:	00c0033f 0003c000 c000c000 ff0c0c3f     ?...........?...
   1c678:	0ffcf003 fc03c0fc 00c00000 000c3003     .............0..
   1c688:	00c03c3c 00000303 000c0000 00003c00     <<...........<..
   1c698:	fff0033f 0303f0c3 00033ff0 00c0033f     ?........?..?...
   1c6a8:	0003c000 c000c000 ff0c0c3f 0ffcf003     ........?.......
   1c6b8:	fc03c0fc 00000000 00000000 00000000     ................
   1c6c8:	00000000 00300000 00000000 00000000     ......0.........
	...
   1c6e4:	00000003 00000000 00000000 00000000     ................
	...
   1c708:	00300000 00000000 00000000 00000000     ..0.............
	...
   1c720:	00000003 00000000 00000000 00000000     ................
   1c730:	00000000 0ff0c3c0 0cc00ccc f0c3c00c     ................
   1c740:	fff003ff ccfff003 0cccc00c ff0cccc0     ................
   1c750:	0300f0c3 00000cf0 c0000030 c0000000     ........0.......
   1c760:	00000f00 03c000c0 003c000c 00000000     ..........<.....
   1c770:	0ff0c3c0 0cc00ccc f0c3c00c fff003ff     ................
   1c780:	ccfff003 0cccc00c ff0cccc0 0300f0c3     ................
   1c790:	00000cf0 c0000030 c0000000 00000f00     ....0...........
   1c7a0:	03c000c0 003c000c 00000000 03c0c0c0     ......<.........
   1c7b0:	0fc0300c 0cccc03c c00cccc0 0c0c0ccc     .0..<...........
   1c7c0:	0cccc00c 000cccc0 00c000c3 00003330     ............03..
   1c7d0:	c000000c c0000000 00c03000 000000c0     .........0......
   1c7e0:	000c000c 00000000 03c0c0c0 0fc0300c     .............0..
   1c7f0:	0cccc03c c00cccc0 0c0c0ccc 0cccc00c     <...............
   1c800:	000cccc0 00c000c3 00003330 c000000c     ........03......
   1c810:	c0000000 00c03000 000000c0 000c000c     .....0..........
   1c820:	00000000 03c0c0c0 0cc0c00c 0cccf0cc     ................
   1c830:	c00cccc0 0c0c00cc 0cccc00c 030c0c33     ............3...
   1c840:	00300003 00c0c030 cff00303 c33cf003     ..0.0.........<.
   1c850:	fc0330f0 0fc003cf 0f0c300c f003cf30     .0.......0..0...
   1c860:	03c0c0c0 0cc0c00c 0cccf0cc c00cccc0     ................
   1c870:	0c0c00cc 0cccc00c 030c0c33 00300003     ........3.....0.
   1c880:	00c0c030 cff00303 c33cf003 fc0330f0     0.........<..0..
   1c890:	0fc003cf 0f0c300c f003cf30 03c0c0ff     .....0..0.......
   1c8a0:	0cc0000f 0ccccccc ff0c0cff 0c0cf003     ................
   1c8b0:	ccccc00c 0c30030c 000c0003 00000030     ......0.....0...
   1c8c0:	f00c0000 ccc300cc 0c0cfc0c 03c0c0f0     ................
   1c8d0:	0c0cc00c 0cccf0cc 03c0c0ff 0cc0000f     ................
   1c8e0:	0ccccccc ff0c0cff 0c0cf003 ccccc00c     ................
   1c8f0:	0c30030c 000c0003 00000030 f00c0000     ..0.....0.......
   1c900:	ccc300cc 0c0cfc0c 03c0c0f0 0c0cc00c     ................
   1c910:	0cccf0cc 03c0c0c0 0cc0c00c 0cccc30c     ................
   1c920:	cccc0cc0 0c0c0c00 ccccc00c 30c00033     ............3..0
   1c930:	00030003 00000030 c0fc0300 cfc000cc     ....0...........
   1c940:	0c0c30fc 03c0c0c0 0c0c000f 0cccc00c     .0..............
   1c950:	03c0c0c0 0cc0c00c 0cccc30c cccc0cc0     ................
   1c960:	0c0c0c00 ccccc00c 30c00033 00030003     ........3..0....
   1c970:	00000030 c0fc0300 cfc000cc 0c0c30fc     0............0..
   1c980:	03c0c0c0 0c0c000f 0cccc00c c3c0c0c0     ................
   1c990:	0cc0300c 0cccc00c c3300cc0 0c0c0c0c     .0........0.....
   1c9a0:	cc0c330c c0c0c0c0 c0000003 00000030     .3..........0...
   1c9b0:	c00c0c00 ccc00ccc fc033000 03c0c0c0     .........0......
   1c9c0:	0c0cc00c 0cccc00c c3c0c0c0 0cc0300c     .............0..
   1c9d0:	0cccc00c c3300cc0 0c0c0c0c cc0c330c     ......0......3..
   1c9e0:	c0c0c0c0 c0000003 00000030 c00c0c00     ........0.......
   1c9f0:	ccc00ccc fc033000 03c0c0c0 0c0cc00c     .....0..........
   1ca00:	0cccc00c 3cf0c3c0 ccff0c0c f0c3c00c     .......<........
   1ca10:	c0cc03c0 030cf0c3 30030cf0 ffc0c0c0     ...........0....
   1ca20:	0300f0c3 000000f0 fffc0300 c33ff003     ..............?.
   1ca30:	0c0030f0 c3f0c3c0 0c3f300c f0c3c00c     .0.......0?.....
   1ca40:	3cf0c3c0 ccff0c0c f0c3c00c c0cc03c0     ...<............
   1ca50:	030cf0c3 30030cf0 ffc0c0c0 0300f0c3     .......0........
   1ca60:	000000f0 fffc0300 c33ff003 0c0030f0     ..........?..0..
   1ca70:	c3f0c3c0 0c3f300c f0c3c00c 00000000     .....0?.........
	...
   1ca9c:	fc0f0000 00000000 00000000 f0030000     ................
   1caac:	3c000000 00000000 00000000 00000000     ...<............
	...
   1cad8:	fc0f0000 00000000 00000000 f0030000     ................
   1cae8:	3c000000 00000000 00000000 00000000     ...<............
   1caf8:	00300000 00000000 00000000 030c3000     ..0..........0..
   1cb08:	c0c03c00 00f00000 000c0c0c fccfc0f0     .<..............
   1cb18:	0000003f cfff0000 00000cfc 03c00f3c     ?...........<...
   1cb28:	c03f00c0 00030000 00000000 00300000     ..?...........0.
	...
   1cb40:	030c3000 c0c03c00 00f00000 000c0c0c     .0...<..........
   1cb50:	fccfc0f0 0000003f cfff0000 00000cfc     ....?...........
   1cb60:	03c00f3c c03f00c0 00030000 00000000     <.....?.........
   1cb70:	00300000 00000000 00000000 000cc000     ..0.............
   1cb80:	0000c3c0 0000030c 030c3003 0c0c000c     .........0......
   1cb90:	00ccc000 c0c00000 c0003300 0c3000c3     .........3....0.
   1cba0:	c0c30000 000f0000 00000000 00300000     ..............0.
	...
   1cbb8:	000cc000 0000c3c0 0000030c 030c3003     .............0..
   1cbc8:	0c0c000c 00ccc000 c0c00000 c0003300     .............3..
   1cbd8:	0c3000c3 c0c30000 000f0000 cffc03ff     ..0.............
   1cbe8:	0cfcfc03 0cccc00c ff0cccc0 000cc0c0     ................
   1cbf8:	c00000c0 c000033f 000cfccf cc0c00c0     ....?...........
   1cc08:	0030c33f c0cc0000 f0030c00 00c0030c     ?.0.............
   1cc18:	c0c30c0c 00030000 cffc03ff 0cfcfc03     ................
   1cc28:	0cccc00c ff0cccc0 000cc0c0 c00000c0     ................
   1cc38:	c000033f 000cfccf cc0c00c0 0030c33f     ?...........?.0.
   1cc48:	c0cc0000 f0030c00 00c0030c c0c30c0c     ................
   1cc58:	00030000 f00cccc0 0c3000cc 0cccc00c     ..........0.....
   1cc68:	030c0c33 000c0003 c0000030 3fc00fcc     3.......0......?
   1cc78:	0300c000 fc0c0030 ffc0ccc0 c0c0f0c3     ....0...........
   1cc88:	c0000000 00300030 c03f0c0c 000300f0     ....0.0...?.....
   1cc98:	f00cccc0 0c3000cc 0cccc00c 030c0c33     ......0.....3...
   1cca8:	000c0003 c0000030 3fc00fcc 0300c000     ....0......?....
   1ccb8:	fc0c0030 ffc0ccc0 c0c0f0c3 c0000000     0...............
   1ccc8:	00300030 c03f0c0c 000300f0 c00cccc0     0.0...?.........
   1ccd8:	0c30f003 ccccc00c 0c0c0c0c 000cc000     ..0.............
   1cce8:	c00000c0 330003cc 000cfc0f cc0c00c0     .......3........
   1ccf8:	0030033f c0c300c0 00000000 00c00fff     ?.0.............
   1cd08:	c0030c0c c00f00f0 c00cccc0 0c30f003     ..............0.
   1cd18:	ccccc00c 0c0c0c0c 000cc000 c00000c0     ................
   1cd28:	330003cc 000cfc0f cc0c00c0 0030033f     ...3........?.0.
   1cd38:	c0c300c0 00000000 00c00fff c0030c0c     ................
   1cd48:	c00f00f0 c0fc03ff cc300c00 cc0c333c     ..........0.<3..
   1cd58:	30fc0333 000cc000 c00000c0 3f0cc3cc     3..0...........?
   1cd68:	0c0cc000 0c0c0030 00cc0000 c0cc00c0     ....0...........
   1cd78:	f0030000 00000000 c0030c0f 00000000     ................
   1cd88:	c0fc03ff cc300c00 cc0c333c 30fc0333     ......0.<3..3..0
   1cd98:	000cc000 c00000c0 3f0cc3cc 0c0cc000     ...........?....
   1cda8:	0c0c0030 00cc0000 c0cc00c0 f0030000     0...............
   1cdb8:	00000000 c0030c0f 00000000 c00c00c0     ................
   1cdc8:	030ff00f 30030ccc ff0cc0c0 030c30c0     .......0.....0..
   1cdd8:	c0000000 c0f00c3f 030cc0c0 fc0f00c0     ....?...........
   1cde8:	00000000 c0ff0000 00000000 00000000     ................
   1cdf8:	c003f00c 00000000 c00c00c0 030ff00f     ................
   1ce08:	30030ccc ff0cc0c0 030c30c0 c0000000     ...0.....0......
   1ce18:	c0f00c3f 030cc0c0 fc0f00c0 00000000     ?...............
   1ce28:	c0ff0000 00000000 00000000 c003f00c     ................
   1ce38:	00000000 000c00c0 00000000 00000000     ................
   1ce48:	00f00300 00000000 00000000 0000000c     ................
	...
   1ce70:	0000000c 00000c00 000c00c0 00000000     ................
   1ce80:	00000000 00f00300 00000000 00000000     ................
   1ce90:	0000000c 00000000 00000000 00000000     ................
	...
   1ceac:	0000000c 00000c00 c000003f 00f00ccc     ........?.......
   1cebc:	3c00f0c0 33cc030c c30fc000 3c00f0f0     ...<...3.......<
   1cecc:	f030030c 030c3c00 cc033f30 0c3c00f0     ..0..<..0?....<.
   1cedc:	0033cc03 000f3f00 33c0c003 00fc3c0c     ..3..?.....3.<..
   1ceec:	3c00f000 c000003f 00f00ccc 3c00f0c0     ...<?..........<
   1cefc:	33cc030c c30fc000 3c00f0f0 f030030c     ...3.......<..0.
   1cf0c:	030c3c00 cc033f30 0c3c00f0 0033cc03     .<..0?....<...3.
   1cf1c:	000f3f00 33c0c003 00fc3c0c 3c00f000     .?.....3.<.....<
   1cf2c:	c3c0ccc0 0030300c c0000c00 00300c33     .....00.....3.0.
   1cf3c:	0c3c0000 c0000c0c 0c000033 0033c000     ..<.....3.....3.
   1cf4c:	30cc3000 33c0000c 0c00300c c0c0c00c     .0.0...3.0......
   1cf5c:	0030030c 0330cc0c c0000cc0 c3c0ccc0     ..0...0.........
   1cf6c:	0030300c c0000c00 00300c33 0c3c0000     .00.....3.0...<.
   1cf7c:	c0000c0c 0c000033 0033c000 30cc3000     ....3.....3..0.0
   1cf8c:	33c0000c 0c00300c c0c0c00c 0030030c     ...3.0........0.
   1cf9c:	0330cc0c c0000cc0 cc30c3c0 00f0c00c     ..0.......0.....
   1cfac:	f0033fc0 3ff0033f 0cccf003 fccfff00     .?..?..?........
   1cfbc:	3ffccfff 033ff003 0ccc30f0 3ff0033f     ...?..?..0..?..?
   1cfcc:	033ff003 0cccc330 c00cccc0 0c3f0ccc     ..?.0.........?.
   1cfdc:	f0033f30 cc30c3c0 00f0c00c f0033fc0     0?....0......?..
   1cfec:	3ff0033f 0cccf003 fccfff00 3ffccfff     ?..?...........?
   1cffc:	033ff003 0ccc30f0 3ff0033f 033ff003     ..?..0..?..?..?.
   1d00c:	0cccc330 c00cccc0 0c3f0ccc f0033f30     0.........?.0?..
   1d01c:	33ccc0c0 c3300003 0cccc000 c00cccc0     ...3..0.........
   1d02c:	cccf0ccc 000cc000 0c000cc0 000cc000     ................
   1d03c:	0ccffcc0 c00cccc0 c0c00ccc 0cccccc0     ................
   1d04c:	c00cccc0 cf3030c3 0cc000f0 33ccc0c0     .....00........3
   1d05c:	c3300003 0cccc000 c00cccc0 cccf0ccc     ..0.............
   1d06c:	000cc000 0c000cc0 000cc000 0ccffcc0     ................
   1d07c:	c00cccc0 c0c00ccc 0cccccc0 c00cccc0     ................
   1d08c:	cf3030c3 0cc000f0 cf30033f ccf3fc0c     .00.....?.0.....
   1d09c:	fccfff00 fffccfff 0cfcfccf c00ffc00     ................
   1d0ac:	0cc00ffc 000cc000 cccc30c0 c00cccc0     .........0......
   1d0bc:	c3c00ccc 0cccf030 c00cccc0 cc30c0c0     ....0.........0.
   1d0cc:	fcc33f0c cf30033f ccf3fc0c fccfff00     .?..?.0.........
   1d0dc:	fffccfff 0cfcfccf c00ffc00 0cc00ffc     ................
   1d0ec:	000cc000 cccc30c0 c00cccc0 c3c00ccc     .....0..........
   1d0fc:	0cccf030 c00cccc0 cc30c0c0 fcc33f0c     0.........0..?..
   1d10c:	33c00c00 cc0c0c00 0cccc00c c00cccc0     ...3............
   1d11c:	0ccc0ccc 000cc00c 0c000cc0 000cc000     ................
   1d12c:	3ccc30c0 c00cccc0 ccc00ccc 0cccc00c     .0.<............
   1d13c:	c00cccc0 0c3fc0c0 0cccc00c 33c00c00     ......?........3
   1d14c:	cc0c0c00 0cccc00c c00cccc0 0ccc0ccc     ................
   1d15c:	000cc00c 0c000cc0 000cc000 3ccc30c0     .............0.<
   1d16c:	c00cccc0 ccc00ccc 0cccc00c c00cccc0     ................
   1d17c:	0c3fc0c0 0cccc00c 3f000000 c30f30c0     ..?........?.0..
   1d18c:	0cccc0f0 c00cccc0 c3cf0ccc fccffff0     ................
   1d19c:	3ffccfff 033ff003 0c0c3ff0 3ff0033f     ...?..?..?..?..?
   1d1ac:	003ff003 f0033f00 3ff0033f 0c30c000     ..?..?..?..?..0.
   1d1bc:	fcc33ff0 3f000000 c30f30c0 0cccc0f0     .?.....?.0......
   1d1cc:	c00cccc0 c3cf0ccc fccffff0 3ffccfff     ...............?
   1d1dc:	033ff003 0c0c3ff0 3ff0033f 003ff003     ..?..?..?..?..?.
   1d1ec:	f0033f00 3ff0033f 0c30c000 fcc33ff0     .?..?..?..0..?..
   1d1fc:	03000000 c000fc00 00000000 00000000     ................
   1d20c:	00000000 000000c0 00000000 00000000     ................
	...
   1d230:	0cfc0000 00000000 03000000 c000fc00     ................
	...
   1d24c:	000000c0 00000000 00000000 00000000     ................
	...
   1d26c:	0cfc0000 00000000 33cc033f 0000c000     ........?..3....
   1d27c:	3c00f000 f030033f 033f3c00 cc03cc30     ...<?.0..<?.0...
   1d28c:	3f3c00f0 0033cc03 3c000000 33f003f0     ..<?..3....<...3
   1d29c:	033c3c00 00000030 00000000 00000000     .<<.0...........
   1d2ac:	00000000 33cc033f 0000c000 3c00f000     ....?..3.......<
   1d2bc:	f030033f 033f3c00 cc03cc30 3f3c00f0     ?.0..<?.0.....<?
   1d2cc:	0033cc03 3c000000 33f003f0 033c3c00     ..3....<...3.<<.
   1d2dc:	00000030 00000000 00000000 00000000     0...............
   1d2ec:	0030ccc0 00000000 c0000c00 0c00c0c0     ..0.............
   1d2fc:	c0c0c000 300c3000 c0c0000c 000030cc     .....0.0.....0..
   1d30c:	c00000c0 000c0c0c 000cc000 00000000     ................
	...
   1d328:	0030ccc0 00000000 c0000c00 0c00c0c0     ..0.............
   1d338:	c0c0c000 300c3000 c0c0000c 000030cc     .....0.0.....0..
   1d348:	c00000c0 000c0c0c 000cc000 00000000     ................
	...
   1d364:	3ff0033f 03f3f003 f0033ff0 00f0033f     ?..?.....?..?...
   1d374:	00000000 f00ccc00 3ff0033f 003ff003     ........?..?..?.
   1d384:	0c0c3f00 c00cccc0 0c0f0ccc 0000000c     .?..............
	...
   1d3a0:	3ff0033f 03f3f003 f0033ff0 00f0033f     ?..?.....?..?...
   1d3b0:	00000000 f00ccc00 3ff0033f 003ff003     ........?..?..?.
   1d3c0:	0c0c3f00 c00cccc0 0c0f0ccc 0000000c     .?..............
	...
   1d3dc:	000cc000 cc0c0cc0 0cccc000 3c0cccc0     ...............<
   1d3ec:	033cc003 0c0f03c0 c00cccc0 cfc00ccc     ..<.............
   1d3fc:	0cccc3fc c00cccc0 cc0c0ccc 0000000c     ................
	...
   1d418:	000cc000 cc0c0cc0 0cccc000 3c0cccc0     ...............<
   1d428:	033cc003 0c0f03c0 c00cccc0 cfc00ccc     ..<.............
   1d438:	0cccc3fc c00cccc0 cc0c0ccc 0000000c     ................
	...
   1d454:	3ffcc33f cc3ffcc3 fccfff00 0cfccfff     ?..?..?.........
   1d464:	000cc000 0ccc3fc0 c00cccc0 c0c00ccc     .....?..........
   1d474:	0ccccc00 c00cccc0 0c0f0ccc 0000000c     ................
	...
   1d490:	3ffcc33f cc3ffcc3 fccfff00 0cfccfff     ?..?..?.........
   1d4a0:	000cc000 0ccc3fc0 c00cccc0 c0c00ccc     .....?..........
   1d4b0:	0ccccc00 c00cccc0 0c0f0ccc 0000000c     ................
	...
   1d4cc:	c00cccc0 0ccc0ccc 000cc00c 0c000cc0     ................
   1d4dc:	000cc000 0cccc0c0 c00cccc0 c0c00ccc     ................
   1d4ec:	3cccf0c0 c33cccc3 030cfcc3 000000fc     ...<..<.........
	...
   1d508:	c00cccc0 0ccc0ccc 000cc00c 0c000cc0     ................
   1d518:	000cc000 0cccc0c0 c00cccc0 c0c00ccc     ................
   1d528:	3cccf0c0 c33cccc3 030cfcc3 000000fc     ...<..<.........
	...
   1d544:	3ffcc33f c333fcc3 f0033ff0 3ff0033f     ?..?..3..?..?..?
   1d554:	033ff003 0c0c3ff0 3ff0033f 003ff003     ..?..?..?..?..?.
   1d564:	cc033f00 3cccc33c 003f0cc0 0000000c     .?..<..<..?.....
	...
   1d580:	3ffcc33f c333fcc3 f0033ff0 3ff0033f     ?..?..3..?..?..?
   1d590:	033ff003 0c0c3ff0 3ff0033f 003ff003     ..?..?..?..?..?.
   1d5a0:	cc033f00 3cccc33c 003f0cc0 0000000c     .?..<..<..?.....
	...
   1d5c4:	000000c0 00000000 00000000 00000000     ................
	...
   1d5e4:	0300f003 000000f0 00000000 00000000     ................
	...
   1d600:	000000c0 00000000 00000000 00000000     ................
	...
   1d620:	0300f003 000000f0 00000000 00000000     ................
   1d630:	00000000 0001c1b4 0000006e 000000e9     ........n.......
   1d640:	00000020 0001c1b4 0000006e 000000e9      .......n.......
   1d650:	00000049 00000000 00000000 00000000     I...............

0001d660 <str.4>:
   1d660:	65747461 2074706d 73206f74 74666968     attempt to shift
   1d670:	66656c20 69772074 6f206874 66726576      left with overf
   1d680:	00776f6c 0001c1b4 0000006e 000000f0     low.....n.......
   1d690:	00000017 0001c1b4 0000006e 000000ef     ........n.......
   1d6a0:	00000019 0001c1b4 0000006e 000000f2     ........n.......
   1d6b0:	00000019 0001c1b4 0000006e 000000f4     ........n.......
   1d6c0:	00000011 0001c1b4 0000006e 000000f8     ........n.......
   1d6d0:	00000015 0001c1b4 0000006e 000000fd     ........n.......
   1d6e0:	00000019 74737572 6569702f 6d652d74     ....rust/piet-em
   1d6f0:	64646562 702f6465 2d746569 65626d65     bedded/piet-embe
   1d700:	64656464 6172672d 63696870 72732f73     dded-graphics/sr
   1d710:	69642f63 616c7073 73722e79 0001d6e4     c/display.rs....
   1d720:	00000038 00000080 00000005 20697073     8...........spi 
   1d730:	73756c66 61662068 552f6c69 73726573     flush fail/Users
   1d740:	70754c2f 502f7970 54656e69 2f656d69     /Luppy/PineTime/
   1d750:	656e6970 656d6974 7375722d 796d2d74     pinetime-rust-my
   1d760:	7477656e 7375722f 74732f74 35333737     newt/rust/st7735
   1d770:	64636c2d 7461622d 722d6863 72732f73     -lcd-batch-rs/sr
   1d780:	696c2f63 73722e62 0001d73a 0000004e     c/lib.rs:...N...
   1d790:	000000fe 00000009 20697073 61746164     ........spi data
   1d7a0:	69616620 0000006c 0001d73a 0000004e      fail...:...N...
   1d7b0:	000000b0 00000009 0001d73a 0000004e     ........:...N...
   1d7c0:	000000f3 00000009 0001d73a 0000004e     ........:...N...
   1d7d0:	00000098 0000000d 20697073 20646d63     ........spi cmd 
   1d7e0:	6c696166 0001d73a 0000004e 00000097     fail:...N.......
   1d7f0:	00000009 0001d73a 0000004e 0000009d     ....:...N.......
   1d800:	00000011 0001d73a 0000004e 0000009c     ....:...N.......
   1d810:	0000000d 0001d73a 0000004e 000000c5     ....:...N.......
   1d820:	0000002d 0001d73a 0000004e 000000c9     -...:...N.......
   1d830:	0000002d 0001d73a 0000004e 000000d8     -...:...N.......
   1d840:	00000019 00000000 00000000 00000000     ................

0001d850 <str.0>:
   1d850:	65747461 2074706d 61206f74 77206464     attempt to add w
   1d860:	20687469 7265766f 776f6c66 0001d73a     ith overflow:...
   1d870:	0000004e 000000d9 00000019 0001d73a     N...........:...
   1d880:	0000004e 000000db 00000019 0001d73a     N...........:...
   1d890:	0000004e 000000dc 00000019 20697073     N...........spi 
   1d8a0:	74696e69 69616620 0000006c 0001d73a     init fail...:...
   1d8b0:	0000004e 00000066 00000009 002d2c01     N...f........,-.
   1d8c0:	0001d8bc 012d2c01 00002d2c 0001d8c4     .....,-.,-......
   1d8d0:	00000007 0001d8d0 008402a2 0001d8d8     ................
   1d8e0:	000000c5 0001d8e0 0000000a 0001d8e8     ................
   1d8f0:	00002a8a 0001d8f0 0000ee8a 0001d8f8     .*..............
   1d900:	0000000e 0001d900 00000000 0001d908     ................
   1d910:	00000008 0001d910 00000005 0001d918     ................
   1d920:	0001d73a 0000004e 00000088 00000009     :...N...........
   1d930:	6576656e 73552f72 2f737265 7070754c     never/Users/Lupp
   1d940:	69502f79 6954656e 702f656d 74656e69     y/PineTime/pinet
   1d950:	2d656d69 74737572 6e796d2d 2f747765     ime-rust-mynewt/
   1d960:	74737572 6569702f 6d652d74 64646562     rust/piet-embedd
   1d970:	702f6465 2d746569 65626d65 64656464     ed/piet-embedded
   1d980:	6172672d 63696870 72732f73 61622f63     -graphics/src/ba
   1d990:	2e686374 00007372 0001d935 00000061     tch.rs..5...a...
   1d9a0:	000000be 00000019 0001d935 00000061     ........5...a...
   1d9b0:	000000c3 0000001d 00000000 00000000     ................

0001d9c0 <str.0>:
   1d9c0:	65747461 2074706d 61206f74 77206464     attempt to add w
   1d9d0:	20687469 7265766f 776f6c66 0001d935     ith overflow5...
   1d9e0:	00000061 000000d5 00000015 0001d935     a...........5...
   1d9f0:	00000061 00000104 00000019 0001d935     a...........5...
   1da00:	00000061 00000109 0000001d 0001d935     a...........5...
   1da10:	00000061 0000011d 00000015 0000f781     a...............
   1da20:	00000004 00000004 00010509 6576656e     ............neve
   1da30:	73552f72 2f737265 7070754c 69502f79     r/Users/Luppy/Pi
   1da40:	6954656e 702f656d 74656e69 2d656d69     neTime/pinetime-
   1da50:	74737572 6e796d2d 2f747765 74737572     rust-mynewt/rust
   1da60:	6569702f 6d652d74 64646562 702f6465     /piet-embedded/p
   1da70:	2d746569 65626d65 64656464 6172672d     iet-embedded-gra
   1da80:	63696870 72732f73 61622f63 2e686374     phics/src/batch.
   1da90:	00007372 0001da31 00000061 000000be     rs..1...a.......
   1daa0:	00000019 0001da31 00000061 000000c3     ....1...a.......
   1dab0:	0000001d 00000000 00000000 00000000     ................

0001dac0 <str.0>:
   1dac0:	65747461 2074706d 61206f74 77206464     attempt to add w
   1dad0:	20687469 7265766f 776f6c66 0001da31     ith overflow1...
   1dae0:	00000061 000000d5 00000015 0001da31     a...........1...
   1daf0:	00000061 00000104 00000019 0001da31     a...........1...
   1db00:	00000061 00000109 0000001d 0001da31     a...........1...
   1db10:	00000061 0000011d 00000015 65747461     a...........atte
   1db20:	2074706d 63206f74 74616572 6e752065     mpt to create un
   1db30:	67696c61 2064656e 6e20726f 206c6c75     aligned or null 
   1db40:	63696c73 75722f65 2f637473 66393836     slice/rustc/689f
   1db50:	31306163 31613563 32636165 30343264     ca01c5a1eac2d240
   1db60:	38306662 32376161 31373138 66383261     bf08aa728171a28f
   1db70:	35383232 6372732f 62696c2f 65726f63     2285/src/libcore
   1db80:	63616d2f 2f736f72 2e646f6d 00007372     /macros/mod.rs..
   1db90:	0001db45 00000049 0000000a 00000009     E...I...........
   1dba0:	65747461 2074706d 63206f74 74616572     attempt to creat
   1dbb0:	6c732065 20656369 65766f63 676e6972     e slice covering
   1dbc0:	20746120 7361656c 61682074 7420666c      at least half t
   1dbd0:	61206568 65726464 73207373 65636170     he address space
   1dbe0:	00697073 0001b38c 65737361 6f697472     spi.....assertio
   1dbf0:	6166206e 64656c69 2860203a 7466656c     n failed: `(left
   1dc00:	203d3d20 68676972 0a602974 656c2020      == right)`.  le
   1dc10:	203a7466 0a2c6060 67697220 203a7468     ft: ``,. right: 
   1dc20:	203a6060 0001dbe8 0000002d 0001dc15     ``: ....-.......
   1dc30:	0000000c 0001dc21 00000003 0001dc24     ....!.......$...
   1dc40:	20697073 666e6f63 66206769 006c6961     spi config fail.
   1dc50:	0001dc40 0000000f 0001dc50 0001dc5c     @.......P...\...
   1dc60:	74737572 6e796d2f 2f747765 2f637273     rust/mynewt/src/
   1dc70:	2e697073 00007372 0001dc60 00000016     spi.rs..`.......
   1dc80:	00000050 0000004a 20697073 66206263     P...J...spi cb f
   1dc90:	006c6961 0001dc88 0000000b 0001dc94     ail.............
   1dca0:	0001dc60 00000016 00000057 00000005     `.......W.......
   1dcb0:	20697073 62616e65 6620656c 006c6961     spi enable fail.
   1dcc0:	0001dcb0 0000000f 0001dcc0 0001dc60     ............`...
   1dcd0:	00000016 0000005a 00000037 6f697067     ....Z...7...gpio
   1dce0:	69616620 0000006c 0001dcdc 00000009      fail...........
   1dcf0:	0001dce8 0001dc60 00000016 0000005b     ....`.......[...
   1dd00:	00000040 0001dc60 00000016 0000005c     @...`.......\...
   1dd10:	00000040 6575716d 66206575 006c6961     @...mqueue fail.
   1dd20:	0001dd14 0000000b 0001dd20 0001dc60     ........ ...`...
   1dd30:	00000016 00000065 00000005 206d6573     ....e.......sem 
   1dd40:	6c696166 20697073 6c696166 0001dd3c     failspi fail<...
   1dd50:	00000008 0001dd4c 0001dc60 00000016     ....L...`.......
   1dd60:	00000069 00000005 0001dc60 00000016     i.......`.......
   1dd70:	0000006d 00000005 00000000 0001dbe0     m...............
   1dd80:	00000004 0001dd78 6e657665 66207174     ....x...eventq f
   1dd90:	006c6961 0001dc60 00000016 00000081     ail.`...........
   1dda0:	00000009 65737361 6f697472 6166206e     ....assertion fa
   1ddb0:	64656c69 6e75203a 65666173 50207b20     iled: unsafe { P
   1ddc0:	49444e45 435f474e 6c2e444d 29286e65     ENDING_CMD.len()
   1ddd0:	3e207d20 00003020 0001dc60 00000016      } > 0..`.......
   1dde0:	00000097 00000005 0001dc60 00000016     ........`.......
   1ddf0:	000000a6 00000012 0001dc60 00000016     ........`.......
   1de00:	000000bf 00000035 00000000 00000000     ....5...........

0001de10 <str.0>:
   1de10:	65747461 2074706d 6d206f74 69746c75     attempt to multi
   1de20:	20796c70 68746977 65766f20 6f6c6672     ply with overflo
   1de30:	00000077 0001dc60 00000016 000000c2     w...`...........
   1de40:	0000000f 00000000 00000000 00000000     ................

0001de50 <str.1>:
   1de50:	65747461 2074706d 61206f74 77206464     attempt to add w
   1de60:	20687469 7265766f 776f6c66 20746e69     ith overflowint 
   1de70:	20697073 6c696166 0001dc60 00000016     spi fail`.......
   1de80:	000000ff 00000011 0001dc60 00000016     ........`.......
   1de90:	0000010f 00000015 00000000 00000000     ................

0001dea0 <str.2>:
   1dea0:	65747461 2074706d 73206f74 72746275     attempt to subtr
   1deb0:	20746361 68746977 65766f20 6f6c6672     act with overflo
   1dec0:	00000077 0001dc60 00000016 0000010d     w...`...........
   1ded0:	00000011 0001dc60 00000016 00000115     ....`...........
   1dee0:	00000011 0001dc60 00000016 00000122     ....`......."...
   1def0:	00000009 20646162 20697073 006e656c     ....bad spi len.
   1df00:	0001dc60 00000016 00000129 00000005     `.......).......
   1df10:	0001dd44 00000008 0001df10 0001dc60     D...........`...
   1df20:	00000016 0000013f 00000009 0001dc60     ....?.......`...
   1df30:	00000016 00000148 00000009 0001dc60     ....H.......`...
   1df40:	00000016 0000014c 00000030 0001dc60     ....L...0...`...
   1df50:	00000016 00000158 00000005 0001dc60     ....X.......`...
   1df60:	00000016 0000015d 00000017 6573552f     ....]......./Use
   1df70:	4c2f7372 79707075 61632e2f 2f6f6772     rs/Luppy/.cargo/
   1df80:	69676572 79727473 6372732f 7469672f     registry/src/git
   1df90:	2e627568 2d6d6f63 63636531 39393236     hub.com-1ecc6299
   1dfa0:	65396264 33323863 6165682f 73656c70     db9ec823/heaples
   1dfb0:	2e302d73 2f312e35 2f637273 2e636576     s-0.5.1/src/vec.
   1dfc0:	00007372 0001df6c 00000056 000001e8     rs..l...V.......
   1dfd0:	0000000d 00000000 00000000 00000000     ................

0001dfe0 <str.0>:
   1dfe0:	65747461 2074706d 61206f74 77206464     attempt to add w
   1dff0:	20687469 7265766f 776f6c66 65747461     ith overflowatte
   1e000:	2074706d 63206f74 74616572 6e752065     mpt to create un
   1e010:	67696c61 2064656e 6e20726f 206c6c75     aligned or null 
   1e020:	63696c73 75722f65 2f637473 66393836     slice/rustc/689f
   1e030:	31306163 31613563 32636165 30343264     ca01c5a1eac2d240
   1e040:	38306662 32376161 31373138 66383261     bf08aa728171a28f
   1e050:	35383232 6372732f 62696c2f 65726f63     2285/src/libcore
   1e060:	63616d2f 2f736f72 2e646f6d 00007372     /macros/mod.rs..
   1e070:	0001e025 00000049 0000000a 00000009     %...I...........
   1e080:	65747461 2074706d 63206f74 74616572     attempt to creat
   1e090:	6c732065 20656369 65766f63 676e6972     e slice covering
   1e0a0:	20746120 7361656c 61682074 7420666c      at least half t
   1e0b0:	61206568 65726464 73207373 65636170     he address space
   1e0c0:	6576656e 73757272 69702f74 652d7465     neverrust/piet-e
   1e0d0:	6465626d 2f646564 74656970 626d652d     mbedded/piet-emb
   1e0e0:	65646465 72672d64 69687061 732f7363     edded-graphics/s
   1e0f0:	622f6372 68637461 0073722e 0001e0c5     rc/batch.rs.....
   1e100:	00000036 000000be 00000019 0001e0c5     6...............
   1e110:	00000036 000000c3 0000001d 00000000     6...............

0001e120 <str.0>:
   1e120:	65747461 2074706d 61206f74 77206464     attempt to add w
   1e130:	20687469 7265766f 776f6c66 0001e0c5     ith overflow....
   1e140:	00000036 000000d5 00000015 0001e0c5     6...............
   1e150:	00000036 00000104 00000019 0001e0c5     6...............
   1e160:	00000036 00000109 0000001d 0001e0c5     6...............
   1e170:	00000036 0000011d 00000015 6573552f     6.........../Use
   1e180:	4c2f7372 79707075 61632e2f 2f6f6772     rs/Luppy/.cargo/
   1e190:	69676572 79727473 6372732f 7469672f     registry/src/git
   1e1a0:	2e627568 2d6d6f63 63636531 39393236     hub.com-1ecc6299
   1e1b0:	65396264 33323863 6165682f 73656c70     db9ec823/heaples
   1e1c0:	2e302d73 2f312e35 2f637273 2e636576     s-0.5.1/src/vec.
   1e1d0:	00007372 00000000 00000000 00000000     rs..............

0001e1e0 <str.0>:
   1e1e0:	65747461 2074706d 73206f74 72746275     attempt to subtr
   1e1f0:	20746361 68746977 65766f20 6f6c6672     act with overflo
   1e200:	00000077 0001e17c 00000056 00000066     w...|...V...f...
   1e210:	00000009 00000000 00000000 00000000     ................

0001e220 <str.1>:
   1e220:	65747461 2074706d 61206f74 77206464     attempt to add w
   1e230:	20687469 7265766f 776f6c66 0001e17c     ith overflow|...
   1e240:	00000056 0000003e 0000000c 0001e17c     V...>.......|...
   1e250:	00000056 0000002d 00000009 0001e17c     V...-.......|...
   1e260:	00000056 0000007e 00000011 65747461     V...~.......atte
   1e270:	2074706d 63206f74 2079706f 6d6f7266     mpt to copy from
   1e280:	616e7520 6e67696c 6f206465 756e2072      unaligned or nu
   1e290:	70206c6c 746e696f 722f7265 63747375     ll pointer/rustc
   1e2a0:	3938362f 30616366 61356331 63616531     /689fca01c5a1eac
   1e2b0:	34326432 30666230 37616138 37313832     2d240bf08aa72817
   1e2c0:	38326131 38323266 72732f35 696c2f63     1a28f2285/src/li
   1e2d0:	726f6362 616d2f65 736f7263 646f6d2f     bcore/macros/mod
   1e2e0:	0073722e 0001e29a 00000049 0000000a     .rs.....I.......
   1e2f0:	00000009 65747461 2074706d 63206f74     ....attempt to c
   1e300:	2079706f 75206f74 696c616e 64656e67     opy to unaligned
   1e310:	20726f20 6c6c756e 696f7020 7265746e      or null pointer
   1e320:	65747461 2074706d 63206f74 2079706f     attempt to copy 
   1e330:	6f206f74 6c726576 69707061 6d20676e     to overlapping m
   1e340:	726f6d65 75722f79 2f637473 66393836     emory/rustc/689f
   1e350:	31306163 31613563 32636165 30343264     ca01c5a1eac2d240
   1e360:	38306662 32376161 31373138 66383261     bf08aa728171a28f
   1e370:	35383232 6372732f 62696c2f 65726f63     2285/src/libcore
   1e380:	746e692f 736e6972 2e736369 00007372     /intrinsics.rs..
   1e390:	0001e345 00000049 00000589 00000017     E...I...........

0001e3a0 <str.0>:
   1e3a0:	65747461 2074706d 63206f74 75636c61     attempt to calcu
   1e3b0:	6574616c 65687420 6d657220 646e6961     late the remaind
   1e3c0:	77207265 20687469 69642061 6f736976     er with a diviso
   1e3d0:	666f2072 72657a20 0000006f 0001e345     r of zero...E...
   1e3e0:	00000049 00000591 00000010 6573552f     I.........../Use
   1e3f0:	4c2f7372 79707075 61632e2f 2f6f6772     rs/Luppy/.cargo/
   1e400:	69676572 79727473 6372732f 7469672f     registry/src/git
   1e410:	2e627568 2d6d6f63 63636531 39393236     hub.com-1ecc6299
   1e420:	65396264 33323863 6165682f 73656c70     db9ec823/heaples
   1e430:	2e302d73 2f312e35 2f637273 2e636576     s-0.5.1/src/vec.
   1e440:	00007372 0001e3ec 00000056 00000066     rs......V...f...
   1e450:	00000009 00000000 00000000 00000000     ................

0001e460 <str.0>:
   1e460:	65747461 2074706d 61206f74 77206464     attempt to add w
   1e470:	20687469 7265766f 776f6c66 0001e3ec     ith overflow....
   1e480:	00000056 0000003e 0000000c 0001e3ec     V...>...........
   1e490:	00000056 0000007e 00000011 00000000     V...~...........

0001e4a0 <str.1>:
   1e4a0:	65747461 2074706d 73206f74 72746275     attempt to subtr
   1e4b0:	20746361 68746977 65766f20 6f6c6672     act with overflo
   1e4c0:	00000077 2f637273 6362696c 2f65726f     w...src/libcore/
   1e4d0:	2f6d756e 32636564 2f746c66 66776172     num/dec2flt/rawf
   1e4e0:	73722e70 65646e69 756f2078 666f2074     p.rsindex out of
   1e4f0:	756f6220 3a73646e 65687420 6e656c20      bounds: the len
   1e500:	20736920 2f637273 6362696c 2f65726f      is src/libcore/
   1e510:	63696e75 2f65646f 6e697270 6c626174     unicode/printabl
   1e520:	73722e65 002e2e60 0001e525 00000002     e.rs`...%.......
   1e530:	65726c61 20796461 72726f62 6465776f     already borrowed
   1e540:	68772029 73206e65 6963696c 6020676e     ) when slicing `
   1e550:	72616843 46797254 456d6f72 726f7272     CharTryFromError
   1e560:	6f636544 74556564 45363166 726f7272     DecodeUtf16Error

0001e570 <_ZN4core7unicode12unicode_data2cc19BITSET_INDEX_CHUNKS17h59d4bb37591626e5E>:
   1e570:	00010201 00000000 00000000 00000000     ................
   1e580:	72657469 20202020 2e2e202c 65757274     iter    , ..true
   1e590:	72657449 203d3c20 61746164 646e696b     Iter <= datakind
   1e5a0:	746e616d 73756c70 6f72655a 79706f43     mantplusZeroCopy
   1e5b0:	7373654c 65646f63 65707954 656e6f44     LesscodeTypeDone
   1e5c0:	72616843 6b636142 68746f42 6d657449     CharBackBothItem
   1e5d0:	656c6966 656e696c 7466654c 6c696174     filelineLefttail
   1e5e0:	656b6177 706f7264 32783875 32783869     wakedropu8x2i8x2
   1e5f0:	34783875 34783869 38783875 38783869     u8x4i8x4u8x8i8x8
   1e600:	6c6c6163 60206465 6974704f 3a3a6e6f     called `Option::
   1e610:	72776e75 29287061 6e6f2060 60206120     unwrap()` on a `
   1e620:	656e6f4e 61762060 0065756c 0001e4c4     None` value.....
   1e630:	00000000 0000203a 0001e4c4 00000000     ....: ..........
   1e640:	0001e634 00000002 00014997 00000000     4........I......
   1e650:	00000001 000149e7 74756220 65687420     .....I.. but the
   1e660:	646e6920 69207865 00002073 0001e4e4      index is ......
   1e670:	00000020 0001e658 00000012 00014995      ...X........I..
   1e680:	0000000c 00000004 00014c31 00014ecb     ........1L...N..
   1e690:	00014f69 202c0a2c 2c280a28 30783029     iO..,., (.(,)0x0
   1e6a0:	30313030 30333032 30353034 30373036     0010203040506070
   1e6b0:	31393038 31313130 31333132 31353134     8091011121314151
   1e6c0:	31373136 32393138 32313230 32333232     6171819202122232
   1e6d0:	32353234 32373236 33393238 33313330     4252627282930313
   1e6e0:	33333332 33353334 33373336 34393338     2333435363738394
   1e6f0:	34313430 34333432 34353434 34373436     0414243444546474
   1e700:	35393438 35313530 35333532 35353534     8495051525354555
   1e710:	35373536 36393538 36313630 36333632     6575859606162636
   1e720:	36353634 36373636 37393638 37313730     4656667686970717
   1e730:	37333732 37353734 37373736 38393738     2737475767778798
   1e740:	38313830 38333832 38353834 38373836     0818283848586878
   1e750:	39393838 39313930 39333932 39353934     8899091929394959
   1e760:	39373936 00393938 00014b0d 00000004     6979899..K......
   1e770:	00000004 00014f8d 00014f93 00014f99     .....O...O...O..
   1e780:	2f637273 6362696c 2f65726f 2f746d66     src/libcore/fmt/
   1e790:	2e646f6d 00007372 0001e780 00000016     mod.rs..........
   1e7a0:	00000473 00000028 0001e780 00000016     s...(...........
   1e7b0:	00000472 00000028 0001e780 00000016     r...(...........
   1e7c0:	0000047e 00000028 2f637273 6362696c     ~...(...src/libc
   1e7d0:	2f65726f 63696c73 6f6d2f65 73722e64     ore/slice/mod.rs
   1e7e0:	65646e69 6f202078 6f207475 61722066     index  out of ra
   1e7f0:	2065676e 20726f66 63696c73 666f2065     nge for slice of
   1e800:	6e656c20 20687467 0001e7e0 00000006      length ........
   1e810:	0001e7e6 00000022 0001e7c8 00000018     ...."...........
   1e820:	00000a72 00000005 63696c73 6e692065     r.......slice in
   1e830:	20786564 72617473 61207374 62202074     dex starts at  b
   1e840:	65207475 2073646e 00207461 0001e828     ut ends at .(...
   1e850:	00000016 0001e83e 0000000d 0001e7c8     ....>...........
   1e860:	00000018 00000a78 00000005 696e6966     ....x.......fini
   1e870:	64656873 73796168 6b636174 79622820     shedhaystack (by
   1e880:	20736574 6167654e 65766974 69736f50     tes NegativePosi
   1e890:	65766974 65746e69 6c617267 61706e55     tiveintegralUnpa
   1e8a0:	64656b63 69666e49 6574696e 756e694d     ckedInfiniteMinu
   1e8b0:	77615273 7265764f 776f6c66 6b636162     sRawOverflowback
   1e8c0:	72657469 6f746e49 72657449 61636f6c     iterIntoIterloca
   1e8d0:	6e6f6974 61636f4c 6e6f6974 72616573     tionLocationsear
   1e8e0:	72656863 69736f70 6e6f6974 74697263     cherpositioncrit
   1e8f0:	736f705f 656e694c 796e4173 57776152     _posLinesAnyRawW
   1e900:	72656b61 6f6c6c41 72724563 38746e69     akerAllocErrint8
   1e910:	745f3478 2f637273 6362696c 2f65726f     x4_tsrc/libcore/
   1e920:	2f727473 2e646f6d 2e5b7372 625d2e2e     str/mod.rs[...]b
   1e930:	20657479 65646e69 69202078 756f2073     yte index  is ou
   1e940:	666f2074 756f6220 2073646e 6020666f     t of bounds of `
   1e950:	0001e92f 0000000b 0001e93a 00000016     /.......:.......
   1e960:	0001e524 00000001 0001e914 00000016     $...............
   1e970:	00000853 00000009 69676562 3d3c206e     S.......begin <=
   1e980:	646e6520 00002820 0001e978 0000000e      end (..x.......
   1e990:	0001e594 00000004 0001e540 00000010     ........@.......
   1e9a0:	0001e524 00000001 0001e914 00000016     $...............
   1e9b0:	00000857 00000005 0001e914 00000016     W...............
   1e9c0:	00000868 0000000e 20736920 20746f6e     h....... is not 
   1e9d0:	68632061 62207261 646e756f 3b797261     a char boundary;
   1e9e0:	20746920 69207369 6469736e 20292065      it is inside ) 
   1e9f0:	6020666f 0001e92f 0000000b 0001e9c8     of `/...........
   1ea00:	00000026 0001e87c 00000008 0001e9ee     &...|...........
   1ea10:	00000006 0001e524 00000001 0001e914     ....$...........
   1ea20:	00000016 0000086a 00000005 0001e504     ....j...........
   1ea30:	00000020 0000001a 00000028 05030100      .......(.......
   1ea40:	03060605 08080607 1c0a1109 140c190b     ................
   1ea50:	0d0e120d 0310040f 09131212 05170116     ................
   1ea60:	03190218 021c071a 161f011d 042b0320     ............ .+.
   1ea70:	0b2d022c 0330012e 01320231 02a902a7     ,.-...0.1.2.....
   1ea80:	08ab04aa 05fb02fa 03fe04fd 78ad09ff     ...............x
   1ea90:	a28d8b79 8b585730 1d1c908c 4b0f0edd     y...0WX........K
   1eaa0:	2efcfb4c 5d5c3f2f 84e2b55f 92918e8d     L.../?\]_.......
   1eab0:	bbbab1a9 cac9c6c5 ffe5e4de 12110400     ................
   1eac0:	37343129 493d3b3a 8e845d4a b4b1a992     )147:;=IJ]......
   1ead0:	cac6bbba e5e4cfce 0e0d0400 31291211     ..............)1
   1eae0:	453b3a34 5e4a4946 91846564 cec99d9b     4:;EFIJ^de......
   1eaf0:	29110dcf 64574945 a9918d65 c5bbbab4     ...)EIWde.......
   1eb00:	e5e4dfc9 110d04f0 65644945 b2848180     ........EIde....
   1eb10:	d5bfbebc 83f1f0d7 a6a48b85 c7c5bfbe     ................
   1eb20:	dbdacfce cdbd9848 49cfcec6 59574f4e     ....H......INOWY
   1eb30:	8e895f5e b7b6b18f c7c6c1bf 171611d7     ^_..............
   1eb40:	f7f65c5b 0d80fffe dfde716d 6e1f0f0e     [\......mq.....n
   1eb50:	5f1d1c6f afae7e7d 16fabcbb 461f1e17     o.._}~.........F
   1eb60:	584f4e47 7e5e5c5a d4c5b57f f1f0dcd5     GNOXZ\^~........
   1eb70:	8f7372f5 97967574 2e265f2f b7afa72f     .rs.tu../_&./...
   1eb80:	d7cfc7bf 97409adf 1f8f3098 ffcec1c0     ......@..0......
   1eb90:	5b5a4f4e 100f0807 efee2f27 3d376f6e     NOZ[....'/..no7=
   1eba0:	9045423f 53fffe91 c9c87567 d9d8d1d0     ?BE....Sgu......
   1ebb0:	00fffee7 82225f20 448204df 06041b08     .... _"....D....
   1ebc0:	0eac8111 1e35ab80 03e08015 04010819     ......5.........
   1ebd0:	0434042f 07010307 0a110706 07120f50     /.4.........P...
   1ebe0:	04020855 03090a1c 03070308 03030302     U...............
   1ebf0:	0305040c 0e01060b 033a0515 05060711     ..........:.....
   1ec00:	07570710 0d150702 03430450 0401032d     ..W.....P.C.-...
   1ec10:	0c0f0611 251d043a 046d205f c880256a     ....:..%_ m.j%..
   1ec20:	03b08205 fd82061a 15075903 1409170b     .........Y......
   1ec30:	6a0c140c 1a060a06 2b075906 2c0a4605     ...j.....Y.+.F.,
   1ec40:	01040c04 2c0b3103 0b061a04 06ac8003     .....1.,........
   1ec50:	411f060a 032d044c 033c0874 073c030f     ...AL.-.t.<...<.
   1ec60:	052b0838 1811ff82 2d112f08 21102003     8.+....../.-. .!
   1ec70:	048c800f 0b199782 05948815 073b052f     ............/.;.
   1ec80:	09180e02 7430b080 1ad6800c ff80050c     ......0t........
   1ec90:	05b68005 c69b0c24 1030d20a 37038d84     ....$.....0....7
   1eca0:	145c8109 8008b880 043530c7 0838060a     ..\......05...8.
   1ecb0:	060c0846 031e0b74 0959045a 1c188380     F...t...Z.Y.....
   1ecc0:	4809160a 068a8008 170ca4ab 04a13104     ...H.........1..
   1ecd0:	0726da81 8005050c 6d8111a5 2a287810     ..&........m.x(*
   1ece0:	80044c06 be80048d 0f031b03 0106000d     .L..............
   1ecf0:	04010301 09080802 0b050a02 11011002     ................
   1ed00:	13051204 15021411 19021702 1d051c04     ................
   1ed10:	6a012408 bc026b03 d402d102 d609d50c     .$.j.k..........
   1ed20:	da02d702 e105e001 ee02e802 f904f020     ............ ...
   1ed30:	0c02fa06 4e3e3b27 9e9e8f4f 0907069f     ....';>NO.......
   1ed40:	563e3d36 04d1d0f3 37361814 35bd5756     6=>V......67VW.5
   1ed50:	12e0cfce 9e8e8987 110e0d04 34312912     .............)14
   1ed60:	4946453a 644f4e4a b65c5a65 a81c1bb7     :EFIJNOdeZ\.....
   1ed70:	09d9d8a9 a8919037 3e3b0a07 928f6966     ....7.....;>fi..
   1ed80:	efee5f6f 9b9a625a 9d552827 a4a3a1a0     o_..Zb..'(U.....
   1ed90:	baada8a7 0b06c4bc 3a1d150c a651453f     ...........:?EQ.
   1eda0:	a0cdcca7 221a1907 c53f3e25 232004c6     ......."%>?... #
   1edb0:	33282625 4a483a38 5553504c 5c5a5856     %&(38:HJLPSUVXZ\
   1edc0:	6563605e 78736b66 a48a7f7d c0b0afaa     ^`cefksx}.......
   1edd0:	a3720cd0 6ecccba4 7b225e6f 2d040305     ..r....no^"{...-
   1ede0:	01046503 82802e2f 0f31031d 0924041c     .e../.....1...$.
   1edf0:	052b051e 2a0e0444 2406aa80 28042404     ..+.D..*...$.$.(
   1ee00:	010b3408 37819080 080a1609 03399880     .4.....7......9.
   1ee10:	30090863 03210516 4001051b 054b0438     c..0..!....@8.K.
   1ee20:	070a042f 20400709 090c0427 053a0336     /.....@ '...6.:.
   1ee30:	0c04071a 37495007 07330d33 810a082e     .....PI73.3.....
   1ee40:	81801f26 802a0828 4e091786 430f1e04     &...(.*....N...C
   1ee50:	0a07190e 27094706 3f0b7509 3b062a41     .....G.'.u.?A*.;
   1ee60:	51060a05 10050106 8b800503 08482060     ...Q........` H.
   1ee70:	5ea6800a 0a0b4522 39130d06 2c360a07     ...^"E.....9..6,
   1ee80:	c0801004 0c53643c 45a08001 5308481b     ....<dS....E.H.S
   1ee90:	0781391d 031d0a46 03374947 060a080e     .9..F...GI7.....
   1eea0:	810a0739 c7801936 9b830d32 800b7566     9...6...2...fu..
   1eeb0:	84bc8ac4 82d18f2f 82b9a147 042a0739     ..../...G...9.*.
   1eec0:	0a266002 05280a46 5bb08213 39044b65     .`&.F.(....[eK.9
   1eed0:	04401107 08f8971c 0da5f382 03311f81     ..@...........1.
   1eee0:	81080411 6b04898c 09030d05 60931007     .......k.......`
   1eef0:	730af680 46176e08 0c149a80 80190957     ...s.n.F....W...
   1ef00:	03478187 150f4285 802b5085 1a032dd5     ..G..B...P+..-..
   1ef10:	70810204 8501053a 29d78000 040a044c     ...p:......)L...
   1ef20:	44118302 c2803d4c 0401063c 341b0555     ...DL=..<...U..4
   1ef30:	2c0e8102 560c6404 5d030d0a 1d393d03     ...,.d.V...].=9.
   1ef40:	09042c0d 060e0207 d6839a80 0b030d0a     .,..............
   1ef50:	590c7405 0c140c07 0a083804 1e082806     .t.Y.....8...(..
   1ef60:	31037752 0ca68003 05030414 85060d03     Rw.1............
   1ef70:	6372736a 62696c2f 65726f63 696e752f     jsrc/libcore/uni
   1ef80:	65646f63 646f6d2f 0073722e 0001ef71     code/mod.rs.q...
   1ef90:	0000001a 00000038 0000000f 0001ef71     ....8.......q...
   1efa0:	0000001a 00000039 00000010              ....9.......

0001efac <_ZN4core7unicode12unicode_data15grapheme_extend17BITSET_CHUNKS_MAP17h6ed806191ee30880E>:
   1efac:	1b150f04 17120319 0e000011 00000016     ................
	...
   1efd4:	00130600 00000000 00000000 00000000     ................
   1efe4:	00000000 07020000 0c08000a 1a181c1d     ................
	...
   1f004:	01050000 00000000 00000000 00000000     ................
   1f014:	00000000 10000000 00000000 0009000b     ................
   1f024:	                                         ...

0001f027 <_ZN4core7unicode12unicode_data15grapheme_extend19BITSET_INDEX_CHUNKS17h50a3083496da4d24E>:
	...
   1f043:	00120f00 00000000 00000000 00000000     ................
   1f053:	0000001f 00000000 00000000 00000000     ................
   1f063:	1d664649 00000000 00000000 00000000     IFf.............
   1f073:	00003e8a 00000000 00000000 4b000000     .>.............K
   1f083:	00000053 00000000 00000000 42236700     S............g#B
	...
   1f09f:	0000003d 00230000 00000000 00000000     =.....#.........
   1f0af:	2d000075 00000000 00000000 00000000     u..-............
   1f0bf:	003c4e82 00000000 00000000 63000000     .N<............c
   1f0cf:	25000000 00005a00 00000000 00368100     ...%.Z........6.
   1f0df:	00000300 00000000 00000000 0000002f     ............/...
   1f0ef:	00000000 00001000 13000000 00000800     ................
	...
   1f107:	43000000 89007200 00000000 00000000     ...C.r..........
   1f117:	00070000 057d0000 37003f18 64400987     ......}..?.7..@d
   1f127:	00210000 00000000 00000000 00000000     ..!.............
   1f137:	4100000a 00000000 00000000 00000000     ...A............
   1f147:	0030000c 0000005c 00717719 44354760     ..0.\....wq.`G5D
   1f157:	7400002e 2c651139 507f5e51 34000000     ...t9.e,Q^.P...4
   1f167:	00000031 00000053 3a000000 00000000     1...S......:....
   1f177:	88001a38 696b2b5f 845d4f5d 14682a80     8..._+ki]O]..*h.
   1f187:	0017003b 00000000 00000000 00000000     ;...............
   1f197:	57000055 83000000 00000000 00000000     U..W............
   1f1a7:	00000059 26000000 00161b6e 00000000     Y......&n.......
   1f1b7:	001c4a6d 00000000 00000000 00002400     mJ...........$..
   1f1c7:	0052007c 0015067b 48000000 00000000     |.R.{......H....
   1f1d7:	2776287e 2200296c 0d610e5b 04627056     ~(v'l)."[.a.Vpb.
   1f1e7:	02782085 1e7a0000 00540179 00000033     . x...z.y.T.3...
   1f1f7:	00587386 0b6f454d 3200006a 00004c6c     .sX.MEo.j..2lL..
   1f207:	00008a89 3e8a8a8a 00000000 00000000     .......>........
	...

0001f218 <_ZN4core7unicode12unicode_data15grapheme_extend6BITSET17h82274b88c2f67256E>:
	...
   1f220:	00000001 00000000 0000000d 00000000     ................
   1f230:	0000001c 00000000 00000040 00000000     ........@.......
   1f240:	000000b6 00000000 000000bf 00000000     ................
   1f250:	000003f8 00000000 000007f0 00000000     ................
   1f260:	000007ff 00000000 00001000 00000000     ................
   1f270:	00001e00 00000000 00003800 00000000     .........8......
   1f280:	00003f00 00000000 00007f80 00000000     .?..............
   1f290:	00008000 00000000 0001ffc0 00000000     ................
   1f2a0:	0003ff80 00000000 00078000 00000000     ................
   1f2b0:	007f0000 00000000 00802001 00000000     ......... ......
   1f2c0:	00a30000 00000000 037ffc00 00000000     ................
   1f2d0:	06000000 00000000 07ff0000 00000000     ................
   1f2e0:	09800000 00000000 0e000000 00000000     ................
   1f2f0:	0e7e0080 00000000 20002064 00000000     ..~.....d . ....
   1f300:	200ffe40 00000000 30000001 00000000     @.. .......0....
   1f310:	40000000 00000000 4000005c 00000000     ...@....\..@....
   1f320:	60000000 00000000 805c8400 00000000     ...`......\.....
   1f330:	c0000000 00000000 e0000000 00000000     ................
   1f340:	00000000 00000001 0cf00000 00000001     ................
   1f350:	00603044 0000000c 00603dc1 0000000c     D0`......=`.....
   1f360:	0080201e 0000000c 00c0201e 0000000c     . ....... ......
   1f370:	00fe21fe 0000000c 00000000 00000020     .!.......... ...
   1f380:	00000000 00000060 00000844 00000060     ....`...D...`...
   1f390:	00000000 000000f0 00000060 00000200     ........`.......
   1f3a0:	f9ffff7f 000007db 80000000 000007f8     ................
   1f3b0:	e0000000 00000fbc 00000000 00002120     ............ !..
   1f3c0:	00000003 00003b3c 00000fe7 00003c00     ....<;.......<..
   1f3d0:	9fc00000 00003d9f fbc00000 00003eef     .....=.......>..
   1f3e0:	00000000 00003fc0 00000000 0000f000     .....?..........
   1f3f0:	00000000 0000fc00 f8000010 0000fffe     ................
   1f400:	0000ffff 0000ffff ffffffff 0000ffff     ................
   1f410:	fffff800 00010000 00000000 0001ffc0     ................
   1f420:	ffff0000 0001ffff 00000000 00030000     ................
   1f430:	00000000 00038000 00000000 0003a340     ............@...
   1f440:	00000000 00080000 000c0000 000c0000     ................
   1f450:	00000004 000ff800 00000000 00180000     ................
   1f460:	001c0000 001c0000 c3000000 001e0001     ................
   1f470:	00000000 001f0000 00800001 001f1fc0     ................
   1f480:	00000007 001fef80 ffffffff 00201fff     .............. .
   1f490:	00023986 00230000 00000002 00403000     .9....#......0@.
   1f4a0:	00000000 00667e00 fffc0000 006dfcff     .....~f.......m.
   1f4b0:	00000000 007f0000 00000000 00bf2800     .............(..
   1f4c0:	00000000 00cff000 03000000 02a00000     ................
   1f4d0:	fff70000 031021fd 00000003 06780000     .....!........x.
   1f4e0:	00000000 06ff8000 00000000 07c00000     ................
   1f4f0:	00000000 07f20000 00000000 0e040187     ................
   1f500:	00000006 10000000 00001008 10000000     ................
   1f510:	00000007 14000000 0000000f 17f00000     ................
   1f520:	00000000 1ff20000 feffe0df 1fffffff     ................
   1f530:	00000000 20000000 00000000 200ff800     ....... ....... 
   1f540:	00000007 33c80000 00000000 3fb00000     .......3.......?
   1f550:	00000000 3ff78000 00000004 40000000     .......?.......@
   1f560:	0080201e 4000000c 00000000 40d38000     . .....@.......@
   1f570:	00000002 50000000 00000003 58000000     .......P.......X
   1f580:	00000000 66fde000 000007fe 79f80000     .......f.......y
   1f590:	00000003 7fc00000 00000000 7ffe0000     ................
   1f5a0:	00000000 7fff0000 00000000 80000000     ................
   1f5b0:	0000007f 80000000 00000030 8003ffff     ........0.......
   1f5c0:	0000f06e 87000000 00000002 90000000     n...............
   1f5d0:	7f400000 9ff81fe5 00000000 a5f90000     ..@.............
   1f5e0:	00000000 a7f80000 00000000 b03c8000     ..............<.
   1f5f0:	00000000 b47e0000 00000000 bf7f0000     ......~.........
   1f600:	fffe0000 bfffffff 00000011 c0000000     ................
   1f610:	00000000 c19d0000 00000002 d0000000     ................
   1f620:	00000000 f807c3a0 ffffffff f87fffff     ................
   1f630:	ffffffff fbffffff 000021be fc00000c     .........!......
   1f640:	00000000 ff000000 00000002 ff000000     ................
   1f650:	00020000 ffff0000 fff80000 fffffffb     ................
   1f660:	00000000 ffffffff ffffffff ffffffff     ................
   1f670:	00000020 00006425 6c363025 00002075      ...%d..%06lu ..

0001f680 <nrf52_hal_i2cs>:
   1f680:	00000000 20000100                       ....... 

0001f688 <nrf52_hal_spis>:
   1f688:	20009d60 00000000 00000000 65737341     `.. ........Asse
   1f698:	40207472 25783020 00000a78 65737341     rt @ 0x%x...Asse
   1f6a8:	40207472 25783020 202d2078 253a7325     rt @ 0x%x - %s:%
   1f6b8:	00000a64 61686e55 656c646e 6e692064     d...Unhandled in
   1f6c8:	72726574 20747075 646c2528 65202c29     terrupt (%ld), e
   1f6d8:	70656378 6e6f6974 20707320 30257830     xception sp 0x%0
   1f6e8:	0a786c38 00000000 3a307220 30257830     8lx..... r0:0x%0
   1f6f8:	20786c38 3a317220 30257830 20786c38     8lx  r1:0x%08lx 
   1f708:	3a327220 30257830 20786c38 3a337220      r2:0x%08lx  r3:
   1f718:	30257830 0a786c38 00000000 3a347220     0x%08lx..... r4:
   1f728:	30257830 20786c38 3a357220 30257830     0x%08lx  r5:0x%0
   1f738:	20786c38 3a367220 30257830 20786c38     8lx  r6:0x%08lx 
   1f748:	3a377220 30257830 0a786c38 00000000      r7:0x%08lx.....
   1f758:	3a387220 30257830 20786c38 3a397220      r8:0x%08lx  r9:
   1f768:	30257830 20786c38 3a303172 30257830     0x%08lx r10:0x%0
   1f778:	20786c38 3a313172 30257830 0a786c38     8lx r11:0x%08lx.
   1f788:	00000000 3a323172 30257830 20786c38     ....r12:0x%08lx 
   1f798:	3a726c20 30257830 20786c38 3a637020      lr:0x%08lx  pc:
   1f7a8:	30257830 20786c38 3a727370 30257830     0x%08lx psr:0x%0
   1f7b8:	0a786c38 00000000 52534349 2578303a     8lx.....ICSR:0x%
   1f7c8:	786c3830 53464820 78303a52 6c383025     08lx HFSR:0x%08l
   1f7d8:	46432078 303a5253 38302578 000a786c     x CFSR:0x%08lx..
   1f7e8:	52414642 2578303a 786c3830 464d4d20     BFAR:0x%08lx MMF
   1f7f8:	303a5241 38302578 000a786c 6e69616d     AR:0x%08lx..main
   1f808:	00000000 656c6469 00000000 7379736d     ....idle....msys
   1f818:	0000315f                                _1..

0001f81c <MemFile_methods>:
   1f81c:	00019405 00000000                       ........

0001f824 <stdout>:
   1f824:	2000011c                                ... 

0001f828 <nrf52k_flash_dev>:
   1f828:	0001f840 00000000 00080000 00000080     @...............
   1f838:	00000001 000000ff                       ........

0001f840 <nrf52k_flash_funcs>:
   1f840:	00019671 000195a1 00019529 00019581     q.......).......
   1f850:	00000000 0001957d 00000000              ....}.......

0001f85c <nrf52_hal_timers>:
   1f85c:	20009e70 00000000 00000000 00000000     p.. ............
	...

0001f874 <hal_i2c1_cfg>:
   1f874:	00000007 00000006 00000064              ........d...

0001f880 <os_bsp_spi0m_cfg>:
   1f880:	001d0302 736e6573 6e5f726f 6669746f     ....sensor_notif
   1f890:	7476655f 00000073                       _evts...

0001f898 <COLLECTOR_NODE_HW_ID>:
   1f898:	066aff57 50547878 67242949              W.j.xxTPI)$g

0001f8a4 <SENSOR_NODE_HW_IDS>:
   1f8a4:	066dff38 3634574e 43085825 04030201     8.m.NW46%X.C....
   1f8b4:	08070605 020b0a09 04030201 08070605     ................
   1f8c4:	030b0a09 04030201 08070605 040b0a09     ................
   1f8d4:	04030201 08070605 050b0a09 77687325     ............%shw
   1f8e4:	00206469 30313025 00786c6c 646f6e20     id .%010llx. nod
   1f8f4:	00002065 65737325 726f736e 25237325     e ..%ssensor%s#%
   1f904:	00000a64 6f637325 63656c6c 25726f74     d...%scollector%
   1f914:	00000a73 74737325 61646e61 656e6f6c     s...%sstandalone
   1f924:	000a7325 2054454e 00000000 73257325     %s..NET ....%s%s
   1f934:	0a732520 00000000 00000000               %s.........

0001f940 <sensor_node_addresses>:
   1f940:	b4b5b6f1 000000b3 b4b5b6cd 000000b3     ................
   1f950:	b4b5b6a3 000000b3 b4b5b60f 000000b3     ................
   1f960:	b4b5b605 000000b3 706d6574 7574735f     ........temp_stu
   1f970:	00305f62 20504d54 61657263 25206574     b_0.TMP create %
   1f980:	00000a73                                s...

0001f984 <g_temp_stub_sensor_driver>:
   1f984:	0001a4ad 0001a3b5 00000000 00000000     ................
	...
   1f9ac:	20425453 64616572 6d657420 65732070     STB read temp se
   1f9bc:	726f736e 0000000a 635f636f 62635f6c     nsor....oc_cl_cb
   1f9cc:	00000073 725f636f 6f5f7065 00000000     s...oc_rep_o....

0001f9dc <sysflash_map_dflt>:
	...
   1f9e4:	00004000 00000001 00008000 00073c00     .@...........<..
   1f9f4:	00000002 0007bc00 00000400 00000003     ................
   1fa04:	0007c000 00001000 00000010 00004000     .............@..
   1fa14:	00004000 00000011 0007d000 00003000     .@...........0..
   1fa24:	70616f63 6365725f 65766965 544f4e20     coap_receive NOT
   1fa34:	504d4920 454d454c 4445544e 0000000a      IMPLEMENTED....

/Users/Luppy/PineTime/pinetime-rust-mynewt/bin/targets/nrf52_my_sensor/app/apps/my_sensor_app/my_sensor_app.elf:     file format elf32-littlearm

arm-none-eabi-objdump: section '.rodata' mentioned in a -j option, but not found in any input file
   text	   data	    bss	    dec	    hex	filename
  96828	    100	  40672	 137600	  21980	/Users/Luppy/PineTime/pinetime-rust-mynewt/bin/targets/nrf52_my_sensor/app/apps/my_sensor_app/my_sensor_app.elf
